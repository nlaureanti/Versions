
;; Function cldrad (cldrad_, funcdef_no=0, decl_uid=3768, cgraph_uid=0, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 353 n_edges 480 count 635 (  1.8)
scanning new insn with uid = 4750.
scanning new insn with uid = 4751.
scanning new insn with uid = 4752.
scanning new insn with uid = 4753.
scanning new insn with uid = 4754.
scanning new insn with uid = 4755.
scanning new insn with uid = 4756.
scanning new insn with uid = 4741.
scanning new insn with uid = 4742.
scanning new insn with uid = 4743.
scanning new insn with uid = 4744.
scanning new insn with uid = 4745.
scanning new insn with uid = 4746.
scanning new insn with uid = 4747.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 72.
verify found no changes in insn with uid = 128.
verify found no changes in insn with uid = 190.
verify found no changes in insn with uid = 223.
verify found no changes in insn with uid = 280.
verify found no changes in insn with uid = 297.
verify found no changes in insn with uid = 328.
verify found no changes in insn with uid = 346.
verify found no changes in insn with uid = 493.
verify found no changes in insn with uid = 502.
verify found no changes in insn with uid = 514.
verify found no changes in insn with uid = 545.
verify found no changes in insn with uid = 563.
verify found no changes in insn with uid = 579.
verify found no changes in insn with uid = 603.
verify found no changes in insn with uid = 621.
verify found no changes in insn with uid = 637.
verify found no changes in insn with uid = 661.
verify found no changes in insn with uid = 679.
verify found no changes in insn with uid = 695.
verify found no changes in insn with uid = 719.
verify found no changes in insn with uid = 830.
verify found no changes in insn with uid = 846.
verify found no changes in insn with uid = 870.
verify found no changes in insn with uid = 992.
verify found no changes in insn with uid = 1042.
verify found no changes in insn with uid = 1066.
verify found no changes in insn with uid = 1174.
verify found no changes in insn with uid = 1224.
verify found no changes in insn with uid = 1248.
verify found no changes in insn with uid = 1356.
verify found no changes in insn with uid = 1406.
verify found no changes in insn with uid = 1430.
verify found no changes in insn with uid = 1820.
verify found no changes in insn with uid = 1832.
verify found no changes in insn with uid = 1891.
verify found no changes in insn with uid = 1922.
verify found no changes in insn with uid = 1940.
verify found no changes in insn with uid = 1971.
verify found no changes in insn with uid = 2394.
verify found no changes in insn with uid = 2406.
verify found no changes in insn with uid = 2488.
verify found no changes in insn with uid = 2519.
verify found no changes in insn with uid = 2537.
verify found no changes in insn with uid = 2568.
verify found no changes in insn with uid = 2586.
verify found no changes in insn with uid = 2617.
verify found no changes in insn with uid = 2707.
verify found no changes in insn with uid = 2772.
verify found no changes in insn with uid = 2862.
verify found no changes in insn with uid = 2927.
verify found no changes in insn with uid = 3019.
verify found no changes in insn with uid = 3084.
verify found no changes in insn with uid = 3176.
verify found no changes in insn with uid = 3241.
verify found no changes in insn with uid = 3331.
verify found no changes in insn with uid = 3396.
verify found no changes in insn with uid = 3486.
verify found no changes in insn with uid = 3551.
verify found no changes in insn with uid = 3675.
verify found no changes in insn with uid = 3706.
verify found no changes in insn with uid = 3853.
verify found no changes in insn with uid = 3884.
verify found no changes in insn with uid = 4008.
verify found no changes in insn with uid = 4039.
verify found no changes in insn with uid = 4057.
verify found no changes in insn with uid = 4088.
verify found no changes in insn with uid = 4094.
verify found no changes in insn with uid = 4097.


try_optimize_cfg iteration 1

Merging block 10 into block 9...
changing bb of uid 119
  from 10 to 9
changing bb of uid 4161
  from 10 to 9
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Merging block 12 into block 11...
changing bb of uid 125
  from 12 to 11
changing bb of uid 126
  from 12 to 11
changing bb of uid 127
  from 12 to 11
changing bb of uid 128
  from 12 to 11
changing bb of uid 129
  from 12 to 11
changing bb of uid 130
  from 12 to 11
changing bb of uid 131
  from 12 to 11
Merged blocks 11 and 12.
Merged 11 and 12 without moving.
Merging block 18 into block 17...
changing bb of uid 173
  from 18 to 17
changing bb of uid 4165
  from 18 to 17
Merged blocks 17 and 18.
Merged 17 and 18 without moving.
Merging block 20 into block 19...
changing bb of uid 179
  from 20 to 19
changing bb of uid 180
  from 20 to 19
changing bb of uid 181
  from 20 to 19
changing bb of uid 182
  from 20 to 19
changing bb of uid 183
  from 20 to 19
changing bb of uid 184
  from 20 to 19
changing bb of uid 185
  from 20 to 19
changing bb of uid 186
  from 20 to 19
changing bb of uid 187
  from 20 to 19
changing bb of uid 188
  from 20 to 19
changing bb of uid 189
  from 20 to 19
changing bb of uid 190
  from 20 to 19
changing bb of uid 191
  from 20 to 19
changing bb of uid 192
  from 20 to 19
changing bb of uid 193
  from 20 to 19
changing bb of uid 194
  from 20 to 19
changing bb of uid 4450
  from 20 to 19
changing bb of uid 195
  from 20 to 19
changing bb of uid 4451
  from 20 to 19
changing bb of uid 196
  from 20 to 19
changing bb of uid 197
  from 20 to 19
changing bb of uid 198
  from 20 to 19
changing bb of uid 199
  from 20 to 19
changing bb of uid 200
  from 20 to 19
changing bb of uid 201
  from 20 to 19
changing bb of uid 4736
  from 20 to 19
changing bb of uid 203
  from 20 to 19
changing bb of uid 204
  from 20 to 19
changing bb of uid 206
  from 20 to 19
changing bb of uid 207
  from 20 to 19
changing bb of uid 210
  from 20 to 19
changing bb of uid 211
  from 20 to 19
changing bb of uid 4737
  from 20 to 19
changing bb of uid 213
  from 20 to 19
changing bb of uid 214
  from 20 to 19
changing bb of uid 215
  from 20 to 19
changing bb of uid 216
  from 20 to 19
changing bb of uid 217
  from 20 to 19
changing bb of uid 218
  from 20 to 19
changing bb of uid 220
  from 20 to 19
changing bb of uid 221
  from 20 to 19
changing bb of uid 222
  from 20 to 19
changing bb of uid 223
  from 20 to 19
Merged blocks 19 and 20.
Merged 19 and 20 without moving.
Merging block 35 into block 34...
changing bb of uid 398
  from 35 to 34
changing bb of uid 4169
  from 35 to 34
Merged blocks 34 and 35.
Merged 34 and 35 without moving.
Merging block 44 into block 43...
changing bb of uid 456
  from 44 to 43
changing bb of uid 4173
  from 44 to 43
Merged blocks 43 and 44.
Merged 43 and 44 without moving.
Merging block 66 into block 65...
changing bb of uid 813
  from 66 to 65
changing bb of uid 4177
  from 66 to 65
Merged blocks 65 and 66.
Merged 65 and 66 without moving.
Merging block 68 into block 67...
changing bb of uid 819
  from 68 to 67
changing bb of uid 820
  from 68 to 67
changing bb of uid 821
  from 68 to 67
changing bb of uid 822
  from 68 to 67
changing bb of uid 823
  from 68 to 67
changing bb of uid 824
  from 68 to 67
changing bb of uid 825
  from 68 to 67
changing bb of uid 826
  from 68 to 67
changing bb of uid 827
  from 68 to 67
changing bb of uid 828
  from 68 to 67
changing bb of uid 829
  from 68 to 67
changing bb of uid 830
  from 68 to 67
changing bb of uid 831
  from 68 to 67
changing bb of uid 832
  from 68 to 67
changing bb of uid 833
  from 68 to 67
changing bb of uid 834
  from 68 to 67
changing bb of uid 4465
  from 68 to 67
changing bb of uid 835
  from 68 to 67
changing bb of uid 4466
  from 68 to 67
changing bb of uid 836
  from 68 to 67
changing bb of uid 837
  from 68 to 67
changing bb of uid 838
  from 68 to 67
changing bb of uid 839
  from 68 to 67
changing bb of uid 840
  from 68 to 67
changing bb of uid 843
  from 68 to 67
changing bb of uid 844
  from 68 to 67
changing bb of uid 845
  from 68 to 67
changing bb of uid 846
  from 68 to 67
changing bb of uid 847
  from 68 to 67
changing bb of uid 848
  from 68 to 67
changing bb of uid 4704
  from 68 to 67
changing bb of uid 850
  from 68 to 67
changing bb of uid 851
  from 68 to 67
changing bb of uid 853
  from 68 to 67
changing bb of uid 854
  from 68 to 67
changing bb of uid 857
  from 68 to 67
changing bb of uid 858
  from 68 to 67
changing bb of uid 4705
  from 68 to 67
changing bb of uid 860
  from 68 to 67
changing bb of uid 861
  from 68 to 67
changing bb of uid 862
  from 68 to 67
changing bb of uid 863
  from 68 to 67
changing bb of uid 864
  from 68 to 67
changing bb of uid 865
  from 68 to 67
changing bb of uid 867
  from 68 to 67
changing bb of uid 868
  from 68 to 67
changing bb of uid 869
  from 68 to 67
changing bb of uid 870
  from 68 to 67
Merged blocks 67 and 68.
Merged 67 and 68 without moving.
Merging block 79 into block 78...
changing bb of uid 975
  from 79 to 78
changing bb of uid 4183
  from 79 to 78
Merged blocks 78 and 79.
Merged 78 and 79 without moving.
Merging block 81 into block 80...
changing bb of uid 981
  from 81 to 80
changing bb of uid 982
  from 81 to 80
changing bb of uid 983
  from 81 to 80
changing bb of uid 984
  from 81 to 80
changing bb of uid 985
  from 81 to 80
changing bb of uid 986
  from 81 to 80
changing bb of uid 987
  from 81 to 80
changing bb of uid 988
  from 81 to 80
changing bb of uid 989
  from 81 to 80
changing bb of uid 990
  from 81 to 80
changing bb of uid 991
  from 81 to 80
changing bb of uid 992
  from 81 to 80
changing bb of uid 993
  from 81 to 80
changing bb of uid 994
  from 81 to 80
changing bb of uid 995
  from 81 to 80
changing bb of uid 996
  from 81 to 80
changing bb of uid 4469
  from 81 to 80
changing bb of uid 997
  from 81 to 80
changing bb of uid 4470
  from 81 to 80
changing bb of uid 998
  from 81 to 80
changing bb of uid 999
  from 81 to 80
changing bb of uid 1000
  from 81 to 80
changing bb of uid 1001
  from 81 to 80
changing bb of uid 1002
  from 81 to 80
changing bb of uid 1003
  from 81 to 80
changing bb of uid 1004
  from 81 to 80
changing bb of uid 1005
  from 81 to 80
changing bb of uid 1006
  from 81 to 80
changing bb of uid 4695
  from 81 to 80
changing bb of uid 4696
  from 81 to 80
changing bb of uid 1008
  from 81 to 80
changing bb of uid 1009
  from 81 to 80
changing bb of uid 1010
  from 81 to 80
changing bb of uid 1011
  from 81 to 80
changing bb of uid 1012
  from 81 to 80
changing bb of uid 1013
  from 81 to 80
Merged blocks 80 and 81.
Merged 80 and 81 without moving.
Merging block 97 into block 96...
changing bb of uid 1157
  from 97 to 96
changing bb of uid 4191
  from 97 to 96
Merged blocks 96 and 97.
Merged 96 and 97 without moving.
Merging block 99 into block 98...
changing bb of uid 1163
  from 99 to 98
changing bb of uid 1164
  from 99 to 98
changing bb of uid 1165
  from 99 to 98
changing bb of uid 1166
  from 99 to 98
changing bb of uid 1167
  from 99 to 98
changing bb of uid 1168
  from 99 to 98
changing bb of uid 1169
  from 99 to 98
changing bb of uid 1170
  from 99 to 98
changing bb of uid 1171
  from 99 to 98
changing bb of uid 1172
  from 99 to 98
changing bb of uid 1173
  from 99 to 98
changing bb of uid 1174
  from 99 to 98
changing bb of uid 1175
  from 99 to 98
changing bb of uid 1176
  from 99 to 98
changing bb of uid 1177
  from 99 to 98
changing bb of uid 1178
  from 99 to 98
changing bb of uid 4471
  from 99 to 98
changing bb of uid 1179
  from 99 to 98
changing bb of uid 4472
  from 99 to 98
changing bb of uid 1180
  from 99 to 98
changing bb of uid 1181
  from 99 to 98
changing bb of uid 1182
  from 99 to 98
changing bb of uid 1183
  from 99 to 98
changing bb of uid 1184
  from 99 to 98
changing bb of uid 1185
  from 99 to 98
changing bb of uid 1186
  from 99 to 98
changing bb of uid 1187
  from 99 to 98
changing bb of uid 1188
  from 99 to 98
changing bb of uid 4685
  from 99 to 98
changing bb of uid 4686
  from 99 to 98
changing bb of uid 1190
  from 99 to 98
changing bb of uid 1191
  from 99 to 98
changing bb of uid 1192
  from 99 to 98
changing bb of uid 1193
  from 99 to 98
changing bb of uid 1194
  from 99 to 98
changing bb of uid 1195
  from 99 to 98
Merged blocks 98 and 99.
Merged 98 and 99 without moving.
Merging block 115 into block 114...
changing bb of uid 1339
  from 115 to 114
changing bb of uid 4199
  from 115 to 114
Merged blocks 114 and 115.
Merged 114 and 115 without moving.
Merging block 117 into block 116...
changing bb of uid 1345
  from 117 to 116
changing bb of uid 1346
  from 117 to 116
changing bb of uid 1347
  from 117 to 116
changing bb of uid 1348
  from 117 to 116
changing bb of uid 1349
  from 117 to 116
changing bb of uid 1350
  from 117 to 116
changing bb of uid 1351
  from 117 to 116
changing bb of uid 1352
  from 117 to 116
changing bb of uid 1353
  from 117 to 116
changing bb of uid 1354
  from 117 to 116
changing bb of uid 1355
  from 117 to 116
changing bb of uid 1356
  from 117 to 116
changing bb of uid 1357
  from 117 to 116
changing bb of uid 1358
  from 117 to 116
changing bb of uid 1359
  from 117 to 116
changing bb of uid 1360
  from 117 to 116
changing bb of uid 4473
  from 117 to 116
changing bb of uid 1361
  from 117 to 116
changing bb of uid 4474
  from 117 to 116
changing bb of uid 1362
  from 117 to 116
changing bb of uid 1363
  from 117 to 116
changing bb of uid 1364
  from 117 to 116
changing bb of uid 1365
  from 117 to 116
changing bb of uid 1366
  from 117 to 116
changing bb of uid 1367
  from 117 to 116
changing bb of uid 1368
  from 117 to 116
changing bb of uid 1369
  from 117 to 116
changing bb of uid 1370
  from 117 to 116
changing bb of uid 4675
  from 117 to 116
changing bb of uid 4676
  from 117 to 116
changing bb of uid 1372
  from 117 to 116
changing bb of uid 1373
  from 117 to 116
changing bb of uid 1374
  from 117 to 116
changing bb of uid 1375
  from 117 to 116
changing bb of uid 1376
  from 117 to 116
changing bb of uid 1377
  from 117 to 116
Merged blocks 116 and 117.
Merged 116 and 117 without moving.
Merging block 131 into block 130...
changing bb of uid 1497
  from 131 to 130
changing bb of uid 4205
  from 131 to 130
Merged blocks 130 and 131.
Merged 130 and 131 without moving.
Merging block 133 into block 132...
changing bb of uid 1503
  from 133 to 132
changing bb of uid 1504
  from 133 to 132
changing bb of uid 1505
  from 133 to 132
Merged blocks 132 and 133.
Merged 132 and 133 without moving.
Merging block 146 into block 145...
changing bb of uid 1622
  from 146 to 145
changing bb of uid 1623
  from 146 to 145
changing bb of uid 1624
  from 146 to 145
Merged blocks 145 and 146.
Merged 145 and 146 without moving.
Merging block 155 into block 154...
changing bb of uid 1870
  from 155 to 154
changing bb of uid 4215
  from 155 to 154
Merged blocks 154 and 155.
Merged 154 and 155 without moving.
Merging block 157 into block 156...
changing bb of uid 1876
  from 157 to 156
changing bb of uid 1877
  from 157 to 156
changing bb of uid 1878
  from 157 to 156
Merged blocks 156 and 157.
Merged 156 and 157 without moving.
Merging block 170 into block 169...
changing bb of uid 2022
  from 170 to 169
changing bb of uid 4219
  from 170 to 169
Merged blocks 169 and 170.
Merged 169 and 170 without moving.
Merging block 172 into block 171...
changing bb of uid 2028
  from 172 to 171
changing bb of uid 2029
  from 172 to 171
changing bb of uid 2030
  from 172 to 171
Merged blocks 171 and 172.
Merged 171 and 172 without moving.
Merging block 185 into block 184...
changing bb of uid 4634
  from 185 to 184
changing bb of uid 2149
  from 185 to 184
changing bb of uid 2150
  from 185 to 184
Merged blocks 184 and 185.
Merged 184 and 185 without moving.
Merging block 194 into block 193...
changing bb of uid 2467
  from 194 to 193
changing bb of uid 4229
  from 194 to 193
Merged blocks 193 and 194.
Merged 193 and 194 without moving.
Merging block 196 into block 195...
changing bb of uid 2473
  from 196 to 195
changing bb of uid 2474
  from 196 to 195
changing bb of uid 2475
  from 196 to 195
Merged blocks 195 and 196.
Merged 195 and 196 without moving.
Merging block 212 into block 211...
changing bb of uid 2690
  from 212 to 211
changing bb of uid 4236
  from 212 to 211
Merged blocks 211 and 212.
Merged 211 and 212 without moving.
Merging block 214 into block 213...
changing bb of uid 2696
  from 214 to 213
changing bb of uid 2697
  from 214 to 213
changing bb of uid 2698
  from 214 to 213
changing bb of uid 2699
  from 214 to 213
changing bb of uid 2700
  from 214 to 213
changing bb of uid 2701
  from 214 to 213
changing bb of uid 2702
  from 214 to 213
changing bb of uid 2703
  from 214 to 213
changing bb of uid 2704
  from 214 to 213
changing bb of uid 2705
  from 214 to 213
changing bb of uid 2706
  from 214 to 213
changing bb of uid 2707
  from 214 to 213
changing bb of uid 2708
  from 214 to 213
changing bb of uid 2709
  from 214 to 213
changing bb of uid 2710
  from 214 to 213
changing bb of uid 2711
  from 214 to 213
changing bb of uid 4497
  from 214 to 213
changing bb of uid 2712
  from 214 to 213
changing bb of uid 4498
  from 214 to 213
changing bb of uid 2713
  from 214 to 213
changing bb of uid 2714
  from 214 to 213
changing bb of uid 2715
  from 214 to 213
changing bb of uid 2716
  from 214 to 213
changing bb of uid 2717
  from 214 to 213
changing bb of uid 2718
  from 214 to 213
changing bb of uid 2719
  from 214 to 213
changing bb of uid 2720
  from 214 to 213
changing bb of uid 2721
  from 214 to 213
changing bb of uid 4598
  from 214 to 213
changing bb of uid 4599
  from 214 to 213
changing bb of uid 2723
  from 214 to 213
changing bb of uid 2724
  from 214 to 213
changing bb of uid 2725
  from 214 to 213
changing bb of uid 2726
  from 214 to 213
changing bb of uid 2727
  from 214 to 213
changing bb of uid 2728
  from 214 to 213
Merged blocks 213 and 214.
Merged 213 and 214 without moving.
Merging block 230 into block 229...
changing bb of uid 2845
  from 230 to 229
changing bb of uid 4245
  from 230 to 229
Merged blocks 229 and 230.
Merged 229 and 230 without moving.
Merging block 232 into block 231...
changing bb of uid 2851
  from 232 to 231
changing bb of uid 2852
  from 232 to 231
changing bb of uid 2853
  from 232 to 231
changing bb of uid 2854
  from 232 to 231
changing bb of uid 2855
  from 232 to 231
changing bb of uid 2856
  from 232 to 231
changing bb of uid 2857
  from 232 to 231
changing bb of uid 2858
  from 232 to 231
changing bb of uid 2859
  from 232 to 231
changing bb of uid 2860
  from 232 to 231
changing bb of uid 2861
  from 232 to 231
changing bb of uid 2862
  from 232 to 231
changing bb of uid 2863
  from 232 to 231
changing bb of uid 2864
  from 232 to 231
changing bb of uid 2865
  from 232 to 231
changing bb of uid 2866
  from 232 to 231
changing bb of uid 4499
  from 232 to 231
changing bb of uid 2867
  from 232 to 231
changing bb of uid 4500
  from 232 to 231
changing bb of uid 2868
  from 232 to 231
changing bb of uid 2869
  from 232 to 231
changing bb of uid 2870
  from 232 to 231
changing bb of uid 2871
  from 232 to 231
changing bb of uid 2872
  from 232 to 231
changing bb of uid 2873
  from 232 to 231
changing bb of uid 2874
  from 232 to 231
changing bb of uid 2875
  from 232 to 231
changing bb of uid 2876
  from 232 to 231
changing bb of uid 4590
  from 232 to 231
changing bb of uid 4591
  from 232 to 231
changing bb of uid 2878
  from 232 to 231
changing bb of uid 2879
  from 232 to 231
changing bb of uid 2880
  from 232 to 231
changing bb of uid 2881
  from 232 to 231
changing bb of uid 2882
  from 232 to 231
changing bb of uid 2883
  from 232 to 231
Merged blocks 231 and 232.
Merged 231 and 232 without moving.
Merging block 248 into block 247...
changing bb of uid 3002
  from 248 to 247
changing bb of uid 4254
  from 248 to 247
Merged blocks 247 and 248.
Merged 247 and 248 without moving.
Merging block 250 into block 249...
changing bb of uid 3008
  from 250 to 249
changing bb of uid 3009
  from 250 to 249
changing bb of uid 3010
  from 250 to 249
changing bb of uid 3011
  from 250 to 249
changing bb of uid 3012
  from 250 to 249
changing bb of uid 3013
  from 250 to 249
changing bb of uid 3014
  from 250 to 249
changing bb of uid 3015
  from 250 to 249
changing bb of uid 3016
  from 250 to 249
changing bb of uid 3017
  from 250 to 249
changing bb of uid 3018
  from 250 to 249
changing bb of uid 3019
  from 250 to 249
changing bb of uid 3020
  from 250 to 249
changing bb of uid 3021
  from 250 to 249
changing bb of uid 3022
  from 250 to 249
changing bb of uid 3023
  from 250 to 249
changing bb of uid 4501
  from 250 to 249
changing bb of uid 3024
  from 250 to 249
changing bb of uid 4502
  from 250 to 249
changing bb of uid 3025
  from 250 to 249
changing bb of uid 3026
  from 250 to 249
changing bb of uid 3027
  from 250 to 249
changing bb of uid 3028
  from 250 to 249
changing bb of uid 3029
  from 250 to 249
changing bb of uid 3030
  from 250 to 249
changing bb of uid 3031
  from 250 to 249
changing bb of uid 3032
  from 250 to 249
changing bb of uid 3033
  from 250 to 249
changing bb of uid 4580
  from 250 to 249
changing bb of uid 4581
  from 250 to 249
changing bb of uid 3035
  from 250 to 249
changing bb of uid 3036
  from 250 to 249
changing bb of uid 3037
  from 250 to 249
changing bb of uid 3038
  from 250 to 249
changing bb of uid 3039
  from 250 to 249
changing bb of uid 3040
  from 250 to 249
Merged blocks 249 and 250.
Merged 249 and 250 without moving.
Merging block 266 into block 265...
changing bb of uid 3159
  from 266 to 265
changing bb of uid 4263
  from 266 to 265
Merged blocks 265 and 266.
Merged 265 and 266 without moving.
Merging block 268 into block 267...
changing bb of uid 3165
  from 268 to 267
changing bb of uid 3166
  from 268 to 267
changing bb of uid 3167
  from 268 to 267
changing bb of uid 3168
  from 268 to 267
changing bb of uid 3169
  from 268 to 267
changing bb of uid 3170
  from 268 to 267
changing bb of uid 3171
  from 268 to 267
changing bb of uid 3172
  from 268 to 267
changing bb of uid 3173
  from 268 to 267
changing bb of uid 3174
  from 268 to 267
changing bb of uid 3175
  from 268 to 267
changing bb of uid 3176
  from 268 to 267
changing bb of uid 3177
  from 268 to 267
changing bb of uid 3178
  from 268 to 267
changing bb of uid 3179
  from 268 to 267
changing bb of uid 3180
  from 268 to 267
changing bb of uid 4503
  from 268 to 267
changing bb of uid 3181
  from 268 to 267
changing bb of uid 4504
  from 268 to 267
changing bb of uid 3182
  from 268 to 267
changing bb of uid 3183
  from 268 to 267
changing bb of uid 3184
  from 268 to 267
changing bb of uid 3185
  from 268 to 267
changing bb of uid 3186
  from 268 to 267
changing bb of uid 3187
  from 268 to 267
changing bb of uid 3188
  from 268 to 267
changing bb of uid 3189
  from 268 to 267
changing bb of uid 3190
  from 268 to 267
changing bb of uid 4570
  from 268 to 267
changing bb of uid 4571
  from 268 to 267
changing bb of uid 3192
  from 268 to 267
changing bb of uid 3193
  from 268 to 267
changing bb of uid 3194
  from 268 to 267
changing bb of uid 3195
  from 268 to 267
changing bb of uid 3196
  from 268 to 267
changing bb of uid 3197
  from 268 to 267
Merged blocks 267 and 268.
Merged 267 and 268 without moving.
Merging block 284 into block 283...
changing bb of uid 3314
  from 284 to 283
changing bb of uid 4272
  from 284 to 283
Merged blocks 283 and 284.
Merged 283 and 284 without moving.
Merging block 286 into block 285...
changing bb of uid 3320
  from 286 to 285
changing bb of uid 3321
  from 286 to 285
changing bb of uid 3322
  from 286 to 285
changing bb of uid 3323
  from 286 to 285
changing bb of uid 3324
  from 286 to 285
changing bb of uid 3325
  from 286 to 285
changing bb of uid 3326
  from 286 to 285
changing bb of uid 3327
  from 286 to 285
changing bb of uid 3328
  from 286 to 285
changing bb of uid 3329
  from 286 to 285
changing bb of uid 3330
  from 286 to 285
changing bb of uid 3331
  from 286 to 285
changing bb of uid 3332
  from 286 to 285
changing bb of uid 3333
  from 286 to 285
changing bb of uid 3334
  from 286 to 285
changing bb of uid 3335
  from 286 to 285
changing bb of uid 4505
  from 286 to 285
changing bb of uid 3336
  from 286 to 285
changing bb of uid 4506
  from 286 to 285
changing bb of uid 3337
  from 286 to 285
changing bb of uid 3338
  from 286 to 285
changing bb of uid 3339
  from 286 to 285
changing bb of uid 3340
  from 286 to 285
changing bb of uid 3341
  from 286 to 285
changing bb of uid 3342
  from 286 to 285
changing bb of uid 3343
  from 286 to 285
changing bb of uid 3344
  from 286 to 285
changing bb of uid 3345
  from 286 to 285
changing bb of uid 4562
  from 286 to 285
changing bb of uid 4563
  from 286 to 285
changing bb of uid 3347
  from 286 to 285
changing bb of uid 3348
  from 286 to 285
changing bb of uid 3349
  from 286 to 285
changing bb of uid 3350
  from 286 to 285
changing bb of uid 3351
  from 286 to 285
changing bb of uid 3352
  from 286 to 285
Merged blocks 285 and 286.
Merged 285 and 286 without moving.
Merging block 302 into block 301...
changing bb of uid 3469
  from 302 to 301
changing bb of uid 4281
  from 302 to 301
Merged blocks 301 and 302.
Merged 301 and 302 without moving.
Merging block 304 into block 303...
changing bb of uid 3475
  from 304 to 303
changing bb of uid 3476
  from 304 to 303
changing bb of uid 3477
  from 304 to 303
changing bb of uid 3478
  from 304 to 303
changing bb of uid 3479
  from 304 to 303
changing bb of uid 3480
  from 304 to 303
changing bb of uid 3481
  from 304 to 303
changing bb of uid 3482
  from 304 to 303
changing bb of uid 3483
  from 304 to 303
changing bb of uid 3484
  from 304 to 303
changing bb of uid 3485
  from 304 to 303
changing bb of uid 3486
  from 304 to 303
changing bb of uid 3487
  from 304 to 303
changing bb of uid 3488
  from 304 to 303
changing bb of uid 3489
  from 304 to 303
changing bb of uid 3490
  from 304 to 303
changing bb of uid 4507
  from 304 to 303
changing bb of uid 3491
  from 304 to 303
changing bb of uid 4508
  from 304 to 303
changing bb of uid 3492
  from 304 to 303
changing bb of uid 3493
  from 304 to 303
changing bb of uid 3494
  from 304 to 303
changing bb of uid 3495
  from 304 to 303
changing bb of uid 3496
  from 304 to 303
changing bb of uid 3497
  from 304 to 303
changing bb of uid 3498
  from 304 to 303
changing bb of uid 3499
  from 304 to 303
changing bb of uid 3500
  from 304 to 303
changing bb of uid 4554
  from 304 to 303
changing bb of uid 4555
  from 304 to 303
changing bb of uid 3502
  from 304 to 303
changing bb of uid 3503
  from 304 to 303
changing bb of uid 3504
  from 304 to 303
changing bb of uid 3505
  from 304 to 303
changing bb of uid 3506
  from 304 to 303
changing bb of uid 3507
  from 304 to 303
Merged blocks 303 and 304.
Merged 303 and 304 without moving.
Merging block 320 into block 319...
changing bb of uid 3658
  from 320 to 319
changing bb of uid 4290
  from 320 to 319
Merged blocks 319 and 320.
Merged 319 and 320 without moving.
Merging block 322 into block 321...
changing bb of uid 3664
  from 322 to 321
changing bb of uid 3665
  from 322 to 321
changing bb of uid 3666
  from 322 to 321
changing bb of uid 3667
  from 322 to 321
changing bb of uid 3668
  from 322 to 321
changing bb of uid 3669
  from 322 to 321
changing bb of uid 3670
  from 322 to 321
changing bb of uid 3671
  from 322 to 321
changing bb of uid 3672
  from 322 to 321
changing bb of uid 3673
  from 322 to 321
changing bb of uid 3674
  from 322 to 321
changing bb of uid 3675
  from 322 to 321
changing bb of uid 3676
  from 322 to 321
changing bb of uid 3677
  from 322 to 321
changing bb of uid 3678
  from 322 to 321
changing bb of uid 3679
  from 322 to 321
changing bb of uid 4509
  from 322 to 321
changing bb of uid 3680
  from 322 to 321
changing bb of uid 4510
  from 322 to 321
changing bb of uid 3681
  from 322 to 321
changing bb of uid 3682
  from 322 to 321
changing bb of uid 3683
  from 322 to 321
changing bb of uid 3684
  from 322 to 321
changing bb of uid 4543
  from 322 to 321
changing bb of uid 3686
  from 322 to 321
changing bb of uid 3687
  from 322 to 321
changing bb of uid 3689
  from 322 to 321
changing bb of uid 3690
  from 322 to 321
changing bb of uid 3693
  from 322 to 321
changing bb of uid 3694
  from 322 to 321
changing bb of uid 4544
  from 322 to 321
changing bb of uid 3696
  from 322 to 321
changing bb of uid 3697
  from 322 to 321
changing bb of uid 3698
  from 322 to 321
changing bb of uid 3699
  from 322 to 321
changing bb of uid 3700
  from 322 to 321
changing bb of uid 3701
  from 322 to 321
changing bb of uid 3703
  from 322 to 321
changing bb of uid 3704
  from 322 to 321
changing bb of uid 3705
  from 322 to 321
changing bb of uid 3706
  from 322 to 321
Merged blocks 321 and 322.
Merged 321 and 322 without moving.
Merging block 333 into block 332...
changing bb of uid 3836
  from 333 to 332
changing bb of uid 4297
  from 333 to 332
Merged blocks 332 and 333.
Merged 332 and 333 without moving.
Merging block 335 into block 334...
changing bb of uid 3842
  from 335 to 334
changing bb of uid 3843
  from 335 to 334
changing bb of uid 3844
  from 335 to 334
changing bb of uid 3845
  from 335 to 334
changing bb of uid 3846
  from 335 to 334
changing bb of uid 3847
  from 335 to 334
changing bb of uid 3848
  from 335 to 334
changing bb of uid 3849
  from 335 to 334
changing bb of uid 3850
  from 335 to 334
changing bb of uid 3851
  from 335 to 334
changing bb of uid 3852
  from 335 to 334
changing bb of uid 3853
  from 335 to 334
changing bb of uid 3854
  from 335 to 334
changing bb of uid 3855
  from 335 to 334
changing bb of uid 3856
  from 335 to 334
changing bb of uid 3857
  from 335 to 334
changing bb of uid 4511
  from 335 to 334
changing bb of uid 3858
  from 335 to 334
changing bb of uid 4512
  from 335 to 334
changing bb of uid 3859
  from 335 to 334
changing bb of uid 3860
  from 335 to 334
changing bb of uid 3861
  from 335 to 334
changing bb of uid 3862
  from 335 to 334
changing bb of uid 4532
  from 335 to 334
changing bb of uid 3864
  from 335 to 334
changing bb of uid 3865
  from 335 to 334
changing bb of uid 3867
  from 335 to 334
changing bb of uid 3868
  from 335 to 334
changing bb of uid 3871
  from 335 to 334
changing bb of uid 3872
  from 335 to 334
changing bb of uid 4533
  from 335 to 334
changing bb of uid 3874
  from 335 to 334
changing bb of uid 3875
  from 335 to 334
changing bb of uid 3876
  from 335 to 334
changing bb of uid 3877
  from 335 to 334
changing bb of uid 3878
  from 335 to 334
changing bb of uid 3879
  from 335 to 334
changing bb of uid 3881
  from 335 to 334
changing bb of uid 3882
  from 335 to 334
changing bb of uid 3883
  from 335 to 334
changing bb of uid 3884
  from 335 to 334
Merged blocks 334 and 335.
Merged 334 and 335 without moving.
Merging block 346 into block 345...
changing bb of uid 3991
  from 346 to 345
changing bb of uid 4304
  from 346 to 345
Merged blocks 345 and 346.
Merged 345 and 346 without moving.
Merging block 348 into block 347...
changing bb of uid 3997
  from 348 to 347
changing bb of uid 3998
  from 348 to 347
changing bb of uid 3999
  from 348 to 347
changing bb of uid 4000
  from 348 to 347
changing bb of uid 4001
  from 348 to 347
changing bb of uid 4002
  from 348 to 347
changing bb of uid 4003
  from 348 to 347
changing bb of uid 4004
  from 348 to 347
changing bb of uid 4005
  from 348 to 347
changing bb of uid 4006
  from 348 to 347
changing bb of uid 4007
  from 348 to 347
changing bb of uid 4008
  from 348 to 347
changing bb of uid 4009
  from 348 to 347
changing bb of uid 4010
  from 348 to 347
changing bb of uid 4011
  from 348 to 347
changing bb of uid 4012
  from 348 to 347
changing bb of uid 4513
  from 348 to 347
changing bb of uid 4013
  from 348 to 347
changing bb of uid 4514
  from 348 to 347
changing bb of uid 4014
  from 348 to 347
changing bb of uid 4015
  from 348 to 347
changing bb of uid 4016
  from 348 to 347
changing bb of uid 4017
  from 348 to 347
changing bb of uid 4523
  from 348 to 347
changing bb of uid 4019
  from 348 to 347
changing bb of uid 4020
  from 348 to 347
changing bb of uid 4022
  from 348 to 347
changing bb of uid 4023
  from 348 to 347
changing bb of uid 4026
  from 348 to 347
changing bb of uid 4027
  from 348 to 347
changing bb of uid 4524
  from 348 to 347
changing bb of uid 4029
  from 348 to 347
changing bb of uid 4030
  from 348 to 347
changing bb of uid 4031
  from 348 to 347
changing bb of uid 4032
  from 348 to 347
changing bb of uid 4033
  from 348 to 347
changing bb of uid 4034
  from 348 to 347
changing bb of uid 4036
  from 348 to 347
changing bb of uid 4037
  from 348 to 347
changing bb of uid 4038
  from 348 to 347
changing bb of uid 4039
  from 348 to 347
Merged blocks 347 and 348.
Merged 347 and 348 without moving.
Merging block 352 into block 351...
changing bb of uid 4092
  from 352 to 351
changing bb of uid 4093
  from 352 to 351
changing bb of uid 4094
  from 352 to 351
changing bb of uid 4095
  from 352 to 351
changing bb of uid 4096
  from 352 to 351
changing bb of uid 4097
  from 352 to 351
changing bb of uid 4158
  from 352 to 351
changing bb of uid 4749
  unscanned insn
changing bb of uid 4750
  from 352 to 351
changing bb of uid 4751
  from 352 to 351
changing bb of uid 4752
  from 352 to 351
changing bb of uid 4753
  from 352 to 351
changing bb of uid 4754
  from 352 to 351
changing bb of uid 4755
  from 352 to 351
changing bb of uid 4756
  from 352 to 351
Merged blocks 351 and 352.
Merged 351 and 352 without moving.


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

starting the processing of deferred insns
ending the processing of deferred insns


cldrad

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  ref usage 	r0={981d,955u} r1={932d,889u,28e} r2={383d,312u} r3={6d,11u} r4={169d,99u} r5={190d,146u} r6={3d,1144u} r7={94d,502u} r8={70d} r9={70d} r10={70d} r11={70d} r12={70d} r13={70d} r14={70d} r15={70d} r17={854d,182u} r18={70d} r19={70d} r20={1d,1u,46e} r21={226d,162u} r22={129d,61u} r23={75d,4u} r24={73d,2u} r25={73d,2u} r26={71d} r27={71d} r28={71d} r29={70d} r30={70d} r31={70d} r32={70d} r33={70d} r34={70d} r35={70d} r36={70d} r37={125d,53u} r38={125d,53u} r39={70d} r40={70d} r41={4d,7u} r42={3d,2u} r43={3d,2u} r45={70d} r46={70d} r47={70d} r48={70d} r49={70d} r50={70d} r51={70d} r52={70d} r53={70d} r54={70d} r55={70d} r56={70d} r57={70d} r58={70d} r59={70d} r60={70d} r61={70d} r62={70d} r63={70d} r64={70d} r65={70d} r66={70d} r67={70d} r68={70d} r69={70d} r70={70d} r71={70d} r72={70d} r73={70d} r74={70d} r75={70d} r76={70d} r77={70d} r78={70d} r79={70d} r80={70d} 
;;    total ref usage 13245{8582d,4589u,74e} in 3468{3398 regular + 70 call} insns.
(note 1 0 7 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 7 1 4741 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 4741 7 4742 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) "CLDRAD.f":1 -1
     (nil))
(insn/f 4742 4741 4743 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) "CLDRAD.f":1 -1
     (nil))
(insn/f 4743 4742 4744 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) "CLDRAD.f":1 -1
     (nil))
(insn/f 4744 4743 4745 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) "CLDRAD.f":1 -1
     (nil))
(insn/f 4745 4744 4746 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) "CLDRAD.f":1 -1
     (nil))
(insn/f 4746 4745 4747 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) "CLDRAD.f":1 -1
     (nil))
(insn/f 4747 4746 4748 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -176 [0xffffffffffffff50])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "CLDRAD.f":1 -1
     (nil))
(note 4748 4747 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 4748 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])
        (reg:DI 5 di [ imout ])) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])
        (reg:DI 4 si [ jmout ])) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(note 4 3 9 2 NOTE_INSN_FUNCTION_BEG)
(insn 9 4 10 2 (set (reg/f:DI 0 ax [1195])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [1195]) [2 *imout_1159(D)+0 S4 A32])) "CLDRAD.f":105 86 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:DI 0 ax [1196])
        (sign_extend:DI (reg:SI 0 ax [orig:87 _1 ] [87]))) "CLDRAD.f":105 149 {*extendsidi2_rex64}
     (nil))
(insn 12 11 13 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 ubound.0+0 S8 A64])
        (reg:DI 0 ax [1196])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 13 12 15 2 (set (reg:DI 0 ax [orig:1088 stride.2_1161 ] [1088])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [3 ubound.0+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 15 13 14 2 (set (reg:DI 1 dx [1197])
        (const_int 0 [0])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 14 15 4444 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:1088 stride.2_1161 ] [1088])
            (const_int 0 [0]))) "CLDRAD.f":105 8 {*cmpdi_ccno_1}
     (nil))
(insn 4444 14 16 2 (set (reg:DI 3 bx [1197])
        (reg:DI 1 dx [1197])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 16 4444 17 2 (set (reg:DI 3 bx [1197])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:1088 stride.2_1161 ] [1088])
            (reg:DI 3 bx [1197]))) "CLDRAD.f":105 1003 {*movdicc_noc}
     (nil))
(insn 17 16 18 2 (set (reg/f:DI 0 ax [1198])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (set (reg:SI 0 ax [orig:88 _2 ] [88])
        (mem:SI (reg/f:DI 0 ax [1198]) [2 *jmout_1163(D)+0 S4 A32])) "CLDRAD.f":105 86 {*movsi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:DI 0 ax [1199])
        (sign_extend:DI (reg:SI 0 ax [orig:88 _2 ] [88]))) "CLDRAD.f":105 149 {*extendsidi2_rex64}
     (nil))
(insn 20 19 4446 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [3 ubound.1+0 S8 A64])
        (reg:DI 0 ax [1199])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 4446 20 21 2 (set (reg:DI 0 ax [orig:1090 size.4_1165 ] [1090])
        (reg:DI 3 bx [orig:1089 stride.2_1162 ] [1089])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 21 4446 23 2 (parallel [
            (set (reg:DI 0 ax [orig:1090 size.4_1165 ] [1090])
                (mult:DI (reg:DI 0 ax [orig:1090 size.4_1165 ] [1090])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -80 [0xffffffffffffffb0])) [3 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":105 349 {*muldi3_1}
     (nil))
(insn 23 21 22 2 (set (reg:DI 1 dx [1200])
        (const_int 0 [0])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 22 23 24 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:1090 size.4_1165 ] [1090])
            (const_int 0 [0]))) "CLDRAD.f":105 8 {*cmpdi_ccno_1}
     (nil))
(insn 24 22 26 2 (set (reg:DI 0 ax [orig:1091 size.4_1166 ] [1091])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:1090 size.4_1165 ] [1090])
            (reg:DI 1 dx [1200]))) "CLDRAD.f":105 1003 {*movdicc_noc}
     (nil))
(insn 26 24 27 2 (set (reg:DI 1 dx [orig:89 size.12_3 ] [89])
        (reg:DI 0 ax [orig:1091 size.4_1166 ] [1091])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 27 26 28 2 (set (reg:DI 37 r8 [orig:90 _4 ] [90])
        (reg:DI 1 dx [orig:89 size.12_3 ] [89])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 28 27 32 2 (set (reg:DI 38 r9 [ _4+8 ])
        (const_int 0 [0])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 32 28 35 2 (parallel [
            (set (reg:DI 0 ax [orig:92 _6 ] [92])
                (ashift:DI (reg:DI 0 ax [orig:1091 size.4_1166 ] [1091])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":105 551 {*ashldi3_1}
     (nil))
(insn 35 32 34 2 (set (reg:DI 1 dx [1201])
        (const_int 1 [0x1])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 34 35 36 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:93 _7 ] [93])
            (const_int 0 [0]))) "CLDRAD.f":105 8 {*cmpdi_ccno_1}
     (nil))
(insn 36 34 37 2 (set (reg:DI 0 ax [orig:94 _8 ] [94])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:93 _7 ] [93])
            (reg:DI 1 dx [1201]))) "CLDRAD.f":105 1003 {*movdicc_noc}
     (nil))
(insn 37 36 38 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:94 _8 ] [94])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(call_insn 38 37 41 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f2039124f00 __builtin_malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "CLDRAD.f":105 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 41 38 4448 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])
        (reg/f:DI 0 ax [orig:1095 _1171 ] [1095])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 4448 41 42 2 (set (reg:DI 41 r12 [orig:1096 offset.3_1173 ] [1096])
        (reg:DI 3 bx [orig:1089 stride.2_1162 ] [1089])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 42 4448 43 2 (set (reg:DI 41 r12 [orig:1096 offset.3_1173 ] [1096])
        (not:DI (reg:DI 41 r12 [orig:1096 offset.3_1173 ] [1096]))) "CLDRAD.f":105 532 {*one_cmpldi2_1}
     (nil))
(insn 43 42 44 2 (set (reg/f:DI 0 ax [1203])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:SI 0 ax [orig:95 _9 ] [95])
        (mem:SI (reg/f:DI 0 ax [1203]) [2 *imout_1159(D)+0 S4 A32])) "CLDRAD.f":105 86 {*movsi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 0 ax [1204])
        (sign_extend:DI (reg:SI 0 ax [orig:95 _9 ] [95]))) "CLDRAD.f":105 149 {*extendsidi2_rex64}
     (nil))
(insn 46 45 47 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 ubound.5+0 S8 A64])
        (reg:DI 0 ax [1204])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 47 46 49 2 (set (reg:DI 0 ax [orig:1097 stride.7_1175 ] [1097])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 ubound.5+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 49 47 48 2 (set (reg:DI 1 dx [1205])
        (const_int 0 [0])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 48 49 50 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:1097 stride.7_1175 ] [1097])
            (const_int 0 [0]))) "CLDRAD.f":105 8 {*cmpdi_ccno_1}
     (nil))
(insn 50 48 51 2 (set (reg:DI 0 ax [orig:1098 stride.7_1176 ] [1098])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:1097 stride.7_1175 ] [1097])
            (reg:DI 1 dx [1205]))) "CLDRAD.f":105 1003 {*movdicc_noc}
     (nil))
(insn 51 50 52 2 (set (reg/f:DI 1 dx [1206])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 52 51 53 2 (set (reg:SI 1 dx [orig:96 _10 ] [96])
        (mem:SI (reg/f:DI 1 dx [1206]) [2 *jmout_1163(D)+0 S4 A32])) "CLDRAD.f":105 86 {*movsi_internal}
     (nil))
(insn 53 52 54 2 (set (reg:DI 1 dx [1207])
        (sign_extend:DI (reg:SI 1 dx [orig:96 _10 ] [96]))) "CLDRAD.f":105 149 {*extendsidi2_rex64}
     (nil))
(insn 54 53 55 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 ubound.6+0 S8 A64])
        (reg:DI 1 dx [1207])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 55 54 57 2 (parallel [
            (set (reg:DI 0 ax [orig:1099 size.9_1178 ] [1099])
                (mult:DI (reg:DI 0 ax [orig:1098 stride.7_1176 ] [1098])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -104 [0xffffffffffffff98])) [3 ubound.6+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":105 349 {*muldi3_1}
     (nil))
(insn 57 55 56 2 (set (reg:DI 1 dx [1208])
        (const_int 0 [0])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 56 57 58 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:1099 size.9_1178 ] [1099])
            (const_int 0 [0]))) "CLDRAD.f":105 8 {*cmpdi_ccno_1}
     (nil))
(insn 58 56 60 2 (set (reg:DI 0 ax [orig:1100 size.9_1179 ] [1100])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:1099 size.9_1178 ] [1099])
            (reg:DI 1 dx [1208]))) "CLDRAD.f":105 1003 {*movdicc_noc}
     (nil))
(insn 60 58 61 2 (set (reg:DI 1 dx [orig:97 size.14_11 ] [97])
        (reg:DI 0 ax [orig:1100 size.9_1179 ] [1100])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 61 60 62 2 (set (reg:DI 42 r13 [orig:98 _12 ] [98])
        (reg:DI 1 dx [orig:97 size.14_11 ] [97])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 62 61 66 2 (set (reg:DI 43 r14 [ _12+8 ])
        (const_int 0 [0])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 66 62 69 2 (parallel [
            (set (reg:DI 0 ax [orig:100 _14 ] [100])
                (ashift:DI (reg:DI 0 ax [orig:1100 size.9_1179 ] [1100])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":105 551 {*ashldi3_1}
     (nil))
(insn 69 66 68 2 (set (reg:DI 1 dx [1209])
        (const_int 1 [0x1])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 68 69 70 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 0 ax [orig:101 _15 ] [101])
            (const_int 0 [0]))) "CLDRAD.f":105 8 {*cmpdi_ccno_1}
     (nil))
(insn 70 68 71 2 (set (reg:DI 0 ax [orig:102 _16 ] [102])
        (if_then_else:DI (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:101 _15 ] [101])
            (reg:DI 1 dx [1209]))) "CLDRAD.f":105 1003 {*movdicc_noc}
     (nil))
(insn 71 70 72 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [orig:102 _16 ] [102])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(call_insn 72 71 75 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("malloc") [flags 0x41]  <function_decl 0x7f2039124f00 __builtin_malloc>) [0 __builtin_malloc S1 A8])
            (const_int 0 [0]))) "CLDRAD.f":105 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 75 72 77 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])
        (reg/f:DI 0 ax [orig:1104 _1184 ] [1104])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 77 75 78 2 (set (reg:SI 0 ax [orig:103 _17 ] [103])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 132 [0x84]))) [2 rqstfld.iget+116 S4 A32])) "CLDRAD.f":142 86 {*movsi_internal}
     (nil))
(insn 78 77 79 2 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:103 _17 ] [103])
            (const_int 0 [0]))) "CLDRAD.f":142 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 79 78 80 2 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 224)
            (pc))) "CLDRAD.f":142 682 {*jcc}
     (nil)
 -> 224)
;;  succ:       3 (FALLTHRU)
;;              21
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 80 79 81 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 82 3 (set (reg:SI 0 ax [orig:104 _18 ] [104])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>) [2 rqstfld.kgtype+0 S4 A128])) "CLDRAD.f":1 86 {*movsi_internal}
     (nil))
(insn 82 81 83 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:104 _18 ] [104])
            (const_int 26 [0x1a]))) "CLDRAD.f":142 11 {*cmpsi_1}
     (nil))
(jump_insn 83 82 84 3 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 224)
            (pc))) "CLDRAD.f":142 682 {*jcc}
     (nil)
 -> 224)
;;  succ:       4 (FALLTHRU)
;;              21
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(note 84 83 85 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 85 84 86 4 (set (reg:SI 1 dx [orig:1106 _1187 ] [1106])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":143 86 {*movsi_internal}
     (nil))
(insn 86 85 87 4 (set (reg:SI 0 ax [orig:1107 _1188 ] [1107])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":143 86 {*movsi_internal}
     (nil))
(insn 87 86 120 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1106 _1187 ] [1106])) "CLDRAD.f":143 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              9 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 120 87 88 5 6 (nil) [1 uses])
(note 88 120 89 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 89 88 90 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1107 _1188 ] [1107]))) "CLDRAD.f":143 11 {*cmpsi_1}
     (nil))
(insn 90 89 91 5 (set (reg:QI 1 dx [1211])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":143 678 {*setcc_qi}
     (nil))
(insn 91 90 92 5 (set (reg:SI 1 dx [orig:1108 _1190 ] [1108])
        (zero_extend:SI (reg:QI 1 dx [1211]))) "CLDRAD.f":143 140 {*zero_extendqisi2}
     (nil))
(insn 92 91 93 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1108 _1190 ] [1108])
            (const_int 0 [0]))) "CLDRAD.f":143 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 93 92 94 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4307)
            (pc))) "CLDRAD.f":143 682 {*jcc}
     (nil)
 -> 4307)
;;  succ:       11
;;              6 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 94 93 95 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 95 94 114 6 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":144 86 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              8 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 114 95 96 7 5 (nil) [1 uses])
(note 96 114 97 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 97 96 98 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":144 11 {*cmpsi_1}
     (nil))
(insn 98 97 99 7 (set (reg:QI 1 dx [1212])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":144 678 {*setcc_qi}
     (nil))
(insn 99 98 100 7 (set (reg:SI 1 dx [orig:1109 _1192 ] [1109])
        (zero_extend:SI (reg:QI 1 dx [1212]))) "CLDRAD.f":144 140 {*zero_extendqisi2}
     (nil))
(insn 100 99 101 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1109 _1192 ] [1109])
            (const_int 0 [0]))) "CLDRAD.f":144 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 101 100 102 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4310)
            (pc))) "CLDRAD.f":144 682 {*jcc}
     (nil)
 -> 4310)
;;  succ:       9
;;              8 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 102 101 103 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 104 8 (set (reg:SI 1 dx [1213])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":145 86 {*movsi_internal}
     (nil))
(insn 104 103 105 8 (set (reg:DI 1 dx [orig:105 _19 ] [105])
        (sign_extend:DI (reg:SI 1 dx [1213]))) "CLDRAD.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 105 104 106 8 (parallel [
            (set (reg:DI 2 cx [orig:106 _20 ] [106])
                (mult:DI (reg:DI 1 dx [orig:105 _19 ] [105])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":145 349 {*muldi3_1}
     (nil))
(insn 106 105 107 8 (set (reg:SI 1 dx [1214])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":145 86 {*movsi_internal}
     (nil))
(insn 107 106 108 8 (set (reg:DI 1 dx [orig:107 _21 ] [107])
        (sign_extend:DI (reg:SI 1 dx [1214]))) "CLDRAD.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 108 107 4740 8 (parallel [
            (set (reg:DI 1 dx [orig:108 _22 ] [108])
                (plus:DI (reg:DI 1 dx [orig:107 _21 ] [107])
                    (reg:DI 2 cx [orig:106 _20 ] [106])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":145 222 {*adddi_1}
     (nil))
(insn 4740 108 110 8 (set (reg:DI 2 cx [orig:109 _23 ] [109])
        (plus:DI (reg:DI 1 dx [orig:108 _22 ] [108])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":145 218 {*leadi}
     (nil))
(insn 110 4740 111 8 (set (reg:SF 21 xmm0 [orig:110 _24 ] [110])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f20392c1870 options>) [1 options.spval+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 111 110 112 8 (set (reg/f:DI 1 dx [1215])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":145 85 {*movdi_internal}
     (nil))
(insn 112 111 113 8 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:109 _23 ] [109])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1215])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:110 _24 ] [110])) "CLDRAD.f":145 131 {*movsf_internal}
     (nil))
(insn 113 112 4159 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":144 221 {*addsi_1}
     (nil))
(jump_insn 4159 113 4160 8 (set (pc)
        (label_ref 114)) "CLDRAD.f":144 683 {jump}
     (nil)
 -> 114)
;;  succ:       7 [always] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 4160 4159 4310)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4310 4160 4309 9 231 (nil) [1 uses])
(note 4309 4310 4311 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 4311 4309 119 9 (const_int 0 [0]) "CLDRAD.f":145 718 {nop}
     (nil))
(insn 119 4311 4161 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":143 221 {*addsi_1}
     (nil))
(jump_insn 4161 119 4162 9 (set (pc)
        (label_ref 120)) "CLDRAD.f":143 683 {jump}
     (nil)
 -> 120)
;;  succ:       5 [always] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 4162 4161 4307)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 9, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4307 4162 4306 11 230 (nil) [1 uses])
(note 4306 4307 4308 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 4308 4306 125 11 (const_int 0 [0]) "CLDRAD.f":144 718 {nop}
     (nil))
(insn 125 4308 126 11 (set (reg:DI 4 si)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":149 85 {*movdi_internal}
     (nil))
(insn 126 125 127 11 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)
                (const_int 18471048 [0x119d888])))) "CLDRAD.f":149 85 {*movdi_internal}
     (nil))
(insn 127 126 128 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":149 88 {*movqi_internal}
     (nil))
(call_insn 128 127 129 11 (call (mem:QI (symbol_ref:DI ("otlift2_") [flags 0x41]  <function_decl 0x7f203929e600 otlift2>) [0 otlift2 S1 A8])
        (const_int 0 [0])) "CLDRAD.f":149 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (nil)))))
(insn 129 128 130 11 (set (reg:SI 1 dx [orig:1110 _1197 ] [1110])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":151 86 {*movsi_internal}
     (nil))
(insn 130 129 131 11 (set (reg:SI 0 ax [orig:1111 _1198 ] [1111])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":151 86 {*movsi_internal}
     (nil))
(insn 131 130 174 11 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1110 _1197 ] [1110])) "CLDRAD.f":151 86 {*movsi_internal}
     (nil))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 11, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              17 [always] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 174 131 132 13 10 (nil) [1 uses])
(note 132 174 133 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 134 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1111 _1198 ] [1111]))) "CLDRAD.f":151 11 {*cmpsi_1}
     (nil))
(insn 134 133 135 13 (set (reg:QI 1 dx [1216])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":151 678 {*setcc_qi}
     (nil))
(insn 135 134 136 13 (set (reg:SI 1 dx [orig:1112 _1200 ] [1112])
        (zero_extend:SI (reg:QI 1 dx [1216]))) "CLDRAD.f":151 140 {*zero_extendqisi2}
     (nil))
(insn 136 135 137 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1112 _1200 ] [1112])
            (const_int 0 [0]))) "CLDRAD.f":151 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 137 136 138 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4313)
            (pc))) "CLDRAD.f":151 682 {*jcc}
     (nil)
 -> 4313)
;;  succ:       19
;;              14 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 138 137 139 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 168 14 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":152 86 {*movsi_internal}
     (nil))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;;              16 [always] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 168 139 140 15 9 (nil) [1 uses])
(note 140 168 141 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":152 11 {*cmpsi_1}
     (nil))
(insn 142 141 143 15 (set (reg:QI 1 dx [1217])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":152 678 {*setcc_qi}
     (nil))
(insn 143 142 144 15 (set (reg:SI 1 dx [orig:1113 _1202 ] [1113])
        (zero_extend:SI (reg:QI 1 dx [1217]))) "CLDRAD.f":152 140 {*zero_extendqisi2}
     (nil))
(insn 144 143 145 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1113 _1202 ] [1113])
            (const_int 0 [0]))) "CLDRAD.f":152 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 145 144 146 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4316)
            (pc))) "CLDRAD.f":152 682 {*jcc}
     (nil)
 -> 4316)
;;  succ:       17
;;              16 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 146 145 147 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 16 (set (reg:SI 1 dx [1218])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":153 86 {*movsi_internal}
     (nil))
(insn 148 147 149 16 (set (reg:DI 1 dx [orig:111 _25 ] [111])
        (sign_extend:DI (reg:SI 1 dx [1218]))) "CLDRAD.f":153 149 {*extendsidi2_rex64}
     (nil))
(insn 149 148 150 16 (parallel [
            (set (reg:DI 2 cx [orig:112 _26 ] [112])
                (mult:DI (reg:DI 1 dx [orig:111 _25 ] [111])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":153 349 {*muldi3_1}
     (nil))
(insn 150 149 151 16 (set (reg:SI 1 dx [1219])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":153 86 {*movsi_internal}
     (nil))
(insn 151 150 152 16 (set (reg:DI 1 dx [orig:113 _27 ] [113])
        (sign_extend:DI (reg:SI 1 dx [1219]))) "CLDRAD.f":153 149 {*extendsidi2_rex64}
     (nil))
(insn 152 151 4738 16 (parallel [
            (set (reg:DI 1 dx [orig:114 _28 ] [114])
                (plus:DI (reg:DI 1 dx [orig:113 _27 ] [113])
                    (reg:DI 2 cx [orig:112 _26 ] [112])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":153 222 {*adddi_1}
     (nil))
(insn 4738 152 154 16 (set (reg:DI 2 cx [orig:115 _29 ] [115])
        (plus:DI (reg:DI 1 dx [orig:114 _28 ] [114])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":153 218 {*leadi}
     (nil))
(insn 154 4738 155 16 (set (reg/f:DI 1 dx [1220])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":153 85 {*movdi_internal}
     (nil))
(insn 155 154 156 16 (set (reg:SF 22 xmm1 [orig:116 _30 ] [116])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:115 _29 ] [115])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1220])) [1 egrid1 S4 A32])) "CLDRAD.f":153 131 {*movsf_internal}
     (nil))
(insn 156 155 157 16 (set (reg:SI 1 dx [1221])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":153 86 {*movsi_internal}
     (nil))
(insn 157 156 158 16 (set (reg:DI 1 dx [orig:117 _31 ] [117])
        (sign_extend:DI (reg:SI 1 dx [1221]))) "CLDRAD.f":153 149 {*extendsidi2_rex64}
     (nil))
(insn 158 157 159 16 (parallel [
            (set (reg:DI 2 cx [orig:118 _32 ] [118])
                (mult:DI (reg:DI 1 dx [orig:117 _31 ] [117])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":153 349 {*muldi3_1}
     (nil))
(insn 159 158 160 16 (set (reg:SI 1 dx [1222])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":153 86 {*movsi_internal}
     (nil))
(insn 160 159 161 16 (set (reg:DI 1 dx [orig:119 _33 ] [119])
        (sign_extend:DI (reg:SI 1 dx [1222]))) "CLDRAD.f":153 149 {*extendsidi2_rex64}
     (nil))
(insn 161 160 4739 16 (parallel [
            (set (reg:DI 1 dx [orig:120 _34 ] [120])
                (plus:DI (reg:DI 1 dx [orig:119 _33 ] [119])
                    (reg:DI 2 cx [orig:118 _32 ] [118])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":153 222 {*adddi_1}
     (nil))
(insn 4739 161 163 16 (set (reg:DI 2 cx [orig:121 _35 ] [121])
        (plus:DI (reg:DI 1 dx [orig:120 _34 ] [120])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":153 218 {*leadi}
     (nil))
(insn 163 4739 164 16 (set (reg:SF 21 xmm0 [1223])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":153 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73149993896484375e+2 [0x0.889333p+9])
        (nil)))
(insn 164 163 165 16 (set (reg:SF 21 xmm0 [orig:122 _36 ] [122])
        (plus:SF (reg:SF 21 xmm0 [1223])
            (reg:SF 22 xmm1 [orig:116 _30 ] [116]))) "CLDRAD.f":153 838 {*fop_sf_comm}
     (nil))
(insn 165 164 166 16 (set (reg/f:DI 1 dx [1224])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":153 85 {*movdi_internal}
     (nil))
(insn 166 165 167 16 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:121 _35 ] [121])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1224])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:122 _36 ] [122])) "CLDRAD.f":153 131 {*movsf_internal}
     (nil))
(insn 167 166 4163 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":152 221 {*addsi_1}
     (nil))
(jump_insn 4163 167 4164 16 (set (pc)
        (label_ref 168)) "CLDRAD.f":152 683 {jump}
     (nil)
 -> 168)
;;  succ:       15 [always] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 4164 4163 4316)
;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4316 4164 4315 17 233 (nil) [1 uses])
(note 4315 4316 4317 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 4317 4315 173 17 (const_int 0 [0]) "CLDRAD.f":153 718 {nop}
     (nil))
(insn 173 4317 4165 17 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":151 221 {*addsi_1}
     (nil))
(jump_insn 4165 173 4166 17 (set (pc)
        (label_ref 174)) "CLDRAD.f":151 683 {jump}
     (nil)
 -> 174)
;;  succ:       13 [always] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 4166 4165 4313)
;; basic block 19, loop depth 0, maybe hot
;;  prev block 17, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       13
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4313 4166 4312 19 232 (nil) [1 uses])
(note 4312 4313 4314 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 4314 4312 179 19 (const_int 0 [0]) "CLDRAD.f":152 718 {nop}
     (nil))
(insn 179 4314 180 19 (set (reg:DI 1 dx [1225])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 180 179 181 19 (set (reg:DI 0 ax [1226])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 181 180 182 19 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":157 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 182 181 183 19 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":157 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 183 182 184 19 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1225])) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 184 183 185 19 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1226])) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 185 184 186 19 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 186 185 187 19 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 187 186 188 19 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 188 187 189 19 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f2038fb41b0 *.LC2>)) "CLDRAD.f":157 85 {*movdi_internal}
     (nil))
(insn 189 188 190 19 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":157 88 {*movqi_internal}
     (nil))
(call_insn 190 189 191 19 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":157 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 191 190 192 19 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":157 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 192 191 193 19 (set (reg/f:DI 1 dx [1227])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":158 85 {*movdi_internal}
     (nil))
(insn 193 192 194 19 (set (reg:DI 0 ax [1228])
        (const_int 0 [0])) "CLDRAD.f":158 85 {*movdi_internal}
     (nil))
(insn 194 193 4450 19 (set (reg:DI 2 cx [1229])
        (const_int 12 [0xc])) "CLDRAD.f":158 85 {*movdi_internal}
     (nil))
(insn 4450 194 195 19 (set (reg/f:DI 5 di [1227])
        (reg/f:DI 1 dx [1227])) "CLDRAD.f":158 85 {*movdi_internal}
     (nil))
(insn 195 4450 4451 19 (parallel [
            (set (reg:DI 2 cx [1229])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1227])
                (plus:DI (ashift:DI (reg:DI 2 cx [1229])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1227])))
            (set (mem/c:BLK (reg/f:DI 5 di [1227]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1228]))
            (use (reg:DI 2 cx [1229]))
        ]) "CLDRAD.f":158 984 {*rep_stosdi_rex64}
     (nil))
(insn 4451 195 196 19 (set (reg/f:DI 1 dx [1227])
        (reg/f:DI 5 di [1227])) "CLDRAD.f":158 85 {*movdi_internal}
     (nil))
(insn 196 4451 197 19 (set (mem/c:SI (reg/f:DI 1 dx [1227]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1228])) "CLDRAD.f":158 86 {*movsi_internal}
     (nil))
(insn 197 196 198 19 (parallel [
            (set (reg/f:DI 1 dx [1227])
                (plus:DI (reg/f:DI 1 dx [1227])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":158 222 {*adddi_1}
     (nil))
(insn 198 197 199 19 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55252 [0xd7d4]))) [2 rqstfld.id+36 S4 A32])
        (const_int 50 [0x32])) "CLDRAD.f":159 86 {*movsi_internal}
     (nil))
(insn 199 198 200 19 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55256 [0xd7d8]))) [2 rqstfld.id+40 S4 A64])
        (const_int 100 [0x64])) "CLDRAD.f":160 86 {*movsi_internal}
     (nil))
(insn 200 199 201 19 (set (reg:SI 0 ax [orig:123 _37 ] [123])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 132 [0x84]))) [2 rqstfld.iget+116 S4 A32])) "CLDRAD.f":162 86 {*movsi_internal}
     (nil))
(insn 201 200 4736 19 (set (reg:DI 0 ax [orig:124 _38 ] [124])
        (sign_extend:DI (reg:SI 0 ax [orig:123 _37 ] [123]))) "CLDRAD.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 4736 201 203 19 (set (reg:DI 1 dx [orig:125 _39 ] [125])
        (plus:DI (reg:DI 0 ax [orig:124 _38 ] [124])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":162 218 {*leadi}
     (nil))
(insn 203 4736 204 19 (set (reg:DI 0 ax [1230])
        (reg:DI 1 dx [orig:125 _39 ] [125])) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 204 203 206 19 (parallel [
            (set (reg:DI 0 ax [1231])
                (ashift:DI (reg:DI 0 ax [1230])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":162 551 {*ashldi3_1}
     (nil))
(insn 206 204 207 19 (parallel [
            (set (reg:DI 0 ax [1230])
                (minus:DI (reg:DI 0 ax [1230])
                    (reg:DI 1 dx [orig:125 _39 ] [125])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":162 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:125 _39 ] [125])
            (const_int 15 [0xf]))
        (nil)))
(insn 207 206 210 19 (parallel [
            (set (reg:DI 0 ax [1232])
                (ashift:DI (reg:DI 0 ax [1230])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":162 551 {*ashldi3_1}
     (nil))
(insn 210 207 211 19 (parallel [
            (set (reg:DI 0 ax [1233])
                (plus:DI (reg:DI 0 ax [orig:126 _40 ] [126])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":162 222 {*adddi_1}
     (nil))
(insn 211 210 4737 19 (parallel [
            (set (reg:DI 0 ax [1234])
                (ashift:DI (reg:DI 0 ax [1233])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":162 551 {*ashldi3_1}
     (nil))
(insn 4737 211 213 19 (set (reg/f:DI 1 dx [orig:127 _41 ] [127])
        (plus:DI (reg:DI 0 ax [1234])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":162 218 {*leadi}
     (nil))
(insn 213 4737 214 19 (set (reg:DI 4 si [1235])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 214 213 215 19 (set (reg:DI 2 cx [1236])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 215 214 216 19 (set (reg:DI 0 ax [1237])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 216 215 217 19 (set (reg:DI 38 r9)
        (reg:DI 4 si [1235])) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 217 216 218 19 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1236])) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 218 217 220 19 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1237])) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 220 218 221 19 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 132 [0x84])))) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 221 220 222 19 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":162 85 {*movdi_internal}
     (nil))
(insn 222 221 223 19 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":162 88 {*movqi_internal}
     (nil))
(call_insn 223 222 224 19 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":162 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       21 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 21, loop depth 0, maybe hot
;;  prev block 19, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3
;;              19 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 224 223 225 21 2 (nil) [2 uses])
(note 225 224 226 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 226 225 227 21 (set (reg:SI 0 ax [orig:128 _42 ] [128])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 140 [0x8c]))) [2 rqstfld.iget+124 S4 A32])) "CLDRAD.f":166 86 {*movsi_internal}
     (nil))
(insn 227 226 228 21 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:128 _42 ] [128])
            (const_int 0 [0]))) "CLDRAD.f":166 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 228 227 229 21 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 233)
            (pc))) "CLDRAD.f":166 682 {*jcc}
     (nil)
 -> 233)
;;  succ:       23
;;              22 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 229 228 230 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 230 229 231 22 (set (reg:SI 0 ax [orig:129 _43 ] [129])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 440 [0x1b8]))) [2 rqstfld.iget+424 S4 A64])) "CLDRAD.f":166 86 {*movsi_internal}
     (nil))
(insn 231 230 232 22 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:129 _43 ] [129])
            (const_int 0 [0]))) "CLDRAD.f":166 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 232 231 233 22 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 494)
            (pc))) "CLDRAD.f":166 682 {*jcc}
     (nil)
 -> 494)
;;  succ:       23 (FALLTHRU)
;;              47
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21
;;              22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(code_label 233 232 234 23 11 (nil) [1 uses])
(note 234 233 235 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 23 (set (reg:SI 0 ax [orig:130 _44 ] [130])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 140 [0x8c]))) [2 rqstfld.iget+124 S4 A32])) "CLDRAD.f":167 86 {*movsi_internal}
     (nil))
(insn 236 235 4735 23 (set (reg:DI 0 ax [orig:131 _45 ] [131])
        (sign_extend:DI (reg:SI 0 ax [orig:130 _44 ] [130]))) "CLDRAD.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 4735 236 238 23 (set (reg:DI 1 dx [orig:132 _46 ] [132])
        (plus:DI (reg:DI 0 ax [orig:131 _45 ] [131])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":167 218 {*leadi}
     (nil))
(insn 238 4735 239 23 (set (reg:DI 0 ax [1238])
        (reg:DI 1 dx [orig:132 _46 ] [132])) "CLDRAD.f":167 85 {*movdi_internal}
     (nil))
(insn 239 238 241 23 (parallel [
            (set (reg:DI 0 ax [1239])
                (ashift:DI (reg:DI 0 ax [1238])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 551 {*ashldi3_1}
     (nil))
(insn 241 239 242 23 (parallel [
            (set (reg:DI 0 ax [1238])
                (minus:DI (reg:DI 0 ax [1238])
                    (reg:DI 1 dx [orig:132 _46 ] [132])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:132 _46 ] [132])
            (const_int 15 [0xf]))
        (nil)))
(insn 242 241 245 23 (parallel [
            (set (reg:DI 0 ax [1240])
                (ashift:DI (reg:DI 0 ax [1238])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 551 {*ashldi3_1}
     (nil))
(insn 245 242 246 23 (parallel [
            (set (reg:DI 0 ax [1241])
                (plus:DI (reg:DI 0 ax [orig:133 _47 ] [133])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 222 {*adddi_1}
     (nil))
(insn 246 245 247 23 (set (reg:SI 0 ax [orig:134 _48 ] [134])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [1241])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)) [2 rqstfld.lvls S4 A32])) "CLDRAD.f":167 86 {*movsi_internal}
     (nil))
(insn 247 246 248 23 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:134 _48 ] [134])
            (const_int 0 [0]))) "CLDRAD.f":167 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 248 247 249 23 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 264)
            (pc))) "CLDRAD.f":167 682 {*jcc}
     (nil)
 -> 264)
;;  succ:       25
;;              24 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(note 249 248 250 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 250 249 251 24 (set (reg:SI 0 ax [orig:135 _49 ] [135])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 440 [0x1b8]))) [2 rqstfld.iget+424 S4 A64])) "CLDRAD.f":167 86 {*movsi_internal}
     (nil))
(insn 251 250 4734 24 (set (reg:DI 0 ax [orig:136 _50 ] [136])
        (sign_extend:DI (reg:SI 0 ax [orig:135 _49 ] [135]))) "CLDRAD.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 4734 251 253 24 (set (reg:DI 1 dx [orig:137 _51 ] [137])
        (plus:DI (reg:DI 0 ax [orig:136 _50 ] [136])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":167 218 {*leadi}
     (nil))
(insn 253 4734 254 24 (set (reg:DI 0 ax [1242])
        (reg:DI 1 dx [orig:137 _51 ] [137])) "CLDRAD.f":167 85 {*movdi_internal}
     (nil))
(insn 254 253 256 24 (parallel [
            (set (reg:DI 0 ax [1243])
                (ashift:DI (reg:DI 0 ax [1242])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 551 {*ashldi3_1}
     (nil))
(insn 256 254 257 24 (parallel [
            (set (reg:DI 0 ax [1242])
                (minus:DI (reg:DI 0 ax [1242])
                    (reg:DI 1 dx [orig:137 _51 ] [137])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:137 _51 ] [137])
            (const_int 15 [0xf]))
        (nil)))
(insn 257 256 260 24 (parallel [
            (set (reg:DI 0 ax [1244])
                (ashift:DI (reg:DI 0 ax [1242])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 551 {*ashldi3_1}
     (nil))
(insn 260 257 261 24 (parallel [
            (set (reg:DI 0 ax [1245])
                (plus:DI (reg:DI 0 ax [orig:138 _52 ] [138])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":167 222 {*adddi_1}
     (nil))
(insn 261 260 262 24 (set (reg:SI 0 ax [orig:139 _53 ] [139])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [1245])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)) [2 rqstfld.lvls S4 A32])) "CLDRAD.f":167 86 {*movsi_internal}
     (nil))
(insn 262 261 263 24 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:139 _53 ] [139])
            (const_int 0 [0]))) "CLDRAD.f":167 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 263 262 264 24 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 494)
            (pc))) "CLDRAD.f":167 682 {*jcc}
     (nil)
 -> 494)
;;  succ:       25 (FALLTHRU)
;;              47
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23
;;              24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 264 263 265 25 13 (nil) [1 uses])
(note 265 264 266 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 266 265 4730 25 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [2 itype+0 S4 A128])
        (const_int 1 [0x1])) "CLDRAD.f":169 86 {*movsi_internal}
     (nil))
(insn 4730 266 4731 25 (set (reg:DI 2 cx [1246])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -168 [0xffffffffffffff58]))) "CLDRAD.f":170 218 {*leadi}
     (nil))
(insn 4731 4730 4732 25 (set (reg:DI 1 dx [1247])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -172 [0xffffffffffffff54]))) "CLDRAD.f":170 218 {*leadi}
     (nil))
(insn 4732 4731 4733 25 (set (reg:DI 4 si [1248])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -164 [0xffffffffffffff5c]))) "CLDRAD.f":170 218 {*leadi}
     (nil))
(insn 4733 4732 271 25 (set (reg:DI 0 ax [1249])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -160 [0xffffffffffffff60]))) "CLDRAD.f":170 218 {*leadi}
     (nil))
(insn 271 4733 4452 25 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":170 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 4452 271 272 25 (set (reg:DI 5 di [2234])
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":170 85 {*movdi_internal}
     (nil))
(insn 272 4452 273 25 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 5 di [2234])) "CLDRAD.f":170 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 273 272 274 25 (set (reg:DI 38 r9)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":170 85 {*movdi_internal}
     (nil))
(insn 274 273 278 25 (set (reg:DI 37 r8)
        (symbol_ref:DI ("l1d.4409") [flags 0x202]  <var_decl 0x7f2038edc990 l1d>)) "CLDRAD.f":170 85 {*movdi_internal}
     (nil))
(insn 278 274 279 25 (set (reg:DI 5 di)
        (reg:DI 0 ax [1249])) "CLDRAD.f":170 85 {*movdi_internal}
     (nil))
(insn 279 278 280 25 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":170 88 {*movqi_internal}
     (nil))
(call_insn 280 279 281 25 (call (mem:QI (symbol_ref:DI ("calcape_") [flags 0x41]  <function_decl 0x7f203929e900 calcape>) [0 calcape S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":170 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 281 280 282 25 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":170 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 282 281 283 25 (set (reg:SI 0 ax [orig:140 _54 ] [140])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 140 [0x8c]))) [2 rqstfld.iget+124 S4 A32])) "CLDRAD.f":173 86 {*movsi_internal}
     (nil))
(insn 283 282 284 25 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:140 _54 ] [140])
            (const_int 0 [0]))) "CLDRAD.f":173 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 284 283 285 25 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 329)
            (pc))) "CLDRAD.f":173 682 {*jcc}
     (nil)
 -> 329)
;;  succ:       26 (FALLTHRU)
;;              27
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 285 284 286 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 286 285 287 26 (set (reg:DI 1 dx [1250])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 287 286 288 26 (set (reg:DI 0 ax [1251])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 288 287 289 26 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":174 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 289 288 290 26 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":174 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 290 289 291 26 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1250])) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 291 290 292 26 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1251])) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 292 291 293 26 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 293 292 294 26 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 294 293 295 26 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 295 294 296 26 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f2038fb4240 *.LC3>)) "CLDRAD.f":174 85 {*movdi_internal}
     (nil))
(insn 296 295 297 26 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":174 88 {*movqi_internal}
     (nil))
(call_insn 297 296 298 26 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":174 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 298 297 299 26 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":174 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 299 298 300 26 (set (reg/f:DI 1 dx [1252])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":176 85 {*movdi_internal}
     (nil))
(insn 300 299 301 26 (set (reg:DI 0 ax [1253])
        (const_int 0 [0])) "CLDRAD.f":176 85 {*movdi_internal}
     (nil))
(insn 301 300 4453 26 (set (reg:DI 2 cx [1254])
        (const_int 12 [0xc])) "CLDRAD.f":176 85 {*movdi_internal}
     (nil))
(insn 4453 301 302 26 (set (reg/f:DI 5 di [1252])
        (reg/f:DI 1 dx [1252])) "CLDRAD.f":176 85 {*movdi_internal}
     (nil))
(insn 302 4453 4454 26 (parallel [
            (set (reg:DI 2 cx [1254])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1252])
                (plus:DI (ashift:DI (reg:DI 2 cx [1254])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1252])))
            (set (mem/c:BLK (reg/f:DI 5 di [1252]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1253]))
            (use (reg:DI 2 cx [1254]))
        ]) "CLDRAD.f":176 984 {*rep_stosdi_rex64}
     (nil))
(insn 4454 302 303 26 (set (reg/f:DI 1 dx [1252])
        (reg/f:DI 5 di [1252])) "CLDRAD.f":176 85 {*movdi_internal}
     (nil))
(insn 303 4454 304 26 (set (mem/c:SI (reg/f:DI 1 dx [1252]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1253])) "CLDRAD.f":176 86 {*movsi_internal}
     (nil))
(insn 304 303 305 26 (parallel [
            (set (reg/f:DI 1 dx [1252])
                (plus:DI (reg/f:DI 1 dx [1252])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":176 222 {*adddi_1}
     (nil))
(insn 305 304 306 26 (set (reg:SI 0 ax [orig:141 _55 ] [141])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 140 [0x8c]))) [2 rqstfld.iget+124 S4 A32])) "CLDRAD.f":178 86 {*movsi_internal}
     (nil))
(insn 306 305 4728 26 (set (reg:DI 0 ax [orig:142 _56 ] [142])
        (sign_extend:DI (reg:SI 0 ax [orig:141 _55 ] [141]))) "CLDRAD.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 4728 306 308 26 (set (reg:DI 1 dx [orig:143 _57 ] [143])
        (plus:DI (reg:DI 0 ax [orig:142 _56 ] [142])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":178 218 {*leadi}
     (nil))
(insn 308 4728 309 26 (set (reg:DI 0 ax [1255])
        (reg:DI 1 dx [orig:143 _57 ] [143])) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 309 308 311 26 (parallel [
            (set (reg:DI 0 ax [1256])
                (ashift:DI (reg:DI 0 ax [1255])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":178 551 {*ashldi3_1}
     (nil))
(insn 311 309 312 26 (parallel [
            (set (reg:DI 0 ax [1255])
                (minus:DI (reg:DI 0 ax [1255])
                    (reg:DI 1 dx [orig:143 _57 ] [143])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":178 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:143 _57 ] [143])
            (const_int 15 [0xf]))
        (nil)))
(insn 312 311 315 26 (parallel [
            (set (reg:DI 0 ax [1257])
                (ashift:DI (reg:DI 0 ax [1255])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":178 551 {*ashldi3_1}
     (nil))
(insn 315 312 316 26 (parallel [
            (set (reg:DI 0 ax [1258])
                (plus:DI (reg:DI 0 ax [orig:144 _58 ] [144])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":178 222 {*adddi_1}
     (nil))
(insn 316 315 4729 26 (parallel [
            (set (reg:DI 0 ax [1259])
                (ashift:DI (reg:DI 0 ax [1258])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":178 551 {*ashldi3_1}
     (nil))
(insn 4729 316 318 26 (set (reg/f:DI 1 dx [orig:145 _59 ] [145])
        (plus:DI (reg:DI 0 ax [1259])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":178 218 {*leadi}
     (nil))
(insn 318 4729 319 26 (set (reg:DI 4 si [1260])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 319 318 320 26 (set (reg:DI 2 cx [1261])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 320 319 321 26 (set (reg:DI 0 ax [1262])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 321 320 322 26 (set (reg:DI 38 r9)
        (reg:DI 4 si [1260])) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 322 321 323 26 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1261])) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 323 322 325 26 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1262])) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 325 323 326 26 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 140 [0x8c])))) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 326 325 327 26 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":178 85 {*movdi_internal}
     (nil))
(insn 327 326 328 26 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":178 88 {*movqi_internal}
     (nil))
(call_insn 328 327 329 26 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":178 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       27 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25
;;              26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 329 328 330 27 14 (nil) [1 uses])
(note 330 329 331 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 331 330 332 27 (set (reg:SI 0 ax [orig:146 _60 ] [146])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 440 [0x1b8]))) [2 rqstfld.iget+424 S4 A64])) "CLDRAD.f":182 86 {*movsi_internal}
     (nil))
(insn 332 331 333 27 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:146 _60 ] [146])
            (const_int 0 [0]))) "CLDRAD.f":182 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 333 332 334 27 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 494)
            (pc))) "CLDRAD.f":182 682 {*jcc}
     (nil)
 -> 494)
;;  succ:       28 (FALLTHRU)
;;              47
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 334 333 335 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 335 334 336 28 (set (reg:DI 1 dx [1263])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 336 335 337 28 (set (reg:DI 0 ax [1264])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 337 336 338 28 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":183 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 338 337 339 28 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":183 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 339 338 340 28 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1263])) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 340 339 341 28 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1264])) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 341 340 342 28 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 342 341 343 28 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 343 342 344 28 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 344 343 345 28 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f2038fb42d0 *.LC4>)) "CLDRAD.f":183 85 {*movdi_internal}
     (nil))
(insn 345 344 346 28 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":183 88 {*movqi_internal}
     (nil))
(call_insn 346 345 347 28 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":183 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 347 346 348 28 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":183 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 348 347 349 28 (set (reg:SI 0 ax [orig:147 _61 ] [147])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 4 [0x4]))) [2 parallel.me+0 S4 A32])) "CLDRAD.f":1 86 {*movsi_internal}
     (nil))
(insn 349 348 350 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:147 _61 ] [147])
            (const_int 0 [0]))) "CLDRAD.f":184 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 350 349 351 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 404)
            (pc))) "CLDRAD.f":184 682 {*jcc}
     (nil)
 -> 404)
;;  succ:       29 (FALLTHRU)
;;              37
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
(note 351 350 352 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 352 351 353 29 (set (reg/f:DI 0 ax [1265])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":185 85 {*movdi_internal}
     (nil))
(insn 353 352 354 29 (set (reg:SI 0 ax [orig:1114 _1217 ] [1114])
        (mem:SI (reg/f:DI 0 ax [1265]) [2 *jmout_1163(D)+0 S4 A32])) "CLDRAD.f":185 86 {*movsi_internal}
     (nil))
(insn 354 353 399 29 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":185 86 {*movsi_internal}
     (nil))
;;  succ:       30 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;;              34 [always] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 399 354 355 30 19 (nil) [1 uses])
(note 355 399 356 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 356 355 357 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1114 _1217 ] [1114]))) "CLDRAD.f":185 11 {*cmpsi_1}
     (nil))
(insn 357 356 358 30 (set (reg:QI 1 dx [1266])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":185 678 {*setcc_qi}
     (nil))
(insn 358 357 359 30 (set (reg:SI 1 dx [orig:1115 _1219 ] [1115])
        (zero_extend:SI (reg:QI 1 dx [1266]))) "CLDRAD.f":185 140 {*zero_extendqisi2}
     (nil))
(insn 359 358 360 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1115 _1219 ] [1115])
            (const_int 0 [0]))) "CLDRAD.f":185 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 360 359 361 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4319)
            (pc))) "CLDRAD.f":185 682 {*jcc}
     (nil)
 -> 4319)
;;  succ:       36
;;              31 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx]
(note 361 360 362 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 362 361 363 31 (set (reg/f:DI 1 dx [1267])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":186 85 {*movdi_internal}
     (nil))
(insn 363 362 364 31 (set (reg:SI 2 cx [orig:1116 _1220 ] [1116])
        (mem:SI (reg/f:DI 1 dx [1267]) [2 *imout_1159(D)+0 S4 A32])) "CLDRAD.f":186 86 {*movsi_internal}
     (nil))
(insn 364 363 393 31 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":186 86 {*movsi_internal}
     (nil))
;;  succ:       32 (FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;;              33 [always] 
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 393 364 365 32 18 (nil) [1 uses])
(note 365 393 366 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 366 365 367 32 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (reg:SI 2 cx [orig:1116 _1220 ] [1116]))) "CLDRAD.f":186 11 {*cmpsi_1}
     (nil))
(insn 367 366 368 32 (set (reg:QI 1 dx [1268])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":186 678 {*setcc_qi}
     (nil))
(insn 368 367 369 32 (set (reg:SI 1 dx [orig:1117 _1222 ] [1117])
        (zero_extend:SI (reg:QI 1 dx [1268]))) "CLDRAD.f":186 140 {*zero_extendqisi2}
     (nil))
(insn 369 368 370 32 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1117 _1222 ] [1117])
            (const_int 0 [0]))) "CLDRAD.f":186 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 370 369 371 32 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4322)
            (pc))) "CLDRAD.f":186 682 {*jcc}
     (nil)
 -> 4322)
;;  succ:       34
;;              33 (FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 371 370 372 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 372 371 373 33 (set (reg:SI 1 dx [1269])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":187 86 {*movsi_internal}
     (nil))
(insn 373 372 374 33 (set (reg:DI 1 dx [orig:148 _62 ] [148])
        (sign_extend:DI (reg:SI 1 dx [1269]))) "CLDRAD.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 374 373 4724 33 (parallel [
            (set (reg:DI 1 dx [orig:149 _63 ] [149])
                (mult:DI (reg:DI 1 dx [orig:148 _62 ] [148])
                    (reg:DI 3 bx [orig:1089 stride.2_1162 ] [1089])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":187 349 {*muldi3_1}
     (nil))
(insn 4724 374 376 33 (set (reg:DI 4 si [orig:150 _64 ] [150])
        (plus:DI (reg:DI 41 r12 [orig:1096 offset.3_1173 ] [1096])
            (reg:DI 1 dx [orig:149 _63 ] [149]))) "CLDRAD.f":187 218 {*leadi}
     (nil))
(insn 376 4724 377 33 (set (reg:SI 1 dx [1270])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":187 86 {*movsi_internal}
     (nil))
(insn 377 376 378 33 (set (reg:DI 1 dx [orig:151 _65 ] [151])
        (sign_extend:DI (reg:SI 1 dx [1270]))) "CLDRAD.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 378 377 379 33 (parallel [
            (set (reg:DI 4 si [orig:152 _66 ] [152])
                (plus:DI (reg:DI 4 si [orig:150 _64 ] [150])
                    (reg:DI 1 dx [orig:151 _65 ] [151])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":187 222 {*adddi_1}
     (nil))
(insn 379 378 380 33 (set (reg/f:DI 1 dx [1271])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":187 85 {*movdi_internal}
     (nil))
(insn 380 379 381 33 (set (reg:SF 21 xmm0 [orig:153 _67 ] [153])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:152 _66 ] [152])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1271])) [1 *grid1_1172 S4 A32])) "CLDRAD.f":187 131 {*movsf_internal}
     (nil))
(insn 381 380 382 33 (set (reg:SI 1 dx [1272])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":187 86 {*movsi_internal}
     (nil))
(insn 382 381 383 33 (set (reg:DI 1 dx [orig:154 _68 ] [154])
        (sign_extend:DI (reg:SI 1 dx [1272]))) "CLDRAD.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 383 382 4725 33 (parallel [
            (set (reg:DI 1 dx [orig:155 _69 ] [155])
                (mult:DI (reg:DI 1 dx [orig:154 _68 ] [154])
                    (reg:DI 3 bx [orig:1089 stride.2_1162 ] [1089])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":187 349 {*muldi3_1}
     (nil))
(insn 4725 383 385 33 (set (reg:DI 4 si [orig:156 _70 ] [156])
        (plus:DI (reg:DI 41 r12 [orig:1096 offset.3_1173 ] [1096])
            (reg:DI 1 dx [orig:155 _69 ] [155]))) "CLDRAD.f":187 218 {*leadi}
     (nil))
(insn 385 4725 386 33 (set (reg:SI 1 dx [1273])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":187 86 {*movsi_internal}
     (nil))
(insn 386 385 387 33 (set (reg:DI 1 dx [orig:157 _71 ] [157])
        (sign_extend:DI (reg:SI 1 dx [1273]))) "CLDRAD.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 387 386 4726 33 (parallel [
            (set (reg:DI 4 si [orig:158 _72 ] [158])
                (plus:DI (reg:DI 4 si [orig:156 _70 ] [156])
                    (reg:DI 1 dx [orig:157 _71 ] [157])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":187 222 {*adddi_1}
     (nil))
(insn 4726 387 4727 33 (set (reg:V4SF 22 xmm1 [1274])
        (vec_merge:V4SF (vec_duplicate:V4SF (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A128]))
            (const_vector:V4SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ])
            (const_int 1 [0x1]))) "CLDRAD.f":187 2520 {vec_setv4sf_0}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 4727 4726 390 33 (set (reg:V4SF 21 xmm0 [orig:159 _73 ] [159])
        (xor:V4SF (reg:V4SF 21 xmm0 [orig:153 _67 ] [153])
            (reg:V4SF 22 xmm1 [1274]))) "CLDRAD.f":187 1820 {*xorv4sf3}
     (nil))
(insn 390 4727 391 33 (set (reg/f:DI 1 dx [1275])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":187 85 {*movdi_internal}
     (nil))
(insn 391 390 392 33 (set (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:158 _72 ] [158])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1275])) [1 *grid1_1172 S4 A32])
        (reg:SF 21 xmm0 [orig:159 _73 ] [159])) "CLDRAD.f":187 131 {*movsf_internal}
     (nil))
(insn 392 391 4167 33 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":186 221 {*addsi_1}
     (nil))
(jump_insn 4167 392 4168 33 (set (pc)
        (label_ref 393)) "CLDRAD.f":186 683 {jump}
     (nil)
 -> 393)
;;  succ:       32 [always] 
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 4168 4167 4322)
;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       32
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4322 4168 4321 34 235 (nil) [1 uses])
(note 4321 4322 4323 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 4323 4321 398 34 (const_int 0 [0]) "CLDRAD.f":187 718 {nop}
     (nil))
(insn 398 4323 4169 34 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":185 221 {*addsi_1}
     (nil))
(jump_insn 4169 398 4170 34 (set (pc)
        (label_ref 399)) "CLDRAD.f":185 683 {jump}
     (nil)
 -> 399)
;;  succ:       30 [always] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 4170 4169 4319)
;; basic block 36, loop depth 0, maybe hot
;;  prev block 34, next block 37, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       30
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4319 4170 4318 36 234 (nil) [1 uses])
(note 4318 4319 4320 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 4320 4318 404 36 (const_int 0 [0]) "CLDRAD.f":186 718 {nop}
     (nil))
;;  succ:       37 [always]  (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28
;;              36 [always]  (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 404 4320 405 37 15 (nil) [1 uses])
(note 405 404 406 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 406 405 407 37 (set (reg:SI 0 ax [orig:160 _74 ] [160])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 4 [0x4]))) [2 parallel.me+0 S4 A32])) "CLDRAD.f":1 86 {*movsi_internal}
     (nil))
(insn 407 406 408 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:160 _74 ] [160])
            (const_int 0 [0]))) "CLDRAD.f":192 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 408 407 409 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 462)
            (pc))) "CLDRAD.f":192 682 {*jcc}
     (nil)
 -> 462)
;;  succ:       38 (FALLTHRU)
;;              46
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax]
(note 409 408 410 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 410 409 411 38 (set (reg/f:DI 0 ax [1276])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":193 85 {*movdi_internal}
     (nil))
(insn 411 410 412 38 (set (reg:SI 0 ax [orig:1118 _1226 ] [1118])
        (mem:SI (reg/f:DI 0 ax [1276]) [2 *jmout_1163(D)+0 S4 A32])) "CLDRAD.f":193 86 {*movsi_internal}
     (nil))
(insn 412 411 457 38 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":193 86 {*movsi_internal}
     (nil))
;;  succ:       39 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 40, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;;              43 [always] 
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 457 412 413 39 24 (nil) [1 uses])
(note 413 457 414 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 414 413 415 39 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1118 _1226 ] [1118]))) "CLDRAD.f":193 11 {*cmpsi_1}
     (nil))
(insn 415 414 416 39 (set (reg:QI 1 dx [1277])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":193 678 {*setcc_qi}
     (nil))
(insn 416 415 417 39 (set (reg:SI 1 dx [orig:1119 _1228 ] [1119])
        (zero_extend:SI (reg:QI 1 dx [1277]))) "CLDRAD.f":193 140 {*zero_extendqisi2}
     (nil))
(insn 417 416 418 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1119 _1228 ] [1119])
            (const_int 0 [0]))) "CLDRAD.f":193 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 418 417 419 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4325)
            (pc))) "CLDRAD.f":193 682 {*jcc}
     (nil)
 -> 4325)
;;  succ:       45
;;              40 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 41, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx]
(note 419 418 420 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 420 419 421 40 (set (reg/f:DI 1 dx [1278])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":194 85 {*movdi_internal}
     (nil))
(insn 421 420 422 40 (set (reg:SI 2 cx [orig:1120 _1229 ] [1120])
        (mem:SI (reg/f:DI 1 dx [1278]) [2 *imout_1159(D)+0 S4 A32])) "CLDRAD.f":194 86 {*movsi_internal}
     (nil))
(insn 422 421 451 40 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":194 86 {*movsi_internal}
     (nil))
;;  succ:       41 (FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 42, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;;              42 [always] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 2 [cx] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 451 422 423 41 23 (nil) [1 uses])
(note 423 451 424 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 424 423 425 41 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (reg:SI 2 cx [orig:1120 _1229 ] [1120]))) "CLDRAD.f":194 11 {*cmpsi_1}
     (nil))
(insn 425 424 426 41 (set (reg:QI 1 dx [1279])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":194 678 {*setcc_qi}
     (nil))
(insn 426 425 427 41 (set (reg:SI 1 dx [orig:1121 _1231 ] [1121])
        (zero_extend:SI (reg:QI 1 dx [1279]))) "CLDRAD.f":194 140 {*zero_extendqisi2}
     (nil))
(insn 427 426 428 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1121 _1231 ] [1121])
            (const_int 0 [0]))) "CLDRAD.f":194 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 428 427 429 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4328)
            (pc))) "CLDRAD.f":194 682 {*jcc}
     (nil)
 -> 4328)
;;  succ:       43
;;              42 (FALLTHRU)
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 41 [r12]
;; lr  def 	 1 [dx] 4 [si] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 429 428 430 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 430 429 431 42 (set (reg:SI 1 dx [1280])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":195 86 {*movsi_internal}
     (nil))
(insn 431 430 432 42 (set (reg:DI 1 dx [orig:161 _75 ] [161])
        (sign_extend:DI (reg:SI 1 dx [1280]))) "CLDRAD.f":195 149 {*extendsidi2_rex64}
     (nil))
(insn 432 431 4720 42 (parallel [
            (set (reg:DI 1 dx [orig:162 _76 ] [162])
                (mult:DI (reg:DI 1 dx [orig:161 _75 ] [161])
                    (reg:DI 3 bx [orig:1089 stride.2_1162 ] [1089])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":195 349 {*muldi3_1}
     (nil))
(insn 4720 432 434 42 (set (reg:DI 4 si [orig:163 _77 ] [163])
        (plus:DI (reg:DI 41 r12 [orig:1096 offset.3_1173 ] [1096])
            (reg:DI 1 dx [orig:162 _76 ] [162]))) "CLDRAD.f":195 218 {*leadi}
     (nil))
(insn 434 4720 435 42 (set (reg:SI 1 dx [1281])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":195 86 {*movsi_internal}
     (nil))
(insn 435 434 436 42 (set (reg:DI 1 dx [orig:164 _78 ] [164])
        (sign_extend:DI (reg:SI 1 dx [1281]))) "CLDRAD.f":195 149 {*extendsidi2_rex64}
     (nil))
(insn 436 435 437 42 (parallel [
            (set (reg:DI 4 si [orig:165 _79 ] [165])
                (plus:DI (reg:DI 4 si [orig:163 _77 ] [163])
                    (reg:DI 1 dx [orig:164 _78 ] [164])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":195 222 {*adddi_1}
     (nil))
(insn 437 436 438 42 (set (reg/f:DI 1 dx [1282])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":195 85 {*movdi_internal}
     (nil))
(insn 438 437 439 42 (set (reg:SF 21 xmm0 [orig:166 _80 ] [166])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:165 _79 ] [165])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1282])) [1 *grid1_1172 S4 A32])) "CLDRAD.f":195 131 {*movsf_internal}
     (nil))
(insn 439 438 440 42 (set (reg:SI 1 dx [1283])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":195 86 {*movsi_internal}
     (nil))
(insn 440 439 441 42 (set (reg:DI 1 dx [orig:167 _81 ] [167])
        (sign_extend:DI (reg:SI 1 dx [1283]))) "CLDRAD.f":195 149 {*extendsidi2_rex64}
     (nil))
(insn 441 440 4721 42 (parallel [
            (set (reg:DI 1 dx [orig:168 _82 ] [168])
                (mult:DI (reg:DI 1 dx [orig:167 _81 ] [167])
                    (reg:DI 3 bx [orig:1089 stride.2_1162 ] [1089])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":195 349 {*muldi3_1}
     (nil))
(insn 4721 441 443 42 (set (reg:DI 4 si [orig:169 _83 ] [169])
        (plus:DI (reg:DI 41 r12 [orig:1096 offset.3_1173 ] [1096])
            (reg:DI 1 dx [orig:168 _82 ] [168]))) "CLDRAD.f":195 218 {*leadi}
     (nil))
(insn 443 4721 444 42 (set (reg:SI 1 dx [1284])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":195 86 {*movsi_internal}
     (nil))
(insn 444 443 445 42 (set (reg:DI 1 dx [orig:170 _84 ] [170])
        (sign_extend:DI (reg:SI 1 dx [1284]))) "CLDRAD.f":195 149 {*extendsidi2_rex64}
     (nil))
(insn 445 444 4722 42 (parallel [
            (set (reg:DI 4 si [orig:171 _85 ] [171])
                (plus:DI (reg:DI 4 si [orig:169 _83 ] [169])
                    (reg:DI 1 dx [orig:170 _84 ] [170])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":195 222 {*adddi_1}
     (nil))
(insn 4722 445 4723 42 (set (reg:V4SF 22 xmm1 [1285])
        (vec_merge:V4SF (vec_duplicate:V4SF (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A128]))
            (const_vector:V4SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ])
            (const_int 1 [0x1]))) "CLDRAD.f":195 2520 {vec_setv4sf_0}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 4723 4722 448 42 (set (reg:V4SF 21 xmm0 [orig:172 _86 ] [172])
        (xor:V4SF (reg:V4SF 21 xmm0 [orig:166 _80 ] [166])
            (reg:V4SF 22 xmm1 [1285]))) "CLDRAD.f":195 1820 {*xorv4sf3}
     (nil))
(insn 448 4723 449 42 (set (reg/f:DI 1 dx [1286])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":195 85 {*movdi_internal}
     (nil))
(insn 449 448 450 42 (set (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:171 _85 ] [171])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1286])) [1 *grid1_1172 S4 A32])
        (reg:SF 21 xmm0 [orig:172 _86 ] [172])) "CLDRAD.f":195 131 {*movsf_internal}
     (nil))
(insn 450 449 4171 42 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":194 221 {*addsi_1}
     (nil))
(jump_insn 4171 450 4172 42 (set (pc)
        (label_ref 451)) "CLDRAD.f":194 683 {jump}
     (nil)
 -> 451)
;;  succ:       41 [always] 
;; lr  out 	 0 [ax] 2 [cx] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 4172 4171 4328)
;; basic block 43, loop depth 0, maybe hot
;;  prev block 42, next block 45, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       41
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4328 4172 4327 43 237 (nil) [1 uses])
(note 4327 4328 4329 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 4329 4327 456 43 (const_int 0 [0]) "CLDRAD.f":195 718 {nop}
     (nil))
(insn 456 4329 4173 43 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":193 221 {*addsi_1}
     (nil))
(jump_insn 4173 456 4174 43 (set (pc)
        (label_ref 457)) "CLDRAD.f":193 683 {jump}
     (nil)
 -> 457)
;;  succ:       39 [always] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12]

(barrier 4174 4173 4325)
;; basic block 45, loop depth 0, maybe hot
;;  prev block 43, next block 46, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       39
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4325 4174 4324 45 236 (nil) [1 uses])
(note 4324 4325 4326 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 4326 4324 462 45 (const_int 0 [0]) "CLDRAD.f":194 718 {nop}
     (nil))
;;  succ:       46 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 46, loop depth 0, maybe hot
;;  prev block 45, next block 47, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37
;;              45 [always]  (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 462 4326 463 46 20 (nil) [1 uses])
(note 463 462 464 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 464 463 465 46 (set (reg/f:DI 1 dx [1287])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":199 85 {*movdi_internal}
     (nil))
(insn 465 464 466 46 (set (reg:DI 0 ax [1288])
        (const_int 0 [0])) "CLDRAD.f":199 85 {*movdi_internal}
     (nil))
(insn 466 465 4455 46 (set (reg:DI 2 cx [1289])
        (const_int 12 [0xc])) "CLDRAD.f":199 85 {*movdi_internal}
     (nil))
(insn 4455 466 467 46 (set (reg/f:DI 5 di [1287])
        (reg/f:DI 1 dx [1287])) "CLDRAD.f":199 85 {*movdi_internal}
     (nil))
(insn 467 4455 4456 46 (parallel [
            (set (reg:DI 2 cx [1289])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1287])
                (plus:DI (ashift:DI (reg:DI 2 cx [1289])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1287])))
            (set (mem/c:BLK (reg/f:DI 5 di [1287]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1288]))
            (use (reg:DI 2 cx [1289]))
        ]) "CLDRAD.f":199 984 {*rep_stosdi_rex64}
     (nil))
(insn 4456 467 468 46 (set (reg/f:DI 1 dx [1287])
        (reg/f:DI 5 di [1287])) "CLDRAD.f":199 85 {*movdi_internal}
     (nil))
(insn 468 4456 469 46 (set (mem/c:SI (reg/f:DI 1 dx [1287]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1288])) "CLDRAD.f":199 86 {*movsi_internal}
     (nil))
(insn 469 468 470 46 (parallel [
            (set (reg/f:DI 1 dx [1287])
                (plus:DI (reg/f:DI 1 dx [1287])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":199 222 {*adddi_1}
     (nil))
(insn 470 469 471 46 (set (reg:SI 0 ax [orig:173 _87 ] [173])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 440 [0x1b8]))) [2 rqstfld.iget+424 S4 A64])) "CLDRAD.f":201 86 {*movsi_internal}
     (nil))
(insn 471 470 4718 46 (set (reg:DI 0 ax [orig:174 _88 ] [174])
        (sign_extend:DI (reg:SI 0 ax [orig:173 _87 ] [173]))) "CLDRAD.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 4718 471 473 46 (set (reg:DI 1 dx [orig:175 _89 ] [175])
        (plus:DI (reg:DI 0 ax [orig:174 _88 ] [174])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":201 218 {*leadi}
     (nil))
(insn 473 4718 474 46 (set (reg:DI 0 ax [1290])
        (reg:DI 1 dx [orig:175 _89 ] [175])) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 474 473 476 46 (parallel [
            (set (reg:DI 0 ax [1291])
                (ashift:DI (reg:DI 0 ax [1290])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":201 551 {*ashldi3_1}
     (nil))
(insn 476 474 477 46 (parallel [
            (set (reg:DI 0 ax [1290])
                (minus:DI (reg:DI 0 ax [1290])
                    (reg:DI 1 dx [orig:175 _89 ] [175])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":201 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:175 _89 ] [175])
            (const_int 15 [0xf]))
        (nil)))
(insn 477 476 480 46 (parallel [
            (set (reg:DI 0 ax [1292])
                (ashift:DI (reg:DI 0 ax [1290])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":201 551 {*ashldi3_1}
     (nil))
(insn 480 477 481 46 (parallel [
            (set (reg:DI 0 ax [1293])
                (plus:DI (reg:DI 0 ax [orig:176 _90 ] [176])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":201 222 {*adddi_1}
     (nil))
(insn 481 480 4719 46 (parallel [
            (set (reg:DI 0 ax [1294])
                (ashift:DI (reg:DI 0 ax [1293])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":201 551 {*ashldi3_1}
     (nil))
(insn 4719 481 483 46 (set (reg/f:DI 1 dx [orig:177 _91 ] [177])
        (plus:DI (reg:DI 0 ax [1294])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":201 218 {*leadi}
     (nil))
(insn 483 4719 484 46 (set (reg:DI 4 si [1295])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 484 483 485 46 (set (reg:DI 2 cx [1296])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 485 484 486 46 (set (reg:DI 0 ax [1297])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 486 485 487 46 (set (reg:DI 38 r9)
        (reg:DI 4 si [1295])) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 487 486 488 46 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1296])) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 488 487 490 46 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1297])) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 490 488 491 46 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 440 [0x1b8])))) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 491 490 492 46 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":201 85 {*movdi_internal}
     (nil))
(insn 492 491 493 46 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":201 88 {*movqi_internal}
     (nil))
(call_insn 493 492 494 46 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":201 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       47 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 47, loop depth 0, maybe hot
;;  prev block 46, next block 48, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22
;;              24
;;              27
;;              46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 494 493 495 47 12 (nil) [3 uses])
(note 495 494 496 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 496 495 497 47 (set (reg:SI 0 ax [orig:178 _92 ] [178])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 332 [0x14c]))) [2 rqstfld.iget+316 S4 A32])) "CLDRAD.f":207 86 {*movsi_internal}
     (nil))
(insn 497 496 498 47 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:178 _92 ] [178])
            (const_int 0 [0]))) "CLDRAD.f":207 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 498 497 499 47 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 546)
            (pc))) "CLDRAD.f":207 682 {*jcc}
     (nil)
 -> 546)
;;  succ:       48 (FALLTHRU)
;;              49
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 48, loop depth 0, maybe hot
;;  prev block 47, next block 49, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 499 498 500 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 48 (set (reg:DI 5 di)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":208 85 {*movdi_internal}
     (nil))
(insn 501 500 502 48 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":208 88 {*movqi_internal}
     (nil))
(call_insn 502 501 503 48 (call (mem:QI (symbol_ref:DI ("calpw_") [flags 0x41]  <function_decl 0x7f203929ea00 calpw>) [0 calpw S1 A8])
        (const_int 0 [0])) "CLDRAD.f":208 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 503 502 504 48 (set (reg:DI 1 dx [1298])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 504 503 505 48 (set (reg:DI 0 ax [1299])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 505 504 506 48 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":209 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 506 505 507 48 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":209 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 507 506 508 48 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1298])) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 508 507 509 48 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1299])) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 509 508 510 48 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 510 509 511 48 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 511 510 512 48 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 512 511 513 48 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC6") [flags 0x2]  <var_decl 0x7f2038fb4360 *.LC6>)) "CLDRAD.f":209 85 {*movdi_internal}
     (nil))
(insn 513 512 514 48 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":209 88 {*movqi_internal}
     (nil))
(call_insn 514 513 515 48 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":209 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 515 514 516 48 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":209 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 516 515 517 48 (set (reg/f:DI 1 dx [1300])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":210 85 {*movdi_internal}
     (nil))
(insn 517 516 518 48 (set (reg:DI 0 ax [1301])
        (const_int 0 [0])) "CLDRAD.f":210 85 {*movdi_internal}
     (nil))
(insn 518 517 4457 48 (set (reg:DI 2 cx [1302])
        (const_int 12 [0xc])) "CLDRAD.f":210 85 {*movdi_internal}
     (nil))
(insn 4457 518 519 48 (set (reg/f:DI 5 di [1300])
        (reg/f:DI 1 dx [1300])) "CLDRAD.f":210 85 {*movdi_internal}
     (nil))
(insn 519 4457 4458 48 (parallel [
            (set (reg:DI 2 cx [1302])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1300])
                (plus:DI (ashift:DI (reg:DI 2 cx [1302])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1300])))
            (set (mem/c:BLK (reg/f:DI 5 di [1300]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1301]))
            (use (reg:DI 2 cx [1302]))
        ]) "CLDRAD.f":210 984 {*rep_stosdi_rex64}
     (nil))
(insn 4458 519 520 48 (set (reg/f:DI 1 dx [1300])
        (reg/f:DI 5 di [1300])) "CLDRAD.f":210 85 {*movdi_internal}
     (nil))
(insn 520 4458 521 48 (set (mem/c:SI (reg/f:DI 1 dx [1300]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1301])) "CLDRAD.f":210 86 {*movsi_internal}
     (nil))
(insn 521 520 522 48 (parallel [
            (set (reg/f:DI 1 dx [1300])
                (plus:DI (reg/f:DI 1 dx [1300])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":210 222 {*adddi_1}
     (nil))
(insn 522 521 523 48 (set (reg:SI 0 ax [orig:179 _93 ] [179])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 332 [0x14c]))) [2 rqstfld.iget+316 S4 A32])) "CLDRAD.f":213 86 {*movsi_internal}
     (nil))
(insn 523 522 4716 48 (set (reg:DI 0 ax [orig:180 _94 ] [180])
        (sign_extend:DI (reg:SI 0 ax [orig:179 _93 ] [179]))) "CLDRAD.f":213 149 {*extendsidi2_rex64}
     (nil))
(insn 4716 523 525 48 (set (reg:DI 1 dx [orig:181 _95 ] [181])
        (plus:DI (reg:DI 0 ax [orig:180 _94 ] [180])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":213 218 {*leadi}
     (nil))
(insn 525 4716 526 48 (set (reg:DI 0 ax [1303])
        (reg:DI 1 dx [orig:181 _95 ] [181])) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 526 525 528 48 (parallel [
            (set (reg:DI 0 ax [1304])
                (ashift:DI (reg:DI 0 ax [1303])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":213 551 {*ashldi3_1}
     (nil))
(insn 528 526 529 48 (parallel [
            (set (reg:DI 0 ax [1303])
                (minus:DI (reg:DI 0 ax [1303])
                    (reg:DI 1 dx [orig:181 _95 ] [181])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":213 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:181 _95 ] [181])
            (const_int 15 [0xf]))
        (nil)))
(insn 529 528 532 48 (parallel [
            (set (reg:DI 0 ax [1305])
                (ashift:DI (reg:DI 0 ax [1303])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":213 551 {*ashldi3_1}
     (nil))
(insn 532 529 533 48 (parallel [
            (set (reg:DI 0 ax [1306])
                (plus:DI (reg:DI 0 ax [orig:182 _96 ] [182])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":213 222 {*adddi_1}
     (nil))
(insn 533 532 4717 48 (parallel [
            (set (reg:DI 0 ax [1307])
                (ashift:DI (reg:DI 0 ax [1306])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":213 551 {*ashldi3_1}
     (nil))
(insn 4717 533 535 48 (set (reg/f:DI 1 dx [orig:183 _97 ] [183])
        (plus:DI (reg:DI 0 ax [1307])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":213 218 {*leadi}
     (nil))
(insn 535 4717 536 48 (set (reg:DI 4 si [1308])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 536 535 537 48 (set (reg:DI 2 cx [1309])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 537 536 538 48 (set (reg:DI 0 ax [1310])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 538 537 539 48 (set (reg:DI 38 r9)
        (reg:DI 4 si [1308])) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 539 538 540 48 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1309])) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 540 539 542 48 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1310])) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 542 540 543 48 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 332 [0x14c])))) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 543 542 544 48 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":213 85 {*movdi_internal}
     (nil))
(insn 544 543 545 48 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":213 88 {*movqi_internal}
     (nil))
(call_insn 545 544 546 48 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":213 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       49 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 49, loop depth 0, maybe hot
;;  prev block 48, next block 50, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       47
;;              48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 546 545 547 49 25 (nil) [1 uses])
(note 547 546 548 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 548 547 549 49 (set (reg:SI 0 ax [orig:184 _98 ] [184])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 160 [0xa0]))) [2 rqstfld.iget+144 S4 A128])) "CLDRAD.f":222 86 {*movsi_internal}
     (nil))
(insn 549 548 550 49 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:184 _98 ] [184])
            (const_int 0 [0]))) "CLDRAD.f":222 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 550 549 551 49 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 604)
            (pc))) "CLDRAD.f":222 682 {*jcc}
     (nil)
 -> 604)
;;  succ:       50 (FALLTHRU)
;;              51
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 50, loop depth 0, maybe hot
;;  prev block 49, next block 51, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 551 550 552 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 552 551 553 50 (set (reg:DI 1 dx [1311])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 553 552 554 50 (set (reg:DI 0 ax [1312])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 554 553 555 50 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":223 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 555 554 556 50 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":223 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 556 555 557 50 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1311])) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 557 556 558 50 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1312])) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 558 557 559 50 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 559 558 560 50 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("cnvcld_") [flags 0x202]  <var_decl 0x7f20392a8d80 cnvcld>)
                (const_int 118524 [0x1cefc])))) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 560 559 561 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 561 560 562 50 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f2038fb43f0 *.LC7>)) "CLDRAD.f":223 85 {*movdi_internal}
     (nil))
(insn 562 561 563 50 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":223 88 {*movqi_internal}
     (nil))
(call_insn 563 562 564 50 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":223 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 564 563 565 50 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":223 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 565 564 566 50 (set (reg/f:DI 1 dx [1313])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":224 85 {*movdi_internal}
     (nil))
(insn 566 565 567 50 (set (reg:DI 0 ax [1314])
        (const_int 0 [0])) "CLDRAD.f":224 85 {*movdi_internal}
     (nil))
(insn 567 566 4459 50 (set (reg:DI 2 cx [1315])
        (const_int 12 [0xc])) "CLDRAD.f":224 85 {*movdi_internal}
     (nil))
(insn 4459 567 568 50 (set (reg/f:DI 5 di [1313])
        (reg/f:DI 1 dx [1313])) "CLDRAD.f":224 85 {*movdi_internal}
     (nil))
(insn 568 4459 4460 50 (parallel [
            (set (reg:DI 2 cx [1315])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1313])
                (plus:DI (ashift:DI (reg:DI 2 cx [1315])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1313])))
            (set (mem/c:BLK (reg/f:DI 5 di [1313]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1314]))
            (use (reg:DI 2 cx [1315]))
        ]) "CLDRAD.f":224 984 {*rep_stosdi_rex64}
     (nil))
(insn 4460 568 569 50 (set (reg/f:DI 1 dx [1313])
        (reg/f:DI 5 di [1313])) "CLDRAD.f":224 85 {*movdi_internal}
     (nil))
(insn 569 4460 570 50 (set (mem/c:SI (reg/f:DI 1 dx [1313]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1314])) "CLDRAD.f":224 86 {*movsi_internal}
     (nil))
(insn 570 569 571 50 (parallel [
            (set (reg/f:DI 1 dx [1313])
                (plus:DI (reg/f:DI 1 dx [1313])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":224 222 {*adddi_1}
     (nil))
(insn 571 570 572 50 (set (reg:DI 2 cx [1316])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":225 85 {*movdi_internal}
     (nil))
(insn 572 571 573 50 (set (reg:DI 1 dx [1317])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":225 85 {*movdi_internal}
     (nil))
(insn 573 572 576 50 (set (reg:DI 0 ax [1318])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":225 85 {*movdi_internal}
     (nil))
(insn 576 573 577 50 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f2038fb4480 *.LC8>)) "CLDRAD.f":225 85 {*movdi_internal}
     (nil))
(insn 577 576 578 50 (set (reg:DI 5 di)
        (reg:DI 0 ax [1318])) "CLDRAD.f":225 85 {*movdi_internal}
     (nil))
(insn 578 577 579 50 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":225 88 {*movqi_internal}
     (nil))
(call_insn 579 578 580 50 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f203929eb00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "CLDRAD.f":225 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 580 579 581 50 (set (reg:SI 0 ax [orig:185 _99 ] [185])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 160 [0xa0]))) [2 rqstfld.iget+144 S4 A128])) "CLDRAD.f":227 86 {*movsi_internal}
     (nil))
(insn 581 580 4714 50 (set (reg:DI 0 ax [orig:186 _100 ] [186])
        (sign_extend:DI (reg:SI 0 ax [orig:185 _99 ] [185]))) "CLDRAD.f":227 149 {*extendsidi2_rex64}
     (nil))
(insn 4714 581 583 50 (set (reg:DI 1 dx [orig:187 _101 ] [187])
        (plus:DI (reg:DI 0 ax [orig:186 _100 ] [186])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":227 218 {*leadi}
     (nil))
(insn 583 4714 584 50 (set (reg:DI 0 ax [1319])
        (reg:DI 1 dx [orig:187 _101 ] [187])) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 584 583 586 50 (parallel [
            (set (reg:DI 0 ax [1320])
                (ashift:DI (reg:DI 0 ax [1319])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":227 551 {*ashldi3_1}
     (nil))
(insn 586 584 587 50 (parallel [
            (set (reg:DI 0 ax [1319])
                (minus:DI (reg:DI 0 ax [1319])
                    (reg:DI 1 dx [orig:187 _101 ] [187])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":227 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:187 _101 ] [187])
            (const_int 15 [0xf]))
        (nil)))
(insn 587 586 590 50 (parallel [
            (set (reg:DI 0 ax [1321])
                (ashift:DI (reg:DI 0 ax [1319])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":227 551 {*ashldi3_1}
     (nil))
(insn 590 587 591 50 (parallel [
            (set (reg:DI 0 ax [1322])
                (plus:DI (reg:DI 0 ax [orig:188 _102 ] [188])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":227 222 {*adddi_1}
     (nil))
(insn 591 590 4715 50 (parallel [
            (set (reg:DI 0 ax [1323])
                (ashift:DI (reg:DI 0 ax [1322])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":227 551 {*ashldi3_1}
     (nil))
(insn 4715 591 593 50 (set (reg/f:DI 1 dx [orig:189 _103 ] [189])
        (plus:DI (reg:DI 0 ax [1323])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":227 218 {*leadi}
     (nil))
(insn 593 4715 594 50 (set (reg:DI 4 si [1324])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 594 593 595 50 (set (reg:DI 2 cx [1325])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 595 594 596 50 (set (reg:DI 0 ax [1326])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 596 595 597 50 (set (reg:DI 38 r9)
        (reg:DI 4 si [1324])) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 597 596 598 50 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1325])) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 598 597 600 50 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1326])) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 600 598 601 50 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 160 [0xa0])))) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 601 600 602 50 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":227 85 {*movdi_internal}
     (nil))
(insn 602 601 603 50 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":227 88 {*movqi_internal}
     (nil))
(call_insn 603 602 604 50 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":227 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       51 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 51, loop depth 0, maybe hot
;;  prev block 50, next block 52, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       49
;;              50 (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 604 603 605 51 26 (nil) [1 uses])
(note 605 604 606 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 606 605 607 51 (set (reg:SI 0 ax [orig:190 _104 ] [190])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 164 [0xa4]))) [2 rqstfld.iget+148 S4 A32])) "CLDRAD.f":231 86 {*movsi_internal}
     (nil))
(insn 607 606 608 51 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:190 _104 ] [190])
            (const_int 0 [0]))) "CLDRAD.f":231 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 608 607 609 51 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 662)
            (pc))) "CLDRAD.f":231 682 {*jcc}
     (nil)
 -> 662)
;;  succ:       52 (FALLTHRU)
;;              53
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 53, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 609 608 610 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 610 609 611 52 (set (reg:DI 1 dx [1327])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 611 610 612 52 (set (reg:DI 0 ax [1328])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 612 611 613 52 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":232 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 613 612 614 52 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":232 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 614 613 615 52 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1327])) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 615 614 616 52 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1328])) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 616 615 617 52 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 617 616 618 52 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("cnvcld_") [flags 0x202]  <var_decl 0x7f20392a8d80 cnvcld>)
                (const_int 237048 [0x39df8])))) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 618 617 619 52 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 619 618 620 52 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f2038fb4510 *.LC9>)) "CLDRAD.f":232 85 {*movdi_internal}
     (nil))
(insn 620 619 621 52 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":232 88 {*movqi_internal}
     (nil))
(call_insn 621 620 622 52 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":232 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 622 621 623 52 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":232 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 623 622 624 52 (set (reg/f:DI 1 dx [1329])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":233 85 {*movdi_internal}
     (nil))
(insn 624 623 625 52 (set (reg:DI 0 ax [1330])
        (const_int 0 [0])) "CLDRAD.f":233 85 {*movdi_internal}
     (nil))
(insn 625 624 4461 52 (set (reg:DI 2 cx [1331])
        (const_int 12 [0xc])) "CLDRAD.f":233 85 {*movdi_internal}
     (nil))
(insn 4461 625 626 52 (set (reg/f:DI 5 di [1329])
        (reg/f:DI 1 dx [1329])) "CLDRAD.f":233 85 {*movdi_internal}
     (nil))
(insn 626 4461 4462 52 (parallel [
            (set (reg:DI 2 cx [1331])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1329])
                (plus:DI (ashift:DI (reg:DI 2 cx [1331])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1329])))
            (set (mem/c:BLK (reg/f:DI 5 di [1329]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1330]))
            (use (reg:DI 2 cx [1331]))
        ]) "CLDRAD.f":233 984 {*rep_stosdi_rex64}
     (nil))
(insn 4462 626 627 52 (set (reg/f:DI 1 dx [1329])
        (reg/f:DI 5 di [1329])) "CLDRAD.f":233 85 {*movdi_internal}
     (nil))
(insn 627 4462 628 52 (set (mem/c:SI (reg/f:DI 1 dx [1329]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1330])) "CLDRAD.f":233 86 {*movsi_internal}
     (nil))
(insn 628 627 629 52 (parallel [
            (set (reg/f:DI 1 dx [1329])
                (plus:DI (reg/f:DI 1 dx [1329])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":233 222 {*adddi_1}
     (nil))
(insn 629 628 630 52 (set (reg:DI 2 cx [1332])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":234 85 {*movdi_internal}
     (nil))
(insn 630 629 631 52 (set (reg:DI 1 dx [1333])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":234 85 {*movdi_internal}
     (nil))
(insn 631 630 634 52 (set (reg:DI 0 ax [1334])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":234 85 {*movdi_internal}
     (nil))
(insn 634 631 635 52 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f2038fb4480 *.LC8>)) "CLDRAD.f":234 85 {*movdi_internal}
     (nil))
(insn 635 634 636 52 (set (reg:DI 5 di)
        (reg:DI 0 ax [1334])) "CLDRAD.f":234 85 {*movdi_internal}
     (nil))
(insn 636 635 637 52 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":234 88 {*movqi_internal}
     (nil))
(call_insn 637 636 638 52 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f203929eb00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "CLDRAD.f":234 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 638 637 639 52 (set (reg:SI 0 ax [orig:191 _105 ] [191])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 164 [0xa4]))) [2 rqstfld.iget+148 S4 A32])) "CLDRAD.f":236 86 {*movsi_internal}
     (nil))
(insn 639 638 4712 52 (set (reg:DI 0 ax [orig:192 _106 ] [192])
        (sign_extend:DI (reg:SI 0 ax [orig:191 _105 ] [191]))) "CLDRAD.f":236 149 {*extendsidi2_rex64}
     (nil))
(insn 4712 639 641 52 (set (reg:DI 1 dx [orig:193 _107 ] [193])
        (plus:DI (reg:DI 0 ax [orig:192 _106 ] [192])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":236 218 {*leadi}
     (nil))
(insn 641 4712 642 52 (set (reg:DI 0 ax [1335])
        (reg:DI 1 dx [orig:193 _107 ] [193])) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 642 641 644 52 (parallel [
            (set (reg:DI 0 ax [1336])
                (ashift:DI (reg:DI 0 ax [1335])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":236 551 {*ashldi3_1}
     (nil))
(insn 644 642 645 52 (parallel [
            (set (reg:DI 0 ax [1335])
                (minus:DI (reg:DI 0 ax [1335])
                    (reg:DI 1 dx [orig:193 _107 ] [193])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":236 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:193 _107 ] [193])
            (const_int 15 [0xf]))
        (nil)))
(insn 645 644 648 52 (parallel [
            (set (reg:DI 0 ax [1337])
                (ashift:DI (reg:DI 0 ax [1335])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":236 551 {*ashldi3_1}
     (nil))
(insn 648 645 649 52 (parallel [
            (set (reg:DI 0 ax [1338])
                (plus:DI (reg:DI 0 ax [orig:194 _108 ] [194])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":236 222 {*adddi_1}
     (nil))
(insn 649 648 4713 52 (parallel [
            (set (reg:DI 0 ax [1339])
                (ashift:DI (reg:DI 0 ax [1338])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":236 551 {*ashldi3_1}
     (nil))
(insn 4713 649 651 52 (set (reg/f:DI 1 dx [orig:195 _109 ] [195])
        (plus:DI (reg:DI 0 ax [1339])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":236 218 {*leadi}
     (nil))
(insn 651 4713 652 52 (set (reg:DI 4 si [1340])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 652 651 653 52 (set (reg:DI 2 cx [1341])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 653 652 654 52 (set (reg:DI 0 ax [1342])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 654 653 655 52 (set (reg:DI 38 r9)
        (reg:DI 4 si [1340])) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 655 654 656 52 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1341])) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 656 655 658 52 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1342])) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 658 656 659 52 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 164 [0xa4])))) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 659 658 660 52 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":236 85 {*movdi_internal}
     (nil))
(insn 660 659 661 52 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":236 88 {*movqi_internal}
     (nil))
(call_insn 661 660 662 52 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":236 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       53 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 53, loop depth 0, maybe hot
;;  prev block 52, next block 54, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       51
;;              52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 662 661 663 53 27 (nil) [1 uses])
(note 663 662 664 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 664 663 665 53 (set (reg:SI 0 ax [orig:196 _110 ] [196])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 168 [0xa8]))) [2 rqstfld.iget+152 S4 A64])) "CLDRAD.f":240 86 {*movsi_internal}
     (nil))
(insn 665 664 666 53 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:196 _110 ] [196])
            (const_int 0 [0]))) "CLDRAD.f":240 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 666 665 667 53 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 720)
            (pc))) "CLDRAD.f":240 682 {*jcc}
     (nil)
 -> 720)
;;  succ:       54 (FALLTHRU)
;;              55
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 54, loop depth 0, maybe hot
;;  prev block 53, next block 55, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 667 666 668 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 668 667 669 54 (set (reg:DI 1 dx [1343])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 669 668 670 54 (set (reg:DI 0 ax [1344])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 670 669 671 54 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":241 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 671 670 672 54 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":241 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 672 671 673 54 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1343])) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 673 672 674 54 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1344])) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 674 673 675 54 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 675 674 676 54 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("cnvcld_") [flags 0x202]  <var_decl 0x7f20392a8d80 cnvcld>)
                (const_int 355572 [0x56cf4])))) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 676 675 677 54 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 677 676 678 54 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f2038fb45a0 *.LC10>)) "CLDRAD.f":241 85 {*movdi_internal}
     (nil))
(insn 678 677 679 54 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":241 88 {*movqi_internal}
     (nil))
(call_insn 679 678 680 54 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":241 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 680 679 681 54 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":241 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 681 680 682 54 (set (reg/f:DI 1 dx [1345])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":242 85 {*movdi_internal}
     (nil))
(insn 682 681 683 54 (set (reg:DI 0 ax [1346])
        (const_int 0 [0])) "CLDRAD.f":242 85 {*movdi_internal}
     (nil))
(insn 683 682 4463 54 (set (reg:DI 2 cx [1347])
        (const_int 12 [0xc])) "CLDRAD.f":242 85 {*movdi_internal}
     (nil))
(insn 4463 683 684 54 (set (reg/f:DI 5 di [1345])
        (reg/f:DI 1 dx [1345])) "CLDRAD.f":242 85 {*movdi_internal}
     (nil))
(insn 684 4463 4464 54 (parallel [
            (set (reg:DI 2 cx [1347])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1345])
                (plus:DI (ashift:DI (reg:DI 2 cx [1347])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1345])))
            (set (mem/c:BLK (reg/f:DI 5 di [1345]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1346]))
            (use (reg:DI 2 cx [1347]))
        ]) "CLDRAD.f":242 984 {*rep_stosdi_rex64}
     (nil))
(insn 4464 684 685 54 (set (reg/f:DI 1 dx [1345])
        (reg/f:DI 5 di [1345])) "CLDRAD.f":242 85 {*movdi_internal}
     (nil))
(insn 685 4464 686 54 (set (mem/c:SI (reg/f:DI 1 dx [1345]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1346])) "CLDRAD.f":242 86 {*movsi_internal}
     (nil))
(insn 686 685 687 54 (parallel [
            (set (reg/f:DI 1 dx [1345])
                (plus:DI (reg/f:DI 1 dx [1345])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":242 222 {*adddi_1}
     (nil))
(insn 687 686 688 54 (set (reg:DI 2 cx [1348])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":243 85 {*movdi_internal}
     (nil))
(insn 688 687 689 54 (set (reg:DI 1 dx [1349])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":243 85 {*movdi_internal}
     (nil))
(insn 689 688 692 54 (set (reg:DI 0 ax [1350])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":243 85 {*movdi_internal}
     (nil))
(insn 692 689 693 54 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f2038fb4480 *.LC8>)) "CLDRAD.f":243 85 {*movdi_internal}
     (nil))
(insn 693 692 694 54 (set (reg:DI 5 di)
        (reg:DI 0 ax [1350])) "CLDRAD.f":243 85 {*movdi_internal}
     (nil))
(insn 694 693 695 54 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":243 88 {*movqi_internal}
     (nil))
(call_insn 695 694 696 54 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f203929eb00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "CLDRAD.f":243 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 696 695 697 54 (set (reg:SI 0 ax [orig:197 _111 ] [197])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 168 [0xa8]))) [2 rqstfld.iget+152 S4 A64])) "CLDRAD.f":245 86 {*movsi_internal}
     (nil))
(insn 697 696 4710 54 (set (reg:DI 0 ax [orig:198 _112 ] [198])
        (sign_extend:DI (reg:SI 0 ax [orig:197 _111 ] [197]))) "CLDRAD.f":245 149 {*extendsidi2_rex64}
     (nil))
(insn 4710 697 699 54 (set (reg:DI 1 dx [orig:199 _113 ] [199])
        (plus:DI (reg:DI 0 ax [orig:198 _112 ] [198])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":245 218 {*leadi}
     (nil))
(insn 699 4710 700 54 (set (reg:DI 0 ax [1351])
        (reg:DI 1 dx [orig:199 _113 ] [199])) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 700 699 702 54 (parallel [
            (set (reg:DI 0 ax [1352])
                (ashift:DI (reg:DI 0 ax [1351])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":245 551 {*ashldi3_1}
     (nil))
(insn 702 700 703 54 (parallel [
            (set (reg:DI 0 ax [1351])
                (minus:DI (reg:DI 0 ax [1351])
                    (reg:DI 1 dx [orig:199 _113 ] [199])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":245 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:199 _113 ] [199])
            (const_int 15 [0xf]))
        (nil)))
(insn 703 702 706 54 (parallel [
            (set (reg:DI 0 ax [1353])
                (ashift:DI (reg:DI 0 ax [1351])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":245 551 {*ashldi3_1}
     (nil))
(insn 706 703 707 54 (parallel [
            (set (reg:DI 0 ax [1354])
                (plus:DI (reg:DI 0 ax [orig:200 _114 ] [200])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":245 222 {*adddi_1}
     (nil))
(insn 707 706 4711 54 (parallel [
            (set (reg:DI 0 ax [1355])
                (ashift:DI (reg:DI 0 ax [1354])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":245 551 {*ashldi3_1}
     (nil))
(insn 4711 707 709 54 (set (reg/f:DI 1 dx [orig:201 _115 ] [201])
        (plus:DI (reg:DI 0 ax [1355])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":245 218 {*leadi}
     (nil))
(insn 709 4711 710 54 (set (reg:DI 4 si [1356])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 710 709 711 54 (set (reg:DI 2 cx [1357])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 711 710 712 54 (set (reg:DI 0 ax [1358])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 712 711 713 54 (set (reg:DI 38 r9)
        (reg:DI 4 si [1356])) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 713 712 714 54 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1357])) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 714 713 716 54 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1358])) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 716 714 717 54 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 168 [0xa8])))) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 717 716 718 54 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":245 85 {*movdi_internal}
     (nil))
(insn 718 717 719 54 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":245 88 {*movqi_internal}
     (nil))
(call_insn 719 718 720 54 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":245 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       55 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 55, loop depth 0, maybe hot
;;  prev block 54, next block 56, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       53
;;              54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 720 719 721 55 28 (nil) [1 uses])
(note 721 720 722 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 722 721 723 55 (set (reg:SI 0 ax [orig:202 _116 ] [202])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 656 [0x290]))) [2 rqstfld.iget+640 S4 A128])) "CLDRAD.f":249 86 {*movsi_internal}
     (nil))
(insn 723 722 724 55 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:202 _116 ] [202])
            (const_int 0 [0]))) "CLDRAD.f":249 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 724 723 725 55 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 871)
            (pc))) "CLDRAD.f":249 682 {*jcc}
     (nil)
 -> 871)
;;  succ:       56 (FALLTHRU)
;;              69
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 56, loop depth 0, maybe hot
;;  prev block 55, next block 57, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(note 725 724 726 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 726 725 727 56 (set (reg:SI 1 dx [orig:1122 _1253 ] [1122])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":250 86 {*movsi_internal}
     (nil))
(insn 727 726 728 56 (set (reg:SI 0 ax [orig:1123 _1254 ] [1123])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":250 86 {*movsi_internal}
     (nil))
(insn 728 727 814 56 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1122 _1253 ] [1122])) "CLDRAD.f":250 86 {*movsi_internal}
     (nil))
;;  succ:       57 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 57, loop depth 0, maybe hot
;;  prev block 56, next block 58, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;;              65 [always] 
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 814 728 729 57 35 (nil) [1 uses])
(note 729 814 730 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 730 729 731 57 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1123 _1254 ] [1123]))) "CLDRAD.f":250 11 {*cmpsi_1}
     (nil))
(insn 731 730 732 57 (set (reg:QI 1 dx [1359])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":250 678 {*setcc_qi}
     (nil))
(insn 732 731 733 57 (set (reg:SI 1 dx [orig:1124 _1256 ] [1124])
        (zero_extend:SI (reg:QI 1 dx [1359]))) "CLDRAD.f":250 140 {*zero_extendqisi2}
     (nil))
(insn 733 732 734 57 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1124 _1256 ] [1124])
            (const_int 0 [0]))) "CLDRAD.f":250 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 734 733 735 57 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4331)
            (pc))) "CLDRAD.f":250 682 {*jcc}
     (nil)
 -> 4331)
;;  succ:       67
;;              58 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 58, loop depth 0, maybe hot
;;  prev block 57, next block 59, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 735 734 736 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 736 735 808 58 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":251 86 {*movsi_internal}
     (nil))
;;  succ:       59 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 59, loop depth 0, maybe hot
;;  prev block 58, next block 60, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       58 (FALLTHRU)
;;              64 [always] 
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 808 736 737 59 34 (nil) [1 uses])
(note 737 808 738 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 738 737 739 59 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":251 11 {*cmpsi_1}
     (nil))
(insn 739 738 740 59 (set (reg:QI 1 dx [1360])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":251 678 {*setcc_qi}
     (nil))
(insn 740 739 741 59 (set (reg:SI 1 dx [orig:1125 _1258 ] [1125])
        (zero_extend:SI (reg:QI 1 dx [1360]))) "CLDRAD.f":251 140 {*zero_extendqisi2}
     (nil))
(insn 741 740 742 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1125 _1258 ] [1125])
            (const_int 0 [0]))) "CLDRAD.f":251 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 742 741 743 59 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4334)
            (pc))) "CLDRAD.f":251 682 {*jcc}
     (nil)
 -> 4334)
;;  succ:       65
;;              60 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 60, loop depth 0, maybe hot
;;  prev block 59, next block 61, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 743 742 744 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 744 743 745 60 (set (reg:SI 1 dx [1361])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 745 744 746 60 (set (reg:DI 1 dx [orig:203 _117 ] [203])
        (sign_extend:DI (reg:SI 1 dx [1361]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 746 745 747 60 (parallel [
            (set (reg:DI 2 cx [orig:204 _118 ] [204])
                (mult:DI (reg:DI 1 dx [orig:203 _117 ] [203])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 349 {*muldi3_1}
     (nil))
(insn 747 746 748 60 (set (reg:SI 1 dx [1362])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 748 747 749 60 (set (reg:DI 1 dx [orig:205 _119 ] [205])
        (sign_extend:DI (reg:SI 1 dx [1362]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 749 748 4708 60 (parallel [
            (set (reg:DI 1 dx [orig:206 _120 ] [206])
                (plus:DI (reg:DI 1 dx [orig:205 _119 ] [205])
                    (reg:DI 2 cx [orig:204 _118 ] [204])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 4708 749 751 60 (set (reg:DI 2 cx [orig:207 _121 ] [207])
        (plus:DI (reg:DI 1 dx [orig:206 _120 ] [206])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":253 218 {*leadi}
     (nil))
(insn 751 4708 752 60 (set (reg/f:DI 1 dx [1363])
        (symbol_ref:DI ("cnvcld_") [flags 0x202]  <var_decl 0x7f20392a8d80 cnvcld>)) "CLDRAD.f":253 85 {*movdi_internal}
     (nil))
(insn 752 751 753 60 (parallel [
            (set (reg:DI 2 cx [1364])
                (plus:DI (reg:DI 2 cx [orig:207 _121 ] [207])
                    (const_int 59262 [0xe77e])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 753 752 754 60 (set (reg:SF 21 xmm0 [orig:1086 M.10_1059 ] [1086])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1364])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1363])) [1 cnvcld.cfracm S4 A32])) "CLDRAD.f":253 131 {*movsf_internal}
     (nil))
(insn 754 753 755 60 (set (reg:SI 1 dx [1365])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 755 754 756 60 (set (reg:DI 1 dx [orig:208 _122 ] [208])
        (sign_extend:DI (reg:SI 1 dx [1365]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 756 755 757 60 (parallel [
            (set (reg:DI 2 cx [orig:209 _123 ] [209])
                (mult:DI (reg:DI 1 dx [orig:208 _122 ] [208])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 349 {*muldi3_1}
     (nil))
(insn 757 756 758 60 (set (reg:SI 1 dx [1366])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 758 757 759 60 (set (reg:DI 1 dx [orig:210 _124 ] [210])
        (sign_extend:DI (reg:SI 1 dx [1366]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 759 758 4709 60 (parallel [
            (set (reg:DI 1 dx [orig:211 _125 ] [211])
                (plus:DI (reg:DI 1 dx [orig:210 _124 ] [210])
                    (reg:DI 2 cx [orig:209 _123 ] [209])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 4709 759 761 60 (set (reg:DI 2 cx [orig:212 _126 ] [212])
        (plus:DI (reg:DI 1 dx [orig:211 _125 ] [211])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":253 218 {*leadi}
     (nil))
(insn 761 4709 762 60 (set (reg/f:DI 1 dx [1367])
        (symbol_ref:DI ("cnvcld_") [flags 0x202]  <var_decl 0x7f20392a8d80 cnvcld>)) "CLDRAD.f":253 85 {*movdi_internal}
     (nil))
(insn 762 761 763 60 (parallel [
            (set (reg:DI 2 cx [1368])
                (plus:DI (reg:DI 2 cx [orig:212 _126 ] [212])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 763 762 764 60 (set (reg:SF 22 xmm1 [orig:1126 _1261 ] [1126])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1368])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1367])) [1 cnvcld.cfrach S4 A32])) "CLDRAD.f":253 131 {*movsf_internal}
     (nil))
(insn 764 763 765 60 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 22 xmm1 [orig:1126 _1261 ] [1126])
            (reg:SF 21 xmm0 [orig:1086 M.10_1059 ] [1086]))) "CLDRAD.f":253 53 {*cmpisf}
     (nil))
(insn 765 764 766 60 (set (reg:QI 1 dx [1369])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":253 678 {*setcc_qi}
     (nil))
(insn 766 765 767 60 (set (reg:SI 2 cx [orig:213 _127 ] [213])
        (zero_extend:SI (reg:QI 1 dx [1369]))) "CLDRAD.f":253 140 {*zero_extendqisi2}
     (nil))
(insn 767 766 768 60 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:1086 M.10_1059 ] [1086])
                    (reg:SF 21 xmm0 [orig:1086 M.10_1059 ] [1086]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":253 54 {*cmpiusf}
     (nil))
(insn 768 767 769 60 (set (reg:QI 1 dx [1370])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":253 678 {*setcc_qi}
     (nil))
(insn 769 768 770 60 (set (reg:SI 1 dx [orig:214 _128 ] [214])
        (zero_extend:SI (reg:QI 1 dx [1370]))) "CLDRAD.f":253 140 {*zero_extendqisi2}
     (nil))
(insn 770 769 771 60 (parallel [
            (set (reg:SI 1 dx [orig:215 _129 ] [215])
                (ior:SI (reg:SI 1 dx [orig:214 _128 ] [214])
                    (reg:SI 2 cx [orig:213 _127 ] [213])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 450 {*iorsi_1}
     (nil))
(insn 771 770 772 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:215 _129 ] [215])
            (const_int 0 [0]))) "CLDRAD.f":253 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 772 771 773 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 774)
            (pc))) "CLDRAD.f":253 682 {*jcc}
     (nil)
 -> 774)
;;  succ:       61 (FALLTHRU)
;;              62
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1]

;; basic block 61, loop depth 0, maybe hot
;;  prev block 60, next block 62, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1]
;; lr  use 	 6 [bp] 7 [sp] 22 [xmm1]
;; lr  def 	 21 [xmm0]
(note 773 772 5 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 5 773 774 61 (set (reg:SF 21 xmm0 [orig:1086 M.10_1059 ] [1086])
        (reg:SF 22 xmm1 [orig:1126 _1261 ] [1126])) "CLDRAD.f":253 131 {*movsf_internal}
     (nil))
;;  succ:       62 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]

;; basic block 62, loop depth 0, maybe hot
;;  prev block 61, next block 63, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60
;;              61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]
;; lr  use 	 6 [bp] 7 [sp] 21 [xmm0]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 22 [xmm1]
(code_label 774 5 775 62 32 (nil) [1 uses])
(note 775 774 776 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 776 775 777 62 (set (reg:SI 1 dx [1371])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 777 776 778 62 (set (reg:DI 1 dx [orig:216 _130 ] [216])
        (sign_extend:DI (reg:SI 1 dx [1371]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 778 777 779 62 (parallel [
            (set (reg:DI 2 cx [orig:217 _131 ] [217])
                (mult:DI (reg:DI 1 dx [orig:216 _130 ] [216])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 349 {*muldi3_1}
     (nil))
(insn 779 778 780 62 (set (reg:SI 1 dx [1372])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 780 779 781 62 (set (reg:DI 1 dx [orig:218 _132 ] [218])
        (sign_extend:DI (reg:SI 1 dx [1372]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 781 780 4707 62 (parallel [
            (set (reg:DI 1 dx [orig:219 _133 ] [219])
                (plus:DI (reg:DI 1 dx [orig:218 _132 ] [218])
                    (reg:DI 2 cx [orig:217 _131 ] [217])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 4707 781 783 62 (set (reg:DI 2 cx [orig:220 _134 ] [220])
        (plus:DI (reg:DI 1 dx [orig:219 _133 ] [219])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":253 218 {*leadi}
     (nil))
(insn 783 4707 784 62 (set (reg/f:DI 1 dx [1373])
        (symbol_ref:DI ("cnvcld_") [flags 0x202]  <var_decl 0x7f20392a8d80 cnvcld>)) "CLDRAD.f":253 85 {*movdi_internal}
     (nil))
(insn 784 783 785 62 (parallel [
            (set (reg:DI 2 cx [1374])
                (plus:DI (reg:DI 2 cx [orig:220 _134 ] [220])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 785 784 786 62 (set (reg:SF 22 xmm1 [orig:1087 M.11_1060 ] [1087])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1374])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1373])) [1 cnvcld.cfracl S4 A32])) "CLDRAD.f":253 131 {*movsf_internal}
     (nil))
(insn 786 785 787 62 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1086 M.10_1059 ] [1086])
            (reg:SF 22 xmm1 [orig:1087 M.11_1060 ] [1087]))) "CLDRAD.f":253 53 {*cmpisf}
     (nil))
(insn 787 786 788 62 (set (reg:QI 1 dx [1375])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":253 678 {*setcc_qi}
     (nil))
(insn 788 787 789 62 (set (reg:SI 2 cx [orig:221 _135 ] [221])
        (zero_extend:SI (reg:QI 1 dx [1375]))) "CLDRAD.f":253 140 {*zero_extendqisi2}
     (nil))
(insn 789 788 790 62 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 22 xmm1 [orig:1087 M.11_1060 ] [1087])
                    (reg:SF 22 xmm1 [orig:1087 M.11_1060 ] [1087]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":253 54 {*cmpiusf}
     (nil))
(insn 790 789 791 62 (set (reg:QI 1 dx [1376])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":253 678 {*setcc_qi}
     (nil))
(insn 791 790 792 62 (set (reg:SI 1 dx [orig:222 _136 ] [222])
        (zero_extend:SI (reg:QI 1 dx [1376]))) "CLDRAD.f":253 140 {*zero_extendqisi2}
     (nil))
(insn 792 791 793 62 (parallel [
            (set (reg:SI 1 dx [orig:223 _137 ] [223])
                (ior:SI (reg:SI 1 dx [orig:222 _136 ] [222])
                    (reg:SI 2 cx [orig:221 _135 ] [221])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 450 {*iorsi_1}
     (nil))
(insn 793 792 794 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:223 _137 ] [223])
            (const_int 0 [0]))) "CLDRAD.f":253 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 794 793 795 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 796)
            (pc))) "CLDRAD.f":253 682 {*jcc}
     (nil)
 -> 796)
;;  succ:       63 (FALLTHRU)
;;              64
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1]

;; basic block 63, loop depth 0, maybe hot
;;  prev block 62, next block 64, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       62 (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0]
;; lr  use 	 6 [bp] 7 [sp] 21 [xmm0]
;; lr  def 	 22 [xmm1]
(note 795 794 6 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 6 795 796 63 (set (reg:SF 22 xmm1 [orig:1087 M.11_1060 ] [1087])
        (reg:SF 21 xmm0 [orig:1086 M.10_1059 ] [1086])) "CLDRAD.f":253 131 {*movsf_internal}
     (nil))
;;  succ:       64 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1]

;; basic block 64, loop depth 0, maybe hot
;;  prev block 63, next block 65, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       62
;;              63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame] 22 [xmm1]
;; lr  use 	 6 [bp] 7 [sp] 22 [xmm1]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
(code_label 796 6 797 64 33 (nil) [1 uses])
(note 797 796 798 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 798 797 799 64 (set (reg:SI 1 dx [1377])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 799 798 800 64 (set (reg:DI 1 dx [orig:224 _138 ] [224])
        (sign_extend:DI (reg:SI 1 dx [1377]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 800 799 801 64 (parallel [
            (set (reg:DI 2 cx [orig:225 _139 ] [225])
                (mult:DI (reg:DI 1 dx [orig:224 _138 ] [224])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 349 {*muldi3_1}
     (nil))
(insn 801 800 802 64 (set (reg:SI 1 dx [1378])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":253 86 {*movsi_internal}
     (nil))
(insn 802 801 803 64 (set (reg:DI 1 dx [orig:226 _140 ] [226])
        (sign_extend:DI (reg:SI 1 dx [1378]))) "CLDRAD.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 803 802 4706 64 (parallel [
            (set (reg:DI 1 dx [orig:227 _141 ] [227])
                (plus:DI (reg:DI 1 dx [orig:226 _140 ] [226])
                    (reg:DI 2 cx [orig:225 _139 ] [225])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":253 222 {*adddi_1}
     (nil))
(insn 4706 803 805 64 (set (reg:DI 2 cx [orig:228 _142 ] [228])
        (plus:DI (reg:DI 1 dx [orig:227 _141 ] [227])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":253 218 {*leadi}
     (nil))
(insn 805 4706 806 64 (set (reg/f:DI 1 dx [1379])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":253 85 {*movdi_internal}
     (nil))
(insn 806 805 807 64 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:228 _142 ] [228])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1379])) [1 egrid1 S4 A32])
        (reg:SF 22 xmm1 [orig:1087 M.11_1060 ] [1087])) "CLDRAD.f":253 131 {*movsf_internal}
     (nil))
(insn 807 806 4175 64 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":251 221 {*addsi_1}
     (nil))
(jump_insn 4175 807 4176 64 (set (pc)
        (label_ref 808)) "CLDRAD.f":251 683 {jump}
     (nil)
 -> 808)
;;  succ:       59 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4176 4175 4334)
;; basic block 65, loop depth 0, maybe hot
;;  prev block 64, next block 67, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       59
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4334 4176 4333 65 239 (nil) [1 uses])
(note 4333 4334 4335 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 4335 4333 813 65 (const_int 0 [0]) "CLDRAD.f":253 718 {nop}
     (nil))
(insn 813 4335 4177 65 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":250 221 {*addsi_1}
     (nil))
(jump_insn 4177 813 4178 65 (set (pc)
        (label_ref 814)) "CLDRAD.f":250 683 {jump}
     (nil)
 -> 814)
;;  succ:       57 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4178 4177 4331)
;; basic block 67, loop depth 0, maybe hot
;;  prev block 65, next block 69, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       57
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4331 4178 4330 67 238 (nil) [1 uses])
(note 4330 4331 4332 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 4332 4330 819 67 (const_int 0 [0]) "CLDRAD.f":251 718 {nop}
     (nil))
(insn 819 4332 820 67 (set (reg:DI 1 dx [1380])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 820 819 821 67 (set (reg:DI 0 ax [1381])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 821 820 822 67 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":256 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 822 821 823 67 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":256 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 823 822 824 67 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1380])) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 824 823 825 67 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1381])) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 825 824 826 67 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 826 825 827 67 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 827 826 828 67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 828 827 829 67 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f2038fb4630 *.LC11>)) "CLDRAD.f":256 85 {*movdi_internal}
     (nil))
(insn 829 828 830 67 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":256 88 {*movqi_internal}
     (nil))
(call_insn 830 829 831 67 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":256 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 831 830 832 67 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":256 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 832 831 833 67 (set (reg/f:DI 1 dx [1382])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":257 85 {*movdi_internal}
     (nil))
(insn 833 832 834 67 (set (reg:DI 0 ax [1383])
        (const_int 0 [0])) "CLDRAD.f":257 85 {*movdi_internal}
     (nil))
(insn 834 833 4465 67 (set (reg:DI 2 cx [1384])
        (const_int 12 [0xc])) "CLDRAD.f":257 85 {*movdi_internal}
     (nil))
(insn 4465 834 835 67 (set (reg/f:DI 5 di [1382])
        (reg/f:DI 1 dx [1382])) "CLDRAD.f":257 85 {*movdi_internal}
     (nil))
(insn 835 4465 4466 67 (parallel [
            (set (reg:DI 2 cx [1384])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1382])
                (plus:DI (ashift:DI (reg:DI 2 cx [1384])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1382])))
            (set (mem/c:BLK (reg/f:DI 5 di [1382]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1383]))
            (use (reg:DI 2 cx [1384]))
        ]) "CLDRAD.f":257 984 {*rep_stosdi_rex64}
     (nil))
(insn 4466 835 836 67 (set (reg/f:DI 1 dx [1382])
        (reg/f:DI 5 di [1382])) "CLDRAD.f":257 85 {*movdi_internal}
     (nil))
(insn 836 4466 837 67 (set (mem/c:SI (reg/f:DI 1 dx [1382]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1383])) "CLDRAD.f":257 86 {*movsi_internal}
     (nil))
(insn 837 836 838 67 (parallel [
            (set (reg/f:DI 1 dx [1382])
                (plus:DI (reg/f:DI 1 dx [1382])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":257 222 {*adddi_1}
     (nil))
(insn 838 837 839 67 (set (reg:DI 2 cx [1385])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":258 85 {*movdi_internal}
     (nil))
(insn 839 838 840 67 (set (reg:DI 1 dx [1386])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":258 85 {*movdi_internal}
     (nil))
(insn 840 839 843 67 (set (reg:DI 0 ax [1387])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":258 85 {*movdi_internal}
     (nil))
(insn 843 840 844 67 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f2038fb4480 *.LC8>)) "CLDRAD.f":258 85 {*movdi_internal}
     (nil))
(insn 844 843 845 67 (set (reg:DI 5 di)
        (reg:DI 0 ax [1387])) "CLDRAD.f":258 85 {*movdi_internal}
     (nil))
(insn 845 844 846 67 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":258 88 {*movqi_internal}
     (nil))
(call_insn 846 845 847 67 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f203929eb00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "CLDRAD.f":258 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 847 846 848 67 (set (reg:SI 0 ax [orig:229 _143 ] [229])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 656 [0x290]))) [2 rqstfld.iget+640 S4 A128])) "CLDRAD.f":260 86 {*movsi_internal}
     (nil))
(insn 848 847 4704 67 (set (reg:DI 0 ax [orig:230 _144 ] [230])
        (sign_extend:DI (reg:SI 0 ax [orig:229 _143 ] [229]))) "CLDRAD.f":260 149 {*extendsidi2_rex64}
     (nil))
(insn 4704 848 850 67 (set (reg:DI 1 dx [orig:231 _145 ] [231])
        (plus:DI (reg:DI 0 ax [orig:230 _144 ] [230])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":260 218 {*leadi}
     (nil))
(insn 850 4704 851 67 (set (reg:DI 0 ax [1388])
        (reg:DI 1 dx [orig:231 _145 ] [231])) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 851 850 853 67 (parallel [
            (set (reg:DI 0 ax [1389])
                (ashift:DI (reg:DI 0 ax [1388])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":260 551 {*ashldi3_1}
     (nil))
(insn 853 851 854 67 (parallel [
            (set (reg:DI 0 ax [1388])
                (minus:DI (reg:DI 0 ax [1388])
                    (reg:DI 1 dx [orig:231 _145 ] [231])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":260 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:231 _145 ] [231])
            (const_int 15 [0xf]))
        (nil)))
(insn 854 853 857 67 (parallel [
            (set (reg:DI 0 ax [1390])
                (ashift:DI (reg:DI 0 ax [1388])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":260 551 {*ashldi3_1}
     (nil))
(insn 857 854 858 67 (parallel [
            (set (reg:DI 0 ax [1391])
                (plus:DI (reg:DI 0 ax [orig:232 _146 ] [232])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":260 222 {*adddi_1}
     (nil))
(insn 858 857 4705 67 (parallel [
            (set (reg:DI 0 ax [1392])
                (ashift:DI (reg:DI 0 ax [1391])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":260 551 {*ashldi3_1}
     (nil))
(insn 4705 858 860 67 (set (reg/f:DI 1 dx [orig:233 _147 ] [233])
        (plus:DI (reg:DI 0 ax [1392])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":260 218 {*leadi}
     (nil))
(insn 860 4705 861 67 (set (reg:DI 4 si [1393])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 861 860 862 67 (set (reg:DI 2 cx [1394])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 862 861 863 67 (set (reg:DI 0 ax [1395])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 863 862 864 67 (set (reg:DI 38 r9)
        (reg:DI 4 si [1393])) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 864 863 865 67 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1394])) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 865 864 867 67 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1395])) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 867 865 868 67 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 656 [0x290])))) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 868 867 869 67 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":260 85 {*movdi_internal}
     (nil))
(insn 869 868 870 67 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":260 88 {*movqi_internal}
     (nil))
(call_insn 870 869 871 67 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":260 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       69 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 69, loop depth 0, maybe hot
;;  prev block 67, next block 70, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       55
;;              67 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 871 870 872 69 29 (nil) [1 uses])
(note 872 871 873 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 873 872 874 69 (set (reg:SI 0 ax [orig:234 _148 ] [234])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 588 [0x24c]))) [2 rqstfld.iget+572 S4 A32])) "CLDRAD.f":264 86 {*movsi_internal}
     (nil))
(insn 874 873 875 69 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:234 _148 ] [234])
            (const_int 0 [0]))) "CLDRAD.f":264 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 875 874 876 69 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1067)
            (pc))) "CLDRAD.f":264 682 {*jcc}
     (nil)
 -> 1067)
;;  succ:       70 (FALLTHRU)
;;              87
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 70, loop depth 0, maybe hot
;;  prev block 69, next block 71, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(note 876 875 877 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 877 876 878 70 (set (reg:SI 1 dx [orig:1127 _1273 ] [1127])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":265 86 {*movsi_internal}
     (nil))
(insn 878 877 879 70 (set (reg:SI 0 ax [orig:1128 _1274 ] [1128])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":265 86 {*movsi_internal}
     (nil))
(insn 879 878 976 70 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1127 _1273 ] [1127])) "CLDRAD.f":265 86 {*movsi_internal}
     (nil))
;;  succ:       71 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 71, loop depth 0, maybe hot
;;  prev block 70, next block 72, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;;              78 [always] 
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 976 879 880 71 42 (nil) [1 uses])
(note 880 976 881 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 881 880 882 71 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1128 _1274 ] [1128]))) "CLDRAD.f":265 11 {*cmpsi_1}
     (nil))
(insn 882 881 883 71 (set (reg:QI 1 dx [1396])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":265 678 {*setcc_qi}
     (nil))
(insn 883 882 884 71 (set (reg:SI 1 dx [orig:1129 _1276 ] [1129])
        (zero_extend:SI (reg:QI 1 dx [1396]))) "CLDRAD.f":265 140 {*zero_extendqisi2}
     (nil))
(insn 884 883 885 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1129 _1276 ] [1129])
            (const_int 0 [0]))) "CLDRAD.f":265 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 885 884 886 71 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4337)
            (pc))) "CLDRAD.f":265 682 {*jcc}
     (nil)
 -> 4337)
;;  succ:       80
;;              72 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 72, loop depth 0, maybe hot
;;  prev block 71, next block 73, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 886 885 887 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 887 886 970 72 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":266 86 {*movsi_internal}
     (nil))
;;  succ:       73 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 73, loop depth 0, maybe hot
;;  prev block 72, next block 74, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;;              77 [always] 
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 970 887 888 73 41 (nil) [1 uses])
(note 888 970 889 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 889 888 890 73 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":266 11 {*cmpsi_1}
     (nil))
(insn 890 889 891 73 (set (reg:QI 1 dx [1397])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":266 678 {*setcc_qi}
     (nil))
(insn 891 890 892 73 (set (reg:SI 1 dx [orig:1130 _1278 ] [1130])
        (zero_extend:SI (reg:QI 1 dx [1397]))) "CLDRAD.f":266 140 {*zero_extendqisi2}
     (nil))
(insn 892 891 893 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1130 _1278 ] [1130])
            (const_int 0 [0]))) "CLDRAD.f":266 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 893 892 894 73 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4340)
            (pc))) "CLDRAD.f":266 682 {*jcc}
     (nil)
 -> 4340)
;;  succ:       78
;;              74 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 74, loop depth 0, maybe hot
;;  prev block 73, next block 75, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 4 [si] 17 [flags]
(note 894 893 895 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 895 894 896 74 (set (reg:SI 1 dx [1398])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":267 86 {*movsi_internal}
     (nil))
(insn 896 895 897 74 (set (reg:DI 1 dx [orig:235 _149 ] [235])
        (sign_extend:DI (reg:SI 1 dx [1398]))) "CLDRAD.f":267 149 {*extendsidi2_rex64}
     (nil))
(insn 897 896 898 74 (parallel [
            (set (reg:DI 2 cx [orig:236 _150 ] [236])
                (mult:DI (reg:DI 1 dx [orig:235 _149 ] [235])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 349 {*muldi3_1}
     (nil))
(insn 898 897 899 74 (set (reg:SI 1 dx [1399])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":267 86 {*movsi_internal}
     (nil))
(insn 899 898 900 74 (set (reg:DI 1 dx [orig:237 _151 ] [237])
        (sign_extend:DI (reg:SI 1 dx [1399]))) "CLDRAD.f":267 149 {*extendsidi2_rex64}
     (nil))
(insn 900 899 4702 74 (parallel [
            (set (reg:DI 1 dx [orig:238 _152 ] [238])
                (plus:DI (reg:DI 1 dx [orig:237 _151 ] [237])
                    (reg:DI 2 cx [orig:236 _150 ] [236])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 222 {*adddi_1}
     (nil))
(insn 4702 900 902 74 (set (reg:DI 2 cx [orig:239 _153 ] [239])
        (plus:DI (reg:DI 1 dx [orig:238 _152 ] [238])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":267 218 {*leadi}
     (nil))
(insn 902 4702 903 74 (set (reg/f:DI 1 dx [1400])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":267 85 {*movdi_internal}
     (nil))
(insn 903 902 904 74 (parallel [
            (set (reg:DI 2 cx [1401])
                (plus:DI (reg:DI 2 cx [orig:239 _153 ] [239])
                    (const_int 88895 [0x15b3f])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 222 {*adddi_1}
     (nil))
(insn 904 903 905 74 (set (reg:SI 2 cx [orig:240 _154 ] [240])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1401])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1400])) [2 acmcld.ncfrst S4 A32])) "CLDRAD.f":267 86 {*movsi_internal}
     (nil))
(insn 905 904 906 74 (set (reg:SI 1 dx [1402])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":267 86 {*movsi_internal}
     (nil))
(insn 906 905 907 74 (set (reg:DI 1 dx [orig:241 _155 ] [241])
        (sign_extend:DI (reg:SI 1 dx [1402]))) "CLDRAD.f":267 149 {*extendsidi2_rex64}
     (nil))
(insn 907 906 908 74 (parallel [
            (set (reg:DI 4 si [orig:242 _156 ] [242])
                (mult:DI (reg:DI 1 dx [orig:241 _155 ] [241])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 349 {*muldi3_1}
     (nil))
(insn 908 907 909 74 (set (reg:SI 1 dx [1403])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":267 86 {*movsi_internal}
     (nil))
(insn 909 908 910 74 (set (reg:DI 1 dx [orig:243 _157 ] [243])
        (sign_extend:DI (reg:SI 1 dx [1403]))) "CLDRAD.f":267 149 {*extendsidi2_rex64}
     (nil))
(insn 910 909 4703 74 (parallel [
            (set (reg:DI 1 dx [orig:244 _158 ] [244])
                (plus:DI (reg:DI 1 dx [orig:243 _157 ] [243])
                    (reg:DI 4 si [orig:242 _156 ] [242])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 222 {*adddi_1}
     (nil))
(insn 4703 910 912 74 (set (reg:DI 4 si [orig:245 _159 ] [245])
        (plus:DI (reg:DI 1 dx [orig:244 _158 ] [244])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":267 218 {*leadi}
     (nil))
(insn 912 4703 913 74 (set (reg/f:DI 1 dx [1404])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":267 85 {*movdi_internal}
     (nil))
(insn 913 912 914 74 (parallel [
            (set (reg:DI 4 si [1405])
                (plus:DI (reg:DI 4 si [orig:245 _159 ] [245])
                    (const_int 29633 [0x73c1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 222 {*adddi_1}
     (nil))
(insn 914 913 915 74 (set (reg:SI 1 dx [orig:246 _160 ] [246])
        (mem:SI (plus:DI (mult:DI (reg:DI 4 si [1405])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1404])) [2 acmcld.ncfrcv S4 A32])) "CLDRAD.f":267 86 {*movsi_internal}
     (nil))
(insn 915 914 916 74 (parallel [
            (set (reg:SI 1 dx [1406])
                (plus:SI (reg:SI 1 dx [orig:246 _160 ] [246])
                    (reg:SI 2 cx [orig:240 _154 ] [240])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":267 221 {*addsi_1}
     (nil))
(insn 916 915 917 74 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 isum+0 S4 A32])
        (reg:SI 1 dx [1406])) "CLDRAD.f":267 86 {*movsi_internal}
     (nil))
(insn 917 916 918 74 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])) [2 isum+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":268 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 918 917 919 74 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 955)
            (pc))) "CLDRAD.f":268 682 {*jcc}
     (nil)
 -> 955)
;;  succ:       75 (FALLTHRU)
;;              76
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 75, loop depth 0, maybe hot
;;  prev block 74, next block 76, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       74 (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 919 918 920 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 920 919 921 75 (set (reg:SI 1 dx [1407])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":269 86 {*movsi_internal}
     (nil))
(insn 921 920 922 75 (set (reg:DI 1 dx [orig:247 _161 ] [247])
        (sign_extend:DI (reg:SI 1 dx [1407]))) "CLDRAD.f":269 149 {*extendsidi2_rex64}
     (nil))
(insn 922 921 923 75 (parallel [
            (set (reg:DI 2 cx [orig:248 _162 ] [248])
                (mult:DI (reg:DI 1 dx [orig:247 _161 ] [247])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 349 {*muldi3_1}
     (nil))
(insn 923 922 924 75 (set (reg:SI 1 dx [1408])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":269 86 {*movsi_internal}
     (nil))
(insn 924 923 925 75 (set (reg:DI 1 dx [orig:249 _163 ] [249])
        (sign_extend:DI (reg:SI 1 dx [1408]))) "CLDRAD.f":269 149 {*extendsidi2_rex64}
     (nil))
(insn 925 924 4699 75 (parallel [
            (set (reg:DI 1 dx [orig:250 _164 ] [250])
                (plus:DI (reg:DI 1 dx [orig:249 _163 ] [249])
                    (reg:DI 2 cx [orig:248 _162 ] [248])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 222 {*adddi_1}
     (nil))
(insn 4699 925 927 75 (set (reg:DI 2 cx [orig:251 _165 ] [251])
        (plus:DI (reg:DI 1 dx [orig:250 _164 ] [250])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":269 218 {*leadi}
     (nil))
(insn 927 4699 928 75 (set (reg/f:DI 1 dx [1409])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":269 85 {*movdi_internal}
     (nil))
(insn 928 927 929 75 (parallel [
            (set (reg:DI 2 cx [1410])
                (plus:DI (reg:DI 2 cx [orig:251 _165 ] [251])
                    (const_int 59264 [0xe780])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 222 {*adddi_1}
     (nil))
(insn 929 928 930 75 (set (reg:SF 22 xmm1 [orig:252 _166 ] [252])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1410])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1409])) [1 acmcld.acfrst S4 A32])) "CLDRAD.f":269 131 {*movsf_internal}
     (nil))
(insn 930 929 931 75 (set (reg:SI 1 dx [1411])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":269 86 {*movsi_internal}
     (nil))
(insn 931 930 932 75 (set (reg:DI 1 dx [orig:253 _167 ] [253])
        (sign_extend:DI (reg:SI 1 dx [1411]))) "CLDRAD.f":269 149 {*extendsidi2_rex64}
     (nil))
(insn 932 931 933 75 (parallel [
            (set (reg:DI 2 cx [orig:254 _168 ] [254])
                (mult:DI (reg:DI 1 dx [orig:253 _167 ] [253])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 349 {*muldi3_1}
     (nil))
(insn 933 932 934 75 (set (reg:SI 1 dx [1412])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":269 86 {*movsi_internal}
     (nil))
(insn 934 933 935 75 (set (reg:DI 1 dx [orig:255 _169 ] [255])
        (sign_extend:DI (reg:SI 1 dx [1412]))) "CLDRAD.f":269 149 {*extendsidi2_rex64}
     (nil))
(insn 935 934 4700 75 (parallel [
            (set (reg:DI 1 dx [orig:256 _170 ] [256])
                (plus:DI (reg:DI 1 dx [orig:255 _169 ] [255])
                    (reg:DI 2 cx [orig:254 _168 ] [254])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 222 {*adddi_1}
     (nil))
(insn 4700 935 937 75 (set (reg:DI 2 cx [orig:257 _171 ] [257])
        (plus:DI (reg:DI 1 dx [orig:256 _170 ] [256])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":269 218 {*leadi}
     (nil))
(insn 937 4700 938 75 (set (reg/f:DI 1 dx [1413])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":269 85 {*movdi_internal}
     (nil))
(insn 938 937 939 75 (parallel [
            (set (reg:DI 2 cx [1414])
                (plus:DI (reg:DI 2 cx [orig:257 _171 ] [257])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 222 {*adddi_1}
     (nil))
(insn 939 938 940 75 (set (reg:SF 21 xmm0 [orig:258 _172 ] [258])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1414])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1413])) [1 acmcld.acfrcv S4 A32])) "CLDRAD.f":269 131 {*movsf_internal}
     (nil))
(insn 940 939 941 75 (set (reg:SF 21 xmm0 [orig:259 _173 ] [259])
        (plus:SF (reg:SF 21 xmm0 [orig:258 _172 ] [258])
            (reg:SF 22 xmm1 [orig:252 _166 ] [252]))) "CLDRAD.f":269 838 {*fop_sf_comm}
     (nil))
(insn 941 940 942 75 (set (reg:SF 22 xmm1 [orig:260 _174 ] [260])
        (reg:SF 21 xmm0 [orig:259 _173 ] [259])) "CLDRAD.f":269 131 {*movsf_internal}
     (nil))
(insn 942 941 943 75 (set (reg:SF 21 xmm0 [orig:261 _175 ] [261])
        (float:SF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])) [2 isum+0 S4 A32]))) "CLDRAD.f":269 203 {*floatsisf2_mixed}
     (nil))
(insn 943 942 944 75 (set (reg:SI 1 dx [1415])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":269 86 {*movsi_internal}
     (nil))
(insn 944 943 945 75 (set (reg:DI 1 dx [orig:262 _176 ] [262])
        (sign_extend:DI (reg:SI 1 dx [1415]))) "CLDRAD.f":269 149 {*extendsidi2_rex64}
     (nil))
(insn 945 944 946 75 (parallel [
            (set (reg:DI 2 cx [orig:263 _177 ] [263])
                (mult:DI (reg:DI 1 dx [orig:262 _176 ] [262])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 349 {*muldi3_1}
     (nil))
(insn 946 945 947 75 (set (reg:SI 1 dx [1416])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":269 86 {*movsi_internal}
     (nil))
(insn 947 946 948 75 (set (reg:DI 1 dx [orig:264 _178 ] [264])
        (sign_extend:DI (reg:SI 1 dx [1416]))) "CLDRAD.f":269 149 {*extendsidi2_rex64}
     (nil))
(insn 948 947 4701 75 (parallel [
            (set (reg:DI 1 dx [orig:265 _179 ] [265])
                (plus:DI (reg:DI 1 dx [orig:264 _178 ] [264])
                    (reg:DI 2 cx [orig:263 _177 ] [263])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":269 222 {*adddi_1}
     (nil))
(insn 4701 948 950 75 (set (reg:DI 2 cx [orig:266 _180 ] [266])
        (plus:DI (reg:DI 1 dx [orig:265 _179 ] [265])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":269 218 {*leadi}
     (nil))
(insn 950 4701 4468 75 (set (reg:SF 22 xmm1 [orig:260 _174 ] [260])
        (div:SF (reg:SF 22 xmm1 [orig:260 _174 ] [260])
            (reg:SF 21 xmm0 [orig:261 _175 ] [261]))) "CLDRAD.f":269 841 {*fop_sf_1}
     (nil))
(insn 4468 950 951 75 (set (reg:SF 21 xmm0 [orig:267 _181 ] [267])
        (reg:SF 22 xmm1 [orig:260 _174 ] [260])) "CLDRAD.f":269 131 {*movsf_internal}
     (nil))
(insn 951 4468 952 75 (set (reg/f:DI 1 dx [1417])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":269 85 {*movdi_internal}
     (nil))
(insn 952 951 4179 75 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:266 _180 ] [266])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1417])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:267 _181 ] [267])) "CLDRAD.f":269 131 {*movsf_internal}
     (nil))
(jump_insn 4179 952 4180 75 (set (pc)
        (label_ref 967)) 683 {jump}
     (nil)
 -> 967)
;;  succ:       77 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4180 4179 955)
;; basic block 76, loop depth 0, maybe hot
;;  prev block 75, next block 77, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       74
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(code_label 955 4180 956 76 39 (nil) [1 uses])
(note 956 955 957 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 957 956 958 76 (set (reg:SI 1 dx [1418])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":271 86 {*movsi_internal}
     (nil))
(insn 958 957 959 76 (set (reg:DI 1 dx [orig:268 _182 ] [268])
        (sign_extend:DI (reg:SI 1 dx [1418]))) "CLDRAD.f":271 149 {*extendsidi2_rex64}
     (nil))
(insn 959 958 960 76 (parallel [
            (set (reg:DI 2 cx [orig:269 _183 ] [269])
                (mult:DI (reg:DI 1 dx [orig:268 _182 ] [268])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":271 349 {*muldi3_1}
     (nil))
(insn 960 959 961 76 (set (reg:SI 1 dx [1419])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":271 86 {*movsi_internal}
     (nil))
(insn 961 960 962 76 (set (reg:DI 1 dx [orig:270 _184 ] [270])
        (sign_extend:DI (reg:SI 1 dx [1419]))) "CLDRAD.f":271 149 {*extendsidi2_rex64}
     (nil))
(insn 962 961 4697 76 (parallel [
            (set (reg:DI 1 dx [orig:271 _185 ] [271])
                (plus:DI (reg:DI 1 dx [orig:270 _184 ] [270])
                    (reg:DI 2 cx [orig:269 _183 ] [269])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":271 222 {*adddi_1}
     (nil))
(insn 4697 962 964 76 (set (reg:DI 2 cx [orig:272 _186 ] [272])
        (plus:DI (reg:DI 1 dx [orig:271 _185 ] [271])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":271 218 {*leadi}
     (nil))
(insn 964 4697 4698 76 (set (reg/f:DI 1 dx [1420])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":271 85 {*movdi_internal}
     (nil))
(insn 4698 964 966 76 (set (reg:SF 21 xmm0 [1421])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":271 131 {*movsf_internal}
     (nil))
(insn 966 4698 967 76 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:272 _186 ] [272])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1420])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [1421])) "CLDRAD.f":271 131 {*movsf_internal}
     (nil))
;;  succ:       77 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 77, loop depth 0, maybe hot
;;  prev block 76, next block 78, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;;              75 [always] 
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 967 966 968 77 40 (nil) [1 uses])
(note 968 967 969 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 969 968 4181 77 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":266 221 {*addsi_1}
     (nil))
(jump_insn 4181 969 4182 77 (set (pc)
        (label_ref 970)) "CLDRAD.f":266 683 {jump}
     (nil)
 -> 970)
;;  succ:       73 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4182 4181 4340)
;; basic block 78, loop depth 0, maybe hot
;;  prev block 77, next block 80, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       73
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4340 4182 4339 78 241 (nil) [1 uses])
(note 4339 4340 4341 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 4341 4339 975 78 (const_int 0 [0]) "CLDRAD.f":268 718 {nop}
     (nil))
(insn 975 4341 4183 78 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":265 221 {*addsi_1}
     (nil))
(jump_insn 4183 975 4184 78 (set (pc)
        (label_ref 976)) "CLDRAD.f":265 683 {jump}
     (nil)
 -> 976)
;;  succ:       71 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4184 4183 4337)
;; basic block 80, loop depth 0, maybe hot
;;  prev block 78, next block 82, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       71
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4337 4184 4336 80 240 (nil) [1 uses])
(note 4336 4337 4338 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 4338 4336 981 80 (const_int 0 [0]) "CLDRAD.f":266 718 {nop}
     (nil))
(insn 981 4338 982 80 (set (reg:DI 1 dx [1422])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 982 981 983 80 (set (reg:DI 0 ax [1423])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 983 982 984 80 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":276 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 984 983 985 80 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":276 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 985 984 986 80 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1422])) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 986 985 987 80 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1423])) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 987 986 988 80 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 988 987 989 80 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 989 988 990 80 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 990 989 991 80 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f2038fb46c0 *.LC13>)) "CLDRAD.f":276 85 {*movdi_internal}
     (nil))
(insn 991 990 992 80 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":276 88 {*movqi_internal}
     (nil))
(call_insn 992 991 993 80 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":276 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 993 992 994 80 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":276 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 994 993 995 80 (set (reg/f:DI 1 dx [1424])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":277 85 {*movdi_internal}
     (nil))
(insn 995 994 996 80 (set (reg:DI 0 ax [1425])
        (const_int 0 [0])) "CLDRAD.f":277 85 {*movdi_internal}
     (nil))
(insn 996 995 4469 80 (set (reg:DI 2 cx [1426])
        (const_int 12 [0xc])) "CLDRAD.f":277 85 {*movdi_internal}
     (nil))
(insn 4469 996 997 80 (set (reg/f:DI 5 di [1424])
        (reg/f:DI 1 dx [1424])) "CLDRAD.f":277 85 {*movdi_internal}
     (nil))
(insn 997 4469 4470 80 (parallel [
            (set (reg:DI 2 cx [1426])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1424])
                (plus:DI (ashift:DI (reg:DI 2 cx [1426])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1424])))
            (set (mem/c:BLK (reg/f:DI 5 di [1424]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1425]))
            (use (reg:DI 2 cx [1426]))
        ]) "CLDRAD.f":277 984 {*rep_stosdi_rex64}
     (nil))
(insn 4470 997 998 80 (set (reg/f:DI 1 dx [1424])
        (reg/f:DI 5 di [1424])) "CLDRAD.f":277 85 {*movdi_internal}
     (nil))
(insn 998 4470 999 80 (set (mem/c:SI (reg/f:DI 1 dx [1424]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1425])) "CLDRAD.f":277 86 {*movsi_internal}
     (nil))
(insn 999 998 1000 80 (parallel [
            (set (reg/f:DI 1 dx [1424])
                (plus:DI (reg/f:DI 1 dx [1424])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":277 222 {*adddi_1}
     (nil))
(insn 1000 999 1001 80 (set (reg:SI 0 ax [1427])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":279 86 {*movsi_internal}
     (nil))
(insn 1001 1000 1002 80 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [1427])) "CLDRAD.f":279 86 {*movsi_internal}
     (nil))
(insn 1002 1001 1003 80 (set (reg/f:DI 0 ax [1428])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 1003 1002 1004 80 (set (reg:SF 21 xmm0 [orig:273 _187 ] [273])
        (mem/c:SF (reg/f:DI 0 ax [1428]) [1 acmcld.tclod+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1004 1003 1005 80 (set (reg:SI 0 ax [1429])
        (fix:SI (reg:SF 21 xmm0 [orig:273 _187 ] [273]))) "CLDRAD.f":280 174 {fix_truncsfsi_sse}
     (nil))
(insn 1005 1004 1006 80 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])
        (reg:SI 0 ax [1429])) "CLDRAD.f":280 86 {*movsi_internal}
     (nil))
(insn 1006 1005 4695 80 (set (reg:SI 0 ax [1431])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":281 86 {*movsi_internal}
     (nil))
(insn 4695 1006 4696 80 (parallel [
            (set (reg:SI 1 dx [1432])
                (ashiftrt:SI (reg:SI 0 ax [1431])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":281 582 {ashrsi3_cvt}
     (nil))
(insn 4696 4695 1008 80 (parallel [
            (set (reg:SI 0 ax [1433])
                (div:SI (reg:SI 0 ax [1431])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (set (reg:SI 1 dx [1432])
                (mod:SI (reg:SI 0 ax [1431])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (use (reg:SI 1 dx [1432]))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":281 387 {*divmodsi4_noext}
     (nil))
(insn 1008 4696 1009 80 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [1432])) "CLDRAD.f":281 86 {*movsi_internal}
     (nil))
(insn 1009 1008 1010 80 (set (reg:SI 0 ax [1434])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":282 86 {*movsi_internal}
     (nil))
(insn 1010 1009 1011 80 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [1434])) "CLDRAD.f":282 86 {*movsi_internal}
     (nil))
(insn 1011 1010 1012 80 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":283 86 {*movsi_internal}
     (nil))
(insn 1012 1011 1013 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":284 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1013 1012 1014 80 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1020)
            (pc))) "CLDRAD.f":284 682 {*jcc}
     (nil)
 -> 1020)
;;  succ:       82 (FALLTHRU)
;;              83
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 82, loop depth 0, maybe hot
;;  prev block 80, next block 83, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       80 (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1014 1013 1015 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1015 1014 1016 82 (set (reg:SI 0 ax [1435])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":285 86 {*movsi_internal}
     (nil))
(insn 1016 1015 1017 82 (parallel [
            (set (reg:SI 0 ax [orig:274 _188 ] [274])
                (minus:SI (reg:SI 0 ax [1435])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":285 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -92 [0xffffffffffffffa4])) [2 itclod+0 S4 A32]))
        (nil)))
(insn 1017 1016 4185 82 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:274 _188 ] [274])) "CLDRAD.f":285 86 {*movsi_internal}
     (nil))
(jump_insn 4185 1017 4186 82 (set (pc)
        (label_ref 1025)) 683 {jump}
     (nil)
 -> 1025)
;;  succ:       84 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4186 4185 1020)
;; basic block 83, loop depth 0, maybe hot
;;  prev block 82, next block 84, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       80
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1020 4186 1021 83 43 (nil) [1 uses])
(note 1021 1020 1022 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 1022 1021 1023 83 (set (reg:SI 0 ax [1436])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":287 86 {*movsi_internal}
     (nil))
(insn 1023 1022 1024 83 (parallel [
            (set (reg:SI 0 ax [orig:275 _189 ] [275])
                (minus:SI (reg:SI 0 ax [1436])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":287 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 1024 1023 1025 83 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:275 _189 ] [275])) "CLDRAD.f":287 86 {*movsi_internal}
     (nil))
;;  succ:       84 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 84, loop depth 0, maybe hot
;;  prev block 83, next block 85, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       83 (FALLTHRU)
;;              82 [always] 
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1025 1024 1026 84 44 (nil) [1 uses])
(note 1026 1025 1027 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 1027 1026 1028 84 (set (reg:SI 0 ax [orig:276 _190 ] [276])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":289 86 {*movsi_internal}
     (nil))
(insn 1028 1027 1029 84 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:276 _190 ] [276])
            (const_int 0 [0]))) "CLDRAD.f":289 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1029 1028 1030 84 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1032)
            (pc))) "CLDRAD.f":289 682 {*jcc}
     (nil)
 -> 1032)
;;  succ:       85 (FALLTHRU)
;;              86
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 85, loop depth 0, maybe hot
;;  prev block 84, next block 86, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       84 (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 1030 1029 1031 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 1031 1030 1032 85 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":289 86 {*movsi_internal}
     (nil))
;;  succ:       86 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 86, loop depth 0, maybe hot
;;  prev block 85, next block 87, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       84
;;              85 (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1032 1031 1033 86 45 (nil) [1 uses])
(note 1033 1032 1034 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 1034 1033 1035 86 (set (reg:DI 2 cx [1437])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":290 85 {*movdi_internal}
     (nil))
(insn 1035 1034 1036 86 (set (reg:DI 1 dx [1438])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":290 85 {*movdi_internal}
     (nil))
(insn 1036 1035 1039 86 (set (reg:DI 0 ax [1439])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":290 85 {*movdi_internal}
     (nil))
(insn 1039 1036 1040 86 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f2038fb4480 *.LC8>)) "CLDRAD.f":290 85 {*movdi_internal}
     (nil))
(insn 1040 1039 1041 86 (set (reg:DI 5 di)
        (reg:DI 0 ax [1439])) "CLDRAD.f":290 85 {*movdi_internal}
     (nil))
(insn 1041 1040 1042 86 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":290 88 {*movqi_internal}
     (nil))
(call_insn 1042 1041 1043 86 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f203929eb00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "CLDRAD.f":290 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1043 1042 1044 86 (set (reg:SI 0 ax [orig:277 _191 ] [277])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 588 [0x24c]))) [2 rqstfld.iget+572 S4 A32])) "CLDRAD.f":292 86 {*movsi_internal}
     (nil))
(insn 1044 1043 4693 86 (set (reg:DI 0 ax [orig:278 _192 ] [278])
        (sign_extend:DI (reg:SI 0 ax [orig:277 _191 ] [277]))) "CLDRAD.f":292 149 {*extendsidi2_rex64}
     (nil))
(insn 4693 1044 1046 86 (set (reg:DI 1 dx [orig:279 _193 ] [279])
        (plus:DI (reg:DI 0 ax [orig:278 _192 ] [278])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":292 218 {*leadi}
     (nil))
(insn 1046 4693 1047 86 (set (reg:DI 0 ax [1440])
        (reg:DI 1 dx [orig:279 _193 ] [279])) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1047 1046 1049 86 (parallel [
            (set (reg:DI 0 ax [1441])
                (ashift:DI (reg:DI 0 ax [1440])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":292 551 {*ashldi3_1}
     (nil))
(insn 1049 1047 1050 86 (parallel [
            (set (reg:DI 0 ax [1440])
                (minus:DI (reg:DI 0 ax [1440])
                    (reg:DI 1 dx [orig:279 _193 ] [279])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":292 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:279 _193 ] [279])
            (const_int 15 [0xf]))
        (nil)))
(insn 1050 1049 1053 86 (parallel [
            (set (reg:DI 0 ax [1442])
                (ashift:DI (reg:DI 0 ax [1440])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":292 551 {*ashldi3_1}
     (nil))
(insn 1053 1050 1054 86 (parallel [
            (set (reg:DI 0 ax [1443])
                (plus:DI (reg:DI 0 ax [orig:280 _194 ] [280])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":292 222 {*adddi_1}
     (nil))
(insn 1054 1053 4694 86 (parallel [
            (set (reg:DI 0 ax [1444])
                (ashift:DI (reg:DI 0 ax [1443])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":292 551 {*ashldi3_1}
     (nil))
(insn 4694 1054 1056 86 (set (reg/f:DI 1 dx [orig:281 _195 ] [281])
        (plus:DI (reg:DI 0 ax [1444])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":292 218 {*leadi}
     (nil))
(insn 1056 4694 1057 86 (set (reg:DI 4 si [1445])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1057 1056 1058 86 (set (reg:DI 2 cx [1446])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1058 1057 1059 86 (set (reg:DI 0 ax [1447])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1059 1058 1060 86 (set (reg:DI 38 r9)
        (reg:DI 4 si [1445])) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1060 1059 1061 86 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1446])) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1061 1060 1063 86 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1447])) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1063 1061 1064 86 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 588 [0x24c])))) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1064 1063 1065 86 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":292 85 {*movdi_internal}
     (nil))
(insn 1065 1064 1066 86 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":292 88 {*movqi_internal}
     (nil))
(call_insn 1066 1065 1067 86 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":292 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       87 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 87, loop depth 0, maybe hot
;;  prev block 86, next block 88, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       69
;;              86 (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1067 1066 1068 87 36 (nil) [1 uses])
(note 1068 1067 1069 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 1069 1068 1070 87 (set (reg:SI 0 ax [orig:282 _196 ] [282])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 568 [0x238]))) [2 rqstfld.iget+552 S4 A64])) "CLDRAD.f":296 86 {*movsi_internal}
     (nil))
(insn 1070 1069 1071 87 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:282 _196 ] [282])
            (const_int 0 [0]))) "CLDRAD.f":296 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1071 1070 1072 87 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1249)
            (pc))) "CLDRAD.f":296 682 {*jcc}
     (nil)
 -> 1249)
;;  succ:       88 (FALLTHRU)
;;              105
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 88, loop depth 0, maybe hot
;;  prev block 87, next block 89, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       87 (FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(note 1072 1071 1073 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 1073 1072 1074 88 (set (reg:SI 1 dx [orig:1131 _1296 ] [1131])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":297 86 {*movsi_internal}
     (nil))
(insn 1074 1073 1075 88 (set (reg:SI 0 ax [orig:1132 _1297 ] [1132])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":297 86 {*movsi_internal}
     (nil))
(insn 1075 1074 1158 88 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1131 _1296 ] [1131])) "CLDRAD.f":297 86 {*movsi_internal}
     (nil))
;;  succ:       89 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 89, loop depth 0, maybe hot
;;  prev block 88, next block 90, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       88 (FALLTHRU)
;;              96 [always] 
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 1158 1075 1076 89 52 (nil) [1 uses])
(note 1076 1158 1077 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 1077 1076 1078 89 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1132 _1297 ] [1132]))) "CLDRAD.f":297 11 {*cmpsi_1}
     (nil))
(insn 1078 1077 1079 89 (set (reg:QI 1 dx [1448])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":297 678 {*setcc_qi}
     (nil))
(insn 1079 1078 1080 89 (set (reg:SI 1 dx [orig:1133 _1299 ] [1133])
        (zero_extend:SI (reg:QI 1 dx [1448]))) "CLDRAD.f":297 140 {*zero_extendqisi2}
     (nil))
(insn 1080 1079 1081 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1133 _1299 ] [1133])
            (const_int 0 [0]))) "CLDRAD.f":297 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1081 1080 1082 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4343)
            (pc))) "CLDRAD.f":297 682 {*jcc}
     (nil)
 -> 4343)
;;  succ:       98
;;              90 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 90, loop depth 0, maybe hot
;;  prev block 89, next block 91, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       89 (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 1082 1081 1083 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1083 1082 1152 90 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":298 86 {*movsi_internal}
     (nil))
;;  succ:       91 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 91, loop depth 0, maybe hot
;;  prev block 90, next block 92, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       90 (FALLTHRU)
;;              95 [always] 
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 1152 1083 1084 91 51 (nil) [1 uses])
(note 1084 1152 1085 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 1085 1084 1086 91 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":298 11 {*cmpsi_1}
     (nil))
(insn 1086 1085 1087 91 (set (reg:QI 1 dx [1449])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":298 678 {*setcc_qi}
     (nil))
(insn 1087 1086 1088 91 (set (reg:SI 1 dx [orig:1134 _1301 ] [1134])
        (zero_extend:SI (reg:QI 1 dx [1449]))) "CLDRAD.f":298 140 {*zero_extendqisi2}
     (nil))
(insn 1088 1087 1089 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1134 _1301 ] [1134])
            (const_int 0 [0]))) "CLDRAD.f":298 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1089 1088 1090 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4346)
            (pc))) "CLDRAD.f":298 682 {*jcc}
     (nil)
 -> 4346)
;;  succ:       96
;;              92 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 92, loop depth 0, maybe hot
;;  prev block 91, next block 93, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       91 (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
(note 1090 1089 1091 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1091 1090 1092 92 (set (reg:SI 1 dx [1450])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":299 86 {*movsi_internal}
     (nil))
(insn 1092 1091 1093 92 (set (reg:DI 1 dx [orig:283 _197 ] [283])
        (sign_extend:DI (reg:SI 1 dx [1450]))) "CLDRAD.f":299 149 {*extendsidi2_rex64}
     (nil))
(insn 1093 1092 1094 92 (parallel [
            (set (reg:DI 2 cx [orig:284 _198 ] [284])
                (mult:DI (reg:DI 1 dx [orig:283 _197 ] [283])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":299 349 {*muldi3_1}
     (nil))
(insn 1094 1093 1095 92 (set (reg:SI 1 dx [1451])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":299 86 {*movsi_internal}
     (nil))
(insn 1095 1094 1096 92 (set (reg:DI 1 dx [orig:285 _199 ] [285])
        (sign_extend:DI (reg:SI 1 dx [1451]))) "CLDRAD.f":299 149 {*extendsidi2_rex64}
     (nil))
(insn 1096 1095 4692 92 (parallel [
            (set (reg:DI 1 dx [orig:286 _200 ] [286])
                (plus:DI (reg:DI 1 dx [orig:285 _199 ] [285])
                    (reg:DI 2 cx [orig:284 _198 ] [284])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":299 222 {*adddi_1}
     (nil))
(insn 4692 1096 1098 92 (set (reg:DI 2 cx [orig:287 _201 ] [287])
        (plus:DI (reg:DI 1 dx [orig:286 _200 ] [286])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":299 218 {*leadi}
     (nil))
(insn 1098 4692 1099 92 (set (reg/f:DI 1 dx [1452])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":299 85 {*movdi_internal}
     (nil))
(insn 1099 1098 1100 92 (parallel [
            (set (reg:DI 2 cx [1453])
                (plus:DI (reg:DI 2 cx [orig:287 _201 ] [287])
                    (const_int 88895 [0x15b3f])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":299 222 {*adddi_1}
     (nil))
(insn 1100 1099 1101 92 (set (reg:SI 1 dx [orig:288 _202 ] [288])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1453])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1452])) [2 acmcld.ncfrst S4 A32])) "CLDRAD.f":299 86 {*movsi_internal}
     (nil))
(insn 1101 1100 1102 92 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 1 dx [orig:288 _202 ] [288])
            (const_int 0 [0]))) "CLDRAD.f":299 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1102 1101 1103 92 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1137)
            (pc))) "CLDRAD.f":299 682 {*jcc}
     (nil)
 -> 1137)
;;  succ:       93 (FALLTHRU)
;;              94
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 93, loop depth 0, maybe hot
;;  prev block 92, next block 94, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       92 (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 1103 1102 1104 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 1104 1103 1105 93 (set (reg:SI 1 dx [1454])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":300 86 {*movsi_internal}
     (nil))
(insn 1105 1104 1106 93 (set (reg:DI 1 dx [orig:289 _203 ] [289])
        (sign_extend:DI (reg:SI 1 dx [1454]))) "CLDRAD.f":300 149 {*extendsidi2_rex64}
     (nil))
(insn 1106 1105 1107 93 (parallel [
            (set (reg:DI 2 cx [orig:290 _204 ] [290])
                (mult:DI (reg:DI 1 dx [orig:289 _203 ] [289])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 349 {*muldi3_1}
     (nil))
(insn 1107 1106 1108 93 (set (reg:SI 1 dx [1455])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":300 86 {*movsi_internal}
     (nil))
(insn 1108 1107 1109 93 (set (reg:DI 1 dx [orig:291 _205 ] [291])
        (sign_extend:DI (reg:SI 1 dx [1455]))) "CLDRAD.f":300 149 {*extendsidi2_rex64}
     (nil))
(insn 1109 1108 4689 93 (parallel [
            (set (reg:DI 1 dx [orig:292 _206 ] [292])
                (plus:DI (reg:DI 1 dx [orig:291 _205 ] [291])
                    (reg:DI 2 cx [orig:290 _204 ] [290])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 222 {*adddi_1}
     (nil))
(insn 4689 1109 1111 93 (set (reg:DI 2 cx [orig:293 _207 ] [293])
        (plus:DI (reg:DI 1 dx [orig:292 _206 ] [292])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":300 218 {*leadi}
     (nil))
(insn 1111 4689 1112 93 (set (reg/f:DI 1 dx [1456])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":300 85 {*movdi_internal}
     (nil))
(insn 1112 1111 1113 93 (parallel [
            (set (reg:DI 2 cx [1457])
                (plus:DI (reg:DI 2 cx [orig:293 _207 ] [293])
                    (const_int 59264 [0xe780])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 222 {*adddi_1}
     (nil))
(insn 1113 1112 1114 93 (set (reg:SF 21 xmm0 [orig:294 _208 ] [294])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1457])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1456])) [1 acmcld.acfrst S4 A32])) "CLDRAD.f":300 131 {*movsf_internal}
     (nil))
(insn 1114 1113 1115 93 (set (reg:SI 1 dx [1458])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":300 86 {*movsi_internal}
     (nil))
(insn 1115 1114 1116 93 (set (reg:DI 1 dx [orig:295 _209 ] [295])
        (sign_extend:DI (reg:SI 1 dx [1458]))) "CLDRAD.f":300 149 {*extendsidi2_rex64}
     (nil))
(insn 1116 1115 1117 93 (parallel [
            (set (reg:DI 2 cx [orig:296 _210 ] [296])
                (mult:DI (reg:DI 1 dx [orig:295 _209 ] [295])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 349 {*muldi3_1}
     (nil))
(insn 1117 1116 1118 93 (set (reg:SI 1 dx [1459])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":300 86 {*movsi_internal}
     (nil))
(insn 1118 1117 1119 93 (set (reg:DI 1 dx [orig:297 _211 ] [297])
        (sign_extend:DI (reg:SI 1 dx [1459]))) "CLDRAD.f":300 149 {*extendsidi2_rex64}
     (nil))
(insn 1119 1118 4690 93 (parallel [
            (set (reg:DI 1 dx [orig:298 _212 ] [298])
                (plus:DI (reg:DI 1 dx [orig:297 _211 ] [297])
                    (reg:DI 2 cx [orig:296 _210 ] [296])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 222 {*adddi_1}
     (nil))
(insn 4690 1119 1121 93 (set (reg:DI 2 cx [orig:299 _213 ] [299])
        (plus:DI (reg:DI 1 dx [orig:298 _212 ] [298])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":300 218 {*leadi}
     (nil))
(insn 1121 4690 1122 93 (set (reg/f:DI 1 dx [1460])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":300 85 {*movdi_internal}
     (nil))
(insn 1122 1121 1123 93 (parallel [
            (set (reg:DI 2 cx [1461])
                (plus:DI (reg:DI 2 cx [orig:299 _213 ] [299])
                    (const_int 88895 [0x15b3f])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 222 {*adddi_1}
     (nil))
(insn 1123 1122 1124 93 (set (reg:SI 1 dx [orig:300 _214 ] [300])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1461])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1460])) [2 acmcld.ncfrst S4 A32])) "CLDRAD.f":300 86 {*movsi_internal}
     (nil))
(insn 1124 1123 1125 93 (set (reg:SF 22 xmm1 [orig:301 _215 ] [301])
        (float:SF (reg:SI 1 dx [orig:300 _214 ] [300]))) "CLDRAD.f":300 203 {*floatsisf2_mixed}
     (nil))
(insn 1125 1124 1126 93 (set (reg:SI 1 dx [1462])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":300 86 {*movsi_internal}
     (nil))
(insn 1126 1125 1127 93 (set (reg:DI 1 dx [orig:302 _216 ] [302])
        (sign_extend:DI (reg:SI 1 dx [1462]))) "CLDRAD.f":300 149 {*extendsidi2_rex64}
     (nil))
(insn 1127 1126 1128 93 (parallel [
            (set (reg:DI 2 cx [orig:303 _217 ] [303])
                (mult:DI (reg:DI 1 dx [orig:302 _216 ] [302])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 349 {*muldi3_1}
     (nil))
(insn 1128 1127 1129 93 (set (reg:SI 1 dx [1463])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":300 86 {*movsi_internal}
     (nil))
(insn 1129 1128 1130 93 (set (reg:DI 1 dx [orig:304 _218 ] [304])
        (sign_extend:DI (reg:SI 1 dx [1463]))) "CLDRAD.f":300 149 {*extendsidi2_rex64}
     (nil))
(insn 1130 1129 4691 93 (parallel [
            (set (reg:DI 1 dx [orig:305 _219 ] [305])
                (plus:DI (reg:DI 1 dx [orig:304 _218 ] [304])
                    (reg:DI 2 cx [orig:303 _217 ] [303])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":300 222 {*adddi_1}
     (nil))
(insn 4691 1130 1132 93 (set (reg:DI 2 cx [orig:306 _220 ] [306])
        (plus:DI (reg:DI 1 dx [orig:305 _219 ] [305])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":300 218 {*leadi}
     (nil))
(insn 1132 4691 1133 93 (set (reg:SF 21 xmm0 [orig:307 _221 ] [307])
        (div:SF (reg:SF 21 xmm0 [orig:294 _208 ] [294])
            (reg:SF 22 xmm1 [orig:301 _215 ] [301]))) "CLDRAD.f":300 841 {*fop_sf_1}
     (nil))
(insn 1133 1132 1134 93 (set (reg/f:DI 1 dx [1464])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":300 85 {*movdi_internal}
     (nil))
(insn 1134 1133 4187 93 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:306 _220 ] [306])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1464])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:307 _221 ] [307])) "CLDRAD.f":300 131 {*movsf_internal}
     (nil))
(jump_insn 4187 1134 4188 93 (set (pc)
        (label_ref 1149)) 683 {jump}
     (nil)
 -> 1149)
;;  succ:       95 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4188 4187 1137)
;; basic block 94, loop depth 0, maybe hot
;;  prev block 93, next block 95, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       92
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(code_label 1137 4188 1138 94 49 (nil) [1 uses])
(note 1138 1137 1139 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 1139 1138 1140 94 (set (reg:SI 1 dx [1465])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":302 86 {*movsi_internal}
     (nil))
(insn 1140 1139 1141 94 (set (reg:DI 1 dx [orig:308 _222 ] [308])
        (sign_extend:DI (reg:SI 1 dx [1465]))) "CLDRAD.f":302 149 {*extendsidi2_rex64}
     (nil))
(insn 1141 1140 1142 94 (parallel [
            (set (reg:DI 2 cx [orig:309 _223 ] [309])
                (mult:DI (reg:DI 1 dx [orig:308 _222 ] [308])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":302 349 {*muldi3_1}
     (nil))
(insn 1142 1141 1143 94 (set (reg:SI 1 dx [1466])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":302 86 {*movsi_internal}
     (nil))
(insn 1143 1142 1144 94 (set (reg:DI 1 dx [orig:310 _224 ] [310])
        (sign_extend:DI (reg:SI 1 dx [1466]))) "CLDRAD.f":302 149 {*extendsidi2_rex64}
     (nil))
(insn 1144 1143 4687 94 (parallel [
            (set (reg:DI 1 dx [orig:311 _225 ] [311])
                (plus:DI (reg:DI 1 dx [orig:310 _224 ] [310])
                    (reg:DI 2 cx [orig:309 _223 ] [309])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":302 222 {*adddi_1}
     (nil))
(insn 4687 1144 1146 94 (set (reg:DI 2 cx [orig:312 _226 ] [312])
        (plus:DI (reg:DI 1 dx [orig:311 _225 ] [311])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":302 218 {*leadi}
     (nil))
(insn 1146 4687 4688 94 (set (reg/f:DI 1 dx [1467])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":302 85 {*movdi_internal}
     (nil))
(insn 4688 1146 1148 94 (set (reg:SF 21 xmm0 [1468])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":302 131 {*movsf_internal}
     (nil))
(insn 1148 4688 1149 94 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:312 _226 ] [312])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1467])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [1468])) "CLDRAD.f":302 131 {*movsf_internal}
     (nil))
;;  succ:       95 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 95, loop depth 0, maybe hot
;;  prev block 94, next block 96, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       94 (FALLTHRU)
;;              93 [always] 
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 1149 1148 1150 95 50 (nil) [1 uses])
(note 1150 1149 1151 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1151 1150 4189 95 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":298 221 {*addsi_1}
     (nil))
(jump_insn 4189 1151 4190 95 (set (pc)
        (label_ref 1152)) "CLDRAD.f":298 683 {jump}
     (nil)
 -> 1152)
;;  succ:       91 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4190 4189 4346)
;; basic block 96, loop depth 0, maybe hot
;;  prev block 95, next block 98, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       91
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4346 4190 4345 96 243 (nil) [1 uses])
(note 4345 4346 4347 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 4347 4345 1157 96 (const_int 0 [0]) "CLDRAD.f":299 718 {nop}
     (nil))
(insn 1157 4347 4191 96 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":297 221 {*addsi_1}
     (nil))
(jump_insn 4191 1157 4192 96 (set (pc)
        (label_ref 1158)) "CLDRAD.f":297 683 {jump}
     (nil)
 -> 1158)
;;  succ:       89 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4192 4191 4343)
;; basic block 98, loop depth 0, maybe hot
;;  prev block 96, next block 100, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       89
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4343 4192 4342 98 242 (nil) [1 uses])
(note 4342 4343 4344 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 4344 4342 1163 98 (const_int 0 [0]) "CLDRAD.f":298 718 {nop}
     (nil))
(insn 1163 4344 1164 98 (set (reg:DI 1 dx [1469])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1164 1163 1165 98 (set (reg:DI 0 ax [1470])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1165 1164 1166 98 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":307 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1166 1165 1167 98 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":307 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1167 1166 1168 98 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1469])) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1168 1167 1169 98 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1470])) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1169 1168 1170 98 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1170 1169 1171 98 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1171 1170 1172 98 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1172 1171 1173 98 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f2038fb4750 *.LC14>)) "CLDRAD.f":307 85 {*movdi_internal}
     (nil))
(insn 1173 1172 1174 98 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":307 88 {*movqi_internal}
     (nil))
(call_insn 1174 1173 1175 98 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":307 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1175 1174 1176 98 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":307 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1176 1175 1177 98 (set (reg/f:DI 1 dx [1471])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":308 85 {*movdi_internal}
     (nil))
(insn 1177 1176 1178 98 (set (reg:DI 0 ax [1472])
        (const_int 0 [0])) "CLDRAD.f":308 85 {*movdi_internal}
     (nil))
(insn 1178 1177 4471 98 (set (reg:DI 2 cx [1473])
        (const_int 12 [0xc])) "CLDRAD.f":308 85 {*movdi_internal}
     (nil))
(insn 4471 1178 1179 98 (set (reg/f:DI 5 di [1471])
        (reg/f:DI 1 dx [1471])) "CLDRAD.f":308 85 {*movdi_internal}
     (nil))
(insn 1179 4471 4472 98 (parallel [
            (set (reg:DI 2 cx [1473])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1471])
                (plus:DI (ashift:DI (reg:DI 2 cx [1473])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1471])))
            (set (mem/c:BLK (reg/f:DI 5 di [1471]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1472]))
            (use (reg:DI 2 cx [1473]))
        ]) "CLDRAD.f":308 984 {*rep_stosdi_rex64}
     (nil))
(insn 4472 1179 1180 98 (set (reg/f:DI 1 dx [1471])
        (reg/f:DI 5 di [1471])) "CLDRAD.f":308 85 {*movdi_internal}
     (nil))
(insn 1180 4472 1181 98 (set (mem/c:SI (reg/f:DI 1 dx [1471]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1472])) "CLDRAD.f":308 86 {*movsi_internal}
     (nil))
(insn 1181 1180 1182 98 (parallel [
            (set (reg/f:DI 1 dx [1471])
                (plus:DI (reg/f:DI 1 dx [1471])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":308 222 {*adddi_1}
     (nil))
(insn 1182 1181 1183 98 (set (reg:SI 0 ax [1474])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":310 86 {*movsi_internal}
     (nil))
(insn 1183 1182 1184 98 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [1474])) "CLDRAD.f":310 86 {*movsi_internal}
     (nil))
(insn 1184 1183 1185 98 (set (reg/f:DI 0 ax [1475])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 1185 1184 1186 98 (set (reg:SF 21 xmm0 [orig:313 _227 ] [313])
        (mem/c:SF (reg/f:DI 0 ax [1475]) [1 acmcld.tclod+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1186 1185 1187 98 (set (reg:SI 0 ax [1476])
        (fix:SI (reg:SF 21 xmm0 [orig:313 _227 ] [313]))) "CLDRAD.f":311 174 {fix_truncsfsi_sse}
     (nil))
(insn 1187 1186 1188 98 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])
        (reg:SI 0 ax [1476])) "CLDRAD.f":311 86 {*movsi_internal}
     (nil))
(insn 1188 1187 4685 98 (set (reg:SI 0 ax [1478])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":312 86 {*movsi_internal}
     (nil))
(insn 4685 1188 4686 98 (parallel [
            (set (reg:SI 1 dx [1479])
                (ashiftrt:SI (reg:SI 0 ax [1478])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":312 582 {ashrsi3_cvt}
     (nil))
(insn 4686 4685 1190 98 (parallel [
            (set (reg:SI 0 ax [1480])
                (div:SI (reg:SI 0 ax [1478])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (set (reg:SI 1 dx [1479])
                (mod:SI (reg:SI 0 ax [1478])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (use (reg:SI 1 dx [1479]))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":312 387 {*divmodsi4_noext}
     (nil))
(insn 1190 4686 1191 98 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [1479])) "CLDRAD.f":312 86 {*movsi_internal}
     (nil))
(insn 1191 1190 1192 98 (set (reg:SI 0 ax [1481])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":313 86 {*movsi_internal}
     (nil))
(insn 1192 1191 1193 98 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [1481])) "CLDRAD.f":313 86 {*movsi_internal}
     (nil))
(insn 1193 1192 1194 98 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":314 86 {*movsi_internal}
     (nil))
(insn 1194 1193 1195 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":315 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1195 1194 1196 98 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1202)
            (pc))) "CLDRAD.f":315 682 {*jcc}
     (nil)
 -> 1202)
;;  succ:       100 (FALLTHRU)
;;              101
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 100, loop depth 0, maybe hot
;;  prev block 98, next block 101, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       98 (FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1196 1195 1197 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 1197 1196 1198 100 (set (reg:SI 0 ax [1482])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":316 86 {*movsi_internal}
     (nil))
(insn 1198 1197 1199 100 (parallel [
            (set (reg:SI 0 ax [orig:314 _228 ] [314])
                (minus:SI (reg:SI 0 ax [1482])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":316 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -92 [0xffffffffffffffa4])) [2 itclod+0 S4 A32]))
        (nil)))
(insn 1199 1198 4193 100 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:314 _228 ] [314])) "CLDRAD.f":316 86 {*movsi_internal}
     (nil))
(jump_insn 4193 1199 4194 100 (set (pc)
        (label_ref 1207)) 683 {jump}
     (nil)
 -> 1207)
;;  succ:       102 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4194 4193 1202)
;; basic block 101, loop depth 0, maybe hot
;;  prev block 100, next block 102, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       98
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1202 4194 1203 101 53 (nil) [1 uses])
(note 1203 1202 1204 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 1204 1203 1205 101 (set (reg:SI 0 ax [1483])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":318 86 {*movsi_internal}
     (nil))
(insn 1205 1204 1206 101 (parallel [
            (set (reg:SI 0 ax [orig:315 _229 ] [315])
                (minus:SI (reg:SI 0 ax [1483])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":318 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 1206 1205 1207 101 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:315 _229 ] [315])) "CLDRAD.f":318 86 {*movsi_internal}
     (nil))
;;  succ:       102 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 102, loop depth 0, maybe hot
;;  prev block 101, next block 103, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       101 (FALLTHRU)
;;              100 [always] 
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1207 1206 1208 102 54 (nil) [1 uses])
(note 1208 1207 1209 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 1209 1208 1210 102 (set (reg:SI 0 ax [orig:316 _230 ] [316])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":320 86 {*movsi_internal}
     (nil))
(insn 1210 1209 1211 102 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:316 _230 ] [316])
            (const_int 0 [0]))) "CLDRAD.f":320 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1211 1210 1212 102 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1214)
            (pc))) "CLDRAD.f":320 682 {*jcc}
     (nil)
 -> 1214)
;;  succ:       103 (FALLTHRU)
;;              104
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 103, loop depth 0, maybe hot
;;  prev block 102, next block 104, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       102 (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 1212 1211 1213 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 1213 1212 1214 103 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":320 86 {*movsi_internal}
     (nil))
;;  succ:       104 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 104, loop depth 0, maybe hot
;;  prev block 103, next block 105, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       102
;;              103 (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1214 1213 1215 104 55 (nil) [1 uses])
(note 1215 1214 1216 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 1216 1215 1217 104 (set (reg:DI 2 cx [1484])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":321 85 {*movdi_internal}
     (nil))
(insn 1217 1216 1218 104 (set (reg:DI 1 dx [1485])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":321 85 {*movdi_internal}
     (nil))
(insn 1218 1217 1221 104 (set (reg:DI 0 ax [1486])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":321 85 {*movdi_internal}
     (nil))
(insn 1221 1218 1222 104 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f2038fb4480 *.LC8>)) "CLDRAD.f":321 85 {*movdi_internal}
     (nil))
(insn 1222 1221 1223 104 (set (reg:DI 5 di)
        (reg:DI 0 ax [1486])) "CLDRAD.f":321 85 {*movdi_internal}
     (nil))
(insn 1223 1222 1224 104 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":321 88 {*movqi_internal}
     (nil))
(call_insn 1224 1223 1225 104 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f203929eb00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "CLDRAD.f":321 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1225 1224 1226 104 (set (reg:SI 0 ax [orig:317 _231 ] [317])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 568 [0x238]))) [2 rqstfld.iget+552 S4 A64])) "CLDRAD.f":323 86 {*movsi_internal}
     (nil))
(insn 1226 1225 4683 104 (set (reg:DI 0 ax [orig:318 _232 ] [318])
        (sign_extend:DI (reg:SI 0 ax [orig:317 _231 ] [317]))) "CLDRAD.f":323 149 {*extendsidi2_rex64}
     (nil))
(insn 4683 1226 1228 104 (set (reg:DI 1 dx [orig:319 _233 ] [319])
        (plus:DI (reg:DI 0 ax [orig:318 _232 ] [318])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":323 218 {*leadi}
     (nil))
(insn 1228 4683 1229 104 (set (reg:DI 0 ax [1487])
        (reg:DI 1 dx [orig:319 _233 ] [319])) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1229 1228 1231 104 (parallel [
            (set (reg:DI 0 ax [1488])
                (ashift:DI (reg:DI 0 ax [1487])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":323 551 {*ashldi3_1}
     (nil))
(insn 1231 1229 1232 104 (parallel [
            (set (reg:DI 0 ax [1487])
                (minus:DI (reg:DI 0 ax [1487])
                    (reg:DI 1 dx [orig:319 _233 ] [319])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":323 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:319 _233 ] [319])
            (const_int 15 [0xf]))
        (nil)))
(insn 1232 1231 1235 104 (parallel [
            (set (reg:DI 0 ax [1489])
                (ashift:DI (reg:DI 0 ax [1487])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":323 551 {*ashldi3_1}
     (nil))
(insn 1235 1232 1236 104 (parallel [
            (set (reg:DI 0 ax [1490])
                (plus:DI (reg:DI 0 ax [orig:320 _234 ] [320])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":323 222 {*adddi_1}
     (nil))
(insn 1236 1235 4684 104 (parallel [
            (set (reg:DI 0 ax [1491])
                (ashift:DI (reg:DI 0 ax [1490])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":323 551 {*ashldi3_1}
     (nil))
(insn 4684 1236 1238 104 (set (reg/f:DI 1 dx [orig:321 _235 ] [321])
        (plus:DI (reg:DI 0 ax [1491])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":323 218 {*leadi}
     (nil))
(insn 1238 4684 1239 104 (set (reg:DI 4 si [1492])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1239 1238 1240 104 (set (reg:DI 2 cx [1493])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1240 1239 1241 104 (set (reg:DI 0 ax [1494])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1241 1240 1242 104 (set (reg:DI 38 r9)
        (reg:DI 4 si [1492])) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1242 1241 1243 104 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1493])) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1243 1242 1245 104 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1494])) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1245 1243 1246 104 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 568 [0x238])))) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1246 1245 1247 104 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":323 85 {*movdi_internal}
     (nil))
(insn 1247 1246 1248 104 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":323 88 {*movqi_internal}
     (nil))
(call_insn 1248 1247 1249 104 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":323 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       105 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 105, loop depth 0, maybe hot
;;  prev block 104, next block 106, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       87
;;              104 (FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1249 1248 1250 105 46 (nil) [1 uses])
(note 1250 1249 1251 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 1251 1250 1252 105 (set (reg:SI 0 ax [orig:322 _236 ] [322])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 584 [0x248]))) [2 rqstfld.iget+568 S4 A64])) "CLDRAD.f":327 86 {*movsi_internal}
     (nil))
(insn 1252 1251 1253 105 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:322 _236 ] [322])
            (const_int 0 [0]))) "CLDRAD.f":327 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1253 1252 1254 105 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1431)
            (pc))) "CLDRAD.f":327 682 {*jcc}
     (nil)
 -> 1431)
;;  succ:       106 (FALLTHRU)
;;              123
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 106, loop depth 0, maybe hot
;;  prev block 105, next block 107, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       105 (FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(note 1254 1253 1255 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 1255 1254 1256 106 (set (reg:SI 1 dx [orig:1135 _1318 ] [1135])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":328 86 {*movsi_internal}
     (nil))
(insn 1256 1255 1257 106 (set (reg:SI 0 ax [orig:1136 _1319 ] [1136])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":328 86 {*movsi_internal}
     (nil))
(insn 1257 1256 1340 106 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1135 _1318 ] [1135])) "CLDRAD.f":328 86 {*movsi_internal}
     (nil))
;;  succ:       107 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 107, loop depth 0, maybe hot
;;  prev block 106, next block 108, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       106 (FALLTHRU)
;;              114 [always] 
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 1340 1257 1258 107 62 (nil) [1 uses])
(note 1258 1340 1259 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 1259 1258 1260 107 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1136 _1319 ] [1136]))) "CLDRAD.f":328 11 {*cmpsi_1}
     (nil))
(insn 1260 1259 1261 107 (set (reg:QI 1 dx [1495])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":328 678 {*setcc_qi}
     (nil))
(insn 1261 1260 1262 107 (set (reg:SI 1 dx [orig:1137 _1321 ] [1137])
        (zero_extend:SI (reg:QI 1 dx [1495]))) "CLDRAD.f":328 140 {*zero_extendqisi2}
     (nil))
(insn 1262 1261 1263 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1137 _1321 ] [1137])
            (const_int 0 [0]))) "CLDRAD.f":328 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1263 1262 1264 107 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4349)
            (pc))) "CLDRAD.f":328 682 {*jcc}
     (nil)
 -> 4349)
;;  succ:       116
;;              108 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 108, loop depth 0, maybe hot
;;  prev block 107, next block 109, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       107 (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 1264 1263 1265 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 1265 1264 1334 108 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":329 86 {*movsi_internal}
     (nil))
;;  succ:       109 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 109, loop depth 0, maybe hot
;;  prev block 108, next block 110, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       108 (FALLTHRU)
;;              113 [always] 
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 1334 1265 1266 109 61 (nil) [1 uses])
(note 1266 1334 1267 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 1267 1266 1268 109 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":329 11 {*cmpsi_1}
     (nil))
(insn 1268 1267 1269 109 (set (reg:QI 1 dx [1496])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":329 678 {*setcc_qi}
     (nil))
(insn 1269 1268 1270 109 (set (reg:SI 1 dx [orig:1138 _1323 ] [1138])
        (zero_extend:SI (reg:QI 1 dx [1496]))) "CLDRAD.f":329 140 {*zero_extendqisi2}
     (nil))
(insn 1270 1269 1271 109 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1138 _1323 ] [1138])
            (const_int 0 [0]))) "CLDRAD.f":329 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1271 1270 1272 109 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4352)
            (pc))) "CLDRAD.f":329 682 {*jcc}
     (nil)
 -> 4352)
;;  succ:       114
;;              110 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 110, loop depth 0, maybe hot
;;  prev block 109, next block 111, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       109 (FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
(note 1272 1271 1273 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 1273 1272 1274 110 (set (reg:SI 1 dx [1497])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":330 86 {*movsi_internal}
     (nil))
(insn 1274 1273 1275 110 (set (reg:DI 1 dx [orig:323 _237 ] [323])
        (sign_extend:DI (reg:SI 1 dx [1497]))) "CLDRAD.f":330 149 {*extendsidi2_rex64}
     (nil))
(insn 1275 1274 1276 110 (parallel [
            (set (reg:DI 2 cx [orig:324 _238 ] [324])
                (mult:DI (reg:DI 1 dx [orig:323 _237 ] [323])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":330 349 {*muldi3_1}
     (nil))
(insn 1276 1275 1277 110 (set (reg:SI 1 dx [1498])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":330 86 {*movsi_internal}
     (nil))
(insn 1277 1276 1278 110 (set (reg:DI 1 dx [orig:325 _239 ] [325])
        (sign_extend:DI (reg:SI 1 dx [1498]))) "CLDRAD.f":330 149 {*extendsidi2_rex64}
     (nil))
(insn 1278 1277 4682 110 (parallel [
            (set (reg:DI 1 dx [orig:326 _240 ] [326])
                (plus:DI (reg:DI 1 dx [orig:325 _239 ] [325])
                    (reg:DI 2 cx [orig:324 _238 ] [324])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":330 222 {*adddi_1}
     (nil))
(insn 4682 1278 1280 110 (set (reg:DI 2 cx [orig:327 _241 ] [327])
        (plus:DI (reg:DI 1 dx [orig:326 _240 ] [326])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":330 218 {*leadi}
     (nil))
(insn 1280 4682 1281 110 (set (reg/f:DI 1 dx [1499])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":330 85 {*movdi_internal}
     (nil))
(insn 1281 1280 1282 110 (parallel [
            (set (reg:DI 2 cx [1500])
                (plus:DI (reg:DI 2 cx [orig:327 _241 ] [327])
                    (const_int 29633 [0x73c1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":330 222 {*adddi_1}
     (nil))
(insn 1282 1281 1283 110 (set (reg:SI 1 dx [orig:328 _242 ] [328])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1500])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1499])) [2 acmcld.ncfrcv S4 A32])) "CLDRAD.f":330 86 {*movsi_internal}
     (nil))
(insn 1283 1282 1284 110 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 1 dx [orig:328 _242 ] [328])
            (const_int 0 [0]))) "CLDRAD.f":330 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1284 1283 1285 110 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1319)
            (pc))) "CLDRAD.f":330 682 {*jcc}
     (nil)
 -> 1319)
;;  succ:       111 (FALLTHRU)
;;              112
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 111, loop depth 0, maybe hot
;;  prev block 110, next block 112, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       110 (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 1285 1284 1286 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 1286 1285 1287 111 (set (reg:SI 1 dx [1501])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":331 86 {*movsi_internal}
     (nil))
(insn 1287 1286 1288 111 (set (reg:DI 1 dx [orig:329 _243 ] [329])
        (sign_extend:DI (reg:SI 1 dx [1501]))) "CLDRAD.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1288 1287 1289 111 (parallel [
            (set (reg:DI 2 cx [orig:330 _244 ] [330])
                (mult:DI (reg:DI 1 dx [orig:329 _243 ] [329])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 349 {*muldi3_1}
     (nil))
(insn 1289 1288 1290 111 (set (reg:SI 1 dx [1502])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":331 86 {*movsi_internal}
     (nil))
(insn 1290 1289 1291 111 (set (reg:DI 1 dx [orig:331 _245 ] [331])
        (sign_extend:DI (reg:SI 1 dx [1502]))) "CLDRAD.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1291 1290 4679 111 (parallel [
            (set (reg:DI 1 dx [orig:332 _246 ] [332])
                (plus:DI (reg:DI 1 dx [orig:331 _245 ] [331])
                    (reg:DI 2 cx [orig:330 _244 ] [330])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 222 {*adddi_1}
     (nil))
(insn 4679 1291 1293 111 (set (reg:DI 2 cx [orig:333 _247 ] [333])
        (plus:DI (reg:DI 1 dx [orig:332 _246 ] [332])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":331 218 {*leadi}
     (nil))
(insn 1293 4679 1294 111 (set (reg/f:DI 1 dx [1503])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":331 85 {*movdi_internal}
     (nil))
(insn 1294 1293 1295 111 (parallel [
            (set (reg:DI 2 cx [1504])
                (plus:DI (reg:DI 2 cx [orig:333 _247 ] [333])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 222 {*adddi_1}
     (nil))
(insn 1295 1294 1296 111 (set (reg:SF 21 xmm0 [orig:334 _248 ] [334])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1504])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1503])) [1 acmcld.acfrcv S4 A32])) "CLDRAD.f":331 131 {*movsf_internal}
     (nil))
(insn 1296 1295 1297 111 (set (reg:SI 1 dx [1505])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":331 86 {*movsi_internal}
     (nil))
(insn 1297 1296 1298 111 (set (reg:DI 1 dx [orig:335 _249 ] [335])
        (sign_extend:DI (reg:SI 1 dx [1505]))) "CLDRAD.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1298 1297 1299 111 (parallel [
            (set (reg:DI 2 cx [orig:336 _250 ] [336])
                (mult:DI (reg:DI 1 dx [orig:335 _249 ] [335])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 349 {*muldi3_1}
     (nil))
(insn 1299 1298 1300 111 (set (reg:SI 1 dx [1506])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":331 86 {*movsi_internal}
     (nil))
(insn 1300 1299 1301 111 (set (reg:DI 1 dx [orig:337 _251 ] [337])
        (sign_extend:DI (reg:SI 1 dx [1506]))) "CLDRAD.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1301 1300 4680 111 (parallel [
            (set (reg:DI 1 dx [orig:338 _252 ] [338])
                (plus:DI (reg:DI 1 dx [orig:337 _251 ] [337])
                    (reg:DI 2 cx [orig:336 _250 ] [336])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 222 {*adddi_1}
     (nil))
(insn 4680 1301 1303 111 (set (reg:DI 2 cx [orig:339 _253 ] [339])
        (plus:DI (reg:DI 1 dx [orig:338 _252 ] [338])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":331 218 {*leadi}
     (nil))
(insn 1303 4680 1304 111 (set (reg/f:DI 1 dx [1507])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":331 85 {*movdi_internal}
     (nil))
(insn 1304 1303 1305 111 (parallel [
            (set (reg:DI 2 cx [1508])
                (plus:DI (reg:DI 2 cx [orig:339 _253 ] [339])
                    (const_int 29633 [0x73c1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 222 {*adddi_1}
     (nil))
(insn 1305 1304 1306 111 (set (reg:SI 1 dx [orig:340 _254 ] [340])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1508])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1507])) [2 acmcld.ncfrcv S4 A32])) "CLDRAD.f":331 86 {*movsi_internal}
     (nil))
(insn 1306 1305 1307 111 (set (reg:SF 22 xmm1 [orig:341 _255 ] [341])
        (float:SF (reg:SI 1 dx [orig:340 _254 ] [340]))) "CLDRAD.f":331 203 {*floatsisf2_mixed}
     (nil))
(insn 1307 1306 1308 111 (set (reg:SI 1 dx [1509])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":331 86 {*movsi_internal}
     (nil))
(insn 1308 1307 1309 111 (set (reg:DI 1 dx [orig:342 _256 ] [342])
        (sign_extend:DI (reg:SI 1 dx [1509]))) "CLDRAD.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1309 1308 1310 111 (parallel [
            (set (reg:DI 2 cx [orig:343 _257 ] [343])
                (mult:DI (reg:DI 1 dx [orig:342 _256 ] [342])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 349 {*muldi3_1}
     (nil))
(insn 1310 1309 1311 111 (set (reg:SI 1 dx [1510])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":331 86 {*movsi_internal}
     (nil))
(insn 1311 1310 1312 111 (set (reg:DI 1 dx [orig:344 _258 ] [344])
        (sign_extend:DI (reg:SI 1 dx [1510]))) "CLDRAD.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1312 1311 4681 111 (parallel [
            (set (reg:DI 1 dx [orig:345 _259 ] [345])
                (plus:DI (reg:DI 1 dx [orig:344 _258 ] [344])
                    (reg:DI 2 cx [orig:343 _257 ] [343])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":331 222 {*adddi_1}
     (nil))
(insn 4681 1312 1314 111 (set (reg:DI 2 cx [orig:346 _260 ] [346])
        (plus:DI (reg:DI 1 dx [orig:345 _259 ] [345])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":331 218 {*leadi}
     (nil))
(insn 1314 4681 1315 111 (set (reg:SF 21 xmm0 [orig:347 _261 ] [347])
        (div:SF (reg:SF 21 xmm0 [orig:334 _248 ] [334])
            (reg:SF 22 xmm1 [orig:341 _255 ] [341]))) "CLDRAD.f":331 841 {*fop_sf_1}
     (nil))
(insn 1315 1314 1316 111 (set (reg/f:DI 1 dx [1511])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":331 85 {*movdi_internal}
     (nil))
(insn 1316 1315 4195 111 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:346 _260 ] [346])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1511])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:347 _261 ] [347])) "CLDRAD.f":331 131 {*movsf_internal}
     (nil))
(jump_insn 4195 1316 4196 111 (set (pc)
        (label_ref 1331)) 683 {jump}
     (nil)
 -> 1331)
;;  succ:       113 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4196 4195 1319)
;; basic block 112, loop depth 0, maybe hot
;;  prev block 111, next block 113, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       110
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(code_label 1319 4196 1320 112 59 (nil) [1 uses])
(note 1320 1319 1321 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 1321 1320 1322 112 (set (reg:SI 1 dx [1512])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":333 86 {*movsi_internal}
     (nil))
(insn 1322 1321 1323 112 (set (reg:DI 1 dx [orig:348 _262 ] [348])
        (sign_extend:DI (reg:SI 1 dx [1512]))) "CLDRAD.f":333 149 {*extendsidi2_rex64}
     (nil))
(insn 1323 1322 1324 112 (parallel [
            (set (reg:DI 2 cx [orig:349 _263 ] [349])
                (mult:DI (reg:DI 1 dx [orig:348 _262 ] [348])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":333 349 {*muldi3_1}
     (nil))
(insn 1324 1323 1325 112 (set (reg:SI 1 dx [1513])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":333 86 {*movsi_internal}
     (nil))
(insn 1325 1324 1326 112 (set (reg:DI 1 dx [orig:350 _264 ] [350])
        (sign_extend:DI (reg:SI 1 dx [1513]))) "CLDRAD.f":333 149 {*extendsidi2_rex64}
     (nil))
(insn 1326 1325 4677 112 (parallel [
            (set (reg:DI 1 dx [orig:351 _265 ] [351])
                (plus:DI (reg:DI 1 dx [orig:350 _264 ] [350])
                    (reg:DI 2 cx [orig:349 _263 ] [349])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":333 222 {*adddi_1}
     (nil))
(insn 4677 1326 1328 112 (set (reg:DI 2 cx [orig:352 _266 ] [352])
        (plus:DI (reg:DI 1 dx [orig:351 _265 ] [351])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":333 218 {*leadi}
     (nil))
(insn 1328 4677 4678 112 (set (reg/f:DI 1 dx [1514])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":333 85 {*movdi_internal}
     (nil))
(insn 4678 1328 1330 112 (set (reg:SF 21 xmm0 [1515])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":333 131 {*movsf_internal}
     (nil))
(insn 1330 4678 1331 112 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:352 _266 ] [352])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1514])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [1515])) "CLDRAD.f":333 131 {*movsf_internal}
     (nil))
;;  succ:       113 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 113, loop depth 0, maybe hot
;;  prev block 112, next block 114, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       112 (FALLTHRU)
;;              111 [always] 
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 1331 1330 1332 113 60 (nil) [1 uses])
(note 1332 1331 1333 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 1333 1332 4197 113 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":329 221 {*addsi_1}
     (nil))
(jump_insn 4197 1333 4198 113 (set (pc)
        (label_ref 1334)) "CLDRAD.f":329 683 {jump}
     (nil)
 -> 1334)
;;  succ:       109 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4198 4197 4352)
;; basic block 114, loop depth 0, maybe hot
;;  prev block 113, next block 116, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       109
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4352 4198 4351 114 245 (nil) [1 uses])
(note 4351 4352 4353 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 4353 4351 1339 114 (const_int 0 [0]) "CLDRAD.f":330 718 {nop}
     (nil))
(insn 1339 4353 4199 114 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":328 221 {*addsi_1}
     (nil))
(jump_insn 4199 1339 4200 114 (set (pc)
        (label_ref 1340)) "CLDRAD.f":328 683 {jump}
     (nil)
 -> 1340)
;;  succ:       107 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4200 4199 4349)
;; basic block 116, loop depth 0, maybe hot
;;  prev block 114, next block 118, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       107
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4349 4200 4348 116 244 (nil) [1 uses])
(note 4348 4349 4350 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 4350 4348 1345 116 (const_int 0 [0]) "CLDRAD.f":329 718 {nop}
     (nil))
(insn 1345 4350 1346 116 (set (reg:DI 1 dx [1516])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1346 1345 1347 116 (set (reg:DI 0 ax [1517])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1347 1346 1348 116 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":338 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1348 1347 1349 116 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":338 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1349 1348 1350 116 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1516])) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1350 1349 1351 116 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1517])) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1351 1350 1352 116 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1352 1351 1353 116 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1353 1352 1354 116 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1354 1353 1355 116 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f2038fb47e0 *.LC15>)) "CLDRAD.f":338 85 {*movdi_internal}
     (nil))
(insn 1355 1354 1356 116 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":338 88 {*movqi_internal}
     (nil))
(call_insn 1356 1355 1357 116 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":338 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1357 1356 1358 116 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":338 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1358 1357 1359 116 (set (reg/f:DI 1 dx [1518])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":339 85 {*movdi_internal}
     (nil))
(insn 1359 1358 1360 116 (set (reg:DI 0 ax [1519])
        (const_int 0 [0])) "CLDRAD.f":339 85 {*movdi_internal}
     (nil))
(insn 1360 1359 4473 116 (set (reg:DI 2 cx [1520])
        (const_int 12 [0xc])) "CLDRAD.f":339 85 {*movdi_internal}
     (nil))
(insn 4473 1360 1361 116 (set (reg/f:DI 5 di [1518])
        (reg/f:DI 1 dx [1518])) "CLDRAD.f":339 85 {*movdi_internal}
     (nil))
(insn 1361 4473 4474 116 (parallel [
            (set (reg:DI 2 cx [1520])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1518])
                (plus:DI (ashift:DI (reg:DI 2 cx [1520])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1518])))
            (set (mem/c:BLK (reg/f:DI 5 di [1518]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1519]))
            (use (reg:DI 2 cx [1520]))
        ]) "CLDRAD.f":339 984 {*rep_stosdi_rex64}
     (nil))
(insn 4474 1361 1362 116 (set (reg/f:DI 1 dx [1518])
        (reg/f:DI 5 di [1518])) "CLDRAD.f":339 85 {*movdi_internal}
     (nil))
(insn 1362 4474 1363 116 (set (mem/c:SI (reg/f:DI 1 dx [1518]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1519])) "CLDRAD.f":339 86 {*movsi_internal}
     (nil))
(insn 1363 1362 1364 116 (parallel [
            (set (reg/f:DI 1 dx [1518])
                (plus:DI (reg/f:DI 1 dx [1518])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":339 222 {*adddi_1}
     (nil))
(insn 1364 1363 1365 116 (set (reg:SI 0 ax [1521])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":341 86 {*movsi_internal}
     (nil))
(insn 1365 1364 1366 116 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [1521])) "CLDRAD.f":341 86 {*movsi_internal}
     (nil))
(insn 1366 1365 1367 116 (set (reg/f:DI 0 ax [1522])
        (symbol_ref:DI ("acmcld_") [flags 0x202]  <var_decl 0x7f2040311ab0 acmcld>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 1367 1366 1368 116 (set (reg:SF 21 xmm0 [orig:353 _267 ] [353])
        (mem/c:SF (reg/f:DI 0 ax [1522]) [1 acmcld.tclod+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1368 1367 1369 116 (set (reg:SI 0 ax [1523])
        (fix:SI (reg:SF 21 xmm0 [orig:353 _267 ] [353]))) "CLDRAD.f":342 174 {fix_truncsfsi_sse}
     (nil))
(insn 1369 1368 1370 116 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])
        (reg:SI 0 ax [1523])) "CLDRAD.f":342 86 {*movsi_internal}
     (nil))
(insn 1370 1369 4675 116 (set (reg:SI 0 ax [1525])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":343 86 {*movsi_internal}
     (nil))
(insn 4675 1370 4676 116 (parallel [
            (set (reg:SI 1 dx [1526])
                (ashiftrt:SI (reg:SI 0 ax [1525])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":343 582 {ashrsi3_cvt}
     (nil))
(insn 4676 4675 1372 116 (parallel [
            (set (reg:SI 0 ax [1527])
                (div:SI (reg:SI 0 ax [1525])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (set (reg:SI 1 dx [1526])
                (mod:SI (reg:SI 0 ax [1525])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (use (reg:SI 1 dx [1526]))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":343 387 {*divmodsi4_noext}
     (nil))
(insn 1372 4676 1373 116 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [1526])) "CLDRAD.f":343 86 {*movsi_internal}
     (nil))
(insn 1373 1372 1374 116 (set (reg:SI 0 ax [1528])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":344 86 {*movsi_internal}
     (nil))
(insn 1374 1373 1375 116 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [1528])) "CLDRAD.f":344 86 {*movsi_internal}
     (nil))
(insn 1375 1374 1376 116 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":345 86 {*movsi_internal}
     (nil))
(insn 1376 1375 1377 116 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":346 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1377 1376 1378 116 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1384)
            (pc))) "CLDRAD.f":346 682 {*jcc}
     (nil)
 -> 1384)
;;  succ:       118 (FALLTHRU)
;;              119
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 118, loop depth 0, maybe hot
;;  prev block 116, next block 119, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       116 (FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1378 1377 1379 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 1379 1378 1380 118 (set (reg:SI 0 ax [1529])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":347 86 {*movsi_internal}
     (nil))
(insn 1380 1379 1381 118 (parallel [
            (set (reg:SI 0 ax [orig:354 _268 ] [354])
                (minus:SI (reg:SI 0 ax [1529])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -124 [0xffffffffffffff84])) [2 itclod+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":347 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -92 [0xffffffffffffffa4])) [2 itclod+0 S4 A32]))
        (nil)))
(insn 1381 1380 4201 118 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:354 _268 ] [354])) "CLDRAD.f":347 86 {*movsi_internal}
     (nil))
(jump_insn 4201 1381 4202 118 (set (pc)
        (label_ref 1389)) 683 {jump}
     (nil)
 -> 1389)
;;  succ:       120 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4202 4201 1384)
;; basic block 119, loop depth 0, maybe hot
;;  prev block 118, next block 120, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       116
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1384 4202 1385 119 63 (nil) [1 uses])
(note 1385 1384 1386 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 1386 1385 1387 119 (set (reg:SI 0 ax [1530])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":349 86 {*movsi_internal}
     (nil))
(insn 1387 1386 1388 119 (parallel [
            (set (reg:SI 0 ax [orig:355 _269 ] [355])
                (minus:SI (reg:SI 0 ax [1530])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":349 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 1388 1387 1389 119 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:355 _269 ] [355])) "CLDRAD.f":349 86 {*movsi_internal}
     (nil))
;;  succ:       120 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 120, loop depth 0, maybe hot
;;  prev block 119, next block 121, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       119 (FALLTHRU)
;;              118 [always] 
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1389 1388 1390 120 64 (nil) [1 uses])
(note 1390 1389 1391 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 1391 1390 1392 120 (set (reg:SI 0 ax [orig:356 _270 ] [356])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":351 86 {*movsi_internal}
     (nil))
(insn 1392 1391 1393 120 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:356 _270 ] [356])
            (const_int 0 [0]))) "CLDRAD.f":351 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1393 1392 1394 120 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 1396)
            (pc))) "CLDRAD.f":351 682 {*jcc}
     (nil)
 -> 1396)
;;  succ:       121 (FALLTHRU)
;;              122
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 121, loop depth 0, maybe hot
;;  prev block 120, next block 122, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       120 (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 1394 1393 1395 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 1395 1394 1396 121 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":351 86 {*movsi_internal}
     (nil))
;;  succ:       122 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 122, loop depth 0, maybe hot
;;  prev block 121, next block 123, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       120
;;              121 (FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1396 1395 1397 122 65 (nil) [1 uses])
(note 1397 1396 1398 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 1398 1397 1399 122 (set (reg:DI 2 cx [1531])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":352 85 {*movdi_internal}
     (nil))
(insn 1399 1398 1400 122 (set (reg:DI 1 dx [1532])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":352 85 {*movdi_internal}
     (nil))
(insn 1400 1399 1403 122 (set (reg:DI 0 ax [1533])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":352 85 {*movdi_internal}
     (nil))
(insn 1403 1400 1404 122 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f2038fb4480 *.LC8>)) "CLDRAD.f":352 85 {*movdi_internal}
     (nil))
(insn 1404 1403 1405 122 (set (reg:DI 5 di)
        (reg:DI 0 ax [1533])) "CLDRAD.f":352 85 {*movdi_internal}
     (nil))
(insn 1405 1404 1406 122 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":352 88 {*movqi_internal}
     (nil))
(call_insn 1406 1405 1407 122 (call (mem:QI (symbol_ref:DI ("sclfld_") [flags 0x41]  <function_decl 0x7f203929eb00 sclfld>) [0 sclfld S1 A8])
        (const_int 0 [0])) "CLDRAD.f":352 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1407 1406 1408 122 (set (reg:SI 0 ax [orig:357 _271 ] [357])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 584 [0x248]))) [2 rqstfld.iget+568 S4 A64])) "CLDRAD.f":354 86 {*movsi_internal}
     (nil))
(insn 1408 1407 4673 122 (set (reg:DI 0 ax [orig:358 _272 ] [358])
        (sign_extend:DI (reg:SI 0 ax [orig:357 _271 ] [357]))) "CLDRAD.f":354 149 {*extendsidi2_rex64}
     (nil))
(insn 4673 1408 1410 122 (set (reg:DI 1 dx [orig:359 _273 ] [359])
        (plus:DI (reg:DI 0 ax [orig:358 _272 ] [358])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":354 218 {*leadi}
     (nil))
(insn 1410 4673 1411 122 (set (reg:DI 0 ax [1534])
        (reg:DI 1 dx [orig:359 _273 ] [359])) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1411 1410 1413 122 (parallel [
            (set (reg:DI 0 ax [1535])
                (ashift:DI (reg:DI 0 ax [1534])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":354 551 {*ashldi3_1}
     (nil))
(insn 1413 1411 1414 122 (parallel [
            (set (reg:DI 0 ax [1534])
                (minus:DI (reg:DI 0 ax [1534])
                    (reg:DI 1 dx [orig:359 _273 ] [359])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":354 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:359 _273 ] [359])
            (const_int 15 [0xf]))
        (nil)))
(insn 1414 1413 1417 122 (parallel [
            (set (reg:DI 0 ax [1536])
                (ashift:DI (reg:DI 0 ax [1534])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":354 551 {*ashldi3_1}
     (nil))
(insn 1417 1414 1418 122 (parallel [
            (set (reg:DI 0 ax [1537])
                (plus:DI (reg:DI 0 ax [orig:360 _274 ] [360])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":354 222 {*adddi_1}
     (nil))
(insn 1418 1417 4674 122 (parallel [
            (set (reg:DI 0 ax [1538])
                (ashift:DI (reg:DI 0 ax [1537])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":354 551 {*ashldi3_1}
     (nil))
(insn 4674 1418 1420 122 (set (reg/f:DI 1 dx [orig:361 _275 ] [361])
        (plus:DI (reg:DI 0 ax [1538])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":354 218 {*leadi}
     (nil))
(insn 1420 4674 1421 122 (set (reg:DI 4 si [1539])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1421 1420 1422 122 (set (reg:DI 2 cx [1540])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1422 1421 1423 122 (set (reg:DI 0 ax [1541])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1423 1422 1424 122 (set (reg:DI 38 r9)
        (reg:DI 4 si [1539])) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1424 1423 1425 122 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1540])) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1425 1424 1427 122 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1541])) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1427 1425 1428 122 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 584 [0x248])))) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1428 1427 1429 122 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":354 85 {*movdi_internal}
     (nil))
(insn 1429 1428 1430 122 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":354 88 {*movqi_internal}
     (nil))
(call_insn 1430 1429 1431 122 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":354 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       123 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 123, loop depth 0, maybe hot
;;  prev block 122, next block 124, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       105
;;              122 (FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1431 1430 1432 123 56 (nil) [1 uses])
(note 1432 1431 1433 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 1433 1432 1434 123 (set (reg:SI 0 ax [orig:362 _276 ] [362])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 604 [0x25c]))) [2 rqstfld.iget+588 S4 A32])) "CLDRAD.f":358 86 {*movsi_internal}
     (nil))
(insn 1434 1433 1435 123 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:362 _276 ] [362])
            (const_int 0 [0]))) "CLDRAD.f":358 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1435 1434 1436 123 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1440)
            (pc))) "CLDRAD.f":358 682 {*jcc}
     (nil)
 -> 1440)
;;  succ:       125
;;              124 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 124, loop depth 0, maybe hot
;;  prev block 123, next block 125, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       123 (FALLTHRU)
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1436 1435 1437 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 1437 1436 1438 124 (set (reg:SI 0 ax [orig:363 _277 ] [363])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 724 [0x2d4]))) [2 rqstfld.iget+708 S4 A32])) "CLDRAD.f":358 86 {*movsi_internal}
     (nil))
(insn 1438 1437 1439 124 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:363 _277 ] [363])
            (const_int 0 [0]))) "CLDRAD.f":358 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1439 1438 1440 124 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1972)
            (pc))) "CLDRAD.f":358 682 {*jcc}
     (nil)
 -> 1972)
;;  succ:       125 (FALLTHRU)
;;              161
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 125, loop depth 0, maybe hot
;;  prev block 124, next block 126, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       123
;;              124 (FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 21 [xmm0]
(code_label 1440 1439 1441 125 66 (nil) [1 uses])
(note 1441 1440 1442 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 1442 1441 1443 125 (set (reg:SF 21 xmm0 [1542])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":359 131 {*movsf_internal}
     (nil))
(insn 1443 1442 1444 125 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 climit+0 S4 A32])
        (reg:SF 21 xmm0 [1542])) "CLDRAD.f":359 131 {*movsf_internal}
     (nil))
(insn 1444 1443 1445 125 (set (reg:SI 1 dx [orig:1139 _1341 ] [1139])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":360 86 {*movsi_internal}
     (nil))
(insn 1445 1444 1446 125 (set (reg:SI 0 ax [orig:1140 _1342 ] [1140])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":360 86 {*movsi_internal}
     (nil))
(insn 1446 1445 1498 125 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1139 _1341 ] [1139])) "CLDRAD.f":360 86 {*movsi_internal}
     (nil))
;;  succ:       126 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 126, loop depth 0, maybe hot
;;  prev block 125, next block 127, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       125 (FALLTHRU)
;;              130 [always] 
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 1498 1446 1447 126 71 (nil) [1 uses])
(note 1447 1498 1448 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 1448 1447 1449 126 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1140 _1342 ] [1140]))) "CLDRAD.f":360 11 {*cmpsi_1}
     (nil))
(insn 1449 1448 1450 126 (set (reg:QI 1 dx [1543])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":360 678 {*setcc_qi}
     (nil))
(insn 1450 1449 1451 126 (set (reg:SI 1 dx [orig:1141 _1344 ] [1141])
        (zero_extend:SI (reg:QI 1 dx [1543]))) "CLDRAD.f":360 140 {*zero_extendqisi2}
     (nil))
(insn 1451 1450 1452 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1141 _1344 ] [1141])
            (const_int 0 [0]))) "CLDRAD.f":360 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1452 1451 1453 126 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4355)
            (pc))) "CLDRAD.f":360 682 {*jcc}
     (nil)
 -> 4355)
;;  succ:       132
;;              127 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 127, loop depth 0, maybe hot
;;  prev block 126, next block 128, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       126 (FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 1453 1452 1454 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 1454 1453 1492 127 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":361 86 {*movsi_internal}
     (nil))
;;  succ:       128 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 128, loop depth 0, maybe hot
;;  prev block 127, next block 129, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       127 (FALLTHRU)
;;              129 [always] 
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 1492 1454 1455 128 70 (nil) [1 uses])
(note 1455 1492 1456 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 1456 1455 1457 128 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":361 11 {*cmpsi_1}
     (nil))
(insn 1457 1456 1458 128 (set (reg:QI 1 dx [1544])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":361 678 {*setcc_qi}
     (nil))
(insn 1458 1457 1459 128 (set (reg:SI 1 dx [orig:1142 _1346 ] [1142])
        (zero_extend:SI (reg:QI 1 dx [1544]))) "CLDRAD.f":361 140 {*zero_extendqisi2}
     (nil))
(insn 1459 1458 1460 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1142 _1346 ] [1142])
            (const_int 0 [0]))) "CLDRAD.f":361 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1460 1459 1461 128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4358)
            (pc))) "CLDRAD.f":361 682 {*jcc}
     (nil)
 -> 4358)
;;  succ:       130
;;              129 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 129, loop depth 0, maybe hot
;;  prev block 128, next block 130, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       128 (FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 1461 1460 1462 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 1462 1461 1463 129 (set (reg:SI 1 dx [1545])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":362 86 {*movsi_internal}
     (nil))
(insn 1463 1462 1464 129 (set (reg:DI 1 dx [orig:364 _278 ] [364])
        (sign_extend:DI (reg:SI 1 dx [1545]))) "CLDRAD.f":362 149 {*extendsidi2_rex64}
     (nil))
(insn 1464 1463 1465 129 (parallel [
            (set (reg:DI 2 cx [orig:365 _279 ] [365])
                (mult:DI (reg:DI 1 dx [orig:364 _278 ] [364])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":362 349 {*muldi3_1}
     (nil))
(insn 1465 1464 1466 129 (set (reg:SI 1 dx [1546])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":362 86 {*movsi_internal}
     (nil))
(insn 1466 1465 1467 129 (set (reg:DI 1 dx [orig:366 _280 ] [366])
        (sign_extend:DI (reg:SI 1 dx [1546]))) "CLDRAD.f":362 149 {*extendsidi2_rex64}
     (nil))
(insn 1467 1466 4670 129 (parallel [
            (set (reg:DI 1 dx [orig:367 _281 ] [367])
                (plus:DI (reg:DI 1 dx [orig:366 _280 ] [366])
                    (reg:DI 2 cx [orig:365 _279 ] [365])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":362 222 {*adddi_1}
     (nil))
(insn 4670 1467 1469 129 (set (reg:DI 2 cx [orig:368 _282 ] [368])
        (plus:DI (reg:DI 1 dx [orig:367 _281 ] [367])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":362 218 {*leadi}
     (nil))
(insn 1469 4670 1470 129 (set (reg/f:DI 1 dx [1547])
        (symbol_ref:DI ("need.4414") [flags 0x202]  <var_decl 0x7f2038edcbd0 need>)) "CLDRAD.f":362 85 {*movdi_internal}
     (nil))
(insn 1470 1469 1471 129 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:368 _282 ] [368])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1547])) [7 need S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":362 86 {*movsi_internal}
     (nil))
(insn 1471 1470 1472 129 (set (reg:SI 1 dx [1548])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":363 86 {*movsi_internal}
     (nil))
(insn 1472 1471 1473 129 (set (reg:DI 1 dx [orig:369 _283 ] [369])
        (sign_extend:DI (reg:SI 1 dx [1548]))) "CLDRAD.f":363 149 {*extendsidi2_rex64}
     (nil))
(insn 1473 1472 1474 129 (parallel [
            (set (reg:DI 2 cx [orig:370 _284 ] [370])
                (mult:DI (reg:DI 1 dx [orig:369 _283 ] [369])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":363 349 {*muldi3_1}
     (nil))
(insn 1474 1473 1475 129 (set (reg:SI 1 dx [1549])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":363 86 {*movsi_internal}
     (nil))
(insn 1475 1474 1476 129 (set (reg:DI 1 dx [orig:371 _285 ] [371])
        (sign_extend:DI (reg:SI 1 dx [1549]))) "CLDRAD.f":363 149 {*extendsidi2_rex64}
     (nil))
(insn 1476 1475 4671 129 (parallel [
            (set (reg:DI 1 dx [orig:372 _286 ] [372])
                (plus:DI (reg:DI 1 dx [orig:371 _285 ] [371])
                    (reg:DI 2 cx [orig:370 _284 ] [370])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":363 222 {*adddi_1}
     (nil))
(insn 4671 1476 1478 129 (set (reg:DI 2 cx [orig:373 _287 ] [373])
        (plus:DI (reg:DI 1 dx [orig:372 _286 ] [372])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":363 218 {*leadi}
     (nil))
(insn 1478 4671 1479 129 (set (reg:SF 21 xmm0 [orig:374 _288 ] [374])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f20392c1870 options>) [1 options.spval+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1479 1478 1480 129 (set (reg/f:DI 1 dx [1550])
        (symbol_ref:DI ("cldbp.4367") [flags 0x202]  <var_decl 0x7f20392d76c0 cldbp>)) "CLDRAD.f":363 85 {*movdi_internal}
     (nil))
(insn 1480 1479 1481 129 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:373 _287 ] [373])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1550])) [1 cldbp S4 A32])
        (reg:SF 21 xmm0 [orig:374 _288 ] [374])) "CLDRAD.f":363 131 {*movsf_internal}
     (nil))
(insn 1481 1480 1482 129 (set (reg:SI 1 dx [1551])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":364 86 {*movsi_internal}
     (nil))
(insn 1482 1481 1483 129 (set (reg:DI 1 dx [orig:375 _289 ] [375])
        (sign_extend:DI (reg:SI 1 dx [1551]))) "CLDRAD.f":364 149 {*extendsidi2_rex64}
     (nil))
(insn 1483 1482 1484 129 (parallel [
            (set (reg:DI 2 cx [orig:376 _290 ] [376])
                (mult:DI (reg:DI 1 dx [orig:375 _289 ] [375])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":364 349 {*muldi3_1}
     (nil))
(insn 1484 1483 1485 129 (set (reg:SI 1 dx [1552])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":364 86 {*movsi_internal}
     (nil))
(insn 1485 1484 1486 129 (set (reg:DI 1 dx [orig:377 _291 ] [377])
        (sign_extend:DI (reg:SI 1 dx [1552]))) "CLDRAD.f":364 149 {*extendsidi2_rex64}
     (nil))
(insn 1486 1485 4672 129 (parallel [
            (set (reg:DI 1 dx [orig:378 _292 ] [378])
                (plus:DI (reg:DI 1 dx [orig:377 _291 ] [377])
                    (reg:DI 2 cx [orig:376 _290 ] [376])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":364 222 {*adddi_1}
     (nil))
(insn 4672 1486 1488 129 (set (reg:DI 2 cx [orig:379 _293 ] [379])
        (plus:DI (reg:DI 1 dx [orig:378 _292 ] [378])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":364 218 {*leadi}
     (nil))
(insn 1488 4672 1489 129 (set (reg:SF 21 xmm0 [orig:380 _294 ] [380])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f20392c1870 options>) [1 options.spval+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1489 1488 1490 129 (set (reg/f:DI 1 dx [1553])
        (symbol_ref:DI ("cldbz.4369") [flags 0x202]  <var_decl 0x7f20392d7750 cldbz>)) "CLDRAD.f":364 85 {*movdi_internal}
     (nil))
(insn 1490 1489 1491 129 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:379 _293 ] [379])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1553])) [1 cldbz S4 A32])
        (reg:SF 21 xmm0 [orig:380 _294 ] [380])) "CLDRAD.f":364 131 {*movsf_internal}
     (nil))
(insn 1491 1490 4203 129 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":361 221 {*addsi_1}
     (nil))
(jump_insn 4203 1491 4204 129 (set (pc)
        (label_ref 1492)) "CLDRAD.f":361 683 {jump}
     (nil)
 -> 1492)
;;  succ:       128 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4204 4203 4358)
;; basic block 130, loop depth 0, maybe hot
;;  prev block 129, next block 132, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       128
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4358 4204 4357 130 247 (nil) [1 uses])
(note 4357 4358 4359 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 4359 4357 1497 130 (const_int 0 [0]) "CLDRAD.f":364 718 {nop}
     (nil))
(insn 1497 4359 4205 130 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":360 221 {*addsi_1}
     (nil))
(jump_insn 4205 1497 4206 130 (set (pc)
        (label_ref 1498)) "CLDRAD.f":360 683 {jump}
     (nil)
 -> 1498)
;;  succ:       126 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4206 4205 4355)
;; basic block 132, loop depth 0, maybe hot
;;  prev block 130, next block 134, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       126
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4355 4206 4354 132 246 (nil) [1 uses])
(note 4354 4355 4356 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 4356 4354 1503 132 (const_int 0 [0]) "CLDRAD.f":361 718 {nop}
     (nil))
(insn 1503 4356 1504 132 (set (reg:SI 0 ax [orig:1143 _1352 ] [1143])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":370 86 {*movsi_internal}
     (nil))
(insn 1504 1503 1505 132 (set (reg:SI 3 bx [orig:1144 _1353 ] [1144])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":370 86 {*movsi_internal}
     (nil))
(insn 1505 1504 1871 132 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 0 ax [orig:1143 _1352 ] [1143])) "CLDRAD.f":370 86 {*movsi_internal}
     (nil))
;;  succ:       134 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 134, loop depth 0, maybe hot
;;  prev block 132, next block 135, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       132 (FALLTHRU)
;;              154 [always] 
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1871 1505 1506 134 86 (nil) [1 uses])
(note 1506 1871 1507 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 1507 1506 1508 134 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 3 bx [orig:1144 _1353 ] [1144]))) "CLDRAD.f":370 11 {*cmpsi_1}
     (nil))
(insn 1508 1507 1509 134 (set (reg:QI 0 ax [1554])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":370 678 {*setcc_qi}
     (nil))
(insn 1509 1508 1510 134 (set (reg:SI 0 ax [orig:1145 _1355 ] [1145])
        (zero_extend:SI (reg:QI 0 ax [1554]))) "CLDRAD.f":370 140 {*zero_extendqisi2}
     (nil))
(insn 1510 1509 1511 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1145 _1355 ] [1145])
            (const_int 0 [0]))) "CLDRAD.f":370 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1511 1510 1512 134 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4361)
            (pc))) "CLDRAD.f":370 682 {*jcc}
     (nil)
 -> 4361)
;;  succ:       156
;;              135 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 135, loop depth 0, maybe hot
;;  prev block 134, next block 136, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       134 (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 1512 1511 1513 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1513 1512 1865 135 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":371 86 {*movsi_internal}
     (nil))
;;  succ:       136 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 136, loop depth 0, maybe hot
;;  prev block 135, next block 137, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       135 (FALLTHRU)
;;              153 [always] 
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1865 1513 1514 136 85 (nil) [1 uses])
(note 1514 1865 1515 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 1515 1514 1516 136 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":371 11 {*cmpsi_1}
     (nil))
(insn 1516 1515 1517 136 (set (reg:QI 0 ax [1555])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":371 678 {*setcc_qi}
     (nil))
(insn 1517 1516 1518 136 (set (reg:SI 0 ax [orig:1146 _1357 ] [1146])
        (zero_extend:SI (reg:QI 0 ax [1555]))) "CLDRAD.f":371 140 {*zero_extendqisi2}
     (nil))
(insn 1518 1517 1519 136 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1146 _1357 ] [1146])
            (const_int 0 [0]))) "CLDRAD.f":371 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1519 1518 1520 136 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4364)
            (pc))) "CLDRAD.f":371 682 {*jcc}
     (nil)
 -> 4364)
;;  succ:       154
;;              137 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 137, loop depth 0, maybe hot
;;  prev block 136, next block 138, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       136 (FALLTHRU)
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
(note 1520 1519 1521 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 1521 1520 1522 137 (set (reg:SI 0 ax [1556])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":372 86 {*movsi_internal}
     (nil))
(insn 1522 1521 1523 137 (set (reg:DI 0 ax [orig:381 _295 ] [381])
        (sign_extend:DI (reg:SI 0 ax [1556]))) "CLDRAD.f":372 149 {*extendsidi2_rex64}
     (nil))
(insn 1523 1522 1524 137 (parallel [
            (set (reg:DI 1 dx [orig:382 _296 ] [382])
                (mult:DI (reg:DI 0 ax [orig:381 _295 ] [381])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":372 349 {*muldi3_1}
     (nil))
(insn 1524 1523 1525 137 (set (reg:SI 0 ax [1557])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":372 86 {*movsi_internal}
     (nil))
(insn 1525 1524 1526 137 (set (reg:DI 0 ax [orig:383 _297 ] [383])
        (sign_extend:DI (reg:SI 0 ax [1557]))) "CLDRAD.f":372 149 {*extendsidi2_rex64}
     (nil))
(insn 1526 1525 4669 137 (parallel [
            (set (reg:DI 0 ax [orig:384 _298 ] [384])
                (plus:DI (reg:DI 0 ax [orig:383 _297 ] [383])
                    (reg:DI 1 dx [orig:382 _296 ] [382])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":372 222 {*adddi_1}
     (nil))
(insn 4669 1526 1528 137 (set (reg:DI 1 dx [orig:385 _299 ] [385])
        (plus:DI (reg:DI 0 ax [orig:384 _298 ] [384])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":372 218 {*leadi}
     (nil))
(insn 1528 4669 1529 137 (set (reg/f:DI 0 ax [1558])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f20392b7bd0 loops>)) "CLDRAD.f":372 85 {*movdi_internal}
     (nil))
(insn 1529 1528 1530 137 (parallel [
            (set (reg:DI 1 dx [1559])
                (plus:DI (reg:DI 1 dx [orig:385 _299 ] [385])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":372 222 {*adddi_1}
     (nil))
(insn 1530 1529 1531 137 (set (reg:SI 0 ax [1560])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [1559])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1558])) [2 loops.lmh S4 A32])) "CLDRAD.f":372 86 {*movsi_internal}
     (nil))
(insn 1531 1530 1532 137 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [2 llmh+0 S4 A32])
        (reg:SI 0 ax [1560])) "CLDRAD.f":372 86 {*movsi_internal}
     (nil))
(insn 1532 1531 1533 137 (set (reg:SF 21 xmm0 [1561])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":373 131 {*movsf_internal}
     (nil))
(insn 1533 1532 1534 137 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])
        (reg:SF 21 xmm0 [1561])) "CLDRAD.f":373 131 {*movsf_internal}
     (nil))
(insn 1534 1533 1535 137 (set (reg:SI 0 ax [orig:1147 _1360 ] [1147])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [2 llmh+0 S4 A32])) "CLDRAD.f":374 86 {*movsi_internal}
     (nil))
(insn 1535 1534 1617 137 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
        (reg:SI 0 ax [orig:1147 _1360 ] [1147])) "CLDRAD.f":374 86 {*movsi_internal}
     (nil))
;;  succ:       138 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 138, loop depth 0, maybe hot
;;  prev block 137, next block 139, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       137 (FALLTHRU)
;;              144 [always] 
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1617 1535 1536 138 79 (nil) [1 uses])
(note 1536 1617 1537 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 1537 1536 1538 138 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":374 7 {*cmpsi_ccno_1}
     (nil))
(insn 1538 1537 1539 138 (set (reg:QI 0 ax [1562])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":374 678 {*setcc_qi}
     (nil))
(insn 1539 1538 1540 138 (set (reg:SI 0 ax [orig:1148 _1362 ] [1148])
        (zero_extend:SI (reg:QI 0 ax [1562]))) "CLDRAD.f":374 140 {*zero_extendqisi2}
     (nil))
(insn 1540 1539 1541 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1148 _1362 ] [1148])
            (const_int 0 [0]))) "CLDRAD.f":374 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1541 1540 1542 138 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4367)
            (pc))) "CLDRAD.f":374 682 {*jcc}
     (nil)
 -> 4367)
;;  succ:       145
;;              139 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 139, loop depth 0, maybe hot
;;  prev block 138, next block 140, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       138 (FALLTHRU)
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
(note 1542 1541 1543 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 1543 1542 1544 139 (set (reg:SI 0 ax [1563])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])) "CLDRAD.f":382 86 {*movsi_internal}
     (nil))
(insn 1544 1543 1545 139 (set (reg:DI 0 ax [orig:386 _300 ] [386])
        (sign_extend:DI (reg:SI 0 ax [1563]))) "CLDRAD.f":382 149 {*extendsidi2_rex64}
     (nil))
(insn 1545 1544 1546 139 (parallel [
            (set (reg:DI 1 dx [orig:387 _301 ] [387])
                (mult:DI (reg:DI 0 ax [orig:386 _300 ] [386])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":382 349 {*muldi3_1}
     (nil))
(insn 1546 1545 1547 139 (set (reg:SI 0 ax [1564])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":382 86 {*movsi_internal}
     (nil))
(insn 1547 1546 1548 139 (set (reg:DI 0 ax [orig:388 _302 ] [388])
        (sign_extend:DI (reg:SI 0 ax [1564]))) "CLDRAD.f":382 149 {*extendsidi2_rex64}
     (nil))
(insn 1548 1547 1549 139 (parallel [
            (set (reg:DI 0 ax [orig:389 _303 ] [389])
                (mult:DI (reg:DI 0 ax [orig:388 _302 ] [388])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":382 349 {*muldi3_1}
     (nil))
(insn 1549 1548 1550 139 (parallel [
            (set (reg:DI 1 dx [orig:390 _304 ] [390])
                (plus:DI (reg:DI 1 dx [orig:387 _301 ] [387])
                    (reg:DI 0 ax [orig:389 _303 ] [389])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":382 222 {*adddi_1}
     (nil))
(insn 1550 1549 1551 139 (set (reg:SI 0 ax [1565])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":382 86 {*movsi_internal}
     (nil))
(insn 1551 1550 1552 139 (set (reg:DI 0 ax [orig:391 _305 ] [391])
        (sign_extend:DI (reg:SI 0 ax [1565]))) "CLDRAD.f":382 149 {*extendsidi2_rex64}
     (nil))
(insn 1552 1551 4668 139 (parallel [
            (set (reg:DI 0 ax [orig:392 _306 ] [392])
                (plus:DI (reg:DI 0 ax [orig:391 _305 ] [391])
                    (reg:DI 1 dx [orig:390 _304 ] [390])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":382 222 {*adddi_1}
     (nil))
(insn 4668 1552 1554 139 (set (reg:DI 1 dx [orig:393 _307 ] [393])
        (plus:DI (reg:DI 0 ax [orig:392 _306 ] [392])
            (const_int -29751 [0xffffffffffff8bc9]))) "CLDRAD.f":382 218 {*leadi}
     (nil))
(insn 1554 4668 1555 139 (set (reg/f:DI 0 ax [1566])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f20392a8a20 cldwtr>)) "CLDRAD.f":382 85 {*movdi_internal}
     (nil))
(insn 1555 1554 1556 139 (set (reg:SF 21 xmm0 [orig:394 _308 ] [394])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:393 _307 ] [393])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1566])) [1 cldwtr.cwm S4 A32])) "CLDRAD.f":382 131 {*movsf_internal}
     (nil))
(insn 1556 1555 1557 139 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:394 _308 ] [394])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -132 [0xffffffffffffff7c])) [1 climit+0 S4 A32]))) "CLDRAD.f":382 53 {*cmpisf}
     (nil))
(jump_insn 1557 1556 1561 139 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1614)
            (pc))) "CLDRAD.f":382 682 {*jcc}
     (nil)
 -> 1614)
;;  succ:       140 (FALLTHRU)
;;              144
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 140, loop depth 0, maybe hot
;;  prev block 139, next block 141, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       139 (FALLTHRU)
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(note 1561 1557 1562 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 1562 1561 1563 140 (set (reg:SI 0 ax [1567])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":382 86 {*movsi_internal}
     (nil))
(insn 1563 1562 1564 140 (set (reg:DI 0 ax [orig:395 _309 ] [395])
        (sign_extend:DI (reg:SI 0 ax [1567]))) "CLDRAD.f":382 149 {*extendsidi2_rex64}
     (nil))
(insn 1564 1563 1565 140 (parallel [
            (set (reg:DI 1 dx [orig:396 _310 ] [396])
                (mult:DI (reg:DI 0 ax [orig:395 _309 ] [395])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":382 349 {*muldi3_1}
     (nil))
(insn 1565 1564 1566 140 (set (reg:SI 0 ax [1568])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":382 86 {*movsi_internal}
     (nil))
(insn 1566 1565 1567 140 (set (reg:DI 0 ax [orig:397 _311 ] [397])
        (sign_extend:DI (reg:SI 0 ax [1568]))) "CLDRAD.f":382 149 {*extendsidi2_rex64}
     (nil))
(insn 1567 1566 4667 140 (parallel [
            (set (reg:DI 0 ax [orig:398 _312 ] [398])
                (plus:DI (reg:DI 0 ax [orig:397 _311 ] [397])
                    (reg:DI 1 dx [orig:396 _310 ] [396])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":382 222 {*adddi_1}
     (nil))
(insn 4667 1567 1569 140 (set (reg:DI 1 dx [orig:399 _313 ] [399])
        (plus:DI (reg:DI 0 ax [orig:398 _312 ] [398])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":382 218 {*leadi}
     (nil))
(insn 1569 4667 1570 140 (set (reg/f:DI 0 ax [1569])
        (symbol_ref:DI ("need.4414") [flags 0x202]  <var_decl 0x7f2038edcbd0 need>)) "CLDRAD.f":382 85 {*movdi_internal}
     (nil))
(insn 1570 1569 1571 140 (set (reg:SI 0 ax [orig:400 _314 ] [400])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:399 _313 ] [399])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1569])) [7 need S4 A32])) "CLDRAD.f":382 86 {*movsi_internal}
     (nil))
(insn 1571 1570 1572 140 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:400 _314 ] [400])
            (const_int 0 [0]))) "CLDRAD.f":382 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1572 1571 1573 140 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1614)
            (pc))) "CLDRAD.f":382 682 {*jcc}
     (nil)
 -> 1614)
;;  succ:       141 (FALLTHRU)
;;              144
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 141, loop depth 0, maybe hot
;;  prev block 140, next block 142, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       140 (FALLTHRU)
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
(note 1573 1572 1574 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 1574 1573 1575 141 (set (reg:SF 21 xmm0 [1570])
        (float:SF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32]))) "CLDRAD.f":383 203 {*floatsisf2_mixed}
     (nil))
(insn 1575 1574 1576 141 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])
        (reg:SF 21 xmm0 [1570])) "CLDRAD.f":383 131 {*movsf_internal}
     (nil))
(insn 1576 1575 1577 141 (set (reg:SI 0 ax [1571])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":384 86 {*movsi_internal}
     (nil))
(insn 1577 1576 1578 141 (set (reg:DI 0 ax [orig:401 _315 ] [401])
        (sign_extend:DI (reg:SI 0 ax [1571]))) "CLDRAD.f":384 149 {*extendsidi2_rex64}
     (nil))
(insn 1578 1577 1579 141 (parallel [
            (set (reg:DI 1 dx [orig:402 _316 ] [402])
                (mult:DI (reg:DI 0 ax [orig:401 _315 ] [401])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":384 349 {*muldi3_1}
     (nil))
(insn 1579 1578 1580 141 (set (reg:SI 0 ax [1572])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":384 86 {*movsi_internal}
     (nil))
(insn 1580 1579 1581 141 (set (reg:DI 0 ax [orig:403 _317 ] [403])
        (sign_extend:DI (reg:SI 0 ax [1572]))) "CLDRAD.f":384 149 {*extendsidi2_rex64}
     (nil))
(insn 1581 1580 4666 141 (parallel [
            (set (reg:DI 0 ax [orig:404 _318 ] [404])
                (plus:DI (reg:DI 0 ax [orig:403 _317 ] [403])
                    (reg:DI 1 dx [orig:402 _316 ] [402])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":384 222 {*adddi_1}
     (nil))
(insn 4666 1581 1583 141 (set (reg:DI 1 dx [orig:405 _319 ] [405])
        (plus:DI (reg:DI 0 ax [orig:404 _318 ] [404])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":384 218 {*leadi}
     (nil))
(insn 1583 4666 1584 141 (set (reg/f:DI 0 ax [1573])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":384 85 {*movdi_internal}
     (nil))
(insn 1584 1583 1585 141 (parallel [
            (set (reg:DI 1 dx [1574])
                (plus:DI (reg:DI 1 dx [orig:405 _319 ] [405])
                    (const_int 297170 [0x488d2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":384 222 {*adddi_1}
     (nil))
(insn 1585 1584 1586 141 (set (reg:SF 21 xmm0 [orig:406 _320 ] [406])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1574])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1573])) [1 phys.hbot S4 A32])) "CLDRAD.f":384 131 {*movsf_internal}
     (nil))
(insn 1586 1585 1587 141 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:406 _320 ] [406])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32]))) "CLDRAD.f":384 53 {*cmpisf}
     (nil))
(jump_insn 1587 1586 1591 141 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1603)
            (pc))) "CLDRAD.f":384 682 {*jcc}
     (nil)
 -> 1603)
;;  succ:       142 (FALLTHRU)
;;              143
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 142, loop depth 0, maybe hot
;;  prev block 141, next block 143, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       141 (FALLTHRU)
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
(note 1591 1587 1592 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 1592 1591 1593 142 (set (reg:SI 0 ax [1575])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":385 86 {*movsi_internal}
     (nil))
(insn 1593 1592 1594 142 (set (reg:DI 0 ax [orig:407 _321 ] [407])
        (sign_extend:DI (reg:SI 0 ax [1575]))) "CLDRAD.f":385 149 {*extendsidi2_rex64}
     (nil))
(insn 1594 1593 1595 142 (parallel [
            (set (reg:DI 1 dx [orig:408 _322 ] [408])
                (mult:DI (reg:DI 0 ax [orig:407 _321 ] [407])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":385 349 {*muldi3_1}
     (nil))
(insn 1595 1594 1596 142 (set (reg:SI 0 ax [1576])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":385 86 {*movsi_internal}
     (nil))
(insn 1596 1595 1597 142 (set (reg:DI 0 ax [orig:409 _323 ] [409])
        (sign_extend:DI (reg:SI 0 ax [1576]))) "CLDRAD.f":385 149 {*extendsidi2_rex64}
     (nil))
(insn 1597 1596 4665 142 (parallel [
            (set (reg:DI 0 ax [orig:410 _324 ] [410])
                (plus:DI (reg:DI 0 ax [orig:409 _323 ] [409])
                    (reg:DI 1 dx [orig:408 _322 ] [408])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":385 222 {*adddi_1}
     (nil))
(insn 4665 1597 1599 142 (set (reg:DI 1 dx [orig:411 _325 ] [411])
        (plus:DI (reg:DI 0 ax [orig:410 _324 ] [410])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":385 218 {*leadi}
     (nil))
(insn 1599 4665 1600 142 (set (reg/f:DI 0 ax [1577])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":385 85 {*movdi_internal}
     (nil))
(insn 1600 1599 1601 142 (parallel [
            (set (reg:DI 1 dx [1578])
                (plus:DI (reg:DI 1 dx [orig:411 _325 ] [411])
                    (const_int 297170 [0x488d2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":385 222 {*adddi_1}
     (nil))
(insn 1601 1600 1602 142 (set (reg:SF 21 xmm0 [1579])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1578])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1577])) [1 phys.hbot S4 A32])) "CLDRAD.f":385 131 {*movsf_internal}
     (nil))
(insn 1602 1601 1603 142 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])
        (reg:SF 21 xmm0 [1579])) "CLDRAD.f":385 131 {*movsf_internal}
     (nil))
;;  succ:       143 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 143, loop depth 0, maybe hot
;;  prev block 142, next block 144, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       142 (FALLTHRU)
;;              141
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags]
(code_label 1603 1602 1604 143 77 (nil) [1 uses])
(note 1604 1603 1605 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 1605 1604 1606 143 (set (reg:SI 0 ax [1580])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":387 86 {*movsi_internal}
     (nil))
(insn 1606 1605 1607 143 (set (reg:DI 0 ax [orig:412 _326 ] [412])
        (sign_extend:DI (reg:SI 0 ax [1580]))) "CLDRAD.f":387 149 {*extendsidi2_rex64}
     (nil))
(insn 1607 1606 1608 143 (parallel [
            (set (reg:DI 1 dx [orig:413 _327 ] [413])
                (mult:DI (reg:DI 0 ax [orig:412 _326 ] [412])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":387 349 {*muldi3_1}
     (nil))
(insn 1608 1607 1609 143 (set (reg:SI 0 ax [1581])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":387 86 {*movsi_internal}
     (nil))
(insn 1609 1608 1610 143 (set (reg:DI 0 ax [orig:414 _328 ] [414])
        (sign_extend:DI (reg:SI 0 ax [1581]))) "CLDRAD.f":387 149 {*extendsidi2_rex64}
     (nil))
(insn 1610 1609 4664 143 (parallel [
            (set (reg:DI 0 ax [orig:415 _329 ] [415])
                (plus:DI (reg:DI 0 ax [orig:414 _328 ] [414])
                    (reg:DI 1 dx [orig:413 _327 ] [413])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":387 222 {*adddi_1}
     (nil))
(insn 4664 1610 1612 143 (set (reg:DI 1 dx [orig:416 _330 ] [416])
        (plus:DI (reg:DI 0 ax [orig:415 _329 ] [415])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":387 218 {*leadi}
     (nil))
(insn 1612 4664 1613 143 (set (reg/f:DI 0 ax [1582])
        (symbol_ref:DI ("need.4414") [flags 0x202]  <var_decl 0x7f2038edcbd0 need>)) "CLDRAD.f":387 85 {*movdi_internal}
     (nil))
(insn 1613 1612 1614 143 (set (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:416 _330 ] [416])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1582])) [7 need S4 A32])
        (const_int 0 [0])) "CLDRAD.f":387 86 {*movsi_internal}
     (nil))
;;  succ:       144 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 144, loop depth 0, maybe hot
;;  prev block 143, next block 145, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       143 (FALLTHRU)
;;              140
;;              139
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 1614 1613 1615 144 75 (nil) [2 uses])
(note 1615 1614 1616 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 1616 1615 4207 144 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":374 221 {*addsi_1}
     (nil))
(jump_insn 4207 1616 4208 144 (set (pc)
        (label_ref 1617)) "CLDRAD.f":374 683 {jump}
     (nil)
 -> 1617)
;;  succ:       138 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 4208 4207 4367)
;; basic block 145, loop depth 0, maybe hot
;;  prev block 144, next block 147, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       138
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4367 4208 4366 145 250 (nil) [1 uses])
(note 4366 4367 4368 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 4368 4366 1622 145 (const_int 0 [0]) "CLDRAD.f":382 718 {nop}
     (nil))
(insn 1622 4368 1623 145 (set (reg:SF 21 xmm0 [1583])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])) "CLDRAD.f":391 131 {*movsf_internal}
     (nil))
(insn 1623 1622 1624 145 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1583])
                    (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":391 54 {*cmpiusf}
     (nil))
(jump_insn 1624 1623 4106 145 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 1654)
            (pc))) "CLDRAD.f":391 682 {*jcc}
     (nil)
 -> 1654)
;;  succ:       149
;;              147 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 147, loop depth 0, maybe hot
;;  prev block 145, next block 148, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       145 (FALLTHRU)
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 21 [xmm0]
(note 4106 1624 1625 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 1625 4106 1626 147 (set (reg:SF 21 xmm0 [1584])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])) "CLDRAD.f":391 131 {*movsf_internal}
     (nil))
(insn 1626 1625 1627 147 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1584])
                    (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":391 54 {*cmpiusf}
     (nil))
(jump_insn 1627 1626 1631 147 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1654)
            (pc))) "CLDRAD.f":391 682 {*jcc}
     (nil)
 -> 1654)
;;  succ:       148 (FALLTHRU)
;;              149
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 148, loop depth 0, maybe hot
;;  prev block 147, next block 149, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       147 (FALLTHRU)
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
(note 1631 1627 1632 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 1632 1631 1633 148 (set (reg:SI 0 ax [1585])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":392 86 {*movsi_internal}
     (nil))
(insn 1633 1632 1634 148 (set (reg:DI 0 ax [orig:417 _331 ] [417])
        (sign_extend:DI (reg:SI 0 ax [1585]))) "CLDRAD.f":392 149 {*extendsidi2_rex64}
     (nil))
(insn 1634 1633 1635 148 (parallel [
            (set (reg:DI 1 dx [orig:418 _332 ] [418])
                (mult:DI (reg:DI 0 ax [orig:417 _331 ] [417])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":392 349 {*muldi3_1}
     (nil))
(insn 1635 1634 1636 148 (set (reg:SI 0 ax [1586])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":392 86 {*movsi_internal}
     (nil))
(insn 1636 1635 1637 148 (set (reg:DI 0 ax [orig:419 _333 ] [419])
        (sign_extend:DI (reg:SI 0 ax [1586]))) "CLDRAD.f":392 149 {*extendsidi2_rex64}
     (nil))
(insn 1637 1636 4662 148 (parallel [
            (set (reg:DI 0 ax [orig:420 _334 ] [420])
                (plus:DI (reg:DI 0 ax [orig:419 _333 ] [419])
                    (reg:DI 1 dx [orig:418 _332 ] [418])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":392 222 {*adddi_1}
     (nil))
(insn 4662 1637 1639 148 (set (reg:DI 1 dx [orig:421 _335 ] [421])
        (plus:DI (reg:DI 0 ax [orig:420 _334 ] [420])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":392 218 {*leadi}
     (nil))
(insn 1639 4662 1640 148 (set (reg:SF 21 xmm0 [orig:422 _336 ] [422])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f20392c1870 options>) [1 options.spval+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1640 1639 1641 148 (set (reg/f:DI 0 ax [1587])
        (symbol_ref:DI ("cldbp.4367") [flags 0x202]  <var_decl 0x7f20392d76c0 cldbp>)) "CLDRAD.f":392 85 {*movdi_internal}
     (nil))
(insn 1641 1640 1642 148 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:421 _335 ] [421])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1587])) [1 cldbp S4 A32])
        (reg:SF 21 xmm0 [orig:422 _336 ] [422])) "CLDRAD.f":392 131 {*movsf_internal}
     (nil))
(insn 1642 1641 1643 148 (set (reg:SI 0 ax [1588])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":393 86 {*movsi_internal}
     (nil))
(insn 1643 1642 1644 148 (set (reg:DI 0 ax [orig:423 _337 ] [423])
        (sign_extend:DI (reg:SI 0 ax [1588]))) "CLDRAD.f":393 149 {*extendsidi2_rex64}
     (nil))
(insn 1644 1643 1645 148 (parallel [
            (set (reg:DI 1 dx [orig:424 _338 ] [424])
                (mult:DI (reg:DI 0 ax [orig:423 _337 ] [423])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":393 349 {*muldi3_1}
     (nil))
(insn 1645 1644 1646 148 (set (reg:SI 0 ax [1589])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":393 86 {*movsi_internal}
     (nil))
(insn 1646 1645 1647 148 (set (reg:DI 0 ax [orig:425 _339 ] [425])
        (sign_extend:DI (reg:SI 0 ax [1589]))) "CLDRAD.f":393 149 {*extendsidi2_rex64}
     (nil))
(insn 1647 1646 4663 148 (parallel [
            (set (reg:DI 0 ax [orig:426 _340 ] [426])
                (plus:DI (reg:DI 0 ax [orig:425 _339 ] [425])
                    (reg:DI 1 dx [orig:424 _338 ] [424])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":393 222 {*adddi_1}
     (nil))
(insn 4663 1647 1649 148 (set (reg:DI 1 dx [orig:427 _341 ] [427])
        (plus:DI (reg:DI 0 ax [orig:426 _340 ] [426])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":393 218 {*leadi}
     (nil))
(insn 1649 4663 1650 148 (set (reg:SF 21 xmm0 [orig:428 _342 ] [428])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f20392c1870 options>) [1 options.spval+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1650 1649 1651 148 (set (reg/f:DI 0 ax [1590])
        (symbol_ref:DI ("cldbz.4369") [flags 0x202]  <var_decl 0x7f20392d7750 cldbz>)) "CLDRAD.f":393 85 {*movdi_internal}
     (nil))
(insn 1651 1650 4209 148 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:427 _341 ] [427])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1590])) [1 cldbz S4 A32])
        (reg:SF 21 xmm0 [orig:428 _342 ] [428])) "CLDRAD.f":393 131 {*movsf_internal}
     (nil))
(jump_insn 4209 1651 4210 148 (set (pc)
        (label_ref 1862)) 683 {jump}
     (nil)
 -> 1862)
;;  succ:       153 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 4210 4209 1654)
;; basic block 149, loop depth 0, maybe hot
;;  prev block 148, next block 150, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       145
;;              147
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 21 [xmm0]
(code_label 1654 4210 1655 149 80 (nil) [2 uses])
(note 1655 1654 1656 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 1656 1655 1657 149 (set (reg:SF 21 xmm0 [1591])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])) "CLDRAD.f":394 131 {*movsf_internal}
     (nil))
(insn 1657 1656 1658 149 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1591])
                    (mem/u/c:SF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":394 54 {*cmpiusf}
     (nil))
(jump_insn 1658 1657 4109 149 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 1717)
            (pc))) "CLDRAD.f":394 682 {*jcc}
     (nil)
 -> 1717)
;;  succ:       152
;;              150 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 150, loop depth 0, maybe hot
;;  prev block 149, next block 151, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       149 (FALLTHRU)
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 21 [xmm0]
(note 4109 1658 1659 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 1659 4109 1660 150 (set (reg:SF 21 xmm0 [1592])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])) "CLDRAD.f":394 131 {*movsf_internal}
     (nil))
(insn 1660 1659 1661 150 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1592])
                    (mem/u/c:SF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":394 54 {*cmpiusf}
     (nil))
(jump_insn 1661 1660 1665 150 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1717)
            (pc))) "CLDRAD.f":394 682 {*jcc}
     (nil)
 -> 1717)
;;  succ:       151 (FALLTHRU)
;;              152
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 151, loop depth 0, maybe hot
;;  prev block 150, next block 152, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       150 (FALLTHRU)
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 1665 1661 1666 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 1666 1665 1667 151 (set (reg:SF 21 xmm0 [1593])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])) "CLDRAD.f":395 131 {*movsf_internal}
     (nil))
(insn 1667 1666 1668 151 (set (reg:SI 0 ax [orig:429 _343 ] [429])
        (fix:SI (reg:SF 21 xmm0 [1593]))) "CLDRAD.f":395 174 {fix_truncsfsi_sse}
     (nil))
(insn 1668 1667 4657 151 (set (reg:DI 0 ax [orig:430 _344 ] [430])
        (sign_extend:DI (reg:SI 0 ax [orig:429 _343 ] [429]))) "CLDRAD.f":395 149 {*extendsidi2_rex64}
     (nil))
(insn 4657 1668 1670 151 (set (reg:DI 1 dx [orig:431 _345 ] [431])
        (plus:DI (reg:DI 0 ax [orig:430 _344 ] [430])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":395 218 {*leadi}
     (nil))
(insn 1670 4657 1671 151 (set (reg/f:DI 0 ax [1594])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":395 85 {*movdi_internal}
     (nil))
(insn 1671 1670 1672 151 (parallel [
            (set (reg:DI 1 dx [1595])
                (plus:DI (reg:DI 1 dx [orig:431 _345 ] [431])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":395 222 {*adddi_1}
     (nil))
(insn 1672 1671 1673 151 (set (reg:SF 22 xmm1 [orig:432 _346 ] [432])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1595])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1594])) [1 phys.aeta1 S4 A32])) "CLDRAD.f":395 131 {*movsf_internal}
     (nil))
(insn 1673 1672 1674 151 (set (reg:SI 0 ax [1596])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":395 86 {*movsi_internal}
     (nil))
(insn 1674 1673 1675 151 (set (reg:DI 0 ax [orig:433 _347 ] [433])
        (sign_extend:DI (reg:SI 0 ax [1596]))) "CLDRAD.f":395 149 {*extendsidi2_rex64}
     (nil))
(insn 1675 1674 1676 151 (parallel [
            (set (reg:DI 1 dx [orig:434 _348 ] [434])
                (mult:DI (reg:DI 0 ax [orig:433 _347 ] [433])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":395 349 {*muldi3_1}
     (nil))
(insn 1676 1675 1677 151 (set (reg:SI 0 ax [1597])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":395 86 {*movsi_internal}
     (nil))
(insn 1677 1676 1678 151 (set (reg:DI 0 ax [orig:435 _349 ] [435])
        (sign_extend:DI (reg:SI 0 ax [1597]))) "CLDRAD.f":395 149 {*extendsidi2_rex64}
     (nil))
(insn 1678 1677 4658 151 (parallel [
            (set (reg:DI 0 ax [orig:436 _350 ] [436])
                (plus:DI (reg:DI 0 ax [orig:435 _349 ] [435])
                    (reg:DI 1 dx [orig:434 _348 ] [434])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":395 222 {*adddi_1}
     (nil))
(insn 4658 1678 1680 151 (set (reg:DI 1 dx [orig:437 _351 ] [437])
        (plus:DI (reg:DI 0 ax [orig:436 _350 ] [436])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":395 218 {*leadi}
     (nil))
(insn 1680 4658 1681 151 (set (reg/f:DI 0 ax [1598])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":395 85 {*movdi_internal}
     (nil))
(insn 1681 1680 1682 151 (parallel [
            (set (reg:DI 1 dx [1599])
                (plus:DI (reg:DI 1 dx [orig:437 _351 ] [437])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":395 222 {*adddi_1}
     (nil))
(insn 1682 1681 1683 151 (set (reg:SF 21 xmm0 [orig:438 _352 ] [438])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1599])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1598])) [1 extra.pdsl S4 A32])) "CLDRAD.f":395 131 {*movsf_internal}
     (nil))
(insn 1683 1682 1684 151 (set (reg:SF 22 xmm1 [orig:439 _353 ] [439])
        (mult:SF (reg:SF 22 xmm1 [orig:432 _346 ] [432])
            (reg:SF 21 xmm0 [orig:438 _352 ] [438]))) "CLDRAD.f":395 838 {*fop_sf_comm}
     (nil))
(insn 1684 1683 1685 151 (set (reg/f:DI 0 ax [1600])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 1685 1684 1686 151 (set (reg:SF 21 xmm0 [orig:440 _354 ] [440])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1600])
                (const_int 4 [0x4])) [1 phys.pt1+0 S4 A32])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1686 1685 1687 151 (set (reg:SI 0 ax [1601])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":395 86 {*movsi_internal}
     (nil))
(insn 1687 1686 1688 151 (set (reg:DI 0 ax [orig:441 _355 ] [441])
        (sign_extend:DI (reg:SI 0 ax [1601]))) "CLDRAD.f":395 149 {*extendsidi2_rex64}
     (nil))
(insn 1688 1687 1689 151 (parallel [
            (set (reg:DI 1 dx [orig:442 _356 ] [442])
                (mult:DI (reg:DI 0 ax [orig:441 _355 ] [441])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":395 349 {*muldi3_1}
     (nil))
(insn 1689 1688 1690 151 (set (reg:SI 0 ax [1602])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":395 86 {*movsi_internal}
     (nil))
(insn 1690 1689 1691 151 (set (reg:DI 0 ax [orig:443 _357 ] [443])
        (sign_extend:DI (reg:SI 0 ax [1602]))) "CLDRAD.f":395 149 {*extendsidi2_rex64}
     (nil))
(insn 1691 1690 4659 151 (parallel [
            (set (reg:DI 0 ax [orig:444 _358 ] [444])
                (plus:DI (reg:DI 0 ax [orig:443 _357 ] [443])
                    (reg:DI 1 dx [orig:442 _356 ] [442])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":395 222 {*adddi_1}
     (nil))
(insn 4659 1691 1693 151 (set (reg:DI 1 dx [orig:445 _359 ] [445])
        (plus:DI (reg:DI 0 ax [orig:444 _358 ] [444])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":395 218 {*leadi}
     (nil))
(insn 1693 4659 1694 151 (set (reg:SF 21 xmm0 [orig:446 _360 ] [446])
        (plus:SF (reg:SF 21 xmm0 [orig:440 _354 ] [440])
            (reg:SF 22 xmm1 [orig:439 _353 ] [439]))) "CLDRAD.f":395 838 {*fop_sf_comm}
     (nil))
(insn 1694 1693 1695 151 (set (reg/f:DI 0 ax [1603])
        (symbol_ref:DI ("cldbp.4367") [flags 0x202]  <var_decl 0x7f20392d76c0 cldbp>)) "CLDRAD.f":395 85 {*movdi_internal}
     (nil))
(insn 1695 1694 1696 151 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:445 _359 ] [445])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1603])) [1 cldbp S4 A32])
        (reg:SF 21 xmm0 [orig:446 _360 ] [446])) "CLDRAD.f":395 131 {*movsf_internal}
     (nil))
(insn 1696 1695 1697 151 (set (reg:SI 0 ax [1604])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":396 86 {*movsi_internal}
     (nil))
(insn 1697 1696 1698 151 (set (reg:DI 0 ax [orig:447 _361 ] [447])
        (sign_extend:DI (reg:SI 0 ax [1604]))) "CLDRAD.f":396 149 {*extendsidi2_rex64}
     (nil))
(insn 1698 1697 1699 151 (parallel [
            (set (reg:DI 1 dx [orig:448 _362 ] [448])
                (mult:DI (reg:DI 0 ax [orig:447 _361 ] [447])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":396 349 {*muldi3_1}
     (nil))
(insn 1699 1698 1700 151 (set (reg:SI 0 ax [1605])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":396 86 {*movsi_internal}
     (nil))
(insn 1700 1699 1701 151 (set (reg:DI 0 ax [orig:449 _363 ] [449])
        (sign_extend:DI (reg:SI 0 ax [1605]))) "CLDRAD.f":396 149 {*extendsidi2_rex64}
     (nil))
(insn 1701 1700 4660 151 (parallel [
            (set (reg:DI 0 ax [orig:450 _364 ] [450])
                (plus:DI (reg:DI 0 ax [orig:449 _363 ] [449])
                    (reg:DI 1 dx [orig:448 _362 ] [448])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":396 222 {*adddi_1}
     (nil))
(insn 4660 1701 1703 151 (set (reg:DI 2 cx [orig:451 _365 ] [451])
        (plus:DI (reg:DI 0 ax [orig:450 _364 ] [450])
            (const_int 1096227 [0x10ba23]))) "CLDRAD.f":396 218 {*leadi}
     (nil))
(insn 1703 4660 1704 151 (set (reg:SI 0 ax [1606])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":396 86 {*movsi_internal}
     (nil))
(insn 1704 1703 1705 151 (set (reg:DI 0 ax [orig:452 _366 ] [452])
        (sign_extend:DI (reg:SI 0 ax [1606]))) "CLDRAD.f":396 149 {*extendsidi2_rex64}
     (nil))
(insn 1705 1704 1706 151 (parallel [
            (set (reg:DI 1 dx [orig:453 _367 ] [453])
                (mult:DI (reg:DI 0 ax [orig:452 _366 ] [452])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":396 349 {*muldi3_1}
     (nil))
(insn 1706 1705 1707 151 (set (reg:SI 0 ax [1607])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":396 86 {*movsi_internal}
     (nil))
(insn 1707 1706 1708 151 (set (reg:DI 0 ax [orig:454 _368 ] [454])
        (sign_extend:DI (reg:SI 0 ax [1607]))) "CLDRAD.f":396 149 {*extendsidi2_rex64}
     (nil))
(insn 1708 1707 4661 151 (parallel [
            (set (reg:DI 0 ax [orig:455 _369 ] [455])
                (plus:DI (reg:DI 0 ax [orig:454 _368 ] [454])
                    (reg:DI 1 dx [orig:453 _367 ] [453])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":396 222 {*adddi_1}
     (nil))
(insn 4661 1708 1710 151 (set (reg:DI 1 dx [orig:456 _370 ] [456])
        (plus:DI (reg:DI 0 ax [orig:455 _369 ] [455])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":396 218 {*leadi}
     (nil))
(insn 1710 4661 1711 151 (set (reg/f:DI 0 ax [1608])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":396 85 {*movdi_internal}
     (nil))
(insn 1711 1710 1712 151 (parallel [
            (set (reg:DI 2 cx [1609])
                (plus:DI (reg:DI 2 cx [orig:451 _365 ] [451])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":396 222 {*adddi_1}
     (nil))
(insn 1712 1711 1713 151 (set (reg:SF 21 xmm0 [orig:457 _371 ] [457])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1609])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1608])) [1 extra.zint S4 A32])) "CLDRAD.f":396 131 {*movsf_internal}
     (nil))
(insn 1713 1712 1714 151 (set (reg/f:DI 0 ax [1610])
        (symbol_ref:DI ("cldbz.4369") [flags 0x202]  <var_decl 0x7f20392d7750 cldbz>)) "CLDRAD.f":396 85 {*movdi_internal}
     (nil))
(insn 1714 1713 4211 151 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:456 _370 ] [456])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1610])) [1 cldbz S4 A32])
        (reg:SF 21 xmm0 [orig:457 _371 ] [457])) "CLDRAD.f":396 131 {*movsf_internal}
     (nil))
(jump_insn 4211 1714 4212 151 (set (pc)
        (label_ref 1862)) 683 {jump}
     (nil)
 -> 1862)
;;  succ:       153 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 4212 4211 1717)
;; basic block 152, loop depth 0, maybe hot
;;  prev block 151, next block 153, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       149
;;              150
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1717 4212 1718 152 83 (nil) [2 uses])
(note 1718 1717 1719 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 1719 1718 1720 152 (set (reg:SF 21 xmm0 [1611])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 cbot+0 S4 A32])) "CLDRAD.f":398 131 {*movsf_internal}
     (nil))
(insn 1720 1719 1721 152 (set (reg:SI 0 ax [1612])
        (fix:SI (reg:SF 21 xmm0 [1611]))) "CLDRAD.f":398 174 {fix_truncsfsi_sse}
     (nil))
(insn 1721 1720 1722 152 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])
        (reg:SI 0 ax [1612])) "CLDRAD.f":398 86 {*movsi_internal}
     (nil))
(insn 1722 1721 1723 152 (set (reg:SI 0 ax [1613])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":399 86 {*movsi_internal}
     (nil))
(insn 1723 1722 4647 152 (set (reg:DI 0 ax [orig:458 _372 ] [458])
        (sign_extend:DI (reg:SI 0 ax [1613]))) "CLDRAD.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 4647 1723 1725 152 (set (reg:DI 1 dx [orig:459 _373 ] [459])
        (plus:DI (reg:DI 0 ax [orig:458 _372 ] [458])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":399 218 {*leadi}
     (nil))
(insn 1725 4647 1726 152 (set (reg/f:DI 0 ax [1614])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":399 85 {*movdi_internal}
     (nil))
(insn 1726 1725 1727 152 (parallel [
            (set (reg:DI 1 dx [1615])
                (plus:DI (reg:DI 1 dx [orig:459 _373 ] [459])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":399 222 {*adddi_1}
     (nil))
(insn 1727 1726 1728 152 (set (reg:SF 22 xmm1 [orig:460 _374 ] [460])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1615])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1614])) [1 phys.aeta1 S4 A32])) "CLDRAD.f":399 131 {*movsf_internal}
     (nil))
(insn 1728 1727 1729 152 (set (reg:SI 0 ax [1616])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":399 86 {*movsi_internal}
     (nil))
(insn 1729 1728 1730 152 (set (reg:DI 0 ax [orig:461 _375 ] [461])
        (sign_extend:DI (reg:SI 0 ax [1616]))) "CLDRAD.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1730 1729 1731 152 (parallel [
            (set (reg:DI 1 dx [orig:462 _376 ] [462])
                (mult:DI (reg:DI 0 ax [orig:461 _375 ] [461])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":399 349 {*muldi3_1}
     (nil))
(insn 1731 1730 1732 152 (set (reg:SI 0 ax [1617])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":399 86 {*movsi_internal}
     (nil))
(insn 1732 1731 1733 152 (set (reg:DI 0 ax [orig:463 _377 ] [463])
        (sign_extend:DI (reg:SI 0 ax [1617]))) "CLDRAD.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1733 1732 4648 152 (parallel [
            (set (reg:DI 0 ax [orig:464 _378 ] [464])
                (plus:DI (reg:DI 0 ax [orig:463 _377 ] [463])
                    (reg:DI 1 dx [orig:462 _376 ] [462])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":399 222 {*adddi_1}
     (nil))
(insn 4648 1733 1735 152 (set (reg:DI 1 dx [orig:465 _379 ] [465])
        (plus:DI (reg:DI 0 ax [orig:464 _378 ] [464])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":399 218 {*leadi}
     (nil))
(insn 1735 4648 1736 152 (set (reg/f:DI 0 ax [1618])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":399 85 {*movdi_internal}
     (nil))
(insn 1736 1735 1737 152 (parallel [
            (set (reg:DI 1 dx [1619])
                (plus:DI (reg:DI 1 dx [orig:465 _379 ] [465])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":399 222 {*adddi_1}
     (nil))
(insn 1737 1736 1738 152 (set (reg:SF 21 xmm0 [orig:466 _380 ] [466])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1619])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1618])) [1 extra.pdsl S4 A32])) "CLDRAD.f":399 131 {*movsf_internal}
     (nil))
(insn 1738 1737 1739 152 (set (reg:SF 22 xmm1 [orig:467 _381 ] [467])
        (mult:SF (reg:SF 22 xmm1 [orig:460 _374 ] [460])
            (reg:SF 21 xmm0 [orig:466 _380 ] [466]))) "CLDRAD.f":399 838 {*fop_sf_comm}
     (nil))
(insn 1739 1738 1740 152 (set (reg/f:DI 0 ax [1620])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 1740 1739 1741 152 (set (reg:SF 21 xmm0 [orig:468 _382 ] [468])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1620])
                (const_int 4 [0x4])) [1 phys.pt1+0 S4 A32])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 1741 1740 1742 152 (set (reg:SI 0 ax [1621])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":399 86 {*movsi_internal}
     (nil))
(insn 1742 1741 1743 152 (set (reg:DI 0 ax [orig:469 _383 ] [469])
        (sign_extend:DI (reg:SI 0 ax [1621]))) "CLDRAD.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1743 1742 1744 152 (parallel [
            (set (reg:DI 1 dx [orig:470 _384 ] [470])
                (mult:DI (reg:DI 0 ax [orig:469 _383 ] [469])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":399 349 {*muldi3_1}
     (nil))
(insn 1744 1743 1745 152 (set (reg:SI 0 ax [1622])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":399 86 {*movsi_internal}
     (nil))
(insn 1745 1744 1746 152 (set (reg:DI 0 ax [orig:471 _385 ] [471])
        (sign_extend:DI (reg:SI 0 ax [1622]))) "CLDRAD.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1746 1745 4649 152 (parallel [
            (set (reg:DI 0 ax [orig:472 _386 ] [472])
                (plus:DI (reg:DI 0 ax [orig:471 _385 ] [471])
                    (reg:DI 1 dx [orig:470 _384 ] [470])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":399 222 {*adddi_1}
     (nil))
(insn 4649 1746 1748 152 (set (reg:DI 1 dx [orig:473 _387 ] [473])
        (plus:DI (reg:DI 0 ax [orig:472 _386 ] [472])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":399 218 {*leadi}
     (nil))
(insn 1748 4649 1749 152 (set (reg:SF 21 xmm0 [orig:474 _388 ] [474])
        (plus:SF (reg:SF 21 xmm0 [orig:468 _382 ] [468])
            (reg:SF 22 xmm1 [orig:467 _381 ] [467]))) "CLDRAD.f":399 838 {*fop_sf_comm}
     (nil))
(insn 1749 1748 1750 152 (set (reg/f:DI 0 ax [1623])
        (symbol_ref:DI ("cldbp.4367") [flags 0x202]  <var_decl 0x7f20392d76c0 cldbp>)) "CLDRAD.f":399 85 {*movdi_internal}
     (nil))
(insn 1750 1749 1751 152 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:473 _387 ] [473])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1623])) [1 cldbp S4 A32])
        (reg:SF 21 xmm0 [orig:474 _388 ] [474])) "CLDRAD.f":399 131 {*movsf_internal}
     (nil))
(insn 1751 1750 1752 152 (set (reg:SI 0 ax [1624])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1752 1751 1753 152 (parallel [
            (set (reg:SI 0 ax [orig:475 _389 ] [475])
                (plus:SI (reg:SI 0 ax [1624])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1753 1752 1754 152 (set (reg:DI 0 ax [orig:476 _390 ] [476])
        (sign_extend:DI (reg:SI 0 ax [orig:475 _389 ] [475]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1754 1753 1755 152 (parallel [
            (set (reg:DI 1 dx [orig:477 _391 ] [477])
                (mult:DI (reg:DI 0 ax [orig:476 _390 ] [476])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1755 1754 1756 152 (set (reg:SI 0 ax [1625])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1756 1755 1757 152 (set (reg:DI 0 ax [orig:478 _392 ] [478])
        (sign_extend:DI (reg:SI 0 ax [1625]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1757 1756 1758 152 (parallel [
            (set (reg:DI 0 ax [orig:479 _393 ] [479])
                (mult:DI (reg:DI 0 ax [orig:478 _392 ] [478])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1758 1757 1759 152 (parallel [
            (set (reg:DI 1 dx [orig:480 _394 ] [480])
                (plus:DI (reg:DI 1 dx [orig:477 _391 ] [477])
                    (reg:DI 0 ax [orig:479 _393 ] [479])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1759 1758 1760 152 (set (reg:SI 0 ax [1626])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1760 1759 1761 152 (set (reg:DI 0 ax [orig:481 _395 ] [481])
        (sign_extend:DI (reg:SI 0 ax [1626]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1761 1760 4650 152 (parallel [
            (set (reg:DI 0 ax [orig:482 _396 ] [482])
                (plus:DI (reg:DI 0 ax [orig:481 _395 ] [481])
                    (reg:DI 1 dx [orig:480 _394 ] [480])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 4650 1761 1763 152 (set (reg:DI 1 dx [orig:483 _397 ] [483])
        (plus:DI (reg:DI 0 ax [orig:482 _396 ] [482])
            (const_int -29751 [0xffffffffffff8bc9]))) "CLDRAD.f":403 218 {*leadi}
     (nil))
(insn 1763 4650 1764 152 (set (reg/f:DI 0 ax [1627])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f20392c13f0 masks>)) "CLDRAD.f":403 85 {*movdi_internal}
     (nil))
(insn 1764 1763 1765 152 (parallel [
            (set (reg:DI 1 dx [1628])
                (plus:DI (reg:DI 1 dx [orig:483 _397 ] [483])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1765 1764 1766 152 (set (reg:SF 22 xmm1 [orig:484 _398 ] [484])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1628])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1627])) [1 masks.htm S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(insn 1766 1765 1767 152 (set (reg:SI 0 ax [1629])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1767 1766 1768 152 (parallel [
            (set (reg:SI 0 ax [orig:485 _399 ] [485])
                (plus:SI (reg:SI 0 ax [1629])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1768 1767 1769 152 (set (reg:DI 0 ax [orig:486 _400 ] [486])
        (sign_extend:DI (reg:SI 0 ax [orig:485 _399 ] [485]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1769 1768 1770 152 (parallel [
            (set (reg:DI 1 dx [orig:487 _401 ] [487])
                (mult:DI (reg:DI 0 ax [orig:486 _400 ] [486])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1770 1769 1771 152 (set (reg:SI 0 ax [1630])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1771 1770 1772 152 (set (reg:DI 0 ax [orig:488 _402 ] [488])
        (sign_extend:DI (reg:SI 0 ax [1630]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1772 1771 1773 152 (parallel [
            (set (reg:DI 0 ax [orig:489 _403 ] [489])
                (mult:DI (reg:DI 0 ax [orig:488 _402 ] [488])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1773 1772 1774 152 (parallel [
            (set (reg:DI 1 dx [orig:490 _404 ] [490])
                (plus:DI (reg:DI 1 dx [orig:487 _401 ] [487])
                    (reg:DI 0 ax [orig:489 _403 ] [489])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1774 1773 1775 152 (set (reg:SI 0 ax [1631])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1775 1774 1776 152 (set (reg:DI 0 ax [orig:491 _405 ] [491])
        (sign_extend:DI (reg:SI 0 ax [1631]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1776 1775 4651 152 (parallel [
            (set (reg:DI 0 ax [orig:492 _406 ] [492])
                (plus:DI (reg:DI 0 ax [orig:491 _405 ] [491])
                    (reg:DI 1 dx [orig:490 _404 ] [490])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 4651 1776 1778 152 (set (reg:DI 1 dx [orig:493 _407 ] [493])
        (plus:DI (reg:DI 0 ax [orig:492 _406 ] [492])
            (const_int -29751 [0xffffffffffff8bc9]))) "CLDRAD.f":403 218 {*leadi}
     (nil))
(insn 1778 4651 1779 152 (set (reg/f:DI 0 ax [1632])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":403 85 {*movdi_internal}
     (nil))
(insn 1779 1778 1780 152 (parallel [
            (set (reg:DI 1 dx [1633])
                (plus:DI (reg:DI 1 dx [orig:493 _407 ] [493])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1780 1779 1781 152 (set (reg:SF 21 xmm0 [orig:494 _408 ] [494])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1633])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1632])) [1 vrbls.t S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(insn 1781 1780 1782 152 (set (reg:SF 21 xmm0 [orig:495 _409 ] [495])
        (mult:SF (reg:SF 21 xmm0 [orig:494 _408 ] [494])
            (reg:SF 22 xmm1 [orig:484 _398 ] [484]))) "CLDRAD.f":403 838 {*fop_sf_comm}
     (nil))
(insn 1782 1781 1783 152 (set (reg:SI 0 ax [1634])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1783 1782 1784 152 (parallel [
            (set (reg:SI 0 ax [orig:496 _410 ] [496])
                (plus:SI (reg:SI 0 ax [1634])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1784 1783 1785 152 (set (reg:DI 0 ax [orig:497 _411 ] [497])
        (sign_extend:DI (reg:SI 0 ax [orig:496 _410 ] [496]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1785 1784 1786 152 (parallel [
            (set (reg:DI 1 dx [orig:498 _412 ] [498])
                (mult:DI (reg:DI 0 ax [orig:497 _411 ] [497])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1786 1785 1787 152 (set (reg:SI 0 ax [1635])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1787 1786 1788 152 (set (reg:DI 0 ax [orig:499 _413 ] [499])
        (sign_extend:DI (reg:SI 0 ax [1635]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1788 1787 1789 152 (parallel [
            (set (reg:DI 0 ax [orig:500 _414 ] [500])
                (mult:DI (reg:DI 0 ax [orig:499 _413 ] [499])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1789 1788 1790 152 (parallel [
            (set (reg:DI 1 dx [orig:501 _415 ] [501])
                (plus:DI (reg:DI 1 dx [orig:498 _412 ] [498])
                    (reg:DI 0 ax [orig:500 _414 ] [500])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1790 1789 1791 152 (set (reg:SI 0 ax [1636])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1791 1790 1792 152 (set (reg:DI 0 ax [orig:502 _416 ] [502])
        (sign_extend:DI (reg:SI 0 ax [1636]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1792 1791 4652 152 (parallel [
            (set (reg:DI 0 ax [orig:503 _417 ] [503])
                (plus:DI (reg:DI 0 ax [orig:502 _416 ] [502])
                    (reg:DI 1 dx [orig:501 _415 ] [501])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 4652 1792 1794 152 (set (reg:DI 1 dx [orig:504 _418 ] [504])
        (plus:DI (reg:DI 0 ax [orig:503 _417 ] [503])
            (const_int -29751 [0xffffffffffff8bc9]))) "CLDRAD.f":403 218 {*leadi}
     (nil))
(insn 1794 4652 1795 152 (set (reg/f:DI 0 ax [1637])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":403 85 {*movdi_internal}
     (nil))
(insn 1795 1794 1796 152 (parallel [
            (set (reg:DI 1 dx [1638])
                (plus:DI (reg:DI 1 dx [orig:504 _418 ] [504])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1796 1795 1797 152 (set (reg:SF 23 xmm2 [orig:505 _419 ] [505])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1638])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1637])) [1 vrbls.q S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(insn 1797 1796 1798 152 (set (reg:SF 22 xmm1 [1639])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 1798 1797 1799 152 (set (reg:SF 23 xmm2 [orig:506 _420 ] [506])
        (mult:SF (reg:SF 23 xmm2 [orig:505 _419 ] [505])
            (reg:SF 22 xmm1 [1639]))) "CLDRAD.f":403 838 {*fop_sf_comm}
     (nil))
(insn 1799 1798 1800 152 (set (reg:SF 22 xmm1 [1640])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1800 1799 1802 152 (set (reg:SF 22 xmm1 [orig:507 _421 ] [507])
        (plus:SF (reg:SF 22 xmm1 [1640])
            (reg:SF 23 xmm2 [orig:506 _420 ] [506]))) "CLDRAD.f":403 838 {*fop_sf_comm}
     (nil))
(insn 1802 1800 1803 152 (set (reg:SF 22 xmm1 [orig:509 _423 ] [509])
        (mult:SF (reg:SF 22 xmm1 [orig:508 _422 ] [508])
            (reg:SF 21 xmm0 [orig:495 _409 ] [495]))) "CLDRAD.f":403 838 {*fop_sf_comm}
     (nil))
(insn 1803 1802 1804 152 (set (reg:SF 21 xmm0 [1641])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC21") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.92897968292236328125e+1 [0x0.ea5181p+5])
        (nil)))
(insn 1804 1803 4476 152 (set (reg:SF 22 xmm1 [orig:509 _423 ] [509])
        (mult:SF (reg:SF 22 xmm1 [orig:509 _423 ] [509])
            (reg:SF 21 xmm0 [1641]))) "CLDRAD.f":403 838 {*fop_sf_comm}
     (nil))
(insn 4476 1804 4518 152 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [22 %sfp+-164 S4 A32])
        (reg:SF 22 xmm1 [orig:509 _423 ] [509])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(note 4518 4476 1805 152 NOTE_INSN_DELETED)
(insn 1805 4518 1806 152 (set (reg:SI 0 ax [1642])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1806 1805 1807 152 (parallel [
            (set (reg:SI 0 ax [orig:511 _425 ] [511])
                (plus:SI (reg:SI 0 ax [1642])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1807 1806 1808 152 (set (reg:DI 0 ax [orig:512 _426 ] [512])
        (sign_extend:DI (reg:SI 0 ax [orig:511 _425 ] [511]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1808 1807 1809 152 (parallel [
            (set (reg:DI 1 dx [orig:513 _427 ] [513])
                (mult:DI (reg:DI 0 ax [orig:512 _426 ] [512])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1809 1808 1810 152 (set (reg:SI 0 ax [1643])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1810 1809 1811 152 (set (reg:DI 0 ax [orig:514 _428 ] [514])
        (sign_extend:DI (reg:SI 0 ax [1643]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1811 1810 1812 152 (parallel [
            (set (reg:DI 0 ax [orig:515 _429 ] [515])
                (mult:DI (reg:DI 0 ax [orig:514 _428 ] [514])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1812 1811 1813 152 (parallel [
            (set (reg:DI 1 dx [orig:516 _430 ] [516])
                (plus:DI (reg:DI 1 dx [orig:513 _427 ] [513])
                    (reg:DI 0 ax [orig:515 _429 ] [515])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1813 1812 1814 152 (set (reg:SI 0 ax [1644])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1814 1813 1815 152 (set (reg:DI 0 ax [orig:517 _431 ] [517])
        (sign_extend:DI (reg:SI 0 ax [1644]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1815 1814 4653 152 (parallel [
            (set (reg:DI 0 ax [orig:518 _432 ] [518])
                (plus:DI (reg:DI 0 ax [orig:517 _431 ] [517])
                    (reg:DI 1 dx [orig:516 _430 ] [516])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 4653 1815 1817 152 (set (reg:DI 1 dx [orig:519 _433 ] [519])
        (plus:DI (reg:DI 0 ax [orig:518 _432 ] [518])
            (const_int -29751 [0xffffffffffff8bc9]))) "CLDRAD.f":403 218 {*leadi}
     (nil))
(insn 1817 4653 1818 152 (set (reg/f:DI 0 ax [1645])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":403 85 {*movdi_internal}
     (nil))
(insn 1818 1817 1820 152 (set (reg:SF 21 xmm0 [orig:520 _434 ] [520])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:519 _433 ] [519])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1645])) [1 extra.pint S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(call_insn/u 1820 1818 1821 152 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f2039116900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CLDRAD.f":403 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 1821 1820 4517 152 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [22 %sfp+-168 S4 A32])
        (reg:SF 21 xmm0)) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(note 4517 1821 1822 152 NOTE_INSN_DELETED)
(insn 1822 4517 1823 152 (set (reg:SI 0 ax [1646])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1823 1822 1824 152 (set (reg:DI 0 ax [orig:522 _436 ] [522])
        (sign_extend:DI (reg:SI 0 ax [1646]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1824 1823 1825 152 (parallel [
            (set (reg:DI 1 dx [orig:523 _437 ] [523])
                (mult:DI (reg:DI 0 ax [orig:522 _436 ] [522])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1825 1824 1826 152 (set (reg:SI 0 ax [1647])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1826 1825 1827 152 (set (reg:DI 0 ax [orig:524 _438 ] [524])
        (sign_extend:DI (reg:SI 0 ax [1647]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1827 1826 4654 152 (parallel [
            (set (reg:DI 0 ax [orig:525 _439 ] [525])
                (plus:DI (reg:DI 0 ax [orig:524 _438 ] [524])
                    (reg:DI 1 dx [orig:523 _437 ] [523])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 4654 1827 1829 152 (set (reg:DI 1 dx [orig:526 _440 ] [526])
        (plus:DI (reg:DI 0 ax [orig:525 _439 ] [525])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":403 218 {*leadi}
     (nil))
(insn 1829 4654 1830 152 (set (reg/f:DI 0 ax [1648])
        (symbol_ref:DI ("cldbp.4367") [flags 0x202]  <var_decl 0x7f20392d76c0 cldbp>)) "CLDRAD.f":403 85 {*movdi_internal}
     (nil))
(insn 1830 1829 1832 152 (set (reg:SF 21 xmm0 [orig:527 _441 ] [527])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:526 _440 ] [526])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1648])) [1 cldbp S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(call_insn/u 1832 1830 4477 152 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f2039116900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CLDRAD.f":403 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 4477 1832 1834 152 (set (reg:SF 24 xmm3 [orig:521 _435 ] [521])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [22 %sfp+-168 S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(insn 1834 4477 4478 152 (set (reg:SF 24 xmm3 [orig:521 _435 ] [521])
        (minus:SF (reg:SF 24 xmm3 [orig:521 _435 ] [521])
            (reg:SF 21 xmm0 [orig:528 _442 ] [528]))) "CLDRAD.f":403 841 {*fop_sf_1}
     (nil))
(insn 4478 1834 4479 152 (set (reg:SF 21 xmm0 [orig:529 _443 ] [529])
        (reg:SF 24 xmm3 [orig:521 _435 ] [521])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(insn 4479 4478 1836 152 (set (reg:SF 22 xmm1 [orig:510 _424 ] [510])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [22 %sfp+-164 S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(insn 1836 4479 1837 152 (set (reg:SF 22 xmm1 [orig:510 _424 ] [510])
        (mult:SF (reg:SF 22 xmm1 [orig:510 _424 ] [510])
            (reg:SF 21 xmm0 [orig:530 _444 ] [530]))) "CLDRAD.f":403 838 {*fop_sf_comm}
     (nil))
(insn 1837 1836 1838 152 (set (reg:SI 0 ax [1649])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1838 1837 1839 152 (parallel [
            (set (reg:SI 0 ax [orig:532 _446 ] [532])
                (plus:SI (reg:SI 0 ax [1649])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1839 1838 1840 152 (set (reg:DI 0 ax [orig:533 _447 ] [533])
        (sign_extend:DI (reg:SI 0 ax [orig:532 _446 ] [532]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1840 1839 1841 152 (parallel [
            (set (reg:DI 1 dx [orig:534 _448 ] [534])
                (mult:DI (reg:DI 0 ax [orig:533 _447 ] [533])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1841 1840 1842 152 (set (reg:SI 0 ax [1650])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1842 1841 1843 152 (set (reg:DI 0 ax [orig:535 _449 ] [535])
        (sign_extend:DI (reg:SI 0 ax [1650]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1843 1842 1844 152 (parallel [
            (set (reg:DI 0 ax [orig:536 _450 ] [536])
                (mult:DI (reg:DI 0 ax [orig:535 _449 ] [535])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1844 1843 1845 152 (parallel [
            (set (reg:DI 1 dx [orig:537 _451 ] [537])
                (plus:DI (reg:DI 1 dx [orig:534 _448 ] [534])
                    (reg:DI 0 ax [orig:536 _450 ] [536])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1845 1844 1846 152 (set (reg:SI 0 ax [1651])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1846 1845 1847 152 (set (reg:DI 0 ax [orig:538 _452 ] [538])
        (sign_extend:DI (reg:SI 0 ax [1651]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1847 1846 4655 152 (parallel [
            (set (reg:DI 0 ax [orig:539 _453 ] [539])
                (plus:DI (reg:DI 0 ax [orig:538 _452 ] [538])
                    (reg:DI 1 dx [orig:537 _451 ] [537])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 4655 1847 1849 152 (set (reg:DI 1 dx [orig:540 _454 ] [540])
        (plus:DI (reg:DI 0 ax [orig:539 _453 ] [539])
            (const_int -29751 [0xffffffffffff8bc9]))) "CLDRAD.f":403 218 {*leadi}
     (nil))
(insn 1849 4655 1850 152 (set (reg/f:DI 0 ax [1652])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":403 85 {*movdi_internal}
     (nil))
(insn 1850 1849 1851 152 (parallel [
            (set (reg:DI 1 dx [1653])
                (plus:DI (reg:DI 1 dx [orig:540 _454 ] [540])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 1851 1850 1852 152 (set (reg:SF 21 xmm0 [orig:541 _455 ] [541])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1653])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1652])) [1 extra.zint S4 A32])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
(insn 1852 1851 1853 152 (set (reg:SI 0 ax [1654])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1853 1852 1854 152 (set (reg:DI 0 ax [orig:542 _456 ] [542])
        (sign_extend:DI (reg:SI 0 ax [1654]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1854 1853 1855 152 (parallel [
            (set (reg:DI 1 dx [orig:543 _457 ] [543])
                (mult:DI (reg:DI 0 ax [orig:542 _456 ] [542])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 349 {*muldi3_1}
     (nil))
(insn 1855 1854 1856 152 (set (reg:SI 0 ax [1655])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":403 86 {*movsi_internal}
     (nil))
(insn 1856 1855 1857 152 (set (reg:DI 0 ax [orig:544 _458 ] [544])
        (sign_extend:DI (reg:SI 0 ax [1655]))) "CLDRAD.f":403 149 {*extendsidi2_rex64}
     (nil))
(insn 1857 1856 4656 152 (parallel [
            (set (reg:DI 0 ax [orig:545 _459 ] [545])
                (plus:DI (reg:DI 0 ax [orig:544 _458 ] [544])
                    (reg:DI 1 dx [orig:543 _457 ] [543])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":403 222 {*adddi_1}
     (nil))
(insn 4656 1857 1859 152 (set (reg:DI 1 dx [orig:546 _460 ] [546])
        (plus:DI (reg:DI 0 ax [orig:545 _459 ] [545])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":403 218 {*leadi}
     (nil))
(insn 1859 4656 1860 152 (set (reg:SF 21 xmm0 [orig:547 _461 ] [547])
        (plus:SF (reg:SF 21 xmm0 [orig:541 _455 ] [541])
            (reg:SF 22 xmm1 [orig:531 _445 ] [531]))) "CLDRAD.f":403 838 {*fop_sf_comm}
     (nil))
(insn 1860 1859 1861 152 (set (reg/f:DI 0 ax [1656])
        (symbol_ref:DI ("cldbz.4369") [flags 0x202]  <var_decl 0x7f20392d7750 cldbz>)) "CLDRAD.f":403 85 {*movdi_internal}
     (nil))
(insn 1861 1860 1862 152 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:546 _460 ] [546])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1656])) [1 cldbz S4 A32])
        (reg:SF 21 xmm0 [orig:547 _461 ] [547])) "CLDRAD.f":403 131 {*movsf_internal}
     (nil))
;;  succ:       153 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 153, loop depth 0, maybe hot
;;  prev block 152, next block 154, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       152 (FALLTHRU)
;;              148 [always] 
;;              151 [always] 
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 1862 1861 1863 153 82 (nil) [2 uses])
(note 1863 1862 1864 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 1864 1863 4213 153 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":371 221 {*addsi_1}
     (nil))
(jump_insn 4213 1864 4214 153 (set (pc)
        (label_ref 1865)) "CLDRAD.f":371 683 {jump}
     (nil)
 -> 1865)
;;  succ:       136 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 4214 4213 4364)
;; basic block 154, loop depth 0, maybe hot
;;  prev block 153, next block 156, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       136
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4364 4214 4363 154 249 (nil) [1 uses])
(note 4363 4364 4365 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 4365 4363 1870 154 (const_int 0 [0]) "CLDRAD.f":391 718 {nop}
     (nil))
(insn 1870 4365 4215 154 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":370 221 {*addsi_1}
     (nil))
(jump_insn 4215 1870 4216 154 (set (pc)
        (label_ref 1871)) "CLDRAD.f":370 683 {jump}
     (nil)
 -> 1871)
;;  succ:       134 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 4216 4215 4361)
;; basic block 156, loop depth 0, maybe hot
;;  prev block 154, next block 158, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       134
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4361 4216 4360 156 248 (nil) [1 uses])
(note 4360 4361 4362 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 4362 4360 1876 156 (const_int 0 [0]) "CLDRAD.f":371 718 {nop}
     (nil))
(insn 1876 4362 1877 156 (set (reg:SI 0 ax [orig:548 _462 ] [548])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 604 [0x25c]))) [2 rqstfld.iget+588 S4 A32])) "CLDRAD.f":408 86 {*movsi_internal}
     (nil))
(insn 1877 1876 1878 156 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:548 _462 ] [548])
            (const_int 0 [0]))) "CLDRAD.f":408 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1878 1877 1879 156 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1923)
            (pc))) "CLDRAD.f":408 682 {*jcc}
     (nil)
 -> 1923)
;;  succ:       158 (FALLTHRU)
;;              159
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 158, loop depth 0, maybe hot
;;  prev block 156, next block 159, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       156 (FALLTHRU)
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1879 1878 1880 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 1880 1879 1881 158 (set (reg:DI 1 dx [1657])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1881 1880 1882 158 (set (reg:DI 0 ax [1658])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1882 1881 1883 158 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":409 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1883 1882 1884 158 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":409 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1884 1883 1885 158 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1657])) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1885 1884 1886 158 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1658])) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1886 1885 1887 158 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1887 1886 1888 158 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cldbp.4367") [flags 0x202]  <var_decl 0x7f20392d76c0 cldbp>)) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1888 1887 1889 158 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1889 1888 1890 158 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f2038fb4870 *.LC22>)) "CLDRAD.f":409 85 {*movdi_internal}
     (nil))
(insn 1890 1889 1891 158 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":409 88 {*movqi_internal}
     (nil))
(call_insn 1891 1890 1892 158 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":409 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1892 1891 1893 158 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":409 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1893 1892 1894 158 (set (reg/f:DI 1 dx [1659])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":410 85 {*movdi_internal}
     (nil))
(insn 1894 1893 1895 158 (set (reg:DI 0 ax [1660])
        (const_int 0 [0])) "CLDRAD.f":410 85 {*movdi_internal}
     (nil))
(insn 1895 1894 4481 158 (set (reg:DI 2 cx [1661])
        (const_int 12 [0xc])) "CLDRAD.f":410 85 {*movdi_internal}
     (nil))
(insn 4481 1895 1896 158 (set (reg/f:DI 5 di [1659])
        (reg/f:DI 1 dx [1659])) "CLDRAD.f":410 85 {*movdi_internal}
     (nil))
(insn 1896 4481 4482 158 (parallel [
            (set (reg:DI 2 cx [1661])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1659])
                (plus:DI (ashift:DI (reg:DI 2 cx [1661])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1659])))
            (set (mem/c:BLK (reg/f:DI 5 di [1659]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1660]))
            (use (reg:DI 2 cx [1661]))
        ]) "CLDRAD.f":410 984 {*rep_stosdi_rex64}
     (nil))
(insn 4482 1896 1897 158 (set (reg/f:DI 1 dx [1659])
        (reg/f:DI 5 di [1659])) "CLDRAD.f":410 85 {*movdi_internal}
     (nil))
(insn 1897 4482 1898 158 (set (mem/c:SI (reg/f:DI 1 dx [1659]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1660])) "CLDRAD.f":410 86 {*movsi_internal}
     (nil))
(insn 1898 1897 1899 158 (parallel [
            (set (reg/f:DI 1 dx [1659])
                (plus:DI (reg/f:DI 1 dx [1659])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":410 222 {*adddi_1}
     (nil))
(insn 1899 1898 1900 158 (set (reg:SI 0 ax [orig:549 _463 ] [549])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 604 [0x25c]))) [2 rqstfld.iget+588 S4 A32])) "CLDRAD.f":412 86 {*movsi_internal}
     (nil))
(insn 1900 1899 4645 158 (set (reg:DI 0 ax [orig:550 _464 ] [550])
        (sign_extend:DI (reg:SI 0 ax [orig:549 _463 ] [549]))) "CLDRAD.f":412 149 {*extendsidi2_rex64}
     (nil))
(insn 4645 1900 1902 158 (set (reg:DI 1 dx [orig:551 _465 ] [551])
        (plus:DI (reg:DI 0 ax [orig:550 _464 ] [550])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":412 218 {*leadi}
     (nil))
(insn 1902 4645 1903 158 (set (reg:DI 0 ax [1662])
        (reg:DI 1 dx [orig:551 _465 ] [551])) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1903 1902 1905 158 (parallel [
            (set (reg:DI 0 ax [1663])
                (ashift:DI (reg:DI 0 ax [1662])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":412 551 {*ashldi3_1}
     (nil))
(insn 1905 1903 1906 158 (parallel [
            (set (reg:DI 0 ax [1662])
                (minus:DI (reg:DI 0 ax [1662])
                    (reg:DI 1 dx [orig:551 _465 ] [551])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":412 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:551 _465 ] [551])
            (const_int 15 [0xf]))
        (nil)))
(insn 1906 1905 1909 158 (parallel [
            (set (reg:DI 0 ax [1664])
                (ashift:DI (reg:DI 0 ax [1662])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":412 551 {*ashldi3_1}
     (nil))
(insn 1909 1906 1910 158 (parallel [
            (set (reg:DI 0 ax [1665])
                (plus:DI (reg:DI 0 ax [orig:552 _466 ] [552])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":412 222 {*adddi_1}
     (nil))
(insn 1910 1909 4646 158 (parallel [
            (set (reg:DI 0 ax [1666])
                (ashift:DI (reg:DI 0 ax [1665])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":412 551 {*ashldi3_1}
     (nil))
(insn 4646 1910 1912 158 (set (reg/f:DI 1 dx [orig:553 _467 ] [553])
        (plus:DI (reg:DI 0 ax [1666])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":412 218 {*leadi}
     (nil))
(insn 1912 4646 1913 158 (set (reg:DI 4 si [1667])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1913 1912 1914 158 (set (reg:DI 2 cx [1668])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1914 1913 1915 158 (set (reg:DI 0 ax [1669])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1915 1914 1916 158 (set (reg:DI 38 r9)
        (reg:DI 4 si [1667])) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1916 1915 1917 158 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1668])) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1917 1916 1919 158 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1669])) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1919 1917 1920 158 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 604 [0x25c])))) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1920 1919 1921 158 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":412 85 {*movdi_internal}
     (nil))
(insn 1921 1920 1922 158 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":412 88 {*movqi_internal}
     (nil))
(call_insn 1922 1921 1923 158 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":412 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       159 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 159, loop depth 0, maybe hot
;;  prev block 158, next block 160, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       156
;;              158 (FALLTHRU)
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1923 1922 1924 159 87 (nil) [1 uses])
(note 1924 1923 1925 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 1925 1924 1926 159 (set (reg:SI 0 ax [orig:554 _468 ] [554])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 724 [0x2d4]))) [2 rqstfld.iget+708 S4 A32])) "CLDRAD.f":416 86 {*movsi_internal}
     (nil))
(insn 1926 1925 1927 159 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:554 _468 ] [554])
            (const_int 0 [0]))) "CLDRAD.f":416 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1927 1926 1928 159 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1972)
            (pc))) "CLDRAD.f":416 682 {*jcc}
     (nil)
 -> 1972)
;;  succ:       160 (FALLTHRU)
;;              161
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 160, loop depth 0, maybe hot
;;  prev block 159, next block 161, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       159 (FALLTHRU)
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1928 1927 1929 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 1929 1928 1930 160 (set (reg:DI 1 dx [1670])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1930 1929 1931 160 (set (reg:DI 0 ax [1671])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1931 1930 1932 160 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":417 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 1932 1931 1933 160 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":417 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 1933 1932 1934 160 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1670])) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1934 1933 1935 160 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1671])) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1935 1934 1936 160 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1936 1935 1937 160 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cldbz.4369") [flags 0x202]  <var_decl 0x7f20392d7750 cldbz>)) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1937 1936 1938 160 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1938 1937 1939 160 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC22") [flags 0x2]  <var_decl 0x7f2038fb4870 *.LC22>)) "CLDRAD.f":417 85 {*movdi_internal}
     (nil))
(insn 1939 1938 1940 160 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":417 88 {*movqi_internal}
     (nil))
(call_insn 1940 1939 1941 160 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":417 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1941 1940 1942 160 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":417 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1942 1941 1943 160 (set (reg/f:DI 1 dx [1672])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":418 85 {*movdi_internal}
     (nil))
(insn 1943 1942 1944 160 (set (reg:DI 0 ax [1673])
        (const_int 0 [0])) "CLDRAD.f":418 85 {*movdi_internal}
     (nil))
(insn 1944 1943 4483 160 (set (reg:DI 2 cx [1674])
        (const_int 12 [0xc])) "CLDRAD.f":418 85 {*movdi_internal}
     (nil))
(insn 4483 1944 1945 160 (set (reg/f:DI 5 di [1672])
        (reg/f:DI 1 dx [1672])) "CLDRAD.f":418 85 {*movdi_internal}
     (nil))
(insn 1945 4483 4484 160 (parallel [
            (set (reg:DI 2 cx [1674])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1672])
                (plus:DI (ashift:DI (reg:DI 2 cx [1674])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1672])))
            (set (mem/c:BLK (reg/f:DI 5 di [1672]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1673]))
            (use (reg:DI 2 cx [1674]))
        ]) "CLDRAD.f":418 984 {*rep_stosdi_rex64}
     (nil))
(insn 4484 1945 1946 160 (set (reg/f:DI 1 dx [1672])
        (reg/f:DI 5 di [1672])) "CLDRAD.f":418 85 {*movdi_internal}
     (nil))
(insn 1946 4484 1947 160 (set (mem/c:SI (reg/f:DI 1 dx [1672]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1673])) "CLDRAD.f":418 86 {*movsi_internal}
     (nil))
(insn 1947 1946 1948 160 (parallel [
            (set (reg/f:DI 1 dx [1672])
                (plus:DI (reg/f:DI 1 dx [1672])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":418 222 {*adddi_1}
     (nil))
(insn 1948 1947 1949 160 (set (reg:SI 0 ax [orig:555 _469 ] [555])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 724 [0x2d4]))) [2 rqstfld.iget+708 S4 A32])) "CLDRAD.f":420 86 {*movsi_internal}
     (nil))
(insn 1949 1948 4643 160 (set (reg:DI 0 ax [orig:556 _470 ] [556])
        (sign_extend:DI (reg:SI 0 ax [orig:555 _469 ] [555]))) "CLDRAD.f":420 149 {*extendsidi2_rex64}
     (nil))
(insn 4643 1949 1951 160 (set (reg:DI 1 dx [orig:557 _471 ] [557])
        (plus:DI (reg:DI 0 ax [orig:556 _470 ] [556])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":420 218 {*leadi}
     (nil))
(insn 1951 4643 1952 160 (set (reg:DI 0 ax [1675])
        (reg:DI 1 dx [orig:557 _471 ] [557])) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1952 1951 1954 160 (parallel [
            (set (reg:DI 0 ax [1676])
                (ashift:DI (reg:DI 0 ax [1675])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":420 551 {*ashldi3_1}
     (nil))
(insn 1954 1952 1955 160 (parallel [
            (set (reg:DI 0 ax [1675])
                (minus:DI (reg:DI 0 ax [1675])
                    (reg:DI 1 dx [orig:557 _471 ] [557])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":420 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:557 _471 ] [557])
            (const_int 15 [0xf]))
        (nil)))
(insn 1955 1954 1958 160 (parallel [
            (set (reg:DI 0 ax [1677])
                (ashift:DI (reg:DI 0 ax [1675])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":420 551 {*ashldi3_1}
     (nil))
(insn 1958 1955 1959 160 (parallel [
            (set (reg:DI 0 ax [1678])
                (plus:DI (reg:DI 0 ax [orig:558 _472 ] [558])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":420 222 {*adddi_1}
     (nil))
(insn 1959 1958 4644 160 (parallel [
            (set (reg:DI 0 ax [1679])
                (ashift:DI (reg:DI 0 ax [1678])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":420 551 {*ashldi3_1}
     (nil))
(insn 4644 1959 1961 160 (set (reg/f:DI 1 dx [orig:559 _473 ] [559])
        (plus:DI (reg:DI 0 ax [1679])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":420 218 {*leadi}
     (nil))
(insn 1961 4644 1962 160 (set (reg:DI 4 si [1680])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1962 1961 1963 160 (set (reg:DI 2 cx [1681])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1963 1962 1964 160 (set (reg:DI 0 ax [1682])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1964 1963 1965 160 (set (reg:DI 38 r9)
        (reg:DI 4 si [1680])) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1965 1964 1966 160 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1681])) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1966 1965 1968 160 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1682])) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1968 1966 1969 160 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 724 [0x2d4])))) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1969 1968 1970 160 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":420 85 {*movdi_internal}
     (nil))
(insn 1970 1969 1971 160 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":420 88 {*movqi_internal}
     (nil))
(call_insn 1971 1970 1972 160 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":420 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       161 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 161, loop depth 0, maybe hot
;;  prev block 160, next block 162, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       124
;;              159
;;              160 (FALLTHRU)
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1972 1971 1973 161 67 (nil) [2 uses])
(note 1973 1972 1974 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 1974 1973 1975 161 (set (reg:SI 0 ax [orig:560 _474 ] [560])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 608 [0x260]))) [2 rqstfld.iget+592 S4 A128])) "CLDRAD.f":425 86 {*movsi_internal}
     (nil))
(insn 1975 1974 1976 161 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:560 _474 ] [560])
            (const_int 0 [0]))) "CLDRAD.f":425 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1976 1975 1977 161 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1985)
            (pc))) "CLDRAD.f":425 682 {*jcc}
     (nil)
 -> 1985)
;;  succ:       164
;;              162 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 162, loop depth 0, maybe hot
;;  prev block 161, next block 163, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       161 (FALLTHRU)
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1977 1976 1978 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1978 1977 1979 162 (set (reg:SI 0 ax [orig:561 _475 ] [561])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 728 [0x2d8]))) [2 rqstfld.iget+712 S4 A64])) "CLDRAD.f":425 86 {*movsi_internal}
     (nil))
(insn 1979 1978 1980 162 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:561 _475 ] [561])
            (const_int 0 [0]))) "CLDRAD.f":425 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1980 1979 1981 162 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1985)
            (pc))) "CLDRAD.f":425 682 {*jcc}
     (nil)
 -> 1985)
;;  succ:       164
;;              163 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 163, loop depth 0, maybe hot
;;  prev block 162, next block 164, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       162 (FALLTHRU)
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1981 1980 1982 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 1982 1981 1983 163 (set (reg:SI 0 ax [orig:562 _476 ] [562])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 684 [0x2ac]))) [2 rqstfld.iget+668 S4 A32])) "CLDRAD.f":425 86 {*movsi_internal}
     (nil))
(insn 1983 1982 1984 163 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:562 _476 ] [562])
            (const_int 0 [0]))) "CLDRAD.f":425 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1984 1983 1985 163 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2618)
            (pc))) "CLDRAD.f":425 682 {*jcc}
     (nil)
 -> 2618)
;;  succ:       164 (FALLTHRU)
;;              202
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 164, loop depth 0, maybe hot
;;  prev block 163, next block 165, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       161
;;              162
;;              163 (FALLTHRU)
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 21 [xmm0]
(code_label 1985 1984 1986 164 88 (nil) [2 uses])
(note 1986 1985 1987 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 1987 1986 1988 164 (set (reg:SF 21 xmm0 [1683])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":427 131 {*movsf_internal}
     (nil))
(insn 1988 1987 1989 164 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 climit+0 S4 A32])
        (reg:SF 21 xmm0 [1683])) "CLDRAD.f":427 131 {*movsf_internal}
     (nil))
(insn 1989 1988 1990 164 (set (reg:SI 1 dx [orig:1149 _1383 ] [1149])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":428 86 {*movsi_internal}
     (nil))
(insn 1990 1989 1991 164 (set (reg:SI 0 ax [orig:1150 _1384 ] [1150])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":428 86 {*movsi_internal}
     (nil))
(insn 1991 1990 2023 164 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1149 _1383 ] [1149])) "CLDRAD.f":428 86 {*movsi_internal}
     (nil))
;;  succ:       165 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 165, loop depth 0, maybe hot
;;  prev block 164, next block 166, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       164 (FALLTHRU)
;;              169 [always] 
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 2023 1991 1992 165 93 (nil) [1 uses])
(note 1992 2023 1993 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 1993 1992 1994 165 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1150 _1384 ] [1150]))) "CLDRAD.f":428 11 {*cmpsi_1}
     (nil))
(insn 1994 1993 1995 165 (set (reg:QI 1 dx [1684])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":428 678 {*setcc_qi}
     (nil))
(insn 1995 1994 1996 165 (set (reg:SI 1 dx [orig:1151 _1386 ] [1151])
        (zero_extend:SI (reg:QI 1 dx [1684]))) "CLDRAD.f":428 140 {*zero_extendqisi2}
     (nil))
(insn 1996 1995 1997 165 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1151 _1386 ] [1151])
            (const_int 0 [0]))) "CLDRAD.f":428 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1997 1996 1998 165 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4370)
            (pc))) "CLDRAD.f":428 682 {*jcc}
     (nil)
 -> 4370)
;;  succ:       171
;;              166 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 166, loop depth 0, maybe hot
;;  prev block 165, next block 167, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       165 (FALLTHRU)
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 1998 1997 1999 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 1999 1998 2017 166 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":429 86 {*movsi_internal}
     (nil))
;;  succ:       167 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 167, loop depth 0, maybe hot
;;  prev block 166, next block 168, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       166 (FALLTHRU)
;;              168 [always] 
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 2017 1999 2000 167 92 (nil) [1 uses])
(note 2000 2017 2001 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 2001 2000 2002 167 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":429 11 {*cmpsi_1}
     (nil))
(insn 2002 2001 2003 167 (set (reg:QI 1 dx [1685])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":429 678 {*setcc_qi}
     (nil))
(insn 2003 2002 2004 167 (set (reg:SI 1 dx [orig:1152 _1388 ] [1152])
        (zero_extend:SI (reg:QI 1 dx [1685]))) "CLDRAD.f":429 140 {*zero_extendqisi2}
     (nil))
(insn 2004 2003 2005 167 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1152 _1388 ] [1152])
            (const_int 0 [0]))) "CLDRAD.f":429 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2005 2004 2006 167 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4373)
            (pc))) "CLDRAD.f":429 682 {*jcc}
     (nil)
 -> 4373)
;;  succ:       169
;;              168 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 168, loop depth 0, maybe hot
;;  prev block 167, next block 169, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       167 (FALLTHRU)
;; bb 168 artificial_defs: { }
;; bb 168 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
(note 2006 2005 2007 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 2007 2006 2008 168 (set (reg:SI 1 dx [1686])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":430 86 {*movsi_internal}
     (nil))
(insn 2008 2007 2009 168 (set (reg:DI 1 dx [orig:563 _477 ] [563])
        (sign_extend:DI (reg:SI 1 dx [1686]))) "CLDRAD.f":430 149 {*extendsidi2_rex64}
     (nil))
(insn 2009 2008 2010 168 (parallel [
            (set (reg:DI 2 cx [orig:564 _478 ] [564])
                (mult:DI (reg:DI 1 dx [orig:563 _477 ] [563])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":430 349 {*muldi3_1}
     (nil))
(insn 2010 2009 2011 168 (set (reg:SI 1 dx [1687])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":430 86 {*movsi_internal}
     (nil))
(insn 2011 2010 2012 168 (set (reg:DI 1 dx [orig:565 _479 ] [565])
        (sign_extend:DI (reg:SI 1 dx [1687]))) "CLDRAD.f":430 149 {*extendsidi2_rex64}
     (nil))
(insn 2012 2011 4642 168 (parallel [
            (set (reg:DI 1 dx [orig:566 _480 ] [566])
                (plus:DI (reg:DI 1 dx [orig:565 _479 ] [565])
                    (reg:DI 2 cx [orig:564 _478 ] [564])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":430 222 {*adddi_1}
     (nil))
(insn 4642 2012 2014 168 (set (reg:DI 2 cx [orig:567 _481 ] [567])
        (plus:DI (reg:DI 1 dx [orig:566 _480 ] [566])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":430 218 {*leadi}
     (nil))
(insn 2014 4642 2015 168 (set (reg/f:DI 1 dx [1688])
        (symbol_ref:DI ("need.4414") [flags 0x202]  <var_decl 0x7f2038edcbd0 need>)) "CLDRAD.f":430 85 {*movdi_internal}
     (nil))
(insn 2015 2014 2016 168 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:567 _481 ] [567])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1688])) [7 need S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":430 86 {*movsi_internal}
     (nil))
(insn 2016 2015 4217 168 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":429 221 {*addsi_1}
     (nil))
(jump_insn 4217 2016 4218 168 (set (pc)
        (label_ref 2017)) "CLDRAD.f":429 683 {jump}
     (nil)
 -> 2017)
;;  succ:       167 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4218 4217 4373)
;; basic block 169, loop depth 0, maybe hot
;;  prev block 168, next block 171, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       167
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4373 4218 4372 169 252 (nil) [1 uses])
(note 4372 4373 4374 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 4374 4372 2022 169 (const_int 0 [0]) "CLDRAD.f":430 718 {nop}
     (nil))
(insn 2022 4374 4219 169 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":428 221 {*addsi_1}
     (nil))
(jump_insn 4219 2022 4220 169 (set (pc)
        (label_ref 2023)) "CLDRAD.f":428 683 {jump}
     (nil)
 -> 2023)
;;  succ:       165 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4220 4219 4370)
;; basic block 171, loop depth 0, maybe hot
;;  prev block 169, next block 173, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       165
;; bb 171 artificial_defs: { }
;; bb 171 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4370 4220 4369 171 251 (nil) [1 uses])
(note 4369 4370 4371 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 4371 4369 2028 171 (const_int 0 [0]) "CLDRAD.f":429 718 {nop}
     (nil))
(insn 2028 4371 2029 171 (set (reg:SI 0 ax [orig:1153 _1392 ] [1153])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":443 86 {*movsi_internal}
     (nil))
(insn 2029 2028 2030 171 (set (reg:SI 3 bx [orig:1154 _1393 ] [1154])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":443 86 {*movsi_internal}
     (nil))
(insn 2030 2029 2468 171 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 0 ax [orig:1153 _1392 ] [1153])) "CLDRAD.f":443 86 {*movsi_internal}
     (nil))
;;  succ:       173 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 173, loop depth 0, maybe hot
;;  prev block 171, next block 174, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       171 (FALLTHRU)
;;              193 [always] 
;; bb 173 artificial_defs: { }
;; bb 173 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 2468 2030 2031 173 108 (nil) [1 uses])
(note 2031 2468 2032 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 2032 2031 2033 173 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 3 bx [orig:1154 _1393 ] [1154]))) "CLDRAD.f":443 11 {*cmpsi_1}
     (nil))
(insn 2033 2032 2034 173 (set (reg:QI 0 ax [1689])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":443 678 {*setcc_qi}
     (nil))
(insn 2034 2033 2035 173 (set (reg:SI 0 ax [orig:1155 _1395 ] [1155])
        (zero_extend:SI (reg:QI 0 ax [1689]))) "CLDRAD.f":443 140 {*zero_extendqisi2}
     (nil))
(insn 2035 2034 2036 173 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1155 _1395 ] [1155])
            (const_int 0 [0]))) "CLDRAD.f":443 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2036 2035 2037 173 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4376)
            (pc))) "CLDRAD.f":443 682 {*jcc}
     (nil)
 -> 4376)
;;  succ:       195
;;              174 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 174, loop depth 0, maybe hot
;;  prev block 173, next block 175, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       173 (FALLTHRU)
;; bb 174 artificial_defs: { }
;; bb 174 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 2037 2036 2038 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(insn 2038 2037 2462 174 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":444 86 {*movsi_internal}
     (nil))
;;  succ:       175 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 175, loop depth 0, maybe hot
;;  prev block 174, next block 176, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       174 (FALLTHRU)
;;              192 [always] 
;; bb 175 artificial_defs: { }
;; bb 175 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 2462 2038 2039 175 107 (nil) [1 uses])
(note 2039 2462 2040 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn 2040 2039 2041 175 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":444 11 {*cmpsi_1}
     (nil))
(insn 2041 2040 2042 175 (set (reg:QI 0 ax [1690])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":444 678 {*setcc_qi}
     (nil))
(insn 2042 2041 2043 175 (set (reg:SI 0 ax [orig:1156 _1397 ] [1156])
        (zero_extend:SI (reg:QI 0 ax [1690]))) "CLDRAD.f":444 140 {*zero_extendqisi2}
     (nil))
(insn 2043 2042 2044 175 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:1156 _1397 ] [1156])
            (const_int 0 [0]))) "CLDRAD.f":444 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2044 2043 2045 175 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4379)
            (pc))) "CLDRAD.f":444 682 {*jcc}
     (nil)
 -> 4379)
;;  succ:       193
;;              176 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 176, loop depth 0, maybe hot
;;  prev block 175, next block 177, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       175 (FALLTHRU)
;; bb 176 artificial_defs: { }
;; bb 176 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 17 [flags] 21 [xmm0]
(note 2045 2044 4640 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 4640 2045 2047 176 (set (reg:SF 21 xmm0 [1691])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":445 131 {*movsf_internal}
     (nil))
(insn 2047 4640 2048 176 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32])
        (reg:SF 21 xmm0 [1691])) "CLDRAD.f":445 131 {*movsf_internal}
     (nil))
(insn 2048 2047 2049 176 (set (reg:SI 0 ax [1692])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":446 86 {*movsi_internal}
     (nil))
(insn 2049 2048 2050 176 (set (reg:DI 0 ax [orig:568 _482 ] [568])
        (sign_extend:DI (reg:SI 0 ax [1692]))) "CLDRAD.f":446 149 {*extendsidi2_rex64}
     (nil))
(insn 2050 2049 2051 176 (parallel [
            (set (reg:DI 1 dx [orig:569 _483 ] [569])
                (mult:DI (reg:DI 0 ax [orig:568 _482 ] [568])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":446 349 {*muldi3_1}
     (nil))
(insn 2051 2050 2052 176 (set (reg:SI 0 ax [1693])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":446 86 {*movsi_internal}
     (nil))
(insn 2052 2051 2053 176 (set (reg:DI 0 ax [orig:570 _484 ] [570])
        (sign_extend:DI (reg:SI 0 ax [1693]))) "CLDRAD.f":446 149 {*extendsidi2_rex64}
     (nil))
(insn 2053 2052 4641 176 (parallel [
            (set (reg:DI 0 ax [orig:571 _485 ] [571])
                (plus:DI (reg:DI 0 ax [orig:570 _484 ] [570])
                    (reg:DI 1 dx [orig:569 _483 ] [569])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":446 222 {*adddi_1}
     (nil))
(insn 4641 2053 2055 176 (set (reg:DI 1 dx [orig:572 _486 ] [572])
        (plus:DI (reg:DI 0 ax [orig:571 _485 ] [571])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":446 218 {*leadi}
     (nil))
(insn 2055 4641 2056 176 (set (reg/f:DI 0 ax [1694])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f20392b7bd0 loops>)) "CLDRAD.f":446 85 {*movdi_internal}
     (nil))
(insn 2056 2055 2057 176 (parallel [
            (set (reg:DI 1 dx [1695])
                (plus:DI (reg:DI 1 dx [orig:572 _486 ] [572])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":446 222 {*adddi_1}
     (nil))
(insn 2057 2056 2058 176 (set (reg:SI 0 ax [1696])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [1695])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1694])) [2 loops.lmh S4 A32])) "CLDRAD.f":446 86 {*movsi_internal}
     (nil))
(insn 2058 2057 2059 176 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [2 lmhk+0 S4 A32])
        (reg:SI 0 ax [1696])) "CLDRAD.f":446 86 {*movsi_internal}
     (nil))
(insn 2059 2058 2060 176 (set (reg:SI 0 ax [orig:1157 _1400 ] [1157])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [2 lmhk+0 S4 A32])) "CLDRAD.f":447 86 {*movsi_internal}
     (nil))
(insn 2060 2059 2143 176 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":447 86 {*movsi_internal}
     (nil))
;;  succ:       177 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 177, loop depth 0, maybe hot
;;  prev block 176, next block 178, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       176 (FALLTHRU)
;;              183 [always] 
;; bb 177 artificial_defs: { }
;; bb 177 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 2143 2060 2061 177 101 (nil) [1 uses])
(note 2061 2143 2062 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 2062 2061 2063 177 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
            (reg:SI 0 ax [orig:1157 _1400 ] [1157]))) "CLDRAD.f":447 11 {*cmpsi_1}
     (nil))
(insn 2063 2062 2064 177 (set (reg:QI 1 dx [1697])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":447 678 {*setcc_qi}
     (nil))
(insn 2064 2063 2065 177 (set (reg:SI 1 dx [orig:1158 _1402 ] [1158])
        (zero_extend:SI (reg:QI 1 dx [1697]))) "CLDRAD.f":447 140 {*zero_extendqisi2}
     (nil))
(insn 2065 2064 2066 177 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1158 _1402 ] [1158])
            (const_int 0 [0]))) "CLDRAD.f":447 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2066 2065 2067 177 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4382)
            (pc))) "CLDRAD.f":447 682 {*jcc}
     (nil)
 -> 4382)
;;  succ:       184
;;              178 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 178, loop depth 0, maybe hot
;;  prev block 177, next block 179, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       177 (FALLTHRU)
;; bb 178 artificial_defs: { }
;; bb 178 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 2067 2066 2068 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 2068 2067 2069 178 (set (reg:SI 1 dx [1698])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])) "CLDRAD.f":448 86 {*movsi_internal}
     (nil))
(insn 2069 2068 2070 178 (set (reg:DI 1 dx [orig:573 _487 ] [573])
        (sign_extend:DI (reg:SI 1 dx [1698]))) "CLDRAD.f":448 149 {*extendsidi2_rex64}
     (nil))
(insn 2070 2069 2071 178 (parallel [
            (set (reg:DI 2 cx [orig:574 _488 ] [574])
                (mult:DI (reg:DI 1 dx [orig:573 _487 ] [573])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":448 349 {*muldi3_1}
     (nil))
(insn 2071 2070 2072 178 (set (reg:SI 1 dx [1699])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":448 86 {*movsi_internal}
     (nil))
(insn 2072 2071 2073 178 (set (reg:DI 1 dx [orig:575 _489 ] [575])
        (sign_extend:DI (reg:SI 1 dx [1699]))) "CLDRAD.f":448 149 {*extendsidi2_rex64}
     (nil))
(insn 2073 2072 2074 178 (parallel [
            (set (reg:DI 1 dx [orig:576 _490 ] [576])
                (mult:DI (reg:DI 1 dx [orig:575 _489 ] [575])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":448 349 {*muldi3_1}
     (nil))
(insn 2074 2073 2075 178 (parallel [
            (set (reg:DI 2 cx [orig:577 _491 ] [577])
                (plus:DI (reg:DI 2 cx [orig:574 _488 ] [574])
                    (reg:DI 1 dx [orig:576 _490 ] [576])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":448 222 {*adddi_1}
     (nil))
(insn 2075 2074 2076 178 (set (reg:SI 1 dx [1700])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":448 86 {*movsi_internal}
     (nil))
(insn 2076 2075 2077 178 (set (reg:DI 1 dx [orig:578 _492 ] [578])
        (sign_extend:DI (reg:SI 1 dx [1700]))) "CLDRAD.f":448 149 {*extendsidi2_rex64}
     (nil))
(insn 2077 2076 4639 178 (parallel [
            (set (reg:DI 1 dx [orig:579 _493 ] [579])
                (plus:DI (reg:DI 1 dx [orig:578 _492 ] [578])
                    (reg:DI 2 cx [orig:577 _491 ] [577])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":448 222 {*adddi_1}
     (nil))
(insn 4639 2077 2079 178 (set (reg:DI 2 cx [orig:580 _494 ] [580])
        (plus:DI (reg:DI 1 dx [orig:579 _493 ] [579])
            (const_int -29751 [0xffffffffffff8bc9]))) "CLDRAD.f":448 218 {*leadi}
     (nil))
(insn 2079 4639 2080 178 (set (reg/f:DI 1 dx [1701])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f20392a8a20 cldwtr>)) "CLDRAD.f":448 85 {*movdi_internal}
     (nil))
(insn 2080 2079 2081 178 (set (reg:SF 21 xmm0 [orig:581 _495 ] [581])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:580 _494 ] [580])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1701])) [1 cldwtr.cwm S4 A32])) "CLDRAD.f":448 131 {*movsf_internal}
     (nil))
(insn 2081 2080 2082 178 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:581 _495 ] [581])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -132 [0xffffffffffffff7c])) [1 climit+0 S4 A32]))) "CLDRAD.f":448 53 {*cmpisf}
     (nil))
(jump_insn 2082 2081 2086 178 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2140)
            (pc))) "CLDRAD.f":448 682 {*jcc}
     (nil)
 -> 2140)
;;  succ:       179 (FALLTHRU)
;;              183
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 179, loop depth 0, maybe hot
;;  prev block 178, next block 180, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       178 (FALLTHRU)
;; bb 179 artificial_defs: { }
;; bb 179 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
(note 2086 2082 2087 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 2087 2086 2088 179 (set (reg:SI 1 dx [1702])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":448 86 {*movsi_internal}
     (nil))
(insn 2088 2087 2089 179 (set (reg:DI 1 dx [orig:582 _496 ] [582])
        (sign_extend:DI (reg:SI 1 dx [1702]))) "CLDRAD.f":448 149 {*extendsidi2_rex64}
     (nil))
(insn 2089 2088 2090 179 (parallel [
            (set (reg:DI 2 cx [orig:583 _497 ] [583])
                (mult:DI (reg:DI 1 dx [orig:582 _496 ] [582])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":448 349 {*muldi3_1}
     (nil))
(insn 2090 2089 2091 179 (set (reg:SI 1 dx [1703])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":448 86 {*movsi_internal}
     (nil))
(insn 2091 2090 2092 179 (set (reg:DI 1 dx [orig:584 _498 ] [584])
        (sign_extend:DI (reg:SI 1 dx [1703]))) "CLDRAD.f":448 149 {*extendsidi2_rex64}
     (nil))
(insn 2092 2091 4638 179 (parallel [
            (set (reg:DI 1 dx [orig:585 _499 ] [585])
                (plus:DI (reg:DI 1 dx [orig:584 _498 ] [584])
                    (reg:DI 2 cx [orig:583 _497 ] [583])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":448 222 {*adddi_1}
     (nil))
(insn 4638 2092 2094 179 (set (reg:DI 2 cx [orig:586 _500 ] [586])
        (plus:DI (reg:DI 1 dx [orig:585 _499 ] [585])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":448 218 {*leadi}
     (nil))
(insn 2094 4638 2095 179 (set (reg/f:DI 1 dx [1704])
        (symbol_ref:DI ("need.4414") [flags 0x202]  <var_decl 0x7f2038edcbd0 need>)) "CLDRAD.f":448 85 {*movdi_internal}
     (nil))
(insn 2095 2094 2096 179 (set (reg:SI 1 dx [orig:587 _501 ] [587])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:586 _500 ] [586])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1704])) [7 need S4 A32])) "CLDRAD.f":448 86 {*movsi_internal}
     (nil))
(insn 2096 2095 2097 179 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:587 _501 ] [587])
            (const_int 0 [0]))) "CLDRAD.f":448 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2097 2096 2098 179 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2140)
            (pc))) "CLDRAD.f":448 682 {*jcc}
     (nil)
 -> 2140)
;;  succ:       180 (FALLTHRU)
;;              183
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 180, loop depth 0, maybe hot
;;  prev block 179, next block 181, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       179 (FALLTHRU)
;; bb 180 artificial_defs: { }
;; bb 180 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 2098 2097 2099 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 2099 2098 2100 180 (set (reg:SF 21 xmm0 [1705])
        (float:SF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32]))) "CLDRAD.f":449 203 {*floatsisf2_mixed}
     (nil))
(insn 2100 2099 2101 180 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32])
        (reg:SF 21 xmm0 [1705])) "CLDRAD.f":449 131 {*movsf_internal}
     (nil))
(insn 2101 2100 2102 180 (set (reg:SI 1 dx [1706])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":450 86 {*movsi_internal}
     (nil))
(insn 2102 2101 2103 180 (set (reg:DI 1 dx [orig:588 _502 ] [588])
        (sign_extend:DI (reg:SI 1 dx [1706]))) "CLDRAD.f":450 149 {*extendsidi2_rex64}
     (nil))
(insn 2103 2102 2104 180 (parallel [
            (set (reg:DI 2 cx [orig:589 _503 ] [589])
                (mult:DI (reg:DI 1 dx [orig:588 _502 ] [588])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":450 349 {*muldi3_1}
     (nil))
(insn 2104 2103 2105 180 (set (reg:SI 1 dx [1707])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":450 86 {*movsi_internal}
     (nil))
(insn 2105 2104 2106 180 (set (reg:DI 1 dx [orig:590 _504 ] [590])
        (sign_extend:DI (reg:SI 1 dx [1707]))) "CLDRAD.f":450 149 {*extendsidi2_rex64}
     (nil))
(insn 2106 2105 4637 180 (parallel [
            (set (reg:DI 1 dx [orig:591 _505 ] [591])
                (plus:DI (reg:DI 1 dx [orig:590 _504 ] [590])
                    (reg:DI 2 cx [orig:589 _503 ] [589])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":450 222 {*adddi_1}
     (nil))
(insn 4637 2106 2108 180 (set (reg:DI 2 cx [orig:592 _506 ] [592])
        (plus:DI (reg:DI 1 dx [orig:591 _505 ] [591])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":450 218 {*leadi}
     (nil))
(insn 2108 4637 2109 180 (set (reg/f:DI 1 dx [1708])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":450 85 {*movdi_internal}
     (nil))
(insn 2109 2108 2110 180 (parallel [
            (set (reg:DI 2 cx [1709])
                (plus:DI (reg:DI 2 cx [orig:592 _506 ] [592])
                    (const_int 267539 [0x41513])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":450 222 {*adddi_1}
     (nil))
(insn 2110 2109 2111 180 (set (reg:SF 22 xmm1 [orig:593 _507 ] [593])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1709])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1708])) [1 phys.htop S4 A32])) "CLDRAD.f":450 131 {*movsf_internal}
     (nil))
(insn 2111 2110 2112 180 (set (reg:SF 21 xmm0 [1710])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32])) "CLDRAD.f":450 131 {*movsf_internal}
     (nil))
(insn 2112 2111 2113 180 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1710])
            (reg:SF 22 xmm1 [orig:593 _507 ] [593]))) "CLDRAD.f":450 53 {*cmpisf}
     (nil))
(jump_insn 2113 2112 2117 180 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2129)
            (pc))) "CLDRAD.f":450 682 {*jcc}
     (nil)
 -> 2129)
;;  succ:       181 (FALLTHRU)
;;              182
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 181, loop depth 0, maybe hot
;;  prev block 180, next block 182, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       180 (FALLTHRU)
;; bb 181 artificial_defs: { }
;; bb 181 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 2117 2113 2118 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 2118 2117 2119 181 (set (reg:SI 1 dx [1711])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":451 86 {*movsi_internal}
     (nil))
(insn 2119 2118 2120 181 (set (reg:DI 1 dx [orig:594 _508 ] [594])
        (sign_extend:DI (reg:SI 1 dx [1711]))) "CLDRAD.f":451 149 {*extendsidi2_rex64}
     (nil))
(insn 2120 2119 2121 181 (parallel [
            (set (reg:DI 2 cx [orig:595 _509 ] [595])
                (mult:DI (reg:DI 1 dx [orig:594 _508 ] [594])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":451 349 {*muldi3_1}
     (nil))
(insn 2121 2120 2122 181 (set (reg:SI 1 dx [1712])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":451 86 {*movsi_internal}
     (nil))
(insn 2122 2121 2123 181 (set (reg:DI 1 dx [orig:596 _510 ] [596])
        (sign_extend:DI (reg:SI 1 dx [1712]))) "CLDRAD.f":451 149 {*extendsidi2_rex64}
     (nil))
(insn 2123 2122 4636 181 (parallel [
            (set (reg:DI 1 dx [orig:597 _511 ] [597])
                (plus:DI (reg:DI 1 dx [orig:596 _510 ] [596])
                    (reg:DI 2 cx [orig:595 _509 ] [595])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":451 222 {*adddi_1}
     (nil))
(insn 4636 2123 2125 181 (set (reg:DI 2 cx [orig:598 _512 ] [598])
        (plus:DI (reg:DI 1 dx [orig:597 _511 ] [597])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":451 218 {*leadi}
     (nil))
(insn 2125 4636 2126 181 (set (reg/f:DI 1 dx [1713])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":451 85 {*movdi_internal}
     (nil))
(insn 2126 2125 2127 181 (parallel [
            (set (reg:DI 2 cx [1714])
                (plus:DI (reg:DI 2 cx [orig:598 _512 ] [598])
                    (const_int 267539 [0x41513])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":451 222 {*adddi_1}
     (nil))
(insn 2127 2126 2128 181 (set (reg:SF 21 xmm0 [1715])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1714])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1713])) [1 phys.htop S4 A32])) "CLDRAD.f":451 131 {*movsf_internal}
     (nil))
(insn 2128 2127 2129 181 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32])
        (reg:SF 21 xmm0 [1715])) "CLDRAD.f":451 131 {*movsf_internal}
     (nil))
;;  succ:       182 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 182, loop depth 0, maybe hot
;;  prev block 181, next block 183, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       181 (FALLTHRU)
;;              180
;; bb 182 artificial_defs: { }
;; bb 182 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags]
(code_label 2129 2128 2130 182 99 (nil) [1 uses])
(note 2130 2129 2131 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn 2131 2130 2132 182 (set (reg:SI 1 dx [1716])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":453 86 {*movsi_internal}
     (nil))
(insn 2132 2131 2133 182 (set (reg:DI 1 dx [orig:599 _513 ] [599])
        (sign_extend:DI (reg:SI 1 dx [1716]))) "CLDRAD.f":453 149 {*extendsidi2_rex64}
     (nil))
(insn 2133 2132 2134 182 (parallel [
            (set (reg:DI 2 cx [orig:600 _514 ] [600])
                (mult:DI (reg:DI 1 dx [orig:599 _513 ] [599])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":453 349 {*muldi3_1}
     (nil))
(insn 2134 2133 2135 182 (set (reg:SI 1 dx [1717])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":453 86 {*movsi_internal}
     (nil))
(insn 2135 2134 2136 182 (set (reg:DI 1 dx [orig:601 _515 ] [601])
        (sign_extend:DI (reg:SI 1 dx [1717]))) "CLDRAD.f":453 149 {*extendsidi2_rex64}
     (nil))
(insn 2136 2135 4635 182 (parallel [
            (set (reg:DI 1 dx [orig:602 _516 ] [602])
                (plus:DI (reg:DI 1 dx [orig:601 _515 ] [601])
                    (reg:DI 2 cx [orig:600 _514 ] [600])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":453 222 {*adddi_1}
     (nil))
(insn 4635 2136 2138 182 (set (reg:DI 2 cx [orig:603 _517 ] [603])
        (plus:DI (reg:DI 1 dx [orig:602 _516 ] [602])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":453 218 {*leadi}
     (nil))
(insn 2138 4635 2139 182 (set (reg/f:DI 1 dx [1718])
        (symbol_ref:DI ("need.4414") [flags 0x202]  <var_decl 0x7f2038edcbd0 need>)) "CLDRAD.f":453 85 {*movdi_internal}
     (nil))
(insn 2139 2138 2140 182 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:603 _517 ] [603])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1718])) [7 need S4 A32])
        (const_int 0 [0])) "CLDRAD.f":453 86 {*movsi_internal}
     (nil))
;;  succ:       183 (FALLTHRU)
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 183, loop depth 0, maybe hot
;;  prev block 182, next block 184, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       182 (FALLTHRU)
;;              179
;;              178
;; bb 183 artificial_defs: { }
;; bb 183 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 2140 2139 2141 183 97 (nil) [2 uses])
(note 2141 2140 2142 183 [bb 183] NOTE_INSN_BASIC_BLOCK)
(insn 2142 2141 4221 183 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -60 [0xffffffffffffffc4])) [2 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":447 221 {*addsi_1}
     (nil))
(jump_insn 4221 2142 4222 183 (set (pc)
        (label_ref 2143)) "CLDRAD.f":447 683 {jump}
     (nil)
 -> 2143)
;;  succ:       177 [always] 
;; lr  out 	 0 [ax] 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 4222 4221 4382)
;; basic block 184, loop depth 0, maybe hot
;;  prev block 183, next block 186, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       177
;; bb 184 artificial_defs: { }
;; bb 184 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4382 4222 4381 184 255 (nil) [1 uses])
(note 4381 4382 4383 184 [bb 184] NOTE_INSN_BASIC_BLOCK)
(insn 4383 4381 4634 184 (const_int 0 [0]) "CLDRAD.f":448 718 {nop}
     (nil))
(insn 4634 4383 2149 184 (set (reg:SF 21 xmm0 [1719])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":457 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2149 4634 2150 184 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1719])
                    (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":457 54 {*cmpiusf}
     (nil))
(jump_insn 2150 2149 4116 184 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 2214)
            (pc))) "CLDRAD.f":457 682 {*jcc}
     (nil)
 -> 2214)
;;  succ:       188
;;              186 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 186, loop depth 0, maybe hot
;;  prev block 184, next block 187, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       184 (FALLTHRU)
;; bb 186 artificial_defs: { }
;; bb 186 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 21 [xmm0]
(note 4116 2150 4633 186 [bb 186] NOTE_INSN_BASIC_BLOCK)
(insn 4633 4116 2152 186 (set (reg:SF 21 xmm0 [1720])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":457 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2152 4633 2153 186 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1720])
                    (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":457 54 {*cmpiusf}
     (nil))
(jump_insn 2153 2152 2157 186 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2214)
            (pc))) "CLDRAD.f":457 682 {*jcc}
     (nil)
 -> 2214)
;;  succ:       187 (FALLTHRU)
;;              188
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 187, loop depth 0, maybe hot
;;  prev block 186, next block 188, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       186 (FALLTHRU)
;; bb 187 artificial_defs: { }
;; bb 187 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 2157 2153 2158 187 [bb 187] NOTE_INSN_BASIC_BLOCK)
(insn 2158 2157 2159 187 (set (reg:SI 0 ax [1721])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":458 86 {*movsi_internal}
     (nil))
(insn 2159 2158 2160 187 (set (reg:DI 0 ax [orig:604 _518 ] [604])
        (sign_extend:DI (reg:SI 0 ax [1721]))) "CLDRAD.f":458 149 {*extendsidi2_rex64}
     (nil))
(insn 2160 2159 2161 187 (parallel [
            (set (reg:DI 1 dx [orig:605 _519 ] [605])
                (mult:DI (reg:DI 0 ax [orig:604 _518 ] [604])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":458 349 {*muldi3_1}
     (nil))
(insn 2161 2160 2162 187 (set (reg:SI 0 ax [1722])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":458 86 {*movsi_internal}
     (nil))
(insn 2162 2161 2163 187 (set (reg:DI 0 ax [orig:606 _520 ] [606])
        (sign_extend:DI (reg:SI 0 ax [1722]))) "CLDRAD.f":458 149 {*extendsidi2_rex64}
     (nil))
(insn 2163 2162 4628 187 (parallel [
            (set (reg:DI 0 ax [orig:607 _521 ] [607])
                (plus:DI (reg:DI 0 ax [orig:606 _520 ] [606])
                    (reg:DI 1 dx [orig:605 _519 ] [605])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":458 222 {*adddi_1}
     (nil))
(insn 4628 2163 2165 187 (set (reg:DI 1 dx [orig:608 _522 ] [608])
        (plus:DI (reg:DI 0 ax [orig:607 _521 ] [607])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":458 218 {*leadi}
     (nil))
(insn 2165 4628 2166 187 (set (reg:SF 21 xmm0 [orig:609 _523 ] [609])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f20392c1870 options>) [1 options.spval+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2166 2165 2167 187 (set (reg/f:DI 0 ax [1723])
        (symbol_ref:DI ("cldtp.4371") [flags 0x202]  <var_decl 0x7f20392d77e0 cldtp>)) "CLDRAD.f":458 85 {*movdi_internal}
     (nil))
(insn 2167 2166 2168 187 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:608 _522 ] [608])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1723])) [1 cldtp S4 A32])
        (reg:SF 21 xmm0 [orig:609 _523 ] [609])) "CLDRAD.f":458 131 {*movsf_internal}
     (nil))
(insn 2168 2167 2169 187 (set (reg:SI 0 ax [1724])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":459 86 {*movsi_internal}
     (nil))
(insn 2169 2168 2170 187 (set (reg:DI 0 ax [orig:610 _524 ] [610])
        (sign_extend:DI (reg:SI 0 ax [1724]))) "CLDRAD.f":459 149 {*extendsidi2_rex64}
     (nil))
(insn 2170 2169 2171 187 (parallel [
            (set (reg:DI 1 dx [orig:611 _525 ] [611])
                (mult:DI (reg:DI 0 ax [orig:610 _524 ] [610])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":459 349 {*muldi3_1}
     (nil))
(insn 2171 2170 2172 187 (set (reg:SI 0 ax [1725])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":459 86 {*movsi_internal}
     (nil))
(insn 2172 2171 2173 187 (set (reg:DI 0 ax [orig:612 _526 ] [612])
        (sign_extend:DI (reg:SI 0 ax [1725]))) "CLDRAD.f":459 149 {*extendsidi2_rex64}
     (nil))
(insn 2173 2172 4629 187 (parallel [
            (set (reg:DI 0 ax [orig:613 _527 ] [613])
                (plus:DI (reg:DI 0 ax [orig:612 _526 ] [612])
                    (reg:DI 1 dx [orig:611 _525 ] [611])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":459 222 {*adddi_1}
     (nil))
(insn 4629 2173 2175 187 (set (reg:DI 1 dx [orig:614 _528 ] [614])
        (plus:DI (reg:DI 0 ax [orig:613 _527 ] [613])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":459 218 {*leadi}
     (nil))
(insn 2175 4629 2176 187 (set (reg:SF 21 xmm0 [orig:615 _529 ] [615])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f20392c1870 options>) [1 options.spval+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2176 2175 2177 187 (set (reg/f:DI 0 ax [1726])
        (symbol_ref:DI ("cldtz.4375") [flags 0x202]  <var_decl 0x7f20392d7900 cldtz>)) "CLDRAD.f":459 85 {*movdi_internal}
     (nil))
(insn 2177 2176 2178 187 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:614 _528 ] [614])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1726])) [1 cldtz S4 A32])
        (reg:SF 21 xmm0 [orig:615 _529 ] [615])) "CLDRAD.f":459 131 {*movsf_internal}
     (nil))
(insn 2178 2177 2179 187 (set (reg:SI 0 ax [1727])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":460 86 {*movsi_internal}
     (nil))
(insn 2179 2178 2180 187 (set (reg:DI 0 ax [orig:616 _530 ] [616])
        (sign_extend:DI (reg:SI 0 ax [1727]))) "CLDRAD.f":460 149 {*extendsidi2_rex64}
     (nil))
(insn 2180 2179 2181 187 (parallel [
            (set (reg:DI 1 dx [orig:617 _531 ] [617])
                (mult:DI (reg:DI 0 ax [orig:616 _530 ] [616])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":460 349 {*muldi3_1}
     (nil))
(insn 2181 2180 2182 187 (set (reg:SI 0 ax [1728])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":460 86 {*movsi_internal}
     (nil))
(insn 2182 2181 2183 187 (set (reg:DI 0 ax [orig:618 _532 ] [618])
        (sign_extend:DI (reg:SI 0 ax [1728]))) "CLDRAD.f":460 149 {*extendsidi2_rex64}
     (nil))
(insn 2183 2182 4630 187 (parallel [
            (set (reg:DI 0 ax [orig:619 _533 ] [619])
                (plus:DI (reg:DI 0 ax [orig:618 _532 ] [618])
                    (reg:DI 1 dx [orig:617 _531 ] [617])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":460 222 {*adddi_1}
     (nil))
(insn 4630 2183 2185 187 (set (reg:DI 1 dx [orig:620 _534 ] [620])
        (plus:DI (reg:DI 0 ax [orig:619 _533 ] [619])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":460 218 {*leadi}
     (nil))
(insn 2185 4630 2186 187 (set (reg/f:DI 0 ax [1729])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f20392b7bd0 loops>)) "CLDRAD.f":460 85 {*movdi_internal}
     (nil))
(insn 2186 2185 2187 187 (parallel [
            (set (reg:DI 1 dx [1730])
                (plus:DI (reg:DI 1 dx [orig:620 _534 ] [620])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":460 222 {*adddi_1}
     (nil))
(insn 2187 2186 2188 187 (set (reg:SI 0 ax [1731])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [1730])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1729])) [2 loops.lmh S4 A32])) "CLDRAD.f":460 86 {*movsi_internal}
     (nil))
(insn 2188 2187 2189 187 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [2 lmhk+0 S4 A32])
        (reg:SI 0 ax [1731])) "CLDRAD.f":460 86 {*movsi_internal}
     (nil))
(insn 2189 2188 2190 187 (set (reg:SI 0 ax [1732])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [2 lmhk+0 S4 A32])) "CLDRAD.f":461 86 {*movsi_internal}
     (nil))
(insn 2190 2189 2191 187 (set (reg:DI 0 ax [orig:621 _535 ] [621])
        (sign_extend:DI (reg:SI 0 ax [1732]))) "CLDRAD.f":461 149 {*extendsidi2_rex64}
     (nil))
(insn 2191 2190 2192 187 (parallel [
            (set (reg:DI 1 dx [orig:622 _536 ] [622])
                (mult:DI (reg:DI 0 ax [orig:621 _535 ] [621])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 349 {*muldi3_1}
     (nil))
(insn 2192 2191 2193 187 (set (reg:SI 0 ax [1733])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":461 86 {*movsi_internal}
     (nil))
(insn 2193 2192 2194 187 (set (reg:DI 0 ax [orig:623 _537 ] [623])
        (sign_extend:DI (reg:SI 0 ax [1733]))) "CLDRAD.f":461 149 {*extendsidi2_rex64}
     (nil))
(insn 2194 2193 2195 187 (parallel [
            (set (reg:DI 0 ax [orig:624 _538 ] [624])
                (mult:DI (reg:DI 0 ax [orig:623 _537 ] [623])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 349 {*muldi3_1}
     (nil))
(insn 2195 2194 2196 187 (parallel [
            (set (reg:DI 1 dx [orig:625 _539 ] [625])
                (plus:DI (reg:DI 1 dx [orig:622 _536 ] [622])
                    (reg:DI 0 ax [orig:624 _538 ] [624])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 222 {*adddi_1}
     (nil))
(insn 2196 2195 2197 187 (set (reg:SI 0 ax [1734])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":461 86 {*movsi_internal}
     (nil))
(insn 2197 2196 2198 187 (set (reg:DI 0 ax [orig:626 _540 ] [626])
        (sign_extend:DI (reg:SI 0 ax [1734]))) "CLDRAD.f":461 149 {*extendsidi2_rex64}
     (nil))
(insn 2198 2197 4631 187 (parallel [
            (set (reg:DI 0 ax [orig:627 _541 ] [627])
                (plus:DI (reg:DI 0 ax [orig:626 _540 ] [626])
                    (reg:DI 1 dx [orig:625 _539 ] [625])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 222 {*adddi_1}
     (nil))
(insn 4631 2198 2200 187 (set (reg:DI 2 cx [orig:628 _542 ] [628])
        (plus:DI (reg:DI 0 ax [orig:627 _541 ] [627])
            (const_int -29751 [0xffffffffffff8bc9]))) "CLDRAD.f":461 218 {*leadi}
     (nil))
(insn 2200 4631 2201 187 (set (reg:SI 0 ax [1735])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":461 86 {*movsi_internal}
     (nil))
(insn 2201 2200 2202 187 (set (reg:DI 0 ax [orig:629 _543 ] [629])
        (sign_extend:DI (reg:SI 0 ax [1735]))) "CLDRAD.f":461 149 {*extendsidi2_rex64}
     (nil))
(insn 2202 2201 2203 187 (parallel [
            (set (reg:DI 1 dx [orig:630 _544 ] [630])
                (mult:DI (reg:DI 0 ax [orig:629 _543 ] [629])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 349 {*muldi3_1}
     (nil))
(insn 2203 2202 2204 187 (set (reg:SI 0 ax [1736])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":461 86 {*movsi_internal}
     (nil))
(insn 2204 2203 2205 187 (set (reg:DI 0 ax [orig:631 _545 ] [631])
        (sign_extend:DI (reg:SI 0 ax [1736]))) "CLDRAD.f":461 149 {*extendsidi2_rex64}
     (nil))
(insn 2205 2204 4632 187 (parallel [
            (set (reg:DI 0 ax [orig:632 _546 ] [632])
                (plus:DI (reg:DI 0 ax [orig:631 _545 ] [631])
                    (reg:DI 1 dx [orig:630 _544 ] [630])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 222 {*adddi_1}
     (nil))
(insn 4632 2205 2207 187 (set (reg:DI 1 dx [orig:633 _547 ] [633])
        (plus:DI (reg:DI 0 ax [orig:632 _546 ] [632])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":461 218 {*leadi}
     (nil))
(insn 2207 4632 2208 187 (set (reg/f:DI 0 ax [1737])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":461 85 {*movdi_internal}
     (nil))
(insn 2208 2207 2209 187 (parallel [
            (set (reg:DI 2 cx [1738])
                (plus:DI (reg:DI 2 cx [orig:628 _542 ] [628])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":461 222 {*adddi_1}
     (nil))
(insn 2209 2208 2210 187 (set (reg:SF 21 xmm0 [orig:634 _548 ] [634])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1738])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1737])) [1 vrbls.t S4 A32])) "CLDRAD.f":461 131 {*movsf_internal}
     (nil))
(insn 2210 2209 2211 187 (set (reg/f:DI 0 ax [1739])
        (symbol_ref:DI ("cldtt.4373") [flags 0x202]  <var_decl 0x7f20392d7870 cldtt>)) "CLDRAD.f":461 85 {*movdi_internal}
     (nil))
(insn 2211 2210 4223 187 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:633 _547 ] [633])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1739])) [1 cldtt S4 A32])
        (reg:SF 21 xmm0 [orig:634 _548 ] [634])) "CLDRAD.f":461 131 {*movsf_internal}
     (nil))
(jump_insn 4223 2211 4224 187 (set (pc)
        (label_ref 2459)) 683 {jump}
     (nil)
 -> 2459)
;;  succ:       192 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 4224 4223 2214)
;; basic block 188, loop depth 0, maybe hot
;;  prev block 187, next block 189, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       184
;;              186
;; bb 188 artificial_defs: { }
;; bb 188 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 21 [xmm0]
(code_label 2214 4224 2215 188 102 (nil) [2 uses])
(note 2215 2214 2216 188 [bb 188] NOTE_INSN_BASIC_BLOCK)
(insn 2216 2215 2217 188 (set (reg:SF 21 xmm0 [1740])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32])) "CLDRAD.f":462 131 {*movsf_internal}
     (nil))
(insn 2217 2216 2218 188 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1740])
                    (mem/u/c:SF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":462 54 {*cmpiusf}
     (nil))
(jump_insn 2218 2217 4119 188 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 2291)
            (pc))) "CLDRAD.f":462 682 {*jcc}
     (nil)
 -> 2291)
;;  succ:       191
;;              189 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 189, loop depth 0, maybe hot
;;  prev block 188, next block 190, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       188 (FALLTHRU)
;; bb 189 artificial_defs: { }
;; bb 189 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags] 21 [xmm0]
(note 4119 2218 2219 189 [bb 189] NOTE_INSN_BASIC_BLOCK)
(insn 2219 4119 2220 189 (set (reg:SF 21 xmm0 [1741])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32])) "CLDRAD.f":462 131 {*movsf_internal}
     (nil))
(insn 2220 2219 2221 189 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [1741])
                    (mem/u/c:SF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S4 A32]))
            ] UNSPEC_NOTRAP)) "CLDRAD.f":462 54 {*cmpiusf}
     (nil))
(jump_insn 2221 2220 2225 189 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2291)
            (pc))) "CLDRAD.f":462 682 {*jcc}
     (nil)
 -> 2291)
;;  succ:       190 (FALLTHRU)
;;              191
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 190, loop depth 0, maybe hot
;;  prev block 189, next block 191, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       189 (FALLTHRU)
;; bb 190 artificial_defs: { }
;; bb 190 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 2225 2221 2226 190 [bb 190] NOTE_INSN_BASIC_BLOCK)
(insn 2226 2225 2227 190 (set (reg/f:DI 0 ax [1742])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":463 85 {*movdi_internal}
     (nil))
(insn 2227 2226 2228 190 (set (reg:SF 22 xmm1 [orig:635 _549 ] [635])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1742])
                (const_int 384 [0x180])) [1 phys.aeta1+148 S4 A128])) "CLDRAD.f":463 131 {*movsf_internal}
     (nil))
(insn 2228 2227 2229 190 (set (reg:SI 0 ax [1743])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":463 86 {*movsi_internal}
     (nil))
(insn 2229 2228 2230 190 (set (reg:DI 0 ax [orig:636 _550 ] [636])
        (sign_extend:DI (reg:SI 0 ax [1743]))) "CLDRAD.f":463 149 {*extendsidi2_rex64}
     (nil))
(insn 2230 2229 2231 190 (parallel [
            (set (reg:DI 1 dx [orig:637 _551 ] [637])
                (mult:DI (reg:DI 0 ax [orig:636 _550 ] [636])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":463 349 {*muldi3_1}
     (nil))
(insn 2231 2230 2232 190 (set (reg:SI 0 ax [1744])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":463 86 {*movsi_internal}
     (nil))
(insn 2232 2231 2233 190 (set (reg:DI 0 ax [orig:638 _552 ] [638])
        (sign_extend:DI (reg:SI 0 ax [1744]))) "CLDRAD.f":463 149 {*extendsidi2_rex64}
     (nil))
(insn 2233 2232 4622 190 (parallel [
            (set (reg:DI 0 ax [orig:639 _553 ] [639])
                (plus:DI (reg:DI 0 ax [orig:638 _552 ] [638])
                    (reg:DI 1 dx [orig:637 _551 ] [637])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":463 222 {*adddi_1}
     (nil))
(insn 4622 2233 2235 190 (set (reg:DI 1 dx [orig:640 _554 ] [640])
        (plus:DI (reg:DI 0 ax [orig:639 _553 ] [639])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":463 218 {*leadi}
     (nil))
(insn 2235 4622 2236 190 (set (reg/f:DI 0 ax [1745])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":463 85 {*movdi_internal}
     (nil))
(insn 2236 2235 2237 190 (parallel [
            (set (reg:DI 1 dx [1746])
                (plus:DI (reg:DI 1 dx [orig:640 _554 ] [640])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":463 222 {*adddi_1}
     (nil))
(insn 2237 2236 2238 190 (set (reg:SF 21 xmm0 [orig:641 _555 ] [641])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1746])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1745])) [1 extra.pdsl S4 A32])) "CLDRAD.f":463 131 {*movsf_internal}
     (nil))
(insn 2238 2237 2239 190 (set (reg:SF 22 xmm1 [orig:642 _556 ] [642])
        (mult:SF (reg:SF 22 xmm1 [orig:635 _549 ] [635])
            (reg:SF 21 xmm0 [orig:641 _555 ] [641]))) "CLDRAD.f":463 838 {*fop_sf_comm}
     (nil))
(insn 2239 2238 2240 190 (set (reg/f:DI 0 ax [1747])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2240 2239 2241 190 (set (reg:SF 21 xmm0 [orig:643 _557 ] [643])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1747])
                (const_int 4 [0x4])) [1 phys.pt1+0 S4 A32])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2241 2240 2242 190 (set (reg:SI 0 ax [1748])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":463 86 {*movsi_internal}
     (nil))
(insn 2242 2241 2243 190 (set (reg:DI 0 ax [orig:644 _558 ] [644])
        (sign_extend:DI (reg:SI 0 ax [1748]))) "CLDRAD.f":463 149 {*extendsidi2_rex64}
     (nil))
(insn 2243 2242 2244 190 (parallel [
            (set (reg:DI 1 dx [orig:645 _559 ] [645])
                (mult:DI (reg:DI 0 ax [orig:644 _558 ] [644])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":463 349 {*muldi3_1}
     (nil))
(insn 2244 2243 2245 190 (set (reg:SI 0 ax [1749])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":463 86 {*movsi_internal}
     (nil))
(insn 2245 2244 2246 190 (set (reg:DI 0 ax [orig:646 _560 ] [646])
        (sign_extend:DI (reg:SI 0 ax [1749]))) "CLDRAD.f":463 149 {*extendsidi2_rex64}
     (nil))
(insn 2246 2245 4623 190 (parallel [
            (set (reg:DI 0 ax [orig:647 _561 ] [647])
                (plus:DI (reg:DI 0 ax [orig:646 _560 ] [646])
                    (reg:DI 1 dx [orig:645 _559 ] [645])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":463 222 {*adddi_1}
     (nil))
(insn 4623 2246 2248 190 (set (reg:DI 1 dx [orig:648 _562 ] [648])
        (plus:DI (reg:DI 0 ax [orig:647 _561 ] [647])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":463 218 {*leadi}
     (nil))
(insn 2248 4623 2249 190 (set (reg:SF 21 xmm0 [orig:649 _563 ] [649])
        (plus:SF (reg:SF 21 xmm0 [orig:643 _557 ] [643])
            (reg:SF 22 xmm1 [orig:642 _556 ] [642]))) "CLDRAD.f":463 838 {*fop_sf_comm}
     (nil))
(insn 2249 2248 2250 190 (set (reg/f:DI 0 ax [1750])
        (symbol_ref:DI ("cldtp.4371") [flags 0x202]  <var_decl 0x7f20392d77e0 cldtp>)) "CLDRAD.f":463 85 {*movdi_internal}
     (nil))
(insn 2250 2249 2251 190 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:648 _562 ] [648])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1750])) [1 cldtp S4 A32])
        (reg:SF 21 xmm0 [orig:649 _563 ] [649])) "CLDRAD.f":463 131 {*movsf_internal}
     (nil))
(insn 2251 2250 2252 190 (set (reg:SI 0 ax [1751])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":464 86 {*movsi_internal}
     (nil))
(insn 2252 2251 2253 190 (set (reg:DI 0 ax [orig:650 _564 ] [650])
        (sign_extend:DI (reg:SI 0 ax [1751]))) "CLDRAD.f":464 149 {*extendsidi2_rex64}
     (nil))
(insn 2253 2252 2254 190 (parallel [
            (set (reg:DI 1 dx [orig:651 _565 ] [651])
                (mult:DI (reg:DI 0 ax [orig:650 _564 ] [650])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":464 349 {*muldi3_1}
     (nil))
(insn 2254 2253 2255 190 (set (reg:SI 0 ax [1752])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":464 86 {*movsi_internal}
     (nil))
(insn 2255 2254 2256 190 (set (reg:DI 0 ax [orig:652 _566 ] [652])
        (sign_extend:DI (reg:SI 0 ax [1752]))) "CLDRAD.f":464 149 {*extendsidi2_rex64}
     (nil))
(insn 2256 2255 4624 190 (parallel [
            (set (reg:DI 0 ax [orig:653 _567 ] [653])
                (plus:DI (reg:DI 0 ax [orig:652 _566 ] [652])
                    (reg:DI 1 dx [orig:651 _565 ] [651])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":464 222 {*adddi_1}
     (nil))
(insn 4624 2256 2258 190 (set (reg:DI 2 cx [orig:654 _568 ] [654])
        (plus:DI (reg:DI 0 ax [orig:653 _567 ] [653])
            (const_int 1096227 [0x10ba23]))) "CLDRAD.f":464 218 {*leadi}
     (nil))
(insn 2258 4624 2259 190 (set (reg:SI 0 ax [1753])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":464 86 {*movsi_internal}
     (nil))
(insn 2259 2258 2260 190 (set (reg:DI 0 ax [orig:655 _569 ] [655])
        (sign_extend:DI (reg:SI 0 ax [1753]))) "CLDRAD.f":464 149 {*extendsidi2_rex64}
     (nil))
(insn 2260 2259 2261 190 (parallel [
            (set (reg:DI 1 dx [orig:656 _570 ] [656])
                (mult:DI (reg:DI 0 ax [orig:655 _569 ] [655])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":464 349 {*muldi3_1}
     (nil))
(insn 2261 2260 2262 190 (set (reg:SI 0 ax [1754])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":464 86 {*movsi_internal}
     (nil))
(insn 2262 2261 2263 190 (set (reg:DI 0 ax [orig:657 _571 ] [657])
        (sign_extend:DI (reg:SI 0 ax [1754]))) "CLDRAD.f":464 149 {*extendsidi2_rex64}
     (nil))
(insn 2263 2262 4625 190 (parallel [
            (set (reg:DI 0 ax [orig:658 _572 ] [658])
                (plus:DI (reg:DI 0 ax [orig:657 _571 ] [657])
                    (reg:DI 1 dx [orig:656 _570 ] [656])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":464 222 {*adddi_1}
     (nil))
(insn 4625 2263 2265 190 (set (reg:DI 1 dx [orig:659 _573 ] [659])
        (plus:DI (reg:DI 0 ax [orig:658 _572 ] [658])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":464 218 {*leadi}
     (nil))
(insn 2265 4625 2266 190 (set (reg/f:DI 0 ax [1755])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":464 85 {*movdi_internal}
     (nil))
(insn 2266 2265 2267 190 (parallel [
            (set (reg:DI 2 cx [1756])
                (plus:DI (reg:DI 2 cx [orig:654 _568 ] [654])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":464 222 {*adddi_1}
     (nil))
(insn 2267 2266 2268 190 (set (reg:SF 21 xmm0 [orig:660 _574 ] [660])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1756])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1755])) [1 extra.zint S4 A32])) "CLDRAD.f":464 131 {*movsf_internal}
     (nil))
(insn 2268 2267 2269 190 (set (reg/f:DI 0 ax [1757])
        (symbol_ref:DI ("cldtz.4375") [flags 0x202]  <var_decl 0x7f20392d7900 cldtz>)) "CLDRAD.f":464 85 {*movdi_internal}
     (nil))
(insn 2269 2268 2270 190 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:659 _573 ] [659])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1757])) [1 cldtz S4 A32])
        (reg:SF 21 xmm0 [orig:660 _574 ] [660])) "CLDRAD.f":464 131 {*movsf_internal}
     (nil))
(insn 2270 2269 2271 190 (set (reg:SI 0 ax [1758])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":465 86 {*movsi_internal}
     (nil))
(insn 2271 2270 2272 190 (set (reg:DI 0 ax [orig:661 _575 ] [661])
        (sign_extend:DI (reg:SI 0 ax [1758]))) "CLDRAD.f":465 149 {*extendsidi2_rex64}
     (nil))
(insn 2272 2271 2273 190 (parallel [
            (set (reg:DI 1 dx [orig:662 _576 ] [662])
                (mult:DI (reg:DI 0 ax [orig:661 _575 ] [661])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":465 349 {*muldi3_1}
     (nil))
(insn 2273 2272 2274 190 (set (reg:SI 0 ax [1759])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":465 86 {*movsi_internal}
     (nil))
(insn 2274 2273 2275 190 (set (reg:DI 0 ax [orig:663 _577 ] [663])
        (sign_extend:DI (reg:SI 0 ax [1759]))) "CLDRAD.f":465 149 {*extendsidi2_rex64}
     (nil))
(insn 2275 2274 4626 190 (parallel [
            (set (reg:DI 0 ax [orig:664 _578 ] [664])
                (plus:DI (reg:DI 0 ax [orig:663 _577 ] [663])
                    (reg:DI 1 dx [orig:662 _576 ] [662])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":465 222 {*adddi_1}
     (nil))
(insn 4626 2275 2277 190 (set (reg:DI 2 cx [orig:665 _579 ] [665])
        (plus:DI (reg:DI 0 ax [orig:664 _578 ] [664])
            (const_int 1096227 [0x10ba23]))) "CLDRAD.f":465 218 {*leadi}
     (nil))
(insn 2277 4626 2278 190 (set (reg:SI 0 ax [1760])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":465 86 {*movsi_internal}
     (nil))
(insn 2278 2277 2279 190 (set (reg:DI 0 ax [orig:666 _580 ] [666])
        (sign_extend:DI (reg:SI 0 ax [1760]))) "CLDRAD.f":465 149 {*extendsidi2_rex64}
     (nil))
(insn 2279 2278 2280 190 (parallel [
            (set (reg:DI 1 dx [orig:667 _581 ] [667])
                (mult:DI (reg:DI 0 ax [orig:666 _580 ] [666])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":465 349 {*muldi3_1}
     (nil))
(insn 2280 2279 2281 190 (set (reg:SI 0 ax [1761])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":465 86 {*movsi_internal}
     (nil))
(insn 2281 2280 2282 190 (set (reg:DI 0 ax [orig:668 _582 ] [668])
        (sign_extend:DI (reg:SI 0 ax [1761]))) "CLDRAD.f":465 149 {*extendsidi2_rex64}
     (nil))
(insn 2282 2281 4627 190 (parallel [
            (set (reg:DI 0 ax [orig:669 _583 ] [669])
                (plus:DI (reg:DI 0 ax [orig:668 _582 ] [668])
                    (reg:DI 1 dx [orig:667 _581 ] [667])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":465 222 {*adddi_1}
     (nil))
(insn 4627 2282 2284 190 (set (reg:DI 1 dx [orig:670 _584 ] [670])
        (plus:DI (reg:DI 0 ax [orig:669 _583 ] [669])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":465 218 {*leadi}
     (nil))
(insn 2284 4627 2285 190 (set (reg/f:DI 0 ax [1762])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":465 85 {*movdi_internal}
     (nil))
(insn 2285 2284 2286 190 (parallel [
            (set (reg:DI 2 cx [1763])
                (plus:DI (reg:DI 2 cx [orig:665 _579 ] [665])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":465 222 {*adddi_1}
     (nil))
(insn 2286 2285 2287 190 (set (reg:SF 21 xmm0 [orig:671 _585 ] [671])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1763])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1762])) [1 vrbls.t S4 A32])) "CLDRAD.f":465 131 {*movsf_internal}
     (nil))
(insn 2287 2286 2288 190 (set (reg/f:DI 0 ax [1764])
        (symbol_ref:DI ("cldtt.4373") [flags 0x202]  <var_decl 0x7f20392d7870 cldtt>)) "CLDRAD.f":465 85 {*movdi_internal}
     (nil))
(insn 2288 2287 4225 190 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:670 _584 ] [670])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1764])) [1 cldtt S4 A32])
        (reg:SF 21 xmm0 [orig:671 _585 ] [671])) "CLDRAD.f":465 131 {*movsf_internal}
     (nil))
(jump_insn 4225 2288 4226 190 (set (pc)
        (label_ref 2459)) 683 {jump}
     (nil)
 -> 2459)
;;  succ:       192 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 4226 4225 2291)
;; basic block 191, loop depth 0, maybe hot
;;  prev block 190, next block 192, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       188
;;              189
;; bb 191 artificial_defs: { }
;; bb 191 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 2291 4226 2292 191 105 (nil) [2 uses])
(note 2292 2291 2293 191 [bb 191] NOTE_INSN_BASIC_BLOCK)
(insn 2293 2292 2294 191 (set (reg:SF 21 xmm0 [1765])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 ctop+0 S4 A32])) "CLDRAD.f":467 131 {*movsf_internal}
     (nil))
(insn 2294 2293 2295 191 (set (reg:SI 0 ax [1766])
        (fix:SI (reg:SF 21 xmm0 [1765]))) "CLDRAD.f":467 174 {fix_truncsfsi_sse}
     (nil))
(insn 2295 2294 2296 191 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])
        (reg:SI 0 ax [1766])) "CLDRAD.f":467 86 {*movsi_internal}
     (nil))
(insn 2296 2295 2297 191 (set (reg:SI 0 ax [1767])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":468 86 {*movsi_internal}
     (nil))
(insn 2297 2296 4610 191 (set (reg:DI 0 ax [orig:672 _586 ] [672])
        (sign_extend:DI (reg:SI 0 ax [1767]))) "CLDRAD.f":468 149 {*extendsidi2_rex64}
     (nil))
(insn 4610 2297 2299 191 (set (reg:DI 1 dx [orig:673 _587 ] [673])
        (plus:DI (reg:DI 0 ax [orig:672 _586 ] [672])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":468 218 {*leadi}
     (nil))
(insn 2299 4610 2300 191 (set (reg/f:DI 0 ax [1768])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":468 85 {*movdi_internal}
     (nil))
(insn 2300 2299 2301 191 (parallel [
            (set (reg:DI 1 dx [1769])
                (plus:DI (reg:DI 1 dx [orig:673 _587 ] [673])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":468 222 {*adddi_1}
     (nil))
(insn 2301 2300 2302 191 (set (reg:SF 22 xmm1 [orig:674 _588 ] [674])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1769])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1768])) [1 phys.aeta1 S4 A32])) "CLDRAD.f":468 131 {*movsf_internal}
     (nil))
(insn 2302 2301 2303 191 (set (reg:SI 0 ax [1770])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":468 86 {*movsi_internal}
     (nil))
(insn 2303 2302 2304 191 (set (reg:DI 0 ax [orig:675 _589 ] [675])
        (sign_extend:DI (reg:SI 0 ax [1770]))) "CLDRAD.f":468 149 {*extendsidi2_rex64}
     (nil))
(insn 2304 2303 2305 191 (parallel [
            (set (reg:DI 1 dx [orig:676 _590 ] [676])
                (mult:DI (reg:DI 0 ax [orig:675 _589 ] [675])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":468 349 {*muldi3_1}
     (nil))
(insn 2305 2304 2306 191 (set (reg:SI 0 ax [1771])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":468 86 {*movsi_internal}
     (nil))
(insn 2306 2305 2307 191 (set (reg:DI 0 ax [orig:677 _591 ] [677])
        (sign_extend:DI (reg:SI 0 ax [1771]))) "CLDRAD.f":468 149 {*extendsidi2_rex64}
     (nil))
(insn 2307 2306 4611 191 (parallel [
            (set (reg:DI 0 ax [orig:678 _592 ] [678])
                (plus:DI (reg:DI 0 ax [orig:677 _591 ] [677])
                    (reg:DI 1 dx [orig:676 _590 ] [676])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":468 222 {*adddi_1}
     (nil))
(insn 4611 2307 2309 191 (set (reg:DI 1 dx [orig:679 _593 ] [679])
        (plus:DI (reg:DI 0 ax [orig:678 _592 ] [678])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":468 218 {*leadi}
     (nil))
(insn 2309 4611 2310 191 (set (reg/f:DI 0 ax [1772])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":468 85 {*movdi_internal}
     (nil))
(insn 2310 2309 2311 191 (parallel [
            (set (reg:DI 1 dx [1773])
                (plus:DI (reg:DI 1 dx [orig:679 _593 ] [679])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":468 222 {*adddi_1}
     (nil))
(insn 2311 2310 2312 191 (set (reg:SF 21 xmm0 [orig:680 _594 ] [680])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1773])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1772])) [1 extra.pdsl S4 A32])) "CLDRAD.f":468 131 {*movsf_internal}
     (nil))
(insn 2312 2311 2313 191 (set (reg:SF 22 xmm1 [orig:681 _595 ] [681])
        (mult:SF (reg:SF 22 xmm1 [orig:674 _588 ] [674])
            (reg:SF 21 xmm0 [orig:680 _594 ] [680]))) "CLDRAD.f":468 838 {*fop_sf_comm}
     (nil))
(insn 2313 2312 2314 191 (set (reg/f:DI 0 ax [1774])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2314 2313 2315 191 (set (reg:SF 21 xmm0 [orig:682 _596 ] [682])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1774])
                (const_int 4 [0x4])) [1 phys.pt1+0 S4 A32])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2315 2314 2316 191 (set (reg:SI 0 ax [1775])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":468 86 {*movsi_internal}
     (nil))
(insn 2316 2315 2317 191 (set (reg:DI 0 ax [orig:683 _597 ] [683])
        (sign_extend:DI (reg:SI 0 ax [1775]))) "CLDRAD.f":468 149 {*extendsidi2_rex64}
     (nil))
(insn 2317 2316 2318 191 (parallel [
            (set (reg:DI 1 dx [orig:684 _598 ] [684])
                (mult:DI (reg:DI 0 ax [orig:683 _597 ] [683])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":468 349 {*muldi3_1}
     (nil))
(insn 2318 2317 2319 191 (set (reg:SI 0 ax [1776])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":468 86 {*movsi_internal}
     (nil))
(insn 2319 2318 2320 191 (set (reg:DI 0 ax [orig:685 _599 ] [685])
        (sign_extend:DI (reg:SI 0 ax [1776]))) "CLDRAD.f":468 149 {*extendsidi2_rex64}
     (nil))
(insn 2320 2319 4612 191 (parallel [
            (set (reg:DI 0 ax [orig:686 _600 ] [686])
                (plus:DI (reg:DI 0 ax [orig:685 _599 ] [685])
                    (reg:DI 1 dx [orig:684 _598 ] [684])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":468 222 {*adddi_1}
     (nil))
(insn 4612 2320 2322 191 (set (reg:DI 1 dx [orig:687 _601 ] [687])
        (plus:DI (reg:DI 0 ax [orig:686 _600 ] [686])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":468 218 {*leadi}
     (nil))
(insn 2322 4612 2323 191 (set (reg:SF 21 xmm0 [orig:688 _602 ] [688])
        (plus:SF (reg:SF 21 xmm0 [orig:682 _596 ] [682])
            (reg:SF 22 xmm1 [orig:681 _595 ] [681]))) "CLDRAD.f":468 838 {*fop_sf_comm}
     (nil))
(insn 2323 2322 2324 191 (set (reg/f:DI 0 ax [1777])
        (symbol_ref:DI ("cldtp.4371") [flags 0x202]  <var_decl 0x7f20392d77e0 cldtp>)) "CLDRAD.f":468 85 {*movdi_internal}
     (nil))
(insn 2324 2323 2325 191 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:687 _601 ] [687])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1777])) [1 cldtp S4 A32])
        (reg:SF 21 xmm0 [orig:688 _602 ] [688])) "CLDRAD.f":468 131 {*movsf_internal}
     (nil))
(insn 2325 2324 2326 191 (set (reg:SI 0 ax [1778])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2326 2325 2327 191 (parallel [
            (set (reg:SI 0 ax [orig:689 _603 ] [689])
                (plus:SI (reg:SI 0 ax [1778])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2327 2326 2328 191 (set (reg:DI 0 ax [orig:690 _604 ] [690])
        (sign_extend:DI (reg:SI 0 ax [orig:689 _603 ] [689]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2328 2327 2329 191 (parallel [
            (set (reg:DI 1 dx [orig:691 _605 ] [691])
                (mult:DI (reg:DI 0 ax [orig:690 _604 ] [690])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2329 2328 2330 191 (set (reg:SI 0 ax [1779])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2330 2329 2331 191 (set (reg:DI 0 ax [orig:692 _606 ] [692])
        (sign_extend:DI (reg:SI 0 ax [1779]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2331 2330 2332 191 (parallel [
            (set (reg:DI 0 ax [orig:693 _607 ] [693])
                (mult:DI (reg:DI 0 ax [orig:692 _606 ] [692])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2332 2331 2333 191 (parallel [
            (set (reg:DI 1 dx [orig:694 _608 ] [694])
                (plus:DI (reg:DI 1 dx [orig:691 _605 ] [691])
                    (reg:DI 0 ax [orig:693 _607 ] [693])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2333 2332 2334 191 (set (reg:SI 0 ax [1780])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2334 2333 2335 191 (set (reg:DI 0 ax [orig:695 _609 ] [695])
        (sign_extend:DI (reg:SI 0 ax [1780]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2335 2334 4613 191 (parallel [
            (set (reg:DI 0 ax [orig:696 _610 ] [696])
                (plus:DI (reg:DI 0 ax [orig:695 _609 ] [695])
                    (reg:DI 1 dx [orig:694 _608 ] [694])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 4613 2335 2337 191 (set (reg:DI 1 dx [orig:697 _611 ] [697])
        (plus:DI (reg:DI 0 ax [orig:696 _610 ] [696])
            (const_int -29751 [0xffffffffffff8bc9]))) "CLDRAD.f":472 218 {*leadi}
     (nil))
(insn 2337 4613 2338 191 (set (reg/f:DI 0 ax [1781])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f20392c13f0 masks>)) "CLDRAD.f":472 85 {*movdi_internal}
     (nil))
(insn 2338 2337 2339 191 (parallel [
            (set (reg:DI 1 dx [1782])
                (plus:DI (reg:DI 1 dx [orig:697 _611 ] [697])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2339 2338 2340 191 (set (reg:SF 22 xmm1 [orig:698 _612 ] [698])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1782])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1781])) [1 masks.htm S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 2340 2339 2341 191 (set (reg:SI 0 ax [1783])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2341 2340 2342 191 (parallel [
            (set (reg:SI 0 ax [orig:699 _613 ] [699])
                (plus:SI (reg:SI 0 ax [1783])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2342 2341 2343 191 (set (reg:DI 0 ax [orig:700 _614 ] [700])
        (sign_extend:DI (reg:SI 0 ax [orig:699 _613 ] [699]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2343 2342 2344 191 (parallel [
            (set (reg:DI 1 dx [orig:701 _615 ] [701])
                (mult:DI (reg:DI 0 ax [orig:700 _614 ] [700])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2344 2343 2345 191 (set (reg:SI 0 ax [1784])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2345 2344 2346 191 (set (reg:DI 0 ax [orig:702 _616 ] [702])
        (sign_extend:DI (reg:SI 0 ax [1784]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2346 2345 2347 191 (parallel [
            (set (reg:DI 0 ax [orig:703 _617 ] [703])
                (mult:DI (reg:DI 0 ax [orig:702 _616 ] [702])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2347 2346 2348 191 (parallel [
            (set (reg:DI 1 dx [orig:704 _618 ] [704])
                (plus:DI (reg:DI 1 dx [orig:701 _615 ] [701])
                    (reg:DI 0 ax [orig:703 _617 ] [703])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2348 2347 2349 191 (set (reg:SI 0 ax [1785])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2349 2348 2350 191 (set (reg:DI 0 ax [orig:705 _619 ] [705])
        (sign_extend:DI (reg:SI 0 ax [1785]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2350 2349 4614 191 (parallel [
            (set (reg:DI 0 ax [orig:706 _620 ] [706])
                (plus:DI (reg:DI 0 ax [orig:705 _619 ] [705])
                    (reg:DI 1 dx [orig:704 _618 ] [704])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 4614 2350 2352 191 (set (reg:DI 1 dx [orig:707 _621 ] [707])
        (plus:DI (reg:DI 0 ax [orig:706 _620 ] [706])
            (const_int -29751 [0xffffffffffff8bc9]))) "CLDRAD.f":472 218 {*leadi}
     (nil))
(insn 2352 4614 2353 191 (set (reg/f:DI 0 ax [1786])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":472 85 {*movdi_internal}
     (nil))
(insn 2353 2352 2354 191 (parallel [
            (set (reg:DI 1 dx [1787])
                (plus:DI (reg:DI 1 dx [orig:707 _621 ] [707])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2354 2353 2355 191 (set (reg:SF 21 xmm0 [orig:708 _622 ] [708])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1787])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1786])) [1 vrbls.t S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 2355 2354 2356 191 (set (reg:SF 21 xmm0 [orig:709 _623 ] [709])
        (mult:SF (reg:SF 21 xmm0 [orig:708 _622 ] [708])
            (reg:SF 22 xmm1 [orig:698 _612 ] [698]))) "CLDRAD.f":472 838 {*fop_sf_comm}
     (nil))
(insn 2356 2355 2357 191 (set (reg:SI 0 ax [1788])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2357 2356 2358 191 (parallel [
            (set (reg:SI 0 ax [orig:710 _624 ] [710])
                (plus:SI (reg:SI 0 ax [1788])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2358 2357 2359 191 (set (reg:DI 0 ax [orig:711 _625 ] [711])
        (sign_extend:DI (reg:SI 0 ax [orig:710 _624 ] [710]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2359 2358 2360 191 (parallel [
            (set (reg:DI 1 dx [orig:712 _626 ] [712])
                (mult:DI (reg:DI 0 ax [orig:711 _625 ] [711])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2360 2359 2361 191 (set (reg:SI 0 ax [1789])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2361 2360 2362 191 (set (reg:DI 0 ax [orig:713 _627 ] [713])
        (sign_extend:DI (reg:SI 0 ax [1789]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2362 2361 2363 191 (parallel [
            (set (reg:DI 0 ax [orig:714 _628 ] [714])
                (mult:DI (reg:DI 0 ax [orig:713 _627 ] [713])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2363 2362 2364 191 (parallel [
            (set (reg:DI 1 dx [orig:715 _629 ] [715])
                (plus:DI (reg:DI 1 dx [orig:712 _626 ] [712])
                    (reg:DI 0 ax [orig:714 _628 ] [714])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2364 2363 2365 191 (set (reg:SI 0 ax [1790])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2365 2364 2366 191 (set (reg:DI 0 ax [orig:716 _630 ] [716])
        (sign_extend:DI (reg:SI 0 ax [1790]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2366 2365 4615 191 (parallel [
            (set (reg:DI 0 ax [orig:717 _631 ] [717])
                (plus:DI (reg:DI 0 ax [orig:716 _630 ] [716])
                    (reg:DI 1 dx [orig:715 _629 ] [715])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 4615 2366 2368 191 (set (reg:DI 1 dx [orig:718 _632 ] [718])
        (plus:DI (reg:DI 0 ax [orig:717 _631 ] [717])
            (const_int -29751 [0xffffffffffff8bc9]))) "CLDRAD.f":472 218 {*leadi}
     (nil))
(insn 2368 4615 2369 191 (set (reg/f:DI 0 ax [1791])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":472 85 {*movdi_internal}
     (nil))
(insn 2369 2368 2370 191 (parallel [
            (set (reg:DI 1 dx [1792])
                (plus:DI (reg:DI 1 dx [orig:718 _632 ] [718])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2370 2369 2371 191 (set (reg:SF 23 xmm2 [orig:719 _633 ] [719])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1792])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1791])) [1 vrbls.q S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 2371 2370 2372 191 (set (reg:SF 22 xmm1 [1793])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 2372 2371 2373 191 (set (reg:SF 23 xmm2 [orig:720 _634 ] [720])
        (mult:SF (reg:SF 23 xmm2 [orig:719 _633 ] [719])
            (reg:SF 22 xmm1 [1793]))) "CLDRAD.f":472 838 {*fop_sf_comm}
     (nil))
(insn 2373 2372 2374 191 (set (reg:SF 22 xmm1 [1794])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 2374 2373 2376 191 (set (reg:SF 22 xmm1 [orig:721 _635 ] [721])
        (plus:SF (reg:SF 22 xmm1 [1794])
            (reg:SF 23 xmm2 [orig:720 _634 ] [720]))) "CLDRAD.f":472 838 {*fop_sf_comm}
     (nil))
(insn 2376 2374 2377 191 (set (reg:SF 22 xmm1 [orig:723 _637 ] [723])
        (mult:SF (reg:SF 22 xmm1 [orig:722 _636 ] [722])
            (reg:SF 21 xmm0 [orig:709 _623 ] [709]))) "CLDRAD.f":472 838 {*fop_sf_comm}
     (nil))
(insn 2377 2376 2378 191 (set (reg:SF 21 xmm0 [1795])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC21") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.92897968292236328125e+1 [0x0.ea5181p+5])
        (nil)))
(insn 2378 2377 4486 191 (set (reg:SF 22 xmm1 [orig:723 _637 ] [723])
        (mult:SF (reg:SF 22 xmm1 [orig:723 _637 ] [723])
            (reg:SF 21 xmm0 [1795]))) "CLDRAD.f":472 838 {*fop_sf_comm}
     (nil))
(insn 4486 2378 4520 191 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [22 %sfp+-164 S4 A32])
        (reg:SF 22 xmm1 [orig:723 _637 ] [723])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(note 4520 4486 2379 191 NOTE_INSN_DELETED)
(insn 2379 4520 2380 191 (set (reg:SI 0 ax [1796])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2380 2379 2381 191 (parallel [
            (set (reg:SI 0 ax [orig:725 _639 ] [725])
                (plus:SI (reg:SI 0 ax [1796])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2381 2380 2382 191 (set (reg:DI 0 ax [orig:726 _640 ] [726])
        (sign_extend:DI (reg:SI 0 ax [orig:725 _639 ] [725]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2382 2381 2383 191 (parallel [
            (set (reg:DI 1 dx [orig:727 _641 ] [727])
                (mult:DI (reg:DI 0 ax [orig:726 _640 ] [726])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2383 2382 2384 191 (set (reg:SI 0 ax [1797])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2384 2383 2385 191 (set (reg:DI 0 ax [orig:728 _642 ] [728])
        (sign_extend:DI (reg:SI 0 ax [1797]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2385 2384 2386 191 (parallel [
            (set (reg:DI 0 ax [orig:729 _643 ] [729])
                (mult:DI (reg:DI 0 ax [orig:728 _642 ] [728])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2386 2385 2387 191 (parallel [
            (set (reg:DI 1 dx [orig:730 _644 ] [730])
                (plus:DI (reg:DI 1 dx [orig:727 _641 ] [727])
                    (reg:DI 0 ax [orig:729 _643 ] [729])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2387 2386 2388 191 (set (reg:SI 0 ax [1798])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2388 2387 2389 191 (set (reg:DI 0 ax [orig:731 _645 ] [731])
        (sign_extend:DI (reg:SI 0 ax [1798]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2389 2388 4616 191 (parallel [
            (set (reg:DI 0 ax [orig:732 _646 ] [732])
                (plus:DI (reg:DI 0 ax [orig:731 _645 ] [731])
                    (reg:DI 1 dx [orig:730 _644 ] [730])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 4616 2389 2391 191 (set (reg:DI 1 dx [orig:733 _647 ] [733])
        (plus:DI (reg:DI 0 ax [orig:732 _646 ] [732])
            (const_int -29751 [0xffffffffffff8bc9]))) "CLDRAD.f":472 218 {*leadi}
     (nil))
(insn 2391 4616 2392 191 (set (reg/f:DI 0 ax [1799])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":472 85 {*movdi_internal}
     (nil))
(insn 2392 2391 2394 191 (set (reg:SF 21 xmm0 [orig:734 _648 ] [734])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:733 _647 ] [733])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1799])) [1 extra.pint S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(call_insn/u 2394 2392 2395 191 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f2039116900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CLDRAD.f":472 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 2395 2394 4519 191 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [22 %sfp+-168 S4 A32])
        (reg:SF 21 xmm0)) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(note 4519 2395 2396 191 NOTE_INSN_DELETED)
(insn 2396 4519 2397 191 (set (reg:SI 0 ax [1800])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2397 2396 2398 191 (set (reg:DI 0 ax [orig:736 _650 ] [736])
        (sign_extend:DI (reg:SI 0 ax [1800]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2398 2397 2399 191 (parallel [
            (set (reg:DI 1 dx [orig:737 _651 ] [737])
                (mult:DI (reg:DI 0 ax [orig:736 _650 ] [736])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2399 2398 2400 191 (set (reg:SI 0 ax [1801])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2400 2399 2401 191 (set (reg:DI 0 ax [orig:738 _652 ] [738])
        (sign_extend:DI (reg:SI 0 ax [1801]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2401 2400 4617 191 (parallel [
            (set (reg:DI 0 ax [orig:739 _653 ] [739])
                (plus:DI (reg:DI 0 ax [orig:738 _652 ] [738])
                    (reg:DI 1 dx [orig:737 _651 ] [737])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 4617 2401 2403 191 (set (reg:DI 1 dx [orig:740 _654 ] [740])
        (plus:DI (reg:DI 0 ax [orig:739 _653 ] [739])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":472 218 {*leadi}
     (nil))
(insn 2403 4617 2404 191 (set (reg/f:DI 0 ax [1802])
        (symbol_ref:DI ("cldtp.4371") [flags 0x202]  <var_decl 0x7f20392d77e0 cldtp>)) "CLDRAD.f":472 85 {*movdi_internal}
     (nil))
(insn 2404 2403 2406 191 (set (reg:SF 21 xmm0 [orig:741 _655 ] [741])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:740 _654 ] [740])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1802])) [1 cldtp S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(call_insn/u 2406 2404 4487 191 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f2039116900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CLDRAD.f":472 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 4487 2406 2408 191 (set (reg:SF 25 xmm4 [orig:735 _649 ] [735])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [22 %sfp+-168 S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 2408 4487 4488 191 (set (reg:SF 25 xmm4 [orig:735 _649 ] [735])
        (minus:SF (reg:SF 25 xmm4 [orig:735 _649 ] [735])
            (reg:SF 21 xmm0 [orig:742 _656 ] [742]))) "CLDRAD.f":472 841 {*fop_sf_1}
     (nil))
(insn 4488 2408 4489 191 (set (reg:SF 21 xmm0 [orig:743 _657 ] [743])
        (reg:SF 25 xmm4 [orig:735 _649 ] [735])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 4489 4488 2410 191 (set (reg:SF 22 xmm1 [orig:724 _638 ] [724])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -196 [0xffffffffffffff3c])) [22 %sfp+-164 S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 2410 4489 2411 191 (set (reg:SF 22 xmm1 [orig:724 _638 ] [724])
        (mult:SF (reg:SF 22 xmm1 [orig:724 _638 ] [724])
            (reg:SF 21 xmm0 [orig:744 _658 ] [744]))) "CLDRAD.f":472 838 {*fop_sf_comm}
     (nil))
(insn 2411 2410 2412 191 (set (reg:SI 0 ax [1803])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2412 2411 2413 191 (parallel [
            (set (reg:SI 0 ax [orig:746 _660 ] [746])
                (plus:SI (reg:SI 0 ax [1803])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -108 [0xffffffffffffff94])) [2 lev+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 2413 2412 2414 191 (set (reg:DI 0 ax [orig:747 _661 ] [747])
        (sign_extend:DI (reg:SI 0 ax [orig:746 _660 ] [746]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2414 2413 2415 191 (parallel [
            (set (reg:DI 1 dx [orig:748 _662 ] [748])
                (mult:DI (reg:DI 0 ax [orig:747 _661 ] [747])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2415 2414 2416 191 (set (reg:SI 0 ax [1804])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2416 2415 2417 191 (set (reg:DI 0 ax [orig:749 _663 ] [749])
        (sign_extend:DI (reg:SI 0 ax [1804]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2417 2416 2418 191 (parallel [
            (set (reg:DI 0 ax [orig:750 _664 ] [750])
                (mult:DI (reg:DI 0 ax [orig:749 _663 ] [749])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2418 2417 2419 191 (parallel [
            (set (reg:DI 1 dx [orig:751 _665 ] [751])
                (plus:DI (reg:DI 1 dx [orig:748 _662 ] [748])
                    (reg:DI 0 ax [orig:750 _664 ] [750])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2419 2418 2420 191 (set (reg:SI 0 ax [1805])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2420 2419 2421 191 (set (reg:DI 0 ax [orig:752 _666 ] [752])
        (sign_extend:DI (reg:SI 0 ax [1805]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2421 2420 4618 191 (parallel [
            (set (reg:DI 0 ax [orig:753 _667 ] [753])
                (plus:DI (reg:DI 0 ax [orig:752 _666 ] [752])
                    (reg:DI 1 dx [orig:751 _665 ] [751])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 4618 2421 2423 191 (set (reg:DI 1 dx [orig:754 _668 ] [754])
        (plus:DI (reg:DI 0 ax [orig:753 _667 ] [753])
            (const_int -29751 [0xffffffffffff8bc9]))) "CLDRAD.f":472 218 {*leadi}
     (nil))
(insn 2423 4618 2424 191 (set (reg/f:DI 0 ax [1806])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f20392afe10 extra>)) "CLDRAD.f":472 85 {*movdi_internal}
     (nil))
(insn 2424 2423 2425 191 (parallel [
            (set (reg:DI 1 dx [1807])
                (plus:DI (reg:DI 1 dx [orig:754 _668 ] [754])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 2425 2424 2426 191 (set (reg:SF 21 xmm0 [orig:755 _669 ] [755])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1807])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1806])) [1 extra.zint S4 A32])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 2426 2425 2427 191 (set (reg:SI 0 ax [1808])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2427 2426 2428 191 (set (reg:DI 0 ax [orig:756 _670 ] [756])
        (sign_extend:DI (reg:SI 0 ax [1808]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2428 2427 2429 191 (parallel [
            (set (reg:DI 1 dx [orig:757 _671 ] [757])
                (mult:DI (reg:DI 0 ax [orig:756 _670 ] [756])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 349 {*muldi3_1}
     (nil))
(insn 2429 2428 2430 191 (set (reg:SI 0 ax [1809])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":472 86 {*movsi_internal}
     (nil))
(insn 2430 2429 2431 191 (set (reg:DI 0 ax [orig:758 _672 ] [758])
        (sign_extend:DI (reg:SI 0 ax [1809]))) "CLDRAD.f":472 149 {*extendsidi2_rex64}
     (nil))
(insn 2431 2430 4619 191 (parallel [
            (set (reg:DI 0 ax [orig:759 _673 ] [759])
                (plus:DI (reg:DI 0 ax [orig:758 _672 ] [758])
                    (reg:DI 1 dx [orig:757 _671 ] [757])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":472 222 {*adddi_1}
     (nil))
(insn 4619 2431 2433 191 (set (reg:DI 1 dx [orig:760 _674 ] [760])
        (plus:DI (reg:DI 0 ax [orig:759 _673 ] [759])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":472 218 {*leadi}
     (nil))
(insn 2433 4619 2434 191 (set (reg:SF 21 xmm0 [orig:761 _675 ] [761])
        (plus:SF (reg:SF 21 xmm0 [orig:755 _669 ] [755])
            (reg:SF 22 xmm1 [orig:745 _659 ] [745]))) "CLDRAD.f":472 838 {*fop_sf_comm}
     (nil))
(insn 2434 2433 2435 191 (set (reg/f:DI 0 ax [1810])
        (symbol_ref:DI ("cldtz.4375") [flags 0x202]  <var_decl 0x7f20392d7900 cldtz>)) "CLDRAD.f":472 85 {*movdi_internal}
     (nil))
(insn 2435 2434 2436 191 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:760 _674 ] [760])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1810])) [1 cldtz S4 A32])
        (reg:SF 21 xmm0 [orig:761 _675 ] [761])) "CLDRAD.f":472 131 {*movsf_internal}
     (nil))
(insn 2436 2435 2437 191 (set (reg:SI 0 ax [1811])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [2 lev+0 S4 A32])) "CLDRAD.f":473 86 {*movsi_internal}
     (nil))
(insn 2437 2436 2438 191 (set (reg:DI 0 ax [orig:762 _676 ] [762])
        (sign_extend:DI (reg:SI 0 ax [1811]))) "CLDRAD.f":473 149 {*extendsidi2_rex64}
     (nil))
(insn 2438 2437 2439 191 (parallel [
            (set (reg:DI 1 dx [orig:763 _677 ] [763])
                (mult:DI (reg:DI 0 ax [orig:762 _676 ] [762])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 349 {*muldi3_1}
     (nil))
(insn 2439 2438 2440 191 (set (reg:SI 0 ax [1812])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":473 86 {*movsi_internal}
     (nil))
(insn 2440 2439 2441 191 (set (reg:DI 0 ax [orig:764 _678 ] [764])
        (sign_extend:DI (reg:SI 0 ax [1812]))) "CLDRAD.f":473 149 {*extendsidi2_rex64}
     (nil))
(insn 2441 2440 2442 191 (parallel [
            (set (reg:DI 0 ax [orig:765 _679 ] [765])
                (mult:DI (reg:DI 0 ax [orig:764 _678 ] [764])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 349 {*muldi3_1}
     (nil))
(insn 2442 2441 2443 191 (parallel [
            (set (reg:DI 1 dx [orig:766 _680 ] [766])
                (plus:DI (reg:DI 1 dx [orig:763 _677 ] [763])
                    (reg:DI 0 ax [orig:765 _679 ] [765])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 222 {*adddi_1}
     (nil))
(insn 2443 2442 2444 191 (set (reg:SI 0 ax [1813])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":473 86 {*movsi_internal}
     (nil))
(insn 2444 2443 2445 191 (set (reg:DI 0 ax [orig:767 _681 ] [767])
        (sign_extend:DI (reg:SI 0 ax [1813]))) "CLDRAD.f":473 149 {*extendsidi2_rex64}
     (nil))
(insn 2445 2444 4620 191 (parallel [
            (set (reg:DI 0 ax [orig:768 _682 ] [768])
                (plus:DI (reg:DI 0 ax [orig:767 _681 ] [767])
                    (reg:DI 1 dx [orig:766 _680 ] [766])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 222 {*adddi_1}
     (nil))
(insn 4620 2445 2447 191 (set (reg:DI 2 cx [orig:769 _683 ] [769])
        (plus:DI (reg:DI 0 ax [orig:768 _682 ] [768])
            (const_int -29751 [0xffffffffffff8bc9]))) "CLDRAD.f":473 218 {*leadi}
     (nil))
(insn 2447 4620 2448 191 (set (reg:SI 0 ax [1814])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":473 86 {*movsi_internal}
     (nil))
(insn 2448 2447 2449 191 (set (reg:DI 0 ax [orig:770 _684 ] [770])
        (sign_extend:DI (reg:SI 0 ax [1814]))) "CLDRAD.f":473 149 {*extendsidi2_rex64}
     (nil))
(insn 2449 2448 2450 191 (parallel [
            (set (reg:DI 1 dx [orig:771 _685 ] [771])
                (mult:DI (reg:DI 0 ax [orig:770 _684 ] [770])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 349 {*muldi3_1}
     (nil))
(insn 2450 2449 2451 191 (set (reg:SI 0 ax [1815])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":473 86 {*movsi_internal}
     (nil))
(insn 2451 2450 2452 191 (set (reg:DI 0 ax [orig:772 _686 ] [772])
        (sign_extend:DI (reg:SI 0 ax [1815]))) "CLDRAD.f":473 149 {*extendsidi2_rex64}
     (nil))
(insn 2452 2451 4621 191 (parallel [
            (set (reg:DI 0 ax [orig:773 _687 ] [773])
                (plus:DI (reg:DI 0 ax [orig:772 _686 ] [772])
                    (reg:DI 1 dx [orig:771 _685 ] [771])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 222 {*adddi_1}
     (nil))
(insn 4621 2452 2454 191 (set (reg:DI 1 dx [orig:774 _688 ] [774])
        (plus:DI (reg:DI 0 ax [orig:773 _687 ] [773])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":473 218 {*leadi}
     (nil))
(insn 2454 4621 2455 191 (set (reg/f:DI 0 ax [1816])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":473 85 {*movdi_internal}
     (nil))
(insn 2455 2454 2456 191 (parallel [
            (set (reg:DI 2 cx [1817])
                (plus:DI (reg:DI 2 cx [orig:769 _683 ] [769])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":473 222 {*adddi_1}
     (nil))
(insn 2456 2455 2457 191 (set (reg:SF 21 xmm0 [orig:775 _689 ] [775])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1817])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1816])) [1 vrbls.t S4 A32])) "CLDRAD.f":473 131 {*movsf_internal}
     (nil))
(insn 2457 2456 2458 191 (set (reg/f:DI 0 ax [1818])
        (symbol_ref:DI ("cldtt.4373") [flags 0x202]  <var_decl 0x7f20392d7870 cldtt>)) "CLDRAD.f":473 85 {*movdi_internal}
     (nil))
(insn 2458 2457 2459 191 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:774 _688 ] [774])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1818])) [1 cldtt S4 A32])
        (reg:SF 21 xmm0 [orig:775 _689 ] [775])) "CLDRAD.f":473 131 {*movsf_internal}
     (nil))
;;  succ:       192 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

;; basic block 192, loop depth 0, maybe hot
;;  prev block 191, next block 193, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       191 (FALLTHRU)
;;              187 [always] 
;;              190 [always] 
;; bb 192 artificial_defs: { }
;; bb 192 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 2459 2458 2460 192 104 (nil) [2 uses])
(note 2460 2459 2461 192 [bb 192] NOTE_INSN_BASIC_BLOCK)
(insn 2461 2460 4227 192 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":444 221 {*addsi_1}
     (nil))
(jump_insn 4227 2461 4228 192 (set (pc)
        (label_ref 2462)) "CLDRAD.f":444 683 {jump}
     (nil)
 -> 2462)
;;  succ:       175 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 4228 4227 4379)
;; basic block 193, loop depth 0, maybe hot
;;  prev block 192, next block 195, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       175
;; bb 193 artificial_defs: { }
;; bb 193 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4379 4228 4378 193 254 (nil) [1 uses])
(note 4378 4379 4380 193 [bb 193] NOTE_INSN_BASIC_BLOCK)
(insn 4380 4378 2467 193 (const_int 0 [0]) "CLDRAD.f":457 718 {nop}
     (nil))
(insn 2467 4380 4229 193 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":443 221 {*addsi_1}
     (nil))
(jump_insn 4229 2467 4230 193 (set (pc)
        (label_ref 2468)) "CLDRAD.f":443 683 {jump}
     (nil)
 -> 2468)
;;  succ:       173 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame]

(barrier 4230 4229 4376)
;; basic block 195, loop depth 0, maybe hot
;;  prev block 193, next block 197, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       173
;; bb 195 artificial_defs: { }
;; bb 195 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4376 4230 4375 195 253 (nil) [1 uses])
(note 4375 4376 4377 195 [bb 195] NOTE_INSN_BASIC_BLOCK)
(insn 4377 4375 2473 195 (const_int 0 [0]) "CLDRAD.f":444 718 {nop}
     (nil))
(insn 2473 4377 2474 195 (set (reg:SI 0 ax [orig:776 _690 ] [776])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 608 [0x260]))) [2 rqstfld.iget+592 S4 A128])) "CLDRAD.f":478 86 {*movsi_internal}
     (nil))
(insn 2474 2473 2475 195 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:776 _690 ] [776])
            (const_int 0 [0]))) "CLDRAD.f":478 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2475 2474 2476 195 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2520)
            (pc))) "CLDRAD.f":478 682 {*jcc}
     (nil)
 -> 2520)
;;  succ:       197 (FALLTHRU)
;;              198
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 197, loop depth 0, maybe hot
;;  prev block 195, next block 198, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       195 (FALLTHRU)
;; bb 197 artificial_defs: { }
;; bb 197 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 2476 2475 2477 197 [bb 197] NOTE_INSN_BASIC_BLOCK)
(insn 2477 2476 2478 197 (set (reg:DI 1 dx [1819])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2478 2477 2479 197 (set (reg:DI 0 ax [1820])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2479 2478 2480 197 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":479 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2480 2479 2481 197 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":479 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2481 2480 2482 197 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1819])) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2482 2481 2483 197 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1820])) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2483 2482 2484 197 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2484 2483 2485 197 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cldtp.4371") [flags 0x202]  <var_decl 0x7f20392d77e0 cldtp>)) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2485 2484 2486 197 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2486 2485 2487 197 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC23") [flags 0x2]  <var_decl 0x7f2038fb4900 *.LC23>)) "CLDRAD.f":479 85 {*movdi_internal}
     (nil))
(insn 2487 2486 2488 197 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":479 88 {*movqi_internal}
     (nil))
(call_insn 2488 2487 2489 197 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":479 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2489 2488 2490 197 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":479 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2490 2489 2491 197 (set (reg/f:DI 1 dx [1821])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":480 85 {*movdi_internal}
     (nil))
(insn 2491 2490 2492 197 (set (reg:DI 0 ax [1822])
        (const_int 0 [0])) "CLDRAD.f":480 85 {*movdi_internal}
     (nil))
(insn 2492 2491 4491 197 (set (reg:DI 2 cx [1823])
        (const_int 12 [0xc])) "CLDRAD.f":480 85 {*movdi_internal}
     (nil))
(insn 4491 2492 2493 197 (set (reg/f:DI 5 di [1821])
        (reg/f:DI 1 dx [1821])) "CLDRAD.f":480 85 {*movdi_internal}
     (nil))
(insn 2493 4491 4492 197 (parallel [
            (set (reg:DI 2 cx [1823])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1821])
                (plus:DI (ashift:DI (reg:DI 2 cx [1823])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1821])))
            (set (mem/c:BLK (reg/f:DI 5 di [1821]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1822]))
            (use (reg:DI 2 cx [1823]))
        ]) "CLDRAD.f":480 984 {*rep_stosdi_rex64}
     (nil))
(insn 4492 2493 2494 197 (set (reg/f:DI 1 dx [1821])
        (reg/f:DI 5 di [1821])) "CLDRAD.f":480 85 {*movdi_internal}
     (nil))
(insn 2494 4492 2495 197 (set (mem/c:SI (reg/f:DI 1 dx [1821]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1822])) "CLDRAD.f":480 86 {*movsi_internal}
     (nil))
(insn 2495 2494 2496 197 (parallel [
            (set (reg/f:DI 1 dx [1821])
                (plus:DI (reg/f:DI 1 dx [1821])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":480 222 {*adddi_1}
     (nil))
(insn 2496 2495 2497 197 (set (reg:SI 0 ax [orig:777 _691 ] [777])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 608 [0x260]))) [2 rqstfld.iget+592 S4 A128])) "CLDRAD.f":482 86 {*movsi_internal}
     (nil))
(insn 2497 2496 4608 197 (set (reg:DI 0 ax [orig:778 _692 ] [778])
        (sign_extend:DI (reg:SI 0 ax [orig:777 _691 ] [777]))) "CLDRAD.f":482 149 {*extendsidi2_rex64}
     (nil))
(insn 4608 2497 2499 197 (set (reg:DI 1 dx [orig:779 _693 ] [779])
        (plus:DI (reg:DI 0 ax [orig:778 _692 ] [778])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":482 218 {*leadi}
     (nil))
(insn 2499 4608 2500 197 (set (reg:DI 0 ax [1824])
        (reg:DI 1 dx [orig:779 _693 ] [779])) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2500 2499 2502 197 (parallel [
            (set (reg:DI 0 ax [1825])
                (ashift:DI (reg:DI 0 ax [1824])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":482 551 {*ashldi3_1}
     (nil))
(insn 2502 2500 2503 197 (parallel [
            (set (reg:DI 0 ax [1824])
                (minus:DI (reg:DI 0 ax [1824])
                    (reg:DI 1 dx [orig:779 _693 ] [779])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":482 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:779 _693 ] [779])
            (const_int 15 [0xf]))
        (nil)))
(insn 2503 2502 2506 197 (parallel [
            (set (reg:DI 0 ax [1826])
                (ashift:DI (reg:DI 0 ax [1824])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":482 551 {*ashldi3_1}
     (nil))
(insn 2506 2503 2507 197 (parallel [
            (set (reg:DI 0 ax [1827])
                (plus:DI (reg:DI 0 ax [orig:780 _694 ] [780])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":482 222 {*adddi_1}
     (nil))
(insn 2507 2506 4609 197 (parallel [
            (set (reg:DI 0 ax [1828])
                (ashift:DI (reg:DI 0 ax [1827])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":482 551 {*ashldi3_1}
     (nil))
(insn 4609 2507 2509 197 (set (reg/f:DI 1 dx [orig:781 _695 ] [781])
        (plus:DI (reg:DI 0 ax [1828])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":482 218 {*leadi}
     (nil))
(insn 2509 4609 2510 197 (set (reg:DI 4 si [1829])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2510 2509 2511 197 (set (reg:DI 2 cx [1830])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2511 2510 2512 197 (set (reg:DI 0 ax [1831])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2512 2511 2513 197 (set (reg:DI 38 r9)
        (reg:DI 4 si [1829])) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2513 2512 2514 197 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1830])) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2514 2513 2516 197 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1831])) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2516 2514 2517 197 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 608 [0x260])))) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2517 2516 2518 197 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":482 85 {*movdi_internal}
     (nil))
(insn 2518 2517 2519 197 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":482 88 {*movqi_internal}
     (nil))
(call_insn 2519 2518 2520 197 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":482 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       198 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 198, loop depth 0, maybe hot
;;  prev block 197, next block 199, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       195
;;              197 (FALLTHRU)
;; bb 198 artificial_defs: { }
;; bb 198 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 2520 2519 2521 198 109 (nil) [1 uses])
(note 2521 2520 2522 198 [bb 198] NOTE_INSN_BASIC_BLOCK)
(insn 2522 2521 2523 198 (set (reg:SI 0 ax [orig:782 _696 ] [782])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 728 [0x2d8]))) [2 rqstfld.iget+712 S4 A64])) "CLDRAD.f":486 86 {*movsi_internal}
     (nil))
(insn 2523 2522 2524 198 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:782 _696 ] [782])
            (const_int 0 [0]))) "CLDRAD.f":486 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2524 2523 2525 198 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2569)
            (pc))) "CLDRAD.f":486 682 {*jcc}
     (nil)
 -> 2569)
;;  succ:       199 (FALLTHRU)
;;              200
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 199, loop depth 0, maybe hot
;;  prev block 198, next block 200, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       198 (FALLTHRU)
;; bb 199 artificial_defs: { }
;; bb 199 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 2525 2524 2526 199 [bb 199] NOTE_INSN_BASIC_BLOCK)
(insn 2526 2525 2527 199 (set (reg:DI 1 dx [1832])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2527 2526 2528 199 (set (reg:DI 0 ax [1833])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2528 2527 2529 199 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":487 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2529 2528 2530 199 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":487 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2530 2529 2531 199 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1832])) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2531 2530 2532 199 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1833])) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2532 2531 2533 199 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2533 2532 2534 199 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cldtz.4375") [flags 0x202]  <var_decl 0x7f20392d7900 cldtz>)) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2534 2533 2535 199 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2535 2534 2536 199 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC24") [flags 0x2]  <var_decl 0x7f2038fb4990 *.LC24>)) "CLDRAD.f":487 85 {*movdi_internal}
     (nil))
(insn 2536 2535 2537 199 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":487 88 {*movqi_internal}
     (nil))
(call_insn 2537 2536 2538 199 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":487 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2538 2537 2539 199 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":487 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2539 2538 2540 199 (set (reg/f:DI 1 dx [1834])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":488 85 {*movdi_internal}
     (nil))
(insn 2540 2539 2541 199 (set (reg:DI 0 ax [1835])
        (const_int 0 [0])) "CLDRAD.f":488 85 {*movdi_internal}
     (nil))
(insn 2541 2540 4493 199 (set (reg:DI 2 cx [1836])
        (const_int 12 [0xc])) "CLDRAD.f":488 85 {*movdi_internal}
     (nil))
(insn 4493 2541 2542 199 (set (reg/f:DI 5 di [1834])
        (reg/f:DI 1 dx [1834])) "CLDRAD.f":488 85 {*movdi_internal}
     (nil))
(insn 2542 4493 4494 199 (parallel [
            (set (reg:DI 2 cx [1836])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1834])
                (plus:DI (ashift:DI (reg:DI 2 cx [1836])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1834])))
            (set (mem/c:BLK (reg/f:DI 5 di [1834]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1835]))
            (use (reg:DI 2 cx [1836]))
        ]) "CLDRAD.f":488 984 {*rep_stosdi_rex64}
     (nil))
(insn 4494 2542 2543 199 (set (reg/f:DI 1 dx [1834])
        (reg/f:DI 5 di [1834])) "CLDRAD.f":488 85 {*movdi_internal}
     (nil))
(insn 2543 4494 2544 199 (set (mem/c:SI (reg/f:DI 1 dx [1834]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1835])) "CLDRAD.f":488 86 {*movsi_internal}
     (nil))
(insn 2544 2543 2545 199 (parallel [
            (set (reg/f:DI 1 dx [1834])
                (plus:DI (reg/f:DI 1 dx [1834])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":488 222 {*adddi_1}
     (nil))
(insn 2545 2544 2546 199 (set (reg:SI 0 ax [orig:783 _697 ] [783])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 728 [0x2d8]))) [2 rqstfld.iget+712 S4 A64])) "CLDRAD.f":490 86 {*movsi_internal}
     (nil))
(insn 2546 2545 4606 199 (set (reg:DI 0 ax [orig:784 _698 ] [784])
        (sign_extend:DI (reg:SI 0 ax [orig:783 _697 ] [783]))) "CLDRAD.f":490 149 {*extendsidi2_rex64}
     (nil))
(insn 4606 2546 2548 199 (set (reg:DI 1 dx [orig:785 _699 ] [785])
        (plus:DI (reg:DI 0 ax [orig:784 _698 ] [784])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":490 218 {*leadi}
     (nil))
(insn 2548 4606 2549 199 (set (reg:DI 0 ax [1837])
        (reg:DI 1 dx [orig:785 _699 ] [785])) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2549 2548 2551 199 (parallel [
            (set (reg:DI 0 ax [1838])
                (ashift:DI (reg:DI 0 ax [1837])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":490 551 {*ashldi3_1}
     (nil))
(insn 2551 2549 2552 199 (parallel [
            (set (reg:DI 0 ax [1837])
                (minus:DI (reg:DI 0 ax [1837])
                    (reg:DI 1 dx [orig:785 _699 ] [785])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":490 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:785 _699 ] [785])
            (const_int 15 [0xf]))
        (nil)))
(insn 2552 2551 2555 199 (parallel [
            (set (reg:DI 0 ax [1839])
                (ashift:DI (reg:DI 0 ax [1837])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":490 551 {*ashldi3_1}
     (nil))
(insn 2555 2552 2556 199 (parallel [
            (set (reg:DI 0 ax [1840])
                (plus:DI (reg:DI 0 ax [orig:786 _700 ] [786])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":490 222 {*adddi_1}
     (nil))
(insn 2556 2555 4607 199 (parallel [
            (set (reg:DI 0 ax [1841])
                (ashift:DI (reg:DI 0 ax [1840])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":490 551 {*ashldi3_1}
     (nil))
(insn 4607 2556 2558 199 (set (reg/f:DI 1 dx [orig:787 _701 ] [787])
        (plus:DI (reg:DI 0 ax [1841])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":490 218 {*leadi}
     (nil))
(insn 2558 4607 2559 199 (set (reg:DI 4 si [1842])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2559 2558 2560 199 (set (reg:DI 2 cx [1843])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2560 2559 2561 199 (set (reg:DI 0 ax [1844])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2561 2560 2562 199 (set (reg:DI 38 r9)
        (reg:DI 4 si [1842])) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2562 2561 2563 199 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1843])) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2563 2562 2565 199 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1844])) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2565 2563 2566 199 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 728 [0x2d8])))) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2566 2565 2567 199 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":490 85 {*movdi_internal}
     (nil))
(insn 2567 2566 2568 199 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":490 88 {*movqi_internal}
     (nil))
(call_insn 2568 2567 2569 199 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":490 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       200 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 200, loop depth 0, maybe hot
;;  prev block 199, next block 201, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       198
;;              199 (FALLTHRU)
;; bb 200 artificial_defs: { }
;; bb 200 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 2569 2568 2570 200 110 (nil) [1 uses])
(note 2570 2569 2571 200 [bb 200] NOTE_INSN_BASIC_BLOCK)
(insn 2571 2570 2572 200 (set (reg:SI 0 ax [orig:788 _702 ] [788])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 684 [0x2ac]))) [2 rqstfld.iget+668 S4 A32])) "CLDRAD.f":494 86 {*movsi_internal}
     (nil))
(insn 2572 2571 2573 200 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:788 _702 ] [788])
            (const_int 0 [0]))) "CLDRAD.f":494 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2573 2572 2574 200 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2618)
            (pc))) "CLDRAD.f":494 682 {*jcc}
     (nil)
 -> 2618)
;;  succ:       201 (FALLTHRU)
;;              202
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 201, loop depth 0, maybe hot
;;  prev block 200, next block 202, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       200 (FALLTHRU)
;; bb 201 artificial_defs: { }
;; bb 201 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 2574 2573 2575 201 [bb 201] NOTE_INSN_BASIC_BLOCK)
(insn 2575 2574 2576 201 (set (reg:DI 1 dx [1845])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2576 2575 2577 201 (set (reg:DI 0 ax [1846])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2577 2576 2578 201 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":496 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2578 2577 2579 201 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":496 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2579 2578 2580 201 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1845])) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2580 2579 2581 201 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1846])) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2581 2580 2582 201 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2582 2581 2583 201 (set (reg:DI 1 dx)
        (symbol_ref:DI ("cldtt.4373") [flags 0x202]  <var_decl 0x7f20392d7870 cldtt>)) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2583 2582 2584 201 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2584 2583 2585 201 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC25") [flags 0x2]  <var_decl 0x7f2038fb4a20 *.LC25>)) "CLDRAD.f":496 85 {*movdi_internal}
     (nil))
(insn 2585 2584 2586 201 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":496 88 {*movqi_internal}
     (nil))
(call_insn 2586 2585 2587 201 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":496 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2587 2586 2588 201 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":496 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2588 2587 2589 201 (set (reg/f:DI 1 dx [1847])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":497 85 {*movdi_internal}
     (nil))
(insn 2589 2588 2590 201 (set (reg:DI 0 ax [1848])
        (const_int 0 [0])) "CLDRAD.f":497 85 {*movdi_internal}
     (nil))
(insn 2590 2589 4495 201 (set (reg:DI 2 cx [1849])
        (const_int 12 [0xc])) "CLDRAD.f":497 85 {*movdi_internal}
     (nil))
(insn 4495 2590 2591 201 (set (reg/f:DI 5 di [1847])
        (reg/f:DI 1 dx [1847])) "CLDRAD.f":497 85 {*movdi_internal}
     (nil))
(insn 2591 4495 4496 201 (parallel [
            (set (reg:DI 2 cx [1849])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1847])
                (plus:DI (ashift:DI (reg:DI 2 cx [1849])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1847])))
            (set (mem/c:BLK (reg/f:DI 5 di [1847]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1848]))
            (use (reg:DI 2 cx [1849]))
        ]) "CLDRAD.f":497 984 {*rep_stosdi_rex64}
     (nil))
(insn 4496 2591 2592 201 (set (reg/f:DI 1 dx [1847])
        (reg/f:DI 5 di [1847])) "CLDRAD.f":497 85 {*movdi_internal}
     (nil))
(insn 2592 4496 2593 201 (set (mem/c:SI (reg/f:DI 1 dx [1847]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1848])) "CLDRAD.f":497 86 {*movsi_internal}
     (nil))
(insn 2593 2592 2594 201 (parallel [
            (set (reg/f:DI 1 dx [1847])
                (plus:DI (reg/f:DI 1 dx [1847])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":497 222 {*adddi_1}
     (nil))
(insn 2594 2593 2595 201 (set (reg:SI 0 ax [orig:789 _703 ] [789])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 684 [0x2ac]))) [2 rqstfld.iget+668 S4 A32])) "CLDRAD.f":499 86 {*movsi_internal}
     (nil))
(insn 2595 2594 4604 201 (set (reg:DI 0 ax [orig:790 _704 ] [790])
        (sign_extend:DI (reg:SI 0 ax [orig:789 _703 ] [789]))) "CLDRAD.f":499 149 {*extendsidi2_rex64}
     (nil))
(insn 4604 2595 2597 201 (set (reg:DI 1 dx [orig:791 _705 ] [791])
        (plus:DI (reg:DI 0 ax [orig:790 _704 ] [790])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":499 218 {*leadi}
     (nil))
(insn 2597 4604 2598 201 (set (reg:DI 0 ax [1850])
        (reg:DI 1 dx [orig:791 _705 ] [791])) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2598 2597 2600 201 (parallel [
            (set (reg:DI 0 ax [1851])
                (ashift:DI (reg:DI 0 ax [1850])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":499 551 {*ashldi3_1}
     (nil))
(insn 2600 2598 2601 201 (parallel [
            (set (reg:DI 0 ax [1850])
                (minus:DI (reg:DI 0 ax [1850])
                    (reg:DI 1 dx [orig:791 _705 ] [791])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":499 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:791 _705 ] [791])
            (const_int 15 [0xf]))
        (nil)))
(insn 2601 2600 2604 201 (parallel [
            (set (reg:DI 0 ax [1852])
                (ashift:DI (reg:DI 0 ax [1850])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":499 551 {*ashldi3_1}
     (nil))
(insn 2604 2601 2605 201 (parallel [
            (set (reg:DI 0 ax [1853])
                (plus:DI (reg:DI 0 ax [orig:792 _706 ] [792])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":499 222 {*adddi_1}
     (nil))
(insn 2605 2604 4605 201 (parallel [
            (set (reg:DI 0 ax [1854])
                (ashift:DI (reg:DI 0 ax [1853])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":499 551 {*ashldi3_1}
     (nil))
(insn 4605 2605 2607 201 (set (reg/f:DI 1 dx [orig:793 _707 ] [793])
        (plus:DI (reg:DI 0 ax [1854])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":499 218 {*leadi}
     (nil))
(insn 2607 4605 2608 201 (set (reg:DI 4 si [1855])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2608 2607 2609 201 (set (reg:DI 2 cx [1856])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2609 2608 2610 201 (set (reg:DI 0 ax [1857])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2610 2609 2611 201 (set (reg:DI 38 r9)
        (reg:DI 4 si [1855])) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2611 2610 2612 201 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1856])) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2612 2611 2614 201 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1857])) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2614 2612 2615 201 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 684 [0x2ac])))) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2615 2614 2616 201 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":499 85 {*movdi_internal}
     (nil))
(insn 2616 2615 2617 201 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":499 88 {*movqi_internal}
     (nil))
(call_insn 2617 2616 2618 201 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":499 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       202 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 202, loop depth 0, maybe hot
;;  prev block 201, next block 203, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       163
;;              200
;;              201 (FALLTHRU)
;; bb 202 artificial_defs: { }
;; bb 202 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 2618 2617 2619 202 89 (nil) [2 uses])
(note 2619 2618 2620 202 [bb 202] NOTE_INSN_BASIC_BLOCK)
(insn 2620 2619 2621 202 (set (reg:SI 0 ax [orig:794 _708 ] [794])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 516 [0x204]))) [2 rqstfld.iget+500 S4 A32])) "CLDRAD.f":507 86 {*movsi_internal}
     (nil))
(insn 2621 2620 2622 202 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:794 _708 ] [794])
            (const_int 0 [0]))) "CLDRAD.f":507 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2622 2621 2623 202 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2773)
            (pc))) "CLDRAD.f":507 682 {*jcc}
     (nil)
 -> 2773)
;;  succ:       203 (FALLTHRU)
;;              220
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 203, loop depth 0, maybe hot
;;  prev block 202, next block 204, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       202 (FALLTHRU)
;; bb 203 artificial_defs: { }
;; bb 203 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 2623 2622 2624 203 [bb 203] NOTE_INSN_BASIC_BLOCK)
(insn 2624 2623 2625 203 (set (reg/f:DI 0 ax [1858])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2625 2624 4603 203 (set (reg:SF 21 xmm0 [orig:795 _709 ] [795])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1858])
                (const_int 8 [0x8])) [1 acmrds.ardsw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 4603 2625 2627 203 (set (reg:SF 22 xmm1 [1859])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":508 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2627 4603 2628 203 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:795 _709 ] [795])
            (reg:SF 22 xmm1 [1859]))) "CLDRAD.f":508 53 {*cmpisf}
     (nil))
(jump_insn 2628 2627 2632 203 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4231)
            (pc))) "CLDRAD.f":508 682 {*jcc}
     (nil)
 -> 4231)
;;  succ:       204 (FALLTHRU)
;;              205
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 204, loop depth 0, maybe hot
;;  prev block 203, next block 205, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       203 (FALLTHRU)
;; bb 204 artificial_defs: { }
;; bb 204 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 21 [xmm0] 22 [xmm1]
(note 2632 2628 2633 204 [bb 204] NOTE_INSN_BASIC_BLOCK)
(insn 2633 2632 2634 204 (set (reg/f:DI 0 ax [1860])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2634 2633 2635 204 (set (reg:SF 22 xmm1 [orig:796 _710 ] [796])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1860])
                (const_int 8 [0x8])) [1 acmrds.ardsw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2635 2634 2636 204 (set (reg:SF 21 xmm0 [1862])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":509 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 2636 2635 2637 204 (set (reg:SF 21 xmm0 [1861])
        (div:SF (reg:SF 21 xmm0 [1862])
            (reg:SF 22 xmm1 [orig:796 _710 ] [796]))) "CLDRAD.f":509 841 {*fop_sf_1}
     (nil))
(insn 2637 2636 4232 204 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1861])) "CLDRAD.f":509 131 {*movsf_internal}
     (nil))
(jump_insn 4232 2637 4233 204 (set (pc)
        (label_ref 2644)) 683 {jump}
     (nil)
 -> 2644)
;;  succ:       206 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4233 4232 4231)
;; basic block 205, loop depth 0, maybe hot
;;  prev block 204, next block 206, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       203
;; bb 205 artificial_defs: { }
;; bb 205 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 21 [xmm0]
(code_label 4231 4233 2641 205 221 (nil) [1 uses])
(note 2641 4231 4602 205 [bb 205] NOTE_INSN_BASIC_BLOCK)
(insn 4602 2641 2643 205 (set (reg:SF 21 xmm0 [1863])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":511 131 {*movsf_internal}
     (nil))
(insn 2643 4602 2644 205 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1863])) "CLDRAD.f":511 131 {*movsf_internal}
     (nil))
;;  succ:       206 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 206, loop depth 0, maybe hot
;;  prev block 205, next block 207, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       205 (FALLTHRU)
;;              204 [always] 
;; bb 206 artificial_defs: { }
;; bb 206 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(code_label 2644 2643 2645 206 114 (nil) [1 uses])
(note 2645 2644 2646 206 [bb 206] NOTE_INSN_BASIC_BLOCK)
(insn 2646 2645 2647 206 (set (reg:SI 1 dx [orig:1159 _1431 ] [1159])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":513 86 {*movsi_internal}
     (nil))
(insn 2647 2646 2648 206 (set (reg:SI 0 ax [orig:1160 _1432 ] [1160])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":513 86 {*movsi_internal}
     (nil))
(insn 2648 2647 2691 206 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1159 _1431 ] [1159])) "CLDRAD.f":513 86 {*movsi_internal}
     (nil))
;;  succ:       207 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 207, loop depth 0, maybe hot
;;  prev block 206, next block 208, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       206 (FALLTHRU)
;;              211 [always] 
;; bb 207 artificial_defs: { }
;; bb 207 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 2691 2648 2649 207 118 (nil) [1 uses])
(note 2649 2691 2650 207 [bb 207] NOTE_INSN_BASIC_BLOCK)
(insn 2650 2649 2651 207 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1160 _1432 ] [1160]))) "CLDRAD.f":513 11 {*cmpsi_1}
     (nil))
(insn 2651 2650 2652 207 (set (reg:QI 1 dx [1864])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":513 678 {*setcc_qi}
     (nil))
(insn 2652 2651 2653 207 (set (reg:SI 1 dx [orig:1161 _1434 ] [1161])
        (zero_extend:SI (reg:QI 1 dx [1864]))) "CLDRAD.f":513 140 {*zero_extendqisi2}
     (nil))
(insn 2653 2652 2654 207 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1161 _1434 ] [1161])
            (const_int 0 [0]))) "CLDRAD.f":513 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2654 2653 2655 207 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4385)
            (pc))) "CLDRAD.f":513 682 {*jcc}
     (nil)
 -> 4385)
;;  succ:       213
;;              208 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 208, loop depth 0, maybe hot
;;  prev block 207, next block 209, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       207 (FALLTHRU)
;; bb 208 artificial_defs: { }
;; bb 208 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 2655 2654 2656 208 [bb 208] NOTE_INSN_BASIC_BLOCK)
(insn 2656 2655 2685 208 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":514 86 {*movsi_internal}
     (nil))
;;  succ:       209 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 209, loop depth 0, maybe hot
;;  prev block 208, next block 210, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       208 (FALLTHRU)
;;              210 [always] 
;; bb 209 artificial_defs: { }
;; bb 209 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 2685 2656 2657 209 117 (nil) [1 uses])
(note 2657 2685 2658 209 [bb 209] NOTE_INSN_BASIC_BLOCK)
(insn 2658 2657 2659 209 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":514 11 {*cmpsi_1}
     (nil))
(insn 2659 2658 2660 209 (set (reg:QI 1 dx [1865])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":514 678 {*setcc_qi}
     (nil))
(insn 2660 2659 2661 209 (set (reg:SI 1 dx [orig:1162 _1436 ] [1162])
        (zero_extend:SI (reg:QI 1 dx [1865]))) "CLDRAD.f":514 140 {*zero_extendqisi2}
     (nil))
(insn 2661 2660 2662 209 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1162 _1436 ] [1162])
            (const_int 0 [0]))) "CLDRAD.f":514 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2662 2661 2663 209 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4388)
            (pc))) "CLDRAD.f":514 682 {*jcc}
     (nil)
 -> 4388)
;;  succ:       211
;;              210 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 210, loop depth 0, maybe hot
;;  prev block 209, next block 211, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       209 (FALLTHRU)
;; bb 210 artificial_defs: { }
;; bb 210 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 2663 2662 2664 210 [bb 210] NOTE_INSN_BASIC_BLOCK)
(insn 2664 2663 2665 210 (set (reg:SI 1 dx [1866])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":515 86 {*movsi_internal}
     (nil))
(insn 2665 2664 2666 210 (set (reg:DI 1 dx [orig:797 _711 ] [797])
        (sign_extend:DI (reg:SI 1 dx [1866]))) "CLDRAD.f":515 149 {*extendsidi2_rex64}
     (nil))
(insn 2666 2665 2667 210 (parallel [
            (set (reg:DI 2 cx [orig:798 _712 ] [798])
                (mult:DI (reg:DI 1 dx [orig:797 _711 ] [797])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":515 349 {*muldi3_1}
     (nil))
(insn 2667 2666 2668 210 (set (reg:SI 1 dx [1867])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":515 86 {*movsi_internal}
     (nil))
(insn 2668 2667 2669 210 (set (reg:DI 1 dx [orig:799 _713 ] [799])
        (sign_extend:DI (reg:SI 1 dx [1867]))) "CLDRAD.f":515 149 {*extendsidi2_rex64}
     (nil))
(insn 2669 2668 4600 210 (parallel [
            (set (reg:DI 1 dx [orig:800 _714 ] [800])
                (plus:DI (reg:DI 1 dx [orig:799 _713 ] [799])
                    (reg:DI 2 cx [orig:798 _712 ] [798])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":515 222 {*adddi_1}
     (nil))
(insn 4600 2669 2671 210 (set (reg:DI 2 cx [orig:801 _715 ] [801])
        (plus:DI (reg:DI 1 dx [orig:800 _714 ] [800])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":515 218 {*leadi}
     (nil))
(insn 2671 4600 2672 210 (set (reg/f:DI 1 dx [1868])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":515 85 {*movdi_internal}
     (nil))
(insn 2672 2671 2673 210 (parallel [
            (set (reg:DI 2 cx [1869])
                (plus:DI (reg:DI 2 cx [orig:801 _715 ] [801])
                    (const_int 88896 [0x15b40])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":515 222 {*adddi_1}
     (nil))
(insn 2673 2672 2674 210 (set (reg:SF 21 xmm0 [orig:802 _716 ] [802])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1869])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1868])) [1 acmrds.aswin S4 A32])) "CLDRAD.f":515 131 {*movsf_internal}
     (nil))
(insn 2674 2673 2675 210 (set (reg:SI 1 dx [1870])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":515 86 {*movsi_internal}
     (nil))
(insn 2675 2674 2676 210 (set (reg:DI 1 dx [orig:803 _717 ] [803])
        (sign_extend:DI (reg:SI 1 dx [1870]))) "CLDRAD.f":515 149 {*extendsidi2_rex64}
     (nil))
(insn 2676 2675 2677 210 (parallel [
            (set (reg:DI 2 cx [orig:804 _718 ] [804])
                (mult:DI (reg:DI 1 dx [orig:803 _717 ] [803])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":515 349 {*muldi3_1}
     (nil))
(insn 2677 2676 2678 210 (set (reg:SI 1 dx [1871])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":515 86 {*movsi_internal}
     (nil))
(insn 2678 2677 2679 210 (set (reg:DI 1 dx [orig:805 _719 ] [805])
        (sign_extend:DI (reg:SI 1 dx [1871]))) "CLDRAD.f":515 149 {*extendsidi2_rex64}
     (nil))
(insn 2679 2678 4601 210 (parallel [
            (set (reg:DI 1 dx [orig:806 _720 ] [806])
                (plus:DI (reg:DI 1 dx [orig:805 _719 ] [805])
                    (reg:DI 2 cx [orig:804 _718 ] [804])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":515 222 {*adddi_1}
     (nil))
(insn 4601 2679 2681 210 (set (reg:DI 2 cx [orig:807 _721 ] [807])
        (plus:DI (reg:DI 1 dx [orig:806 _720 ] [806])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":515 218 {*leadi}
     (nil))
(insn 2681 4601 2682 210 (set (reg:SF 21 xmm0 [orig:808 _722 ] [808])
        (mult:SF (reg:SF 21 xmm0 [orig:802 _716 ] [802])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32]))) "CLDRAD.f":515 838 {*fop_sf_comm}
     (nil))
(insn 2682 2681 2683 210 (set (reg/f:DI 1 dx [1872])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":515 85 {*movdi_internal}
     (nil))
(insn 2683 2682 2684 210 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:807 _721 ] [807])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1872])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:808 _722 ] [808])) "CLDRAD.f":515 131 {*movsf_internal}
     (nil))
(insn 2684 2683 4234 210 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":514 221 {*addsi_1}
     (nil))
(jump_insn 4234 2684 4235 210 (set (pc)
        (label_ref 2685)) "CLDRAD.f":514 683 {jump}
     (nil)
 -> 2685)
;;  succ:       209 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4235 4234 4388)
;; basic block 211, loop depth 0, maybe hot
;;  prev block 210, next block 213, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       209
;; bb 211 artificial_defs: { }
;; bb 211 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4388 4235 4387 211 257 (nil) [1 uses])
(note 4387 4388 4389 211 [bb 211] NOTE_INSN_BASIC_BLOCK)
(insn 4389 4387 2690 211 (const_int 0 [0]) "CLDRAD.f":515 718 {nop}
     (nil))
(insn 2690 4389 4236 211 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":513 221 {*addsi_1}
     (nil))
(jump_insn 4236 2690 4237 211 (set (pc)
        (label_ref 2691)) "CLDRAD.f":513 683 {jump}
     (nil)
 -> 2691)
;;  succ:       207 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4237 4236 4385)
;; basic block 213, loop depth 0, maybe hot
;;  prev block 211, next block 215, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       207
;; bb 213 artificial_defs: { }
;; bb 213 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4385 4237 4384 213 256 (nil) [1 uses])
(note 4384 4385 4386 213 [bb 213] NOTE_INSN_BASIC_BLOCK)
(insn 4386 4384 2696 213 (const_int 0 [0]) "CLDRAD.f":514 718 {nop}
     (nil))
(insn 2696 4386 2697 213 (set (reg:DI 1 dx [1873])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2697 2696 2698 213 (set (reg:DI 0 ax [1874])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2698 2697 2699 213 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":518 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2699 2698 2700 213 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":518 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2700 2699 2701 213 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1873])) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2701 2700 2702 213 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1874])) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2702 2701 2703 213 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2703 2702 2704 213 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2704 2703 2705 213 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2705 2704 2706 213 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC26") [flags 0x2]  <var_decl 0x7f2038fb4ab0 *.LC26>)) "CLDRAD.f":518 85 {*movdi_internal}
     (nil))
(insn 2706 2705 2707 213 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":518 88 {*movqi_internal}
     (nil))
(call_insn 2707 2706 2708 213 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":518 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2708 2707 2709 213 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":518 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2709 2708 2710 213 (set (reg/f:DI 1 dx [1875])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":519 85 {*movdi_internal}
     (nil))
(insn 2710 2709 2711 213 (set (reg:DI 0 ax [1876])
        (const_int 0 [0])) "CLDRAD.f":519 85 {*movdi_internal}
     (nil))
(insn 2711 2710 4497 213 (set (reg:DI 2 cx [1877])
        (const_int 12 [0xc])) "CLDRAD.f":519 85 {*movdi_internal}
     (nil))
(insn 4497 2711 2712 213 (set (reg/f:DI 5 di [1875])
        (reg/f:DI 1 dx [1875])) "CLDRAD.f":519 85 {*movdi_internal}
     (nil))
(insn 2712 4497 4498 213 (parallel [
            (set (reg:DI 2 cx [1877])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1875])
                (plus:DI (ashift:DI (reg:DI 2 cx [1877])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1875])))
            (set (mem/c:BLK (reg/f:DI 5 di [1875]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1876]))
            (use (reg:DI 2 cx [1877]))
        ]) "CLDRAD.f":519 984 {*rep_stosdi_rex64}
     (nil))
(insn 4498 2712 2713 213 (set (reg/f:DI 1 dx [1875])
        (reg/f:DI 5 di [1875])) "CLDRAD.f":519 85 {*movdi_internal}
     (nil))
(insn 2713 4498 2714 213 (set (mem/c:SI (reg/f:DI 1 dx [1875]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1876])) "CLDRAD.f":519 86 {*movsi_internal}
     (nil))
(insn 2714 2713 2715 213 (parallel [
            (set (reg/f:DI 1 dx [1875])
                (plus:DI (reg/f:DI 1 dx [1875])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":519 222 {*adddi_1}
     (nil))
(insn 2715 2714 2716 213 (set (reg:SI 0 ax [1878])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":521 86 {*movsi_internal}
     (nil))
(insn 2716 2715 2717 213 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [1878])) "CLDRAD.f":521 86 {*movsi_internal}
     (nil))
(insn 2717 2716 2718 213 (set (reg/f:DI 0 ax [1879])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2718 2717 2719 213 (set (reg:SF 21 xmm0 [orig:809 _723 ] [809])
        (mem/c:SF (reg/f:DI 0 ax [1879]) [1 acmrds.trdsw+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2719 2718 2720 213 (set (reg:SI 0 ax [1880])
        (fix:SI (reg:SF 21 xmm0 [orig:809 _723 ] [809]))) "CLDRAD.f":522 174 {fix_truncsfsi_sse}
     (nil))
(insn 2720 2719 2721 213 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])
        (reg:SI 0 ax [1880])) "CLDRAD.f":522 86 {*movsi_internal}
     (nil))
(insn 2721 2720 4598 213 (set (reg:SI 0 ax [1882])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":523 86 {*movsi_internal}
     (nil))
(insn 4598 2721 4599 213 (parallel [
            (set (reg:SI 1 dx [1883])
                (ashiftrt:SI (reg:SI 0 ax [1882])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":523 582 {ashrsi3_cvt}
     (nil))
(insn 4599 4598 2723 213 (parallel [
            (set (reg:SI 0 ax [1884])
                (div:SI (reg:SI 0 ax [1882])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (set (reg:SI 1 dx [1883])
                (mod:SI (reg:SI 0 ax [1882])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (use (reg:SI 1 dx [1883]))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":523 387 {*divmodsi4_noext}
     (nil))
(insn 2723 4599 2724 213 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [1883])) "CLDRAD.f":523 86 {*movsi_internal}
     (nil))
(insn 2724 2723 2725 213 (set (reg:SI 0 ax [1885])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":524 86 {*movsi_internal}
     (nil))
(insn 2725 2724 2726 213 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [1885])) "CLDRAD.f":524 86 {*movsi_internal}
     (nil))
(insn 2726 2725 2727 213 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":525 86 {*movsi_internal}
     (nil))
(insn 2727 2726 2728 213 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":526 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2728 2727 2729 213 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2735)
            (pc))) "CLDRAD.f":526 682 {*jcc}
     (nil)
 -> 2735)
;;  succ:       215 (FALLTHRU)
;;              216
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 215, loop depth 0, maybe hot
;;  prev block 213, next block 216, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       213 (FALLTHRU)
;; bb 215 artificial_defs: { }
;; bb 215 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 2729 2728 2730 215 [bb 215] NOTE_INSN_BASIC_BLOCK)
(insn 2730 2729 2731 215 (set (reg:SI 0 ax [1886])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":527 86 {*movsi_internal}
     (nil))
(insn 2731 2730 2732 215 (parallel [
            (set (reg:SI 0 ax [orig:810 _724 ] [810])
                (minus:SI (reg:SI 0 ax [1886])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":527 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -116 [0xffffffffffffff8c])) [2 itrdsw+0 S4 A32]))
        (nil)))
(insn 2732 2731 4238 215 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:810 _724 ] [810])) "CLDRAD.f":527 86 {*movsi_internal}
     (nil))
(jump_insn 4238 2732 4239 215 (set (pc)
        (label_ref 2740)) 683 {jump}
     (nil)
 -> 2740)
;;  succ:       217 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4239 4238 2735)
;; basic block 216, loop depth 0, maybe hot
;;  prev block 215, next block 217, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       213
;; bb 216 artificial_defs: { }
;; bb 216 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 2735 4239 2736 216 119 (nil) [1 uses])
(note 2736 2735 2737 216 [bb 216] NOTE_INSN_BASIC_BLOCK)
(insn 2737 2736 2738 216 (set (reg:SI 0 ax [1887])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":529 86 {*movsi_internal}
     (nil))
(insn 2738 2737 2739 216 (parallel [
            (set (reg:SI 0 ax [orig:811 _725 ] [811])
                (minus:SI (reg:SI 0 ax [1887])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":529 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 2739 2738 2740 216 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:811 _725 ] [811])) "CLDRAD.f":529 86 {*movsi_internal}
     (nil))
;;  succ:       217 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 217, loop depth 0, maybe hot
;;  prev block 216, next block 218, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       216 (FALLTHRU)
;;              215 [always] 
;; bb 217 artificial_defs: { }
;; bb 217 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 2740 2739 2741 217 120 (nil) [1 uses])
(note 2741 2740 2742 217 [bb 217] NOTE_INSN_BASIC_BLOCK)
(insn 2742 2741 2743 217 (set (reg:SI 0 ax [orig:812 _726 ] [812])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":531 86 {*movsi_internal}
     (nil))
(insn 2743 2742 2744 217 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:812 _726 ] [812])
            (const_int 0 [0]))) "CLDRAD.f":531 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2744 2743 2745 217 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2747)
            (pc))) "CLDRAD.f":531 682 {*jcc}
     (nil)
 -> 2747)
;;  succ:       218 (FALLTHRU)
;;              219
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 218, loop depth 0, maybe hot
;;  prev block 217, next block 219, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       217 (FALLTHRU)
;; bb 218 artificial_defs: { }
;; bb 218 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 2745 2744 2746 218 [bb 218] NOTE_INSN_BASIC_BLOCK)
(insn 2746 2745 2747 218 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":531 86 {*movsi_internal}
     (nil))
;;  succ:       219 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 219, loop depth 0, maybe hot
;;  prev block 218, next block 220, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       217
;;              218 (FALLTHRU)
;; bb 219 artificial_defs: { }
;; bb 219 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 2747 2746 2748 219 121 (nil) [1 uses])
(note 2748 2747 2749 219 [bb 219] NOTE_INSN_BASIC_BLOCK)
(insn 2749 2748 2750 219 (set (reg:SI 0 ax [orig:813 _727 ] [813])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 516 [0x204]))) [2 rqstfld.iget+500 S4 A32])) "CLDRAD.f":533 86 {*movsi_internal}
     (nil))
(insn 2750 2749 4596 219 (set (reg:DI 0 ax [orig:814 _728 ] [814])
        (sign_extend:DI (reg:SI 0 ax [orig:813 _727 ] [813]))) "CLDRAD.f":533 149 {*extendsidi2_rex64}
     (nil))
(insn 4596 2750 2752 219 (set (reg:DI 1 dx [orig:815 _729 ] [815])
        (plus:DI (reg:DI 0 ax [orig:814 _728 ] [814])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":533 218 {*leadi}
     (nil))
(insn 2752 4596 2753 219 (set (reg:DI 0 ax [1888])
        (reg:DI 1 dx [orig:815 _729 ] [815])) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2753 2752 2755 219 (parallel [
            (set (reg:DI 0 ax [1889])
                (ashift:DI (reg:DI 0 ax [1888])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":533 551 {*ashldi3_1}
     (nil))
(insn 2755 2753 2756 219 (parallel [
            (set (reg:DI 0 ax [1888])
                (minus:DI (reg:DI 0 ax [1888])
                    (reg:DI 1 dx [orig:815 _729 ] [815])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":533 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:815 _729 ] [815])
            (const_int 15 [0xf]))
        (nil)))
(insn 2756 2755 2759 219 (parallel [
            (set (reg:DI 0 ax [1890])
                (ashift:DI (reg:DI 0 ax [1888])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":533 551 {*ashldi3_1}
     (nil))
(insn 2759 2756 2760 219 (parallel [
            (set (reg:DI 0 ax [1891])
                (plus:DI (reg:DI 0 ax [orig:816 _730 ] [816])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":533 222 {*adddi_1}
     (nil))
(insn 2760 2759 4597 219 (parallel [
            (set (reg:DI 0 ax [1892])
                (ashift:DI (reg:DI 0 ax [1891])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":533 551 {*ashldi3_1}
     (nil))
(insn 4597 2760 2762 219 (set (reg/f:DI 1 dx [orig:817 _731 ] [817])
        (plus:DI (reg:DI 0 ax [1892])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":533 218 {*leadi}
     (nil))
(insn 2762 4597 2763 219 (set (reg:DI 4 si [1893])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2763 2762 2764 219 (set (reg:DI 2 cx [1894])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2764 2763 2765 219 (set (reg:DI 0 ax [1895])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2765 2764 2766 219 (set (reg:DI 38 r9)
        (reg:DI 4 si [1893])) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2766 2765 2767 219 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1894])) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2767 2766 2769 219 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1895])) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2769 2767 2770 219 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 516 [0x204])))) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2770 2769 2771 219 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":533 85 {*movdi_internal}
     (nil))
(insn 2771 2770 2772 219 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":533 88 {*movqi_internal}
     (nil))
(call_insn 2772 2771 2773 219 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":533 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       220 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 220, loop depth 0, maybe hot
;;  prev block 219, next block 221, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       202
;;              219 (FALLTHRU)
;; bb 220 artificial_defs: { }
;; bb 220 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 2773 2772 2774 220 111 (nil) [1 uses])
(note 2774 2773 2775 220 [bb 220] NOTE_INSN_BASIC_BLOCK)
(insn 2775 2774 2776 220 (set (reg:SI 0 ax [orig:818 _732 ] [818])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 520 [0x208]))) [2 rqstfld.iget+504 S4 A64])) "CLDRAD.f":537 86 {*movsi_internal}
     (nil))
(insn 2776 2775 2777 220 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:818 _732 ] [818])
            (const_int 0 [0]))) "CLDRAD.f":537 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2777 2776 2778 220 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 2928)
            (pc))) "CLDRAD.f":537 682 {*jcc}
     (nil)
 -> 2928)
;;  succ:       221 (FALLTHRU)
;;              238
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 221, loop depth 0, maybe hot
;;  prev block 220, next block 222, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       220 (FALLTHRU)
;; bb 221 artificial_defs: { }
;; bb 221 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 2778 2777 2779 221 [bb 221] NOTE_INSN_BASIC_BLOCK)
(insn 2779 2778 2780 221 (set (reg/f:DI 0 ax [1896])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2780 2779 4595 221 (set (reg:SF 21 xmm0 [orig:819 _733 ] [819])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1896])
                (const_int 8 [0x8])) [1 acmrdl.ardlw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 4595 2780 2782 221 (set (reg:SF 22 xmm1 [1897])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":538 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2782 4595 2783 221 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:819 _733 ] [819])
            (reg:SF 22 xmm1 [1897]))) "CLDRAD.f":538 53 {*cmpisf}
     (nil))
(jump_insn 2783 2782 2787 221 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4240)
            (pc))) "CLDRAD.f":538 682 {*jcc}
     (nil)
 -> 4240)
;;  succ:       222 (FALLTHRU)
;;              223
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 222, loop depth 0, maybe hot
;;  prev block 221, next block 223, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       221 (FALLTHRU)
;; bb 222 artificial_defs: { }
;; bb 222 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 21 [xmm0] 22 [xmm1]
(note 2787 2783 2788 222 [bb 222] NOTE_INSN_BASIC_BLOCK)
(insn 2788 2787 2789 222 (set (reg/f:DI 0 ax [1898])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2789 2788 2790 222 (set (reg:SF 22 xmm1 [orig:820 _734 ] [820])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1898])
                (const_int 8 [0x8])) [1 acmrdl.ardlw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2790 2789 2791 222 (set (reg:SF 21 xmm0 [1900])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":539 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 2791 2790 2792 222 (set (reg:SF 21 xmm0 [1899])
        (div:SF (reg:SF 21 xmm0 [1900])
            (reg:SF 22 xmm1 [orig:820 _734 ] [820]))) "CLDRAD.f":539 841 {*fop_sf_1}
     (nil))
(insn 2792 2791 4241 222 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1899])) "CLDRAD.f":539 131 {*movsf_internal}
     (nil))
(jump_insn 4241 2792 4242 222 (set (pc)
        (label_ref 2799)) 683 {jump}
     (nil)
 -> 2799)
;;  succ:       224 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4242 4241 4240)
;; basic block 223, loop depth 0, maybe hot
;;  prev block 222, next block 224, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       221
;; bb 223 artificial_defs: { }
;; bb 223 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 21 [xmm0]
(code_label 4240 4242 2796 223 222 (nil) [1 uses])
(note 2796 4240 4594 223 [bb 223] NOTE_INSN_BASIC_BLOCK)
(insn 4594 2796 2798 223 (set (reg:SF 21 xmm0 [1901])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":541 131 {*movsf_internal}
     (nil))
(insn 2798 4594 2799 223 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1901])) "CLDRAD.f":541 131 {*movsf_internal}
     (nil))
;;  succ:       224 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 224, loop depth 0, maybe hot
;;  prev block 223, next block 225, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       223 (FALLTHRU)
;;              222 [always] 
;; bb 224 artificial_defs: { }
;; bb 224 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(code_label 2799 2798 2800 224 125 (nil) [1 uses])
(note 2800 2799 2801 224 [bb 224] NOTE_INSN_BASIC_BLOCK)
(insn 2801 2800 2802 224 (set (reg:SI 1 dx [orig:1163 _1453 ] [1163])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":543 86 {*movsi_internal}
     (nil))
(insn 2802 2801 2803 224 (set (reg:SI 0 ax [orig:1164 _1454 ] [1164])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":543 86 {*movsi_internal}
     (nil))
(insn 2803 2802 2846 224 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1163 _1453 ] [1163])) "CLDRAD.f":543 86 {*movsi_internal}
     (nil))
;;  succ:       225 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 225, loop depth 0, maybe hot
;;  prev block 224, next block 226, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       224 (FALLTHRU)
;;              229 [always] 
;; bb 225 artificial_defs: { }
;; bb 225 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 2846 2803 2804 225 129 (nil) [1 uses])
(note 2804 2846 2805 225 [bb 225] NOTE_INSN_BASIC_BLOCK)
(insn 2805 2804 2806 225 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1164 _1454 ] [1164]))) "CLDRAD.f":543 11 {*cmpsi_1}
     (nil))
(insn 2806 2805 2807 225 (set (reg:QI 1 dx [1902])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":543 678 {*setcc_qi}
     (nil))
(insn 2807 2806 2808 225 (set (reg:SI 1 dx [orig:1165 _1456 ] [1165])
        (zero_extend:SI (reg:QI 1 dx [1902]))) "CLDRAD.f":543 140 {*zero_extendqisi2}
     (nil))
(insn 2808 2807 2809 225 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1165 _1456 ] [1165])
            (const_int 0 [0]))) "CLDRAD.f":543 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2809 2808 2810 225 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4391)
            (pc))) "CLDRAD.f":543 682 {*jcc}
     (nil)
 -> 4391)
;;  succ:       231
;;              226 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 226, loop depth 0, maybe hot
;;  prev block 225, next block 227, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       225 (FALLTHRU)
;; bb 226 artificial_defs: { }
;; bb 226 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 2810 2809 2811 226 [bb 226] NOTE_INSN_BASIC_BLOCK)
(insn 2811 2810 2840 226 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":544 86 {*movsi_internal}
     (nil))
;;  succ:       227 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 227, loop depth 0, maybe hot
;;  prev block 226, next block 228, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       226 (FALLTHRU)
;;              228 [always] 
;; bb 227 artificial_defs: { }
;; bb 227 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 2840 2811 2812 227 128 (nil) [1 uses])
(note 2812 2840 2813 227 [bb 227] NOTE_INSN_BASIC_BLOCK)
(insn 2813 2812 2814 227 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":544 11 {*cmpsi_1}
     (nil))
(insn 2814 2813 2815 227 (set (reg:QI 1 dx [1903])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":544 678 {*setcc_qi}
     (nil))
(insn 2815 2814 2816 227 (set (reg:SI 1 dx [orig:1166 _1458 ] [1166])
        (zero_extend:SI (reg:QI 1 dx [1903]))) "CLDRAD.f":544 140 {*zero_extendqisi2}
     (nil))
(insn 2816 2815 2817 227 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1166 _1458 ] [1166])
            (const_int 0 [0]))) "CLDRAD.f":544 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2817 2816 2818 227 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4394)
            (pc))) "CLDRAD.f":544 682 {*jcc}
     (nil)
 -> 4394)
;;  succ:       229
;;              228 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 228, loop depth 0, maybe hot
;;  prev block 227, next block 229, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       227 (FALLTHRU)
;; bb 228 artificial_defs: { }
;; bb 228 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 2818 2817 2819 228 [bb 228] NOTE_INSN_BASIC_BLOCK)
(insn 2819 2818 2820 228 (set (reg:SI 1 dx [1904])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":545 86 {*movsi_internal}
     (nil))
(insn 2820 2819 2821 228 (set (reg:DI 1 dx [orig:821 _735 ] [821])
        (sign_extend:DI (reg:SI 1 dx [1904]))) "CLDRAD.f":545 149 {*extendsidi2_rex64}
     (nil))
(insn 2821 2820 2822 228 (parallel [
            (set (reg:DI 2 cx [orig:822 _736 ] [822])
                (mult:DI (reg:DI 1 dx [orig:821 _735 ] [821])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":545 349 {*muldi3_1}
     (nil))
(insn 2822 2821 2823 228 (set (reg:SI 1 dx [1905])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":545 86 {*movsi_internal}
     (nil))
(insn 2823 2822 2824 228 (set (reg:DI 1 dx [orig:823 _737 ] [823])
        (sign_extend:DI (reg:SI 1 dx [1905]))) "CLDRAD.f":545 149 {*extendsidi2_rex64}
     (nil))
(insn 2824 2823 4592 228 (parallel [
            (set (reg:DI 1 dx [orig:824 _738 ] [824])
                (plus:DI (reg:DI 1 dx [orig:823 _737 ] [823])
                    (reg:DI 2 cx [orig:822 _736 ] [822])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":545 222 {*adddi_1}
     (nil))
(insn 4592 2824 2826 228 (set (reg:DI 2 cx [orig:825 _739 ] [825])
        (plus:DI (reg:DI 1 dx [orig:824 _738 ] [824])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":545 218 {*leadi}
     (nil))
(insn 2826 4592 2827 228 (set (reg/f:DI 1 dx [1906])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":545 85 {*movdi_internal}
     (nil))
(insn 2827 2826 2828 228 (parallel [
            (set (reg:DI 2 cx [1907])
                (plus:DI (reg:DI 2 cx [orig:825 _739 ] [825])
                    (const_int 88896 [0x15b40])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":545 222 {*adddi_1}
     (nil))
(insn 2828 2827 2829 228 (set (reg:SF 21 xmm0 [orig:826 _740 ] [826])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1907])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1906])) [1 acmrdl.alwin S4 A32])) "CLDRAD.f":545 131 {*movsf_internal}
     (nil))
(insn 2829 2828 2830 228 (set (reg:SI 1 dx [1908])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":545 86 {*movsi_internal}
     (nil))
(insn 2830 2829 2831 228 (set (reg:DI 1 dx [orig:827 _741 ] [827])
        (sign_extend:DI (reg:SI 1 dx [1908]))) "CLDRAD.f":545 149 {*extendsidi2_rex64}
     (nil))
(insn 2831 2830 2832 228 (parallel [
            (set (reg:DI 2 cx [orig:828 _742 ] [828])
                (mult:DI (reg:DI 1 dx [orig:827 _741 ] [827])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":545 349 {*muldi3_1}
     (nil))
(insn 2832 2831 2833 228 (set (reg:SI 1 dx [1909])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":545 86 {*movsi_internal}
     (nil))
(insn 2833 2832 2834 228 (set (reg:DI 1 dx [orig:829 _743 ] [829])
        (sign_extend:DI (reg:SI 1 dx [1909]))) "CLDRAD.f":545 149 {*extendsidi2_rex64}
     (nil))
(insn 2834 2833 4593 228 (parallel [
            (set (reg:DI 1 dx [orig:830 _744 ] [830])
                (plus:DI (reg:DI 1 dx [orig:829 _743 ] [829])
                    (reg:DI 2 cx [orig:828 _742 ] [828])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":545 222 {*adddi_1}
     (nil))
(insn 4593 2834 2836 228 (set (reg:DI 2 cx [orig:831 _745 ] [831])
        (plus:DI (reg:DI 1 dx [orig:830 _744 ] [830])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":545 218 {*leadi}
     (nil))
(insn 2836 4593 2837 228 (set (reg:SF 21 xmm0 [orig:832 _746 ] [832])
        (mult:SF (reg:SF 21 xmm0 [orig:826 _740 ] [826])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32]))) "CLDRAD.f":545 838 {*fop_sf_comm}
     (nil))
(insn 2837 2836 2838 228 (set (reg/f:DI 1 dx [1910])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":545 85 {*movdi_internal}
     (nil))
(insn 2838 2837 2839 228 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:831 _745 ] [831])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1910])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:832 _746 ] [832])) "CLDRAD.f":545 131 {*movsf_internal}
     (nil))
(insn 2839 2838 4243 228 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":544 221 {*addsi_1}
     (nil))
(jump_insn 4243 2839 4244 228 (set (pc)
        (label_ref 2840)) "CLDRAD.f":544 683 {jump}
     (nil)
 -> 2840)
;;  succ:       227 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4244 4243 4394)
;; basic block 229, loop depth 0, maybe hot
;;  prev block 228, next block 231, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       227
;; bb 229 artificial_defs: { }
;; bb 229 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4394 4244 4393 229 259 (nil) [1 uses])
(note 4393 4394 4395 229 [bb 229] NOTE_INSN_BASIC_BLOCK)
(insn 4395 4393 2845 229 (const_int 0 [0]) "CLDRAD.f":545 718 {nop}
     (nil))
(insn 2845 4395 4245 229 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":543 221 {*addsi_1}
     (nil))
(jump_insn 4245 2845 4246 229 (set (pc)
        (label_ref 2846)) "CLDRAD.f":543 683 {jump}
     (nil)
 -> 2846)
;;  succ:       225 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4246 4245 4391)
;; basic block 231, loop depth 0, maybe hot
;;  prev block 229, next block 233, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       225
;; bb 231 artificial_defs: { }
;; bb 231 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4391 4246 4390 231 258 (nil) [1 uses])
(note 4390 4391 4392 231 [bb 231] NOTE_INSN_BASIC_BLOCK)
(insn 4392 4390 2851 231 (const_int 0 [0]) "CLDRAD.f":544 718 {nop}
     (nil))
(insn 2851 4392 2852 231 (set (reg:DI 1 dx [1911])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2852 2851 2853 231 (set (reg:DI 0 ax [1912])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2853 2852 2854 231 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":548 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2854 2853 2855 231 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":548 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2855 2854 2856 231 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1911])) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2856 2855 2857 231 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1912])) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2857 2856 2858 231 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2858 2857 2859 231 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2859 2858 2860 231 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2860 2859 2861 231 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC27") [flags 0x2]  <var_decl 0x7f2038fb4b40 *.LC27>)) "CLDRAD.f":548 85 {*movdi_internal}
     (nil))
(insn 2861 2860 2862 231 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":548 88 {*movqi_internal}
     (nil))
(call_insn 2862 2861 2863 231 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":548 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 2863 2862 2864 231 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":548 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 2864 2863 2865 231 (set (reg/f:DI 1 dx [1913])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":549 85 {*movdi_internal}
     (nil))
(insn 2865 2864 2866 231 (set (reg:DI 0 ax [1914])
        (const_int 0 [0])) "CLDRAD.f":549 85 {*movdi_internal}
     (nil))
(insn 2866 2865 4499 231 (set (reg:DI 2 cx [1915])
        (const_int 12 [0xc])) "CLDRAD.f":549 85 {*movdi_internal}
     (nil))
(insn 4499 2866 2867 231 (set (reg/f:DI 5 di [1913])
        (reg/f:DI 1 dx [1913])) "CLDRAD.f":549 85 {*movdi_internal}
     (nil))
(insn 2867 4499 4500 231 (parallel [
            (set (reg:DI 2 cx [1915])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1913])
                (plus:DI (ashift:DI (reg:DI 2 cx [1915])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1913])))
            (set (mem/c:BLK (reg/f:DI 5 di [1913]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1914]))
            (use (reg:DI 2 cx [1915]))
        ]) "CLDRAD.f":549 984 {*rep_stosdi_rex64}
     (nil))
(insn 4500 2867 2868 231 (set (reg/f:DI 1 dx [1913])
        (reg/f:DI 5 di [1913])) "CLDRAD.f":549 85 {*movdi_internal}
     (nil))
(insn 2868 4500 2869 231 (set (mem/c:SI (reg/f:DI 1 dx [1913]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1914])) "CLDRAD.f":549 86 {*movsi_internal}
     (nil))
(insn 2869 2868 2870 231 (parallel [
            (set (reg/f:DI 1 dx [1913])
                (plus:DI (reg/f:DI 1 dx [1913])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":549 222 {*adddi_1}
     (nil))
(insn 2870 2869 2871 231 (set (reg:SI 0 ax [1916])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":551 86 {*movsi_internal}
     (nil))
(insn 2871 2870 2872 231 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [1916])) "CLDRAD.f":551 86 {*movsi_internal}
     (nil))
(insn 2872 2871 2873 231 (set (reg/f:DI 0 ax [1917])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2873 2872 2874 231 (set (reg:SF 21 xmm0 [orig:833 _747 ] [833])
        (mem/c:SF (reg/f:DI 0 ax [1917]) [1 acmrdl.trdlw+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2874 2873 2875 231 (set (reg:SI 0 ax [1918])
        (fix:SI (reg:SF 21 xmm0 [orig:833 _747 ] [833]))) "CLDRAD.f":552 174 {fix_truncsfsi_sse}
     (nil))
(insn 2875 2874 2876 231 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])
        (reg:SI 0 ax [1918])) "CLDRAD.f":552 86 {*movsi_internal}
     (nil))
(insn 2876 2875 4590 231 (set (reg:SI 0 ax [1920])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":553 86 {*movsi_internal}
     (nil))
(insn 4590 2876 4591 231 (parallel [
            (set (reg:SI 1 dx [1921])
                (ashiftrt:SI (reg:SI 0 ax [1920])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":553 582 {ashrsi3_cvt}
     (nil))
(insn 4591 4590 2878 231 (parallel [
            (set (reg:SI 0 ax [1922])
                (div:SI (reg:SI 0 ax [1920])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (set (reg:SI 1 dx [1921])
                (mod:SI (reg:SI 0 ax [1920])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (use (reg:SI 1 dx [1921]))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":553 387 {*divmodsi4_noext}
     (nil))
(insn 2878 4591 2879 231 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [1921])) "CLDRAD.f":553 86 {*movsi_internal}
     (nil))
(insn 2879 2878 2880 231 (set (reg:SI 0 ax [1923])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":554 86 {*movsi_internal}
     (nil))
(insn 2880 2879 2881 231 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [1923])) "CLDRAD.f":554 86 {*movsi_internal}
     (nil))
(insn 2881 2880 2882 231 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":555 86 {*movsi_internal}
     (nil))
(insn 2882 2881 2883 231 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":556 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2883 2882 2884 231 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 2890)
            (pc))) "CLDRAD.f":556 682 {*jcc}
     (nil)
 -> 2890)
;;  succ:       233 (FALLTHRU)
;;              234
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 233, loop depth 0, maybe hot
;;  prev block 231, next block 234, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       231 (FALLTHRU)
;; bb 233 artificial_defs: { }
;; bb 233 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 2884 2883 2885 233 [bb 233] NOTE_INSN_BASIC_BLOCK)
(insn 2885 2884 2886 233 (set (reg:SI 0 ax [1924])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":557 86 {*movsi_internal}
     (nil))
(insn 2886 2885 2887 233 (parallel [
            (set (reg:SI 0 ax [orig:834 _748 ] [834])
                (minus:SI (reg:SI 0 ax [1924])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":557 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -120 [0xffffffffffffff88])) [2 itrdlw+0 S4 A32]))
        (nil)))
(insn 2887 2886 4247 233 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:834 _748 ] [834])) "CLDRAD.f":557 86 {*movsi_internal}
     (nil))
(jump_insn 4247 2887 4248 233 (set (pc)
        (label_ref 2895)) 683 {jump}
     (nil)
 -> 2895)
;;  succ:       235 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4248 4247 2890)
;; basic block 234, loop depth 0, maybe hot
;;  prev block 233, next block 235, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       231
;; bb 234 artificial_defs: { }
;; bb 234 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 2890 4248 2891 234 130 (nil) [1 uses])
(note 2891 2890 2892 234 [bb 234] NOTE_INSN_BASIC_BLOCK)
(insn 2892 2891 2893 234 (set (reg:SI 0 ax [1925])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":559 86 {*movsi_internal}
     (nil))
(insn 2893 2892 2894 234 (parallel [
            (set (reg:SI 0 ax [orig:835 _749 ] [835])
                (minus:SI (reg:SI 0 ax [1925])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":559 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 2894 2893 2895 234 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:835 _749 ] [835])) "CLDRAD.f":559 86 {*movsi_internal}
     (nil))
;;  succ:       235 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 235, loop depth 0, maybe hot
;;  prev block 234, next block 236, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       234 (FALLTHRU)
;;              233 [always] 
;; bb 235 artificial_defs: { }
;; bb 235 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 2895 2894 2896 235 131 (nil) [1 uses])
(note 2896 2895 2897 235 [bb 235] NOTE_INSN_BASIC_BLOCK)
(insn 2897 2896 2898 235 (set (reg:SI 0 ax [orig:836 _750 ] [836])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":561 86 {*movsi_internal}
     (nil))
(insn 2898 2897 2899 235 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:836 _750 ] [836])
            (const_int 0 [0]))) "CLDRAD.f":561 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2899 2898 2900 235 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 2902)
            (pc))) "CLDRAD.f":561 682 {*jcc}
     (nil)
 -> 2902)
;;  succ:       236 (FALLTHRU)
;;              237
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 236, loop depth 0, maybe hot
;;  prev block 235, next block 237, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       235 (FALLTHRU)
;; bb 236 artificial_defs: { }
;; bb 236 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 2900 2899 2901 236 [bb 236] NOTE_INSN_BASIC_BLOCK)
(insn 2901 2900 2902 236 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":561 86 {*movsi_internal}
     (nil))
;;  succ:       237 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 237, loop depth 0, maybe hot
;;  prev block 236, next block 238, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       235
;;              236 (FALLTHRU)
;; bb 237 artificial_defs: { }
;; bb 237 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 2902 2901 2903 237 132 (nil) [1 uses])
(note 2903 2902 2904 237 [bb 237] NOTE_INSN_BASIC_BLOCK)
(insn 2904 2903 2905 237 (set (reg:SI 0 ax [orig:837 _751 ] [837])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 520 [0x208]))) [2 rqstfld.iget+504 S4 A64])) "CLDRAD.f":563 86 {*movsi_internal}
     (nil))
(insn 2905 2904 4588 237 (set (reg:DI 0 ax [orig:838 _752 ] [838])
        (sign_extend:DI (reg:SI 0 ax [orig:837 _751 ] [837]))) "CLDRAD.f":563 149 {*extendsidi2_rex64}
     (nil))
(insn 4588 2905 2907 237 (set (reg:DI 1 dx [orig:839 _753 ] [839])
        (plus:DI (reg:DI 0 ax [orig:838 _752 ] [838])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":563 218 {*leadi}
     (nil))
(insn 2907 4588 2908 237 (set (reg:DI 0 ax [1926])
        (reg:DI 1 dx [orig:839 _753 ] [839])) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2908 2907 2910 237 (parallel [
            (set (reg:DI 0 ax [1927])
                (ashift:DI (reg:DI 0 ax [1926])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":563 551 {*ashldi3_1}
     (nil))
(insn 2910 2908 2911 237 (parallel [
            (set (reg:DI 0 ax [1926])
                (minus:DI (reg:DI 0 ax [1926])
                    (reg:DI 1 dx [orig:839 _753 ] [839])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":563 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:839 _753 ] [839])
            (const_int 15 [0xf]))
        (nil)))
(insn 2911 2910 2914 237 (parallel [
            (set (reg:DI 0 ax [1928])
                (ashift:DI (reg:DI 0 ax [1926])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":563 551 {*ashldi3_1}
     (nil))
(insn 2914 2911 2915 237 (parallel [
            (set (reg:DI 0 ax [1929])
                (plus:DI (reg:DI 0 ax [orig:840 _754 ] [840])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":563 222 {*adddi_1}
     (nil))
(insn 2915 2914 4589 237 (parallel [
            (set (reg:DI 0 ax [1930])
                (ashift:DI (reg:DI 0 ax [1929])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":563 551 {*ashldi3_1}
     (nil))
(insn 4589 2915 2917 237 (set (reg/f:DI 1 dx [orig:841 _755 ] [841])
        (plus:DI (reg:DI 0 ax [1930])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":563 218 {*leadi}
     (nil))
(insn 2917 4589 2918 237 (set (reg:DI 4 si [1931])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2918 2917 2919 237 (set (reg:DI 2 cx [1932])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2919 2918 2920 237 (set (reg:DI 0 ax [1933])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2920 2919 2921 237 (set (reg:DI 38 r9)
        (reg:DI 4 si [1931])) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2921 2920 2922 237 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1932])) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2922 2921 2924 237 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1933])) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2924 2922 2925 237 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 520 [0x208])))) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2925 2924 2926 237 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":563 85 {*movdi_internal}
     (nil))
(insn 2926 2925 2927 237 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":563 88 {*movqi_internal}
     (nil))
(call_insn 2927 2926 2928 237 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":563 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       238 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 238, loop depth 0, maybe hot
;;  prev block 237, next block 239, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       220
;;              237 (FALLTHRU)
;; bb 238 artificial_defs: { }
;; bb 238 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 2928 2927 2929 238 122 (nil) [1 uses])
(note 2929 2928 2930 238 [bb 238] NOTE_INSN_BASIC_BLOCK)
(insn 2930 2929 2931 238 (set (reg:SI 0 ax [orig:842 _756 ] [842])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 524 [0x20c]))) [2 rqstfld.iget+508 S4 A32])) "CLDRAD.f":567 86 {*movsi_internal}
     (nil))
(insn 2931 2930 2932 238 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:842 _756 ] [842])
            (const_int 0 [0]))) "CLDRAD.f":567 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2932 2931 2933 238 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3085)
            (pc))) "CLDRAD.f":567 682 {*jcc}
     (nil)
 -> 3085)
;;  succ:       239 (FALLTHRU)
;;              256
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 239, loop depth 0, maybe hot
;;  prev block 238, next block 240, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       238 (FALLTHRU)
;; bb 239 artificial_defs: { }
;; bb 239 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 2933 2932 2934 239 [bb 239] NOTE_INSN_BASIC_BLOCK)
(insn 2934 2933 2935 239 (set (reg/f:DI 0 ax [1934])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2935 2934 4587 239 (set (reg:SF 21 xmm0 [orig:843 _757 ] [843])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1934])
                (const_int 8 [0x8])) [1 acmrds.ardsw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 4587 2935 2937 239 (set (reg:SF 22 xmm1 [1935])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":568 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 2937 4587 2938 239 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:843 _757 ] [843])
            (reg:SF 22 xmm1 [1935]))) "CLDRAD.f":568 53 {*cmpisf}
     (nil))
(jump_insn 2938 2937 2942 239 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4249)
            (pc))) "CLDRAD.f":568 682 {*jcc}
     (nil)
 -> 4249)
;;  succ:       240 (FALLTHRU)
;;              241
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 240, loop depth 0, maybe hot
;;  prev block 239, next block 241, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       239 (FALLTHRU)
;; bb 240 artificial_defs: { }
;; bb 240 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 21 [xmm0] 22 [xmm1]
(note 2942 2938 2943 240 [bb 240] NOTE_INSN_BASIC_BLOCK)
(insn 2943 2942 2944 240 (set (reg/f:DI 0 ax [1936])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 2944 2943 2945 240 (set (reg:SF 22 xmm1 [orig:844 _758 ] [844])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1936])
                (const_int 8 [0x8])) [1 acmrds.ardsw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 2945 2944 2946 240 (set (reg:SF 21 xmm0 [1938])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":569 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 2946 2945 2947 240 (set (reg:SF 21 xmm0 [1937])
        (div:SF (reg:SF 21 xmm0 [1938])
            (reg:SF 22 xmm1 [orig:844 _758 ] [844]))) "CLDRAD.f":569 841 {*fop_sf_1}
     (nil))
(insn 2947 2946 4250 240 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1937])) "CLDRAD.f":569 131 {*movsf_internal}
     (nil))
(jump_insn 4250 2947 4251 240 (set (pc)
        (label_ref 2954)) 683 {jump}
     (nil)
 -> 2954)
;;  succ:       242 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4251 4250 4249)
;; basic block 241, loop depth 0, maybe hot
;;  prev block 240, next block 242, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       239
;; bb 241 artificial_defs: { }
;; bb 241 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 21 [xmm0]
(code_label 4249 4251 2951 241 223 (nil) [1 uses])
(note 2951 4249 4586 241 [bb 241] NOTE_INSN_BASIC_BLOCK)
(insn 4586 2951 2953 241 (set (reg:SF 21 xmm0 [1939])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":571 131 {*movsf_internal}
     (nil))
(insn 2953 4586 2954 241 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1939])) "CLDRAD.f":571 131 {*movsf_internal}
     (nil))
;;  succ:       242 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 242, loop depth 0, maybe hot
;;  prev block 241, next block 243, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       241 (FALLTHRU)
;;              240 [always] 
;; bb 242 artificial_defs: { }
;; bb 242 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(code_label 2954 2953 2955 242 136 (nil) [1 uses])
(note 2955 2954 2956 242 [bb 242] NOTE_INSN_BASIC_BLOCK)
(insn 2956 2955 2957 242 (set (reg:SI 1 dx [orig:1167 _1475 ] [1167])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":573 86 {*movsi_internal}
     (nil))
(insn 2957 2956 2958 242 (set (reg:SI 0 ax [orig:1168 _1476 ] [1168])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":573 86 {*movsi_internal}
     (nil))
(insn 2958 2957 3003 242 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1167 _1475 ] [1167])) "CLDRAD.f":573 86 {*movsi_internal}
     (nil))
;;  succ:       243 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 243, loop depth 0, maybe hot
;;  prev block 242, next block 244, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       242 (FALLTHRU)
;;              247 [always] 
;; bb 243 artificial_defs: { }
;; bb 243 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 3003 2958 2959 243 140 (nil) [1 uses])
(note 2959 3003 2960 243 [bb 243] NOTE_INSN_BASIC_BLOCK)
(insn 2960 2959 2961 243 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1168 _1476 ] [1168]))) "CLDRAD.f":573 11 {*cmpsi_1}
     (nil))
(insn 2961 2960 2962 243 (set (reg:QI 1 dx [1940])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":573 678 {*setcc_qi}
     (nil))
(insn 2962 2961 2963 243 (set (reg:SI 1 dx [orig:1169 _1478 ] [1169])
        (zero_extend:SI (reg:QI 1 dx [1940]))) "CLDRAD.f":573 140 {*zero_extendqisi2}
     (nil))
(insn 2963 2962 2964 243 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1169 _1478 ] [1169])
            (const_int 0 [0]))) "CLDRAD.f":573 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2964 2963 2965 243 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4397)
            (pc))) "CLDRAD.f":573 682 {*jcc}
     (nil)
 -> 4397)
;;  succ:       249
;;              244 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 244, loop depth 0, maybe hot
;;  prev block 243, next block 245, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       243 (FALLTHRU)
;; bb 244 artificial_defs: { }
;; bb 244 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 2965 2964 2966 244 [bb 244] NOTE_INSN_BASIC_BLOCK)
(insn 2966 2965 2997 244 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":574 86 {*movsi_internal}
     (nil))
;;  succ:       245 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 245, loop depth 0, maybe hot
;;  prev block 244, next block 246, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       244 (FALLTHRU)
;;              246 [always] 
;; bb 245 artificial_defs: { }
;; bb 245 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 2997 2966 2967 245 139 (nil) [1 uses])
(note 2967 2997 2968 245 [bb 245] NOTE_INSN_BASIC_BLOCK)
(insn 2968 2967 2969 245 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":574 11 {*cmpsi_1}
     (nil))
(insn 2969 2968 2970 245 (set (reg:QI 1 dx [1941])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":574 678 {*setcc_qi}
     (nil))
(insn 2970 2969 2971 245 (set (reg:SI 1 dx [orig:1170 _1480 ] [1170])
        (zero_extend:SI (reg:QI 1 dx [1941]))) "CLDRAD.f":574 140 {*zero_extendqisi2}
     (nil))
(insn 2971 2970 2972 245 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1170 _1480 ] [1170])
            (const_int 0 [0]))) "CLDRAD.f":574 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 2972 2971 2973 245 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4400)
            (pc))) "CLDRAD.f":574 682 {*jcc}
     (nil)
 -> 4400)
;;  succ:       247
;;              246 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 246, loop depth 0, maybe hot
;;  prev block 245, next block 247, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       245 (FALLTHRU)
;; bb 246 artificial_defs: { }
;; bb 246 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 2973 2972 2974 246 [bb 246] NOTE_INSN_BASIC_BLOCK)
(insn 2974 2973 2975 246 (set (reg:SI 1 dx [1942])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":575 86 {*movsi_internal}
     (nil))
(insn 2975 2974 2976 246 (set (reg:DI 1 dx [orig:845 _759 ] [845])
        (sign_extend:DI (reg:SI 1 dx [1942]))) "CLDRAD.f":575 149 {*extendsidi2_rex64}
     (nil))
(insn 2976 2975 2977 246 (parallel [
            (set (reg:DI 2 cx [orig:846 _760 ] [846])
                (mult:DI (reg:DI 1 dx [orig:845 _759 ] [845])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":575 349 {*muldi3_1}
     (nil))
(insn 2977 2976 2978 246 (set (reg:SI 1 dx [1943])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":575 86 {*movsi_internal}
     (nil))
(insn 2978 2977 2979 246 (set (reg:DI 1 dx [orig:847 _761 ] [847])
        (sign_extend:DI (reg:SI 1 dx [1943]))) "CLDRAD.f":575 149 {*extendsidi2_rex64}
     (nil))
(insn 2979 2978 4582 246 (parallel [
            (set (reg:DI 1 dx [orig:848 _762 ] [848])
                (plus:DI (reg:DI 1 dx [orig:847 _761 ] [847])
                    (reg:DI 2 cx [orig:846 _760 ] [846])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":575 222 {*adddi_1}
     (nil))
(insn 4582 2979 2981 246 (set (reg:DI 2 cx [orig:849 _763 ] [849])
        (plus:DI (reg:DI 1 dx [orig:848 _762 ] [848])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":575 218 {*leadi}
     (nil))
(insn 2981 4582 2982 246 (set (reg/f:DI 1 dx [1944])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":575 85 {*movdi_internal}
     (nil))
(insn 2982 2981 2983 246 (parallel [
            (set (reg:DI 2 cx [1945])
                (plus:DI (reg:DI 2 cx [orig:849 _763 ] [849])
                    (const_int 118527 [0x1ceff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":575 222 {*adddi_1}
     (nil))
(insn 2983 2982 2984 246 (set (reg:SF 21 xmm0 [orig:850 _764 ] [850])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1945])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1944])) [1 acmrds.aswout S4 A32])) "CLDRAD.f":575 131 {*movsf_internal}
     (nil))
(insn 2984 2983 2985 246 (set (reg:SF 21 xmm0 [orig:851 _765 ] [851])
        (mult:SF (reg:SF 21 xmm0 [orig:850 _764 ] [850])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32]))) "CLDRAD.f":575 838 {*fop_sf_comm}
     (nil))
(insn 2985 2984 2986 246 (set (reg:SI 1 dx [1946])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":575 86 {*movsi_internal}
     (nil))
(insn 2986 2985 2987 246 (set (reg:DI 1 dx [orig:852 _766 ] [852])
        (sign_extend:DI (reg:SI 1 dx [1946]))) "CLDRAD.f":575 149 {*extendsidi2_rex64}
     (nil))
(insn 2987 2986 2988 246 (parallel [
            (set (reg:DI 2 cx [orig:853 _767 ] [853])
                (mult:DI (reg:DI 1 dx [orig:852 _766 ] [852])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":575 349 {*muldi3_1}
     (nil))
(insn 2988 2987 2989 246 (set (reg:SI 1 dx [1947])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":575 86 {*movsi_internal}
     (nil))
(insn 2989 2988 2990 246 (set (reg:DI 1 dx [orig:854 _768 ] [854])
        (sign_extend:DI (reg:SI 1 dx [1947]))) "CLDRAD.f":575 149 {*extendsidi2_rex64}
     (nil))
(insn 2990 2989 4583 246 (parallel [
            (set (reg:DI 1 dx [orig:855 _769 ] [855])
                (plus:DI (reg:DI 1 dx [orig:854 _768 ] [854])
                    (reg:DI 2 cx [orig:853 _767 ] [853])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":575 222 {*adddi_1}
     (nil))
(insn 4583 2990 4584 246 (set (reg:DI 2 cx [orig:856 _770 ] [856])
        (plus:DI (reg:DI 1 dx [orig:855 _769 ] [855])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":575 218 {*leadi}
     (nil))
(insn 4584 4583 4585 246 (set (reg:V4SF 22 xmm1 [1948])
        (vec_merge:V4SF (vec_duplicate:V4SF (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A128]))
            (const_vector:V4SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ])
            (const_int 1 [0x1]))) "CLDRAD.f":575 2520 {vec_setv4sf_0}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 4585 4584 2994 246 (set (reg:V4SF 21 xmm0 [orig:857 _771 ] [857])
        (xor:V4SF (reg:V4SF 21 xmm0 [orig:851 _765 ] [851])
            (reg:V4SF 22 xmm1 [1948]))) "CLDRAD.f":575 1820 {*xorv4sf3}
     (nil))
(insn 2994 4585 2995 246 (set (reg/f:DI 1 dx [1949])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":575 85 {*movdi_internal}
     (nil))
(insn 2995 2994 2996 246 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:856 _770 ] [856])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1949])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:857 _771 ] [857])) "CLDRAD.f":575 131 {*movsf_internal}
     (nil))
(insn 2996 2995 4252 246 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":574 221 {*addsi_1}
     (nil))
(jump_insn 4252 2996 4253 246 (set (pc)
        (label_ref 2997)) "CLDRAD.f":574 683 {jump}
     (nil)
 -> 2997)
;;  succ:       245 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4253 4252 4400)
;; basic block 247, loop depth 0, maybe hot
;;  prev block 246, next block 249, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       245
;; bb 247 artificial_defs: { }
;; bb 247 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4400 4253 4399 247 261 (nil) [1 uses])
(note 4399 4400 4401 247 [bb 247] NOTE_INSN_BASIC_BLOCK)
(insn 4401 4399 3002 247 (const_int 0 [0]) "CLDRAD.f":575 718 {nop}
     (nil))
(insn 3002 4401 4254 247 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":573 221 {*addsi_1}
     (nil))
(jump_insn 4254 3002 4255 247 (set (pc)
        (label_ref 3003)) "CLDRAD.f":573 683 {jump}
     (nil)
 -> 3003)
;;  succ:       243 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4255 4254 4397)
;; basic block 249, loop depth 0, maybe hot
;;  prev block 247, next block 251, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       243
;; bb 249 artificial_defs: { }
;; bb 249 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4397 4255 4396 249 260 (nil) [1 uses])
(note 4396 4397 4398 249 [bb 249] NOTE_INSN_BASIC_BLOCK)
(insn 4398 4396 3008 249 (const_int 0 [0]) "CLDRAD.f":574 718 {nop}
     (nil))
(insn 3008 4398 3009 249 (set (reg:DI 1 dx [1950])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3009 3008 3010 249 (set (reg:DI 0 ax [1951])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3010 3009 3011 249 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":578 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3011 3010 3012 249 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":578 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3012 3011 3013 249 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1950])) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3013 3012 3014 249 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1951])) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3014 3013 3015 249 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3015 3014 3016 249 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3016 3015 3017 249 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3017 3016 3018 249 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC28") [flags 0x2]  <var_decl 0x7f2038fb4bd0 *.LC28>)) "CLDRAD.f":578 85 {*movdi_internal}
     (nil))
(insn 3018 3017 3019 249 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":578 88 {*movqi_internal}
     (nil))
(call_insn 3019 3018 3020 249 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":578 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3020 3019 3021 249 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":578 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3021 3020 3022 249 (set (reg/f:DI 1 dx [1952])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":579 85 {*movdi_internal}
     (nil))
(insn 3022 3021 3023 249 (set (reg:DI 0 ax [1953])
        (const_int 0 [0])) "CLDRAD.f":579 85 {*movdi_internal}
     (nil))
(insn 3023 3022 4501 249 (set (reg:DI 2 cx [1954])
        (const_int 12 [0xc])) "CLDRAD.f":579 85 {*movdi_internal}
     (nil))
(insn 4501 3023 3024 249 (set (reg/f:DI 5 di [1952])
        (reg/f:DI 1 dx [1952])) "CLDRAD.f":579 85 {*movdi_internal}
     (nil))
(insn 3024 4501 4502 249 (parallel [
            (set (reg:DI 2 cx [1954])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1952])
                (plus:DI (ashift:DI (reg:DI 2 cx [1954])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1952])))
            (set (mem/c:BLK (reg/f:DI 5 di [1952]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1953]))
            (use (reg:DI 2 cx [1954]))
        ]) "CLDRAD.f":579 984 {*rep_stosdi_rex64}
     (nil))
(insn 4502 3024 3025 249 (set (reg/f:DI 1 dx [1952])
        (reg/f:DI 5 di [1952])) "CLDRAD.f":579 85 {*movdi_internal}
     (nil))
(insn 3025 4502 3026 249 (set (mem/c:SI (reg/f:DI 1 dx [1952]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1953])) "CLDRAD.f":579 86 {*movsi_internal}
     (nil))
(insn 3026 3025 3027 249 (parallel [
            (set (reg/f:DI 1 dx [1952])
                (plus:DI (reg/f:DI 1 dx [1952])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":579 222 {*adddi_1}
     (nil))
(insn 3027 3026 3028 249 (set (reg:SI 0 ax [1955])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":581 86 {*movsi_internal}
     (nil))
(insn 3028 3027 3029 249 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [1955])) "CLDRAD.f":581 86 {*movsi_internal}
     (nil))
(insn 3029 3028 3030 249 (set (reg/f:DI 0 ax [1956])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3030 3029 3031 249 (set (reg:SF 21 xmm0 [orig:858 _772 ] [858])
        (mem/c:SF (reg/f:DI 0 ax [1956]) [1 acmrds.trdsw+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3031 3030 3032 249 (set (reg:SI 0 ax [1957])
        (fix:SI (reg:SF 21 xmm0 [orig:858 _772 ] [858]))) "CLDRAD.f":582 174 {fix_truncsfsi_sse}
     (nil))
(insn 3032 3031 3033 249 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])
        (reg:SI 0 ax [1957])) "CLDRAD.f":582 86 {*movsi_internal}
     (nil))
(insn 3033 3032 4580 249 (set (reg:SI 0 ax [1959])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":583 86 {*movsi_internal}
     (nil))
(insn 4580 3033 4581 249 (parallel [
            (set (reg:SI 1 dx [1960])
                (ashiftrt:SI (reg:SI 0 ax [1959])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":583 582 {ashrsi3_cvt}
     (nil))
(insn 4581 4580 3035 249 (parallel [
            (set (reg:SI 0 ax [1961])
                (div:SI (reg:SI 0 ax [1959])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (set (reg:SI 1 dx [1960])
                (mod:SI (reg:SI 0 ax [1959])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (use (reg:SI 1 dx [1960]))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":583 387 {*divmodsi4_noext}
     (nil))
(insn 3035 4581 3036 249 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [1960])) "CLDRAD.f":583 86 {*movsi_internal}
     (nil))
(insn 3036 3035 3037 249 (set (reg:SI 0 ax [1962])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":584 86 {*movsi_internal}
     (nil))
(insn 3037 3036 3038 249 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [1962])) "CLDRAD.f":584 86 {*movsi_internal}
     (nil))
(insn 3038 3037 3039 249 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":585 86 {*movsi_internal}
     (nil))
(insn 3039 3038 3040 249 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":586 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3040 3039 3041 249 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3047)
            (pc))) "CLDRAD.f":586 682 {*jcc}
     (nil)
 -> 3047)
;;  succ:       251 (FALLTHRU)
;;              252
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 251, loop depth 0, maybe hot
;;  prev block 249, next block 252, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       249 (FALLTHRU)
;; bb 251 artificial_defs: { }
;; bb 251 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 3041 3040 3042 251 [bb 251] NOTE_INSN_BASIC_BLOCK)
(insn 3042 3041 3043 251 (set (reg:SI 0 ax [1963])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":587 86 {*movsi_internal}
     (nil))
(insn 3043 3042 3044 251 (parallel [
            (set (reg:SI 0 ax [orig:859 _773 ] [859])
                (minus:SI (reg:SI 0 ax [1963])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":587 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -116 [0xffffffffffffff8c])) [2 itrdsw+0 S4 A32]))
        (nil)))
(insn 3044 3043 4256 251 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:859 _773 ] [859])) "CLDRAD.f":587 86 {*movsi_internal}
     (nil))
(jump_insn 4256 3044 4257 251 (set (pc)
        (label_ref 3052)) 683 {jump}
     (nil)
 -> 3052)
;;  succ:       253 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4257 4256 3047)
;; basic block 252, loop depth 0, maybe hot
;;  prev block 251, next block 253, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       249
;; bb 252 artificial_defs: { }
;; bb 252 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 3047 4257 3048 252 141 (nil) [1 uses])
(note 3048 3047 3049 252 [bb 252] NOTE_INSN_BASIC_BLOCK)
(insn 3049 3048 3050 252 (set (reg:SI 0 ax [1964])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":589 86 {*movsi_internal}
     (nil))
(insn 3050 3049 3051 252 (parallel [
            (set (reg:SI 0 ax [orig:860 _774 ] [860])
                (minus:SI (reg:SI 0 ax [1964])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":589 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 3051 3050 3052 252 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:860 _774 ] [860])) "CLDRAD.f":589 86 {*movsi_internal}
     (nil))
;;  succ:       253 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 253, loop depth 0, maybe hot
;;  prev block 252, next block 254, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       252 (FALLTHRU)
;;              251 [always] 
;; bb 253 artificial_defs: { }
;; bb 253 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 3052 3051 3053 253 142 (nil) [1 uses])
(note 3053 3052 3054 253 [bb 253] NOTE_INSN_BASIC_BLOCK)
(insn 3054 3053 3055 253 (set (reg:SI 0 ax [orig:861 _775 ] [861])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":591 86 {*movsi_internal}
     (nil))
(insn 3055 3054 3056 253 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:861 _775 ] [861])
            (const_int 0 [0]))) "CLDRAD.f":591 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3056 3055 3057 253 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 3059)
            (pc))) "CLDRAD.f":591 682 {*jcc}
     (nil)
 -> 3059)
;;  succ:       254 (FALLTHRU)
;;              255
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 254, loop depth 0, maybe hot
;;  prev block 253, next block 255, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       253 (FALLTHRU)
;; bb 254 artificial_defs: { }
;; bb 254 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 3057 3056 3058 254 [bb 254] NOTE_INSN_BASIC_BLOCK)
(insn 3058 3057 3059 254 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":591 86 {*movsi_internal}
     (nil))
;;  succ:       255 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 255, loop depth 0, maybe hot
;;  prev block 254, next block 256, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       253
;;              254 (FALLTHRU)
;; bb 255 artificial_defs: { }
;; bb 255 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 3059 3058 3060 255 143 (nil) [1 uses])
(note 3060 3059 3061 255 [bb 255] NOTE_INSN_BASIC_BLOCK)
(insn 3061 3060 3062 255 (set (reg:SI 0 ax [orig:862 _776 ] [862])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 524 [0x20c]))) [2 rqstfld.iget+508 S4 A32])) "CLDRAD.f":593 86 {*movsi_internal}
     (nil))
(insn 3062 3061 4578 255 (set (reg:DI 0 ax [orig:863 _777 ] [863])
        (sign_extend:DI (reg:SI 0 ax [orig:862 _776 ] [862]))) "CLDRAD.f":593 149 {*extendsidi2_rex64}
     (nil))
(insn 4578 3062 3064 255 (set (reg:DI 1 dx [orig:864 _778 ] [864])
        (plus:DI (reg:DI 0 ax [orig:863 _777 ] [863])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":593 218 {*leadi}
     (nil))
(insn 3064 4578 3065 255 (set (reg:DI 0 ax [1965])
        (reg:DI 1 dx [orig:864 _778 ] [864])) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3065 3064 3067 255 (parallel [
            (set (reg:DI 0 ax [1966])
                (ashift:DI (reg:DI 0 ax [1965])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":593 551 {*ashldi3_1}
     (nil))
(insn 3067 3065 3068 255 (parallel [
            (set (reg:DI 0 ax [1965])
                (minus:DI (reg:DI 0 ax [1965])
                    (reg:DI 1 dx [orig:864 _778 ] [864])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":593 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:864 _778 ] [864])
            (const_int 15 [0xf]))
        (nil)))
(insn 3068 3067 3071 255 (parallel [
            (set (reg:DI 0 ax [1967])
                (ashift:DI (reg:DI 0 ax [1965])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":593 551 {*ashldi3_1}
     (nil))
(insn 3071 3068 3072 255 (parallel [
            (set (reg:DI 0 ax [1968])
                (plus:DI (reg:DI 0 ax [orig:865 _779 ] [865])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":593 222 {*adddi_1}
     (nil))
(insn 3072 3071 4579 255 (parallel [
            (set (reg:DI 0 ax [1969])
                (ashift:DI (reg:DI 0 ax [1968])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":593 551 {*ashldi3_1}
     (nil))
(insn 4579 3072 3074 255 (set (reg/f:DI 1 dx [orig:866 _780 ] [866])
        (plus:DI (reg:DI 0 ax [1969])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":593 218 {*leadi}
     (nil))
(insn 3074 4579 3075 255 (set (reg:DI 4 si [1970])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3075 3074 3076 255 (set (reg:DI 2 cx [1971])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3076 3075 3077 255 (set (reg:DI 0 ax [1972])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3077 3076 3078 255 (set (reg:DI 38 r9)
        (reg:DI 4 si [1970])) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3078 3077 3079 255 (set (reg:DI 37 r8)
        (reg:DI 2 cx [1971])) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3079 3078 3081 255 (set (reg:DI 2 cx)
        (reg:DI 0 ax [1972])) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3081 3079 3082 255 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 524 [0x20c])))) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3082 3081 3083 255 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":593 85 {*movdi_internal}
     (nil))
(insn 3083 3082 3084 255 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":593 88 {*movqi_internal}
     (nil))
(call_insn 3084 3083 3085 255 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":593 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       256 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 256, loop depth 0, maybe hot
;;  prev block 255, next block 257, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       238
;;              255 (FALLTHRU)
;; bb 256 artificial_defs: { }
;; bb 256 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 3085 3084 3086 256 133 (nil) [1 uses])
(note 3086 3085 3087 256 [bb 256] NOTE_INSN_BASIC_BLOCK)
(insn 3087 3086 3088 256 (set (reg:SI 0 ax [orig:867 _781 ] [867])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 528 [0x210]))) [2 rqstfld.iget+512 S4 A128])) "CLDRAD.f":597 86 {*movsi_internal}
     (nil))
(insn 3088 3087 3089 256 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:867 _781 ] [867])
            (const_int 0 [0]))) "CLDRAD.f":597 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3089 3088 3090 256 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3242)
            (pc))) "CLDRAD.f":597 682 {*jcc}
     (nil)
 -> 3242)
;;  succ:       257 (FALLTHRU)
;;              274
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 257, loop depth 0, maybe hot
;;  prev block 256, next block 258, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       256 (FALLTHRU)
;; bb 257 artificial_defs: { }
;; bb 257 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 3090 3089 3091 257 [bb 257] NOTE_INSN_BASIC_BLOCK)
(insn 3091 3090 3092 257 (set (reg/f:DI 0 ax [1973])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3092 3091 4577 257 (set (reg:SF 21 xmm0 [orig:868 _782 ] [868])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1973])
                (const_int 8 [0x8])) [1 acmrdl.ardlw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 4577 3092 3094 257 (set (reg:SF 22 xmm1 [1974])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":598 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 3094 4577 3095 257 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:868 _782 ] [868])
            (reg:SF 22 xmm1 [1974]))) "CLDRAD.f":598 53 {*cmpisf}
     (nil))
(jump_insn 3095 3094 3099 257 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4258)
            (pc))) "CLDRAD.f":598 682 {*jcc}
     (nil)
 -> 4258)
;;  succ:       258 (FALLTHRU)
;;              259
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 258, loop depth 0, maybe hot
;;  prev block 257, next block 259, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       257 (FALLTHRU)
;; bb 258 artificial_defs: { }
;; bb 258 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 21 [xmm0] 22 [xmm1]
(note 3099 3095 3100 258 [bb 258] NOTE_INSN_BASIC_BLOCK)
(insn 3100 3099 3101 258 (set (reg/f:DI 0 ax [1975])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3101 3100 3102 258 (set (reg:SF 22 xmm1 [orig:869 _783 ] [869])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1975])
                (const_int 8 [0x8])) [1 acmrdl.ardlw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3102 3101 3103 258 (set (reg:SF 21 xmm0 [1977])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":599 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 3103 3102 3104 258 (set (reg:SF 21 xmm0 [1976])
        (div:SF (reg:SF 21 xmm0 [1977])
            (reg:SF 22 xmm1 [orig:869 _783 ] [869]))) "CLDRAD.f":599 841 {*fop_sf_1}
     (nil))
(insn 3104 3103 4259 258 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1976])) "CLDRAD.f":599 131 {*movsf_internal}
     (nil))
(jump_insn 4259 3104 4260 258 (set (pc)
        (label_ref 3111)) 683 {jump}
     (nil)
 -> 3111)
;;  succ:       260 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4260 4259 4258)
;; basic block 259, loop depth 0, maybe hot
;;  prev block 258, next block 260, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       257
;; bb 259 artificial_defs: { }
;; bb 259 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 21 [xmm0]
(code_label 4258 4260 3108 259 224 (nil) [1 uses])
(note 3108 4258 4576 259 [bb 259] NOTE_INSN_BASIC_BLOCK)
(insn 4576 3108 3110 259 (set (reg:SF 21 xmm0 [1978])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":601 131 {*movsf_internal}
     (nil))
(insn 3110 4576 3111 259 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [1978])) "CLDRAD.f":601 131 {*movsf_internal}
     (nil))
;;  succ:       260 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 260, loop depth 0, maybe hot
;;  prev block 259, next block 261, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       259 (FALLTHRU)
;;              258 [always] 
;; bb 260 artificial_defs: { }
;; bb 260 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(code_label 3111 3110 3112 260 147 (nil) [1 uses])
(note 3112 3111 3113 260 [bb 260] NOTE_INSN_BASIC_BLOCK)
(insn 3113 3112 3114 260 (set (reg:SI 1 dx [orig:1171 _1497 ] [1171])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":603 86 {*movsi_internal}
     (nil))
(insn 3114 3113 3115 260 (set (reg:SI 0 ax [orig:1172 _1498 ] [1172])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":603 86 {*movsi_internal}
     (nil))
(insn 3115 3114 3160 260 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1171 _1497 ] [1171])) "CLDRAD.f":603 86 {*movsi_internal}
     (nil))
;;  succ:       261 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 261, loop depth 0, maybe hot
;;  prev block 260, next block 262, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       260 (FALLTHRU)
;;              265 [always] 
;; bb 261 artificial_defs: { }
;; bb 261 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 3160 3115 3116 261 151 (nil) [1 uses])
(note 3116 3160 3117 261 [bb 261] NOTE_INSN_BASIC_BLOCK)
(insn 3117 3116 3118 261 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1172 _1498 ] [1172]))) "CLDRAD.f":603 11 {*cmpsi_1}
     (nil))
(insn 3118 3117 3119 261 (set (reg:QI 1 dx [1979])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":603 678 {*setcc_qi}
     (nil))
(insn 3119 3118 3120 261 (set (reg:SI 1 dx [orig:1173 _1500 ] [1173])
        (zero_extend:SI (reg:QI 1 dx [1979]))) "CLDRAD.f":603 140 {*zero_extendqisi2}
     (nil))
(insn 3120 3119 3121 261 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1173 _1500 ] [1173])
            (const_int 0 [0]))) "CLDRAD.f":603 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3121 3120 3122 261 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4403)
            (pc))) "CLDRAD.f":603 682 {*jcc}
     (nil)
 -> 4403)
;;  succ:       267
;;              262 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 262, loop depth 0, maybe hot
;;  prev block 261, next block 263, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       261 (FALLTHRU)
;; bb 262 artificial_defs: { }
;; bb 262 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 3122 3121 3123 262 [bb 262] NOTE_INSN_BASIC_BLOCK)
(insn 3123 3122 3154 262 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":604 86 {*movsi_internal}
     (nil))
;;  succ:       263 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 263, loop depth 0, maybe hot
;;  prev block 262, next block 264, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       262 (FALLTHRU)
;;              264 [always] 
;; bb 263 artificial_defs: { }
;; bb 263 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 3154 3123 3124 263 150 (nil) [1 uses])
(note 3124 3154 3125 263 [bb 263] NOTE_INSN_BASIC_BLOCK)
(insn 3125 3124 3126 263 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":604 11 {*cmpsi_1}
     (nil))
(insn 3126 3125 3127 263 (set (reg:QI 1 dx [1980])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":604 678 {*setcc_qi}
     (nil))
(insn 3127 3126 3128 263 (set (reg:SI 1 dx [orig:1174 _1502 ] [1174])
        (zero_extend:SI (reg:QI 1 dx [1980]))) "CLDRAD.f":604 140 {*zero_extendqisi2}
     (nil))
(insn 3128 3127 3129 263 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1174 _1502 ] [1174])
            (const_int 0 [0]))) "CLDRAD.f":604 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3129 3128 3130 263 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4406)
            (pc))) "CLDRAD.f":604 682 {*jcc}
     (nil)
 -> 4406)
;;  succ:       265
;;              264 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 264, loop depth 0, maybe hot
;;  prev block 263, next block 265, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       263 (FALLTHRU)
;; bb 264 artificial_defs: { }
;; bb 264 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 3130 3129 3131 264 [bb 264] NOTE_INSN_BASIC_BLOCK)
(insn 3131 3130 3132 264 (set (reg:SI 1 dx [1981])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":605 86 {*movsi_internal}
     (nil))
(insn 3132 3131 3133 264 (set (reg:DI 1 dx [orig:870 _784 ] [870])
        (sign_extend:DI (reg:SI 1 dx [1981]))) "CLDRAD.f":605 149 {*extendsidi2_rex64}
     (nil))
(insn 3133 3132 3134 264 (parallel [
            (set (reg:DI 2 cx [orig:871 _785 ] [871])
                (mult:DI (reg:DI 1 dx [orig:870 _784 ] [870])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":605 349 {*muldi3_1}
     (nil))
(insn 3134 3133 3135 264 (set (reg:SI 1 dx [1982])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":605 86 {*movsi_internal}
     (nil))
(insn 3135 3134 3136 264 (set (reg:DI 1 dx [orig:872 _786 ] [872])
        (sign_extend:DI (reg:SI 1 dx [1982]))) "CLDRAD.f":605 149 {*extendsidi2_rex64}
     (nil))
(insn 3136 3135 4572 264 (parallel [
            (set (reg:DI 1 dx [orig:873 _787 ] [873])
                (plus:DI (reg:DI 1 dx [orig:872 _786 ] [872])
                    (reg:DI 2 cx [orig:871 _785 ] [871])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":605 222 {*adddi_1}
     (nil))
(insn 4572 3136 3138 264 (set (reg:DI 2 cx [orig:874 _788 ] [874])
        (plus:DI (reg:DI 1 dx [orig:873 _787 ] [873])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":605 218 {*leadi}
     (nil))
(insn 3138 4572 3139 264 (set (reg/f:DI 1 dx [1983])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":605 85 {*movdi_internal}
     (nil))
(insn 3139 3138 3140 264 (parallel [
            (set (reg:DI 2 cx [1984])
                (plus:DI (reg:DI 2 cx [orig:874 _788 ] [874])
                    (const_int 118527 [0x1ceff])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":605 222 {*adddi_1}
     (nil))
(insn 3140 3139 3141 264 (set (reg:SF 21 xmm0 [orig:875 _789 ] [875])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1984])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1983])) [1 acmrdl.alwout S4 A32])) "CLDRAD.f":605 131 {*movsf_internal}
     (nil))
(insn 3141 3140 3142 264 (set (reg:SF 21 xmm0 [orig:876 _790 ] [876])
        (mult:SF (reg:SF 21 xmm0 [orig:875 _789 ] [875])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32]))) "CLDRAD.f":605 838 {*fop_sf_comm}
     (nil))
(insn 3142 3141 3143 264 (set (reg:SI 1 dx [1985])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":605 86 {*movsi_internal}
     (nil))
(insn 3143 3142 3144 264 (set (reg:DI 1 dx [orig:877 _791 ] [877])
        (sign_extend:DI (reg:SI 1 dx [1985]))) "CLDRAD.f":605 149 {*extendsidi2_rex64}
     (nil))
(insn 3144 3143 3145 264 (parallel [
            (set (reg:DI 2 cx [orig:878 _792 ] [878])
                (mult:DI (reg:DI 1 dx [orig:877 _791 ] [877])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":605 349 {*muldi3_1}
     (nil))
(insn 3145 3144 3146 264 (set (reg:SI 1 dx [1986])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":605 86 {*movsi_internal}
     (nil))
(insn 3146 3145 3147 264 (set (reg:DI 1 dx [orig:879 _793 ] [879])
        (sign_extend:DI (reg:SI 1 dx [1986]))) "CLDRAD.f":605 149 {*extendsidi2_rex64}
     (nil))
(insn 3147 3146 4573 264 (parallel [
            (set (reg:DI 1 dx [orig:880 _794 ] [880])
                (plus:DI (reg:DI 1 dx [orig:879 _793 ] [879])
                    (reg:DI 2 cx [orig:878 _792 ] [878])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":605 222 {*adddi_1}
     (nil))
(insn 4573 3147 4574 264 (set (reg:DI 2 cx [orig:881 _795 ] [881])
        (plus:DI (reg:DI 1 dx [orig:880 _794 ] [880])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":605 218 {*leadi}
     (nil))
(insn 4574 4573 4575 264 (set (reg:V4SF 22 xmm1 [1987])
        (vec_merge:V4SF (vec_duplicate:V4SF (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A128]))
            (const_vector:V4SF [
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                    (const_double:SF 0.0 [0x0.0p+0])
                ])
            (const_int 1 [0x1]))) "CLDRAD.f":605 2520 {vec_setv4sf_0}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 4575 4574 3151 264 (set (reg:V4SF 21 xmm0 [orig:882 _796 ] [882])
        (xor:V4SF (reg:V4SF 21 xmm0 [orig:876 _790 ] [876])
            (reg:V4SF 22 xmm1 [1987]))) "CLDRAD.f":605 1820 {*xorv4sf3}
     (nil))
(insn 3151 4575 3152 264 (set (reg/f:DI 1 dx [1988])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":605 85 {*movdi_internal}
     (nil))
(insn 3152 3151 3153 264 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:881 _795 ] [881])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1988])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:882 _796 ] [882])) "CLDRAD.f":605 131 {*movsf_internal}
     (nil))
(insn 3153 3152 4261 264 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":604 221 {*addsi_1}
     (nil))
(jump_insn 4261 3153 4262 264 (set (pc)
        (label_ref 3154)) "CLDRAD.f":604 683 {jump}
     (nil)
 -> 3154)
;;  succ:       263 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4262 4261 4406)
;; basic block 265, loop depth 0, maybe hot
;;  prev block 264, next block 267, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       263
;; bb 265 artificial_defs: { }
;; bb 265 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4406 4262 4405 265 263 (nil) [1 uses])
(note 4405 4406 4407 265 [bb 265] NOTE_INSN_BASIC_BLOCK)
(insn 4407 4405 3159 265 (const_int 0 [0]) "CLDRAD.f":605 718 {nop}
     (nil))
(insn 3159 4407 4263 265 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":603 221 {*addsi_1}
     (nil))
(jump_insn 4263 3159 4264 265 (set (pc)
        (label_ref 3160)) "CLDRAD.f":603 683 {jump}
     (nil)
 -> 3160)
;;  succ:       261 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4264 4263 4403)
;; basic block 267, loop depth 0, maybe hot
;;  prev block 265, next block 269, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       261
;; bb 267 artificial_defs: { }
;; bb 267 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4403 4264 4402 267 262 (nil) [1 uses])
(note 4402 4403 4404 267 [bb 267] NOTE_INSN_BASIC_BLOCK)
(insn 4404 4402 3165 267 (const_int 0 [0]) "CLDRAD.f":604 718 {nop}
     (nil))
(insn 3165 4404 3166 267 (set (reg:DI 1 dx [1989])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3166 3165 3167 267 (set (reg:DI 0 ax [1990])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3167 3166 3168 267 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":608 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3168 3167 3169 267 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":608 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3169 3168 3170 267 (set (reg:DI 38 r9)
        (reg:DI 1 dx [1989])) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3170 3169 3171 267 (set (reg:DI 37 r8)
        (reg:DI 0 ax [1990])) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3171 3170 3172 267 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3172 3171 3173 267 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3173 3172 3174 267 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3174 3173 3175 267 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC29") [flags 0x2]  <var_decl 0x7f2038fb4c60 *.LC29>)) "CLDRAD.f":608 85 {*movdi_internal}
     (nil))
(insn 3175 3174 3176 267 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":608 88 {*movqi_internal}
     (nil))
(call_insn 3176 3175 3177 267 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":608 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3177 3176 3178 267 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":608 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3178 3177 3179 267 (set (reg/f:DI 1 dx [1991])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":609 85 {*movdi_internal}
     (nil))
(insn 3179 3178 3180 267 (set (reg:DI 0 ax [1992])
        (const_int 0 [0])) "CLDRAD.f":609 85 {*movdi_internal}
     (nil))
(insn 3180 3179 4503 267 (set (reg:DI 2 cx [1993])
        (const_int 12 [0xc])) "CLDRAD.f":609 85 {*movdi_internal}
     (nil))
(insn 4503 3180 3181 267 (set (reg/f:DI 5 di [1991])
        (reg/f:DI 1 dx [1991])) "CLDRAD.f":609 85 {*movdi_internal}
     (nil))
(insn 3181 4503 4504 267 (parallel [
            (set (reg:DI 2 cx [1993])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [1991])
                (plus:DI (ashift:DI (reg:DI 2 cx [1993])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [1991])))
            (set (mem/c:BLK (reg/f:DI 5 di [1991]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [1992]))
            (use (reg:DI 2 cx [1993]))
        ]) "CLDRAD.f":609 984 {*rep_stosdi_rex64}
     (nil))
(insn 4504 3181 3182 267 (set (reg/f:DI 1 dx [1991])
        (reg/f:DI 5 di [1991])) "CLDRAD.f":609 85 {*movdi_internal}
     (nil))
(insn 3182 4504 3183 267 (set (mem/c:SI (reg/f:DI 1 dx [1991]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [1992])) "CLDRAD.f":609 86 {*movsi_internal}
     (nil))
(insn 3183 3182 3184 267 (parallel [
            (set (reg/f:DI 1 dx [1991])
                (plus:DI (reg/f:DI 1 dx [1991])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":609 222 {*adddi_1}
     (nil))
(insn 3184 3183 3185 267 (set (reg:SI 0 ax [1994])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":611 86 {*movsi_internal}
     (nil))
(insn 3185 3184 3186 267 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [1994])) "CLDRAD.f":611 86 {*movsi_internal}
     (nil))
(insn 3186 3185 3187 267 (set (reg/f:DI 0 ax [1995])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3187 3186 3188 267 (set (reg:SF 21 xmm0 [orig:883 _797 ] [883])
        (mem/c:SF (reg/f:DI 0 ax [1995]) [1 acmrdl.trdlw+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3188 3187 3189 267 (set (reg:SI 0 ax [1996])
        (fix:SI (reg:SF 21 xmm0 [orig:883 _797 ] [883]))) "CLDRAD.f":612 174 {fix_truncsfsi_sse}
     (nil))
(insn 3189 3188 3190 267 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])
        (reg:SI 0 ax [1996])) "CLDRAD.f":612 86 {*movsi_internal}
     (nil))
(insn 3190 3189 4570 267 (set (reg:SI 0 ax [1998])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":613 86 {*movsi_internal}
     (nil))
(insn 4570 3190 4571 267 (parallel [
            (set (reg:SI 1 dx [1999])
                (ashiftrt:SI (reg:SI 0 ax [1998])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":613 582 {ashrsi3_cvt}
     (nil))
(insn 4571 4570 3192 267 (parallel [
            (set (reg:SI 0 ax [2000])
                (div:SI (reg:SI 0 ax [1998])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (set (reg:SI 1 dx [1999])
                (mod:SI (reg:SI 0 ax [1998])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (use (reg:SI 1 dx [1999]))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":613 387 {*divmodsi4_noext}
     (nil))
(insn 3192 4571 3193 267 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [1999])) "CLDRAD.f":613 86 {*movsi_internal}
     (nil))
(insn 3193 3192 3194 267 (set (reg:SI 0 ax [2001])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":614 86 {*movsi_internal}
     (nil))
(insn 3194 3193 3195 267 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [2001])) "CLDRAD.f":614 86 {*movsi_internal}
     (nil))
(insn 3195 3194 3196 267 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":615 86 {*movsi_internal}
     (nil))
(insn 3196 3195 3197 267 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":616 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3197 3196 3198 267 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3204)
            (pc))) "CLDRAD.f":616 682 {*jcc}
     (nil)
 -> 3204)
;;  succ:       269 (FALLTHRU)
;;              270
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 269, loop depth 0, maybe hot
;;  prev block 267, next block 270, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       267 (FALLTHRU)
;; bb 269 artificial_defs: { }
;; bb 269 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 3198 3197 3199 269 [bb 269] NOTE_INSN_BASIC_BLOCK)
(insn 3199 3198 3200 269 (set (reg:SI 0 ax [2002])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":617 86 {*movsi_internal}
     (nil))
(insn 3200 3199 3201 269 (parallel [
            (set (reg:SI 0 ax [orig:884 _798 ] [884])
                (minus:SI (reg:SI 0 ax [2002])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":617 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -120 [0xffffffffffffff88])) [2 itrdlw+0 S4 A32]))
        (nil)))
(insn 3201 3200 4265 269 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:884 _798 ] [884])) "CLDRAD.f":617 86 {*movsi_internal}
     (nil))
(jump_insn 4265 3201 4266 269 (set (pc)
        (label_ref 3209)) 683 {jump}
     (nil)
 -> 3209)
;;  succ:       271 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4266 4265 3204)
;; basic block 270, loop depth 0, maybe hot
;;  prev block 269, next block 271, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       267
;; bb 270 artificial_defs: { }
;; bb 270 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 3204 4266 3205 270 152 (nil) [1 uses])
(note 3205 3204 3206 270 [bb 270] NOTE_INSN_BASIC_BLOCK)
(insn 3206 3205 3207 270 (set (reg:SI 0 ax [2003])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":619 86 {*movsi_internal}
     (nil))
(insn 3207 3206 3208 270 (parallel [
            (set (reg:SI 0 ax [orig:885 _799 ] [885])
                (minus:SI (reg:SI 0 ax [2003])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":619 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 3208 3207 3209 270 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:885 _799 ] [885])) "CLDRAD.f":619 86 {*movsi_internal}
     (nil))
;;  succ:       271 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 271, loop depth 0, maybe hot
;;  prev block 270, next block 272, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       270 (FALLTHRU)
;;              269 [always] 
;; bb 271 artificial_defs: { }
;; bb 271 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 3209 3208 3210 271 153 (nil) [1 uses])
(note 3210 3209 3211 271 [bb 271] NOTE_INSN_BASIC_BLOCK)
(insn 3211 3210 3212 271 (set (reg:SI 0 ax [orig:886 _800 ] [886])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":621 86 {*movsi_internal}
     (nil))
(insn 3212 3211 3213 271 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:886 _800 ] [886])
            (const_int 0 [0]))) "CLDRAD.f":621 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3213 3212 3214 271 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 3216)
            (pc))) "CLDRAD.f":621 682 {*jcc}
     (nil)
 -> 3216)
;;  succ:       272 (FALLTHRU)
;;              273
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 272, loop depth 0, maybe hot
;;  prev block 271, next block 273, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       271 (FALLTHRU)
;; bb 272 artificial_defs: { }
;; bb 272 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 3214 3213 3215 272 [bb 272] NOTE_INSN_BASIC_BLOCK)
(insn 3215 3214 3216 272 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":621 86 {*movsi_internal}
     (nil))
;;  succ:       273 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 273, loop depth 0, maybe hot
;;  prev block 272, next block 274, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       271
;;              272 (FALLTHRU)
;; bb 273 artificial_defs: { }
;; bb 273 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 3216 3215 3217 273 154 (nil) [1 uses])
(note 3217 3216 3218 273 [bb 273] NOTE_INSN_BASIC_BLOCK)
(insn 3218 3217 3219 273 (set (reg:SI 0 ax [orig:887 _801 ] [887])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 528 [0x210]))) [2 rqstfld.iget+512 S4 A128])) "CLDRAD.f":623 86 {*movsi_internal}
     (nil))
(insn 3219 3218 4568 273 (set (reg:DI 0 ax [orig:888 _802 ] [888])
        (sign_extend:DI (reg:SI 0 ax [orig:887 _801 ] [887]))) "CLDRAD.f":623 149 {*extendsidi2_rex64}
     (nil))
(insn 4568 3219 3221 273 (set (reg:DI 1 dx [orig:889 _803 ] [889])
        (plus:DI (reg:DI 0 ax [orig:888 _802 ] [888])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":623 218 {*leadi}
     (nil))
(insn 3221 4568 3222 273 (set (reg:DI 0 ax [2004])
        (reg:DI 1 dx [orig:889 _803 ] [889])) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3222 3221 3224 273 (parallel [
            (set (reg:DI 0 ax [2005])
                (ashift:DI (reg:DI 0 ax [2004])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":623 551 {*ashldi3_1}
     (nil))
(insn 3224 3222 3225 273 (parallel [
            (set (reg:DI 0 ax [2004])
                (minus:DI (reg:DI 0 ax [2004])
                    (reg:DI 1 dx [orig:889 _803 ] [889])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":623 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:889 _803 ] [889])
            (const_int 15 [0xf]))
        (nil)))
(insn 3225 3224 3228 273 (parallel [
            (set (reg:DI 0 ax [2006])
                (ashift:DI (reg:DI 0 ax [2004])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":623 551 {*ashldi3_1}
     (nil))
(insn 3228 3225 3229 273 (parallel [
            (set (reg:DI 0 ax [2007])
                (plus:DI (reg:DI 0 ax [orig:890 _804 ] [890])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":623 222 {*adddi_1}
     (nil))
(insn 3229 3228 4569 273 (parallel [
            (set (reg:DI 0 ax [2008])
                (ashift:DI (reg:DI 0 ax [2007])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":623 551 {*ashldi3_1}
     (nil))
(insn 4569 3229 3231 273 (set (reg/f:DI 1 dx [orig:891 _805 ] [891])
        (plus:DI (reg:DI 0 ax [2008])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":623 218 {*leadi}
     (nil))
(insn 3231 4569 3232 273 (set (reg:DI 4 si [2009])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3232 3231 3233 273 (set (reg:DI 2 cx [2010])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3233 3232 3234 273 (set (reg:DI 0 ax [2011])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3234 3233 3235 273 (set (reg:DI 38 r9)
        (reg:DI 4 si [2009])) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3235 3234 3236 273 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2010])) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3236 3235 3238 273 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2011])) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3238 3236 3239 273 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 528 [0x210])))) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3239 3238 3240 273 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":623 85 {*movdi_internal}
     (nil))
(insn 3240 3239 3241 273 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":623 88 {*movqi_internal}
     (nil))
(call_insn 3241 3240 3242 273 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":623 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       274 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 274, loop depth 0, maybe hot
;;  prev block 273, next block 275, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       256
;;              273 (FALLTHRU)
;; bb 274 artificial_defs: { }
;; bb 274 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 3242 3241 3243 274 144 (nil) [1 uses])
(note 3243 3242 3244 274 [bb 274] NOTE_INSN_BASIC_BLOCK)
(insn 3244 3243 3245 274 (set (reg:SI 0 ax [orig:892 _806 ] [892])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 532 [0x214]))) [2 rqstfld.iget+516 S4 A32])) "CLDRAD.f":627 86 {*movsi_internal}
     (nil))
(insn 3245 3244 3246 274 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:892 _806 ] [892])
            (const_int 0 [0]))) "CLDRAD.f":627 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3246 3245 3247 274 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3397)
            (pc))) "CLDRAD.f":627 682 {*jcc}
     (nil)
 -> 3397)
;;  succ:       275 (FALLTHRU)
;;              292
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 275, loop depth 0, maybe hot
;;  prev block 274, next block 276, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       274 (FALLTHRU)
;; bb 275 artificial_defs: { }
;; bb 275 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 3247 3246 3248 275 [bb 275] NOTE_INSN_BASIC_BLOCK)
(insn 3248 3247 3249 275 (set (reg/f:DI 0 ax [2012])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3249 3248 4567 275 (set (reg:SF 21 xmm0 [orig:893 _807 ] [893])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [2012])
                (const_int 8 [0x8])) [1 acmrds.ardsw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 4567 3249 3251 275 (set (reg:SF 22 xmm1 [2013])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":628 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 3251 4567 3252 275 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:893 _807 ] [893])
            (reg:SF 22 xmm1 [2013]))) "CLDRAD.f":628 53 {*cmpisf}
     (nil))
(jump_insn 3252 3251 3256 275 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4267)
            (pc))) "CLDRAD.f":628 682 {*jcc}
     (nil)
 -> 4267)
;;  succ:       276 (FALLTHRU)
;;              277
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 276, loop depth 0, maybe hot
;;  prev block 275, next block 277, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       275 (FALLTHRU)
;; bb 276 artificial_defs: { }
;; bb 276 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 21 [xmm0] 22 [xmm1]
(note 3256 3252 3257 276 [bb 276] NOTE_INSN_BASIC_BLOCK)
(insn 3257 3256 3258 276 (set (reg/f:DI 0 ax [2014])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3258 3257 3259 276 (set (reg:SF 22 xmm1 [orig:894 _808 ] [894])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [2014])
                (const_int 8 [0x8])) [1 acmrds.ardsw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3259 3258 3260 276 (set (reg:SF 21 xmm0 [2016])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":629 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 3260 3259 3261 276 (set (reg:SF 21 xmm0 [2015])
        (div:SF (reg:SF 21 xmm0 [2016])
            (reg:SF 22 xmm1 [orig:894 _808 ] [894]))) "CLDRAD.f":629 841 {*fop_sf_1}
     (nil))
(insn 3261 3260 4268 276 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [2015])) "CLDRAD.f":629 131 {*movsf_internal}
     (nil))
(jump_insn 4268 3261 4269 276 (set (pc)
        (label_ref 3268)) 683 {jump}
     (nil)
 -> 3268)
;;  succ:       278 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4269 4268 4267)
;; basic block 277, loop depth 0, maybe hot
;;  prev block 276, next block 278, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       275
;; bb 277 artificial_defs: { }
;; bb 277 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 21 [xmm0]
(code_label 4267 4269 3265 277 225 (nil) [1 uses])
(note 3265 4267 4566 277 [bb 277] NOTE_INSN_BASIC_BLOCK)
(insn 4566 3265 3267 277 (set (reg:SF 21 xmm0 [2017])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":631 131 {*movsf_internal}
     (nil))
(insn 3267 4566 3268 277 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [2017])) "CLDRAD.f":631 131 {*movsf_internal}
     (nil))
;;  succ:       278 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 278, loop depth 0, maybe hot
;;  prev block 277, next block 279, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       277 (FALLTHRU)
;;              276 [always] 
;; bb 278 artificial_defs: { }
;; bb 278 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(code_label 3268 3267 3269 278 158 (nil) [1 uses])
(note 3269 3268 3270 278 [bb 278] NOTE_INSN_BASIC_BLOCK)
(insn 3270 3269 3271 278 (set (reg:SI 1 dx [orig:1175 _1519 ] [1175])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":633 86 {*movsi_internal}
     (nil))
(insn 3271 3270 3272 278 (set (reg:SI 0 ax [orig:1176 _1520 ] [1176])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":633 86 {*movsi_internal}
     (nil))
(insn 3272 3271 3315 278 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1175 _1519 ] [1175])) "CLDRAD.f":633 86 {*movsi_internal}
     (nil))
;;  succ:       279 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 279, loop depth 0, maybe hot
;;  prev block 278, next block 280, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       278 (FALLTHRU)
;;              283 [always] 
;; bb 279 artificial_defs: { }
;; bb 279 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 3315 3272 3273 279 162 (nil) [1 uses])
(note 3273 3315 3274 279 [bb 279] NOTE_INSN_BASIC_BLOCK)
(insn 3274 3273 3275 279 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1176 _1520 ] [1176]))) "CLDRAD.f":633 11 {*cmpsi_1}
     (nil))
(insn 3275 3274 3276 279 (set (reg:QI 1 dx [2018])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":633 678 {*setcc_qi}
     (nil))
(insn 3276 3275 3277 279 (set (reg:SI 1 dx [orig:1177 _1522 ] [1177])
        (zero_extend:SI (reg:QI 1 dx [2018]))) "CLDRAD.f":633 140 {*zero_extendqisi2}
     (nil))
(insn 3277 3276 3278 279 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1177 _1522 ] [1177])
            (const_int 0 [0]))) "CLDRAD.f":633 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3278 3277 3279 279 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4409)
            (pc))) "CLDRAD.f":633 682 {*jcc}
     (nil)
 -> 4409)
;;  succ:       285
;;              280 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 280, loop depth 0, maybe hot
;;  prev block 279, next block 281, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       279 (FALLTHRU)
;; bb 280 artificial_defs: { }
;; bb 280 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 3279 3278 3280 280 [bb 280] NOTE_INSN_BASIC_BLOCK)
(insn 3280 3279 3309 280 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":634 86 {*movsi_internal}
     (nil))
;;  succ:       281 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 281, loop depth 0, maybe hot
;;  prev block 280, next block 282, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       280 (FALLTHRU)
;;              282 [always] 
;; bb 281 artificial_defs: { }
;; bb 281 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 3309 3280 3281 281 161 (nil) [1 uses])
(note 3281 3309 3282 281 [bb 281] NOTE_INSN_BASIC_BLOCK)
(insn 3282 3281 3283 281 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":634 11 {*cmpsi_1}
     (nil))
(insn 3283 3282 3284 281 (set (reg:QI 1 dx [2019])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":634 678 {*setcc_qi}
     (nil))
(insn 3284 3283 3285 281 (set (reg:SI 1 dx [orig:1178 _1524 ] [1178])
        (zero_extend:SI (reg:QI 1 dx [2019]))) "CLDRAD.f":634 140 {*zero_extendqisi2}
     (nil))
(insn 3285 3284 3286 281 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1178 _1524 ] [1178])
            (const_int 0 [0]))) "CLDRAD.f":634 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3286 3285 3287 281 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4412)
            (pc))) "CLDRAD.f":634 682 {*jcc}
     (nil)
 -> 4412)
;;  succ:       283
;;              282 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 282, loop depth 0, maybe hot
;;  prev block 281, next block 283, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       281 (FALLTHRU)
;; bb 282 artificial_defs: { }
;; bb 282 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 3287 3286 3288 282 [bb 282] NOTE_INSN_BASIC_BLOCK)
(insn 3288 3287 3289 282 (set (reg:SI 1 dx [2020])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":635 86 {*movsi_internal}
     (nil))
(insn 3289 3288 3290 282 (set (reg:DI 1 dx [orig:895 _809 ] [895])
        (sign_extend:DI (reg:SI 1 dx [2020]))) "CLDRAD.f":635 149 {*extendsidi2_rex64}
     (nil))
(insn 3290 3289 3291 282 (parallel [
            (set (reg:DI 2 cx [orig:896 _810 ] [896])
                (mult:DI (reg:DI 1 dx [orig:895 _809 ] [895])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":635 349 {*muldi3_1}
     (nil))
(insn 3291 3290 3292 282 (set (reg:SI 1 dx [2021])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":635 86 {*movsi_internal}
     (nil))
(insn 3292 3291 3293 282 (set (reg:DI 1 dx [orig:897 _811 ] [897])
        (sign_extend:DI (reg:SI 1 dx [2021]))) "CLDRAD.f":635 149 {*extendsidi2_rex64}
     (nil))
(insn 3293 3292 4564 282 (parallel [
            (set (reg:DI 1 dx [orig:898 _812 ] [898])
                (plus:DI (reg:DI 1 dx [orig:897 _811 ] [897])
                    (reg:DI 2 cx [orig:896 _810 ] [896])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":635 222 {*adddi_1}
     (nil))
(insn 4564 3293 3295 282 (set (reg:DI 2 cx [orig:899 _813 ] [899])
        (plus:DI (reg:DI 1 dx [orig:898 _812 ] [898])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":635 218 {*leadi}
     (nil))
(insn 3295 4564 3296 282 (set (reg/f:DI 1 dx [2022])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":635 85 {*movdi_internal}
     (nil))
(insn 3296 3295 3297 282 (parallel [
            (set (reg:DI 2 cx [2023])
                (plus:DI (reg:DI 2 cx [orig:899 _813 ] [899])
                    (const_int 148158 [0x242be])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":635 222 {*adddi_1}
     (nil))
(insn 3297 3296 3298 282 (set (reg:SF 21 xmm0 [orig:900 _814 ] [900])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2023])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2022])) [1 acmrds.aswtoa S4 A32])) "CLDRAD.f":635 131 {*movsf_internal}
     (nil))
(insn 3298 3297 3299 282 (set (reg:SI 1 dx [2024])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":635 86 {*movsi_internal}
     (nil))
(insn 3299 3298 3300 282 (set (reg:DI 1 dx [orig:901 _815 ] [901])
        (sign_extend:DI (reg:SI 1 dx [2024]))) "CLDRAD.f":635 149 {*extendsidi2_rex64}
     (nil))
(insn 3300 3299 3301 282 (parallel [
            (set (reg:DI 2 cx [orig:902 _816 ] [902])
                (mult:DI (reg:DI 1 dx [orig:901 _815 ] [901])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":635 349 {*muldi3_1}
     (nil))
(insn 3301 3300 3302 282 (set (reg:SI 1 dx [2025])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":635 86 {*movsi_internal}
     (nil))
(insn 3302 3301 3303 282 (set (reg:DI 1 dx [orig:903 _817 ] [903])
        (sign_extend:DI (reg:SI 1 dx [2025]))) "CLDRAD.f":635 149 {*extendsidi2_rex64}
     (nil))
(insn 3303 3302 4565 282 (parallel [
            (set (reg:DI 1 dx [orig:904 _818 ] [904])
                (plus:DI (reg:DI 1 dx [orig:903 _817 ] [903])
                    (reg:DI 2 cx [orig:902 _816 ] [902])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":635 222 {*adddi_1}
     (nil))
(insn 4565 3303 3305 282 (set (reg:DI 2 cx [orig:905 _819 ] [905])
        (plus:DI (reg:DI 1 dx [orig:904 _818 ] [904])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":635 218 {*leadi}
     (nil))
(insn 3305 4565 3306 282 (set (reg:SF 21 xmm0 [orig:906 _820 ] [906])
        (mult:SF (reg:SF 21 xmm0 [orig:900 _814 ] [900])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32]))) "CLDRAD.f":635 838 {*fop_sf_comm}
     (nil))
(insn 3306 3305 3307 282 (set (reg/f:DI 1 dx [2026])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":635 85 {*movdi_internal}
     (nil))
(insn 3307 3306 3308 282 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:905 _819 ] [905])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2026])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:906 _820 ] [906])) "CLDRAD.f":635 131 {*movsf_internal}
     (nil))
(insn 3308 3307 4270 282 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":634 221 {*addsi_1}
     (nil))
(jump_insn 4270 3308 4271 282 (set (pc)
        (label_ref 3309)) "CLDRAD.f":634 683 {jump}
     (nil)
 -> 3309)
;;  succ:       281 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4271 4270 4412)
;; basic block 283, loop depth 0, maybe hot
;;  prev block 282, next block 285, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       281
;; bb 283 artificial_defs: { }
;; bb 283 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4412 4271 4411 283 265 (nil) [1 uses])
(note 4411 4412 4413 283 [bb 283] NOTE_INSN_BASIC_BLOCK)
(insn 4413 4411 3314 283 (const_int 0 [0]) "CLDRAD.f":635 718 {nop}
     (nil))
(insn 3314 4413 4272 283 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":633 221 {*addsi_1}
     (nil))
(jump_insn 4272 3314 4273 283 (set (pc)
        (label_ref 3315)) "CLDRAD.f":633 683 {jump}
     (nil)
 -> 3315)
;;  succ:       279 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4273 4272 4409)
;; basic block 285, loop depth 0, maybe hot
;;  prev block 283, next block 287, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       279
;; bb 285 artificial_defs: { }
;; bb 285 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4409 4273 4408 285 264 (nil) [1 uses])
(note 4408 4409 4410 285 [bb 285] NOTE_INSN_BASIC_BLOCK)
(insn 4410 4408 3320 285 (const_int 0 [0]) "CLDRAD.f":634 718 {nop}
     (nil))
(insn 3320 4410 3321 285 (set (reg:DI 1 dx [2027])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3321 3320 3322 285 (set (reg:DI 0 ax [2028])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3322 3321 3323 285 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":638 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3323 3322 3324 285 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":638 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3324 3323 3325 285 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2027])) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3325 3324 3326 285 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2028])) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3326 3325 3327 285 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3327 3326 3328 285 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3328 3327 3329 285 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3329 3328 3330 285 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC30") [flags 0x2]  <var_decl 0x7f2038fb4cf0 *.LC30>)) "CLDRAD.f":638 85 {*movdi_internal}
     (nil))
(insn 3330 3329 3331 285 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":638 88 {*movqi_internal}
     (nil))
(call_insn 3331 3330 3332 285 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":638 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3332 3331 3333 285 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":638 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3333 3332 3334 285 (set (reg/f:DI 1 dx [2029])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":639 85 {*movdi_internal}
     (nil))
(insn 3334 3333 3335 285 (set (reg:DI 0 ax [2030])
        (const_int 0 [0])) "CLDRAD.f":639 85 {*movdi_internal}
     (nil))
(insn 3335 3334 4505 285 (set (reg:DI 2 cx [2031])
        (const_int 12 [0xc])) "CLDRAD.f":639 85 {*movdi_internal}
     (nil))
(insn 4505 3335 3336 285 (set (reg/f:DI 5 di [2029])
        (reg/f:DI 1 dx [2029])) "CLDRAD.f":639 85 {*movdi_internal}
     (nil))
(insn 3336 4505 4506 285 (parallel [
            (set (reg:DI 2 cx [2031])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2029])
                (plus:DI (ashift:DI (reg:DI 2 cx [2031])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2029])))
            (set (mem/c:BLK (reg/f:DI 5 di [2029]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2030]))
            (use (reg:DI 2 cx [2031]))
        ]) "CLDRAD.f":639 984 {*rep_stosdi_rex64}
     (nil))
(insn 4506 3336 3337 285 (set (reg/f:DI 1 dx [2029])
        (reg/f:DI 5 di [2029])) "CLDRAD.f":639 85 {*movdi_internal}
     (nil))
(insn 3337 4506 3338 285 (set (mem/c:SI (reg/f:DI 1 dx [2029]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2030])) "CLDRAD.f":639 86 {*movsi_internal}
     (nil))
(insn 3338 3337 3339 285 (parallel [
            (set (reg/f:DI 1 dx [2029])
                (plus:DI (reg/f:DI 1 dx [2029])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":639 222 {*adddi_1}
     (nil))
(insn 3339 3338 3340 285 (set (reg:SI 0 ax [2032])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":641 86 {*movsi_internal}
     (nil))
(insn 3340 3339 3341 285 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [2032])) "CLDRAD.f":641 86 {*movsi_internal}
     (nil))
(insn 3341 3340 3342 285 (set (reg/f:DI 0 ax [2033])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3342 3341 3343 285 (set (reg:SF 21 xmm0 [orig:907 _821 ] [907])
        (mem/c:SF (reg/f:DI 0 ax [2033]) [1 acmrds.trdsw+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3343 3342 3344 285 (set (reg:SI 0 ax [2034])
        (fix:SI (reg:SF 21 xmm0 [orig:907 _821 ] [907]))) "CLDRAD.f":642 174 {fix_truncsfsi_sse}
     (nil))
(insn 3344 3343 3345 285 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])
        (reg:SI 0 ax [2034])) "CLDRAD.f":642 86 {*movsi_internal}
     (nil))
(insn 3345 3344 4562 285 (set (reg:SI 0 ax [2036])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":643 86 {*movsi_internal}
     (nil))
(insn 4562 3345 4563 285 (parallel [
            (set (reg:SI 1 dx [2037])
                (ashiftrt:SI (reg:SI 0 ax [2036])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":643 582 {ashrsi3_cvt}
     (nil))
(insn 4563 4562 3347 285 (parallel [
            (set (reg:SI 0 ax [2038])
                (div:SI (reg:SI 0 ax [2036])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (set (reg:SI 1 dx [2037])
                (mod:SI (reg:SI 0 ax [2036])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (use (reg:SI 1 dx [2037]))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":643 387 {*divmodsi4_noext}
     (nil))
(insn 3347 4563 3348 285 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [2037])) "CLDRAD.f":643 86 {*movsi_internal}
     (nil))
(insn 3348 3347 3349 285 (set (reg:SI 0 ax [2039])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":644 86 {*movsi_internal}
     (nil))
(insn 3349 3348 3350 285 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [2039])) "CLDRAD.f":644 86 {*movsi_internal}
     (nil))
(insn 3350 3349 3351 285 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":645 86 {*movsi_internal}
     (nil))
(insn 3351 3350 3352 285 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":646 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3352 3351 3353 285 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3359)
            (pc))) "CLDRAD.f":646 682 {*jcc}
     (nil)
 -> 3359)
;;  succ:       287 (FALLTHRU)
;;              288
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 287, loop depth 0, maybe hot
;;  prev block 285, next block 288, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       285 (FALLTHRU)
;; bb 287 artificial_defs: { }
;; bb 287 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 3353 3352 3354 287 [bb 287] NOTE_INSN_BASIC_BLOCK)
(insn 3354 3353 3355 287 (set (reg:SI 0 ax [2040])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":647 86 {*movsi_internal}
     (nil))
(insn 3355 3354 3356 287 (parallel [
            (set (reg:SI 0 ax [orig:908 _822 ] [908])
                (minus:SI (reg:SI 0 ax [2040])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -148 [0xffffffffffffff6c])) [2 itrdsw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":647 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -116 [0xffffffffffffff8c])) [2 itrdsw+0 S4 A32]))
        (nil)))
(insn 3356 3355 4274 287 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:908 _822 ] [908])) "CLDRAD.f":647 86 {*movsi_internal}
     (nil))
(jump_insn 4274 3356 4275 287 (set (pc)
        (label_ref 3364)) 683 {jump}
     (nil)
 -> 3364)
;;  succ:       289 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4275 4274 3359)
;; basic block 288, loop depth 0, maybe hot
;;  prev block 287, next block 289, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       285
;; bb 288 artificial_defs: { }
;; bb 288 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 3359 4275 3360 288 163 (nil) [1 uses])
(note 3360 3359 3361 288 [bb 288] NOTE_INSN_BASIC_BLOCK)
(insn 3361 3360 3362 288 (set (reg:SI 0 ax [2041])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":649 86 {*movsi_internal}
     (nil))
(insn 3362 3361 3363 288 (parallel [
            (set (reg:SI 0 ax [orig:909 _823 ] [909])
                (minus:SI (reg:SI 0 ax [2041])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":649 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 3363 3362 3364 288 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:909 _823 ] [909])) "CLDRAD.f":649 86 {*movsi_internal}
     (nil))
;;  succ:       289 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 289, loop depth 0, maybe hot
;;  prev block 288, next block 290, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       288 (FALLTHRU)
;;              287 [always] 
;; bb 289 artificial_defs: { }
;; bb 289 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 3364 3363 3365 289 164 (nil) [1 uses])
(note 3365 3364 3366 289 [bb 289] NOTE_INSN_BASIC_BLOCK)
(insn 3366 3365 3367 289 (set (reg:SI 0 ax [orig:910 _824 ] [910])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":651 86 {*movsi_internal}
     (nil))
(insn 3367 3366 3368 289 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:910 _824 ] [910])
            (const_int 0 [0]))) "CLDRAD.f":651 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3368 3367 3369 289 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 3371)
            (pc))) "CLDRAD.f":651 682 {*jcc}
     (nil)
 -> 3371)
;;  succ:       290 (FALLTHRU)
;;              291
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 290, loop depth 0, maybe hot
;;  prev block 289, next block 291, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       289 (FALLTHRU)
;; bb 290 artificial_defs: { }
;; bb 290 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 3369 3368 3370 290 [bb 290] NOTE_INSN_BASIC_BLOCK)
(insn 3370 3369 3371 290 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":651 86 {*movsi_internal}
     (nil))
;;  succ:       291 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 291, loop depth 0, maybe hot
;;  prev block 290, next block 292, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       289
;;              290 (FALLTHRU)
;; bb 291 artificial_defs: { }
;; bb 291 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 3371 3370 3372 291 165 (nil) [1 uses])
(note 3372 3371 3373 291 [bb 291] NOTE_INSN_BASIC_BLOCK)
(insn 3373 3372 3374 291 (set (reg:SI 0 ax [orig:911 _825 ] [911])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 532 [0x214]))) [2 rqstfld.iget+516 S4 A32])) "CLDRAD.f":653 86 {*movsi_internal}
     (nil))
(insn 3374 3373 4560 291 (set (reg:DI 0 ax [orig:912 _826 ] [912])
        (sign_extend:DI (reg:SI 0 ax [orig:911 _825 ] [911]))) "CLDRAD.f":653 149 {*extendsidi2_rex64}
     (nil))
(insn 4560 3374 3376 291 (set (reg:DI 1 dx [orig:913 _827 ] [913])
        (plus:DI (reg:DI 0 ax [orig:912 _826 ] [912])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":653 218 {*leadi}
     (nil))
(insn 3376 4560 3377 291 (set (reg:DI 0 ax [2042])
        (reg:DI 1 dx [orig:913 _827 ] [913])) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3377 3376 3379 291 (parallel [
            (set (reg:DI 0 ax [2043])
                (ashift:DI (reg:DI 0 ax [2042])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":653 551 {*ashldi3_1}
     (nil))
(insn 3379 3377 3380 291 (parallel [
            (set (reg:DI 0 ax [2042])
                (minus:DI (reg:DI 0 ax [2042])
                    (reg:DI 1 dx [orig:913 _827 ] [913])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":653 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:913 _827 ] [913])
            (const_int 15 [0xf]))
        (nil)))
(insn 3380 3379 3383 291 (parallel [
            (set (reg:DI 0 ax [2044])
                (ashift:DI (reg:DI 0 ax [2042])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":653 551 {*ashldi3_1}
     (nil))
(insn 3383 3380 3384 291 (parallel [
            (set (reg:DI 0 ax [2045])
                (plus:DI (reg:DI 0 ax [orig:914 _828 ] [914])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":653 222 {*adddi_1}
     (nil))
(insn 3384 3383 4561 291 (parallel [
            (set (reg:DI 0 ax [2046])
                (ashift:DI (reg:DI 0 ax [2045])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":653 551 {*ashldi3_1}
     (nil))
(insn 4561 3384 3386 291 (set (reg/f:DI 1 dx [orig:915 _829 ] [915])
        (plus:DI (reg:DI 0 ax [2046])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":653 218 {*leadi}
     (nil))
(insn 3386 4561 3387 291 (set (reg:DI 4 si [2047])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3387 3386 3388 291 (set (reg:DI 2 cx [2048])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3388 3387 3389 291 (set (reg:DI 0 ax [2049])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3389 3388 3390 291 (set (reg:DI 38 r9)
        (reg:DI 4 si [2047])) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3390 3389 3391 291 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2048])) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3391 3390 3393 291 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2049])) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3393 3391 3394 291 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 532 [0x214])))) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3394 3393 3395 291 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":653 85 {*movdi_internal}
     (nil))
(insn 3395 3394 3396 291 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":653 88 {*movqi_internal}
     (nil))
(call_insn 3396 3395 3397 291 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":653 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       292 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 292, loop depth 0, maybe hot
;;  prev block 291, next block 293, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       274
;;              291 (FALLTHRU)
;; bb 292 artificial_defs: { }
;; bb 292 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 3397 3396 3398 292 155 (nil) [1 uses])
(note 3398 3397 3399 292 [bb 292] NOTE_INSN_BASIC_BLOCK)
(insn 3399 3398 3400 292 (set (reg:SI 0 ax [orig:916 _830 ] [916])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 536 [0x218]))) [2 rqstfld.iget+520 S4 A64])) "CLDRAD.f":657 86 {*movsi_internal}
     (nil))
(insn 3400 3399 3401 292 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:916 _830 ] [916])
            (const_int 0 [0]))) "CLDRAD.f":657 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3401 3400 3402 292 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3552)
            (pc))) "CLDRAD.f":657 682 {*jcc}
     (nil)
 -> 3552)
;;  succ:       293 (FALLTHRU)
;;              310
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 293, loop depth 0, maybe hot
;;  prev block 292, next block 294, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       292 (FALLTHRU)
;; bb 293 artificial_defs: { }
;; bb 293 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 3402 3401 3403 293 [bb 293] NOTE_INSN_BASIC_BLOCK)
(insn 3403 3402 3404 293 (set (reg/f:DI 0 ax [2050])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3404 3403 4559 293 (set (reg:SF 21 xmm0 [orig:917 _831 ] [917])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [2050])
                (const_int 8 [0x8])) [1 acmrdl.ardlw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 4559 3404 3406 293 (set (reg:SF 22 xmm1 [2051])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":658 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 3406 4559 3407 293 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:917 _831 ] [917])
            (reg:SF 22 xmm1 [2051]))) "CLDRAD.f":658 53 {*cmpisf}
     (nil))
(jump_insn 3407 3406 3411 293 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4276)
            (pc))) "CLDRAD.f":658 682 {*jcc}
     (nil)
 -> 4276)
;;  succ:       294 (FALLTHRU)
;;              295
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 294, loop depth 0, maybe hot
;;  prev block 293, next block 295, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       293 (FALLTHRU)
;; bb 294 artificial_defs: { }
;; bb 294 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 21 [xmm0] 22 [xmm1]
(note 3411 3407 3412 294 [bb 294] NOTE_INSN_BASIC_BLOCK)
(insn 3412 3411 3413 294 (set (reg/f:DI 0 ax [2052])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3413 3412 3414 294 (set (reg:SF 22 xmm1 [orig:918 _832 ] [918])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [2052])
                (const_int 8 [0x8])) [1 acmrdl.ardlw+0 S4 A64])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3414 3413 3415 294 (set (reg:SF 21 xmm0 [2054])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":659 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 3415 3414 3416 294 (set (reg:SF 21 xmm0 [2053])
        (div:SF (reg:SF 21 xmm0 [2054])
            (reg:SF 22 xmm1 [orig:918 _832 ] [918]))) "CLDRAD.f":659 841 {*fop_sf_1}
     (nil))
(insn 3416 3415 4277 294 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [2053])) "CLDRAD.f":659 131 {*movsf_internal}
     (nil))
(jump_insn 4277 3416 4278 294 (set (pc)
        (label_ref 3423)) 683 {jump}
     (nil)
 -> 3423)
;;  succ:       296 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4278 4277 4276)
;; basic block 295, loop depth 0, maybe hot
;;  prev block 294, next block 296, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       293
;; bb 295 artificial_defs: { }
;; bb 295 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 21 [xmm0]
(code_label 4276 4278 3420 295 226 (nil) [1 uses])
(note 3420 4276 4558 295 [bb 295] NOTE_INSN_BASIC_BLOCK)
(insn 4558 3420 3422 295 (set (reg:SF 21 xmm0 [2055])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":661 131 {*movsf_internal}
     (nil))
(insn 3422 4558 3423 295 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32])
        (reg:SF 21 xmm0 [2055])) "CLDRAD.f":661 131 {*movsf_internal}
     (nil))
;;  succ:       296 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 296, loop depth 0, maybe hot
;;  prev block 295, next block 297, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       295 (FALLTHRU)
;;              294 [always] 
;; bb 296 artificial_defs: { }
;; bb 296 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(code_label 3423 3422 3424 296 169 (nil) [1 uses])
(note 3424 3423 3425 296 [bb 296] NOTE_INSN_BASIC_BLOCK)
(insn 3425 3424 3426 296 (set (reg:SI 1 dx [orig:1179 _1541 ] [1179])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":663 86 {*movsi_internal}
     (nil))
(insn 3426 3425 3427 296 (set (reg:SI 0 ax [orig:1180 _1542 ] [1180])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":663 86 {*movsi_internal}
     (nil))
(insn 3427 3426 3470 296 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1179 _1541 ] [1179])) "CLDRAD.f":663 86 {*movsi_internal}
     (nil))
;;  succ:       297 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 297, loop depth 0, maybe hot
;;  prev block 296, next block 298, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       296 (FALLTHRU)
;;              301 [always] 
;; bb 297 artificial_defs: { }
;; bb 297 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 3470 3427 3428 297 173 (nil) [1 uses])
(note 3428 3470 3429 297 [bb 297] NOTE_INSN_BASIC_BLOCK)
(insn 3429 3428 3430 297 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1180 _1542 ] [1180]))) "CLDRAD.f":663 11 {*cmpsi_1}
     (nil))
(insn 3430 3429 3431 297 (set (reg:QI 1 dx [2056])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":663 678 {*setcc_qi}
     (nil))
(insn 3431 3430 3432 297 (set (reg:SI 1 dx [orig:1181 _1544 ] [1181])
        (zero_extend:SI (reg:QI 1 dx [2056]))) "CLDRAD.f":663 140 {*zero_extendqisi2}
     (nil))
(insn 3432 3431 3433 297 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1181 _1544 ] [1181])
            (const_int 0 [0]))) "CLDRAD.f":663 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3433 3432 3434 297 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4415)
            (pc))) "CLDRAD.f":663 682 {*jcc}
     (nil)
 -> 4415)
;;  succ:       303
;;              298 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 298, loop depth 0, maybe hot
;;  prev block 297, next block 299, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       297 (FALLTHRU)
;; bb 298 artificial_defs: { }
;; bb 298 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 3434 3433 3435 298 [bb 298] NOTE_INSN_BASIC_BLOCK)
(insn 3435 3434 3464 298 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":664 86 {*movsi_internal}
     (nil))
;;  succ:       299 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 299, loop depth 0, maybe hot
;;  prev block 298, next block 300, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       298 (FALLTHRU)
;;              300 [always] 
;; bb 299 artificial_defs: { }
;; bb 299 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 3464 3435 3436 299 172 (nil) [1 uses])
(note 3436 3464 3437 299 [bb 299] NOTE_INSN_BASIC_BLOCK)
(insn 3437 3436 3438 299 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":664 11 {*cmpsi_1}
     (nil))
(insn 3438 3437 3439 299 (set (reg:QI 1 dx [2057])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":664 678 {*setcc_qi}
     (nil))
(insn 3439 3438 3440 299 (set (reg:SI 1 dx [orig:1182 _1546 ] [1182])
        (zero_extend:SI (reg:QI 1 dx [2057]))) "CLDRAD.f":664 140 {*zero_extendqisi2}
     (nil))
(insn 3440 3439 3441 299 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1182 _1546 ] [1182])
            (const_int 0 [0]))) "CLDRAD.f":664 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3441 3440 3442 299 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4418)
            (pc))) "CLDRAD.f":664 682 {*jcc}
     (nil)
 -> 4418)
;;  succ:       301
;;              300 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 300, loop depth 0, maybe hot
;;  prev block 299, next block 301, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       299 (FALLTHRU)
;; bb 300 artificial_defs: { }
;; bb 300 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 3442 3441 3443 300 [bb 300] NOTE_INSN_BASIC_BLOCK)
(insn 3443 3442 3444 300 (set (reg:SI 1 dx [2058])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":665 86 {*movsi_internal}
     (nil))
(insn 3444 3443 3445 300 (set (reg:DI 1 dx [orig:919 _833 ] [919])
        (sign_extend:DI (reg:SI 1 dx [2058]))) "CLDRAD.f":665 149 {*extendsidi2_rex64}
     (nil))
(insn 3445 3444 3446 300 (parallel [
            (set (reg:DI 2 cx [orig:920 _834 ] [920])
                (mult:DI (reg:DI 1 dx [orig:919 _833 ] [919])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":665 349 {*muldi3_1}
     (nil))
(insn 3446 3445 3447 300 (set (reg:SI 1 dx [2059])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":665 86 {*movsi_internal}
     (nil))
(insn 3447 3446 3448 300 (set (reg:DI 1 dx [orig:921 _835 ] [921])
        (sign_extend:DI (reg:SI 1 dx [2059]))) "CLDRAD.f":665 149 {*extendsidi2_rex64}
     (nil))
(insn 3448 3447 4556 300 (parallel [
            (set (reg:DI 1 dx [orig:922 _836 ] [922])
                (plus:DI (reg:DI 1 dx [orig:921 _835 ] [921])
                    (reg:DI 2 cx [orig:920 _834 ] [920])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":665 222 {*adddi_1}
     (nil))
(insn 4556 3448 3450 300 (set (reg:DI 2 cx [orig:923 _837 ] [923])
        (plus:DI (reg:DI 1 dx [orig:922 _836 ] [922])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":665 218 {*leadi}
     (nil))
(insn 3450 4556 3451 300 (set (reg/f:DI 1 dx [2060])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":665 85 {*movdi_internal}
     (nil))
(insn 3451 3450 3452 300 (parallel [
            (set (reg:DI 2 cx [2061])
                (plus:DI (reg:DI 2 cx [orig:923 _837 ] [923])
                    (const_int 148158 [0x242be])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":665 222 {*adddi_1}
     (nil))
(insn 3452 3451 3453 300 (set (reg:SF 21 xmm0 [orig:924 _838 ] [924])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2061])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2060])) [1 acmrdl.alwtoa S4 A32])) "CLDRAD.f":665 131 {*movsf_internal}
     (nil))
(insn 3453 3452 3454 300 (set (reg:SI 1 dx [2062])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":665 86 {*movsi_internal}
     (nil))
(insn 3454 3453 3455 300 (set (reg:DI 1 dx [orig:925 _839 ] [925])
        (sign_extend:DI (reg:SI 1 dx [2062]))) "CLDRAD.f":665 149 {*extendsidi2_rex64}
     (nil))
(insn 3455 3454 3456 300 (parallel [
            (set (reg:DI 2 cx [orig:926 _840 ] [926])
                (mult:DI (reg:DI 1 dx [orig:925 _839 ] [925])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":665 349 {*muldi3_1}
     (nil))
(insn 3456 3455 3457 300 (set (reg:SI 1 dx [2063])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":665 86 {*movsi_internal}
     (nil))
(insn 3457 3456 3458 300 (set (reg:DI 1 dx [orig:927 _841 ] [927])
        (sign_extend:DI (reg:SI 1 dx [2063]))) "CLDRAD.f":665 149 {*extendsidi2_rex64}
     (nil))
(insn 3458 3457 4557 300 (parallel [
            (set (reg:DI 1 dx [orig:928 _842 ] [928])
                (plus:DI (reg:DI 1 dx [orig:927 _841 ] [927])
                    (reg:DI 2 cx [orig:926 _840 ] [926])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":665 222 {*adddi_1}
     (nil))
(insn 4557 3458 3460 300 (set (reg:DI 2 cx [orig:929 _843 ] [929])
        (plus:DI (reg:DI 1 dx [orig:928 _842 ] [928])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":665 218 {*leadi}
     (nil))
(insn 3460 4557 3461 300 (set (reg:SF 21 xmm0 [orig:930 _844 ] [930])
        (mult:SF (reg:SF 21 xmm0 [orig:924 _838 ] [924])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 rrnum+0 S4 A32]))) "CLDRAD.f":665 838 {*fop_sf_comm}
     (nil))
(insn 3461 3460 3462 300 (set (reg/f:DI 1 dx [2064])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":665 85 {*movdi_internal}
     (nil))
(insn 3462 3461 3463 300 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:929 _843 ] [929])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2064])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:930 _844 ] [930])) "CLDRAD.f":665 131 {*movsf_internal}
     (nil))
(insn 3463 3462 4279 300 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":664 221 {*addsi_1}
     (nil))
(jump_insn 4279 3463 4280 300 (set (pc)
        (label_ref 3464)) "CLDRAD.f":664 683 {jump}
     (nil)
 -> 3464)
;;  succ:       299 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4280 4279 4418)
;; basic block 301, loop depth 0, maybe hot
;;  prev block 300, next block 303, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       299
;; bb 301 artificial_defs: { }
;; bb 301 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4418 4280 4417 301 267 (nil) [1 uses])
(note 4417 4418 4419 301 [bb 301] NOTE_INSN_BASIC_BLOCK)
(insn 4419 4417 3469 301 (const_int 0 [0]) "CLDRAD.f":665 718 {nop}
     (nil))
(insn 3469 4419 4281 301 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":663 221 {*addsi_1}
     (nil))
(jump_insn 4281 3469 4282 301 (set (pc)
        (label_ref 3470)) "CLDRAD.f":663 683 {jump}
     (nil)
 -> 3470)
;;  succ:       297 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4282 4281 4415)
;; basic block 303, loop depth 0, maybe hot
;;  prev block 301, next block 305, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       297
;; bb 303 artificial_defs: { }
;; bb 303 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4415 4282 4414 303 266 (nil) [1 uses])
(note 4414 4415 4416 303 [bb 303] NOTE_INSN_BASIC_BLOCK)
(insn 4416 4414 3475 303 (const_int 0 [0]) "CLDRAD.f":664 718 {nop}
     (nil))
(insn 3475 4416 3476 303 (set (reg:DI 1 dx [2065])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3476 3475 3477 303 (set (reg:DI 0 ax [2066])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3477 3476 3478 303 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":668 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3478 3477 3479 303 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":668 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3479 3478 3480 303 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2065])) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3480 3479 3481 303 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2066])) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3481 3480 3482 303 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3482 3481 3483 303 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3483 3482 3484 303 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3484 3483 3485 303 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC31") [flags 0x2]  <var_decl 0x7f2038fb4d80 *.LC31>)) "CLDRAD.f":668 85 {*movdi_internal}
     (nil))
(insn 3485 3484 3486 303 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":668 88 {*movqi_internal}
     (nil))
(call_insn 3486 3485 3487 303 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":668 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3487 3486 3488 303 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":668 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3488 3487 3489 303 (set (reg/f:DI 1 dx [2067])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":669 85 {*movdi_internal}
     (nil))
(insn 3489 3488 3490 303 (set (reg:DI 0 ax [2068])
        (const_int 0 [0])) "CLDRAD.f":669 85 {*movdi_internal}
     (nil))
(insn 3490 3489 4507 303 (set (reg:DI 2 cx [2069])
        (const_int 12 [0xc])) "CLDRAD.f":669 85 {*movdi_internal}
     (nil))
(insn 4507 3490 3491 303 (set (reg/f:DI 5 di [2067])
        (reg/f:DI 1 dx [2067])) "CLDRAD.f":669 85 {*movdi_internal}
     (nil))
(insn 3491 4507 4508 303 (parallel [
            (set (reg:DI 2 cx [2069])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2067])
                (plus:DI (ashift:DI (reg:DI 2 cx [2069])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2067])))
            (set (mem/c:BLK (reg/f:DI 5 di [2067]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2068]))
            (use (reg:DI 2 cx [2069]))
        ]) "CLDRAD.f":669 984 {*rep_stosdi_rex64}
     (nil))
(insn 4508 3491 3492 303 (set (reg/f:DI 1 dx [2067])
        (reg/f:DI 5 di [2067])) "CLDRAD.f":669 85 {*movdi_internal}
     (nil))
(insn 3492 4508 3493 303 (set (mem/c:SI (reg/f:DI 1 dx [2067]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2068])) "CLDRAD.f":669 86 {*movsi_internal}
     (nil))
(insn 3493 3492 3494 303 (parallel [
            (set (reg/f:DI 1 dx [2067])
                (plus:DI (reg/f:DI 1 dx [2067])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":669 222 {*adddi_1}
     (nil))
(insn 3494 3493 3495 303 (set (reg:SI 0 ax [2070])
        (mem/c:SI (symbol_ref:DI ("outfil_") [flags 0x2]  <var_decl 0x7f20392c1c60 outfil>) [2 outfil.itag+0 S4 A128])) "CLDRAD.f":671 86 {*movsi_internal}
     (nil))
(insn 3495 3494 3496 303 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])
        (reg:SI 0 ax [2070])) "CLDRAD.f":671 86 {*movsi_internal}
     (nil))
(insn 3496 3495 3497 303 (set (reg/f:DI 0 ax [2071])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":1 85 {*movdi_internal}
     (nil))
(insn 3497 3496 3498 303 (set (reg:SF 21 xmm0 [orig:931 _845 ] [931])
        (mem/c:SF (reg/f:DI 0 ax [2071]) [1 acmrdl.trdlw+0 S4 A128])) "CLDRAD.f":1 131 {*movsf_internal}
     (nil))
(insn 3498 3497 3499 303 (set (reg:SI 0 ax [2072])
        (fix:SI (reg:SF 21 xmm0 [orig:931 _845 ] [931]))) "CLDRAD.f":672 174 {fix_truncsfsi_sse}
     (nil))
(insn 3499 3498 3500 303 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])
        (reg:SI 0 ax [2072])) "CLDRAD.f":672 86 {*movsi_internal}
     (nil))
(insn 3500 3499 4554 303 (set (reg:SI 0 ax [2074])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":673 86 {*movsi_internal}
     (nil))
(insn 4554 3500 4555 303 (parallel [
            (set (reg:SI 1 dx [2075])
                (ashiftrt:SI (reg:SI 0 ax [2074])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":673 582 {ashrsi3_cvt}
     (nil))
(insn 4555 4554 3502 303 (parallel [
            (set (reg:SI 0 ax [2076])
                (div:SI (reg:SI 0 ax [2074])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (set (reg:SI 1 dx [2075])
                (mod:SI (reg:SI 0 ax [2074])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (use (reg:SI 1 dx [2075]))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":673 387 {*divmodsi4_noext}
     (nil))
(insn 3502 4555 3503 303 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
        (reg:SI 1 dx [2075])) "CLDRAD.f":673 86 {*movsi_internal}
     (nil))
(insn 3503 3502 3504 303 (set (reg:SI 0 ax [2077])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":674 86 {*movsi_internal}
     (nil))
(insn 3504 3503 3505 303 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55288 [0xd7f8]))) [2 rqstfld.id+72 S4 A64])
        (reg:SI 0 ax [2077])) "CLDRAD.f":674 86 {*movsi_internal}
     (nil))
(insn 3505 3504 3506 303 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55292 [0xd7fc]))) [2 rqstfld.id+76 S4 A32])
        (const_int 3 [0x3])) "CLDRAD.f":675 86 {*movsi_internal}
     (nil))
(insn 3506 3505 3507 303 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])
            (const_int 0 [0]))) "CLDRAD.f":676 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3507 3506 3508 303 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 3514)
            (pc))) "CLDRAD.f":676 682 {*jcc}
     (nil)
 -> 3514)
;;  succ:       305 (FALLTHRU)
;;              306
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 305, loop depth 0, maybe hot
;;  prev block 303, next block 306, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       303 (FALLTHRU)
;; bb 305 artificial_defs: { }
;; bb 305 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 3508 3507 3509 305 [bb 305] NOTE_INSN_BASIC_BLOCK)
(insn 3509 3508 3510 305 (set (reg:SI 0 ax [2078])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":677 86 {*movsi_internal}
     (nil))
(insn 3510 3509 3511 305 (parallel [
            (set (reg:SI 0 ax [orig:932 _846 ] [932])
                (minus:SI (reg:SI 0 ax [2078])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -152 [0xffffffffffffff68])) [2 itrdlw+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":677 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -120 [0xffffffffffffff88])) [2 itrdlw+0 S4 A32]))
        (nil)))
(insn 3511 3510 4283 305 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:932 _846 ] [932])) "CLDRAD.f":677 86 {*movsi_internal}
     (nil))
(jump_insn 4283 3511 4284 305 (set (pc)
        (label_ref 3519)) 683 {jump}
     (nil)
 -> 3519)
;;  succ:       307 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4284 4283 3514)
;; basic block 306, loop depth 0, maybe hot
;;  prev block 305, next block 307, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       303
;; bb 306 artificial_defs: { }
;; bb 306 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 3514 4284 3515 306 174 (nil) [1 uses])
(note 3515 3514 3516 306 [bb 306] NOTE_INSN_BASIC_BLOCK)
(insn 3516 3515 3517 306 (set (reg:SI 0 ax [2079])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 ifhr+0 S4 A32])) "CLDRAD.f":679 86 {*movsi_internal}
     (nil))
(insn 3517 3516 3518 306 (parallel [
            (set (reg:SI 0 ax [orig:933 _847 ] [933])
                (minus:SI (reg:SI 0 ax [2079])
                    (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -128 [0xffffffffffffff80])) [2 ifincr+0 S4 A32])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":679 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -88 [0xffffffffffffffa8])) [2 ifhr+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [2 ifincr+0 S4 A32]))
        (nil)))
(insn 3518 3517 3519 306 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (reg:SI 0 ax [orig:933 _847 ] [933])) "CLDRAD.f":679 86 {*movsi_internal}
     (nil))
;;  succ:       307 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 307, loop depth 0, maybe hot
;;  prev block 306, next block 308, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       306 (FALLTHRU)
;;              305 [always] 
;; bb 307 artificial_defs: { }
;; bb 307 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 3519 3518 3520 307 175 (nil) [1 uses])
(note 3520 3519 3521 307 [bb 307] NOTE_INSN_BASIC_BLOCK)
(insn 3521 3520 3522 307 (set (reg:SI 0 ax [orig:934 _848 ] [934])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])) "CLDRAD.f":681 86 {*movsi_internal}
     (nil))
(insn 3522 3521 3523 307 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:SI 0 ax [orig:934 _848 ] [934])
            (const_int 0 [0]))) "CLDRAD.f":681 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3523 3522 3524 307 (set (pc)
        (if_then_else (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (label_ref 3526)
            (pc))) "CLDRAD.f":681 682 {*jcc}
     (nil)
 -> 3526)
;;  succ:       308 (FALLTHRU)
;;              309
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 308, loop depth 0, maybe hot
;;  prev block 307, next block 309, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       307 (FALLTHRU)
;; bb 308 artificial_defs: { }
;; bb 308 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 3524 3523 3525 308 [bb 308] NOTE_INSN_BASIC_BLOCK)
(insn 3525 3524 3526 308 (set (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 55284 [0xd7f4]))) [2 rqstfld.id+68 S4 A32])
        (const_int 0 [0])) "CLDRAD.f":681 86 {*movsi_internal}
     (nil))
;;  succ:       309 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 309, loop depth 0, maybe hot
;;  prev block 308, next block 310, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       307
;;              308 (FALLTHRU)
;; bb 309 artificial_defs: { }
;; bb 309 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 3526 3525 3527 309 176 (nil) [1 uses])
(note 3527 3526 3528 309 [bb 309] NOTE_INSN_BASIC_BLOCK)
(insn 3528 3527 3529 309 (set (reg:SI 0 ax [orig:935 _849 ] [935])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 536 [0x218]))) [2 rqstfld.iget+520 S4 A64])) "CLDRAD.f":683 86 {*movsi_internal}
     (nil))
(insn 3529 3528 4552 309 (set (reg:DI 0 ax [orig:936 _850 ] [936])
        (sign_extend:DI (reg:SI 0 ax [orig:935 _849 ] [935]))) "CLDRAD.f":683 149 {*extendsidi2_rex64}
     (nil))
(insn 4552 3529 3531 309 (set (reg:DI 1 dx [orig:937 _851 ] [937])
        (plus:DI (reg:DI 0 ax [orig:936 _850 ] [936])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":683 218 {*leadi}
     (nil))
(insn 3531 4552 3532 309 (set (reg:DI 0 ax [2080])
        (reg:DI 1 dx [orig:937 _851 ] [937])) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3532 3531 3534 309 (parallel [
            (set (reg:DI 0 ax [2081])
                (ashift:DI (reg:DI 0 ax [2080])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":683 551 {*ashldi3_1}
     (nil))
(insn 3534 3532 3535 309 (parallel [
            (set (reg:DI 0 ax [2080])
                (minus:DI (reg:DI 0 ax [2080])
                    (reg:DI 1 dx [orig:937 _851 ] [937])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":683 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:937 _851 ] [937])
            (const_int 15 [0xf]))
        (nil)))
(insn 3535 3534 3538 309 (parallel [
            (set (reg:DI 0 ax [2082])
                (ashift:DI (reg:DI 0 ax [2080])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":683 551 {*ashldi3_1}
     (nil))
(insn 3538 3535 3539 309 (parallel [
            (set (reg:DI 0 ax [2083])
                (plus:DI (reg:DI 0 ax [orig:938 _852 ] [938])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":683 222 {*adddi_1}
     (nil))
(insn 3539 3538 4553 309 (parallel [
            (set (reg:DI 0 ax [2084])
                (ashift:DI (reg:DI 0 ax [2083])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":683 551 {*ashldi3_1}
     (nil))
(insn 4553 3539 3541 309 (set (reg/f:DI 1 dx [orig:939 _853 ] [939])
        (plus:DI (reg:DI 0 ax [2084])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":683 218 {*leadi}
     (nil))
(insn 3541 4553 3542 309 (set (reg:DI 4 si [2085])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3542 3541 3543 309 (set (reg:DI 2 cx [2086])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3543 3542 3544 309 (set (reg:DI 0 ax [2087])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3544 3543 3545 309 (set (reg:DI 38 r9)
        (reg:DI 4 si [2085])) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3545 3544 3546 309 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2086])) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3546 3545 3548 309 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2087])) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3548 3546 3549 309 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 536 [0x218])))) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3549 3548 3550 309 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":683 85 {*movdi_internal}
     (nil))
(insn 3550 3549 3551 309 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":683 88 {*movqi_internal}
     (nil))
(call_insn 3551 3550 3552 309 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":683 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       310 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 310, loop depth 0, maybe hot
;;  prev block 309, next block 311, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       292
;;              309 (FALLTHRU)
;; bb 310 artificial_defs: { }
;; bb 310 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 3552 3551 3553 310 166 (nil) [1 uses])
(note 3553 3552 3554 310 [bb 310] NOTE_INSN_BASIC_BLOCK)
(insn 3554 3553 3555 310 (set (reg:SI 0 ax [orig:940 _854 ] [940])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 636 [0x27c]))) [2 rqstfld.iget+620 S4 A32])) "CLDRAD.f":687 86 {*movsi_internal}
     (nil))
(insn 3555 3554 3556 310 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:940 _854 ] [940])
            (const_int 0 [0]))) "CLDRAD.f":687 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3556 3555 3557 310 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3707)
            (pc))) "CLDRAD.f":687 682 {*jcc}
     (nil)
 -> 3707)
;;  succ:       311 (FALLTHRU)
;;              323
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 311, loop depth 0, maybe hot
;;  prev block 310, next block 312, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       310 (FALLTHRU)
;; bb 311 artificial_defs: { }
;; bb 311 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(note 3557 3556 3558 311 [bb 311] NOTE_INSN_BASIC_BLOCK)
(insn 3558 3557 3559 311 (set (reg:SI 1 dx [orig:1183 _1561 ] [1183])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":688 86 {*movsi_internal}
     (nil))
(insn 3559 3558 3560 311 (set (reg:SI 0 ax [orig:1184 _1562 ] [1184])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":688 86 {*movsi_internal}
     (nil))
(insn 3560 3559 3659 311 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1183 _1561 ] [1183])) "CLDRAD.f":688 86 {*movsi_internal}
     (nil))
;;  succ:       312 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 312, loop depth 0, maybe hot
;;  prev block 311, next block 313, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       311 (FALLTHRU)
;;              319 [always] 
;; bb 312 artificial_defs: { }
;; bb 312 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 3659 3560 3561 312 184 (nil) [1 uses])
(note 3561 3659 3562 312 [bb 312] NOTE_INSN_BASIC_BLOCK)
(insn 3562 3561 3563 312 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1184 _1562 ] [1184]))) "CLDRAD.f":688 11 {*cmpsi_1}
     (nil))
(insn 3563 3562 3564 312 (set (reg:QI 1 dx [2088])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":688 678 {*setcc_qi}
     (nil))
(insn 3564 3563 3565 312 (set (reg:SI 1 dx [orig:1185 _1564 ] [1185])
        (zero_extend:SI (reg:QI 1 dx [2088]))) "CLDRAD.f":688 140 {*zero_extendqisi2}
     (nil))
(insn 3565 3564 3566 312 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1185 _1564 ] [1185])
            (const_int 0 [0]))) "CLDRAD.f":688 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3566 3565 3567 312 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4421)
            (pc))) "CLDRAD.f":688 682 {*jcc}
     (nil)
 -> 4421)
;;  succ:       321
;;              313 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 313, loop depth 0, maybe hot
;;  prev block 312, next block 314, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       312 (FALLTHRU)
;; bb 313 artificial_defs: { }
;; bb 313 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 3567 3566 3568 313 [bb 313] NOTE_INSN_BASIC_BLOCK)
(insn 3568 3567 3653 313 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":689 86 {*movsi_internal}
     (nil))
;;  succ:       314 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 314, loop depth 0, maybe hot
;;  prev block 313, next block 315, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       313 (FALLTHRU)
;;              318 [always] 
;; bb 314 artificial_defs: { }
;; bb 314 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 3653 3568 3569 314 183 (nil) [1 uses])
(note 3569 3653 3570 314 [bb 314] NOTE_INSN_BASIC_BLOCK)
(insn 3570 3569 3571 314 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":689 11 {*cmpsi_1}
     (nil))
(insn 3571 3570 3572 314 (set (reg:QI 1 dx [2089])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":689 678 {*setcc_qi}
     (nil))
(insn 3572 3571 3573 314 (set (reg:SI 1 dx [orig:1186 _1566 ] [1186])
        (zero_extend:SI (reg:QI 1 dx [2089]))) "CLDRAD.f":689 140 {*zero_extendqisi2}
     (nil))
(insn 3573 3572 3574 314 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1186 _1566 ] [1186])
            (const_int 0 [0]))) "CLDRAD.f":689 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3574 3573 3575 314 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4424)
            (pc))) "CLDRAD.f":689 682 {*jcc}
     (nil)
 -> 4424)
;;  succ:       319
;;              315 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 315, loop depth 0, maybe hot
;;  prev block 314, next block 316, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       314 (FALLTHRU)
;; bb 315 artificial_defs: { }
;; bb 315 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 3575 3574 3576 315 [bb 315] NOTE_INSN_BASIC_BLOCK)
(insn 3576 3575 3577 315 (set (reg:SI 1 dx [2090])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":690 86 {*movsi_internal}
     (nil))
(insn 3577 3576 3578 315 (set (reg:DI 1 dx [orig:941 _855 ] [941])
        (sign_extend:DI (reg:SI 1 dx [2090]))) "CLDRAD.f":690 149 {*extendsidi2_rex64}
     (nil))
(insn 3578 3577 3579 315 (parallel [
            (set (reg:DI 2 cx [orig:942 _856 ] [942])
                (mult:DI (reg:DI 1 dx [orig:941 _855 ] [941])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":690 349 {*muldi3_1}
     (nil))
(insn 3579 3578 3580 315 (set (reg:SI 1 dx [2091])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":690 86 {*movsi_internal}
     (nil))
(insn 3580 3579 3581 315 (set (reg:DI 1 dx [orig:943 _857 ] [943])
        (sign_extend:DI (reg:SI 1 dx [2091]))) "CLDRAD.f":690 149 {*extendsidi2_rex64}
     (nil))
(insn 3581 3580 4551 315 (parallel [
            (set (reg:DI 1 dx [orig:944 _858 ] [944])
                (plus:DI (reg:DI 1 dx [orig:943 _857 ] [943])
                    (reg:DI 2 cx [orig:942 _856 ] [942])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":690 222 {*adddi_1}
     (nil))
(insn 4551 3581 3583 315 (set (reg:DI 2 cx [orig:945 _859 ] [945])
        (plus:DI (reg:DI 1 dx [orig:944 _858 ] [944])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":690 218 {*leadi}
     (nil))
(insn 3583 4551 3584 315 (set (reg/f:DI 1 dx [2092])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":690 85 {*movdi_internal}
     (nil))
(insn 3584 3583 3585 315 (parallel [
            (set (reg:DI 2 cx [2093])
                (plus:DI (reg:DI 2 cx [orig:945 _859 ] [945])
                    (const_int 504587 [0x7b30b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":690 222 {*adddi_1}
     (nil))
(insn 3585 3584 3586 315 (set (reg:SF 21 xmm0 [orig:946 _860 ] [946])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2093])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2092])) [1 phys.czmean S4 A32])) "CLDRAD.f":690 131 {*movsf_internal}
     (nil))
(insn 3586 3585 3587 315 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:946 _860 ] [946])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32]))) "CLDRAD.f":690 53 {*cmpisf}
     (nil))
(jump_insn 3587 3586 3591 315 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4285)
            (pc))) "CLDRAD.f":690 682 {*jcc}
     (nil)
 -> 4285)
;;  succ:       316 (FALLTHRU)
;;              317
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 316, loop depth 0, maybe hot
;;  prev block 315, next block 317, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       315 (FALLTHRU)
;; bb 316 artificial_defs: { }
;; bb 316 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 3591 3587 3592 316 [bb 316] NOTE_INSN_BASIC_BLOCK)
(insn 3592 3591 3593 316 (set (reg:SI 1 dx [2094])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":691 86 {*movsi_internal}
     (nil))
(insn 3593 3592 3594 316 (set (reg:DI 1 dx [orig:947 _861 ] [947])
        (sign_extend:DI (reg:SI 1 dx [2094]))) "CLDRAD.f":691 149 {*extendsidi2_rex64}
     (nil))
(insn 3594 3593 3595 316 (parallel [
            (set (reg:DI 2 cx [orig:948 _862 ] [948])
                (mult:DI (reg:DI 1 dx [orig:947 _861 ] [947])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":691 349 {*muldi3_1}
     (nil))
(insn 3595 3594 3596 316 (set (reg:SI 1 dx [2095])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":691 86 {*movsi_internal}
     (nil))
(insn 3596 3595 3597 316 (set (reg:DI 1 dx [orig:949 _863 ] [949])
        (sign_extend:DI (reg:SI 1 dx [2095]))) "CLDRAD.f":691 149 {*extendsidi2_rex64}
     (nil))
(insn 3597 3596 4549 316 (parallel [
            (set (reg:DI 1 dx [orig:950 _864 ] [950])
                (plus:DI (reg:DI 1 dx [orig:949 _863 ] [949])
                    (reg:DI 2 cx [orig:948 _862 ] [948])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":691 222 {*adddi_1}
     (nil))
(insn 4549 3597 3599 316 (set (reg:DI 2 cx [orig:951 _865 ] [951])
        (plus:DI (reg:DI 1 dx [orig:950 _864 ] [950])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":691 218 {*leadi}
     (nil))
(insn 3599 4549 3600 316 (set (reg/f:DI 1 dx [2096])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":691 85 {*movdi_internal}
     (nil))
(insn 3600 3599 3601 316 (parallel [
            (set (reg:DI 2 cx [2097])
                (plus:DI (reg:DI 2 cx [orig:951 _865 ] [951])
                    (const_int 178646 [0x2b9d6])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":691 222 {*adddi_1}
     (nil))
(insn 3601 3600 3602 316 (set (reg:SF 21 xmm0 [orig:952 _866 ] [952])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2097])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2096])) [1 phys.czen S4 A32])) "CLDRAD.f":691 131 {*movsf_internal}
     (nil))
(insn 3602 3601 3603 316 (set (reg:SI 1 dx [2098])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":691 86 {*movsi_internal}
     (nil))
(insn 3603 3602 3604 316 (set (reg:DI 1 dx [orig:953 _867 ] [953])
        (sign_extend:DI (reg:SI 1 dx [2098]))) "CLDRAD.f":691 149 {*extendsidi2_rex64}
     (nil))
(insn 3604 3603 3605 316 (parallel [
            (set (reg:DI 2 cx [orig:954 _868 ] [954])
                (mult:DI (reg:DI 1 dx [orig:953 _867 ] [953])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":691 349 {*muldi3_1}
     (nil))
(insn 3605 3604 3606 316 (set (reg:SI 1 dx [2099])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":691 86 {*movsi_internal}
     (nil))
(insn 3606 3605 3607 316 (set (reg:DI 1 dx [orig:955 _869 ] [955])
        (sign_extend:DI (reg:SI 1 dx [2099]))) "CLDRAD.f":691 149 {*extendsidi2_rex64}
     (nil))
(insn 3607 3606 4550 316 (parallel [
            (set (reg:DI 1 dx [orig:956 _870 ] [956])
                (plus:DI (reg:DI 1 dx [orig:955 _869 ] [955])
                    (reg:DI 2 cx [orig:954 _868 ] [954])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":691 222 {*adddi_1}
     (nil))
(insn 4550 3607 3609 316 (set (reg:DI 2 cx [orig:957 _871 ] [957])
        (plus:DI (reg:DI 1 dx [orig:956 _870 ] [956])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":691 218 {*leadi}
     (nil))
(insn 3609 4550 3610 316 (set (reg/f:DI 1 dx [2100])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":691 85 {*movdi_internal}
     (nil))
(insn 3610 3609 3611 316 (parallel [
            (set (reg:DI 2 cx [2101])
                (plus:DI (reg:DI 2 cx [orig:957 _871 ] [957])
                    (const_int 504587 [0x7b30b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":691 222 {*adddi_1}
     (nil))
(insn 3611 3610 3612 316 (set (reg:SF 22 xmm1 [orig:958 _872 ] [958])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2101])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2100])) [1 phys.czmean S4 A32])) "CLDRAD.f":691 131 {*movsf_internal}
     (nil))
(insn 3612 3611 3613 316 (set (reg:SF 21 xmm0 [2102])
        (div:SF (reg:SF 21 xmm0 [orig:952 _866 ] [952])
            (reg:SF 22 xmm1 [orig:958 _872 ] [958]))) "CLDRAD.f":691 841 {*fop_sf_1}
     (nil))
(insn 3613 3612 4286 316 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [1 factrs+0 S4 A32])
        (reg:SF 21 xmm0 [2102])) "CLDRAD.f":691 131 {*movsf_internal}
     (nil))
(jump_insn 4286 3613 4287 316 (set (pc)
        (label_ref 3620)) 683 {jump}
     (nil)
 -> 3620)
;;  succ:       318 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4287 4286 4285)
;; basic block 317, loop depth 0, maybe hot
;;  prev block 316, next block 318, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       315
;; bb 317 artificial_defs: { }
;; bb 317 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 21 [xmm0]
(code_label 4285 4287 3617 317 227 (nil) [1 uses])
(note 3617 4285 4548 317 [bb 317] NOTE_INSN_BASIC_BLOCK)
(insn 4548 3617 3619 317 (set (reg:SF 21 xmm0 [2103])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":693 131 {*movsf_internal}
     (nil))
(insn 3619 4548 3620 317 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [1 factrs+0 S4 A32])
        (reg:SF 21 xmm0 [2103])) "CLDRAD.f":693 131 {*movsf_internal}
     (nil))
;;  succ:       318 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 318, loop depth 0, maybe hot
;;  prev block 317, next block 319, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       317 (FALLTHRU)
;;              316 [always] 
;; bb 318 artificial_defs: { }
;; bb 318 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(code_label 3620 3619 3621 318 182 (nil) [1 uses])
(note 3621 3620 3622 318 [bb 318] NOTE_INSN_BASIC_BLOCK)
(insn 3622 3621 3623 318 (set (reg:SI 1 dx [2104])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":695 86 {*movsi_internal}
     (nil))
(insn 3623 3622 3624 318 (set (reg:DI 1 dx [orig:959 _873 ] [959])
        (sign_extend:DI (reg:SI 1 dx [2104]))) "CLDRAD.f":695 149 {*extendsidi2_rex64}
     (nil))
(insn 3624 3623 3625 318 (parallel [
            (set (reg:DI 2 cx [orig:960 _874 ] [960])
                (mult:DI (reg:DI 1 dx [orig:959 _873 ] [959])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 349 {*muldi3_1}
     (nil))
(insn 3625 3624 3626 318 (set (reg:SI 1 dx [2105])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":695 86 {*movsi_internal}
     (nil))
(insn 3626 3625 3627 318 (set (reg:DI 1 dx [orig:961 _875 ] [961])
        (sign_extend:DI (reg:SI 1 dx [2105]))) "CLDRAD.f":695 149 {*extendsidi2_rex64}
     (nil))
(insn 3627 3626 4545 318 (parallel [
            (set (reg:DI 1 dx [orig:962 _876 ] [962])
                (plus:DI (reg:DI 1 dx [orig:961 _875 ] [961])
                    (reg:DI 2 cx [orig:960 _874 ] [960])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 222 {*adddi_1}
     (nil))
(insn 4545 3627 3629 318 (set (reg:DI 2 cx [orig:963 _877 ] [963])
        (plus:DI (reg:DI 1 dx [orig:962 _876 ] [962])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":695 218 {*leadi}
     (nil))
(insn 3629 4545 3630 318 (set (reg/f:DI 1 dx [2106])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f20392c13f0 masks>)) "CLDRAD.f":695 85 {*movdi_internal}
     (nil))
(insn 3630 3629 3631 318 (set (reg:SF 22 xmm1 [orig:964 _878 ] [964])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:963 _877 ] [963])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2106])) [1 masks.hbm2 S4 A32])) "CLDRAD.f":695 131 {*movsf_internal}
     (nil))
(insn 3631 3630 3632 318 (set (reg:SI 1 dx [2107])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":695 86 {*movsi_internal}
     (nil))
(insn 3632 3631 3633 318 (set (reg:DI 1 dx [orig:965 _879 ] [965])
        (sign_extend:DI (reg:SI 1 dx [2107]))) "CLDRAD.f":695 149 {*extendsidi2_rex64}
     (nil))
(insn 3633 3632 3634 318 (parallel [
            (set (reg:DI 2 cx [orig:966 _880 ] [966])
                (mult:DI (reg:DI 1 dx [orig:965 _879 ] [965])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 349 {*muldi3_1}
     (nil))
(insn 3634 3633 3635 318 (set (reg:SI 1 dx [2108])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":695 86 {*movsi_internal}
     (nil))
(insn 3635 3634 3636 318 (set (reg:DI 1 dx [orig:967 _881 ] [967])
        (sign_extend:DI (reg:SI 1 dx [2108]))) "CLDRAD.f":695 149 {*extendsidi2_rex64}
     (nil))
(insn 3636 3635 4546 318 (parallel [
            (set (reg:DI 1 dx [orig:968 _882 ] [968])
                (plus:DI (reg:DI 1 dx [orig:967 _881 ] [967])
                    (reg:DI 2 cx [orig:966 _880 ] [966])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 222 {*adddi_1}
     (nil))
(insn 4546 3636 3638 318 (set (reg:DI 2 cx [orig:969 _883 ] [969])
        (plus:DI (reg:DI 1 dx [orig:968 _882 ] [968])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":695 218 {*leadi}
     (nil))
(insn 3638 4546 3639 318 (set (reg/f:DI 1 dx [2109])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":695 85 {*movdi_internal}
     (nil))
(insn 3639 3638 3640 318 (parallel [
            (set (reg:DI 2 cx [2110])
                (plus:DI (reg:DI 2 cx [orig:969 _883 ] [969])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 222 {*adddi_1}
     (nil))
(insn 3640 3639 3641 318 (set (reg:SF 21 xmm0 [orig:970 _884 ] [970])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2110])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2109])) [1 acmrds.rswin S4 A32])) "CLDRAD.f":695 131 {*movsf_internal}
     (nil))
(insn 3641 3640 3642 318 (set (reg:SF 21 xmm0 [orig:971 _885 ] [971])
        (mult:SF (reg:SF 21 xmm0 [orig:970 _884 ] [970])
            (reg:SF 22 xmm1 [orig:964 _878 ] [964]))) "CLDRAD.f":695 838 {*fop_sf_comm}
     (nil))
(insn 3642 3641 3643 318 (set (reg:SI 1 dx [2111])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":695 86 {*movsi_internal}
     (nil))
(insn 3643 3642 3644 318 (set (reg:DI 1 dx [orig:972 _886 ] [972])
        (sign_extend:DI (reg:SI 1 dx [2111]))) "CLDRAD.f":695 149 {*extendsidi2_rex64}
     (nil))
(insn 3644 3643 3645 318 (parallel [
            (set (reg:DI 2 cx [orig:973 _887 ] [973])
                (mult:DI (reg:DI 1 dx [orig:972 _886 ] [972])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 349 {*muldi3_1}
     (nil))
(insn 3645 3644 3646 318 (set (reg:SI 1 dx [2112])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":695 86 {*movsi_internal}
     (nil))
(insn 3646 3645 3647 318 (set (reg:DI 1 dx [orig:974 _888 ] [974])
        (sign_extend:DI (reg:SI 1 dx [2112]))) "CLDRAD.f":695 149 {*extendsidi2_rex64}
     (nil))
(insn 3647 3646 4547 318 (parallel [
            (set (reg:DI 1 dx [orig:975 _889 ] [975])
                (plus:DI (reg:DI 1 dx [orig:974 _888 ] [974])
                    (reg:DI 2 cx [orig:973 _887 ] [973])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":695 222 {*adddi_1}
     (nil))
(insn 4547 3647 3649 318 (set (reg:DI 2 cx [orig:976 _890 ] [976])
        (plus:DI (reg:DI 1 dx [orig:975 _889 ] [975])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":695 218 {*leadi}
     (nil))
(insn 3649 4547 3650 318 (set (reg:SF 21 xmm0 [orig:977 _891 ] [977])
        (mult:SF (reg:SF 21 xmm0 [orig:971 _885 ] [971])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [1 factrs+0 S4 A32]))) "CLDRAD.f":695 838 {*fop_sf_comm}
     (nil))
(insn 3650 3649 3651 318 (set (reg/f:DI 1 dx [2113])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":695 85 {*movdi_internal}
     (nil))
(insn 3651 3650 3652 318 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:976 _890 ] [976])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2113])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:977 _891 ] [977])) "CLDRAD.f":695 131 {*movsf_internal}
     (nil))
(insn 3652 3651 4288 318 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":689 221 {*addsi_1}
     (nil))
(jump_insn 4288 3652 4289 318 (set (pc)
        (label_ref 3653)) "CLDRAD.f":689 683 {jump}
     (nil)
 -> 3653)
;;  succ:       314 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4289 4288 4424)
;; basic block 319, loop depth 0, maybe hot
;;  prev block 318, next block 321, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       314
;; bb 319 artificial_defs: { }
;; bb 319 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4424 4289 4423 319 269 (nil) [1 uses])
(note 4423 4424 4425 319 [bb 319] NOTE_INSN_BASIC_BLOCK)
(insn 4425 4423 3658 319 (const_int 0 [0]) "CLDRAD.f":695 718 {nop}
     (nil))
(insn 3658 4425 4290 319 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":688 221 {*addsi_1}
     (nil))
(jump_insn 4290 3658 4291 319 (set (pc)
        (label_ref 3659)) "CLDRAD.f":688 683 {jump}
     (nil)
 -> 3659)
;;  succ:       312 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4291 4290 4421)
;; basic block 321, loop depth 0, maybe hot
;;  prev block 319, next block 323, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       312
;; bb 321 artificial_defs: { }
;; bb 321 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4421 4291 4420 321 268 (nil) [1 uses])
(note 4420 4421 4422 321 [bb 321] NOTE_INSN_BASIC_BLOCK)
(insn 4422 4420 3664 321 (const_int 0 [0]) "CLDRAD.f":689 718 {nop}
     (nil))
(insn 3664 4422 3665 321 (set (reg:DI 1 dx [2114])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3665 3664 3666 321 (set (reg:DI 0 ax [2115])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3666 3665 3667 321 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":699 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3667 3666 3668 321 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":699 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3668 3667 3669 321 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2114])) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3669 3668 3670 321 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2115])) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3670 3669 3671 321 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3671 3670 3672 321 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3672 3671 3673 321 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3673 3672 3674 321 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC32") [flags 0x2]  <var_decl 0x7f2038fb4e10 *.LC32>)) "CLDRAD.f":699 85 {*movdi_internal}
     (nil))
(insn 3674 3673 3675 321 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":699 88 {*movqi_internal}
     (nil))
(call_insn 3675 3674 3676 321 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":699 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3676 3675 3677 321 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":699 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3677 3676 3678 321 (set (reg/f:DI 1 dx [2116])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":700 85 {*movdi_internal}
     (nil))
(insn 3678 3677 3679 321 (set (reg:DI 0 ax [2117])
        (const_int 0 [0])) "CLDRAD.f":700 85 {*movdi_internal}
     (nil))
(insn 3679 3678 4509 321 (set (reg:DI 2 cx [2118])
        (const_int 12 [0xc])) "CLDRAD.f":700 85 {*movdi_internal}
     (nil))
(insn 4509 3679 3680 321 (set (reg/f:DI 5 di [2116])
        (reg/f:DI 1 dx [2116])) "CLDRAD.f":700 85 {*movdi_internal}
     (nil))
(insn 3680 4509 4510 321 (parallel [
            (set (reg:DI 2 cx [2118])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2116])
                (plus:DI (ashift:DI (reg:DI 2 cx [2118])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2116])))
            (set (mem/c:BLK (reg/f:DI 5 di [2116]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2117]))
            (use (reg:DI 2 cx [2118]))
        ]) "CLDRAD.f":700 984 {*rep_stosdi_rex64}
     (nil))
(insn 4510 3680 3681 321 (set (reg/f:DI 1 dx [2116])
        (reg/f:DI 5 di [2116])) "CLDRAD.f":700 85 {*movdi_internal}
     (nil))
(insn 3681 4510 3682 321 (set (mem/c:SI (reg/f:DI 1 dx [2116]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2117])) "CLDRAD.f":700 86 {*movsi_internal}
     (nil))
(insn 3682 3681 3683 321 (parallel [
            (set (reg/f:DI 1 dx [2116])
                (plus:DI (reg/f:DI 1 dx [2116])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":700 222 {*adddi_1}
     (nil))
(insn 3683 3682 3684 321 (set (reg:SI 0 ax [orig:978 _892 ] [978])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 636 [0x27c]))) [2 rqstfld.iget+620 S4 A32])) "CLDRAD.f":702 86 {*movsi_internal}
     (nil))
(insn 3684 3683 4543 321 (set (reg:DI 0 ax [orig:979 _893 ] [979])
        (sign_extend:DI (reg:SI 0 ax [orig:978 _892 ] [978]))) "CLDRAD.f":702 149 {*extendsidi2_rex64}
     (nil))
(insn 4543 3684 3686 321 (set (reg:DI 1 dx [orig:980 _894 ] [980])
        (plus:DI (reg:DI 0 ax [orig:979 _893 ] [979])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":702 218 {*leadi}
     (nil))
(insn 3686 4543 3687 321 (set (reg:DI 0 ax [2119])
        (reg:DI 1 dx [orig:980 _894 ] [980])) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3687 3686 3689 321 (parallel [
            (set (reg:DI 0 ax [2120])
                (ashift:DI (reg:DI 0 ax [2119])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":702 551 {*ashldi3_1}
     (nil))
(insn 3689 3687 3690 321 (parallel [
            (set (reg:DI 0 ax [2119])
                (minus:DI (reg:DI 0 ax [2119])
                    (reg:DI 1 dx [orig:980 _894 ] [980])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":702 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:980 _894 ] [980])
            (const_int 15 [0xf]))
        (nil)))
(insn 3690 3689 3693 321 (parallel [
            (set (reg:DI 0 ax [2121])
                (ashift:DI (reg:DI 0 ax [2119])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":702 551 {*ashldi3_1}
     (nil))
(insn 3693 3690 3694 321 (parallel [
            (set (reg:DI 0 ax [2122])
                (plus:DI (reg:DI 0 ax [orig:981 _895 ] [981])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":702 222 {*adddi_1}
     (nil))
(insn 3694 3693 4544 321 (parallel [
            (set (reg:DI 0 ax [2123])
                (ashift:DI (reg:DI 0 ax [2122])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":702 551 {*ashldi3_1}
     (nil))
(insn 4544 3694 3696 321 (set (reg/f:DI 1 dx [orig:982 _896 ] [982])
        (plus:DI (reg:DI 0 ax [2123])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":702 218 {*leadi}
     (nil))
(insn 3696 4544 3697 321 (set (reg:DI 4 si [2124])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3697 3696 3698 321 (set (reg:DI 2 cx [2125])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3698 3697 3699 321 (set (reg:DI 0 ax [2126])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3699 3698 3700 321 (set (reg:DI 38 r9)
        (reg:DI 4 si [2124])) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3700 3699 3701 321 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2125])) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3701 3700 3703 321 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2126])) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3703 3701 3704 321 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 636 [0x27c])))) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3704 3703 3705 321 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":702 85 {*movdi_internal}
     (nil))
(insn 3705 3704 3706 321 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":702 88 {*movqi_internal}
     (nil))
(call_insn 3706 3705 3707 321 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":702 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       323 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 323, loop depth 0, maybe hot
;;  prev block 321, next block 324, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       310
;;              321 (FALLTHRU)
;; bb 323 artificial_defs: { }
;; bb 323 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 3707 3706 3708 323 177 (nil) [1 uses])
(note 3708 3707 3709 323 [bb 323] NOTE_INSN_BASIC_BLOCK)
(insn 3709 3708 3710 323 (set (reg:SI 0 ax [orig:983 _897 ] [983])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 640 [0x280]))) [2 rqstfld.iget+624 S4 A128])) "CLDRAD.f":706 86 {*movsi_internal}
     (nil))
(insn 3710 3709 3711 323 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:983 _897 ] [983])
            (const_int 0 [0]))) "CLDRAD.f":706 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3711 3710 3712 323 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 3885)
            (pc))) "CLDRAD.f":706 682 {*jcc}
     (nil)
 -> 3885)
;;  succ:       324 (FALLTHRU)
;;              336
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 324, loop depth 0, maybe hot
;;  prev block 323, next block 325, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       323 (FALLTHRU)
;; bb 324 artificial_defs: { }
;; bb 324 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(note 3712 3711 3713 324 [bb 324] NOTE_INSN_BASIC_BLOCK)
(insn 3713 3712 3714 324 (set (reg:SI 1 dx [orig:1187 _1575 ] [1187])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":707 86 {*movsi_internal}
     (nil))
(insn 3714 3713 3715 324 (set (reg:SI 0 ax [orig:1188 _1576 ] [1188])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":707 86 {*movsi_internal}
     (nil))
(insn 3715 3714 3837 324 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1187 _1575 ] [1187])) "CLDRAD.f":707 86 {*movsi_internal}
     (nil))
;;  succ:       325 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 325, loop depth 0, maybe hot
;;  prev block 324, next block 326, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       324 (FALLTHRU)
;;              332 [always] 
;; bb 325 artificial_defs: { }
;; bb 325 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 3837 3715 3716 325 192 (nil) [1 uses])
(note 3716 3837 3717 325 [bb 325] NOTE_INSN_BASIC_BLOCK)
(insn 3717 3716 3718 325 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1188 _1576 ] [1188]))) "CLDRAD.f":707 11 {*cmpsi_1}
     (nil))
(insn 3718 3717 3719 325 (set (reg:QI 1 dx [2127])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":707 678 {*setcc_qi}
     (nil))
(insn 3719 3718 3720 325 (set (reg:SI 1 dx [orig:1189 _1578 ] [1189])
        (zero_extend:SI (reg:QI 1 dx [2127]))) "CLDRAD.f":707 140 {*zero_extendqisi2}
     (nil))
(insn 3720 3719 3721 325 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1189 _1578 ] [1189])
            (const_int 0 [0]))) "CLDRAD.f":707 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3721 3720 3722 325 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4427)
            (pc))) "CLDRAD.f":707 682 {*jcc}
     (nil)
 -> 4427)
;;  succ:       334
;;              326 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 326, loop depth 0, maybe hot
;;  prev block 325, next block 327, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       325 (FALLTHRU)
;; bb 326 artificial_defs: { }
;; bb 326 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 3722 3721 3723 326 [bb 326] NOTE_INSN_BASIC_BLOCK)
(insn 3723 3722 3831 326 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":708 86 {*movsi_internal}
     (nil))
;;  succ:       327 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 327, loop depth 0, maybe hot
;;  prev block 326, next block 328, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       326 (FALLTHRU)
;;              331 [always] 
;; bb 327 artificial_defs: { }
;; bb 327 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 3831 3723 3724 327 191 (nil) [1 uses])
(note 3724 3831 3725 327 [bb 327] NOTE_INSN_BASIC_BLOCK)
(insn 3725 3724 3726 327 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":708 11 {*cmpsi_1}
     (nil))
(insn 3726 3725 3727 327 (set (reg:QI 1 dx [2128])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":708 678 {*setcc_qi}
     (nil))
(insn 3727 3726 3728 327 (set (reg:SI 1 dx [orig:1190 _1580 ] [1190])
        (zero_extend:SI (reg:QI 1 dx [2128]))) "CLDRAD.f":708 140 {*zero_extendqisi2}
     (nil))
(insn 3728 3727 3729 327 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1190 _1580 ] [1190])
            (const_int 0 [0]))) "CLDRAD.f":708 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3729 3728 3730 327 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4430)
            (pc))) "CLDRAD.f":708 682 {*jcc}
     (nil)
 -> 4430)
;;  succ:       332
;;              328 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 328, loop depth 0, maybe hot
;;  prev block 327, next block 329, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       327 (FALLTHRU)
;; bb 328 artificial_defs: { }
;; bb 328 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 3730 3729 3731 328 [bb 328] NOTE_INSN_BASIC_BLOCK)
(insn 3731 3730 3732 328 (set (reg:SI 1 dx [2129])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":709 86 {*movsi_internal}
     (nil))
(insn 3732 3731 3733 328 (set (reg:DI 1 dx [orig:984 _898 ] [984])
        (sign_extend:DI (reg:SI 1 dx [2129]))) "CLDRAD.f":709 149 {*extendsidi2_rex64}
     (nil))
(insn 3733 3732 3734 328 (parallel [
            (set (reg:DI 2 cx [orig:985 _899 ] [985])
                (mult:DI (reg:DI 1 dx [orig:984 _898 ] [984])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":709 349 {*muldi3_1}
     (nil))
(insn 3734 3733 3735 328 (set (reg:SI 1 dx [2130])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":709 86 {*movsi_internal}
     (nil))
(insn 3735 3734 3736 328 (set (reg:DI 1 dx [orig:986 _900 ] [986])
        (sign_extend:DI (reg:SI 1 dx [2130]))) "CLDRAD.f":709 149 {*extendsidi2_rex64}
     (nil))
(insn 3736 3735 4541 328 (parallel [
            (set (reg:DI 1 dx [orig:987 _901 ] [987])
                (plus:DI (reg:DI 1 dx [orig:986 _900 ] [986])
                    (reg:DI 2 cx [orig:985 _899 ] [985])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":709 222 {*adddi_1}
     (nil))
(insn 4541 3736 3738 328 (set (reg:DI 2 cx [orig:988 _902 ] [988])
        (plus:DI (reg:DI 1 dx [orig:987 _901 ] [987])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":709 218 {*leadi}
     (nil))
(insn 3738 4541 3739 328 (set (reg/f:DI 1 dx [2131])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":709 85 {*movdi_internal}
     (nil))
(insn 3739 3738 3740 328 (parallel [
            (set (reg:DI 2 cx [2132])
                (plus:DI (reg:DI 2 cx [orig:988 _902 ] [988])
                    (const_int 534218 [0x826ca])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":709 222 {*adddi_1}
     (nil))
(insn 3740 3739 4542 328 (set (reg:SF 21 xmm0 [orig:989 _903 ] [989])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2132])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2131])) [1 phys.sigt4 S4 A32])) "CLDRAD.f":709 131 {*movsf_internal}
     (nil))
(insn 4542 3740 3742 328 (set (reg:SF 22 xmm1 [2133])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":709 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 3742 4542 3743 328 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:989 _903 ] [989])
            (reg:SF 22 xmm1 [2133]))) "CLDRAD.f":709 53 {*cmpisf}
     (nil))
(jump_insn 3743 3742 3747 328 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4292)
            (pc))) "CLDRAD.f":709 682 {*jcc}
     (nil)
 -> 4292)
;;  succ:       329 (FALLTHRU)
;;              330
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 329, loop depth 0, maybe hot
;;  prev block 328, next block 330, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       328 (FALLTHRU)
;; bb 329 artificial_defs: { }
;; bb 329 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 3747 3743 3748 329 [bb 329] NOTE_INSN_BASIC_BLOCK)
(insn 3748 3747 3749 329 (set (reg:SI 1 dx [2134])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":710 86 {*movsi_internal}
     (nil))
(insn 3749 3748 3750 329 (set (reg:DI 1 dx [orig:990 _904 ] [990])
        (sign_extend:DI (reg:SI 1 dx [2134]))) "CLDRAD.f":710 149 {*extendsidi2_rex64}
     (nil))
(insn 3750 3749 3751 329 (parallel [
            (set (reg:DI 2 cx [orig:991 _905 ] [991])
                (mult:DI (reg:DI 1 dx [orig:990 _904 ] [990])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":710 349 {*muldi3_1}
     (nil))
(insn 3751 3750 3752 329 (set (reg:SI 1 dx [2135])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":710 86 {*movsi_internal}
     (nil))
(insn 3752 3751 3753 329 (set (reg:DI 1 dx [orig:992 _906 ] [992])
        (sign_extend:DI (reg:SI 1 dx [2135]))) "CLDRAD.f":710 149 {*extendsidi2_rex64}
     (nil))
(insn 3753 3752 4538 329 (parallel [
            (set (reg:DI 1 dx [orig:993 _907 ] [993])
                (plus:DI (reg:DI 1 dx [orig:992 _906 ] [992])
                    (reg:DI 2 cx [orig:991 _905 ] [991])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":710 222 {*adddi_1}
     (nil))
(insn 4538 3753 3755 329 (set (reg:DI 2 cx [orig:994 _908 ] [994])
        (plus:DI (reg:DI 1 dx [orig:993 _907 ] [993])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":710 218 {*leadi}
     (nil))
(insn 3755 4538 3756 329 (set (reg/f:DI 1 dx [2136])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f20392b7bd0 loops>)) "CLDRAD.f":710 85 {*movdi_internal}
     (nil))
(insn 3756 3755 3757 329 (parallel [
            (set (reg:DI 2 cx [2137])
                (plus:DI (reg:DI 2 cx [orig:994 _908 ] [994])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":710 222 {*adddi_1}
     (nil))
(insn 3757 3756 3758 329 (set (reg:SI 1 dx [2138])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [2137])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2136])) [2 loops.lmh S4 A32])) "CLDRAD.f":710 86 {*movsi_internal}
     (nil))
(insn 3758 3757 3759 329 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [2 llmh+0 S4 A32])
        (reg:SI 1 dx [2138])) "CLDRAD.f":710 86 {*movsi_internal}
     (nil))
(insn 3759 3758 3760 329 (set (reg:SI 1 dx [2139])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [2 llmh+0 S4 A32])) "CLDRAD.f":711 86 {*movsi_internal}
     (nil))
(insn 3760 3759 3761 329 (set (reg:DI 1 dx [orig:995 _909 ] [995])
        (sign_extend:DI (reg:SI 1 dx [2139]))) "CLDRAD.f":711 149 {*extendsidi2_rex64}
     (nil))
(insn 3761 3760 3762 329 (parallel [
            (set (reg:DI 2 cx [orig:996 _910 ] [996])
                (mult:DI (reg:DI 1 dx [orig:995 _909 ] [995])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":711 349 {*muldi3_1}
     (nil))
(insn 3762 3761 3763 329 (set (reg:SI 1 dx [2140])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":711 86 {*movsi_internal}
     (nil))
(insn 3763 3762 3764 329 (set (reg:DI 1 dx [orig:997 _911 ] [997])
        (sign_extend:DI (reg:SI 1 dx [2140]))) "CLDRAD.f":711 149 {*extendsidi2_rex64}
     (nil))
(insn 3764 3763 3765 329 (parallel [
            (set (reg:DI 1 dx [orig:998 _912 ] [998])
                (mult:DI (reg:DI 1 dx [orig:997 _911 ] [997])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":711 349 {*muldi3_1}
     (nil))
(insn 3765 3764 3766 329 (parallel [
            (set (reg:DI 2 cx [orig:999 _913 ] [999])
                (plus:DI (reg:DI 2 cx [orig:996 _910 ] [996])
                    (reg:DI 1 dx [orig:998 _912 ] [998])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":711 222 {*adddi_1}
     (nil))
(insn 3766 3765 3767 329 (set (reg:SI 1 dx [2141])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":711 86 {*movsi_internal}
     (nil))
(insn 3767 3766 3768 329 (set (reg:DI 1 dx [orig:1000 _914 ] [1000])
        (sign_extend:DI (reg:SI 1 dx [2141]))) "CLDRAD.f":711 149 {*extendsidi2_rex64}
     (nil))
(insn 3768 3767 4539 329 (parallel [
            (set (reg:DI 1 dx [orig:1001 _915 ] [1001])
                (plus:DI (reg:DI 1 dx [orig:1000 _914 ] [1000])
                    (reg:DI 2 cx [orig:999 _913 ] [999])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":711 222 {*adddi_1}
     (nil))
(insn 4539 3768 3770 329 (set (reg:DI 2 cx [orig:1002 _916 ] [1002])
        (plus:DI (reg:DI 1 dx [orig:1001 _915 ] [1001])
            (const_int -29751 [0xffffffffffff8bc9]))) "CLDRAD.f":711 218 {*leadi}
     (nil))
(insn 3770 4539 3771 329 (set (reg/f:DI 1 dx [2142])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f20392d71b0 vrbls>)) "CLDRAD.f":711 85 {*movdi_internal}
     (nil))
(insn 3771 3770 3772 329 (parallel [
            (set (reg:DI 2 cx [2143])
                (plus:DI (reg:DI 2 cx [orig:1002 _916 ] [1002])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":711 222 {*adddi_1}
     (nil))
(insn 3772 3771 3773 329 (set (reg:SF 21 xmm0 [2144])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2143])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2142])) [1 vrbls.t S4 A32])) "CLDRAD.f":711 131 {*movsf_internal}
     (nil))
(insn 3773 3772 3774 329 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 tlmh+0 S4 A32])
        (reg:SF 21 xmm0 [2144])) "CLDRAD.f":711 131 {*movsf_internal}
     (nil))
(insn 3774 3773 3775 329 (set (reg:SF 22 xmm1 [2145])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 tlmh+0 S4 A32])) "CLDRAD.f":712 131 {*movsf_internal}
     (nil))
(insn 3775 3774 3776 329 (set (reg:SF 21 xmm0 [2146])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC33") [flags 0x2]) [0  S4 A32])) "CLDRAD.f":712 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.6699999362308517447672784328460693359375e-8 [0x0.f3864fp-24])
        (nil)))
(insn 3776 3775 3777 329 (set (reg:SF 21 xmm0 [orig:1003 _917 ] [1003])
        (mult:SF (reg:SF 21 xmm0 [2146])
            (reg:SF 22 xmm1 [2145]))) "CLDRAD.f":712 838 {*fop_sf_comm}
     (nil))
(insn 3777 3776 3778 329 (set (reg:SF 21 xmm0 [orig:1004 _918 ] [1004])
        (mult:SF (reg:SF 21 xmm0 [orig:1003 _917 ] [1003])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 tlmh+0 S4 A32]))) "CLDRAD.f":712 838 {*fop_sf_comm}
     (nil))
(insn 3778 3777 3779 329 (set (reg:SF 21 xmm0 [orig:1005 _919 ] [1005])
        (mult:SF (reg:SF 21 xmm0 [orig:1004 _918 ] [1004])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 tlmh+0 S4 A32]))) "CLDRAD.f":712 838 {*fop_sf_comm}
     (nil))
(insn 3779 3778 3780 329 (set (reg:SF 21 xmm0 [orig:1006 _920 ] [1006])
        (mult:SF (reg:SF 21 xmm0 [orig:1005 _919 ] [1005])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 tlmh+0 S4 A32]))) "CLDRAD.f":712 838 {*fop_sf_comm}
     (nil))
(insn 3780 3779 3781 329 (set (reg:SI 1 dx [2147])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":712 86 {*movsi_internal}
     (nil))
(insn 3781 3780 3782 329 (set (reg:DI 1 dx [orig:1007 _921 ] [1007])
        (sign_extend:DI (reg:SI 1 dx [2147]))) "CLDRAD.f":712 149 {*extendsidi2_rex64}
     (nil))
(insn 3782 3781 3783 329 (parallel [
            (set (reg:DI 2 cx [orig:1008 _922 ] [1008])
                (mult:DI (reg:DI 1 dx [orig:1007 _921 ] [1007])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":712 349 {*muldi3_1}
     (nil))
(insn 3783 3782 3784 329 (set (reg:SI 1 dx [2148])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":712 86 {*movsi_internal}
     (nil))
(insn 3784 3783 3785 329 (set (reg:DI 1 dx [orig:1009 _923 ] [1009])
        (sign_extend:DI (reg:SI 1 dx [2148]))) "CLDRAD.f":712 149 {*extendsidi2_rex64}
     (nil))
(insn 3785 3784 4540 329 (parallel [
            (set (reg:DI 1 dx [orig:1010 _924 ] [1010])
                (plus:DI (reg:DI 1 dx [orig:1009 _923 ] [1009])
                    (reg:DI 2 cx [orig:1008 _922 ] [1008])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":712 222 {*adddi_1}
     (nil))
(insn 4540 3785 3787 329 (set (reg:DI 2 cx [orig:1011 _925 ] [1011])
        (plus:DI (reg:DI 1 dx [orig:1010 _924 ] [1010])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":712 218 {*leadi}
     (nil))
(insn 3787 4540 3788 329 (set (reg/f:DI 1 dx [2149])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":712 85 {*movdi_internal}
     (nil))
(insn 3788 3787 3789 329 (parallel [
            (set (reg:DI 2 cx [2150])
                (plus:DI (reg:DI 2 cx [orig:1011 _925 ] [1011])
                    (const_int 534218 [0x826ca])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":712 222 {*adddi_1}
     (nil))
(insn 3789 3788 3790 329 (set (reg:SF 22 xmm1 [orig:1012 _926 ] [1012])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2150])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2149])) [1 phys.sigt4 S4 A32])) "CLDRAD.f":712 131 {*movsf_internal}
     (nil))
(insn 3790 3789 3791 329 (set (reg:SF 21 xmm0 [2151])
        (div:SF (reg:SF 21 xmm0 [orig:1006 _920 ] [1006])
            (reg:SF 22 xmm1 [orig:1012 _926 ] [1012]))) "CLDRAD.f":712 841 {*fop_sf_1}
     (nil))
(insn 3791 3790 4293 329 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 factrl+0 S4 A32])
        (reg:SF 21 xmm0 [2151])) "CLDRAD.f":712 131 {*movsf_internal}
     (nil))
(jump_insn 4293 3791 4294 329 (set (pc)
        (label_ref 3798)) 683 {jump}
     (nil)
 -> 3798)
;;  succ:       331 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4294 4293 4292)
;; basic block 330, loop depth 0, maybe hot
;;  prev block 329, next block 331, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       328
;; bb 330 artificial_defs: { }
;; bb 330 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 21 [xmm0]
(code_label 4292 4294 3795 330 228 (nil) [1 uses])
(note 3795 4292 4537 330 [bb 330] NOTE_INSN_BASIC_BLOCK)
(insn 4537 3795 3797 330 (set (reg:SF 21 xmm0 [2152])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":714 131 {*movsf_internal}
     (nil))
(insn 3797 4537 3798 330 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [1 factrl+0 S4 A32])
        (reg:SF 21 xmm0 [2152])) "CLDRAD.f":714 131 {*movsf_internal}
     (nil))
;;  succ:       331 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 331, loop depth 0, maybe hot
;;  prev block 330, next block 332, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       330 (FALLTHRU)
;;              329 [always] 
;; bb 331 artificial_defs: { }
;; bb 331 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(code_label 3798 3797 3799 331 190 (nil) [1 uses])
(note 3799 3798 3800 331 [bb 331] NOTE_INSN_BASIC_BLOCK)
(insn 3800 3799 3801 331 (set (reg:SI 1 dx [2153])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":716 86 {*movsi_internal}
     (nil))
(insn 3801 3800 3802 331 (set (reg:DI 1 dx [orig:1013 _927 ] [1013])
        (sign_extend:DI (reg:SI 1 dx [2153]))) "CLDRAD.f":716 149 {*extendsidi2_rex64}
     (nil))
(insn 3802 3801 3803 331 (parallel [
            (set (reg:DI 2 cx [orig:1014 _928 ] [1014])
                (mult:DI (reg:DI 1 dx [orig:1013 _927 ] [1013])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 349 {*muldi3_1}
     (nil))
(insn 3803 3802 3804 331 (set (reg:SI 1 dx [2154])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":716 86 {*movsi_internal}
     (nil))
(insn 3804 3803 3805 331 (set (reg:DI 1 dx [orig:1015 _929 ] [1015])
        (sign_extend:DI (reg:SI 1 dx [2154]))) "CLDRAD.f":716 149 {*extendsidi2_rex64}
     (nil))
(insn 3805 3804 4534 331 (parallel [
            (set (reg:DI 1 dx [orig:1016 _930 ] [1016])
                (plus:DI (reg:DI 1 dx [orig:1015 _929 ] [1015])
                    (reg:DI 2 cx [orig:1014 _928 ] [1014])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 222 {*adddi_1}
     (nil))
(insn 4534 3805 3807 331 (set (reg:DI 2 cx [orig:1017 _931 ] [1017])
        (plus:DI (reg:DI 1 dx [orig:1016 _930 ] [1016])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":716 218 {*leadi}
     (nil))
(insn 3807 4534 3808 331 (set (reg/f:DI 1 dx [2155])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f20392c13f0 masks>)) "CLDRAD.f":716 85 {*movdi_internal}
     (nil))
(insn 3808 3807 3809 331 (set (reg:SF 22 xmm1 [orig:1018 _932 ] [1018])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1017 _931 ] [1017])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2155])) [1 masks.hbm2 S4 A32])) "CLDRAD.f":716 131 {*movsf_internal}
     (nil))
(insn 3809 3808 3810 331 (set (reg:SI 1 dx [2156])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":716 86 {*movsi_internal}
     (nil))
(insn 3810 3809 3811 331 (set (reg:DI 1 dx [orig:1019 _933 ] [1019])
        (sign_extend:DI (reg:SI 1 dx [2156]))) "CLDRAD.f":716 149 {*extendsidi2_rex64}
     (nil))
(insn 3811 3810 3812 331 (parallel [
            (set (reg:DI 2 cx [orig:1020 _934 ] [1020])
                (mult:DI (reg:DI 1 dx [orig:1019 _933 ] [1019])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 349 {*muldi3_1}
     (nil))
(insn 3812 3811 3813 331 (set (reg:SI 1 dx [2157])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":716 86 {*movsi_internal}
     (nil))
(insn 3813 3812 3814 331 (set (reg:DI 1 dx [orig:1021 _935 ] [1021])
        (sign_extend:DI (reg:SI 1 dx [2157]))) "CLDRAD.f":716 149 {*extendsidi2_rex64}
     (nil))
(insn 3814 3813 4535 331 (parallel [
            (set (reg:DI 1 dx [orig:1022 _936 ] [1022])
                (plus:DI (reg:DI 1 dx [orig:1021 _935 ] [1021])
                    (reg:DI 2 cx [orig:1020 _934 ] [1020])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 222 {*adddi_1}
     (nil))
(insn 4535 3814 3816 331 (set (reg:DI 2 cx [orig:1023 _937 ] [1023])
        (plus:DI (reg:DI 1 dx [orig:1022 _936 ] [1022])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":716 218 {*leadi}
     (nil))
(insn 3816 4535 3817 331 (set (reg/f:DI 1 dx [2158])
        (symbol_ref:DI ("acmrdl_") [flags 0x202]  <var_decl 0x7f2040311ea0 acmrdl>)) "CLDRAD.f":716 85 {*movdi_internal}
     (nil))
(insn 3817 3816 3818 331 (parallel [
            (set (reg:DI 2 cx [2159])
                (plus:DI (reg:DI 2 cx [orig:1023 _937 ] [1023])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 222 {*adddi_1}
     (nil))
(insn 3818 3817 3819 331 (set (reg:SF 21 xmm0 [orig:1024 _938 ] [1024])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2159])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2158])) [1 acmrdl.rlwin S4 A32])) "CLDRAD.f":716 131 {*movsf_internal}
     (nil))
(insn 3819 3818 3820 331 (set (reg:SF 21 xmm0 [orig:1025 _939 ] [1025])
        (mult:SF (reg:SF 21 xmm0 [orig:1024 _938 ] [1024])
            (reg:SF 22 xmm1 [orig:1018 _932 ] [1018]))) "CLDRAD.f":716 838 {*fop_sf_comm}
     (nil))
(insn 3820 3819 3821 331 (set (reg:SI 1 dx [2160])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":716 86 {*movsi_internal}
     (nil))
(insn 3821 3820 3822 331 (set (reg:DI 1 dx [orig:1026 _940 ] [1026])
        (sign_extend:DI (reg:SI 1 dx [2160]))) "CLDRAD.f":716 149 {*extendsidi2_rex64}
     (nil))
(insn 3822 3821 3823 331 (parallel [
            (set (reg:DI 2 cx [orig:1027 _941 ] [1027])
                (mult:DI (reg:DI 1 dx [orig:1026 _940 ] [1026])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 349 {*muldi3_1}
     (nil))
(insn 3823 3822 3824 331 (set (reg:SI 1 dx [2161])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":716 86 {*movsi_internal}
     (nil))
(insn 3824 3823 3825 331 (set (reg:DI 1 dx [orig:1028 _942 ] [1028])
        (sign_extend:DI (reg:SI 1 dx [2161]))) "CLDRAD.f":716 149 {*extendsidi2_rex64}
     (nil))
(insn 3825 3824 4536 331 (parallel [
            (set (reg:DI 1 dx [orig:1029 _943 ] [1029])
                (plus:DI (reg:DI 1 dx [orig:1028 _942 ] [1028])
                    (reg:DI 2 cx [orig:1027 _941 ] [1027])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":716 222 {*adddi_1}
     (nil))
(insn 4536 3825 3827 331 (set (reg:DI 2 cx [orig:1030 _944 ] [1030])
        (plus:DI (reg:DI 1 dx [orig:1029 _943 ] [1029])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":716 218 {*leadi}
     (nil))
(insn 3827 4536 3828 331 (set (reg:SF 21 xmm0 [orig:1031 _945 ] [1031])
        (mult:SF (reg:SF 21 xmm0 [orig:1025 _939 ] [1025])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [1 factrl+0 S4 A32]))) "CLDRAD.f":716 838 {*fop_sf_comm}
     (nil))
(insn 3828 3827 3829 331 (set (reg/f:DI 1 dx [2162])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":716 85 {*movdi_internal}
     (nil))
(insn 3829 3828 3830 331 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1030 _944 ] [1030])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2162])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:1031 _945 ] [1031])) "CLDRAD.f":716 131 {*movsf_internal}
     (nil))
(insn 3830 3829 4295 331 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":708 221 {*addsi_1}
     (nil))
(jump_insn 4295 3830 4296 331 (set (pc)
        (label_ref 3831)) "CLDRAD.f":708 683 {jump}
     (nil)
 -> 3831)
;;  succ:       327 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4296 4295 4430)
;; basic block 332, loop depth 0, maybe hot
;;  prev block 331, next block 334, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       327
;; bb 332 artificial_defs: { }
;; bb 332 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4430 4296 4429 332 271 (nil) [1 uses])
(note 4429 4430 4431 332 [bb 332] NOTE_INSN_BASIC_BLOCK)
(insn 4431 4429 3836 332 (const_int 0 [0]) "CLDRAD.f":716 718 {nop}
     (nil))
(insn 3836 4431 4297 332 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":707 221 {*addsi_1}
     (nil))
(jump_insn 4297 3836 4298 332 (set (pc)
        (label_ref 3837)) "CLDRAD.f":707 683 {jump}
     (nil)
 -> 3837)
;;  succ:       325 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4298 4297 4427)
;; basic block 334, loop depth 0, maybe hot
;;  prev block 332, next block 336, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       325
;; bb 334 artificial_defs: { }
;; bb 334 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4427 4298 4426 334 270 (nil) [1 uses])
(note 4426 4427 4428 334 [bb 334] NOTE_INSN_BASIC_BLOCK)
(insn 4428 4426 3842 334 (const_int 0 [0]) "CLDRAD.f":708 718 {nop}
     (nil))
(insn 3842 4428 3843 334 (set (reg:DI 1 dx [2163])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3843 3842 3844 334 (set (reg:DI 0 ax [2164])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3844 3843 3845 334 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":720 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 3845 3844 3846 334 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":720 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 3846 3845 3847 334 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2163])) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3847 3846 3848 334 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2164])) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3848 3847 3849 334 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3849 3848 3850 334 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3850 3849 3851 334 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3851 3850 3852 334 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC34") [flags 0x2]  <var_decl 0x7f2038fb4ea0 *.LC34>)) "CLDRAD.f":720 85 {*movdi_internal}
     (nil))
(insn 3852 3851 3853 334 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":720 88 {*movqi_internal}
     (nil))
(call_insn 3853 3852 3854 334 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":720 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 3854 3853 3855 334 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":720 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 3855 3854 3856 334 (set (reg/f:DI 1 dx [2165])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":721 85 {*movdi_internal}
     (nil))
(insn 3856 3855 3857 334 (set (reg:DI 0 ax [2166])
        (const_int 0 [0])) "CLDRAD.f":721 85 {*movdi_internal}
     (nil))
(insn 3857 3856 4511 334 (set (reg:DI 2 cx [2167])
        (const_int 12 [0xc])) "CLDRAD.f":721 85 {*movdi_internal}
     (nil))
(insn 4511 3857 3858 334 (set (reg/f:DI 5 di [2165])
        (reg/f:DI 1 dx [2165])) "CLDRAD.f":721 85 {*movdi_internal}
     (nil))
(insn 3858 4511 4512 334 (parallel [
            (set (reg:DI 2 cx [2167])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2165])
                (plus:DI (ashift:DI (reg:DI 2 cx [2167])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2165])))
            (set (mem/c:BLK (reg/f:DI 5 di [2165]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2166]))
            (use (reg:DI 2 cx [2167]))
        ]) "CLDRAD.f":721 984 {*rep_stosdi_rex64}
     (nil))
(insn 4512 3858 3859 334 (set (reg/f:DI 1 dx [2165])
        (reg/f:DI 5 di [2165])) "CLDRAD.f":721 85 {*movdi_internal}
     (nil))
(insn 3859 4512 3860 334 (set (mem/c:SI (reg/f:DI 1 dx [2165]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2166])) "CLDRAD.f":721 86 {*movsi_internal}
     (nil))
(insn 3860 3859 3861 334 (parallel [
            (set (reg/f:DI 1 dx [2165])
                (plus:DI (reg/f:DI 1 dx [2165])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":721 222 {*adddi_1}
     (nil))
(insn 3861 3860 3862 334 (set (reg:SI 0 ax [orig:1032 _946 ] [1032])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 640 [0x280]))) [2 rqstfld.iget+624 S4 A128])) "CLDRAD.f":723 86 {*movsi_internal}
     (nil))
(insn 3862 3861 4532 334 (set (reg:DI 0 ax [orig:1033 _947 ] [1033])
        (sign_extend:DI (reg:SI 0 ax [orig:1032 _946 ] [1032]))) "CLDRAD.f":723 149 {*extendsidi2_rex64}
     (nil))
(insn 4532 3862 3864 334 (set (reg:DI 1 dx [orig:1034 _948 ] [1034])
        (plus:DI (reg:DI 0 ax [orig:1033 _947 ] [1033])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":723 218 {*leadi}
     (nil))
(insn 3864 4532 3865 334 (set (reg:DI 0 ax [2168])
        (reg:DI 1 dx [orig:1034 _948 ] [1034])) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3865 3864 3867 334 (parallel [
            (set (reg:DI 0 ax [2169])
                (ashift:DI (reg:DI 0 ax [2168])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":723 551 {*ashldi3_1}
     (nil))
(insn 3867 3865 3868 334 (parallel [
            (set (reg:DI 0 ax [2168])
                (minus:DI (reg:DI 0 ax [2168])
                    (reg:DI 1 dx [orig:1034 _948 ] [1034])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":723 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1034 _948 ] [1034])
            (const_int 15 [0xf]))
        (nil)))
(insn 3868 3867 3871 334 (parallel [
            (set (reg:DI 0 ax [2170])
                (ashift:DI (reg:DI 0 ax [2168])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":723 551 {*ashldi3_1}
     (nil))
(insn 3871 3868 3872 334 (parallel [
            (set (reg:DI 0 ax [2171])
                (plus:DI (reg:DI 0 ax [orig:1035 _949 ] [1035])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":723 222 {*adddi_1}
     (nil))
(insn 3872 3871 4533 334 (parallel [
            (set (reg:DI 0 ax [2172])
                (ashift:DI (reg:DI 0 ax [2171])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":723 551 {*ashldi3_1}
     (nil))
(insn 4533 3872 3874 334 (set (reg/f:DI 1 dx [orig:1036 _950 ] [1036])
        (plus:DI (reg:DI 0 ax [2172])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":723 218 {*leadi}
     (nil))
(insn 3874 4533 3875 334 (set (reg:DI 4 si [2173])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3875 3874 3876 334 (set (reg:DI 2 cx [2174])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3876 3875 3877 334 (set (reg:DI 0 ax [2175])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3877 3876 3878 334 (set (reg:DI 38 r9)
        (reg:DI 4 si [2173])) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3878 3877 3879 334 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2174])) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3879 3878 3881 334 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2175])) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3881 3879 3882 334 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 640 [0x280])))) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3882 3881 3883 334 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":723 85 {*movdi_internal}
     (nil))
(insn 3883 3882 3884 334 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":723 88 {*movqi_internal}
     (nil))
(call_insn 3884 3883 3885 334 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":723 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       336 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 336, loop depth 0, maybe hot
;;  prev block 334, next block 337, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       323
;;              334 (FALLTHRU)
;; bb 336 artificial_defs: { }
;; bb 336 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 3885 3884 3886 336 185 (nil) [1 uses])
(note 3886 3885 3887 336 [bb 336] NOTE_INSN_BASIC_BLOCK)
(insn 3887 3886 3888 336 (set (reg:SI 0 ax [orig:1037 _951 ] [1037])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 576 [0x240]))) [2 rqstfld.iget+560 S4 A128])) "CLDRAD.f":727 86 {*movsi_internal}
     (nil))
(insn 3888 3887 3889 336 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1037 _951 ] [1037])
            (const_int 0 [0]))) "CLDRAD.f":727 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3889 3888 3890 336 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 4040)
            (pc))) "CLDRAD.f":727 682 {*jcc}
     (nil)
 -> 4040)
;;  succ:       337 (FALLTHRU)
;;              349
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 337, loop depth 0, maybe hot
;;  prev block 336, next block 338, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       336 (FALLTHRU)
;; bb 337 artificial_defs: { }
;; bb 337 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx]
(note 3890 3889 3891 337 [bb 337] NOTE_INSN_BASIC_BLOCK)
(insn 3891 3890 3892 337 (set (reg:SI 1 dx [orig:1191 _1591 ] [1191])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CLDRAD.f":728 86 {*movsi_internal}
     (nil))
(insn 3892 3891 3893 337 (set (reg:SI 0 ax [orig:1192 _1592 ] [1192])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f20392c1ea0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CLDRAD.f":728 86 {*movsi_internal}
     (nil))
(insn 3893 3892 3992 337 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:1191 _1591 ] [1191])) "CLDRAD.f":728 86 {*movsi_internal}
     (nil))
;;  succ:       338 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 338, loop depth 0, maybe hot
;;  prev block 337, next block 339, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       337 (FALLTHRU)
;;              345 [always] 
;; bb 338 artificial_defs: { }
;; bb 338 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 3992 3893 3894 338 200 (nil) [1 uses])
(note 3894 3992 3895 338 [bb 338] NOTE_INSN_BASIC_BLOCK)
(insn 3895 3894 3896 338 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:1192 _1592 ] [1192]))) "CLDRAD.f":728 11 {*cmpsi_1}
     (nil))
(insn 3896 3895 3897 338 (set (reg:QI 1 dx [2176])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":728 678 {*setcc_qi}
     (nil))
(insn 3897 3896 3898 338 (set (reg:SI 1 dx [orig:1193 _1594 ] [1193])
        (zero_extend:SI (reg:QI 1 dx [2176]))) "CLDRAD.f":728 140 {*zero_extendqisi2}
     (nil))
(insn 3898 3897 3899 338 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1193 _1594 ] [1193])
            (const_int 0 [0]))) "CLDRAD.f":728 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3899 3898 3900 338 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4433)
            (pc))) "CLDRAD.f":728 682 {*jcc}
     (nil)
 -> 4433)
;;  succ:       347
;;              339 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 339, loop depth 0, maybe hot
;;  prev block 338, next block 340, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       338 (FALLTHRU)
;; bb 339 artificial_defs: { }
;; bb 339 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 3900 3899 3901 339 [bb 339] NOTE_INSN_BASIC_BLOCK)
(insn 3901 3900 3986 339 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CLDRAD.f":729 86 {*movsi_internal}
     (nil))
;;  succ:       340 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 340, loop depth 0, maybe hot
;;  prev block 339, next block 341, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       339 (FALLTHRU)
;;              344 [always] 
;; bb 340 artificial_defs: { }
;; bb 340 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 3986 3901 3902 340 199 (nil) [1 uses])
(note 3902 3986 3903 340 [bb 340] NOTE_INSN_BASIC_BLOCK)
(insn 3903 3902 3904 340 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CLDRAD.f":729 11 {*cmpsi_1}
     (nil))
(insn 3904 3903 3905 340 (set (reg:QI 1 dx [2177])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CLDRAD.f":729 678 {*setcc_qi}
     (nil))
(insn 3905 3904 3906 340 (set (reg:SI 1 dx [orig:1194 _1596 ] [1194])
        (zero_extend:SI (reg:QI 1 dx [2177]))) "CLDRAD.f":729 140 {*zero_extendqisi2}
     (nil))
(insn 3906 3905 3907 340 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:1194 _1596 ] [1194])
            (const_int 0 [0]))) "CLDRAD.f":729 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 3907 3906 3908 340 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4436)
            (pc))) "CLDRAD.f":729 682 {*jcc}
     (nil)
 -> 4436)
;;  succ:       345
;;              341 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 341, loop depth 0, maybe hot
;;  prev block 340, next block 342, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       340 (FALLTHRU)
;; bb 341 artificial_defs: { }
;; bb 341 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 3908 3907 3909 341 [bb 341] NOTE_INSN_BASIC_BLOCK)
(insn 3909 3908 3910 341 (set (reg:SI 1 dx [2178])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":730 86 {*movsi_internal}
     (nil))
(insn 3910 3909 3911 341 (set (reg:DI 1 dx [orig:1038 _952 ] [1038])
        (sign_extend:DI (reg:SI 1 dx [2178]))) "CLDRAD.f":730 149 {*extendsidi2_rex64}
     (nil))
(insn 3911 3910 3912 341 (parallel [
            (set (reg:DI 2 cx [orig:1039 _953 ] [1039])
                (mult:DI (reg:DI 1 dx [orig:1038 _952 ] [1038])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":730 349 {*muldi3_1}
     (nil))
(insn 3912 3911 3913 341 (set (reg:SI 1 dx [2179])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":730 86 {*movsi_internal}
     (nil))
(insn 3913 3912 3914 341 (set (reg:DI 1 dx [orig:1040 _954 ] [1040])
        (sign_extend:DI (reg:SI 1 dx [2179]))) "CLDRAD.f":730 149 {*extendsidi2_rex64}
     (nil))
(insn 3914 3913 4531 341 (parallel [
            (set (reg:DI 1 dx [orig:1041 _955 ] [1041])
                (plus:DI (reg:DI 1 dx [orig:1040 _954 ] [1040])
                    (reg:DI 2 cx [orig:1039 _953 ] [1039])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":730 222 {*adddi_1}
     (nil))
(insn 4531 3914 3916 341 (set (reg:DI 2 cx [orig:1042 _956 ] [1042])
        (plus:DI (reg:DI 1 dx [orig:1041 _955 ] [1041])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":730 218 {*leadi}
     (nil))
(insn 3916 4531 3917 341 (set (reg/f:DI 1 dx [2180])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":730 85 {*movdi_internal}
     (nil))
(insn 3917 3916 3918 341 (parallel [
            (set (reg:DI 2 cx [2181])
                (plus:DI (reg:DI 2 cx [orig:1042 _956 ] [1042])
                    (const_int 504587 [0x7b30b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":730 222 {*adddi_1}
     (nil))
(insn 3918 3917 3919 341 (set (reg:SF 21 xmm0 [orig:1043 _957 ] [1043])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2181])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2180])) [1 phys.czmean S4 A32])) "CLDRAD.f":730 131 {*movsf_internal}
     (nil))
(insn 3919 3918 3920 341 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:1043 _957 ] [1043])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32]))) "CLDRAD.f":730 53 {*cmpisf}
     (nil))
(jump_insn 3920 3919 3924 341 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4299)
            (pc))) "CLDRAD.f":730 682 {*jcc}
     (nil)
 -> 4299)
;;  succ:       342 (FALLTHRU)
;;              343
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 342, loop depth 0, maybe hot
;;  prev block 341, next block 343, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       341 (FALLTHRU)
;; bb 342 artificial_defs: { }
;; bb 342 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(note 3924 3920 3925 342 [bb 342] NOTE_INSN_BASIC_BLOCK)
(insn 3925 3924 3926 342 (set (reg:SI 1 dx [2182])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":731 86 {*movsi_internal}
     (nil))
(insn 3926 3925 3927 342 (set (reg:DI 1 dx [orig:1044 _958 ] [1044])
        (sign_extend:DI (reg:SI 1 dx [2182]))) "CLDRAD.f":731 149 {*extendsidi2_rex64}
     (nil))
(insn 3927 3926 3928 342 (parallel [
            (set (reg:DI 2 cx [orig:1045 _959 ] [1045])
                (mult:DI (reg:DI 1 dx [orig:1044 _958 ] [1044])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":731 349 {*muldi3_1}
     (nil))
(insn 3928 3927 3929 342 (set (reg:SI 1 dx [2183])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":731 86 {*movsi_internal}
     (nil))
(insn 3929 3928 3930 342 (set (reg:DI 1 dx [orig:1046 _960 ] [1046])
        (sign_extend:DI (reg:SI 1 dx [2183]))) "CLDRAD.f":731 149 {*extendsidi2_rex64}
     (nil))
(insn 3930 3929 4529 342 (parallel [
            (set (reg:DI 1 dx [orig:1047 _961 ] [1047])
                (plus:DI (reg:DI 1 dx [orig:1046 _960 ] [1046])
                    (reg:DI 2 cx [orig:1045 _959 ] [1045])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":731 222 {*adddi_1}
     (nil))
(insn 4529 3930 3932 342 (set (reg:DI 2 cx [orig:1048 _962 ] [1048])
        (plus:DI (reg:DI 1 dx [orig:1047 _961 ] [1047])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":731 218 {*leadi}
     (nil))
(insn 3932 4529 3933 342 (set (reg/f:DI 1 dx [2184])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":731 85 {*movdi_internal}
     (nil))
(insn 3933 3932 3934 342 (parallel [
            (set (reg:DI 2 cx [2185])
                (plus:DI (reg:DI 2 cx [orig:1048 _962 ] [1048])
                    (const_int 178646 [0x2b9d6])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":731 222 {*adddi_1}
     (nil))
(insn 3934 3933 3935 342 (set (reg:SF 21 xmm0 [orig:1049 _963 ] [1049])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2185])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2184])) [1 phys.czen S4 A32])) "CLDRAD.f":731 131 {*movsf_internal}
     (nil))
(insn 3935 3934 3936 342 (set (reg:SI 1 dx [2186])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":731 86 {*movsi_internal}
     (nil))
(insn 3936 3935 3937 342 (set (reg:DI 1 dx [orig:1050 _964 ] [1050])
        (sign_extend:DI (reg:SI 1 dx [2186]))) "CLDRAD.f":731 149 {*extendsidi2_rex64}
     (nil))
(insn 3937 3936 3938 342 (parallel [
            (set (reg:DI 2 cx [orig:1051 _965 ] [1051])
                (mult:DI (reg:DI 1 dx [orig:1050 _964 ] [1050])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":731 349 {*muldi3_1}
     (nil))
(insn 3938 3937 3939 342 (set (reg:SI 1 dx [2187])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":731 86 {*movsi_internal}
     (nil))
(insn 3939 3938 3940 342 (set (reg:DI 1 dx [orig:1052 _966 ] [1052])
        (sign_extend:DI (reg:SI 1 dx [2187]))) "CLDRAD.f":731 149 {*extendsidi2_rex64}
     (nil))
(insn 3940 3939 4530 342 (parallel [
            (set (reg:DI 1 dx [orig:1053 _967 ] [1053])
                (plus:DI (reg:DI 1 dx [orig:1052 _966 ] [1052])
                    (reg:DI 2 cx [orig:1051 _965 ] [1051])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":731 222 {*adddi_1}
     (nil))
(insn 4530 3940 3942 342 (set (reg:DI 2 cx [orig:1054 _968 ] [1054])
        (plus:DI (reg:DI 1 dx [orig:1053 _967 ] [1053])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":731 218 {*leadi}
     (nil))
(insn 3942 4530 3943 342 (set (reg/f:DI 1 dx [2188])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)) "CLDRAD.f":731 85 {*movdi_internal}
     (nil))
(insn 3943 3942 3944 342 (parallel [
            (set (reg:DI 2 cx [2189])
                (plus:DI (reg:DI 2 cx [orig:1054 _968 ] [1054])
                    (const_int 504587 [0x7b30b])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":731 222 {*adddi_1}
     (nil))
(insn 3944 3943 3945 342 (set (reg:SF 22 xmm1 [orig:1055 _969 ] [1055])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2189])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2188])) [1 phys.czmean S4 A32])) "CLDRAD.f":731 131 {*movsf_internal}
     (nil))
(insn 3945 3944 3946 342 (set (reg:SF 21 xmm0 [2190])
        (div:SF (reg:SF 21 xmm0 [orig:1049 _963 ] [1049])
            (reg:SF 22 xmm1 [orig:1055 _969 ] [1055]))) "CLDRAD.f":731 841 {*fop_sf_1}
     (nil))
(insn 3946 3945 4300 342 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [1 factrs+0 S4 A32])
        (reg:SF 21 xmm0 [2190])) "CLDRAD.f":731 131 {*movsf_internal}
     (nil))
(jump_insn 4300 3946 4301 342 (set (pc)
        (label_ref 3953)) 683 {jump}
     (nil)
 -> 3953)
;;  succ:       344 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4301 4300 4299)
;; basic block 343, loop depth 0, maybe hot
;;  prev block 342, next block 344, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       341
;; bb 343 artificial_defs: { }
;; bb 343 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 21 [xmm0]
(code_label 4299 4301 3950 343 229 (nil) [1 uses])
(note 3950 4299 4528 343 [bb 343] NOTE_INSN_BASIC_BLOCK)
(insn 4528 3950 3952 343 (set (reg:SF 21 xmm0 [2191])
        (const_double:SF 0.0 [0x0.0p+0])) "CLDRAD.f":733 131 {*movsf_internal}
     (nil))
(insn 3952 4528 3953 343 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [1 factrs+0 S4 A32])
        (reg:SF 21 xmm0 [2191])) "CLDRAD.f":733 131 {*movsf_internal}
     (nil))
;;  succ:       344 (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

;; basic block 344, loop depth 0, maybe hot
;;  prev block 343, next block 345, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       343 (FALLTHRU)
;;              342 [always] 
;; bb 344 artificial_defs: { }
;; bb 344 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 2 [cx] 17 [flags] 21 [xmm0] 22 [xmm1]
(code_label 3953 3952 3954 344 198 (nil) [1 uses])
(note 3954 3953 3955 344 [bb 344] NOTE_INSN_BASIC_BLOCK)
(insn 3955 3954 3956 344 (set (reg:SI 1 dx [2192])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":735 86 {*movsi_internal}
     (nil))
(insn 3956 3955 3957 344 (set (reg:DI 1 dx [orig:1056 _970 ] [1056])
        (sign_extend:DI (reg:SI 1 dx [2192]))) "CLDRAD.f":735 149 {*extendsidi2_rex64}
     (nil))
(insn 3957 3956 3958 344 (parallel [
            (set (reg:DI 2 cx [orig:1057 _971 ] [1057])
                (mult:DI (reg:DI 1 dx [orig:1056 _970 ] [1056])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 349 {*muldi3_1}
     (nil))
(insn 3958 3957 3959 344 (set (reg:SI 1 dx [2193])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":735 86 {*movsi_internal}
     (nil))
(insn 3959 3958 3960 344 (set (reg:DI 1 dx [orig:1058 _972 ] [1058])
        (sign_extend:DI (reg:SI 1 dx [2193]))) "CLDRAD.f":735 149 {*extendsidi2_rex64}
     (nil))
(insn 3960 3959 4525 344 (parallel [
            (set (reg:DI 1 dx [orig:1059 _973 ] [1059])
                (plus:DI (reg:DI 1 dx [orig:1058 _972 ] [1058])
                    (reg:DI 2 cx [orig:1057 _971 ] [1057])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 222 {*adddi_1}
     (nil))
(insn 4525 3960 3962 344 (set (reg:DI 2 cx [orig:1060 _974 ] [1060])
        (plus:DI (reg:DI 1 dx [orig:1059 _973 ] [1059])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":735 218 {*leadi}
     (nil))
(insn 3962 4525 3963 344 (set (reg/f:DI 1 dx [2194])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f20392c13f0 masks>)) "CLDRAD.f":735 85 {*movdi_internal}
     (nil))
(insn 3963 3962 3964 344 (set (reg:SF 22 xmm1 [orig:1061 _975 ] [1061])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1060 _974 ] [1060])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2194])) [1 masks.hbm2 S4 A32])) "CLDRAD.f":735 131 {*movsf_internal}
     (nil))
(insn 3964 3963 3965 344 (set (reg:SI 1 dx [2195])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":735 86 {*movsi_internal}
     (nil))
(insn 3965 3964 3966 344 (set (reg:DI 1 dx [orig:1062 _976 ] [1062])
        (sign_extend:DI (reg:SI 1 dx [2195]))) "CLDRAD.f":735 149 {*extendsidi2_rex64}
     (nil))
(insn 3966 3965 3967 344 (parallel [
            (set (reg:DI 2 cx [orig:1063 _977 ] [1063])
                (mult:DI (reg:DI 1 dx [orig:1062 _976 ] [1062])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 349 {*muldi3_1}
     (nil))
(insn 3967 3966 3968 344 (set (reg:SI 1 dx [2196])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":735 86 {*movsi_internal}
     (nil))
(insn 3968 3967 3969 344 (set (reg:DI 1 dx [orig:1064 _978 ] [1064])
        (sign_extend:DI (reg:SI 1 dx [2196]))) "CLDRAD.f":735 149 {*extendsidi2_rex64}
     (nil))
(insn 3969 3968 4526 344 (parallel [
            (set (reg:DI 1 dx [orig:1065 _979 ] [1065])
                (plus:DI (reg:DI 1 dx [orig:1064 _978 ] [1064])
                    (reg:DI 2 cx [orig:1063 _977 ] [1063])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 222 {*adddi_1}
     (nil))
(insn 4526 3969 3971 344 (set (reg:DI 2 cx [orig:1066 _980 ] [1066])
        (plus:DI (reg:DI 1 dx [orig:1065 _979 ] [1065])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":735 218 {*leadi}
     (nil))
(insn 3971 4526 3972 344 (set (reg/f:DI 1 dx [2197])
        (symbol_ref:DI ("acmrds_") [flags 0x202]  <var_decl 0x7f20392a8480 acmrds>)) "CLDRAD.f":735 85 {*movdi_internal}
     (nil))
(insn 3972 3971 3973 344 (parallel [
            (set (reg:DI 2 cx [2198])
                (plus:DI (reg:DI 2 cx [orig:1066 _980 ] [1066])
                    (const_int 29634 [0x73c2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 222 {*adddi_1}
     (nil))
(insn 3973 3972 3974 344 (set (reg:SF 21 xmm0 [orig:1067 _981 ] [1067])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [2198])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2197])) [1 acmrds.rswout S4 A32])) "CLDRAD.f":735 131 {*movsf_internal}
     (nil))
(insn 3974 3973 3975 344 (set (reg:SF 21 xmm0 [orig:1068 _982 ] [1068])
        (mult:SF (reg:SF 21 xmm0 [orig:1067 _981 ] [1067])
            (reg:SF 22 xmm1 [orig:1061 _975 ] [1061]))) "CLDRAD.f":735 838 {*fop_sf_comm}
     (nil))
(insn 3975 3974 3976 344 (set (reg:SI 1 dx [2199])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])) "CLDRAD.f":735 86 {*movsi_internal}
     (nil))
(insn 3976 3975 3977 344 (set (reg:DI 1 dx [orig:1069 _983 ] [1069])
        (sign_extend:DI (reg:SI 1 dx [2199]))) "CLDRAD.f":735 149 {*extendsidi2_rex64}
     (nil))
(insn 3977 3976 3978 344 (parallel [
            (set (reg:DI 2 cx [orig:1070 _984 ] [1070])
                (mult:DI (reg:DI 1 dx [orig:1069 _983 ] [1069])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 349 {*muldi3_1}
     (nil))
(insn 3978 3977 3979 344 (set (reg:SI 1 dx [2200])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])) "CLDRAD.f":735 86 {*movsi_internal}
     (nil))
(insn 3979 3978 3980 344 (set (reg:DI 1 dx [orig:1071 _985 ] [1071])
        (sign_extend:DI (reg:SI 1 dx [2200]))) "CLDRAD.f":735 149 {*extendsidi2_rex64}
     (nil))
(insn 3980 3979 4527 344 (parallel [
            (set (reg:DI 1 dx [orig:1072 _986 ] [1072])
                (plus:DI (reg:DI 1 dx [orig:1071 _985 ] [1071])
                    (reg:DI 2 cx [orig:1070 _984 ] [1070])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":735 222 {*adddi_1}
     (nil))
(insn 4527 3980 3982 344 (set (reg:DI 2 cx [orig:1073 _987 ] [1073])
        (plus:DI (reg:DI 1 dx [orig:1072 _986 ] [1072])
            (const_int -120 [0xffffffffffffff88]))) "CLDRAD.f":735 218 {*leadi}
     (nil))
(insn 3982 4527 3983 344 (set (reg:SF 21 xmm0 [orig:1074 _988 ] [1074])
        (mult:SF (reg:SF 21 xmm0 [orig:1068 _982 ] [1068])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [1 factrs+0 S4 A32]))) "CLDRAD.f":735 838 {*fop_sf_comm}
     (nil))
(insn 3983 3982 3984 344 (set (reg/f:DI 1 dx [2201])
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":735 85 {*movdi_internal}
     (nil))
(insn 3984 3983 3985 344 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:1073 _987 ] [1073])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [2201])) [1 egrid1 S4 A32])
        (reg:SF 21 xmm0 [orig:1074 _988 ] [1074])) "CLDRAD.f":735 131 {*movsf_internal}
     (nil))
(insn 3985 3984 4302 344 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":729 221 {*addsi_1}
     (nil))
(jump_insn 4302 3985 4303 344 (set (pc)
        (label_ref 3986)) "CLDRAD.f":729 683 {jump}
     (nil)
 -> 3986)
;;  succ:       340 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4303 4302 4436)
;; basic block 345, loop depth 0, maybe hot
;;  prev block 344, next block 347, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       340
;; bb 345 artificial_defs: { }
;; bb 345 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4436 4303 4435 345 273 (nil) [1 uses])
(note 4435 4436 4437 345 [bb 345] NOTE_INSN_BASIC_BLOCK)
(insn 4437 4435 3991 345 (const_int 0 [0]) "CLDRAD.f":735 718 {nop}
     (nil))
(insn 3991 4437 4304 345 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":728 221 {*addsi_1}
     (nil))
(jump_insn 4304 3991 4305 345 (set (pc)
        (label_ref 3992)) "CLDRAD.f":728 683 {jump}
     (nil)
 -> 3992)
;;  succ:       338 [always] 
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]

(barrier 4305 4304 4433)
;; basic block 347, loop depth 0, maybe hot
;;  prev block 345, next block 349, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       338
;; bb 347 artificial_defs: { }
;; bb 347 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4433 4305 4432 347 272 (nil) [1 uses])
(note 4432 4433 4434 347 [bb 347] NOTE_INSN_BASIC_BLOCK)
(insn 4434 4432 3997 347 (const_int 0 [0]) "CLDRAD.f":729 718 {nop}
     (nil))
(insn 3997 4434 3998 347 (set (reg:DI 1 dx [2202])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 3998 3997 3999 347 (set (reg:DI 0 ax [2203])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 3999 3998 4000 347 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":739 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 4000 3999 4001 347 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":739 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 4001 4000 4002 347 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2202])) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 4002 4001 4003 347 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2203])) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 4003 4002 4004 347 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 4004 4003 4005 347 (set (reg:DI 1 dx)
        (symbol_ref:DI ("egrid1.4379") [flags 0x202]  <var_decl 0x7f20392d7ab0 egrid1>)) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 4005 4004 4006 347 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 4006 4005 4007 347 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC35") [flags 0x2]  <var_decl 0x7f2038fb4f30 *.LC35>)) "CLDRAD.f":739 85 {*movdi_internal}
     (nil))
(insn 4007 4006 4008 347 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":739 88 {*movqi_internal}
     (nil))
(call_insn 4008 4007 4009 347 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":739 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 4009 4008 4010 347 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":739 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 4010 4009 4011 347 (set (reg/f:DI 1 dx [2204])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":740 85 {*movdi_internal}
     (nil))
(insn 4011 4010 4012 347 (set (reg:DI 0 ax [2205])
        (const_int 0 [0])) "CLDRAD.f":740 85 {*movdi_internal}
     (nil))
(insn 4012 4011 4513 347 (set (reg:DI 2 cx [2206])
        (const_int 12 [0xc])) "CLDRAD.f":740 85 {*movdi_internal}
     (nil))
(insn 4513 4012 4013 347 (set (reg/f:DI 5 di [2204])
        (reg/f:DI 1 dx [2204])) "CLDRAD.f":740 85 {*movdi_internal}
     (nil))
(insn 4013 4513 4514 347 (parallel [
            (set (reg:DI 2 cx [2206])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2204])
                (plus:DI (ashift:DI (reg:DI 2 cx [2206])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2204])))
            (set (mem/c:BLK (reg/f:DI 5 di [2204]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2205]))
            (use (reg:DI 2 cx [2206]))
        ]) "CLDRAD.f":740 984 {*rep_stosdi_rex64}
     (nil))
(insn 4514 4013 4014 347 (set (reg/f:DI 1 dx [2204])
        (reg/f:DI 5 di [2204])) "CLDRAD.f":740 85 {*movdi_internal}
     (nil))
(insn 4014 4514 4015 347 (set (mem/c:SI (reg/f:DI 1 dx [2204]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2205])) "CLDRAD.f":740 86 {*movsi_internal}
     (nil))
(insn 4015 4014 4016 347 (parallel [
            (set (reg/f:DI 1 dx [2204])
                (plus:DI (reg/f:DI 1 dx [2204])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":740 222 {*adddi_1}
     (nil))
(insn 4016 4015 4017 347 (set (reg:SI 0 ax [orig:1075 _989 ] [1075])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 576 [0x240]))) [2 rqstfld.iget+560 S4 A128])) "CLDRAD.f":742 86 {*movsi_internal}
     (nil))
(insn 4017 4016 4523 347 (set (reg:DI 0 ax [orig:1076 _990 ] [1076])
        (sign_extend:DI (reg:SI 0 ax [orig:1075 _989 ] [1075]))) "CLDRAD.f":742 149 {*extendsidi2_rex64}
     (nil))
(insn 4523 4017 4019 347 (set (reg:DI 1 dx [orig:1077 _991 ] [1077])
        (plus:DI (reg:DI 0 ax [orig:1076 _990 ] [1076])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":742 218 {*leadi}
     (nil))
(insn 4019 4523 4020 347 (set (reg:DI 0 ax [2207])
        (reg:DI 1 dx [orig:1077 _991 ] [1077])) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4020 4019 4022 347 (parallel [
            (set (reg:DI 0 ax [2208])
                (ashift:DI (reg:DI 0 ax [2207])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":742 551 {*ashldi3_1}
     (nil))
(insn 4022 4020 4023 347 (parallel [
            (set (reg:DI 0 ax [2207])
                (minus:DI (reg:DI 0 ax [2207])
                    (reg:DI 1 dx [orig:1077 _991 ] [1077])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":742 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1077 _991 ] [1077])
            (const_int 15 [0xf]))
        (nil)))
(insn 4023 4022 4026 347 (parallel [
            (set (reg:DI 0 ax [2209])
                (ashift:DI (reg:DI 0 ax [2207])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":742 551 {*ashldi3_1}
     (nil))
(insn 4026 4023 4027 347 (parallel [
            (set (reg:DI 0 ax [2210])
                (plus:DI (reg:DI 0 ax [orig:1078 _992 ] [1078])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":742 222 {*adddi_1}
     (nil))
(insn 4027 4026 4524 347 (parallel [
            (set (reg:DI 0 ax [2211])
                (ashift:DI (reg:DI 0 ax [2210])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":742 551 {*ashldi3_1}
     (nil))
(insn 4524 4027 4029 347 (set (reg/f:DI 1 dx [orig:1079 _993 ] [1079])
        (plus:DI (reg:DI 0 ax [2211])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":742 218 {*leadi}
     (nil))
(insn 4029 4524 4030 347 (set (reg:DI 4 si [2212])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4030 4029 4031 347 (set (reg:DI 2 cx [2213])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4031 4030 4032 347 (set (reg:DI 0 ax [2214])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4032 4031 4033 347 (set (reg:DI 38 r9)
        (reg:DI 4 si [2212])) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4033 4032 4034 347 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2213])) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4034 4033 4036 347 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2214])) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4036 4034 4037 347 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 576 [0x240])))) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4037 4036 4038 347 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":742 85 {*movdi_internal}
     (nil))
(insn 4038 4037 4039 347 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":742 88 {*movqi_internal}
     (nil))
(call_insn 4039 4038 4040 347 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":742 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       349 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 349, loop depth 0, maybe hot
;;  prev block 347, next block 350, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       336
;;              347 (FALLTHRU)
;; bb 349 artificial_defs: { }
;; bb 349 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 4040 4039 4041 349 193 (nil) [1 uses])
(note 4041 4040 4042 349 [bb 349] NOTE_INSN_BASIC_BLOCK)
(insn 4042 4041 4043 349 (set (reg:SI 0 ax [orig:1080 _994 ] [1080])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 580 [0x244]))) [2 rqstfld.iget+564 S4 A32])) "CLDRAD.f":746 86 {*movsi_internal}
     (nil))
(insn 4043 4042 4044 349 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:1080 _994 ] [1080])
            (const_int 0 [0]))) "CLDRAD.f":746 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 4044 4043 4045 349 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 4441)
            (pc))) "CLDRAD.f":746 682 {*jcc}
     (nil)
 -> 4441)
;;  succ:       350 (FALLTHRU)
;;              351
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 350, loop depth 0, maybe hot
;;  prev block 349, next block 351, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       349 (FALLTHRU)
;; bb 350 artificial_defs: { }
;; bb 350 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 4045 4044 4046 350 [bb 350] NOTE_INSN_BASIC_BLOCK)
(insn 4046 4045 4047 350 (set (reg:DI 1 dx [2215])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4047 4046 4048 350 (set (reg:DI 0 ax [2216])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4048 4047 4049 350 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":747 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 4049 4048 4050 350 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":747 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 4050 4049 4051 350 (set (reg:DI 38 r9)
        (reg:DI 1 dx [2215])) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4051 4050 4052 350 (set (reg:DI 37 r8)
        (reg:DI 0 ax [2216])) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4052 4051 4053 350 (set (reg:DI 2 cx)
        (symbol_ref:DI ("egrid2.4381") [flags 0x202]  <var_decl 0x7f20392d7b40 egrid2>)) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4053 4052 4054 350 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f20392c6750 phys>)
                (const_int 359012 [0x57a64])))) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4054 4053 4055 350 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f2038fb4120 *.LC1>)) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4055 4054 4056 350 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC36") [flags 0x2]  <var_decl 0x7f2038fb4000 *.LC36>)) "CLDRAD.f":747 85 {*movdi_internal}
     (nil))
(insn 4056 4055 4057 350 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":747 88 {*movqi_internal}
     (nil))
(call_insn 4057 4056 4058 350 (call (mem:QI (symbol_ref:DI ("e2out_") [flags 0x41]  <function_decl 0x7f203929e700 e2out>) [0 e2out S1 A8])
        (const_int 16 [0x10])) "CLDRAD.f":747 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 4058 4057 4059 350 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":747 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 4059 4058 4060 350 (set (reg/f:DI 1 dx [2217])
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 55216 [0xd7b0])))) "CLDRAD.f":748 85 {*movdi_internal}
     (nil))
(insn 4060 4059 4061 350 (set (reg:DI 0 ax [2218])
        (const_int 0 [0])) "CLDRAD.f":748 85 {*movdi_internal}
     (nil))
(insn 4061 4060 4515 350 (set (reg:DI 2 cx [2219])
        (const_int 12 [0xc])) "CLDRAD.f":748 85 {*movdi_internal}
     (nil))
(insn 4515 4061 4062 350 (set (reg/f:DI 5 di [2217])
        (reg/f:DI 1 dx [2217])) "CLDRAD.f":748 85 {*movdi_internal}
     (nil))
(insn 4062 4515 4516 350 (parallel [
            (set (reg:DI 2 cx [2219])
                (const_int 0 [0]))
            (set (reg/f:DI 5 di [2217])
                (plus:DI (ashift:DI (reg:DI 2 cx [2219])
                        (const_int 3 [0x3]))
                    (reg/f:DI 5 di [2217])))
            (set (mem/c:BLK (reg/f:DI 5 di [2217]) [2 rqstfld.id+0 S96 A128])
                (const_int 0 [0]))
            (use (reg:DI 0 ax [2218]))
            (use (reg:DI 2 cx [2219]))
        ]) "CLDRAD.f":748 984 {*rep_stosdi_rex64}
     (nil))
(insn 4516 4062 4063 350 (set (reg/f:DI 1 dx [2217])
        (reg/f:DI 5 di [2217])) "CLDRAD.f":748 85 {*movdi_internal}
     (nil))
(insn 4063 4516 4064 350 (set (mem/c:SI (reg/f:DI 1 dx [2217]) [2 rqstfld.id+96 S4 A128])
        (reg:SI 0 ax [2218])) "CLDRAD.f":748 86 {*movsi_internal}
     (nil))
(insn 4064 4063 4065 350 (parallel [
            (set (reg/f:DI 1 dx [2217])
                (plus:DI (reg/f:DI 1 dx [2217])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":748 222 {*adddi_1}
     (nil))
(insn 4065 4064 4066 350 (set (reg:SI 0 ax [orig:1081 _995 ] [1081])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                    (const_int 580 [0x244]))) [2 rqstfld.iget+564 S4 A32])) "CLDRAD.f":750 86 {*movsi_internal}
     (nil))
(insn 4066 4065 4521 350 (set (reg:DI 0 ax [orig:1082 _996 ] [1082])
        (sign_extend:DI (reg:SI 0 ax [orig:1081 _995 ] [1081]))) "CLDRAD.f":750 149 {*extendsidi2_rex64}
     (nil))
(insn 4521 4066 4068 350 (set (reg:DI 1 dx [orig:1083 _997 ] [1083])
        (plus:DI (reg:DI 0 ax [orig:1082 _996 ] [1082])
            (const_int -1 [0xffffffffffffffff]))) "CLDRAD.f":750 218 {*leadi}
     (nil))
(insn 4068 4521 4069 350 (set (reg:DI 0 ax [2220])
        (reg:DI 1 dx [orig:1083 _997 ] [1083])) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4069 4068 4071 350 (parallel [
            (set (reg:DI 0 ax [2221])
                (ashift:DI (reg:DI 0 ax [2220])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":750 551 {*ashldi3_1}
     (nil))
(insn 4071 4069 4072 350 (parallel [
            (set (reg:DI 0 ax [2220])
                (minus:DI (reg:DI 0 ax [2220])
                    (reg:DI 1 dx [orig:1083 _997 ] [1083])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":750 278 {*subdi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:1083 _997 ] [1083])
            (const_int 15 [0xf]))
        (nil)))
(insn 4072 4071 4075 350 (parallel [
            (set (reg:DI 0 ax [2222])
                (ashift:DI (reg:DI 0 ax [2220])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":750 551 {*ashldi3_1}
     (nil))
(insn 4075 4072 4076 350 (parallel [
            (set (reg:DI 0 ax [2223])
                (plus:DI (reg:DI 0 ax [orig:1084 _998 ] [1084])
                    (const_int 1404 [0x57c])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":750 222 {*adddi_1}
     (nil))
(insn 4076 4075 4522 350 (parallel [
            (set (reg:DI 0 ax [2224])
                (ashift:DI (reg:DI 0 ax [2223])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CLDRAD.f":750 551 {*ashldi3_1}
     (nil))
(insn 4522 4076 4078 350 (set (reg/f:DI 1 dx [orig:1085 _999 ] [1085])
        (plus:DI (reg:DI 0 ax [2224])
            (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>))) "CLDRAD.f":750 218 {*leadi}
     (nil))
(insn 4078 4522 4079 350 (set (reg:DI 4 si [2225])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [5 jmout+0 S8 A64])) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4079 4078 4080 350 (set (reg:DI 2 cx [2226])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [5 imout+0 S8 A64])) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4080 4079 4081 350 (set (reg:DI 0 ax [2227])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4081 4080 4082 350 (set (reg:DI 38 r9)
        (reg:DI 4 si [2225])) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4082 4081 4083 350 (set (reg:DI 37 r8)
        (reg:DI 2 cx [2226])) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4083 4082 4085 350 (set (reg:DI 2 cx)
        (reg:DI 0 ax [2227])) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4085 4083 4086 350 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 580 [0x244])))) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4086 4085 4087 350 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f20392d15a0 rqstfld>)
                (const_int 4 [0x4])))) "CLDRAD.f":750 85 {*movdi_internal}
     (nil))
(insn 4087 4086 4088 350 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CLDRAD.f":750 88 {*movqi_internal}
     (nil))
(call_insn 4088 4087 4441 350 (call (mem:QI (symbol_ref:DI ("output_") [flags 0x41]  <function_decl 0x7f203929e800 output>) [0 output S1 A8])
        (const_int 0 [0])) "CLDRAD.f":750 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
;;  succ:       351 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 351, loop depth 0, maybe hot
;;  prev block 350, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       349
;;              350 [always]  (FALLTHRU)
;; bb 351 artificial_defs: { }
;; bb 351 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 4441 4088 4440 351 274 (nil) [1 uses])
(note 4440 4441 4442 351 [bb 351] NOTE_INSN_BASIC_BLOCK)
(insn 4442 4440 4092 351 (const_int 0 [0]) "CLDRAD.f":755 718 {nop}
     (nil))
(insn 4092 4442 4093 351 (set (reg:DI 0 ax [2228])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 grid2+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 4093 4092 4094 351 (set (reg:DI 5 di)
        (reg:DI 0 ax [2228])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(call_insn 4094 4093 4095 351 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f2039124e00 __builtin_free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "CLDRAD.f":105 689 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 4095 4094 4096 351 (set (reg:DI 0 ax [2229])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [4 grid1+0 S8 A64])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(insn 4096 4095 4097 351 (set (reg:DI 5 di)
        (reg:DI 0 ax [2229])) "CLDRAD.f":105 85 {*movdi_internal}
     (nil))
(call_insn 4097 4096 4158 351 (call (mem:QI (symbol_ref:DI ("free") [flags 0x41]  <function_decl 0x7f2039124e00 __builtin_free>) [0 __builtin_free S1 A8])
        (const_int 0 [0])) "CLDRAD.f":105 689 {*call}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 4158 4097 4749 351 (const_int 0 [0]) "CLDRAD.f":755 718 {nop}
     (nil))
(note 4749 4158 4750 351 NOTE_INSN_EPILOGUE_BEG)
(insn 4750 4749 4751 351 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "CLDRAD.f":756 -1
     (nil))
(insn 4751 4750 4752 351 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "CLDRAD.f":756 -1
     (nil))
(insn 4752 4751 4753 351 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "CLDRAD.f":756 -1
     (nil))
(insn 4753 4752 4754 351 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "CLDRAD.f":756 -1
     (nil))
(insn 4754 4753 4755 351 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "CLDRAD.f":756 -1
     (nil))
(insn/f 4755 4754 4756 351 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "CLDRAD.f":756 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 4756 4755 4757 351 (simple_return) "CLDRAD.f":756 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 4757 4756 4443)
(note 4443 4757 0 NOTE_INSN_DELETED)
