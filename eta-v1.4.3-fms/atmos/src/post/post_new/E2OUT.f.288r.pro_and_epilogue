
;; Function e2out (e2out_, funcdef_no=0, decl_uid=3770, cgraph_uid=0, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 183 n_edges 288 count 253 (  1.4)
scanning new insn with uid = 1547.
scanning new insn with uid = 1548.
scanning new insn with uid = 1549.
scanning new insn with uid = 1550.
scanning new insn with uid = 1551.
scanning new insn with uid = 1552.
scanning new insn with uid = 1553.
scanning new insn with uid = 1538.
scanning new insn with uid = 1539.
scanning new insn with uid = 1540.
scanning new insn with uid = 1541.
scanning new insn with uid = 1542.
scanning new insn with uid = 1543.
scanning new insn with uid = 1544.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 66.
verify found no changes in insn with uid = 185.
verify found no changes in insn with uid = 251.
verify found no changes in insn with uid = 334.
verify found no changes in insn with uid = 355.
verify found no changes in insn with uid = 384.
verify found no changes in insn with uid = 399.
verify found no changes in insn with uid = 428.
verify found no changes in insn with uid = 447.
verify found no changes in insn with uid = 469.
verify found no changes in insn with uid = 517.
verify found no changes in insn with uid = 529.
verify found no changes in insn with uid = 590.
verify found no changes in insn with uid = 617.
verify found no changes in insn with uid = 633.
verify found no changes in insn with uid = 642.
verify found no changes in insn with uid = 650.
verify found no changes in insn with uid = 679.
verify found no changes in insn with uid = 799.
verify found no changes in insn with uid = 826.
verify found no changes in insn with uid = 895.
verify found no changes in insn with uid = 902.
verify found no changes in insn with uid = 924.
verify found no changes in insn with uid = 953.
verify found no changes in insn with uid = 1002.
verify found no changes in insn with uid = 1011.
verify found no changes in insn with uid = 1019.
verify found no changes in insn with uid = 1135.
verify found no changes in insn with uid = 1153.
verify found no changes in insn with uid = 1196.
verify found no changes in insn with uid = 1262.
verify found no changes in insn with uid = 1271.
verify found no changes in insn with uid = 1280.
verify found no changes in insn with uid = 1322.
verify found no changes in insn with uid = 1362.
verify found no changes in insn with uid = 1368.
verify found no changes in insn with uid = 1372.


try_optimize_cfg iteration 1

Merging block 31 into block 30...
changing bb of uid 235
  from 31 to 30
changing bb of uid 1389
  from 31 to 30
Merged blocks 30 and 31.
Merged 30 and 31 without moving.
Merging block 33 into block 32...
changing bb of uid 241
  from 33 to 32
changing bb of uid 242
  from 33 to 32
changing bb of uid 243
  from 33 to 32
changing bb of uid 244
  from 33 to 32
Merged blocks 32 and 33.
Merged 32 and 33 without moving.
Merging block 40 into block 39...
changing bb of uid 292
  from 40 to 39
changing bb of uid 1393
  from 40 to 39
Merged blocks 39 and 40.
Merged 39 and 40 without moving.
Merging block 42 into block 41...
changing bb of uid 1395
  from 42 to 41
Merged blocks 41 and 42.
Merged 41 and 42 without moving.
Merging block 96 into block 95...
changing bb of uid 735
  from 96 to 95
changing bb of uid 1405
  from 96 to 95
Merged blocks 95 and 96.
Merged 95 and 96 without moving.
Merging block 98 into block 97...
changing bb of uid 741
  from 98 to 97
changing bb of uid 742
  from 98 to 97
changing bb of uid 743
  from 98 to 97
changing bb of uid 744
  from 98 to 97
Merged blocks 97 and 98.
Merged 97 and 98 without moving.
Merging block 117 into block 116...
changing bb of uid 869
  from 117 to 116
changing bb of uid 1409
  from 117 to 116
Merged blocks 116 and 117.
Merged 116 and 117 without moving.
Merging block 140 into block 139...
changing bb of uid 1073
  from 140 to 139
changing bb of uid 1415
  from 140 to 139
Merged blocks 139 and 140.
Merged 139 and 140 without moving.
Merging block 142 into block 141...
changing bb of uid 1079
  from 142 to 141
Merged blocks 141 and 142.
Merged 141 and 142 without moving.
Merging block 148 into block 147...
changing bb of uid 1119
  from 148 to 147
changing bb of uid 1419
  from 148 to 147
Merged blocks 147 and 148.
Merged 147 and 148 without moving.
Forwarding edge 149->150 to 172 failed.
Merging block 168 into block 167...
changing bb of uid 1250
  from 168 to 167
changing bb of uid 1427
  from 168 to 167
Merged blocks 167 and 168.
Merged 167 and 168 without moving.


try_optimize_cfg iteration 2

Forwarding edge 149->150 to 172 failed.


try_optimize_cfg iteration 1

Forwarding edge 149->150 to 172 failed.
starting the processing of deferred insns
ending the processing of deferred insns


e2out

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14]
;;  ref usage 	r0={534d,501u} r1={118d,82u} r2={72d,34u} r3={4d,10u} r4={74d,36u} r5={79d,41u} r6={3d,433u} r7={27d,239u} r8={38d} r9={38d} r10={38d} r11={38d} r12={38d} r13={38d} r14={38d} r15={38d} r17={274d,124u} r18={38d} r19={38d} r20={1d,1u} r21={48d,9u} r22={39d} r23={39d} r24={39d} r25={39d} r26={39d} r27={39d} r28={39d} r29={38d} r30={38d} r31={38d} r32={38d} r33={38d} r34={38d} r35={38d} r36={38d} r37={47d,9u} r38={44d,6u} r39={39d} r40={39d} r41={4d,8u} r42={5d,8u} r43={4d,7u} r45={38d} r46={38d} r47={38d} r48={38d} r49={38d} r50={38d} r51={38d} r52={38d} r53={38d} r54={38d} r55={38d} r56={38d} r57={38d} r58={38d} r59={38d} r60={38d} r61={38d} r62={38d} r63={38d} r64={38d} r65={38d} r66={38d} r67={38d} r68={38d} r69={38d} r70={38d} r71={38d} r72={38d} r73={38d} r74={38d} r75={38d} r76={38d} r77={38d} r78={38d} r79={38d} r80={38d} 
;;    total ref usage 5289{3741d,1548u,0e} in 1118{1080 regular + 38 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 9 1 1538 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 1538 9 1539 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) "E2OUT.f":1 -1
     (nil))
(insn/f 1539 1538 1540 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) "E2OUT.f":1 -1
     (nil))
(insn/f 1540 1539 1541 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) "E2OUT.f":1 -1
     (nil))
(insn/f 1541 1540 1542 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) "E2OUT.f":1 -1
     (nil))
(insn/f 1542 1541 1543 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) "E2OUT.f":1 -1
     (nil))
(insn/f 1543 1542 1544 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) "E2OUT.f":1 -1
     (nil))
(insn/f 1544 1543 1545 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "E2OUT.f":1 -1
     (nil))
(note 1545 1544 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 1545 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])
        (reg:DI 5 di [ itag1 ])) "E2OUT.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])
        (reg:DI 4 si [ itag2 ])) "E2OUT.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])
        (reg:DI 1 dx [ egrid1 ])) "E2OUT.f":1 85 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])
        (reg:DI 2 cx [ egrid2 ])) "E2OUT.f":1 85 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])
        (reg:DI 37 r8 [ grid1 ])) "E2OUT.f":1 85 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])
        (reg:DI 38 r9 [ grid2 ])) "E2OUT.f":1 85 {*movdi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [416])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [416]) [1 *imout_347(D)+0 S4 A32])) "E2OUT.f":2 86 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 0 ax [417])
        (sign_extend:DI (reg:SI 0 ax [orig:87 _1 ] [87]))) "E2OUT.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.0+0 S8 A64])
        (reg:DI 0 ax [417])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 15 14 17 2 (set (reg:DI 0 ax [orig:380 stride.2_349 ] [380])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.0+0 S8 A64])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 17 15 16 2 (set (reg:DI 1 dx [418])
        (const_int 0 [0])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 16 17 1484 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:380 stride.2_349 ] [380])
            (const_int 0 [0]))) "E2OUT.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 1484 16 18 2 (set (reg:DI 3 bx [418])
        (reg:DI 1 dx [418])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 18 1484 19 2 (set (reg:DI 3 bx [418])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:380 stride.2_349 ] [380])
            (reg:DI 3 bx [418]))) "E2OUT.f":2 1003 {*movdicc_noc}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 0 ax [419])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 0 ax [orig:88 _2 ] [88])
        (mem:SI (reg/f:DI 0 ax [419]) [1 *jmout_351(D)+0 S4 A32])) "E2OUT.f":2 86 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 0 ax [420])
        (sign_extend:DI (reg:SI 0 ax [orig:88 _2 ] [88]))) "E2OUT.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 22 21 1486 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 ubound.1+0 S8 A64])
        (reg:DI 0 ax [420])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 1486 22 23 2 (set (reg:DI 0 ax [orig:382 size.4_353 ] [382])
        (reg:DI 3 bx [orig:381 stride.2_350 ] [381])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 23 1486 25 2 (parallel [
            (set (reg:DI 0 ax [orig:382 size.4_353 ] [382])
                (mult:DI (reg:DI 0 ax [orig:382 size.4_353 ] [382])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":2 349 {*muldi3_1}
     (nil))
(insn 25 23 24 2 (set (reg:DI 1 dx [421])
        (const_int 0 [0])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 24 25 26 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:382 size.4_353 ] [382])
            (const_int 0 [0]))) "E2OUT.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 26 24 29 2 (set (reg:DI 0 ax [orig:383 size.4_354 ] [383])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:382 size.4_353 ] [382])
            (reg:DI 1 dx [421]))) "E2OUT.f":2 1003 {*movdicc_noc}
     (nil))
(insn 29 26 30 2 (set (reg:DI 41 r12 [orig:90 _4 ] [90])
        (reg:DI 0 ax [orig:89 size.14_3 ] [89])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 30 29 1488 2 (set (reg:DI 42 r13 [ _4+8 ])
        (const_int 0 [0])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 1488 30 34 2 (set (reg:DI 42 r13 [orig:387 offset.3_358 ] [387])
        (reg:DI 3 bx [orig:381 stride.2_350 ] [381])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 34 1488 35 2 (set (reg:DI 42 r13 [orig:387 offset.3_358 ] [387])
        (not:DI (reg:DI 42 r13 [orig:387 offset.3_358 ] [387]))) "E2OUT.f":2 532 {*one_cmpldi2_1}
     (nil))
(insn 35 34 36 2 (set (reg/f:DI 0 ax [422])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:SI 0 ax [orig:92 _6 ] [92])
        (mem:SI (reg/f:DI 0 ax [422]) [1 *imout_347(D)+0 S4 A32])) "E2OUT.f":2 86 {*movsi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:DI 0 ax [423])
        (sign_extend:DI (reg:SI 0 ax [orig:92 _6 ] [92]))) "E2OUT.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 38 37 39 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 ubound.5+0 S8 A64])
        (reg:DI 0 ax [423])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 39 38 41 2 (set (reg:DI 0 ax [orig:388 stride.7_360 ] [388])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 ubound.5+0 S8 A64])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 41 39 40 2 (set (reg:DI 1 dx [424])
        (const_int 0 [0])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 40 41 42 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:388 stride.7_360 ] [388])
            (const_int 0 [0]))) "E2OUT.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 42 40 1491 2 (set (reg:DI 1 dx [424])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:388 stride.7_360 ] [388])
            (reg:DI 1 dx [424]))) "E2OUT.f":2 1003 {*movdicc_noc}
     (nil))
(insn 1491 42 43 2 (set (reg:DI 41 r12 [orig:389 stride.7_361 ] [389])
        (reg:DI 1 dx [424])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 43 1491 44 2 (set (reg/f:DI 0 ax [425])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:SI 0 ax [orig:93 _7 ] [93])
        (mem:SI (reg/f:DI 0 ax [425]) [1 *jmout_351(D)+0 S4 A32])) "E2OUT.f":2 86 {*movsi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 0 ax [426])
        (sign_extend:DI (reg:SI 0 ax [orig:93 _7 ] [93]))) "E2OUT.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 46 45 1492 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 ubound.6+0 S8 A64])
        (reg:DI 0 ax [426])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 1492 46 47 2 (set (reg:DI 0 ax [orig:390 size.9_363 ] [390])
        (reg:DI 41 r12 [orig:389 stride.7_361 ] [389])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 47 1492 49 2 (parallel [
            (set (reg:DI 0 ax [orig:390 size.9_363 ] [390])
                (mult:DI (reg:DI 0 ax [orig:390 size.9_363 ] [390])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -72 [0xffffffffffffffb8])) [2 ubound.6+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":2 349 {*muldi3_1}
     (nil))
(insn 49 47 48 2 (set (reg:DI 1 dx [427])
        (const_int 0 [0])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 48 49 50 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:390 size.9_363 ] [390])
            (const_int 0 [0]))) "E2OUT.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 50 48 53 2 (set (reg:DI 0 ax [orig:391 size.9_364 ] [391])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:390 size.9_363 ] [390])
            (reg:DI 1 dx [427]))) "E2OUT.f":2 1003 {*movdicc_noc}
     (nil))
(insn 53 50 54 2 (set (reg:DI 39 r10 [orig:95 _9 ] [95])
        (reg:DI 0 ax [orig:94 size.16_8 ] [94])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 54 53 1494 2 (set (reg:DI 40 r11 [ _9+8 ])
        (const_int 0 [0])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 1494 54 58 2 (set (reg:DI 43 r14 [orig:395 offset.8_368 ] [395])
        (reg:DI 41 r12 [orig:389 stride.7_361 ] [389])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 58 1494 59 2 (set (reg:DI 43 r14 [orig:395 offset.8_368 ] [395])
        (not:DI (reg:DI 43 r14 [orig:395 offset.8_368 ] [395]))) "E2OUT.f":2 532 {*one_cmpldi2_1}
     (nil))
(insn 59 58 60 2 (set (reg:DI 0 ax [428])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":107 85 {*movdi_internal}
     (nil))
(insn 60 59 61 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [428])) "E2OUT.f":107 85 {*movdi_internal}
     (nil))
(insn 61 60 62 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":107 88 {*movqi_internal}
     (nil))
(call_insn 62 61 63 2 (call (mem:QI (symbol_ref:DI ("collect_") [flags 0x41]  <function_decl 0x7f830f8f8600 collect>) [0 collect S1 A8])
        (const_int 0 [0])) "E2OUT.f":107 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 63 62 64 2 (set (reg:DI 0 ax [429])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":114 85 {*movdi_internal}
     (nil))
(insn 64 63 65 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [429])) "E2OUT.f":114 85 {*movdi_internal}
     (nil))
(insn 65 64 66 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":114 88 {*movqi_internal}
     (nil))
(call_insn 66 65 67 2 (call (mem:QI (symbol_ref:DI ("collect_") [flags 0x41]  <function_decl 0x7f830f8f8600 collect>) [0 collect S1 A8])
        (const_int 0 [0])) "E2OUT.f":114 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 67 66 68 2 (set (reg:SI 0 ax [orig:97 _11 ] [97])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f830f90dbd0 parallel>)
                    (const_int 4 [0x4]))) [1 parallel.me+0 S4 A32])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 68 67 69 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:97 _11 ] [97])
            (const_int 0 [0]))) "E2OUT.f":116 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 69 68 70 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1363)
            (pc))) "E2OUT.f":116 682 {*jcc}
     (nil)
 -> 1363)
;;  succ:       3 (FALLTHRU)
;;              182
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 37 [r8]
(note 70 69 71 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 3 (set (reg/f:DI 0 ax [430])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":120 85 {*movdi_internal}
     (nil))
(insn 72 71 73 3 (set (reg:SI 0 ax [orig:98 _12 ] [98])
        (mem:SI (reg/f:DI 0 ax [430]) [1 *imout_347(D)+0 S4 A32])) "E2OUT.f":120 86 {*movsi_internal}
     (nil))
(insn 73 72 74 3 (set (reg:DI 5 di [orig:396 _374 ] [396])
        (sign_extend:DI (reg:SI 0 ax [orig:98 _12 ] [98]))) "E2OUT.f":120 149 {*extendsidi2_rex64}
     (nil))
(insn 74 73 75 3 (set (reg/f:DI 0 ax [431])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":120 85 {*movdi_internal}
     (nil))
(insn 75 74 76 3 (set (reg:SI 0 ax [orig:99 _13 ] [99])
        (mem:SI (reg/f:DI 0 ax [431]) [1 *jmout_351(D)+0 S4 A32])) "E2OUT.f":120 86 {*movsi_internal}
     (nil))
(insn 76 75 77 3 (set (reg:DI 37 r8 [orig:397 _375 ] [397])
        (sign_extend:DI (reg:SI 0 ax [orig:99 _13 ] [99]))) "E2OUT.f":120 149 {*extendsidi2_rex64}
     (nil))
(insn 77 76 100 3 (set (reg:DI 1 dx [orig:376 S.10_304 ] [376])
        (const_int 1 [0x1])) "E2OUT.f":120 85 {*movdi_internal}
     (nil))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              8 [always] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 37 [r8]
;; lr  def 	 17 [flags]
(code_label 100 77 78 4 6 (nil) [1 uses])
(note 78 100 79 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 1 dx [orig:376 S.10_304 ] [376])
            (reg:DI 37 r8 [orig:397 _375 ] [397]))) "E2OUT.f":120 12 {*cmpdi_1}
     (nil))
(jump_insn 80 79 81 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) "E2OUT.f":120 682 {*jcc}
     (nil)
 -> 103)
;;  succ:       9
;;              5 (FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 17 [flags] 38 [r9]
(note 81 80 1496 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 1496 81 82 5 (set (reg:DI 0 ax [orig:100 _14 ] [100])
        (reg:DI 1 dx [orig:376 S.10_304 ] [376])) "E2OUT.f":120 85 {*movdi_internal}
     (nil))
(insn 82 1496 1537 5 (parallel [
            (set (reg:DI 0 ax [orig:100 _14 ] [100])
                (mult:DI (reg:DI 0 ax [orig:100 _14 ] [100])
                    (reg:DI 3 bx [orig:381 stride.2_350 ] [381])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":120 349 {*muldi3_1}
     (nil))
(insn 1537 82 84 5 (set (reg:DI 38 r9 [orig:398 _377 ] [398])
        (plus:DI (reg:DI 42 r13 [orig:387 offset.3_358 ] [387])
            (reg:DI 0 ax [orig:100 _14 ] [100]))) "E2OUT.f":120 218 {*leadi}
     (nil))
(insn 84 1537 94 5 (set (reg:DI 0 ax [orig:377 S.11_305 ] [377])
        (const_int 1 [0x1])) "E2OUT.f":120 85 {*movdi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              7 [always] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 94 84 85 6 5 (nil) [1 uses])
(note 85 94 86 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 0 ax [orig:377 S.11_305 ] [377])
            (reg:DI 5 di [orig:396 _374 ] [396]))) "E2OUT.f":120 12 {*cmpdi_1}
     (nil))
(jump_insn 87 86 88 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "E2OUT.f":120 682 {*jcc}
     (nil)
 -> 97)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 38 [r9]
;; lr  def 	 0 [ax] 2 [cx] 4 [si] 17 [flags] 21 [xmm0]
(note 88 87 1535 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 1535 88 90 7 (set (reg:DI 4 si [orig:101 _15 ] [101])
        (plus:DI (reg:DI 0 ax [orig:377 S.11_305 ] [377])
            (reg:DI 38 r9 [orig:398 _377 ] [398]))) "E2OUT.f":120 218 {*leadi}
     (nil))
(insn 90 1535 1536 7 (set (reg/f:DI 2 cx [432])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":120 85 {*movdi_internal}
     (nil))
(insn 1536 90 92 7 (set (reg:SF 21 xmm0 [433])
        (const_double:SF 0.0 [0x0.0p+0])) "E2OUT.f":120 131 {*movsf_internal}
     (nil))
(insn 92 1536 93 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:101 _15 ] [101])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [432])) [6 *grid1_379(D) S4 A32])
        (reg:SF 21 xmm0 [433])) "E2OUT.f":120 131 {*movsf_internal}
     (nil))
(insn 93 92 1379 7 (parallel [
            (set (reg:DI 0 ax [orig:377 S.11_305 ] [377])
                (plus:DI (reg:DI 0 ax [orig:377 S.11_305 ] [377])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":120 222 {*adddi_1}
     (nil))
(jump_insn 1379 93 1380 7 (set (pc)
        (label_ref 94)) "E2OUT.f":120 683 {jump}
     (nil)
 -> 94)
;;  succ:       6 [always] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

(barrier 1380 1379 97)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 97 1380 98 8 4 (nil) [1 uses])
(note 98 97 99 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 1381 8 (parallel [
            (set (reg:DI 1 dx [orig:376 S.10_304 ] [376])
                (plus:DI (reg:DI 1 dx [orig:376 S.10_304 ] [376])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":120 222 {*adddi_1}
     (nil))
(jump_insn 1381 99 1382 8 (set (pc)
        (label_ref 100)) "E2OUT.f":120 683 {jump}
     (nil)
 -> 100)
;;  succ:       4 [always] 
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

(barrier 1382 1381 103)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 37 [r8]
(code_label 103 1382 104 9 3 (nil) [1 uses])
(note 104 103 105 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 9 (set (reg/f:DI 0 ax [434])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":121 85 {*movdi_internal}
     (nil))
(insn 106 105 107 9 (set (reg:SI 0 ax [orig:102 _16 ] [102])
        (mem:SI (reg/f:DI 0 ax [434]) [1 *imout_347(D)+0 S4 A32])) "E2OUT.f":121 86 {*movsi_internal}
     (nil))
(insn 107 106 108 9 (set (reg:DI 5 di [orig:399 _384 ] [399])
        (sign_extend:DI (reg:SI 0 ax [orig:102 _16 ] [102]))) "E2OUT.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 108 107 109 9 (set (reg/f:DI 0 ax [435])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":121 85 {*movdi_internal}
     (nil))
(insn 109 108 110 9 (set (reg:SI 0 ax [orig:103 _17 ] [103])
        (mem:SI (reg/f:DI 0 ax [435]) [1 *jmout_351(D)+0 S4 A32])) "E2OUT.f":121 86 {*movsi_internal}
     (nil))
(insn 110 109 111 9 (set (reg:DI 37 r8 [orig:400 _385 ] [400])
        (sign_extend:DI (reg:SI 0 ax [orig:103 _17 ] [103]))) "E2OUT.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 111 110 134 9 (set (reg:DI 1 dx [orig:378 S.12_306 ] [378])
        (const_int 1 [0x1])) "E2OUT.f":121 85 {*movdi_internal}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;;              14 [always] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 37 [r8]
;; lr  def 	 17 [flags]
(code_label 134 111 112 10 10 (nil) [1 uses])
(note 112 134 113 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 1 dx [orig:378 S.12_306 ] [378])
            (reg:DI 37 r8 [orig:400 _385 ] [400]))) "E2OUT.f":121 12 {*cmpdi_1}
     (nil))
(jump_insn 114 113 115 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) "E2OUT.f":121 682 {*jcc}
     (nil)
 -> 137)
;;  succ:       15
;;              11 (FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 17 [flags] 38 [r9]
(note 115 114 1498 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 1498 115 116 11 (set (reg:DI 0 ax [orig:104 _18 ] [104])
        (reg:DI 1 dx [orig:378 S.12_306 ] [378])) "E2OUT.f":121 85 {*movdi_internal}
     (nil))
(insn 116 1498 1534 11 (parallel [
            (set (reg:DI 0 ax [orig:104 _18 ] [104])
                (mult:DI (reg:DI 0 ax [orig:104 _18 ] [104])
                    (reg:DI 41 r12 [orig:389 stride.7_361 ] [389])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":121 349 {*muldi3_1}
     (nil))
(insn 1534 116 118 11 (set (reg:DI 38 r9 [orig:401 _387 ] [401])
        (plus:DI (reg:DI 43 r14 [orig:395 offset.8_368 ] [395])
            (reg:DI 0 ax [orig:104 _18 ] [104]))) "E2OUT.f":121 218 {*leadi}
     (nil))
(insn 118 1534 128 11 (set (reg:DI 0 ax [orig:379 S.13_307 ] [379])
        (const_int 1 [0x1])) "E2OUT.f":121 85 {*movdi_internal}
     (nil))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              13 [always] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 128 118 119 12 9 (nil) [1 uses])
(note 119 128 120 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 0 ax [orig:379 S.13_307 ] [379])
            (reg:DI 5 di [orig:399 _384 ] [399]))) "E2OUT.f":121 12 {*cmpdi_1}
     (nil))
(jump_insn 121 120 122 12 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "E2OUT.f":121 682 {*jcc}
     (nil)
 -> 131)
;;  succ:       14
;;              13 (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 38 [r9]
;; lr  def 	 0 [ax] 2 [cx] 4 [si] 17 [flags] 21 [xmm0]
(note 122 121 1532 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 1532 122 124 13 (set (reg:DI 4 si [orig:105 _19 ] [105])
        (plus:DI (reg:DI 0 ax [orig:379 S.13_307 ] [379])
            (reg:DI 38 r9 [orig:401 _387 ] [401]))) "E2OUT.f":121 218 {*leadi}
     (nil))
(insn 124 1532 1533 13 (set (reg/f:DI 2 cx [436])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])) "E2OUT.f":121 85 {*movdi_internal}
     (nil))
(insn 1533 124 126 13 (set (reg:SF 21 xmm0 [437])
        (const_double:SF 0.0 [0x0.0p+0])) "E2OUT.f":121 131 {*movsf_internal}
     (nil))
(insn 126 1533 127 13 (set (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:105 _19 ] [105])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [436])) [6 *grid2_389(D) S4 A32])
        (reg:SF 21 xmm0 [437])) "E2OUT.f":121 131 {*movsf_internal}
     (nil))
(insn 127 126 1383 13 (parallel [
            (set (reg:DI 0 ax [orig:379 S.13_307 ] [379])
                (plus:DI (reg:DI 0 ax [orig:379 S.13_307 ] [379])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":121 222 {*adddi_1}
     (nil))
(jump_insn 1383 127 1384 13 (set (pc)
        (label_ref 128)) "E2OUT.f":121 683 {jump}
     (nil)
 -> 128)
;;  succ:       12 [always] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

(barrier 1384 1383 131)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 131 1384 132 14 8 (nil) [1 uses])
(note 132 131 133 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 1385 14 (parallel [
            (set (reg:DI 1 dx [orig:378 S.12_306 ] [378])
                (plus:DI (reg:DI 1 dx [orig:378 S.12_306 ] [378])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":121 222 {*adddi_1}
     (nil))
(jump_insn 1385 133 1386 14 (set (pc)
        (label_ref 134)) "E2OUT.f":121 683 {jump}
     (nil)
 -> 134)
;;  succ:       10 [always] 
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

(barrier 1386 1385 137)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 137 1386 138 15 7 (nil) [1 uses])
(note 138 137 139 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 15 (set (reg:SI 0 ax [orig:106 _20 ] [106])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 140 139 141 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:106 _20 ] [106])
            (const_int 90 [0x5a]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 141 140 142 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              16 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 142 141 143 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 16 (set (reg:SI 0 ax [orig:107 _21 ] [107])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 144 143 145 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:107 _21 ] [107])
            (const_int 92 [0x5c]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 145 144 146 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              17 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 146 145 147 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 17 (set (reg:SI 0 ax [orig:108 _22 ] [108])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 148 147 149 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:108 _22 ] [108])
            (const_int 94 [0x5e]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 149 148 150 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              18 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 150 149 151 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 18 (set (reg:SI 0 ax [orig:109 _23 ] [109])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 152 151 153 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:109 _23 ] [109])
            (const_int 96 [0x60]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 153 152 154 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              19 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 154 153 155 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 19 (set (reg:SI 0 ax [orig:110 _24 ] [110])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 156 155 157 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:110 _24 ] [110])
            (const_int 99 [0x63]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 157 156 158 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              20 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 158 157 159 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 20 (set (reg:SI 0 ax [orig:111 _25 ] [111])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 160 159 161 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:111 _25 ] [111])
            (const_int 190 [0xbe]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 161 160 162 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              21 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 162 161 163 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 21 (set (reg:SI 0 ax [orig:112 _26 ] [112])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 164 163 165 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:112 _26 ] [112])
            (const_int 192 [0xc0]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 165 164 166 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              22 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 166 165 167 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 22 (set (reg:SI 0 ax [orig:113 _27 ] [113])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 168 167 169 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:113 _27 ] [113])
            (const_int 194 [0xc2]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 169 168 170 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              23 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 170 169 171 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 23 (set (reg:SI 0 ax [orig:114 _28 ] [114])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 172 171 173 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:114 _28 ] [114])
            (const_int 196 [0xc4]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 173 172 174 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              24 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 174 173 175 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 24 (set (reg:SI 0 ax [orig:115 _29 ] [115])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 176 175 177 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:115 _29 ] [115])
            (const_int 255 [0xff]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 177 176 178 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 302)
;;  succ:       25 (FALLTHRU)
;;              43
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15
;;              16
;;              17
;;              18
;;              19
;;              20
;;              21
;;              22
;;              23
;;              24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 178 177 179 25 11 (nil) [9 uses])
(note 179 178 180 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 25 (set (reg:DI 0 ax [438])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":135 85 {*movdi_internal}
     (nil))
(insn 181 180 182 25 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":135 85 {*movdi_internal}
     (nil))
(insn 182 181 183 25 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f830f5566c0 *.LC2>)) "E2OUT.f":135 85 {*movdi_internal}
     (nil))
(insn 183 182 184 25 (set (reg:DI 5 di)
        (reg:DI 0 ax [438])) "E2OUT.f":135 85 {*movdi_internal}
     (nil))
(insn 184 183 185 25 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":135 88 {*movqi_internal}
     (nil))
(call_insn 185 184 186 25 (call (mem:QI (symbol_ref:DI ("efill_") [flags 0x41]  <function_decl 0x7f830f8f8700 efill>) [0 efill S1 A8])
        (const_int 0 [0])) "E2OUT.f":135 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 186 185 236 25 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":143 86 {*movsi_internal}
     (nil))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;;              30 [always] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 236 186 187 26 16 (nil) [1 uses])
(note 187 236 188 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "E2OUT.f":143 11 {*cmpsi_1}
     (nil))
(insn 189 188 190 26 (set (reg:QI 0 ax [439])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":143 678 {*setcc_qi}
     (nil))
(insn 190 189 191 26 (set (reg:SI 0 ax [orig:412 _474 ] [412])
        (zero_extend:SI (reg:QI 0 ax [439]))) "E2OUT.f":143 140 {*zero_extendqisi2}
     (nil))
(insn 191 190 192 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:412 _474 ] [412])
            (const_int 0 [0]))) "E2OUT.f":143 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 192 191 193 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1430)
            (pc))) "E2OUT.f":143 682 {*jcc}
     (nil)
 -> 1430)
;;  succ:       32
;;              27 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 193 192 194 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 230 27 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":144 86 {*movsi_internal}
     (nil))
;;  succ:       28 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;;              29 [always] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 230 194 195 28 15 (nil) [1 uses])
(note 195 230 196 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "E2OUT.f":144 11 {*cmpsi_1}
     (nil))
(insn 197 196 198 28 (set (reg:QI 0 ax [440])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":144 678 {*setcc_qi}
     (nil))
(insn 198 197 199 28 (set (reg:SI 0 ax [orig:413 _476 ] [413])
        (zero_extend:SI (reg:QI 0 ax [440]))) "E2OUT.f":144 140 {*zero_extendqisi2}
     (nil))
(insn 199 198 200 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:413 _476 ] [413])
            (const_int 0 [0]))) "E2OUT.f":144 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 200 199 201 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1433)
            (pc))) "E2OUT.f":144 682 {*jcc}
     (nil)
 -> 1433)
;;  succ:       30
;;              29 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 201 200 202 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 29 (set (reg:SI 0 ax [441])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":145 86 {*movsi_internal}
     (nil))
(insn 203 202 204 29 (set (reg:DI 0 ax [orig:116 _30 ] [116])
        (sign_extend:DI (reg:SI 0 ax [441]))) "E2OUT.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 204 203 205 29 (parallel [
            (set (reg:DI 1 dx [orig:117 _31 ] [117])
                (mult:DI (reg:DI 0 ax [orig:116 _30 ] [116])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":145 349 {*muldi3_1}
     (nil))
(insn 205 204 206 29 (set (reg:SI 0 ax [442])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":145 86 {*movsi_internal}
     (nil))
(insn 206 205 207 29 (set (reg:DI 0 ax [orig:118 _32 ] [118])
        (sign_extend:DI (reg:SI 0 ax [442]))) "E2OUT.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 207 206 1529 29 (parallel [
            (set (reg:DI 0 ax [orig:119 _33 ] [119])
                (plus:DI (reg:DI 0 ax [orig:118 _32 ] [118])
                    (reg:DI 1 dx [orig:117 _31 ] [117])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":145 222 {*adddi_1}
     (nil))
(insn 1529 207 209 29 (set (reg:DI 2 cx [orig:120 _34 ] [120])
        (plus:DI (reg:DI 0 ax [orig:119 _33 ] [119])
            (const_int -120 [0xffffffffffffff88]))) "E2OUT.f":145 218 {*leadi}
     (nil))
(insn 209 1529 210 29 (set (reg:SI 0 ax [443])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":145 86 {*movsi_internal}
     (nil))
(insn 210 209 211 29 (set (reg:DI 0 ax [orig:121 _35 ] [121])
        (sign_extend:DI (reg:SI 0 ax [443]))) "E2OUT.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 211 210 1530 29 (parallel [
            (set (reg:DI 0 ax [orig:122 _36 ] [122])
                (mult:DI (reg:DI 0 ax [orig:121 _35 ] [121])
                    (reg:DI 3 bx [orig:381 stride.2_350 ] [381])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":145 349 {*muldi3_1}
     (nil))
(insn 1530 211 213 29 (set (reg:DI 1 dx [orig:123 _37 ] [123])
        (plus:DI (reg:DI 42 r13 [orig:387 offset.3_358 ] [387])
            (reg:DI 0 ax [orig:122 _36 ] [122]))) "E2OUT.f":145 218 {*leadi}
     (nil))
(insn 213 1530 214 29 (set (reg:SI 0 ax [444])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":145 86 {*movsi_internal}
     (nil))
(insn 214 213 215 29 (set (reg:DI 0 ax [orig:124 _38 ] [124])
        (sign_extend:DI (reg:SI 0 ax [444]))) "E2OUT.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 215 214 216 29 (parallel [
            (set (reg:DI 1 dx [orig:125 _39 ] [125])
                (plus:DI (reg:DI 1 dx [orig:123 _37 ] [123])
                    (reg:DI 0 ax [orig:124 _38 ] [124])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":145 222 {*adddi_1}
     (nil))
(insn 216 215 217 29 (set (reg/f:DI 0 ax [445])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":145 85 {*movdi_internal}
     (nil))
(insn 217 216 218 29 (set (reg:SF 21 xmm0 [orig:126 _40 ] [126])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:120 _34 ] [120])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [445])) [6 *egrid1_369(D) S4 A32])) "E2OUT.f":145 131 {*movsf_internal}
     (nil))
(insn 218 217 219 29 (set (reg/f:DI 0 ax [446])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":145 85 {*movdi_internal}
     (nil))
(insn 219 218 220 29 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:125 _39 ] [125])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [446])) [6 *grid1_379(D) S4 A32])
        (reg:SF 21 xmm0 [orig:126 _40 ] [126])) "E2OUT.f":145 131 {*movsf_internal}
     (nil))
(insn 220 219 221 29 (set (reg:SI 0 ax [447])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":146 86 {*movsi_internal}
     (nil))
(insn 221 220 222 29 (set (reg:DI 0 ax [orig:127 _41 ] [127])
        (sign_extend:DI (reg:SI 0 ax [447]))) "E2OUT.f":146 149 {*extendsidi2_rex64}
     (nil))
(insn 222 221 223 29 (parallel [
            (set (reg:DI 1 dx [orig:128 _42 ] [128])
                (mult:DI (reg:DI 0 ax [orig:127 _41 ] [127])
                    (const_int 4000 [0xfa0])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":146 349 {*muldi3_1}
     (nil))
(insn 223 222 224 29 (set (reg:SI 0 ax [448])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":146 86 {*movsi_internal}
     (nil))
(insn 224 223 225 29 (set (reg:DI 0 ax [orig:129 _43 ] [129])
        (sign_extend:DI (reg:SI 0 ax [448]))) "E2OUT.f":146 149 {*extendsidi2_rex64}
     (nil))
(insn 225 224 1531 29 (parallel [
            (set (reg:DI 0 ax [orig:130 _44 ] [130])
                (plus:DI (reg:DI 0 ax [orig:129 _43 ] [129])
                    (reg:DI 1 dx [orig:128 _42 ] [128])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":146 222 {*adddi_1}
     (nil))
(insn 1531 225 227 29 (set (reg:DI 1 dx [orig:131 _45 ] [131])
        (plus:DI (reg:DI 0 ax [orig:130 _44 ] [130])
            (const_int -4001 [0xfffffffffffff05f]))) "E2OUT.f":146 218 {*leadi}
     (nil))
(insn 227 1531 228 29 (set (reg/f:DI 0 ax [449])
        (symbol_ref:DI ("bitmap_") [flags 0x202]  <var_decl 0x7f831696bab0 bitmap>)) "E2OUT.f":146 85 {*movdi_internal}
     (nil))
(insn 228 227 229 29 (set (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:131 _45 ] [131])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [449])) [1 bitmap.ibmap S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":146 86 {*movsi_internal}
     (nil))
(insn 229 228 1387 29 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":144 221 {*addsi_1}
     (nil))
(jump_insn 1387 229 1388 29 (set (pc)
        (label_ref 230)) "E2OUT.f":144 683 {jump}
     (nil)
 -> 230)
;;  succ:       28 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

(barrier 1388 1387 1433)
;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1433 1388 1432 30 73 (nil) [1 uses])
(note 1432 1433 1434 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 1434 1432 235 30 (const_int 0 [0]) "E2OUT.f":146 718 {nop}
     (nil))
(insn 235 1434 1389 30 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":143 221 {*addsi_1}
     (nil))
(jump_insn 1389 235 1390 30 (set (pc)
        (label_ref 236)) "E2OUT.f":143 683 {jump}
     (nil)
 -> 236)
;;  succ:       26 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

(barrier 1390 1389 1430)
;; basic block 32, loop depth 0, maybe hot
;;  prev block 30, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1430 1390 1429 32 72 (nil) [1 uses])
(note 1429 1430 1431 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 1431 1429 241 32 (const_int 0 [0]) "E2OUT.f":144 718 {nop}
     (nil))
(insn 241 1431 242 32 (set (reg/f:DI 0 ax [450])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":150 85 {*movdi_internal}
     (nil))
(insn 242 241 243 32 (set (reg:SI 0 ax [orig:132 _46 ] [132])
        (mem:SI (reg/f:DI 0 ax [450]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":150 86 {*movsi_internal}
     (nil))
(insn 243 242 244 32 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:132 _46 ] [132])
            (const_int 0 [0]))) "E2OUT.f":150 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 244 243 245 32 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1438)
            (pc))) "E2OUT.f":150 682 {*jcc}
     (nil)
 -> 1438)
;;  succ:       34 (FALLTHRU)
;;              173
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 34, loop depth 0, maybe hot
;;  prev block 32, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 245 244 246 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 34 (set (reg:DI 0 ax [451])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":152 85 {*movdi_internal}
     (nil))
(insn 247 246 248 34 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":152 85 {*movdi_internal}
     (nil))
(insn 248 247 249 34 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f830f5566c0 *.LC2>)) "E2OUT.f":152 85 {*movdi_internal}
     (nil))
(insn 249 248 250 34 (set (reg:DI 5 di)
        (reg:DI 0 ax [451])) "E2OUT.f":152 85 {*movdi_internal}
     (nil))
(insn 250 249 251 34 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":152 88 {*movqi_internal}
     (nil))
(call_insn 251 250 252 34 (call (mem:QI (symbol_ref:DI ("efill_") [flags 0x41]  <function_decl 0x7f830f8f8700 efill>) [0 efill S1 A8])
        (const_int 0 [0])) "E2OUT.f":152 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 252 251 293 34 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":154 86 {*movsi_internal}
     (nil))
;;  succ:       35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;;              39 [always] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 293 252 253 35 21 (nil) [1 uses])
(note 253 293 254 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 255 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "E2OUT.f":154 11 {*cmpsi_1}
     (nil))
(insn 255 254 256 35 (set (reg:QI 0 ax [452])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":154 678 {*setcc_qi}
     (nil))
(insn 256 255 257 35 (set (reg:SI 0 ax [orig:414 _483 ] [414])
        (zero_extend:SI (reg:QI 0 ax [452]))) "E2OUT.f":154 140 {*zero_extendqisi2}
     (nil))
(insn 257 256 258 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:414 _483 ] [414])
            (const_int 0 [0]))) "E2OUT.f":154 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 258 257 259 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1441)
            (pc))) "E2OUT.f":154 682 {*jcc}
     (nil)
 -> 1441)
;;  succ:       41
;;              36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 37, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 259 258 260 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 287 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":155 86 {*movsi_internal}
     (nil))
;;  succ:       37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;;              38 [always] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 287 260 261 37 20 (nil) [1 uses])
(note 261 287 262 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 262 261 263 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "E2OUT.f":155 11 {*cmpsi_1}
     (nil))
(insn 263 262 264 37 (set (reg:QI 0 ax [453])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":155 678 {*setcc_qi}
     (nil))
(insn 264 263 265 37 (set (reg:SI 0 ax [orig:415 _485 ] [415])
        (zero_extend:SI (reg:QI 0 ax [453]))) "E2OUT.f":155 140 {*zero_extendqisi2}
     (nil))
(insn 265 264 266 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:415 _485 ] [415])
            (const_int 0 [0]))) "E2OUT.f":155 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 266 265 267 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1444)
            (pc))) "E2OUT.f":155 682 {*jcc}
     (nil)
 -> 1444)
;;  succ:       39
;;              38 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 267 266 268 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 38 (set (reg:SI 0 ax [454])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":156 86 {*movsi_internal}
     (nil))
(insn 269 268 270 38 (set (reg:DI 0 ax [orig:133 _47 ] [133])
        (sign_extend:DI (reg:SI 0 ax [454]))) "E2OUT.f":156 149 {*extendsidi2_rex64}
     (nil))
(insn 270 269 271 38 (parallel [
            (set (reg:DI 1 dx [orig:134 _48 ] [134])
                (mult:DI (reg:DI 0 ax [orig:133 _47 ] [133])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":156 349 {*muldi3_1}
     (nil))
(insn 271 270 272 38 (set (reg:SI 0 ax [455])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":156 86 {*movsi_internal}
     (nil))
(insn 272 271 273 38 (set (reg:DI 0 ax [orig:135 _49 ] [135])
        (sign_extend:DI (reg:SI 0 ax [455]))) "E2OUT.f":156 149 {*extendsidi2_rex64}
     (nil))
(insn 273 272 1527 38 (parallel [
            (set (reg:DI 0 ax [orig:136 _50 ] [136])
                (plus:DI (reg:DI 0 ax [orig:135 _49 ] [135])
                    (reg:DI 1 dx [orig:134 _48 ] [134])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":156 222 {*adddi_1}
     (nil))
(insn 1527 273 275 38 (set (reg:DI 2 cx [orig:137 _51 ] [137])
        (plus:DI (reg:DI 0 ax [orig:136 _50 ] [136])
            (const_int -120 [0xffffffffffffff88]))) "E2OUT.f":156 218 {*leadi}
     (nil))
(insn 275 1527 276 38 (set (reg:SI 0 ax [456])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":156 86 {*movsi_internal}
     (nil))
(insn 276 275 277 38 (set (reg:DI 0 ax [orig:138 _52 ] [138])
        (sign_extend:DI (reg:SI 0 ax [456]))) "E2OUT.f":156 149 {*extendsidi2_rex64}
     (nil))
(insn 277 276 1528 38 (parallel [
            (set (reg:DI 0 ax [orig:139 _53 ] [139])
                (mult:DI (reg:DI 0 ax [orig:138 _52 ] [138])
                    (reg:DI 41 r12 [orig:389 stride.7_361 ] [389])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":156 349 {*muldi3_1}
     (nil))
(insn 1528 277 279 38 (set (reg:DI 1 dx [orig:140 _54 ] [140])
        (plus:DI (reg:DI 43 r14 [orig:395 offset.8_368 ] [395])
            (reg:DI 0 ax [orig:139 _53 ] [139]))) "E2OUT.f":156 218 {*leadi}
     (nil))
(insn 279 1528 280 38 (set (reg:SI 0 ax [457])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":156 86 {*movsi_internal}
     (nil))
(insn 280 279 281 38 (set (reg:DI 0 ax [orig:141 _55 ] [141])
        (sign_extend:DI (reg:SI 0 ax [457]))) "E2OUT.f":156 149 {*extendsidi2_rex64}
     (nil))
(insn 281 280 282 38 (parallel [
            (set (reg:DI 1 dx [orig:142 _56 ] [142])
                (plus:DI (reg:DI 1 dx [orig:140 _54 ] [140])
                    (reg:DI 0 ax [orig:141 _55 ] [141])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":156 222 {*adddi_1}
     (nil))
(insn 282 281 283 38 (set (reg/f:DI 0 ax [458])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":156 85 {*movdi_internal}
     (nil))
(insn 283 282 284 38 (set (reg:SF 21 xmm0 [orig:143 _57 ] [143])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:137 _51 ] [137])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [458])) [6 *egrid2_371(D) S4 A32])) "E2OUT.f":156 131 {*movsf_internal}
     (nil))
(insn 284 283 285 38 (set (reg/f:DI 0 ax [459])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])) "E2OUT.f":156 85 {*movdi_internal}
     (nil))
(insn 285 284 286 38 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:142 _56 ] [142])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [459])) [6 *grid2_389(D) S4 A32])
        (reg:SF 21 xmm0 [orig:143 _57 ] [143])) "E2OUT.f":156 131 {*movsf_internal}
     (nil))
(insn 286 285 1391 38 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":155 221 {*addsi_1}
     (nil))
(jump_insn 1391 286 1392 38 (set (pc)
        (label_ref 287)) "E2OUT.f":155 683 {jump}
     (nil)
 -> 287)
;;  succ:       37 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

(barrier 1392 1391 1444)
;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 41, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       37
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1444 1392 1443 39 76 (nil) [1 uses])
(note 1443 1444 1445 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 1445 1443 292 39 (const_int 0 [0]) "E2OUT.f":156 718 {nop}
     (nil))
(insn 292 1445 1393 39 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":154 221 {*addsi_1}
     (nil))
(jump_insn 1393 292 1394 39 (set (pc)
        (label_ref 293)) "E2OUT.f":154 683 {jump}
     (nil)
 -> 293)
;;  succ:       35 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

(barrier 1394 1393 1441)
;; basic block 41, loop depth 0, maybe hot
;;  prev block 39, next block 43, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       35
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1441 1394 1440 41 75 (nil) [1 uses])
(note 1440 1441 1442 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 1442 1440 1395 41 (const_int 0 [0]) "E2OUT.f":155 718 {nop}
     (nil))
(jump_insn 1395 1442 1396 41 (set (pc)
        (label_ref:DI 1438)) "E2OUT.f":161 683 {jump}
     (nil)
 -> 1438)
;;  succ:       173 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1396 1395 302)
;; basic block 43, loop depth 0, maybe hot
;;  prev block 41, next block 44, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 302 1396 303 43 12 (nil) [1 uses])
(note 303 302 304 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 43 (set (reg/f:DI 0 ax [460])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":167 85 {*movdi_internal}
     (nil))
(insn 305 304 306 43 (set (reg:SI 0 ax [orig:144 _58 ] [144])
        (mem:SI (reg/f:DI 0 ax [460]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":167 86 {*movsi_internal}
     (nil))
(insn 306 305 307 43 (set (reg:DI 0 ax [orig:145 _59 ] [145])
        (sign_extend:DI (reg:SI 0 ax [orig:144 _58 ] [144]))) "E2OUT.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 307 306 308 43 (parallel [
            (set (reg:DI 0 ax [orig:146 _60 ] [146])
                (plus:DI (reg:DI 0 ax [orig:145 _59 ] [145])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":167 222 {*adddi_1}
     (nil))
(insn 308 307 309 43 (parallel [
            (set (reg:DI 0 ax [461])
                (plus:DI (reg:DI 0 ax [orig:146 _60 ] [146])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":167 222 {*adddi_1}
     (nil))
(insn 309 308 310 43 (set (reg:SI 0 ax [orig:147 _61 ] [147])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [461])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":167 86 {*movsi_internal}
     (nil))
(insn 310 309 311 43 (set (reg:DI 0 ax [orig:148 _62 ] [148])
        (sign_extend:DI (reg:SI 0 ax [orig:147 _61 ] [147]))) "E2OUT.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 311 310 312 43 (parallel [
            (set (reg:DI 0 ax [orig:149 _63 ] [149])
                (plus:DI (reg:DI 0 ax [orig:148 _62 ] [148])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":167 222 {*adddi_1}
     (nil))
(insn 312 311 313 43 (parallel [
            (set (reg:DI 0 ax [462])
                (plus:DI (reg:DI 0 ax [orig:149 _63 ] [149])
                    (const_int 804 [0x324])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":167 222 {*adddi_1}
     (nil))
(insn 313 312 314 43 (set (reg:SI 0 ax [orig:150 _64 ] [150])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [462])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismstg S4 A32])) "E2OUT.f":167 86 {*movsi_internal}
     (nil))
(insn 314 313 315 43 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:150 _64 ] [150])) "E2OUT.f":167 86 {*movsi_internal}
     (nil))
(insn 315 314 316 43 (set (reg/f:DI 0 ax [463])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":168 85 {*movdi_internal}
     (nil))
(insn 316 315 317 43 (set (reg:SI 0 ax [orig:151 _65 ] [151])
        (mem:SI (reg/f:DI 0 ax [463]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":168 86 {*movsi_internal}
     (nil))
(insn 317 316 318 43 (set (reg:DI 0 ax [orig:152 _66 ] [152])
        (sign_extend:DI (reg:SI 0 ax [orig:151 _65 ] [151]))) "E2OUT.f":168 149 {*extendsidi2_rex64}
     (nil))
(insn 318 317 319 43 (parallel [
            (set (reg:DI 0 ax [orig:153 _67 ] [153])
                (plus:DI (reg:DI 0 ax [orig:152 _66 ] [152])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":168 222 {*adddi_1}
     (nil))
(insn 319 318 320 43 (parallel [
            (set (reg:DI 0 ax [464])
                (plus:DI (reg:DI 0 ax [orig:153 _67 ] [153])
                    (const_int 13604 [0x3524])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":168 222 {*adddi_1}
     (nil))
(insn 320 319 321 43 (set (reg:SI 0 ax [orig:154 _68 ] [154])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [464])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ifilv S4 A32])) "E2OUT.f":168 86 {*movsi_internal}
     (nil))
(insn 321 320 322 43 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:154 _68 ] [154])
            (const_int 0 [0]))) "E2OUT.f":168 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 322 321 323 43 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 387)
            (pc))) "E2OUT.f":168 682 {*jcc}
     (nil)
 -> 387)
;;  succ:       44 (FALLTHRU)
;;              53
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 44, loop depth 0, maybe hot
;;  prev block 43, next block 45, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 323 322 324 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 324 323 325 44 (set (reg:SI 0 ax [orig:155 ismth.18_69 ] [155])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":169 86 {*movsi_internal}
     (nil))
(insn 325 324 326 44 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:155 ismth.18_69 ] [155])
            (const_int 0 [0]))) "E2OUT.f":169 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 326 325 327 44 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 335)
            (pc))) "E2OUT.f":169 682 {*jcc}
     (nil)
 -> 335)
;;  succ:       45 (FALLTHRU)
;;              46
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 46, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 327 326 328 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 328 327 1526 45 (set (reg:DI 1 dx [465])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":170 85 {*movdi_internal}
     (nil))
(insn 1526 328 331 45 (set (reg:DI 0 ax [466])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":170 218 {*leadi}
     (nil))
(insn 331 1526 332 45 (set (reg:DI 4 si)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f830f90abd0 masks>)) "E2OUT.f":170 85 {*movdi_internal}
     (nil))
(insn 332 331 333 45 (set (reg:DI 5 di)
        (reg:DI 0 ax [466])) "E2OUT.f":170 85 {*movdi_internal}
     (nil))
(insn 333 332 334 45 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":170 88 {*movqi_internal}
     (nil))
(call_insn 334 333 335 45 (call (mem:QI (symbol_ref:DI ("p2filtf_") [flags 0x41]  <function_decl 0x7f830f8f8800 p2filtf>) [0 p2filtf S1 A8])
        (const_int 0 [0])) "E2OUT.f":170 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       46 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 46, loop depth 0, maybe hot
;;  prev block 45, next block 47, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       44
;;              45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 335 334 336 46 24 (nil) [1 uses])
(note 336 335 337 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 46 (set (reg:SI 0 ax [orig:156 ismth.19_70 ] [156])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":172 86 {*movsi_internal}
     (nil))
(insn 338 337 339 46 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:156 ismth.19_70 ] [156])
            (const_int 0 [0]))) "E2OUT.f":172 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 339 338 340 46 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 356)
            (pc))) "E2OUT.f":172 682 {*jcc}
     (nil)
 -> 356)
;;  succ:       47 (FALLTHRU)
;;              50
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 47, loop depth 0, maybe hot
;;  prev block 46, next block 48, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 340 339 341 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 342 47 (set (reg/f:DI 0 ax [467])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":172 85 {*movdi_internal}
     (nil))
(insn 342 341 343 47 (set (reg:SI 0 ax [orig:157 _71 ] [157])
        (mem:SI (reg/f:DI 0 ax [467]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":172 86 {*movsi_internal}
     (nil))
(insn 343 342 344 47 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:157 _71 ] [157])
            (const_int 10 [0xa]))) "E2OUT.f":172 11 {*cmpsi_1}
     (nil))
(jump_insn 344 343 345 47 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 350)
            (pc))) "E2OUT.f":172 682 {*jcc}
     (nil)
 -> 350)
;;  succ:       49
;;              48 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 48, loop depth 0, maybe hot
;;  prev block 47, next block 49, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 345 344 346 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 346 345 347 48 (set (reg/f:DI 0 ax [468])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":172 85 {*movdi_internal}
     (nil))
(insn 347 346 348 48 (set (reg:SI 0 ax [orig:158 _72 ] [158])
        (mem:SI (reg/f:DI 0 ax [468]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":172 86 {*movsi_internal}
     (nil))
(insn 348 347 349 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:158 _72 ] [158])
            (const_int 21 [0x15]))) "E2OUT.f":172 11 {*cmpsi_1}
     (nil))
(jump_insn 349 348 350 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 356)
            (pc))) "E2OUT.f":172 682 {*jcc}
     (nil)
 -> 356)
;;  succ:       49 (FALLTHRU)
;;              50
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 49, loop depth 0, maybe hot
;;  prev block 48, next block 50, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       47
;;              48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 350 349 351 49 26 (nil) [1 uses])
(note 351 350 352 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 352 351 353 49 (set (reg:DI 0 ax [469])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":173 85 {*movdi_internal}
     (nil))
(insn 353 352 354 49 (set (reg:DI 5 di)
        (reg:DI 0 ax [469])) "E2OUT.f":173 85 {*movdi_internal}
     (nil))
(insn 354 353 355 49 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":173 88 {*movqi_internal}
     (nil))
(call_insn 355 354 356 49 (call (mem:QI (symbol_ref:DI ("efilt_") [flags 0x41]  <function_decl 0x7f830f8f8900 efilt>) [0 efilt S1 A8])
        (const_int 0 [0])) "E2OUT.f":173 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
;;  succ:       50 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 50, loop depth 0, maybe hot
;;  prev block 49, next block 51, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       46
;;              48
;;              49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 356 355 357 50 25 (nil) [2 uses])
(note 357 356 358 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 50 (set (reg/f:DI 0 ax [470])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":175 85 {*movdi_internal}
     (nil))
(insn 359 358 360 50 (set (reg:SI 0 ax [orig:159 _73 ] [159])
        (mem:SI (reg/f:DI 0 ax [470]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":175 86 {*movsi_internal}
     (nil))
(insn 360 359 361 50 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:159 _73 ] [159])
            (const_int 0 [0]))) "E2OUT.f":175 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 361 360 362 50 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 429)
            (pc))) "E2OUT.f":175 682 {*jcc}
     (nil)
 -> 429)
;;  succ:       51 (FALLTHRU)
;;              58
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 51, loop depth 0, maybe hot
;;  prev block 50, next block 52, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 362 361 363 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 363 362 364 51 (set (reg/f:DI 0 ax [471])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":176 85 {*movdi_internal}
     (nil))
(insn 364 363 365 51 (set (reg:SI 0 ax [orig:160 _74 ] [160])
        (mem:SI (reg/f:DI 0 ax [471]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":176 86 {*movsi_internal}
     (nil))
(insn 365 364 366 51 (set (reg:DI 0 ax [orig:161 _75 ] [161])
        (sign_extend:DI (reg:SI 0 ax [orig:160 _74 ] [160]))) "E2OUT.f":176 149 {*extendsidi2_rex64}
     (nil))
(insn 366 365 367 51 (parallel [
            (set (reg:DI 0 ax [orig:162 _76 ] [162])
                (plus:DI (reg:DI 0 ax [orig:161 _75 ] [161])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":176 222 {*adddi_1}
     (nil))
(insn 367 366 368 51 (parallel [
            (set (reg:DI 0 ax [472])
                (plus:DI (reg:DI 0 ax [orig:162 _76 ] [162])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":176 222 {*adddi_1}
     (nil))
(insn 368 367 369 51 (set (reg:SI 0 ax [orig:163 _77 ] [163])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [472])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":176 86 {*movsi_internal}
     (nil))
(insn 369 368 370 51 (set (reg:DI 0 ax [orig:164 _78 ] [164])
        (sign_extend:DI (reg:SI 0 ax [orig:163 _77 ] [163]))) "E2OUT.f":176 149 {*extendsidi2_rex64}
     (nil))
(insn 370 369 371 51 (parallel [
            (set (reg:DI 0 ax [orig:165 _79 ] [165])
                (plus:DI (reg:DI 0 ax [orig:164 _78 ] [164])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":176 222 {*adddi_1}
     (nil))
(insn 371 370 372 51 (parallel [
            (set (reg:DI 0 ax [473])
                (plus:DI (reg:DI 0 ax [orig:165 _79 ] [165])
                    (const_int 804 [0x324])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":176 222 {*adddi_1}
     (nil))
(insn 372 371 373 51 (set (reg:SI 0 ax [orig:166 _80 ] [166])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [473])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismstg S4 A32])) "E2OUT.f":176 86 {*movsi_internal}
     (nil))
(insn 373 372 374 51 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:166 _80 ] [166])) "E2OUT.f":176 86 {*movsi_internal}
     (nil))
(insn 374 373 375 51 (set (reg:SI 0 ax [orig:167 ismth.20_81 ] [167])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":177 86 {*movsi_internal}
     (nil))
(insn 375 374 376 51 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:167 ismth.20_81 ] [167])
            (const_int 0 [0]))) "E2OUT.f":177 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 376 375 377 51 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 429)
            (pc))) "E2OUT.f":177 682 {*jcc}
     (nil)
 -> 429)
;;  succ:       52 (FALLTHRU)
;;              58
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 53, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 377 376 378 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 378 377 1525 52 (set (reg:DI 1 dx [474])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":178 85 {*movdi_internal}
     (nil))
(insn 1525 378 381 52 (set (reg:DI 0 ax [475])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":178 218 {*leadi}
     (nil))
(insn 381 1525 382 52 (set (reg:DI 4 si)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f830f90abd0 masks>)) "E2OUT.f":178 85 {*movdi_internal}
     (nil))
(insn 382 381 383 52 (set (reg:DI 5 di)
        (reg:DI 0 ax [475])) "E2OUT.f":178 85 {*movdi_internal}
     (nil))
(insn 383 382 384 52 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":178 88 {*movqi_internal}
     (nil))
(call_insn 384 383 1397 52 (call (mem:QI (symbol_ref:DI ("p2filtf_") [flags 0x41]  <function_decl 0x7f830f8f8800 p2filtf>) [0 p2filtf S1 A8])
        (const_int 0 [0])) "E2OUT.f":178 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 1397 384 1398 52 (set (pc)
        (label_ref 429)) 683 {jump}
     (nil)
 -> 429)
;;  succ:       58 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

(barrier 1398 1397 387)
;; basic block 53, loop depth 0, maybe hot
;;  prev block 52, next block 54, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       43
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 387 1398 388 53 23 (nil) [1 uses])
(note 388 387 389 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 389 388 390 53 (set (reg:SI 0 ax [orig:168 ismth.21_82 ] [168])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":182 86 {*movsi_internal}
     (nil))
(insn 390 389 391 53 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:168 ismth.21_82 ] [168])
            (const_int 0 [0]))) "E2OUT.f":182 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 391 390 392 53 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 400)
            (pc))) "E2OUT.f":182 682 {*jcc}
     (nil)
 -> 400)
;;  succ:       54 (FALLTHRU)
;;              55
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 54, loop depth 0, maybe hot
;;  prev block 53, next block 55, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 392 391 393 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 393 392 1524 54 (set (reg:DI 1 dx [476])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":183 85 {*movdi_internal}
     (nil))
(insn 1524 393 396 54 (set (reg:DI 0 ax [477])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":183 218 {*leadi}
     (nil))
(insn 396 1524 397 54 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f830f90abd0 masks>)
                (const_int 118524 [0x1cefc])))) "E2OUT.f":183 85 {*movdi_internal}
     (nil))
(insn 397 396 398 54 (set (reg:DI 5 di)
        (reg:DI 0 ax [477])) "E2OUT.f":183 85 {*movdi_internal}
     (nil))
(insn 398 397 399 54 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":183 88 {*movqi_internal}
     (nil))
(call_insn 399 398 400 54 (call (mem:QI (symbol_ref:DI ("p2fltvf_") [flags 0x41]  <function_decl 0x7f830f8f8a00 p2fltvf>) [0 p2fltvf S1 A8])
        (const_int 0 [0])) "E2OUT.f":183 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       55 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 55, loop depth 0, maybe hot
;;  prev block 54, next block 56, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       53
;;              54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 400 399 401 55 28 (nil) [1 uses])
(note 401 400 402 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 402 401 403 55 (set (reg/f:DI 0 ax [478])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":185 85 {*movdi_internal}
     (nil))
(insn 403 402 404 55 (set (reg:SI 0 ax [orig:169 _83 ] [169])
        (mem:SI (reg/f:DI 0 ax [478]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":185 86 {*movsi_internal}
     (nil))
(insn 404 403 405 55 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:169 _83 ] [169])
            (const_int 0 [0]))) "E2OUT.f":185 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 405 404 406 55 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 429)
            (pc))) "E2OUT.f":185 682 {*jcc}
     (nil)
 -> 429)
;;  succ:       56 (FALLTHRU)
;;              58
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 56, loop depth 0, maybe hot
;;  prev block 55, next block 57, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 406 405 407 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 56 (set (reg/f:DI 0 ax [479])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":186 85 {*movdi_internal}
     (nil))
(insn 408 407 409 56 (set (reg:SI 0 ax [orig:170 _84 ] [170])
        (mem:SI (reg/f:DI 0 ax [479]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":186 86 {*movsi_internal}
     (nil))
(insn 409 408 410 56 (set (reg:DI 0 ax [orig:171 _85 ] [171])
        (sign_extend:DI (reg:SI 0 ax [orig:170 _84 ] [170]))) "E2OUT.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 410 409 411 56 (parallel [
            (set (reg:DI 0 ax [orig:172 _86 ] [172])
                (plus:DI (reg:DI 0 ax [orig:171 _85 ] [171])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":186 222 {*adddi_1}
     (nil))
(insn 411 410 412 56 (parallel [
            (set (reg:DI 0 ax [480])
                (plus:DI (reg:DI 0 ax [orig:172 _86 ] [172])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":186 222 {*adddi_1}
     (nil))
(insn 412 411 413 56 (set (reg:SI 0 ax [orig:173 _87 ] [173])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [480])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":186 86 {*movsi_internal}
     (nil))
(insn 413 412 414 56 (set (reg:DI 0 ax [orig:174 _88 ] [174])
        (sign_extend:DI (reg:SI 0 ax [orig:173 _87 ] [173]))) "E2OUT.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 414 413 415 56 (parallel [
            (set (reg:DI 0 ax [orig:175 _89 ] [175])
                (plus:DI (reg:DI 0 ax [orig:174 _88 ] [174])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":186 222 {*adddi_1}
     (nil))
(insn 415 414 416 56 (parallel [
            (set (reg:DI 0 ax [481])
                (plus:DI (reg:DI 0 ax [orig:175 _89 ] [175])
                    (const_int 804 [0x324])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":186 222 {*adddi_1}
     (nil))
(insn 416 415 417 56 (set (reg:SI 0 ax [orig:176 _90 ] [176])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [481])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismstg S4 A32])) "E2OUT.f":186 86 {*movsi_internal}
     (nil))
(insn 417 416 418 56 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:176 _90 ] [176])) "E2OUT.f":186 86 {*movsi_internal}
     (nil))
(insn 418 417 419 56 (set (reg:SI 0 ax [orig:177 ismth.22_91 ] [177])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":187 86 {*movsi_internal}
     (nil))
(insn 419 418 420 56 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:177 ismth.22_91 ] [177])
            (const_int 0 [0]))) "E2OUT.f":187 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 420 419 421 56 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 429)
            (pc))) "E2OUT.f":187 682 {*jcc}
     (nil)
 -> 429)
;;  succ:       57 (FALLTHRU)
;;              58
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 57, loop depth 0, maybe hot
;;  prev block 56, next block 58, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 421 420 422 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 422 421 1523 57 (set (reg:DI 1 dx [482])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":188 85 {*movdi_internal}
     (nil))
(insn 1523 422 425 57 (set (reg:DI 0 ax [483])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":188 218 {*leadi}
     (nil))
(insn 425 1523 426 57 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f830f90abd0 masks>)
                (const_int 118524 [0x1cefc])))) "E2OUT.f":188 85 {*movdi_internal}
     (nil))
(insn 426 425 427 57 (set (reg:DI 5 di)
        (reg:DI 0 ax [483])) "E2OUT.f":188 85 {*movdi_internal}
     (nil))
(insn 427 426 428 57 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":188 88 {*movqi_internal}
     (nil))
(call_insn 428 427 429 57 (call (mem:QI (symbol_ref:DI ("p2fltvf_") [flags 0x41]  <function_decl 0x7f830f8f8a00 p2fltvf>) [0 p2fltvf S1 A8])
        (const_int 0 [0])) "E2OUT.f":188 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       58 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 58, loop depth 0, maybe hot
;;  prev block 57, next block 59, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       56
;;              55
;;              57 (FALLTHRU)
;;              50
;;              51
;;              52 [always] 
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 429 428 430 58 27 (nil) [5 uses])
(note 430 429 431 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 431 430 432 58 (set (reg/f:DI 0 ax [484])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":195 85 {*movdi_internal}
     (nil))
(insn 432 431 433 58 (set (reg:SI 0 ax [orig:178 _92 ] [178])
        (mem:SI (reg/f:DI 0 ax [484]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":195 86 {*movsi_internal}
     (nil))
(insn 433 432 434 58 (set (reg:DI 0 ax [orig:179 _93 ] [179])
        (sign_extend:DI (reg:SI 0 ax [orig:178 _92 ] [178]))) "E2OUT.f":195 149 {*extendsidi2_rex64}
     (nil))
(insn 434 433 435 58 (parallel [
            (set (reg:DI 0 ax [orig:180 _94 ] [180])
                (plus:DI (reg:DI 0 ax [orig:179 _93 ] [179])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":195 222 {*adddi_1}
     (nil))
(insn 435 434 436 58 (parallel [
            (set (reg:DI 0 ax [485])
                (plus:DI (reg:DI 0 ax [orig:180 _94 ] [180])
                    (const_int 13604 [0x3524])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":195 222 {*adddi_1}
     (nil))
(insn 436 435 437 58 (set (reg:SI 0 ax [orig:181 _95 ] [181])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [485])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ifilv S4 A32])) "E2OUT.f":195 86 {*movsi_internal}
     (nil))
(insn 437 436 438 58 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:181 _95 ] [181])
            (const_int 0 [0]))) "E2OUT.f":195 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 438 437 439 58 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 877)
            (pc))) "E2OUT.f":195 682 {*jcc}
     (nil)
 -> 877)
;;  succ:       59 (FALLTHRU)
;;              118
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 59, loop depth 0, maybe hot
;;  prev block 58, next block 60, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       58 (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 439 438 440 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 440 439 441 59 (set (reg:DI 0 ax [486])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":199 85 {*movdi_internal}
     (nil))
(insn 441 440 442 59 (set (reg:DI 37 r8)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":199 85 {*movdi_internal}
     (nil))
(insn 442 441 443 59 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":199 85 {*movdi_internal}
     (nil))
(insn 443 442 444 59 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f830f90d090 options>)
                (const_int 16 [0x10])))) "E2OUT.f":199 85 {*movdi_internal}
     (nil))
(insn 444 443 445 59 (set (reg:DI 4 si)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":199 85 {*movdi_internal}
     (nil))
(insn 445 444 446 59 (set (reg:DI 5 di)
        (reg:DI 0 ax [486])) "E2OUT.f":199 85 {*movdi_internal}
     (nil))
(insn 446 445 447 59 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":199 88 {*movqi_internal}
     (nil))
(call_insn 447 446 448 59 (call (mem:QI (symbol_ref:DI ("fillv_") [flags 0x41]  <function_decl 0x7f830f8f8b00 fillv>) [0 fillv S1 A8])
        (const_int 0 [0])) "E2OUT.f":199 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 448 447 449 59 (set (reg/f:DI 0 ax [487])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":203 85 {*movdi_internal}
     (nil))
(insn 449 448 450 59 (set (reg:SI 0 ax [orig:182 _96 ] [182])
        (mem:SI (reg/f:DI 0 ax [487]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":203 86 {*movsi_internal}
     (nil))
(insn 450 449 451 59 (set (reg:DI 0 ax [orig:183 _97 ] [183])
        (sign_extend:DI (reg:SI 0 ax [orig:182 _96 ] [182]))) "E2OUT.f":203 149 {*extendsidi2_rex64}
     (nil))
(insn 451 450 452 59 (parallel [
            (set (reg:DI 0 ax [orig:184 _98 ] [184])
                (plus:DI (reg:DI 0 ax [orig:183 _97 ] [183])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":203 222 {*adddi_1}
     (nil))
(insn 452 451 453 59 (parallel [
            (set (reg:DI 0 ax [488])
                (plus:DI (reg:DI 0 ax [orig:184 _98 ] [184])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":203 222 {*adddi_1}
     (nil))
(insn 453 452 454 59 (set (reg:SI 0 ax [orig:185 _99 ] [185])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [488])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":203 86 {*movsi_internal}
     (nil))
(insn 454 453 455 59 (set (reg:DI 0 ax [orig:186 _100 ] [186])
        (sign_extend:DI (reg:SI 0 ax [orig:185 _99 ] [185]))) "E2OUT.f":203 149 {*extendsidi2_rex64}
     (nil))
(insn 455 454 456 59 (parallel [
            (set (reg:DI 0 ax [orig:187 _101 ] [187])
                (plus:DI (reg:DI 0 ax [orig:186 _100 ] [186])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":203 222 {*adddi_1}
     (nil))
(insn 456 455 457 59 (parallel [
            (set (reg:DI 0 ax [489])
                (plus:DI (reg:DI 0 ax [orig:187 _101 ] [187])
                    (const_int 1004 [0x3ec])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":203 222 {*adddi_1}
     (nil))
(insn 457 456 458 59 (set (reg:SI 0 ax [orig:188 _102 ] [188])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [489])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismful S4 A32])) "E2OUT.f":203 86 {*movsi_internal}
     (nil))
(insn 458 457 459 59 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:188 _102 ] [188])) "E2OUT.f":203 86 {*movsi_internal}
     (nil))
(insn 459 458 460 59 (set (reg:SI 0 ax [orig:189 ismth.23_103 ] [189])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":204 86 {*movsi_internal}
     (nil))
(insn 460 459 461 59 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:189 ismth.23_103 ] [189])
            (const_int 0 [0]))) "E2OUT.f":204 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 461 460 462 59 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 470)
            (pc))) "E2OUT.f":204 682 {*jcc}
     (nil)
 -> 470)
;;  succ:       60 (FALLTHRU)
;;              61
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 60, loop depth 0, maybe hot
;;  prev block 59, next block 61, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 462 461 1522 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 1522 462 464 60 (set (reg:DI 0 ax [490])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":204 218 {*leadi}
     (nil))
(insn 464 1522 465 60 (set (reg:DI 2 cx)
        (reg:DI 0 ax [490])) "E2OUT.f":204 85 {*movdi_internal}
     (nil))
(insn 465 464 466 60 (set (reg:DI 1 dx)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":204 85 {*movdi_internal}
     (nil))
(insn 466 465 467 60 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":204 85 {*movdi_internal}
     (nil))
(insn 467 466 468 60 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":204 85 {*movdi_internal}
     (nil))
(insn 468 467 469 60 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":204 88 {*movqi_internal}
     (nil))
(call_insn 469 468 470 60 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":204 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       61 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 61, loop depth 0, maybe hot
;;  prev block 60, next block 62, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       59
;;              60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 470 469 471 61 30 (nil) [1 uses])
(note 471 470 472 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 472 471 473 61 (set (reg:SI 0 ax [orig:190 _104 ] [190])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 473 472 474 61 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:190 _104 ] [190])
            (const_int 89 [0x59]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 474 473 475 61 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 503)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 503)
;;  succ:       69
;;              62 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 62, loop depth 0, maybe hot
;;  prev block 61, next block 63, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 475 474 476 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 477 62 (set (reg:SI 0 ax [orig:191 _105 ] [191])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 477 476 478 62 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:191 _105 ] [191])
            (const_int 97 [0x61]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 478 477 479 62 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 684)
;;  succ:       63 (FALLTHRU)
;;              90
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 63, loop depth 0, maybe hot
;;  prev block 62, next block 64, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       62 (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 479 478 480 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 480 479 481 63 (set (reg:SI 0 ax [orig:192 _106 ] [192])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 481 480 482 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:192 _106 ] [192])
            (const_int 99 [0x63]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 482 481 483 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 684)
;;  succ:       64 (FALLTHRU)
;;              90
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 64, loop depth 0, maybe hot
;;  prev block 63, next block 65, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 483 482 484 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 484 483 485 64 (set (reg:SI 0 ax [orig:193 _107 ] [193])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 485 484 486 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:193 _107 ] [193])
            (const_int 190 [0xbe]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 486 485 487 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 684)
;;  succ:       65 (FALLTHRU)
;;              90
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 65, loop depth 0, maybe hot
;;  prev block 64, next block 66, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 487 486 488 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 488 487 489 65 (set (reg:SI 0 ax [orig:194 _108 ] [194])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 489 488 490 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:194 _108 ] [194])
            (const_int 192 [0xc0]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 490 489 491 65 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 684)
;;  succ:       66 (FALLTHRU)
;;              90
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 66, loop depth 0, maybe hot
;;  prev block 65, next block 67, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 491 490 492 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 66 (set (reg:SI 0 ax [orig:195 _109 ] [195])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 493 492 494 66 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:195 _109 ] [195])
            (const_int 194 [0xc2]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 494 493 495 66 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 684)
;;  succ:       67 (FALLTHRU)
;;              90
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 67, loop depth 0, maybe hot
;;  prev block 66, next block 68, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 495 494 496 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 496 495 497 67 (set (reg:SI 0 ax [orig:196 _110 ] [196])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 497 496 498 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:196 _110 ] [196])
            (const_int 196 [0xc4]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 498 497 499 67 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 684)
;;  succ:       68 (FALLTHRU)
;;              90
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 68, loop depth 0, maybe hot
;;  prev block 67, next block 69, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 499 498 500 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 68 (set (reg:SI 0 ax [orig:197 _111 ] [197])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 501 500 502 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:197 _111 ] [197])
            (const_int 255 [0xff]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 502 501 503 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 684)
;;  succ:       69 (FALLTHRU)
;;              90
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 69, loop depth 0, maybe hot
;;  prev block 68, next block 70, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       61
;;              68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 503 502 504 69 31 (nil) [1 uses])
(note 504 503 505 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 505 504 506 69 (set (reg/f:DI 0 ax [491])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":214 85 {*movdi_internal}
     (nil))
(insn 506 505 507 69 (set (reg:SI 0 ax [orig:198 _112 ] [198])
        (mem:SI (reg/f:DI 0 ax [491]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":214 86 {*movsi_internal}
     (nil))
(insn 507 506 508 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:198 _112 ] [198])
            (const_int 50 [0x32]))) "E2OUT.f":214 11 {*cmpsi_1}
     (nil))
(jump_insn 508 507 509 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 520)
            (pc))) "E2OUT.f":214 682 {*jcc}
     (nil)
 -> 520)
;;  succ:       70 (FALLTHRU)
;;              71
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 70, loop depth 0, maybe hot
;;  prev block 69, next block 71, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 509 508 510 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 510 509 511 70 (set (reg:DI 1 dx [492])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":215 85 {*movdi_internal}
     (nil))
(insn 511 510 512 70 (set (reg:DI 0 ax [493])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":215 85 {*movdi_internal}
     (nil))
(insn 512 511 513 70 (set (reg:DI 2 cx)
        (reg:DI 1 dx [492])) "E2OUT.f":215 85 {*movdi_internal}
     (nil))
(insn 513 512 514 70 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":215 85 {*movdi_internal}
     (nil))
(insn 514 513 515 70 (set (reg:DI 4 si)
        (reg:DI 0 ax [493])) "E2OUT.f":215 85 {*movdi_internal}
     (nil))
(insn 515 514 516 70 (set (reg:DI 5 di)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":215 85 {*movdi_internal}
     (nil))
(insn 516 515 517 70 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":215 88 {*movqi_internal}
     (nil))
(call_insn 517 516 1399 70 (call (mem:QI (symbol_ref:DI ("out_masks_") [flags 0x41]  <function_decl 0x7f830f8f8d00 out_masks>) [0 out_masks S1 A8])
        (const_int 0 [0])) "E2OUT.f":215 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(jump_insn 1399 517 1400 70 (set (pc)
        (label_ref 530)) 683 {jump}
     (nil)
 -> 530)
;;  succ:       72 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1400 1399 520)
;; basic block 71, loop depth 0, maybe hot
;;  prev block 70, next block 72, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       69
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 520 1400 521 71 33 (nil) [1 uses])
(note 521 520 522 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 522 521 523 71 (set (reg:DI 1 dx [494])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":223 85 {*movdi_internal}
     (nil))
(insn 523 522 524 71 (set (reg:DI 0 ax [495])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":223 85 {*movdi_internal}
     (nil))
(insn 524 523 525 71 (set (reg:DI 2 cx)
        (reg:DI 1 dx [494])) "E2OUT.f":223 85 {*movdi_internal}
     (nil))
(insn 525 524 526 71 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":223 85 {*movdi_internal}
     (nil))
(insn 526 525 527 71 (set (reg:DI 4 si)
        (reg:DI 0 ax [495])) "E2OUT.f":223 85 {*movdi_internal}
     (nil))
(insn 527 526 528 71 (set (reg:DI 5 di)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":223 85 {*movdi_internal}
     (nil))
(insn 528 527 529 71 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":223 88 {*movqi_internal}
     (nil))
(call_insn 529 528 530 71 (call (mem:QI (symbol_ref:DI ("interp3_") [flags 0x41]  <function_decl 0x7f830f8f8e00 interp3>) [0 interp3 S1 A8])
        (const_int 0 [0])) "E2OUT.f":223 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       72 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 72, loop depth 0, maybe hot
;;  prev block 71, next block 73, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;;              70 [always] 
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 530 529 531 72 34 (nil) [1 uses])
(note 531 530 532 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 532 531 533 72 (set (reg/f:DI 0 ax [496])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 533 532 534 72 (set (reg:SI 0 ax [orig:199 _113 ] [199])
        (mem:SI (reg/f:DI 0 ax [496]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 534 533 535 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:199 _113 ] [199])
            (const_int 56 [0x38]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 535 534 536 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       82
;;              73 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 73, loop depth 0, maybe hot
;;  prev block 72, next block 74, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 536 535 537 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 537 536 538 73 (set (reg/f:DI 0 ax [497])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 538 537 539 73 (set (reg:SI 0 ax [orig:200 _114 ] [200])
        (mem:SI (reg/f:DI 0 ax [497]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 539 538 540 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:200 _114 ] [200])
            (const_int 57 [0x39]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 540 539 541 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       82
;;              74 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 74, loop depth 0, maybe hot
;;  prev block 73, next block 75, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 541 540 542 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 542 541 543 74 (set (reg/f:DI 0 ax [498])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 543 542 544 74 (set (reg:SI 0 ax [orig:201 _115 ] [201])
        (mem:SI (reg/f:DI 0 ax [498]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 544 543 545 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:201 _115 ] [201])
            (const_int 60 [0x3c]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 545 544 546 74 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       82
;;              75 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 75, loop depth 0, maybe hot
;;  prev block 74, next block 76, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       74 (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 546 545 547 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 547 546 548 75 (set (reg/f:DI 0 ax [499])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 548 547 549 75 (set (reg:SI 0 ax [orig:202 _116 ] [202])
        (mem:SI (reg/f:DI 0 ax [499]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 549 548 550 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:202 _116 ] [202])
            (const_int 61 [0x3d]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 550 549 551 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       82
;;              76 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 76, loop depth 0, maybe hot
;;  prev block 75, next block 77, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 551 550 552 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 552 551 553 76 (set (reg/f:DI 0 ax [500])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 553 552 554 76 (set (reg:SI 0 ax [orig:203 _117 ] [203])
        (mem:SI (reg/f:DI 0 ax [500]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 554 553 555 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:203 _117 ] [203])
            (const_int 64 [0x40]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 555 554 556 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       82
;;              77 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 77, loop depth 0, maybe hot
;;  prev block 76, next block 78, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 556 555 557 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 557 556 558 77 (set (reg/f:DI 0 ax [501])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 558 557 559 77 (set (reg:SI 0 ax [orig:204 _118 ] [204])
        (mem:SI (reg/f:DI 0 ax [501]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 559 558 560 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:204 _118 ] [204])
            (const_int 65 [0x41]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 560 559 561 77 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       82
;;              78 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 78, loop depth 0, maybe hot
;;  prev block 77, next block 79, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       77 (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 561 560 562 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 562 561 563 78 (set (reg/f:DI 0 ax [502])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 563 562 564 78 (set (reg:SI 0 ax [orig:205 _119 ] [205])
        (mem:SI (reg/f:DI 0 ax [502]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 564 563 565 78 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:205 _119 ] [205])
            (const_int 73 [0x49]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 565 564 566 78 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       82
;;              79 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 79, loop depth 0, maybe hot
;;  prev block 78, next block 80, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 566 565 567 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 567 566 568 79 (set (reg/f:DI 0 ax [503])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 568 567 569 79 (set (reg:SI 0 ax [orig:206 _120 ] [206])
        (mem:SI (reg/f:DI 0 ax [503]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 569 568 570 79 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:206 _120 ] [206])
            (const_int 74 [0x4a]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 570 569 571 79 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       82
;;              80 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 80, loop depth 0, maybe hot
;;  prev block 79, next block 81, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 571 570 572 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 572 571 573 80 (set (reg/f:DI 0 ax [504])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 573 572 574 80 (set (reg:SI 0 ax [orig:207 _121 ] [207])
        (mem:SI (reg/f:DI 0 ax [504]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 574 573 575 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:207 _121 ] [207])
            (const_int 95 [0x5f]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 575 574 576 80 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       82
;;              81 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 81, loop depth 0, maybe hot
;;  prev block 80, next block 82, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       80 (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 576 575 577 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 577 576 578 81 (set (reg/f:DI 0 ax [505])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 578 577 579 81 (set (reg:SI 0 ax [orig:208 _122 ] [208])
        (mem:SI (reg/f:DI 0 ax [505]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 579 578 580 81 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:208 _122 ] [208])
            (const_int 96 [0x60]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 580 579 581 81 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 651)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 651)
;;  succ:       82 (FALLTHRU)
;;              86
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 82, loop depth 0, maybe hot
;;  prev block 81, next block 83, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       72
;;              73
;;              74
;;              75
;;              76
;;              77
;;              78
;;              79
;;              80
;;              81 (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 581 580 582 82 35 (nil) [9 uses])
(note 582 581 583 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 583 582 584 82 (set (reg:DI 0 ax [506])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":232 85 {*movdi_internal}
     (nil))
(insn 584 583 585 82 (set (reg:DI 37 r8)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":232 85 {*movdi_internal}
     (nil))
(insn 585 584 586 82 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":232 85 {*movdi_internal}
     (nil))
(insn 586 585 587 82 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f830f90d090 options>)
                (const_int 16 [0x10])))) "E2OUT.f":232 85 {*movdi_internal}
     (nil))
(insn 587 586 588 82 (set (reg:DI 4 si)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":232 85 {*movdi_internal}
     (nil))
(insn 588 587 589 82 (set (reg:DI 5 di)
        (reg:DI 0 ax [506])) "E2OUT.f":232 85 {*movdi_internal}
     (nil))
(insn 589 588 590 82 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":232 88 {*movqi_internal}
     (nil))
(call_insn 590 589 591 82 (call (mem:QI (symbol_ref:DI ("fillv_") [flags 0x41]  <function_decl 0x7f830f8f8b00 fillv>) [0 fillv S1 A8])
        (const_int 0 [0])) "E2OUT.f":232 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 591 590 592 82 (set (reg/f:DI 0 ax [507])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":233 85 {*movdi_internal}
     (nil))
(insn 592 591 593 82 (set (reg:SI 0 ax [orig:209 _123 ] [209])
        (mem:SI (reg/f:DI 0 ax [507]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":233 86 {*movsi_internal}
     (nil))
(insn 593 592 594 82 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:209 _123 ] [209])
            (const_int 0 [0]))) "E2OUT.f":233 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 594 593 595 82 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 618)
            (pc))) "E2OUT.f":233 682 {*jcc}
     (nil)
 -> 618)
;;  succ:       83 (FALLTHRU)
;;              85
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 83, loop depth 0, maybe hot
;;  prev block 82, next block 84, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 595 594 596 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 596 595 597 83 (set (reg/f:DI 0 ax [508])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":234 85 {*movdi_internal}
     (nil))
(insn 597 596 598 83 (set (reg:SI 0 ax [orig:210 _124 ] [210])
        (mem:SI (reg/f:DI 0 ax [508]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":234 86 {*movsi_internal}
     (nil))
(insn 598 597 599 83 (set (reg:DI 0 ax [orig:211 _125 ] [211])
        (sign_extend:DI (reg:SI 0 ax [orig:210 _124 ] [210]))) "E2OUT.f":234 149 {*extendsidi2_rex64}
     (nil))
(insn 599 598 600 83 (parallel [
            (set (reg:DI 0 ax [orig:212 _126 ] [212])
                (plus:DI (reg:DI 0 ax [orig:211 _125 ] [211])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":234 222 {*adddi_1}
     (nil))
(insn 600 599 601 83 (parallel [
            (set (reg:DI 0 ax [509])
                (plus:DI (reg:DI 0 ax [orig:212 _126 ] [212])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":234 222 {*adddi_1}
     (nil))
(insn 601 600 602 83 (set (reg:SI 0 ax [orig:213 _127 ] [213])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [509])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":234 86 {*movsi_internal}
     (nil))
(insn 602 601 603 83 (set (reg:DI 0 ax [orig:214 _128 ] [214])
        (sign_extend:DI (reg:SI 0 ax [orig:213 _127 ] [213]))) "E2OUT.f":234 149 {*extendsidi2_rex64}
     (nil))
(insn 603 602 604 83 (parallel [
            (set (reg:DI 0 ax [orig:215 _129 ] [215])
                (plus:DI (reg:DI 0 ax [orig:214 _128 ] [214])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":234 222 {*adddi_1}
     (nil))
(insn 604 603 605 83 (parallel [
            (set (reg:DI 0 ax [510])
                (plus:DI (reg:DI 0 ax [orig:215 _129 ] [215])
                    (const_int 1004 [0x3ec])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":234 222 {*adddi_1}
     (nil))
(insn 605 604 606 83 (set (reg:SI 0 ax [orig:216 _130 ] [216])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [510])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismful S4 A32])) "E2OUT.f":234 86 {*movsi_internal}
     (nil))
(insn 606 605 607 83 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:216 _130 ] [216])) "E2OUT.f":234 86 {*movsi_internal}
     (nil))
(insn 607 606 608 83 (set (reg:SI 0 ax [orig:217 ismth.24_131 ] [217])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":235 86 {*movsi_internal}
     (nil))
(insn 608 607 609 83 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:217 ismth.24_131 ] [217])
            (const_int 0 [0]))) "E2OUT.f":235 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 609 608 610 83 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 618)
            (pc))) "E2OUT.f":235 682 {*jcc}
     (nil)
 -> 618)
;;  succ:       84 (FALLTHRU)
;;              85
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 84, loop depth 0, maybe hot
;;  prev block 83, next block 85, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       83 (FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 610 609 1521 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 1521 610 612 84 (set (reg:DI 0 ax [511])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":235 218 {*leadi}
     (nil))
(insn 612 1521 613 84 (set (reg:DI 2 cx)
        (reg:DI 0 ax [511])) "E2OUT.f":235 85 {*movdi_internal}
     (nil))
(insn 613 612 614 84 (set (reg:DI 1 dx)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":235 85 {*movdi_internal}
     (nil))
(insn 614 613 615 84 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":235 85 {*movdi_internal}
     (nil))
(insn 615 614 616 84 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":235 85 {*movdi_internal}
     (nil))
(insn 616 615 617 84 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":235 88 {*movqi_internal}
     (nil))
(call_insn 617 616 618 84 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":235 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       85 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 85, loop depth 0, maybe hot
;;  prev block 84, next block 86, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       82
;;              84 (FALLTHRU)
;;              83
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 618 617 619 85 37 (nil) [2 uses])
(note 619 618 620 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 620 619 621 85 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [2  S8 A64])
        (const_int 6 [0x6])) "E2OUT.f":238 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 621 620 622 85 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (const:DI (plus:DI (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)
                (const_int 44 [0x2c])))) "E2OUT.f":238 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 622 621 623 85 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [16  S8 A64])
        (const:DI (plus:DI (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)
                (const_int 40 [0x28])))) "E2OUT.f":238 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 623 622 624 85 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (const:DI (plus:DI (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)
                (const_int 4 [0x4])))) "E2OUT.f":238 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 624 623 1500 85 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)) "E2OUT.f":238 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 1500 624 625 85 (set (reg:DI 0 ax [653])
        (const:DI (plus:DI (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f830f901ea0 llgrds>)
                (const_int 193183248 [0xb83be10])))) "E2OUT.f":238 85 {*movdi_internal}
     (nil))
(insn 625 1500 626 85 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [653])) "E2OUT.f":238 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 626 625 627 85 (set (reg:DI 38 r9)
        (const:DI (plus:DI (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f830f901ea0 llgrds>)
                (const_int 192947196 [0xb8023fc])))) "E2OUT.f":238 85 {*movdi_internal}
     (nil))
(insn 627 626 628 85 (set (reg:DI 37 r8)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":238 85 {*movdi_internal}
     (nil))
(insn 628 627 629 85 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":238 85 {*movdi_internal}
     (nil))
(insn 629 628 630 85 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f830f901ea0 llgrds>)
                (const_int 192711144 [0xb7c89e8])))) "E2OUT.f":238 85 {*movdi_internal}
     (nil))
(insn 630 629 631 85 (set (reg:DI 4 si)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":238 85 {*movdi_internal}
     (nil))
(insn 631 630 632 85 (set (reg:DI 5 di)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":238 85 {*movdi_internal}
     (nil))
(insn 632 631 633 85 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":238 88 {*movqi_internal}
     (nil))
(call_insn 633 632 634 85 (call (mem:QI (symbol_ref:DI ("euvguv_") [flags 0x41]  <function_decl 0x7f830f927000 euvguv>) [0 euvguv S1 A8])
        (const_int 48 [0x30])) "E2OUT.f":238 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 634 633 635 85 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":238 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 635 634 636 85 (set (reg:DI 1 dx [512])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":240 85 {*movdi_internal}
     (nil))
(insn 636 635 637 85 (set (reg:DI 0 ax [513])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":240 85 {*movdi_internal}
     (nil))
(insn 637 636 638 85 (set (reg:DI 2 cx)
        (reg:DI 1 dx [512])) "E2OUT.f":240 85 {*movdi_internal}
     (nil))
(insn 638 637 639 85 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":240 85 {*movdi_internal}
     (nil))
(insn 639 638 640 85 (set (reg:DI 4 si)
        (reg:DI 0 ax [513])) "E2OUT.f":240 85 {*movdi_internal}
     (nil))
(insn 640 639 641 85 (set (reg:DI 5 di)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":240 85 {*movdi_internal}
     (nil))
(insn 641 640 642 85 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":240 88 {*movqi_internal}
     (nil))
(call_insn 642 641 643 85 (call (mem:QI (symbol_ref:DI ("interp3_") [flags 0x41]  <function_decl 0x7f830f8f8e00 interp3>) [0 interp3 S1 A8])
        (const_int 0 [0])) "E2OUT.f":240 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 643 642 644 85 (set (reg:DI 1 dx [514])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":241 85 {*movdi_internal}
     (nil))
(insn 644 643 645 85 (set (reg:DI 0 ax [515])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])) "E2OUT.f":241 85 {*movdi_internal}
     (nil))
(insn 645 644 646 85 (set (reg:DI 2 cx)
        (reg:DI 1 dx [514])) "E2OUT.f":241 85 {*movdi_internal}
     (nil))
(insn 646 645 647 85 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":241 85 {*movdi_internal}
     (nil))
(insn 647 646 648 85 (set (reg:DI 4 si)
        (reg:DI 0 ax [515])) "E2OUT.f":241 85 {*movdi_internal}
     (nil))
(insn 648 647 649 85 (set (reg:DI 5 di)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":241 85 {*movdi_internal}
     (nil))
(insn 649 648 650 85 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":241 88 {*movqi_internal}
     (nil))
(call_insn 650 649 651 85 (call (mem:QI (symbol_ref:DI ("interp3_") [flags 0x41]  <function_decl 0x7f830f8f8e00 interp3>) [0 interp3 S1 A8])
        (const_int 0 [0])) "E2OUT.f":241 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       86 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 86, loop depth 0, maybe hot
;;  prev block 85, next block 87, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       81
;;              85 (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 651 650 652 86 36 (nil) [1 uses])
(note 652 651 653 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 653 652 654 86 (set (reg/f:DI 0 ax [516])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":247 85 {*movdi_internal}
     (nil))
(insn 654 653 655 86 (set (reg:SI 0 ax [orig:218 _132 ] [218])
        (mem:SI (reg/f:DI 0 ax [516]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":247 86 {*movsi_internal}
     (nil))
(insn 655 654 656 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:218 _132 ] [218])
            (const_int 33 [0x21]))) "E2OUT.f":247 11 {*cmpsi_1}
     (nil))
(jump_insn 656 655 657 86 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 667)
            (pc))) "E2OUT.f":247 682 {*jcc}
     (nil)
 -> 667)
;;  succ:       89
;;              87 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 87, loop depth 0, maybe hot
;;  prev block 86, next block 88, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       86 (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 657 656 658 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 658 657 659 87 (set (reg/f:DI 0 ax [517])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":247 85 {*movdi_internal}
     (nil))
(insn 659 658 660 87 (set (reg:SI 0 ax [orig:219 _133 ] [219])
        (mem:SI (reg/f:DI 0 ax [517]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":247 86 {*movsi_internal}
     (nil))
(insn 660 659 661 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:219 _133 ] [219])
            (const_int 34 [0x22]))) "E2OUT.f":247 11 {*cmpsi_1}
     (nil))
(jump_insn 661 660 662 87 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 667)
            (pc))) "E2OUT.f":247 682 {*jcc}
     (nil)
 -> 667)
;;  succ:       89
;;              88 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 88, loop depth 0, maybe hot
;;  prev block 87, next block 89, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       87 (FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 662 661 663 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 663 662 664 88 (set (reg/f:DI 0 ax [518])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":247 85 {*movdi_internal}
     (nil))
(insn 664 663 665 88 (set (reg:SI 0 ax [orig:220 _134 ] [220])
        (mem:SI (reg/f:DI 0 ax [518]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":247 86 {*movsi_internal}
     (nil))
(insn 665 664 666 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:220 _134 ] [220])
            (const_int 87 [0x57]))) "E2OUT.f":247 11 {*cmpsi_1}
     (nil))
(jump_insn 666 665 667 88 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1447)
            (pc))) "E2OUT.f":247 682 {*jcc}
     (nil)
 -> 1447)
;;  succ:       89 (FALLTHRU)
;;              169
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 89, loop depth 0, maybe hot
;;  prev block 88, next block 90, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       86
;;              87
;;              88 (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 667 666 668 89 38 (nil) [2 uses])
(note 668 667 669 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 669 668 670 89 (set (reg:DI 1 dx [519])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 670 669 671 89 (set (reg:DI 4 si [520])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 671 670 672 89 (set (reg:DI 0 ax [521])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 672 671 673 89 (set (reg:DI 38 r9)
        (const:DI (plus:DI (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f830f90d090 options>)
                (const_int 12 [0xc])))) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 673 672 674 89 (set (reg:DI 37 r8)
        (const:DI (plus:DI (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f830f90d090 options>)
                (const_int 8 [0x8])))) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 674 673 675 89 (set (reg:DI 2 cx)
        (reg:DI 1 dx [519])) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 675 674 677 89 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 677 675 678 89 (set (reg:DI 5 di)
        (reg:DI 0 ax [521])) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 678 677 679 89 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":249 88 {*movqi_internal}
     (nil))
(call_insn 679 678 1401 89 (call (mem:QI (symbol_ref:DI ("cetlih4_") [flags 0x41]  <function_decl 0x7f830f927100 cetlih4>) [0 cetlih4 S1 A8])
        (const_int 0 [0])) "E2OUT.f":249 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(jump_insn 1401 679 1402 89 (set (pc)
        (label_ref:DI 1447)) "E2OUT.f":249 683 {jump}
     (nil)
 -> 1447)
;;  succ:       169 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1402 1401 684)
;; basic block 90, loop depth 0, maybe hot
;;  prev block 89, next block 91, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       62
;;              63
;;              64
;;              65
;;              66
;;              67
;;              68
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 684 1402 685 90 32 (nil) [7 uses])
(note 685 684 686 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 686 685 736 90 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":253 86 {*movsi_internal}
     (nil))
;;  succ:       91 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 91, loop depth 0, maybe hot
;;  prev block 90, next block 92, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       90 (FALLTHRU)
;;              95 [always] 
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 736 686 687 91 44 (nil) [1 uses])
(note 687 736 688 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 688 687 689 91 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "E2OUT.f":253 11 {*cmpsi_1}
     (nil))
(insn 689 688 690 91 (set (reg:QI 0 ax [522])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":253 678 {*setcc_qi}
     (nil))
(insn 690 689 691 91 (set (reg:SI 0 ax [orig:402 _407 ] [402])
        (zero_extend:SI (reg:QI 0 ax [522]))) "E2OUT.f":253 140 {*zero_extendqisi2}
     (nil))
(insn 691 690 692 91 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:402 _407 ] [402])
            (const_int 0 [0]))) "E2OUT.f":253 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 692 691 693 91 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1450)
            (pc))) "E2OUT.f":253 682 {*jcc}
     (nil)
 -> 1450)
;;  succ:       97
;;              92 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 92, loop depth 0, maybe hot
;;  prev block 91, next block 93, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       91 (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 693 692 694 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 694 693 730 92 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":254 86 {*movsi_internal}
     (nil))
;;  succ:       93 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 93, loop depth 0, maybe hot
;;  prev block 92, next block 94, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       92 (FALLTHRU)
;;              94 [always] 
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 730 694 695 93 43 (nil) [1 uses])
(note 695 730 696 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 696 695 697 93 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 237 [0xed]))) "E2OUT.f":254 11 {*cmpsi_1}
     (nil))
(insn 697 696 698 93 (set (reg:QI 0 ax [523])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":254 678 {*setcc_qi}
     (nil))
(insn 698 697 699 93 (set (reg:SI 0 ax [orig:403 _409 ] [403])
        (zero_extend:SI (reg:QI 0 ax [523]))) "E2OUT.f":254 140 {*zero_extendqisi2}
     (nil))
(insn 699 698 700 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:403 _409 ] [403])
            (const_int 0 [0]))) "E2OUT.f":254 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 700 699 701 93 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1453)
            (pc))) "E2OUT.f":254 682 {*jcc}
     (nil)
 -> 1453)
;;  succ:       95
;;              94 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 94, loop depth 0, maybe hot
;;  prev block 93, next block 95, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       93 (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 701 700 702 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 702 701 703 94 (set (reg:SI 0 ax [524])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":255 86 {*movsi_internal}
     (nil))
(insn 703 702 704 94 (set (reg:DI 0 ax [orig:221 _135 ] [221])
        (sign_extend:DI (reg:SI 0 ax [524]))) "E2OUT.f":255 149 {*extendsidi2_rex64}
     (nil))
(insn 704 703 705 94 (parallel [
            (set (reg:DI 1 dx [orig:222 _136 ] [222])
                (mult:DI (reg:DI 0 ax [orig:221 _135 ] [221])
                    (const_int 237 [0xed])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":255 349 {*muldi3_1}
     (nil))
(insn 705 704 706 94 (set (reg:SI 0 ax [525])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":255 86 {*movsi_internal}
     (nil))
(insn 706 705 707 94 (set (reg:DI 0 ax [orig:223 _137 ] [223])
        (sign_extend:DI (reg:SI 0 ax [525]))) "E2OUT.f":255 149 {*extendsidi2_rex64}
     (nil))
(insn 707 706 1518 94 (parallel [
            (set (reg:DI 0 ax [orig:224 _138 ] [224])
                (plus:DI (reg:DI 0 ax [orig:223 _137 ] [223])
                    (reg:DI 1 dx [orig:222 _136 ] [222])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":255 222 {*adddi_1}
     (nil))
(insn 1518 707 709 94 (set (reg:DI 2 cx [orig:225 _139 ] [225])
        (plus:DI (reg:DI 0 ax [orig:224 _138 ] [224])
            (const_int -238 [0xffffffffffffff12]))) "E2OUT.f":255 218 {*leadi}
     (nil))
(insn 709 1518 710 94 (set (reg:SI 0 ax [526])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":255 86 {*movsi_internal}
     (nil))
(insn 710 709 711 94 (set (reg:DI 0 ax [orig:226 _140 ] [226])
        (sign_extend:DI (reg:SI 0 ax [526]))) "E2OUT.f":255 149 {*extendsidi2_rex64}
     (nil))
(insn 711 710 1519 94 (parallel [
            (set (reg:DI 0 ax [orig:227 _141 ] [227])
                (mult:DI (reg:DI 0 ax [orig:226 _140 ] [226])
                    (reg:DI 3 bx [orig:381 stride.2_350 ] [381])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":255 349 {*muldi3_1}
     (nil))
(insn 1519 711 713 94 (set (reg:DI 1 dx [orig:228 _142 ] [228])
        (plus:DI (reg:DI 42 r13 [orig:387 offset.3_358 ] [387])
            (reg:DI 0 ax [orig:227 _141 ] [227]))) "E2OUT.f":255 218 {*leadi}
     (nil))
(insn 713 1519 714 94 (set (reg:SI 0 ax [527])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":255 86 {*movsi_internal}
     (nil))
(insn 714 713 715 94 (set (reg:DI 0 ax [orig:229 _143 ] [229])
        (sign_extend:DI (reg:SI 0 ax [527]))) "E2OUT.f":255 149 {*extendsidi2_rex64}
     (nil))
(insn 715 714 716 94 (parallel [
            (set (reg:DI 1 dx [orig:230 _144 ] [230])
                (plus:DI (reg:DI 1 dx [orig:228 _142 ] [228])
                    (reg:DI 0 ax [orig:229 _143 ] [229])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":255 222 {*adddi_1}
     (nil))
(insn 716 715 717 94 (set (reg/f:DI 0 ax [528])
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":255 85 {*movdi_internal}
     (nil))
(insn 717 716 718 94 (set (reg:SF 21 xmm0 [orig:231 _145 ] [231])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:225 _139 ] [225])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [528])) [6 hful S4 A32])) "E2OUT.f":255 131 {*movsf_internal}
     (nil))
(insn 718 717 719 94 (set (reg/f:DI 0 ax [529])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":255 85 {*movdi_internal}
     (nil))
(insn 719 718 720 94 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:230 _144 ] [230])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [529])) [6 *grid1_379(D) S4 A32])
        (reg:SF 21 xmm0 [orig:231 _145 ] [231])) "E2OUT.f":255 131 {*movsf_internal}
     (nil))
(insn 720 719 721 94 (set (reg:SI 0 ax [530])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":256 86 {*movsi_internal}
     (nil))
(insn 721 720 722 94 (set (reg:DI 0 ax [orig:232 _146 ] [232])
        (sign_extend:DI (reg:SI 0 ax [530]))) "E2OUT.f":256 149 {*extendsidi2_rex64}
     (nil))
(insn 722 721 723 94 (parallel [
            (set (reg:DI 1 dx [orig:233 _147 ] [233])
                (mult:DI (reg:DI 0 ax [orig:232 _146 ] [232])
                    (const_int 4000 [0xfa0])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":256 349 {*muldi3_1}
     (nil))
(insn 723 722 724 94 (set (reg:SI 0 ax [531])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":256 86 {*movsi_internal}
     (nil))
(insn 724 723 725 94 (set (reg:DI 0 ax [orig:234 _148 ] [234])
        (sign_extend:DI (reg:SI 0 ax [531]))) "E2OUT.f":256 149 {*extendsidi2_rex64}
     (nil))
(insn 725 724 1520 94 (parallel [
            (set (reg:DI 0 ax [orig:235 _149 ] [235])
                (plus:DI (reg:DI 0 ax [orig:234 _148 ] [234])
                    (reg:DI 1 dx [orig:233 _147 ] [233])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":256 222 {*adddi_1}
     (nil))
(insn 1520 725 727 94 (set (reg:DI 1 dx [orig:236 _150 ] [236])
        (plus:DI (reg:DI 0 ax [orig:235 _149 ] [235])
            (const_int -4001 [0xfffffffffffff05f]))) "E2OUT.f":256 218 {*leadi}
     (nil))
(insn 727 1520 728 94 (set (reg/f:DI 0 ax [532])
        (symbol_ref:DI ("bitmap_") [flags 0x202]  <var_decl 0x7f831696bab0 bitmap>)) "E2OUT.f":256 85 {*movdi_internal}
     (nil))
(insn 728 727 729 94 (set (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:236 _150 ] [236])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [532])) [1 bitmap.ibmap S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":256 86 {*movsi_internal}
     (nil))
(insn 729 728 1403 94 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":254 221 {*addsi_1}
     (nil))
(jump_insn 1403 729 1404 94 (set (pc)
        (label_ref 730)) "E2OUT.f":254 683 {jump}
     (nil)
 -> 730)
;;  succ:       93 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

(barrier 1404 1403 1453)
;; basic block 95, loop depth 0, maybe hot
;;  prev block 94, next block 97, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       93
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1453 1404 1452 95 79 (nil) [1 uses])
(note 1452 1453 1454 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1454 1452 735 95 (const_int 0 [0]) "E2OUT.f":256 718 {nop}
     (nil))
(insn 735 1454 1405 95 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":253 221 {*addsi_1}
     (nil))
(jump_insn 1405 735 1406 95 (set (pc)
        (label_ref 736)) "E2OUT.f":253 683 {jump}
     (nil)
 -> 736)
;;  succ:       91 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

(barrier 1406 1405 1450)
;; basic block 97, loop depth 0, maybe hot
;;  prev block 95, next block 99, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       91
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1450 1406 1449 97 78 (nil) [1 uses])
(note 1449 1450 1451 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1451 1449 741 97 (const_int 0 [0]) "E2OUT.f":254 718 {nop}
     (nil))
(insn 741 1451 742 97 (set (reg/f:DI 0 ax [533])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 742 741 743 97 (set (reg:SI 0 ax [orig:237 _151 ] [237])
        (mem:SI (reg/f:DI 0 ax [533]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 743 742 744 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:237 _151 ] [237])
            (const_int 56 [0x38]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 744 743 745 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       108
;;              99 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 99, loop depth 0, maybe hot
;;  prev block 97, next block 100, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       97 (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 745 744 746 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 746 745 747 99 (set (reg/f:DI 0 ax [534])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 747 746 748 99 (set (reg:SI 0 ax [orig:238 _152 ] [238])
        (mem:SI (reg/f:DI 0 ax [534]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 748 747 749 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:238 _152 ] [238])
            (const_int 57 [0x39]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 749 748 750 99 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       108
;;              100 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 100, loop depth 0, maybe hot
;;  prev block 99, next block 101, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       99 (FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 750 749 751 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 751 750 752 100 (set (reg/f:DI 0 ax [535])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 752 751 753 100 (set (reg:SI 0 ax [orig:239 _153 ] [239])
        (mem:SI (reg/f:DI 0 ax [535]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 753 752 754 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:239 _153 ] [239])
            (const_int 60 [0x3c]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 754 753 755 100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       108
;;              101 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 101, loop depth 0, maybe hot
;;  prev block 100, next block 102, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       100 (FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 755 754 756 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 756 755 757 101 (set (reg/f:DI 0 ax [536])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 757 756 758 101 (set (reg:SI 0 ax [orig:240 _154 ] [240])
        (mem:SI (reg/f:DI 0 ax [536]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 758 757 759 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:240 _154 ] [240])
            (const_int 61 [0x3d]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 759 758 760 101 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       108
;;              102 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 102, loop depth 0, maybe hot
;;  prev block 101, next block 103, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       101 (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 760 759 761 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 761 760 762 102 (set (reg/f:DI 0 ax [537])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 762 761 763 102 (set (reg:SI 0 ax [orig:241 _155 ] [241])
        (mem:SI (reg/f:DI 0 ax [537]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 763 762 764 102 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:241 _155 ] [241])
            (const_int 64 [0x40]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 764 763 765 102 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       108
;;              103 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 103, loop depth 0, maybe hot
;;  prev block 102, next block 104, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       102 (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 765 764 766 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 766 765 767 103 (set (reg/f:DI 0 ax [538])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 767 766 768 103 (set (reg:SI 0 ax [orig:242 _156 ] [242])
        (mem:SI (reg/f:DI 0 ax [538]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 768 767 769 103 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:242 _156 ] [242])
            (const_int 65 [0x41]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 769 768 770 103 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       108
;;              104 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 104, loop depth 0, maybe hot
;;  prev block 103, next block 105, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       103 (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 770 769 771 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 771 770 772 104 (set (reg/f:DI 0 ax [539])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 772 771 773 104 (set (reg:SI 0 ax [orig:243 _157 ] [243])
        (mem:SI (reg/f:DI 0 ax [539]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 773 772 774 104 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:243 _157 ] [243])
            (const_int 73 [0x49]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 774 773 775 104 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       108
;;              105 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 105, loop depth 0, maybe hot
;;  prev block 104, next block 106, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       104 (FALLTHRU)
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 775 774 776 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 776 775 777 105 (set (reg/f:DI 0 ax [540])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 777 776 778 105 (set (reg:SI 0 ax [orig:244 _158 ] [244])
        (mem:SI (reg/f:DI 0 ax [540]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 778 777 779 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:244 _158 ] [244])
            (const_int 74 [0x4a]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 779 778 780 105 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       108
;;              106 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 106, loop depth 0, maybe hot
;;  prev block 105, next block 107, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       105 (FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 780 779 781 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 781 780 782 106 (set (reg/f:DI 0 ax [541])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 782 781 783 106 (set (reg:SI 0 ax [orig:245 _159 ] [245])
        (mem:SI (reg/f:DI 0 ax [541]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 783 782 784 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:245 _159 ] [245])
            (const_int 95 [0x5f]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 784 783 785 106 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       108
;;              107 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 107, loop depth 0, maybe hot
;;  prev block 106, next block 108, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       106 (FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 785 784 786 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 786 785 787 107 (set (reg/f:DI 0 ax [542])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 787 786 788 107 (set (reg:SI 0 ax [orig:246 _160 ] [246])
        (mem:SI (reg/f:DI 0 ax [542]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 788 787 789 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:246 _160 ] [246])
            (const_int 96 [0x60]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 789 788 790 107 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1458)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 1458)
;;  succ:       108 (FALLTHRU)
;;              170
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 108, loop depth 0, maybe hot
;;  prev block 107, next block 109, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       97
;;              99
;;              100
;;              101
;;              102
;;              103
;;              104
;;              105
;;              106
;;              107 (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 790 789 791 108 45 (nil) [9 uses])
(note 791 790 792 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 792 791 793 108 (set (reg:DI 0 ax [543])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":265 85 {*movdi_internal}
     (nil))
(insn 793 792 794 108 (set (reg:DI 37 r8)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":265 85 {*movdi_internal}
     (nil))
(insn 794 793 795 108 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":265 85 {*movdi_internal}
     (nil))
(insn 795 794 796 108 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f830f90d090 options>)
                (const_int 16 [0x10])))) "E2OUT.f":265 85 {*movdi_internal}
     (nil))
(insn 796 795 797 108 (set (reg:DI 4 si)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":265 85 {*movdi_internal}
     (nil))
(insn 797 796 798 108 (set (reg:DI 5 di)
        (reg:DI 0 ax [543])) "E2OUT.f":265 85 {*movdi_internal}
     (nil))
(insn 798 797 799 108 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":265 88 {*movqi_internal}
     (nil))
(call_insn 799 798 800 108 (call (mem:QI (symbol_ref:DI ("fillv_") [flags 0x41]  <function_decl 0x7f830f8f8b00 fillv>) [0 fillv S1 A8])
        (const_int 0 [0])) "E2OUT.f":265 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 800 799 801 108 (set (reg/f:DI 0 ax [544])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":266 85 {*movdi_internal}
     (nil))
(insn 801 800 802 108 (set (reg:SI 0 ax [orig:247 _161 ] [247])
        (mem:SI (reg/f:DI 0 ax [544]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":266 86 {*movsi_internal}
     (nil))
(insn 802 801 803 108 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:247 _161 ] [247])
            (const_int 0 [0]))) "E2OUT.f":266 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 803 802 804 108 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 827)
            (pc))) "E2OUT.f":266 682 {*jcc}
     (nil)
 -> 827)
;;  succ:       109 (FALLTHRU)
;;              111
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 109, loop depth 0, maybe hot
;;  prev block 108, next block 110, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       108 (FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 804 803 805 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 805 804 806 109 (set (reg/f:DI 0 ax [545])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":267 85 {*movdi_internal}
     (nil))
(insn 806 805 807 109 (set (reg:SI 0 ax [orig:248 _162 ] [248])
        (mem:SI (reg/f:DI 0 ax [545]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":267 86 {*movsi_internal}
     (nil))
(insn 807 806 808 109 (set (reg:DI 0 ax [orig:249 _163 ] [249])
        (sign_extend:DI (reg:SI 0 ax [orig:248 _162 ] [248]))) "E2OUT.f":267 149 {*extendsidi2_rex64}
     (nil))
(insn 808 807 809 109 (parallel [
            (set (reg:DI 0 ax [orig:250 _164 ] [250])
                (plus:DI (reg:DI 0 ax [orig:249 _163 ] [249])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":267 222 {*adddi_1}
     (nil))
(insn 809 808 810 109 (parallel [
            (set (reg:DI 0 ax [546])
                (plus:DI (reg:DI 0 ax [orig:250 _164 ] [250])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":267 222 {*adddi_1}
     (nil))
(insn 810 809 811 109 (set (reg:SI 0 ax [orig:251 _165 ] [251])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [546])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":267 86 {*movsi_internal}
     (nil))
(insn 811 810 812 109 (set (reg:DI 0 ax [orig:252 _166 ] [252])
        (sign_extend:DI (reg:SI 0 ax [orig:251 _165 ] [251]))) "E2OUT.f":267 149 {*extendsidi2_rex64}
     (nil))
(insn 812 811 813 109 (parallel [
            (set (reg:DI 0 ax [orig:253 _167 ] [253])
                (plus:DI (reg:DI 0 ax [orig:252 _166 ] [252])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":267 222 {*adddi_1}
     (nil))
(insn 813 812 814 109 (parallel [
            (set (reg:DI 0 ax [547])
                (plus:DI (reg:DI 0 ax [orig:253 _167 ] [253])
                    (const_int 1004 [0x3ec])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":267 222 {*adddi_1}
     (nil))
(insn 814 813 815 109 (set (reg:SI 0 ax [orig:254 _168 ] [254])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [547])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismful S4 A32])) "E2OUT.f":267 86 {*movsi_internal}
     (nil))
(insn 815 814 816 109 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:254 _168 ] [254])) "E2OUT.f":267 86 {*movsi_internal}
     (nil))
(insn 816 815 817 109 (set (reg:SI 0 ax [orig:255 ismth.25_169 ] [255])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":268 86 {*movsi_internal}
     (nil))
(insn 817 816 818 109 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:255 ismth.25_169 ] [255])
            (const_int 0 [0]))) "E2OUT.f":268 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 818 817 819 109 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 827)
            (pc))) "E2OUT.f":268 682 {*jcc}
     (nil)
 -> 827)
;;  succ:       110 (FALLTHRU)
;;              111
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 110, loop depth 0, maybe hot
;;  prev block 109, next block 111, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       109 (FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 819 818 1517 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 1517 819 821 110 (set (reg:DI 0 ax [548])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":268 218 {*leadi}
     (nil))
(insn 821 1517 822 110 (set (reg:DI 2 cx)
        (reg:DI 0 ax [548])) "E2OUT.f":268 85 {*movdi_internal}
     (nil))
(insn 822 821 823 110 (set (reg:DI 1 dx)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":268 85 {*movdi_internal}
     (nil))
(insn 823 822 824 110 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":268 85 {*movdi_internal}
     (nil))
(insn 824 823 825 110 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":268 85 {*movdi_internal}
     (nil))
(insn 825 824 826 110 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":268 88 {*movqi_internal}
     (nil))
(call_insn 826 825 827 110 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":268 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       111 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 111, loop depth 0, maybe hot
;;  prev block 110, next block 112, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       108
;;              110 (FALLTHRU)
;;              109
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 827 826 828 111 46 (nil) [2 uses])
(note 828 827 829 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 829 828 870 111 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":271 86 {*movsi_internal}
     (nil))
;;  succ:       112 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 112, loop depth 0, maybe hot
;;  prev block 111, next block 113, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       111 (FALLTHRU)
;;              116 [always] 
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 870 829 830 112 49 (nil) [1 uses])
(note 830 870 831 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 831 830 832 112 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "E2OUT.f":271 11 {*cmpsi_1}
     (nil))
(insn 832 831 833 112 (set (reg:QI 0 ax [549])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":271 678 {*setcc_qi}
     (nil))
(insn 833 832 834 112 (set (reg:SI 0 ax [orig:404 _418 ] [404])
        (zero_extend:SI (reg:QI 0 ax [549]))) "E2OUT.f":271 140 {*zero_extendqisi2}
     (nil))
(insn 834 833 835 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:404 _418 ] [404])
            (const_int 0 [0]))) "E2OUT.f":271 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 835 834 836 112 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1458)
            (pc))) "E2OUT.f":271 682 {*jcc}
     (nil)
 -> 1458)
;;  succ:       170
;;              113 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 113, loop depth 0, maybe hot
;;  prev block 112, next block 114, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       112 (FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 836 835 837 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 837 836 864 113 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":272 86 {*movsi_internal}
     (nil))
;;  succ:       114 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 114, loop depth 0, maybe hot
;;  prev block 113, next block 115, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       113 (FALLTHRU)
;;              115 [always] 
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 864 837 838 114 48 (nil) [1 uses])
(note 838 864 839 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 839 838 840 114 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 237 [0xed]))) "E2OUT.f":272 11 {*cmpsi_1}
     (nil))
(insn 840 839 841 114 (set (reg:QI 0 ax [550])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":272 678 {*setcc_qi}
     (nil))
(insn 841 840 842 114 (set (reg:SI 0 ax [orig:405 _420 ] [405])
        (zero_extend:SI (reg:QI 0 ax [550]))) "E2OUT.f":272 140 {*zero_extendqisi2}
     (nil))
(insn 842 841 843 114 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:405 _420 ] [405])
            (const_int 0 [0]))) "E2OUT.f":272 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 843 842 844 114 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1461)
            (pc))) "E2OUT.f":272 682 {*jcc}
     (nil)
 -> 1461)
;;  succ:       116
;;              115 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 115, loop depth 0, maybe hot
;;  prev block 114, next block 116, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       114 (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 844 843 845 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 845 844 846 115 (set (reg:SI 0 ax [551])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":273 86 {*movsi_internal}
     (nil))
(insn 846 845 847 115 (set (reg:DI 0 ax [orig:256 _170 ] [256])
        (sign_extend:DI (reg:SI 0 ax [551]))) "E2OUT.f":273 149 {*extendsidi2_rex64}
     (nil))
(insn 847 846 848 115 (parallel [
            (set (reg:DI 1 dx [orig:257 _171 ] [257])
                (mult:DI (reg:DI 0 ax [orig:256 _170 ] [256])
                    (const_int 237 [0xed])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":273 349 {*muldi3_1}
     (nil))
(insn 848 847 849 115 (set (reg:SI 0 ax [552])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":273 86 {*movsi_internal}
     (nil))
(insn 849 848 850 115 (set (reg:DI 0 ax [orig:258 _172 ] [258])
        (sign_extend:DI (reg:SI 0 ax [552]))) "E2OUT.f":273 149 {*extendsidi2_rex64}
     (nil))
(insn 850 849 1515 115 (parallel [
            (set (reg:DI 0 ax [orig:259 _173 ] [259])
                (plus:DI (reg:DI 0 ax [orig:258 _172 ] [258])
                    (reg:DI 1 dx [orig:257 _171 ] [257])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":273 222 {*adddi_1}
     (nil))
(insn 1515 850 852 115 (set (reg:DI 2 cx [orig:260 _174 ] [260])
        (plus:DI (reg:DI 0 ax [orig:259 _173 ] [259])
            (const_int -238 [0xffffffffffffff12]))) "E2OUT.f":273 218 {*leadi}
     (nil))
(insn 852 1515 853 115 (set (reg:SI 0 ax [553])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":273 86 {*movsi_internal}
     (nil))
(insn 853 852 854 115 (set (reg:DI 0 ax [orig:261 _175 ] [261])
        (sign_extend:DI (reg:SI 0 ax [553]))) "E2OUT.f":273 149 {*extendsidi2_rex64}
     (nil))
(insn 854 853 1516 115 (parallel [
            (set (reg:DI 0 ax [orig:262 _176 ] [262])
                (mult:DI (reg:DI 0 ax [orig:261 _175 ] [261])
                    (reg:DI 41 r12 [orig:389 stride.7_361 ] [389])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":273 349 {*muldi3_1}
     (nil))
(insn 1516 854 856 115 (set (reg:DI 1 dx [orig:263 _177 ] [263])
        (plus:DI (reg:DI 43 r14 [orig:395 offset.8_368 ] [395])
            (reg:DI 0 ax [orig:262 _176 ] [262]))) "E2OUT.f":273 218 {*leadi}
     (nil))
(insn 856 1516 857 115 (set (reg:SI 0 ax [554])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":273 86 {*movsi_internal}
     (nil))
(insn 857 856 858 115 (set (reg:DI 0 ax [orig:264 _178 ] [264])
        (sign_extend:DI (reg:SI 0 ax [554]))) "E2OUT.f":273 149 {*extendsidi2_rex64}
     (nil))
(insn 858 857 859 115 (parallel [
            (set (reg:DI 1 dx [orig:265 _179 ] [265])
                (plus:DI (reg:DI 1 dx [orig:263 _177 ] [263])
                    (reg:DI 0 ax [orig:264 _178 ] [264])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":273 222 {*adddi_1}
     (nil))
(insn 859 858 860 115 (set (reg/f:DI 0 ax [555])
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":273 85 {*movdi_internal}
     (nil))
(insn 860 859 861 115 (set (reg:SF 21 xmm0 [orig:266 _180 ] [266])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:260 _174 ] [260])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [555])) [6 vful S4 A32])) "E2OUT.f":273 131 {*movsf_internal}
     (nil))
(insn 861 860 862 115 (set (reg/f:DI 0 ax [556])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])) "E2OUT.f":273 85 {*movdi_internal}
     (nil))
(insn 862 861 863 115 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:265 _179 ] [265])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [556])) [6 *grid2_389(D) S4 A32])
        (reg:SF 21 xmm0 [orig:266 _180 ] [266])) "E2OUT.f":273 131 {*movsf_internal}
     (nil))
(insn 863 862 1407 115 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":272 221 {*addsi_1}
     (nil))
(jump_insn 1407 863 1408 115 (set (pc)
        (label_ref 864)) "E2OUT.f":272 683 {jump}
     (nil)
 -> 864)
;;  succ:       114 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

(barrier 1408 1407 1461)
;; basic block 116, loop depth 0, maybe hot
;;  prev block 115, next block 118, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       114
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1461 1408 1460 116 81 (nil) [1 uses])
(note 1460 1461 1462 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 1462 1460 869 116 (const_int 0 [0]) "E2OUT.f":273 718 {nop}
     (nil))
(insn 869 1462 1409 116 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":271 221 {*addsi_1}
     (nil))
(jump_insn 1409 869 1410 116 (set (pc)
        (label_ref 870)) "E2OUT.f":271 683 {jump}
     (nil)
 -> 870)
;;  succ:       112 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

(barrier 1410 1409 877)
;; basic block 118, loop depth 0, maybe hot
;;  prev block 116, next block 119, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       58
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 877 1410 878 118 29 (nil) [1 uses])
(note 878 877 879 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 879 878 880 118 (set (reg/f:DI 0 ax [557])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":283 85 {*movdi_internal}
     (nil))
(insn 880 879 881 118 (set (reg:SI 0 ax [orig:267 _181 ] [267])
        (mem:SI (reg/f:DI 0 ax [557]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":283 86 {*movsi_internal}
     (nil))
(insn 881 880 882 118 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:267 _181 ] [267])
            (const_int 53 [0x35]))) "E2OUT.f":283 11 {*cmpsi_1}
     (nil))
(jump_insn 882 881 883 118 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1127)
            (pc))) "E2OUT.f":283 682 {*jcc}
     (nil)
 -> 1127)
;;  succ:       119 (FALLTHRU)
;;              151
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 119, loop depth 0, maybe hot
;;  prev block 118, next block 120, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       118 (FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 883 882 884 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 884 883 885 119 (set (reg/f:DI 0 ax [558])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":283 85 {*movdi_internal}
     (nil))
(insn 885 884 886 119 (set (reg:SI 0 ax [orig:268 _182 ] [268])
        (mem:SI (reg/f:DI 0 ax [558]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":283 86 {*movsi_internal}
     (nil))
(insn 886 885 887 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:268 _182 ] [268])
            (const_int 162 [0xa2]))) "E2OUT.f":283 11 {*cmpsi_1}
     (nil))
(jump_insn 887 886 888 119 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1127)
            (pc))) "E2OUT.f":283 682 {*jcc}
     (nil)
 -> 1127)
;;  succ:       120 (FALLTHRU)
;;              151
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 120, loop depth 0, maybe hot
;;  prev block 119, next block 121, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       119 (FALLTHRU)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 888 887 889 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 889 888 890 120 (set (reg:DI 0 ax [559])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":284 85 {*movdi_internal}
     (nil))
(insn 890 889 891 120 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":284 85 {*movdi_internal}
     (nil))
(insn 891 890 892 120 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":284 85 {*movdi_internal}
     (nil))
(insn 892 891 893 120 (set (reg:DI 4 si)
        (symbol_ref:DI ("uful.4078") [flags 0x202]  <var_decl 0x7f830f917870 uful>)) "E2OUT.f":284 85 {*movdi_internal}
     (nil))
(insn 893 892 894 120 (set (reg:DI 5 di)
        (reg:DI 0 ax [559])) "E2OUT.f":284 85 {*movdi_internal}
     (nil))
(insn 894 893 895 120 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":284 88 {*movqi_internal}
     (nil))
(call_insn 895 894 896 120 (call (mem:QI (symbol_ref:DI ("fillh_") [flags 0x41]  <function_decl 0x7f830f927200 fillh>) [0 fillh S1 A8])
        (const_int 0 [0])) "E2OUT.f":284 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 896 895 897 120 (set (reg:DI 0 ax [560])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":285 85 {*movdi_internal}
     (nil))
(insn 897 896 898 120 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":285 85 {*movdi_internal}
     (nil))
(insn 898 897 899 120 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":285 85 {*movdi_internal}
     (nil))
(insn 899 898 900 120 (set (reg:DI 4 si)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":285 85 {*movdi_internal}
     (nil))
(insn 900 899 901 120 (set (reg:DI 5 di)
        (reg:DI 0 ax [560])) "E2OUT.f":285 85 {*movdi_internal}
     (nil))
(insn 901 900 902 120 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":285 88 {*movqi_internal}
     (nil))
(call_insn 902 901 903 120 (call (mem:QI (symbol_ref:DI ("fillh_") [flags 0x41]  <function_decl 0x7f830f927200 fillh>) [0 fillh S1 A8])
        (const_int 0 [0])) "E2OUT.f":285 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 903 902 904 120 (set (reg/f:DI 0 ax [561])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":286 85 {*movdi_internal}
     (nil))
(insn 904 903 905 120 (set (reg:SI 0 ax [orig:269 _183 ] [269])
        (mem:SI (reg/f:DI 0 ax [561]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":286 86 {*movsi_internal}
     (nil))
(insn 905 904 906 120 (set (reg:DI 0 ax [orig:270 _184 ] [270])
        (sign_extend:DI (reg:SI 0 ax [orig:269 _183 ] [269]))) "E2OUT.f":286 149 {*extendsidi2_rex64}
     (nil))
(insn 906 905 907 120 (parallel [
            (set (reg:DI 0 ax [orig:271 _185 ] [271])
                (plus:DI (reg:DI 0 ax [orig:270 _184 ] [270])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":286 222 {*adddi_1}
     (nil))
(insn 907 906 908 120 (parallel [
            (set (reg:DI 0 ax [562])
                (plus:DI (reg:DI 0 ax [orig:271 _185 ] [271])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":286 222 {*adddi_1}
     (nil))
(insn 908 907 909 120 (set (reg:SI 0 ax [orig:272 _186 ] [272])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [562])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":286 86 {*movsi_internal}
     (nil))
(insn 909 908 910 120 (set (reg:DI 0 ax [orig:273 _187 ] [273])
        (sign_extend:DI (reg:SI 0 ax [orig:272 _186 ] [272]))) "E2OUT.f":286 149 {*extendsidi2_rex64}
     (nil))
(insn 910 909 911 120 (parallel [
            (set (reg:DI 0 ax [orig:274 _188 ] [274])
                (plus:DI (reg:DI 0 ax [orig:273 _187 ] [273])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":286 222 {*adddi_1}
     (nil))
(insn 911 910 912 120 (parallel [
            (set (reg:DI 0 ax [563])
                (plus:DI (reg:DI 0 ax [orig:274 _188 ] [274])
                    (const_int 1004 [0x3ec])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":286 222 {*adddi_1}
     (nil))
(insn 912 911 913 120 (set (reg:SI 0 ax [orig:275 _189 ] [275])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [563])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismful S4 A32])) "E2OUT.f":286 86 {*movsi_internal}
     (nil))
(insn 913 912 914 120 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:275 _189 ] [275])) "E2OUT.f":286 86 {*movsi_internal}
     (nil))
(insn 914 913 915 120 (set (reg:SI 0 ax [orig:276 ismth.26_190 ] [276])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":287 86 {*movsi_internal}
     (nil))
(insn 915 914 916 120 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:276 ismth.26_190 ] [276])
            (const_int 0 [0]))) "E2OUT.f":287 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 916 915 917 120 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 925)
            (pc))) "E2OUT.f":287 682 {*jcc}
     (nil)
 -> 925)
;;  succ:       121 (FALLTHRU)
;;              122
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 121, loop depth 0, maybe hot
;;  prev block 120, next block 122, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       120 (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 917 916 1514 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 1514 917 919 121 (set (reg:DI 0 ax [564])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":287 218 {*leadi}
     (nil))
(insn 919 1514 920 121 (set (reg:DI 2 cx)
        (reg:DI 0 ax [564])) "E2OUT.f":287 85 {*movdi_internal}
     (nil))
(insn 920 919 921 121 (set (reg:DI 1 dx)
        (symbol_ref:DI ("uful.4078") [flags 0x202]  <var_decl 0x7f830f917870 uful>)) "E2OUT.f":287 85 {*movdi_internal}
     (nil))
(insn 921 920 922 121 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":287 85 {*movdi_internal}
     (nil))
(insn 922 921 923 121 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":287 85 {*movdi_internal}
     (nil))
(insn 923 922 924 121 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":287 88 {*movqi_internal}
     (nil))
(call_insn 924 923 925 121 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":287 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       122 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 122, loop depth 0, maybe hot
;;  prev block 121, next block 123, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       120
;;              121 (FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 925 924 926 122 52 (nil) [1 uses])
(note 926 925 927 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 927 926 928 122 (set (reg/f:DI 0 ax [565])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":288 85 {*movdi_internal}
     (nil))
(insn 928 927 929 122 (set (reg:SI 0 ax [orig:277 _191 ] [277])
        (mem:SI (reg/f:DI 0 ax [565]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":288 86 {*movsi_internal}
     (nil))
(insn 929 928 930 122 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:277 _191 ] [277])
            (const_int 0 [0]))) "E2OUT.f":288 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 930 929 931 122 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 954)
            (pc))) "E2OUT.f":288 682 {*jcc}
     (nil)
 -> 954)
;;  succ:       123 (FALLTHRU)
;;              125
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 123, loop depth 0, maybe hot
;;  prev block 122, next block 124, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       122 (FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 931 930 932 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 932 931 933 123 (set (reg/f:DI 0 ax [566])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":289 85 {*movdi_internal}
     (nil))
(insn 933 932 934 123 (set (reg:SI 0 ax [orig:278 _192 ] [278])
        (mem:SI (reg/f:DI 0 ax [566]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":289 86 {*movsi_internal}
     (nil))
(insn 934 933 935 123 (set (reg:DI 0 ax [orig:279 _193 ] [279])
        (sign_extend:DI (reg:SI 0 ax [orig:278 _192 ] [278]))) "E2OUT.f":289 149 {*extendsidi2_rex64}
     (nil))
(insn 935 934 936 123 (parallel [
            (set (reg:DI 0 ax [orig:280 _194 ] [280])
                (plus:DI (reg:DI 0 ax [orig:279 _193 ] [279])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":289 222 {*adddi_1}
     (nil))
(insn 936 935 937 123 (parallel [
            (set (reg:DI 0 ax [567])
                (plus:DI (reg:DI 0 ax [orig:280 _194 ] [280])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":289 222 {*adddi_1}
     (nil))
(insn 937 936 938 123 (set (reg:SI 0 ax [orig:281 _195 ] [281])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [567])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":289 86 {*movsi_internal}
     (nil))
(insn 938 937 939 123 (set (reg:DI 0 ax [orig:282 _196 ] [282])
        (sign_extend:DI (reg:SI 0 ax [orig:281 _195 ] [281]))) "E2OUT.f":289 149 {*extendsidi2_rex64}
     (nil))
(insn 939 938 940 123 (parallel [
            (set (reg:DI 0 ax [orig:283 _197 ] [283])
                (plus:DI (reg:DI 0 ax [orig:282 _196 ] [282])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":289 222 {*adddi_1}
     (nil))
(insn 940 939 941 123 (parallel [
            (set (reg:DI 0 ax [568])
                (plus:DI (reg:DI 0 ax [orig:283 _197 ] [283])
                    (const_int 1004 [0x3ec])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":289 222 {*adddi_1}
     (nil))
(insn 941 940 942 123 (set (reg:SI 0 ax [orig:284 _198 ] [284])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [568])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismful S4 A32])) "E2OUT.f":289 86 {*movsi_internal}
     (nil))
(insn 942 941 943 123 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:284 _198 ] [284])) "E2OUT.f":289 86 {*movsi_internal}
     (nil))
(insn 943 942 944 123 (set (reg:SI 0 ax [orig:285 ismth.27_199 ] [285])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":290 86 {*movsi_internal}
     (nil))
(insn 944 943 945 123 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:285 ismth.27_199 ] [285])
            (const_int 0 [0]))) "E2OUT.f":290 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 945 944 946 123 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 954)
            (pc))) "E2OUT.f":290 682 {*jcc}
     (nil)
 -> 954)
;;  succ:       124 (FALLTHRU)
;;              125
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 124, loop depth 0, maybe hot
;;  prev block 123, next block 125, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       123 (FALLTHRU)
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 946 945 1513 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 1513 946 948 124 (set (reg:DI 0 ax [569])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":291 218 {*leadi}
     (nil))
(insn 948 1513 949 124 (set (reg:DI 2 cx)
        (reg:DI 0 ax [569])) "E2OUT.f":291 85 {*movdi_internal}
     (nil))
(insn 949 948 950 124 (set (reg:DI 1 dx)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":291 85 {*movdi_internal}
     (nil))
(insn 950 949 951 124 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":291 85 {*movdi_internal}
     (nil))
(insn 951 950 952 124 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":291 85 {*movdi_internal}
     (nil))
(insn 952 951 953 124 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":291 88 {*movqi_internal}
     (nil))
(call_insn 953 952 954 124 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":291 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       125 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 125, loop depth 0, maybe hot
;;  prev block 124, next block 126, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       122
;;              124 (FALLTHRU)
;;              123
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 954 953 955 125 53 (nil) [2 uses])
(note 955 954 956 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 956 955 957 125 (set (reg:SI 0 ax [orig:286 _200 ] [286])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 957 956 958 125 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:286 _200 ] [286])
            (const_int 89 [0x59]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 958 957 959 125 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 987)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 987)
;;  succ:       133
;;              126 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 126, loop depth 0, maybe hot
;;  prev block 125, next block 127, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       125 (FALLTHRU)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 959 958 960 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 960 959 961 126 (set (reg:SI 0 ax [orig:287 _201 ] [287])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 961 960 962 126 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:287 _201 ] [287])
            (const_int 97 [0x61]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 962 961 963 126 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 1022)
;;  succ:       127 (FALLTHRU)
;;              134
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 127, loop depth 0, maybe hot
;;  prev block 126, next block 128, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       126 (FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 963 962 964 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 964 963 965 127 (set (reg:SI 0 ax [orig:288 _202 ] [288])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 965 964 966 127 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:288 _202 ] [288])
            (const_int 99 [0x63]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 966 965 967 127 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 1022)
;;  succ:       128 (FALLTHRU)
;;              134
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 128, loop depth 0, maybe hot
;;  prev block 127, next block 129, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       127 (FALLTHRU)
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 967 966 968 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 968 967 969 128 (set (reg:SI 0 ax [orig:289 _203 ] [289])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 969 968 970 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:289 _203 ] [289])
            (const_int 190 [0xbe]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 970 969 971 128 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 1022)
;;  succ:       129 (FALLTHRU)
;;              134
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 129, loop depth 0, maybe hot
;;  prev block 128, next block 130, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       128 (FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 971 970 972 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 972 971 973 129 (set (reg:SI 0 ax [orig:290 _204 ] [290])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 973 972 974 129 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:290 _204 ] [290])
            (const_int 192 [0xc0]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 974 973 975 129 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 1022)
;;  succ:       130 (FALLTHRU)
;;              134
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 130, loop depth 0, maybe hot
;;  prev block 129, next block 131, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       129 (FALLTHRU)
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 975 974 976 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 976 975 977 130 (set (reg:SI 0 ax [orig:291 _205 ] [291])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 977 976 978 130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:291 _205 ] [291])
            (const_int 194 [0xc2]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 978 977 979 130 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 1022)
;;  succ:       131 (FALLTHRU)
;;              134
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 131, loop depth 0, maybe hot
;;  prev block 130, next block 132, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       130 (FALLTHRU)
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 979 978 980 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 980 979 981 131 (set (reg:SI 0 ax [orig:292 _206 ] [292])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 981 980 982 131 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:292 _206 ] [292])
            (const_int 196 [0xc4]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 982 981 983 131 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 1022)
;;  succ:       132 (FALLTHRU)
;;              134
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 132, loop depth 0, maybe hot
;;  prev block 131, next block 133, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       131 (FALLTHRU)
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 983 982 984 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 984 983 985 132 (set (reg:SI 0 ax [orig:293 _207 ] [293])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 985 984 986 132 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:293 _207 ] [293])
            (const_int 255 [0xff]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 986 985 987 132 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 1022)
;;  succ:       133 (FALLTHRU)
;;              134
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 133, loop depth 0, maybe hot
;;  prev block 132, next block 134, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       125
;;              132 (FALLTHRU)
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 987 986 988 133 54 (nil) [1 uses])
(note 988 987 989 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 989 988 990 133 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [2  S8 A64])
        (const_int 6 [0x6])) "E2OUT.f":299 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 990 989 991 133 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (const:DI (plus:DI (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)
                (const_int 44 [0x2c])))) "E2OUT.f":299 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 991 990 992 133 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [16  S8 A64])
        (const:DI (plus:DI (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)
                (const_int 40 [0x28])))) "E2OUT.f":299 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 992 991 993 133 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (const:DI (plus:DI (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)
                (const_int 4 [0x4])))) "E2OUT.f":299 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 993 992 1501 133 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)) "E2OUT.f":299 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 1501 993 994 133 (set (reg:DI 0 ax [654])
        (const:DI (plus:DI (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f830f901ea0 llgrds>)
                (const_int 193183248 [0xb83be10])))) "E2OUT.f":299 85 {*movdi_internal}
     (nil))
(insn 994 1501 995 133 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [654])) "E2OUT.f":299 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 995 994 996 133 (set (reg:DI 38 r9)
        (const:DI (plus:DI (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f830f901ea0 llgrds>)
                (const_int 192947196 [0xb8023fc])))) "E2OUT.f":299 85 {*movdi_internal}
     (nil))
(insn 996 995 997 133 (set (reg:DI 37 r8)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":299 85 {*movdi_internal}
     (nil))
(insn 997 996 998 133 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":299 85 {*movdi_internal}
     (nil))
(insn 998 997 999 133 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f830f901ea0 llgrds>)
                (const_int 192711144 [0xb7c89e8])))) "E2OUT.f":299 85 {*movdi_internal}
     (nil))
(insn 999 998 1000 133 (set (reg:DI 4 si)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":299 85 {*movdi_internal}
     (nil))
(insn 1000 999 1001 133 (set (reg:DI 5 di)
        (symbol_ref:DI ("uful.4078") [flags 0x202]  <var_decl 0x7f830f917870 uful>)) "E2OUT.f":299 85 {*movdi_internal}
     (nil))
(insn 1001 1000 1002 133 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":299 88 {*movqi_internal}
     (nil))
(call_insn 1002 1001 1003 133 (call (mem:QI (symbol_ref:DI ("euvguv_") [flags 0x41]  <function_decl 0x7f830f927000 euvguv>) [0 euvguv S1 A8])
        (const_int 48 [0x30])) "E2OUT.f":299 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1003 1002 1004 133 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":299 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1004 1003 1005 133 (set (reg:DI 1 dx [570])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":300 85 {*movdi_internal}
     (nil))
(insn 1005 1004 1006 133 (set (reg:DI 0 ax [571])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":300 85 {*movdi_internal}
     (nil))
(insn 1006 1005 1007 133 (set (reg:DI 2 cx)
        (reg:DI 1 dx [570])) "E2OUT.f":300 85 {*movdi_internal}
     (nil))
(insn 1007 1006 1008 133 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":300 85 {*movdi_internal}
     (nil))
(insn 1008 1007 1009 133 (set (reg:DI 4 si)
        (reg:DI 0 ax [571])) "E2OUT.f":300 85 {*movdi_internal}
     (nil))
(insn 1009 1008 1010 133 (set (reg:DI 5 di)
        (symbol_ref:DI ("uful.4078") [flags 0x202]  <var_decl 0x7f830f917870 uful>)) "E2OUT.f":300 85 {*movdi_internal}
     (nil))
(insn 1010 1009 1011 133 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":300 88 {*movqi_internal}
     (nil))
(call_insn 1011 1010 1012 133 (call (mem:QI (symbol_ref:DI ("interp3_") [flags 0x41]  <function_decl 0x7f830f8f8e00 interp3>) [0 interp3 S1 A8])
        (const_int 0 [0])) "E2OUT.f":300 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1012 1011 1013 133 (set (reg:DI 1 dx [572])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":301 85 {*movdi_internal}
     (nil))
(insn 1013 1012 1014 133 (set (reg:DI 0 ax [573])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])) "E2OUT.f":301 85 {*movdi_internal}
     (nil))
(insn 1014 1013 1015 133 (set (reg:DI 2 cx)
        (reg:DI 1 dx [572])) "E2OUT.f":301 85 {*movdi_internal}
     (nil))
(insn 1015 1014 1016 133 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":301 85 {*movdi_internal}
     (nil))
(insn 1016 1015 1017 133 (set (reg:DI 4 si)
        (reg:DI 0 ax [573])) "E2OUT.f":301 85 {*movdi_internal}
     (nil))
(insn 1017 1016 1018 133 (set (reg:DI 5 di)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":301 85 {*movdi_internal}
     (nil))
(insn 1018 1017 1019 133 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":301 88 {*movqi_internal}
     (nil))
(call_insn 1019 1018 1411 133 (call (mem:QI (symbol_ref:DI ("interp3_") [flags 0x41]  <function_decl 0x7f830f8f8e00 interp3>) [0 interp3 S1 A8])
        (const_int 0 [0])) "E2OUT.f":301 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(jump_insn 1411 1019 1412 133 (set (pc)
        (label_ref 1123)) "E2OUT.f":301 683 {jump}
     (nil)
 -> 1123)
;;  succ:       150 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1412 1411 1022)
;; basic block 134, loop depth 0, maybe hot
;;  prev block 133, next block 135, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       126
;;              127
;;              128
;;              129
;;              130
;;              131
;;              132
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1022 1412 1023 134 55 (nil) [7 uses])
(note 1023 1022 1024 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 1024 1023 1074 134 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":304 86 {*movsi_internal}
     (nil))
;;  succ:       135 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 135, loop depth 0, maybe hot
;;  prev block 134, next block 136, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       134 (FALLTHRU)
;;              139 [always] 
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1074 1024 1025 135 60 (nil) [1 uses])
(note 1025 1074 1026 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1026 1025 1027 135 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "E2OUT.f":304 11 {*cmpsi_1}
     (nil))
(insn 1027 1026 1028 135 (set (reg:QI 0 ax [574])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":304 678 {*setcc_qi}
     (nil))
(insn 1028 1027 1029 135 (set (reg:SI 0 ax [orig:406 _440 ] [406])
        (zero_extend:SI (reg:QI 0 ax [574]))) "E2OUT.f":304 140 {*zero_extendqisi2}
     (nil))
(insn 1029 1028 1030 135 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:406 _440 ] [406])
            (const_int 0 [0]))) "E2OUT.f":304 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1030 1029 1031 135 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1464)
            (pc))) "E2OUT.f":304 682 {*jcc}
     (nil)
 -> 1464)
;;  succ:       141
;;              136 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 136, loop depth 0, maybe hot
;;  prev block 135, next block 137, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       135 (FALLTHRU)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 1031 1030 1032 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 1032 1031 1068 136 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":305 86 {*movsi_internal}
     (nil))
;;  succ:       137 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 137, loop depth 0, maybe hot
;;  prev block 136, next block 138, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       136 (FALLTHRU)
;;              138 [always] 
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1068 1032 1033 137 59 (nil) [1 uses])
(note 1033 1068 1034 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 1034 1033 1035 137 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 237 [0xed]))) "E2OUT.f":305 11 {*cmpsi_1}
     (nil))
(insn 1035 1034 1036 137 (set (reg:QI 0 ax [575])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":305 678 {*setcc_qi}
     (nil))
(insn 1036 1035 1037 137 (set (reg:SI 0 ax [orig:407 _442 ] [407])
        (zero_extend:SI (reg:QI 0 ax [575]))) "E2OUT.f":305 140 {*zero_extendqisi2}
     (nil))
(insn 1037 1036 1038 137 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:407 _442 ] [407])
            (const_int 0 [0]))) "E2OUT.f":305 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1038 1037 1039 137 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1467)
            (pc))) "E2OUT.f":305 682 {*jcc}
     (nil)
 -> 1467)
;;  succ:       139
;;              138 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 138, loop depth 0, maybe hot
;;  prev block 137, next block 139, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       137 (FALLTHRU)
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 1039 1038 1040 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 1040 1039 1041 138 (set (reg:SI 0 ax [576])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":306 86 {*movsi_internal}
     (nil))
(insn 1041 1040 1042 138 (set (reg:DI 0 ax [orig:294 _208 ] [294])
        (sign_extend:DI (reg:SI 0 ax [576]))) "E2OUT.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 1042 1041 1043 138 (parallel [
            (set (reg:DI 1 dx [orig:295 _209 ] [295])
                (mult:DI (reg:DI 0 ax [orig:294 _208 ] [294])
                    (const_int 237 [0xed])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":306 349 {*muldi3_1}
     (nil))
(insn 1043 1042 1044 138 (set (reg:SI 0 ax [577])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":306 86 {*movsi_internal}
     (nil))
(insn 1044 1043 1045 138 (set (reg:DI 0 ax [orig:296 _210 ] [296])
        (sign_extend:DI (reg:SI 0 ax [577]))) "E2OUT.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 1045 1044 1510 138 (parallel [
            (set (reg:DI 0 ax [orig:297 _211 ] [297])
                (plus:DI (reg:DI 0 ax [orig:296 _210 ] [296])
                    (reg:DI 1 dx [orig:295 _209 ] [295])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":306 222 {*adddi_1}
     (nil))
(insn 1510 1045 1047 138 (set (reg:DI 2 cx [orig:298 _212 ] [298])
        (plus:DI (reg:DI 0 ax [orig:297 _211 ] [297])
            (const_int -238 [0xffffffffffffff12]))) "E2OUT.f":306 218 {*leadi}
     (nil))
(insn 1047 1510 1048 138 (set (reg:SI 0 ax [578])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":306 86 {*movsi_internal}
     (nil))
(insn 1048 1047 1049 138 (set (reg:DI 0 ax [orig:299 _213 ] [299])
        (sign_extend:DI (reg:SI 0 ax [578]))) "E2OUT.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 1049 1048 1511 138 (parallel [
            (set (reg:DI 0 ax [orig:300 _214 ] [300])
                (mult:DI (reg:DI 0 ax [orig:299 _213 ] [299])
                    (reg:DI 3 bx [orig:381 stride.2_350 ] [381])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":306 349 {*muldi3_1}
     (nil))
(insn 1511 1049 1051 138 (set (reg:DI 1 dx [orig:301 _215 ] [301])
        (plus:DI (reg:DI 42 r13 [orig:387 offset.3_358 ] [387])
            (reg:DI 0 ax [orig:300 _214 ] [300]))) "E2OUT.f":306 218 {*leadi}
     (nil))
(insn 1051 1511 1052 138 (set (reg:SI 0 ax [579])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":306 86 {*movsi_internal}
     (nil))
(insn 1052 1051 1053 138 (set (reg:DI 0 ax [orig:302 _216 ] [302])
        (sign_extend:DI (reg:SI 0 ax [579]))) "E2OUT.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 1053 1052 1054 138 (parallel [
            (set (reg:DI 1 dx [orig:303 _217 ] [303])
                (plus:DI (reg:DI 1 dx [orig:301 _215 ] [301])
                    (reg:DI 0 ax [orig:302 _216 ] [302])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":306 222 {*adddi_1}
     (nil))
(insn 1054 1053 1055 138 (set (reg/f:DI 0 ax [580])
        (symbol_ref:DI ("uful.4078") [flags 0x202]  <var_decl 0x7f830f917870 uful>)) "E2OUT.f":306 85 {*movdi_internal}
     (nil))
(insn 1055 1054 1056 138 (set (reg:SF 21 xmm0 [orig:304 _218 ] [304])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:298 _212 ] [298])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [580])) [6 uful S4 A32])) "E2OUT.f":306 131 {*movsf_internal}
     (nil))
(insn 1056 1055 1057 138 (set (reg/f:DI 0 ax [581])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":306 85 {*movdi_internal}
     (nil))
(insn 1057 1056 1058 138 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:303 _217 ] [303])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [581])) [6 *grid1_379(D) S4 A32])
        (reg:SF 21 xmm0 [orig:304 _218 ] [304])) "E2OUT.f":306 131 {*movsf_internal}
     (nil))
(insn 1058 1057 1059 138 (set (reg:SI 0 ax [582])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":307 86 {*movsi_internal}
     (nil))
(insn 1059 1058 1060 138 (set (reg:DI 0 ax [orig:305 _219 ] [305])
        (sign_extend:DI (reg:SI 0 ax [582]))) "E2OUT.f":307 149 {*extendsidi2_rex64}
     (nil))
(insn 1060 1059 1061 138 (parallel [
            (set (reg:DI 1 dx [orig:306 _220 ] [306])
                (mult:DI (reg:DI 0 ax [orig:305 _219 ] [305])
                    (const_int 4000 [0xfa0])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":307 349 {*muldi3_1}
     (nil))
(insn 1061 1060 1062 138 (set (reg:SI 0 ax [583])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":307 86 {*movsi_internal}
     (nil))
(insn 1062 1061 1063 138 (set (reg:DI 0 ax [orig:307 _221 ] [307])
        (sign_extend:DI (reg:SI 0 ax [583]))) "E2OUT.f":307 149 {*extendsidi2_rex64}
     (nil))
(insn 1063 1062 1512 138 (parallel [
            (set (reg:DI 0 ax [orig:308 _222 ] [308])
                (plus:DI (reg:DI 0 ax [orig:307 _221 ] [307])
                    (reg:DI 1 dx [orig:306 _220 ] [306])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":307 222 {*adddi_1}
     (nil))
(insn 1512 1063 1065 138 (set (reg:DI 1 dx [orig:309 _223 ] [309])
        (plus:DI (reg:DI 0 ax [orig:308 _222 ] [308])
            (const_int -4001 [0xfffffffffffff05f]))) "E2OUT.f":307 218 {*leadi}
     (nil))
(insn 1065 1512 1066 138 (set (reg/f:DI 0 ax [584])
        (symbol_ref:DI ("bitmap_") [flags 0x202]  <var_decl 0x7f831696bab0 bitmap>)) "E2OUT.f":307 85 {*movdi_internal}
     (nil))
(insn 1066 1065 1067 138 (set (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:309 _223 ] [309])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [584])) [1 bitmap.ibmap S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":307 86 {*movsi_internal}
     (nil))
(insn 1067 1066 1413 138 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":305 221 {*addsi_1}
     (nil))
(jump_insn 1413 1067 1414 138 (set (pc)
        (label_ref 1068)) "E2OUT.f":305 683 {jump}
     (nil)
 -> 1068)
;;  succ:       137 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

(barrier 1414 1413 1467)
;; basic block 139, loop depth 0, maybe hot
;;  prev block 138, next block 141, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       137
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1467 1414 1466 139 83 (nil) [1 uses])
(note 1466 1467 1468 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 1468 1466 1073 139 (const_int 0 [0]) "E2OUT.f":307 718 {nop}
     (nil))
(insn 1073 1468 1415 139 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":304 221 {*addsi_1}
     (nil))
(jump_insn 1415 1073 1416 139 (set (pc)
        (label_ref 1074)) "E2OUT.f":304 683 {jump}
     (nil)
 -> 1074)
;;  succ:       135 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

(barrier 1416 1415 1464)
;; basic block 141, loop depth 0, maybe hot
;;  prev block 139, next block 143, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       135
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1464 1416 1463 141 82 (nil) [1 uses])
(note 1463 1464 1465 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 1465 1463 1079 141 (const_int 0 [0]) "E2OUT.f":305 718 {nop}
     (nil))
(insn 1079 1465 1120 141 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":311 86 {*movsi_internal}
     (nil))
;;  succ:       143 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 143, loop depth 0, maybe hot
;;  prev block 141, next block 144, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       141 (FALLTHRU)
;;              147 [always] 
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1120 1079 1080 143 63 (nil) [1 uses])
(note 1080 1120 1081 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 1081 1080 1082 143 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "E2OUT.f":311 11 {*cmpsi_1}
     (nil))
(insn 1082 1081 1083 143 (set (reg:QI 0 ax [585])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":311 678 {*setcc_qi}
     (nil))
(insn 1083 1082 1084 143 (set (reg:SI 0 ax [orig:408 _448 ] [408])
        (zero_extend:SI (reg:QI 0 ax [585]))) "E2OUT.f":311 140 {*zero_extendqisi2}
     (nil))
(insn 1084 1083 1085 143 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:408 _448 ] [408])
            (const_int 0 [0]))) "E2OUT.f":311 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1085 1084 1086 143 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1470)
            (pc))) "E2OUT.f":311 682 {*jcc}
     (nil)
 -> 1470)
;;  succ:       149
;;              144 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 144, loop depth 0, maybe hot
;;  prev block 143, next block 145, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       143 (FALLTHRU)
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 1086 1085 1087 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 1087 1086 1114 144 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":312 86 {*movsi_internal}
     (nil))
;;  succ:       145 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 145, loop depth 0, maybe hot
;;  prev block 144, next block 146, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       144 (FALLTHRU)
;;              146 [always] 
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1114 1087 1088 145 62 (nil) [1 uses])
(note 1088 1114 1089 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 1089 1088 1090 145 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 237 [0xed]))) "E2OUT.f":312 11 {*cmpsi_1}
     (nil))
(insn 1090 1089 1091 145 (set (reg:QI 0 ax [586])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":312 678 {*setcc_qi}
     (nil))
(insn 1091 1090 1092 145 (set (reg:SI 0 ax [orig:409 _450 ] [409])
        (zero_extend:SI (reg:QI 0 ax [586]))) "E2OUT.f":312 140 {*zero_extendqisi2}
     (nil))
(insn 1092 1091 1093 145 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:409 _450 ] [409])
            (const_int 0 [0]))) "E2OUT.f":312 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1093 1092 1094 145 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1473)
            (pc))) "E2OUT.f":312 682 {*jcc}
     (nil)
 -> 1473)
;;  succ:       147
;;              146 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 146, loop depth 0, maybe hot
;;  prev block 145, next block 147, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       145 (FALLTHRU)
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 1094 1093 1095 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 1095 1094 1096 146 (set (reg:SI 0 ax [587])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":313 86 {*movsi_internal}
     (nil))
(insn 1096 1095 1097 146 (set (reg:DI 0 ax [orig:310 _224 ] [310])
        (sign_extend:DI (reg:SI 0 ax [587]))) "E2OUT.f":313 149 {*extendsidi2_rex64}
     (nil))
(insn 1097 1096 1098 146 (parallel [
            (set (reg:DI 1 dx [orig:311 _225 ] [311])
                (mult:DI (reg:DI 0 ax [orig:310 _224 ] [310])
                    (const_int 237 [0xed])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":313 349 {*muldi3_1}
     (nil))
(insn 1098 1097 1099 146 (set (reg:SI 0 ax [588])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":313 86 {*movsi_internal}
     (nil))
(insn 1099 1098 1100 146 (set (reg:DI 0 ax [orig:312 _226 ] [312])
        (sign_extend:DI (reg:SI 0 ax [588]))) "E2OUT.f":313 149 {*extendsidi2_rex64}
     (nil))
(insn 1100 1099 1508 146 (parallel [
            (set (reg:DI 0 ax [orig:313 _227 ] [313])
                (plus:DI (reg:DI 0 ax [orig:312 _226 ] [312])
                    (reg:DI 1 dx [orig:311 _225 ] [311])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":313 222 {*adddi_1}
     (nil))
(insn 1508 1100 1102 146 (set (reg:DI 2 cx [orig:314 _228 ] [314])
        (plus:DI (reg:DI 0 ax [orig:313 _227 ] [313])
            (const_int -238 [0xffffffffffffff12]))) "E2OUT.f":313 218 {*leadi}
     (nil))
(insn 1102 1508 1103 146 (set (reg:SI 0 ax [589])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":313 86 {*movsi_internal}
     (nil))
(insn 1103 1102 1104 146 (set (reg:DI 0 ax [orig:315 _229 ] [315])
        (sign_extend:DI (reg:SI 0 ax [589]))) "E2OUT.f":313 149 {*extendsidi2_rex64}
     (nil))
(insn 1104 1103 1509 146 (parallel [
            (set (reg:DI 0 ax [orig:316 _230 ] [316])
                (mult:DI (reg:DI 0 ax [orig:315 _229 ] [315])
                    (reg:DI 41 r12 [orig:389 stride.7_361 ] [389])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":313 349 {*muldi3_1}
     (nil))
(insn 1509 1104 1106 146 (set (reg:DI 1 dx [orig:317 _231 ] [317])
        (plus:DI (reg:DI 43 r14 [orig:395 offset.8_368 ] [395])
            (reg:DI 0 ax [orig:316 _230 ] [316]))) "E2OUT.f":313 218 {*leadi}
     (nil))
(insn 1106 1509 1107 146 (set (reg:SI 0 ax [590])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":313 86 {*movsi_internal}
     (nil))
(insn 1107 1106 1108 146 (set (reg:DI 0 ax [orig:318 _232 ] [318])
        (sign_extend:DI (reg:SI 0 ax [590]))) "E2OUT.f":313 149 {*extendsidi2_rex64}
     (nil))
(insn 1108 1107 1109 146 (parallel [
            (set (reg:DI 1 dx [orig:319 _233 ] [319])
                (plus:DI (reg:DI 1 dx [orig:317 _231 ] [317])
                    (reg:DI 0 ax [orig:318 _232 ] [318])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":313 222 {*adddi_1}
     (nil))
(insn 1109 1108 1110 146 (set (reg/f:DI 0 ax [591])
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":313 85 {*movdi_internal}
     (nil))
(insn 1110 1109 1111 146 (set (reg:SF 21 xmm0 [orig:320 _234 ] [320])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:314 _228 ] [314])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [591])) [6 vful S4 A32])) "E2OUT.f":313 131 {*movsf_internal}
     (nil))
(insn 1111 1110 1112 146 (set (reg/f:DI 0 ax [592])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])) "E2OUT.f":313 85 {*movdi_internal}
     (nil))
(insn 1112 1111 1113 146 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:319 _233 ] [319])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [592])) [6 *grid2_389(D) S4 A32])
        (reg:SF 21 xmm0 [orig:320 _234 ] [320])) "E2OUT.f":313 131 {*movsf_internal}
     (nil))
(insn 1113 1112 1417 146 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":312 221 {*addsi_1}
     (nil))
(jump_insn 1417 1113 1418 146 (set (pc)
        (label_ref 1114)) "E2OUT.f":312 683 {jump}
     (nil)
 -> 1114)
;;  succ:       145 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

(barrier 1418 1417 1473)
;; basic block 147, loop depth 0, maybe hot
;;  prev block 146, next block 149, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       145
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1473 1418 1472 147 85 (nil) [1 uses])
(note 1472 1473 1474 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 1474 1472 1119 147 (const_int 0 [0]) "E2OUT.f":313 718 {nop}
     (nil))
(insn 1119 1474 1419 147 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":311 221 {*addsi_1}
     (nil))
(jump_insn 1419 1119 1420 147 (set (pc)
        (label_ref 1120)) "E2OUT.f":311 683 {jump}
     (nil)
 -> 1120)
;;  succ:       143 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

(barrier 1420 1419 1470)
;; basic block 149, loop depth 0, maybe hot
;;  prev block 147, next block 150, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       143
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1470 1420 1469 149 84 (nil) [1 uses])
(note 1469 1470 1471 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 1471 1469 1123 149 (const_int 0 [0]) "E2OUT.f":312 718 {nop}
     (nil))
;;  succ:       150 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 150, loop depth 0, maybe hot
;;  prev block 149, next block 151, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       149 [always]  (FALLTHRU)
;;              133 [always] 
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1123 1471 1124 150 56 (nil) [1 uses])
(note 1124 1123 1421 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1421 1124 1422 150 (set (pc)
        (label_ref 1254)) "E2OUT.f":311 683 {jump}
     (nil)
 -> 1254)
;;  succ:       172 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1422 1421 1127)
;; basic block 151, loop depth 0, maybe hot
;;  prev block 150, next block 152, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       118
;;              119
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1127 1422 1128 151 51 (nil) [2 uses])
(note 1128 1127 1129 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 1129 1128 1130 151 (set (reg:DI 0 ax [593])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":319 85 {*movdi_internal}
     (nil))
(insn 1130 1129 1131 151 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":319 85 {*movdi_internal}
     (nil))
(insn 1131 1130 1132 151 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":319 85 {*movdi_internal}
     (nil))
(insn 1132 1131 1133 151 (set (reg:DI 4 si)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":319 85 {*movdi_internal}
     (nil))
(insn 1133 1132 1134 151 (set (reg:DI 5 di)
        (reg:DI 0 ax [593])) "E2OUT.f":319 85 {*movdi_internal}
     (nil))
(insn 1134 1133 1135 151 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":319 88 {*movqi_internal}
     (nil))
(call_insn 1135 1134 1136 151 (call (mem:QI (symbol_ref:DI ("fillh_") [flags 0x41]  <function_decl 0x7f830f927200 fillh>) [0 fillh S1 A8])
        (const_int 0 [0])) "E2OUT.f":319 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1136 1135 1137 151 (set (reg/f:DI 0 ax [594])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":320 85 {*movdi_internal}
     (nil))
(insn 1137 1136 1138 151 (set (reg:SI 0 ax [orig:321 _235 ] [321])
        (mem:SI (reg/f:DI 0 ax [594]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":320 86 {*movsi_internal}
     (nil))
(insn 1138 1137 1139 151 (set (reg:DI 0 ax [orig:322 _236 ] [322])
        (sign_extend:DI (reg:SI 0 ax [orig:321 _235 ] [321]))) "E2OUT.f":320 149 {*extendsidi2_rex64}
     (nil))
(insn 1139 1138 1140 151 (parallel [
            (set (reg:DI 0 ax [orig:323 _237 ] [323])
                (plus:DI (reg:DI 0 ax [orig:322 _236 ] [322])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":320 222 {*adddi_1}
     (nil))
(insn 1140 1139 1141 151 (parallel [
            (set (reg:DI 0 ax [595])
                (plus:DI (reg:DI 0 ax [orig:323 _237 ] [323])
                    (const_int 1004 [0x3ec])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":320 222 {*adddi_1}
     (nil))
(insn 1141 1140 1142 151 (set (reg:SI 0 ax [orig:324 _238 ] [324])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [595])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismful S4 A32])) "E2OUT.f":320 86 {*movsi_internal}
     (nil))
(insn 1142 1141 1143 151 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:324 _238 ] [324])) "E2OUT.f":320 86 {*movsi_internal}
     (nil))
(insn 1143 1142 1144 151 (set (reg:SI 0 ax [orig:325 ismth.28_239 ] [325])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":321 86 {*movsi_internal}
     (nil))
(insn 1144 1143 1145 151 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:325 ismth.28_239 ] [325])
            (const_int 0 [0]))) "E2OUT.f":321 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1145 1144 1146 151 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1154)
            (pc))) "E2OUT.f":321 682 {*jcc}
     (nil)
 -> 1154)
;;  succ:       152 (FALLTHRU)
;;              153
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 152, loop depth 0, maybe hot
;;  prev block 151, next block 153, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       151 (FALLTHRU)
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1146 1145 1507 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 1507 1146 1148 152 (set (reg:DI 0 ax [596])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":321 218 {*leadi}
     (nil))
(insn 1148 1507 1149 152 (set (reg:DI 2 cx)
        (reg:DI 0 ax [596])) "E2OUT.f":321 85 {*movdi_internal}
     (nil))
(insn 1149 1148 1150 152 (set (reg:DI 1 dx)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":321 85 {*movdi_internal}
     (nil))
(insn 1150 1149 1151 152 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":321 85 {*movdi_internal}
     (nil))
(insn 1151 1150 1152 152 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":321 85 {*movdi_internal}
     (nil))
(insn 1152 1151 1153 152 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":321 88 {*movqi_internal}
     (nil))
(call_insn 1153 1152 1154 152 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":321 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       153 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 153, loop depth 0, maybe hot
;;  prev block 152, next block 154, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       151
;;              152 (FALLTHRU)
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1154 1153 1155 153 64 (nil) [1 uses])
(note 1155 1154 1156 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 1156 1155 1157 153 (set (reg:SI 0 ax [orig:326 _240 ] [326])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1157 1156 1158 153 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:326 _240 ] [326])
            (const_int 89 [0x59]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1158 1157 1159 153 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1187)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1187)
;;  succ:       161
;;              154 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 154, loop depth 0, maybe hot
;;  prev block 153, next block 155, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       153 (FALLTHRU)
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1159 1158 1160 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 1160 1159 1161 154 (set (reg:SI 0 ax [orig:327 _241 ] [327])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1161 1160 1162 154 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:327 _241 ] [327])
            (const_int 97 [0x61]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1162 1161 1163 154 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1199)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1199)
;;  succ:       155 (FALLTHRU)
;;              162
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 155, loop depth 0, maybe hot
;;  prev block 154, next block 156, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       154 (FALLTHRU)
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1163 1162 1164 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 1164 1163 1165 155 (set (reg:SI 0 ax [orig:328 _242 ] [328])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1165 1164 1166 155 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:328 _242 ] [328])
            (const_int 99 [0x63]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1166 1165 1167 155 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1199)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1199)
;;  succ:       156 (FALLTHRU)
;;              162
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 156, loop depth 0, maybe hot
;;  prev block 155, next block 157, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       155 (FALLTHRU)
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1167 1166 1168 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 1168 1167 1169 156 (set (reg:SI 0 ax [orig:329 _243 ] [329])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1169 1168 1170 156 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:329 _243 ] [329])
            (const_int 190 [0xbe]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1170 1169 1171 156 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1199)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1199)
;;  succ:       157 (FALLTHRU)
;;              162
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 157, loop depth 0, maybe hot
;;  prev block 156, next block 158, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       156 (FALLTHRU)
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1171 1170 1172 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 1172 1171 1173 157 (set (reg:SI 0 ax [orig:330 _244 ] [330])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1173 1172 1174 157 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:330 _244 ] [330])
            (const_int 192 [0xc0]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1174 1173 1175 157 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1199)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1199)
;;  succ:       158 (FALLTHRU)
;;              162
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 158, loop depth 0, maybe hot
;;  prev block 157, next block 159, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       157 (FALLTHRU)
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1175 1174 1176 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 1176 1175 1177 158 (set (reg:SI 0 ax [orig:331 _245 ] [331])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1177 1176 1178 158 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:331 _245 ] [331])
            (const_int 194 [0xc2]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1178 1177 1179 158 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1199)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1199)
;;  succ:       159 (FALLTHRU)
;;              162
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 159, loop depth 0, maybe hot
;;  prev block 158, next block 160, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       158 (FALLTHRU)
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1179 1178 1180 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 1180 1179 1181 159 (set (reg:SI 0 ax [orig:332 _246 ] [332])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1181 1180 1182 159 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:332 _246 ] [332])
            (const_int 196 [0xc4]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1182 1181 1183 159 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1199)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1199)
;;  succ:       160 (FALLTHRU)
;;              162
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 160, loop depth 0, maybe hot
;;  prev block 159, next block 161, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       159 (FALLTHRU)
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1183 1182 1184 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 1184 1183 1185 160 (set (reg:SI 0 ax [orig:333 _247 ] [333])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1185 1184 1186 160 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:333 _247 ] [333])
            (const_int 255 [0xff]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1186 1185 1187 160 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1199)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1199)
;;  succ:       161 (FALLTHRU)
;;              162
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 161, loop depth 0, maybe hot
;;  prev block 160, next block 162, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       153
;;              160 (FALLTHRU)
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1187 1186 1188 161 65 (nil) [1 uses])
(note 1188 1187 1189 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 1189 1188 1190 161 (set (reg:DI 1 dx [597])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":327 85 {*movdi_internal}
     (nil))
(insn 1190 1189 1191 161 (set (reg:DI 0 ax [598])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":327 85 {*movdi_internal}
     (nil))
(insn 1191 1190 1192 161 (set (reg:DI 2 cx)
        (reg:DI 1 dx [597])) "E2OUT.f":327 85 {*movdi_internal}
     (nil))
(insn 1192 1191 1193 161 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":327 85 {*movdi_internal}
     (nil))
(insn 1193 1192 1194 161 (set (reg:DI 4 si)
        (reg:DI 0 ax [598])) "E2OUT.f":327 85 {*movdi_internal}
     (nil))
(insn 1194 1193 1195 161 (set (reg:DI 5 di)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":327 85 {*movdi_internal}
     (nil))
(insn 1195 1194 1196 161 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":327 88 {*movqi_internal}
     (nil))
(call_insn 1196 1195 1423 161 (call (mem:QI (symbol_ref:DI ("interp3_") [flags 0x41]  <function_decl 0x7f830f8f8e00 interp3>) [0 interp3 S1 A8])
        (const_int 0 [0])) "E2OUT.f":327 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(jump_insn 1423 1196 1424 161 (set (pc)
        (label_ref 1254)) "E2OUT.f":327 683 {jump}
     (nil)
 -> 1254)
;;  succ:       172 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1424 1423 1199)
;; basic block 162, loop depth 0, maybe hot
;;  prev block 161, next block 163, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       154
;;              155
;;              156
;;              157
;;              158
;;              159
;;              160
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1199 1424 1200 162 66 (nil) [7 uses])
(note 1200 1199 1201 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1201 1200 1251 162 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":329 86 {*movsi_internal}
     (nil))
;;  succ:       163 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 163, loop depth 0, maybe hot
;;  prev block 162, next block 164, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       162 (FALLTHRU)
;;              167 [always] 
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1251 1201 1202 163 69 (nil) [1 uses])
(note 1202 1251 1203 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 1203 1202 1204 163 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "E2OUT.f":329 11 {*cmpsi_1}
     (nil))
(insn 1204 1203 1205 163 (set (reg:QI 0 ax [599])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":329 678 {*setcc_qi}
     (nil))
(insn 1205 1204 1206 163 (set (reg:SI 0 ax [orig:410 _461 ] [410])
        (zero_extend:SI (reg:QI 0 ax [599]))) "E2OUT.f":329 140 {*zero_extendqisi2}
     (nil))
(insn 1206 1205 1207 163 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:410 _461 ] [410])
            (const_int 0 [0]))) "E2OUT.f":329 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1207 1206 1208 163 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1478)
            (pc))) "E2OUT.f":329 682 {*jcc}
     (nil)
 -> 1478)
;;  succ:       171
;;              164 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 164, loop depth 0, maybe hot
;;  prev block 163, next block 165, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       163 (FALLTHRU)
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 1208 1207 1209 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 1209 1208 1245 164 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":330 86 {*movsi_internal}
     (nil))
;;  succ:       165 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 165, loop depth 0, maybe hot
;;  prev block 164, next block 166, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       164 (FALLTHRU)
;;              166 [always] 
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1245 1209 1210 165 68 (nil) [1 uses])
(note 1210 1245 1211 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 1211 1210 1212 165 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 237 [0xed]))) "E2OUT.f":330 11 {*cmpsi_1}
     (nil))
(insn 1212 1211 1213 165 (set (reg:QI 0 ax [600])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":330 678 {*setcc_qi}
     (nil))
(insn 1213 1212 1214 165 (set (reg:SI 0 ax [orig:411 _463 ] [411])
        (zero_extend:SI (reg:QI 0 ax [600]))) "E2OUT.f":330 140 {*zero_extendqisi2}
     (nil))
(insn 1214 1213 1215 165 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:411 _463 ] [411])
            (const_int 0 [0]))) "E2OUT.f":330 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1215 1214 1216 165 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1481)
            (pc))) "E2OUT.f":330 682 {*jcc}
     (nil)
 -> 1481)
;;  succ:       167
;;              166 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 166, loop depth 0, maybe hot
;;  prev block 165, next block 167, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       165 (FALLTHRU)
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 1216 1215 1217 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 1217 1216 1218 166 (set (reg:SI 0 ax [601])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":331 86 {*movsi_internal}
     (nil))
(insn 1218 1217 1219 166 (set (reg:DI 0 ax [orig:334 _248 ] [334])
        (sign_extend:DI (reg:SI 0 ax [601]))) "E2OUT.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1219 1218 1220 166 (parallel [
            (set (reg:DI 1 dx [orig:335 _249 ] [335])
                (mult:DI (reg:DI 0 ax [orig:334 _248 ] [334])
                    (const_int 237 [0xed])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":331 349 {*muldi3_1}
     (nil))
(insn 1220 1219 1221 166 (set (reg:SI 0 ax [602])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":331 86 {*movsi_internal}
     (nil))
(insn 1221 1220 1222 166 (set (reg:DI 0 ax [orig:336 _250 ] [336])
        (sign_extend:DI (reg:SI 0 ax [602]))) "E2OUT.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1222 1221 1504 166 (parallel [
            (set (reg:DI 0 ax [orig:337 _251 ] [337])
                (plus:DI (reg:DI 0 ax [orig:336 _250 ] [336])
                    (reg:DI 1 dx [orig:335 _249 ] [335])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":331 222 {*adddi_1}
     (nil))
(insn 1504 1222 1224 166 (set (reg:DI 2 cx [orig:338 _252 ] [338])
        (plus:DI (reg:DI 0 ax [orig:337 _251 ] [337])
            (const_int -238 [0xffffffffffffff12]))) "E2OUT.f":331 218 {*leadi}
     (nil))
(insn 1224 1504 1225 166 (set (reg:SI 0 ax [603])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":331 86 {*movsi_internal}
     (nil))
(insn 1225 1224 1226 166 (set (reg:DI 0 ax [orig:339 _253 ] [339])
        (sign_extend:DI (reg:SI 0 ax [603]))) "E2OUT.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1226 1225 1505 166 (parallel [
            (set (reg:DI 0 ax [orig:340 _254 ] [340])
                (mult:DI (reg:DI 0 ax [orig:339 _253 ] [339])
                    (reg:DI 3 bx [orig:381 stride.2_350 ] [381])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":331 349 {*muldi3_1}
     (nil))
(insn 1505 1226 1228 166 (set (reg:DI 1 dx [orig:341 _255 ] [341])
        (plus:DI (reg:DI 42 r13 [orig:387 offset.3_358 ] [387])
            (reg:DI 0 ax [orig:340 _254 ] [340]))) "E2OUT.f":331 218 {*leadi}
     (nil))
(insn 1228 1505 1229 166 (set (reg:SI 0 ax [604])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":331 86 {*movsi_internal}
     (nil))
(insn 1229 1228 1230 166 (set (reg:DI 0 ax [orig:342 _256 ] [342])
        (sign_extend:DI (reg:SI 0 ax [604]))) "E2OUT.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1230 1229 1231 166 (parallel [
            (set (reg:DI 1 dx [orig:343 _257 ] [343])
                (plus:DI (reg:DI 1 dx [orig:341 _255 ] [341])
                    (reg:DI 0 ax [orig:342 _256 ] [342])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":331 222 {*adddi_1}
     (nil))
(insn 1231 1230 1232 166 (set (reg/f:DI 0 ax [605])
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":331 85 {*movdi_internal}
     (nil))
(insn 1232 1231 1233 166 (set (reg:SF 21 xmm0 [orig:344 _258 ] [344])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:338 _252 ] [338])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [605])) [6 hful S4 A32])) "E2OUT.f":331 131 {*movsf_internal}
     (nil))
(insn 1233 1232 1234 166 (set (reg/f:DI 0 ax [606])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":331 85 {*movdi_internal}
     (nil))
(insn 1234 1233 1235 166 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:343 _257 ] [343])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [606])) [6 *grid1_379(D) S4 A32])
        (reg:SF 21 xmm0 [orig:344 _258 ] [344])) "E2OUT.f":331 131 {*movsf_internal}
     (nil))
(insn 1235 1234 1236 166 (set (reg:SI 0 ax [607])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":332 86 {*movsi_internal}
     (nil))
(insn 1236 1235 1237 166 (set (reg:DI 0 ax [orig:345 _259 ] [345])
        (sign_extend:DI (reg:SI 0 ax [607]))) "E2OUT.f":332 149 {*extendsidi2_rex64}
     (nil))
(insn 1237 1236 1238 166 (parallel [
            (set (reg:DI 1 dx [orig:346 _260 ] [346])
                (mult:DI (reg:DI 0 ax [orig:345 _259 ] [345])
                    (const_int 4000 [0xfa0])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":332 349 {*muldi3_1}
     (nil))
(insn 1238 1237 1239 166 (set (reg:SI 0 ax [608])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":332 86 {*movsi_internal}
     (nil))
(insn 1239 1238 1240 166 (set (reg:DI 0 ax [orig:347 _261 ] [347])
        (sign_extend:DI (reg:SI 0 ax [608]))) "E2OUT.f":332 149 {*extendsidi2_rex64}
     (nil))
(insn 1240 1239 1506 166 (parallel [
            (set (reg:DI 0 ax [orig:348 _262 ] [348])
                (plus:DI (reg:DI 0 ax [orig:347 _261 ] [347])
                    (reg:DI 1 dx [orig:346 _260 ] [346])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":332 222 {*adddi_1}
     (nil))
(insn 1506 1240 1242 166 (set (reg:DI 1 dx [orig:349 _263 ] [349])
        (plus:DI (reg:DI 0 ax [orig:348 _262 ] [348])
            (const_int -4001 [0xfffffffffffff05f]))) "E2OUT.f":332 218 {*leadi}
     (nil))
(insn 1242 1506 1243 166 (set (reg/f:DI 0 ax [609])
        (symbol_ref:DI ("bitmap_") [flags 0x202]  <var_decl 0x7f831696bab0 bitmap>)) "E2OUT.f":332 85 {*movdi_internal}
     (nil))
(insn 1243 1242 1244 166 (set (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:349 _263 ] [349])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [609])) [1 bitmap.ibmap S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":332 86 {*movsi_internal}
     (nil))
(insn 1244 1243 1425 166 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":330 221 {*addsi_1}
     (nil))
(jump_insn 1425 1244 1426 166 (set (pc)
        (label_ref 1245)) "E2OUT.f":330 683 {jump}
     (nil)
 -> 1245)
;;  succ:       165 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

(barrier 1426 1425 1481)
;; basic block 167, loop depth 0, maybe hot
;;  prev block 166, next block 169, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       165
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1481 1426 1480 167 87 (nil) [1 uses])
(note 1480 1481 1482 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 1482 1480 1250 167 (const_int 0 [0]) "E2OUT.f":332 718 {nop}
     (nil))
(insn 1250 1482 1427 167 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":329 221 {*addsi_1}
     (nil))
(jump_insn 1427 1250 1428 167 (set (pc)
        (label_ref 1251)) "E2OUT.f":329 683 {jump}
     (nil)
 -> 1251)
;;  succ:       163 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

(barrier 1428 1427 1447)
;; basic block 169, loop depth 0, maybe hot
;;  prev block 167, next block 170, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       88
;;              89 [always] 
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1447 1428 1446 169 77 (nil) [2 uses])
(note 1446 1447 1448 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 1448 1446 1455 169 (const_int 0 [0]) "E2OUT.f":249 718 {nop}
     (nil))
(jump_insn 1455 1448 1456 169 (set (pc)
        (label_ref 1254)) 683 {jump}
     (nil)
 -> 1254)
;;  succ:       172 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1456 1455 1458)
;; basic block 170, loop depth 0, maybe hot
;;  prev block 169, next block 171, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       107
;;              112
;; bb 170 artificial_defs: { }
;; bb 170 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1458 1456 1457 170 80 (nil) [2 uses])
(note 1457 1458 1459 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 1459 1457 1475 170 (const_int 0 [0]) "E2OUT.f":272 718 {nop}
     (nil))
(jump_insn 1475 1459 1476 170 (set (pc)
        (label_ref 1254)) 683 {jump}
     (nil)
 -> 1254)
;;  succ:       172 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1476 1475 1478)
;; basic block 171, loop depth 0, maybe hot
;;  prev block 170, next block 172, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       163
;; bb 171 artificial_defs: { }
;; bb 171 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1478 1476 1477 171 86 (nil) [1 uses])
(note 1477 1478 1479 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 1479 1477 1254 171 (const_int 0 [0]) "E2OUT.f":330 718 {nop}
     (nil))
;;  succ:       172 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 172, loop depth 0, maybe hot
;;  prev block 171, next block 173, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       169 [always] 
;;              161 [always] 
;;              150 [always] 
;;              171 [always]  (FALLTHRU)
;;              170 [always] 
;; bb 172 artificial_defs: { }
;; bb 172 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1254 1479 1255 172 50 (nil) [4 uses])
(note 1255 1254 1256 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 1256 1255 1258 172 (set (reg/f:DI 0 ax [610])
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":341 85 {*movdi_internal}
     (nil))
(insn 1258 1256 1260 172 (set (reg:DI 1 dx [612])
        (const_int 236052 [0x39a14])) "E2OUT.f":341 85 {*movdi_internal}
     (nil))
(insn 1260 1258 1261 172 (set (reg:SI 4 si)
        (const_int 0 [0])) "E2OUT.f":341 86 {*movsi_internal}
     (nil))
(insn 1261 1260 1262 172 (set (reg:DI 5 di)
        (reg:DI 0 ax [611])) "E2OUT.f":341 85 {*movdi_internal}
     (nil))
(call_insn 1262 1261 1265 172 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f830f7a5900 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "E2OUT.f":341 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1265 1262 1267 172 (set (reg/f:DI 0 ax [615])
        (symbol_ref:DI ("uful.4078") [flags 0x202]  <var_decl 0x7f830f917870 uful>)) "E2OUT.f":342 85 {*movdi_internal}
     (nil))
(insn 1267 1265 1269 172 (set (reg:DI 1 dx [617])
        (const_int 236052 [0x39a14])) "E2OUT.f":342 85 {*movdi_internal}
     (nil))
(insn 1269 1267 1270 172 (set (reg:SI 4 si)
        (const_int 0 [0])) "E2OUT.f":342 86 {*movsi_internal}
     (nil))
(insn 1270 1269 1271 172 (set (reg:DI 5 di)
        (reg:DI 0 ax [616])) "E2OUT.f":342 85 {*movdi_internal}
     (nil))
(call_insn 1271 1270 1274 172 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f830f7a5900 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "E2OUT.f":342 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1274 1271 1276 172 (set (reg/f:DI 0 ax [620])
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":343 85 {*movdi_internal}
     (nil))
(insn 1276 1274 1278 172 (set (reg:DI 1 dx [622])
        (const_int 236052 [0x39a14])) "E2OUT.f":343 85 {*movdi_internal}
     (nil))
(insn 1278 1276 1279 172 (set (reg:SI 4 si)
        (const_int 0 [0])) "E2OUT.f":343 86 {*movsi_internal}
     (nil))
(insn 1279 1278 1280 172 (set (reg:DI 5 di)
        (reg:DI 0 ax [621])) "E2OUT.f":343 85 {*movdi_internal}
     (nil))
(call_insn 1280 1279 1435 172 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f830f7a5900 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "E2OUT.f":343 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 1435 1280 1436 172 (set (pc)
        (label_ref 1283)) 683 {jump}
     (nil)
 -> 1283)
;;  succ:       174
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1436 1435 1438)
;; basic block 173, loop depth 0, maybe hot
;;  prev block 172, next block 174, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       32
;;              41 [always] 
;; bb 173 artificial_defs: { }
;; bb 173 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1438 1436 1437 173 74 (nil) [2 uses])
(note 1437 1438 1439 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 1439 1437 1283 173 (const_int 0 [0]) "E2OUT.f":161 718 {nop}
     (nil))
;;  succ:       174 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 174, loop depth 0, maybe hot
;;  prev block 173, next block 175, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       173 [always]  (FALLTHRU)
;;              172
;; bb 174 artificial_defs: { }
;; bb 174 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1283 1439 1284 174 22 (nil) [1 uses])
(note 1284 1283 1285 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(insn 1285 1284 1286 174 (set (reg/f:DI 0 ax [625])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":349 85 {*movdi_internal}
     (nil))
(insn 1286 1285 1287 174 (set (reg:SI 0 ax [orig:350 _264 ] [350])
        (mem:SI (reg/f:DI 0 ax [625]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":349 86 {*movsi_internal}
     (nil))
(insn 1287 1286 1288 174 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:350 _264 ] [350])
            (const_int 0 [0]))) "E2OUT.f":349 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1288 1287 1289 174 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1323)
            (pc))) "E2OUT.f":349 682 {*jcc}
     (nil)
 -> 1323)
;;  succ:       175 (FALLTHRU)
;;              178
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 175, loop depth 0, maybe hot
;;  prev block 174, next block 176, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       174 (FALLTHRU)
;; bb 175 artificial_defs: { }
;; bb 175 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1289 1288 1290 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn 1290 1289 1291 175 (set (reg/f:DI 0 ax [626])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":350 85 {*movdi_internal}
     (nil))
(insn 1291 1290 1292 175 (set (reg:SI 0 ax [orig:351 _265 ] [351])
        (mem:SI (reg/f:DI 0 ax [626]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":350 86 {*movsi_internal}
     (nil))
(insn 1292 1291 1293 175 (set (reg:DI 0 ax [orig:352 _266 ] [352])
        (sign_extend:DI (reg:SI 0 ax [orig:351 _265 ] [351]))) "E2OUT.f":350 149 {*extendsidi2_rex64}
     (nil))
(insn 1293 1292 1294 175 (parallel [
            (set (reg:DI 0 ax [orig:353 _267 ] [353])
                (plus:DI (reg:DI 0 ax [orig:352 _266 ] [352])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":350 222 {*adddi_1}
     (nil))
(insn 1294 1293 1295 175 (parallel [
            (set (reg:DI 0 ax [627])
                (plus:DI (reg:DI 0 ax [orig:353 _267 ] [353])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":350 222 {*adddi_1}
     (nil))
(insn 1295 1294 1296 175 (set (reg:SI 0 ax [orig:354 _268 ] [354])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [627])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":350 86 {*movsi_internal}
     (nil))
(insn 1296 1295 1297 175 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:354 _268 ] [354])
            (const_int 0 [0]))) "E2OUT.f":350 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1297 1296 1298 175 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1323)
            (pc))) "E2OUT.f":350 682 {*jcc}
     (nil)
 -> 1323)
;;  succ:       176 (FALLTHRU)
;;              178
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 176, loop depth 0, maybe hot
;;  prev block 175, next block 177, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       175 (FALLTHRU)
;; bb 176 artificial_defs: { }
;; bb 176 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1298 1297 1299 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 1299 1298 1300 176 (set (reg/f:DI 0 ax [628])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":351 85 {*movdi_internal}
     (nil))
(insn 1300 1299 1301 176 (set (reg:SI 0 ax [orig:355 _269 ] [355])
        (mem:SI (reg/f:DI 0 ax [628]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":351 86 {*movsi_internal}
     (nil))
(insn 1301 1300 1302 176 (set (reg:DI 0 ax [orig:356 _270 ] [356])
        (sign_extend:DI (reg:SI 0 ax [orig:355 _269 ] [355]))) "E2OUT.f":351 149 {*extendsidi2_rex64}
     (nil))
(insn 1302 1301 1303 176 (parallel [
            (set (reg:DI 0 ax [orig:357 _271 ] [357])
                (plus:DI (reg:DI 0 ax [orig:356 _270 ] [356])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":351 222 {*adddi_1}
     (nil))
(insn 1303 1302 1304 176 (parallel [
            (set (reg:DI 0 ax [629])
                (plus:DI (reg:DI 0 ax [orig:357 _271 ] [357])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":351 222 {*adddi_1}
     (nil))
(insn 1304 1303 1305 176 (set (reg:SI 0 ax [orig:358 _272 ] [358])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [629])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":351 86 {*movsi_internal}
     (nil))
(insn 1305 1304 1306 176 (set (reg:DI 0 ax [orig:359 _273 ] [359])
        (sign_extend:DI (reg:SI 0 ax [orig:358 _272 ] [358]))) "E2OUT.f":351 149 {*extendsidi2_rex64}
     (nil))
(insn 1306 1305 1307 176 (parallel [
            (set (reg:DI 0 ax [orig:360 _274 ] [360])
                (plus:DI (reg:DI 0 ax [orig:359 _273 ] [359])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":351 222 {*adddi_1}
     (nil))
(insn 1307 1306 1308 176 (parallel [
            (set (reg:DI 0 ax [630])
                (plus:DI (reg:DI 0 ax [orig:360 _274 ] [360])
                    (const_int 1204 [0x4b4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":351 222 {*adddi_1}
     (nil))
(insn 1308 1307 1309 176 (set (reg:SI 0 ax [orig:361 _275 ] [361])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [630])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismout S4 A32])) "E2OUT.f":351 86 {*movsi_internal}
     (nil))
(insn 1309 1308 1310 176 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:361 _275 ] [361])) "E2OUT.f":351 86 {*movsi_internal}
     (nil))
(insn 1310 1309 1311 176 (set (reg:SI 0 ax [orig:362 ismth.29_276 ] [362])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":352 86 {*movsi_internal}
     (nil))
(insn 1311 1310 1312 176 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:362 ismth.29_276 ] [362])
            (const_int 0 [0]))) "E2OUT.f":352 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1312 1311 1313 176 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1323)
            (pc))) "E2OUT.f":352 682 {*jcc}
     (nil)
 -> 1323)
;;  succ:       177 (FALLTHRU)
;;              178
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 177, loop depth 0, maybe hot
;;  prev block 176, next block 178, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       176 (FALLTHRU)
;; bb 177 artificial_defs: { }
;; bb 177 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1313 1312 1503 177 [bb 177] NOTE_INSN_BASIC_BLOCK)
(insn 1503 1313 1315 177 (set (reg:DI 2 cx [631])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":352 218 {*leadi}
     (nil))
(insn 1315 1503 1316 177 (set (reg:DI 1 dx [632])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":352 85 {*movdi_internal}
     (nil))
(insn 1316 1315 1319 177 (set (reg:DI 0 ax [633])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":352 85 {*movdi_internal}
     (nil))
(insn 1319 1316 1320 177 (set (reg:DI 4 si)
        (reg:DI 0 ax [633])) "E2OUT.f":352 85 {*movdi_internal}
     (nil))
(insn 1320 1319 1321 177 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":352 85 {*movdi_internal}
     (nil))
(insn 1321 1320 1322 177 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":352 88 {*movqi_internal}
     (nil))
(call_insn 1322 1321 1323 177 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":352 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       178 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 178, loop depth 0, maybe hot
;;  prev block 177, next block 179, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       174
;;              177 (FALLTHRU)
;;              175
;;              176
;; bb 178 artificial_defs: { }
;; bb 178 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1323 1322 1324 178 70 (nil) [3 uses])
(note 1324 1323 1325 178 [bb 178] NOTE_INSN_BASIC_BLOCK)
(insn 1325 1324 1326 178 (set (reg/f:DI 0 ax [634])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":356 85 {*movdi_internal}
     (nil))
(insn 1326 1325 1327 178 (set (reg:SI 0 ax [orig:363 _277 ] [363])
        (mem:SI (reg/f:DI 0 ax [634]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":356 86 {*movsi_internal}
     (nil))
(insn 1327 1326 1328 178 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:363 _277 ] [363])
            (const_int 0 [0]))) "E2OUT.f":356 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1328 1327 1329 178 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1363)
            (pc))) "E2OUT.f":356 682 {*jcc}
     (nil)
 -> 1363)
;;  succ:       179 (FALLTHRU)
;;              182
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 179, loop depth 0, maybe hot
;;  prev block 178, next block 180, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       178 (FALLTHRU)
;; bb 179 artificial_defs: { }
;; bb 179 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1329 1328 1330 179 [bb 179] NOTE_INSN_BASIC_BLOCK)
(insn 1330 1329 1331 179 (set (reg/f:DI 0 ax [635])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":357 85 {*movdi_internal}
     (nil))
(insn 1331 1330 1332 179 (set (reg:SI 0 ax [orig:364 _278 ] [364])
        (mem:SI (reg/f:DI 0 ax [635]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":357 86 {*movsi_internal}
     (nil))
(insn 1332 1331 1333 179 (set (reg:DI 0 ax [orig:365 _279 ] [365])
        (sign_extend:DI (reg:SI 0 ax [orig:364 _278 ] [364]))) "E2OUT.f":357 149 {*extendsidi2_rex64}
     (nil))
(insn 1333 1332 1334 179 (parallel [
            (set (reg:DI 0 ax [orig:366 _280 ] [366])
                (plus:DI (reg:DI 0 ax [orig:365 _279 ] [365])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":357 222 {*adddi_1}
     (nil))
(insn 1334 1333 1335 179 (parallel [
            (set (reg:DI 0 ax [636])
                (plus:DI (reg:DI 0 ax [orig:366 _280 ] [366])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":357 222 {*adddi_1}
     (nil))
(insn 1335 1334 1336 179 (set (reg:SI 0 ax [orig:367 _281 ] [367])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [636])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":357 86 {*movsi_internal}
     (nil))
(insn 1336 1335 1337 179 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:367 _281 ] [367])
            (const_int 0 [0]))) "E2OUT.f":357 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1337 1336 1338 179 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1363)
            (pc))) "E2OUT.f":357 682 {*jcc}
     (nil)
 -> 1363)
;;  succ:       180 (FALLTHRU)
;;              182
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 180, loop depth 0, maybe hot
;;  prev block 179, next block 181, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       179 (FALLTHRU)
;; bb 180 artificial_defs: { }
;; bb 180 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1338 1337 1339 180 [bb 180] NOTE_INSN_BASIC_BLOCK)
(insn 1339 1338 1340 180 (set (reg/f:DI 0 ax [637])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":358 85 {*movdi_internal}
     (nil))
(insn 1340 1339 1341 180 (set (reg:SI 0 ax [orig:368 _282 ] [368])
        (mem:SI (reg/f:DI 0 ax [637]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":358 86 {*movsi_internal}
     (nil))
(insn 1341 1340 1342 180 (set (reg:DI 0 ax [orig:369 _283 ] [369])
        (sign_extend:DI (reg:SI 0 ax [orig:368 _282 ] [368]))) "E2OUT.f":358 149 {*extendsidi2_rex64}
     (nil))
(insn 1342 1341 1343 180 (parallel [
            (set (reg:DI 0 ax [orig:370 _284 ] [370])
                (plus:DI (reg:DI 0 ax [orig:369 _283 ] [369])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":358 222 {*adddi_1}
     (nil))
(insn 1343 1342 1344 180 (parallel [
            (set (reg:DI 0 ax [638])
                (plus:DI (reg:DI 0 ax [orig:370 _284 ] [370])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":358 222 {*adddi_1}
     (nil))
(insn 1344 1343 1345 180 (set (reg:SI 0 ax [orig:371 _285 ] [371])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [638])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":358 86 {*movsi_internal}
     (nil))
(insn 1345 1344 1346 180 (set (reg:DI 0 ax [orig:372 _286 ] [372])
        (sign_extend:DI (reg:SI 0 ax [orig:371 _285 ] [371]))) "E2OUT.f":358 149 {*extendsidi2_rex64}
     (nil))
(insn 1346 1345 1347 180 (parallel [
            (set (reg:DI 0 ax [orig:373 _287 ] [373])
                (plus:DI (reg:DI 0 ax [orig:372 _286 ] [372])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":358 222 {*adddi_1}
     (nil))
(insn 1347 1346 1348 180 (parallel [
            (set (reg:DI 0 ax [639])
                (plus:DI (reg:DI 0 ax [orig:373 _287 ] [373])
                    (const_int 1204 [0x4b4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":358 222 {*adddi_1}
     (nil))
(insn 1348 1347 1349 180 (set (reg:SI 0 ax [orig:374 _288 ] [374])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [639])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismout S4 A32])) "E2OUT.f":358 86 {*movsi_internal}
     (nil))
(insn 1349 1348 1350 180 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:374 _288 ] [374])) "E2OUT.f":358 86 {*movsi_internal}
     (nil))
(insn 1350 1349 1351 180 (set (reg:SI 0 ax [orig:375 ismth.30_289 ] [375])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":359 86 {*movsi_internal}
     (nil))
(insn 1351 1350 1352 180 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:375 ismth.30_289 ] [375])
            (const_int 0 [0]))) "E2OUT.f":359 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1352 1351 1353 180 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1363)
            (pc))) "E2OUT.f":359 682 {*jcc}
     (nil)
 -> 1363)
;;  succ:       181 (FALLTHRU)
;;              182
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 181, loop depth 0, maybe hot
;;  prev block 180, next block 182, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       180 (FALLTHRU)
;; bb 181 artificial_defs: { }
;; bb 181 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1353 1352 1502 181 [bb 181] NOTE_INSN_BASIC_BLOCK)
(insn 1502 1353 1355 181 (set (reg:DI 2 cx [640])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":359 218 {*leadi}
     (nil))
(insn 1355 1502 1356 181 (set (reg:DI 1 dx [641])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])) "E2OUT.f":359 85 {*movdi_internal}
     (nil))
(insn 1356 1355 1359 181 (set (reg:DI 0 ax [642])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":359 85 {*movdi_internal}
     (nil))
(insn 1359 1356 1360 181 (set (reg:DI 4 si)
        (reg:DI 0 ax [642])) "E2OUT.f":359 85 {*movdi_internal}
     (nil))
(insn 1360 1359 1361 181 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":359 85 {*movdi_internal}
     (nil))
(insn 1361 1360 1362 181 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":359 88 {*movqi_internal}
     (nil))
(call_insn 1362 1361 1363 181 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":359 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       182 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 182, loop depth 0, maybe hot
;;  prev block 181, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              181 (FALLTHRU)
;;              178
;;              180
;;              179
;; bb 182 artificial_defs: { }
;; bb 182 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1363 1362 1364 182 2 (nil) [4 uses])
(note 1364 1363 1365 182 [bb 182] NOTE_INSN_BASIC_BLOCK)
(insn 1365 1364 1366 182 (set (reg:DI 0 ax [643])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":385 85 {*movdi_internal}
     (nil))
(insn 1366 1365 1367 182 (set (reg:DI 5 di)
        (reg:DI 0 ax [643])) "E2OUT.f":385 85 {*movdi_internal}
     (nil))
(insn 1367 1366 1368 182 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":385 88 {*movqi_internal}
     (nil))
(call_insn 1368 1367 1369 182 (call (mem:QI (symbol_ref:DI ("dist_") [flags 0x41]  <function_decl 0x7f830f927400 dist>) [0 dist S1 A8])
        (const_int 0 [0])) "E2OUT.f":385 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 1369 1368 1370 182 (set (reg:DI 0 ax [644])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":386 85 {*movdi_internal}
     (nil))
(insn 1370 1369 1371 182 (set (reg:DI 5 di)
        (reg:DI 0 ax [644])) "E2OUT.f":386 85 {*movdi_internal}
     (nil))
(insn 1371 1370 1372 182 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":386 88 {*movqi_internal}
     (nil))
(call_insn 1372 1371 1378 182 (call (mem:QI (symbol_ref:DI ("dist_") [flags 0x41]  <function_decl 0x7f830f927400 dist>) [0 dist S1 A8])
        (const_int 0 [0])) "E2OUT.f":386 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 1378 1372 1546 182 (const_int 0 [0]) "E2OUT.f":391 718 {nop}
     (nil))
(note 1546 1378 1547 182 NOTE_INSN_EPILOGUE_BEG)
(insn 1547 1546 1548 182 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "E2OUT.f":392 -1
     (nil))
(insn 1548 1547 1549 182 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "E2OUT.f":392 -1
     (nil))
(insn 1549 1548 1550 182 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "E2OUT.f":392 -1
     (nil))
(insn 1550 1549 1551 182 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "E2OUT.f":392 -1
     (nil))
(insn 1551 1550 1552 182 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "E2OUT.f":392 -1
     (nil))
(insn/f 1552 1551 1553 182 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "E2OUT.f":392 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 1553 1552 1554 182 (simple_return) "E2OUT.f":392 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1554 1553 1483)
(note 1483 1554 0 NOTE_INSN_DELETED)
