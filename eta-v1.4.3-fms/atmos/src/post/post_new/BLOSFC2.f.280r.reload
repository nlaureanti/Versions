
;; Function blosfc2 (blosfc2_, funcdef_no=0, decl_uid=3768, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=112, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=80, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 6:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 8:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 16:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 24:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 28:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 34:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 35:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 36:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 37
	 Choosing alt 0 in insn 37:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 38:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 39:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 49:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 52:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 55:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 56
	 Choosing alt 0 in insn 56:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 57:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 60:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 62:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 63:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 67
	 Choosing alt 0 in insn 67:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 68:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 69:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 70:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 71:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 72:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 75:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 81:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 89:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 90:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 91:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 92:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 93
	 Choosing alt 0 in insn 93:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 95:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 97:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 103:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 108:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 113:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 121:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 130:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 131:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 133:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 134
	 Choosing alt 0 in insn 134:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 135:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 136:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 137:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 139:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 141:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 146:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 148:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 149:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 152:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 153
	 Choosing alt 0 in insn 153:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 154:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 156:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 157:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 159:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 160:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 163:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 164
	 Choosing alt 0 in insn 164:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 165:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 166:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 167:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 168:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 169:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 170:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 171:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 173:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 174:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 175:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 176:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 177:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 180:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 181
	 Choosing alt 0 in insn 181:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 182:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 184:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 185:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 187:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 188:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 191:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 192
	 Choosing alt 0 in insn 192:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 193:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 194:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 195:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 196:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 197:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 198:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 199:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 202:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 208:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 216:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 217:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 218:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 219:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 220:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 221
	 Choosing alt 0 in insn 221:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 223:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 224:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 227:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 228:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 229:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 230:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 231:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 232
	 Choosing alt 0 in insn 232:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 234:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 236:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 244:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 248:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 252:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 255:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 260:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 261:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 262:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 264:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 265
	 Choosing alt 0 in insn 265:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 266:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 267:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 268:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 269:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 270:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 271
	 Choosing alt 1 in insn 271:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 273:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 274:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 275:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 276:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 277
	 Choosing alt 0 in insn 277:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 278:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 279:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 280:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 281:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 282:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 283:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 284:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 285:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 286:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 287:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 288
	 Choosing alt 0 in insn 288:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 289:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 290:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 291:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 292:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 294:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 295:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 296:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 297:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 298
	 Choosing alt 0 in insn 298:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 299:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 300:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 301:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 302:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 303:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 304:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 305:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 306:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 307:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 308
	 Choosing alt 0 in insn 308:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 309:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 310:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 311:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 312:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 313:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 314:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 315:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 316:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 317:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 318
	 Choosing alt 0 in insn 318:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 319:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 320:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 321:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 322:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 324:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 325:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 326:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 327:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 328
	 Choosing alt 0 in insn 328:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 329:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 330:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 331:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 332:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 333:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 339:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 345:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 347:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 348:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 349:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 350:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 353:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 354:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 355:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 357:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 358:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 359:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 360:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 363:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 365:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 366:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 367:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 368:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 371:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 372:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 373:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 374:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 375:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 376:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 377:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 378:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 379:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 380
	 Choosing alt 0 in insn 380:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 381:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 382:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 383:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 384:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 385:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 386:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 387:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 388:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 389:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 390:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 391:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 392:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 393:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 394
	 Choosing alt 0 in insn 394:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 395:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 396:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 397:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 398
	 Choosing alt 1 in insn 398:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 400:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 401
	 Choosing alt 1 in insn 401:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 402:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 403:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 404:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 405:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 406:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 407:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 408
	 Choosing alt 0 in insn 408:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 409:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 410:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 411:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 412:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 413:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 414:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 415:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 416:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 417:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 418:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 419:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 420
	 Choosing alt 0 in insn 420:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 421:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 422:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 423:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 424:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 425
	 Choosing alt 1 in insn 425:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 426:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 427:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 428:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 429:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 430:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 431:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 432:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 433:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 434:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 435:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 436:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 437:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 438
	 Choosing alt 0 in insn 438:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 439:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 440:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 441:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 442:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 448:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 449:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 450:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 451:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 452:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 453:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 454:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 455:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 456:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 457
	 Choosing alt 0 in insn 457:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 458:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 459:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 460:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 461:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 462:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 463:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 469:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 470:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 475:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 476:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 477:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 478:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 479:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 480:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 481:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 482:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 483:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 484
	 Choosing alt 0 in insn 484:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 485:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 486:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 487:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 488:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 489:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 495:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 496:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 501:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 502:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 503:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 504:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 505:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 506
	 Choosing alt 0 in insn 506:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 507:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 508:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 509:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 510:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 511:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 513:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 514:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 520:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 521:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 526:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 527:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 530:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 531:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 532:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 533:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 534:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 535
	 Choosing alt 0 in insn 535:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 536:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 537:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 538:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 539:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 540:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 541:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 547:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 548:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 554:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 555:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 556:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 557:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 558:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 559:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 560:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 561:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 562:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 563:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 564
	 Choosing alt 0 in insn 564:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 565:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 566:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 567:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 568:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 569:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 570:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 571:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 572:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 573:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 574:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 575:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 576:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 577
	 Choosing alt 0 in insn 577:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 578:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 579:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 580:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 581:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 582:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 583:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 584:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 585:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 586:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 587:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 588
	 Choosing alt 0 in insn 588:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 589:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 590:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 591:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 592:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 593:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 594:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 595:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 596:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 597
	 Choosing alt 0 in insn 597:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 598:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 599:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 600:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 601:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 602:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 603:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 604:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 605:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 606:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 607
	 Choosing alt 0 in insn 607:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 608:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 609:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 610:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 611:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 612:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 613:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 614:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 615:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 616:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 617:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 618:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 619:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 620
	 Choosing alt 0 in insn 620:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 621:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 622:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 623:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 624:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 625:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 626:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 627:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 628:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 629:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 630:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 631
	 Choosing alt 0 in insn 631:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 632:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 633
	 Choosing alt 1 in insn 633:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 634:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 635:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 636:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 637:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 638:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 639:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 640:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 641
	 Choosing alt 0 in insn 641:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 642:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 643:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 644:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 645:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 646:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 647:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 648:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 649:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 650:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 651:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 652:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 653:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 654
	 Choosing alt 0 in insn 654:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 655:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 656:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 657:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 658:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 659:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 660:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 661:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 662:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 663:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 664:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 665
	 Choosing alt 0 in insn 665:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 666:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 667
	 Choosing alt 1 in insn 667:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 668:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 669:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 670:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 671:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 672:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 673:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 674:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 675
	 Choosing alt 0 in insn 675:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 676:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 677:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 678:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 679:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 680:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 681:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 682:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 683:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 684:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 685:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 686
	 Choosing alt 0 in insn 686:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 687:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 688
	 Choosing alt 1 in insn 688:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 689:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 690:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 693:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 699:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 705:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 711:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 712:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 713:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 715:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 716:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 717:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 718:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 721:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 723:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 724:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 725:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 726:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 729:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 730:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 731:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 732:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 733:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 734
	 Choosing alt 0 in insn 734:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 735:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 736:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 737:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 738:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 739:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 741:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 742:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 748:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 749:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 750:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 751:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 752:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 753
	 Choosing alt 0 in insn 753:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 754:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 755:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 756:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 757:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 758:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 759:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 760:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 761:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 762:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 763:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 764:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 765
	 Choosing alt 0 in insn 765:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 766:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 767:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 768:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 769:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 770:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 771:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 772:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 773:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 774
	 Choosing alt 0 in insn 774:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 775:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 776:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 777:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 778:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 779:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 780:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 781:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 782:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 783:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 784
	 Choosing alt 0 in insn 784:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 785:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 786:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 787:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 788:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 789:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 790:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 791:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 792:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 793
	 Choosing alt 0 in insn 793:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 794:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 795:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 796:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 797:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 798:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 799:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 800:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 801:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 802:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 803
	 Choosing alt 0 in insn 803:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 804:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 805:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 806:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 807:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 808:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 809:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 810:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 811:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 812
	 Choosing alt 0 in insn 812:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 813:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 814:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 815:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 816:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 817:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 818:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 819:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 820:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 821:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 822
	 Choosing alt 0 in insn 822:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 823:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 824:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 825:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 826:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 827:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 833:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 834:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 835:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 836:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 837:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 838
	 Choosing alt 0 in insn 838:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 839:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 840:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 841:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 842:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 847:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 848:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 849:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 850:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 851:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 852
	 Choosing alt 0 in insn 852:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 853:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 854:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 855:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 856:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 857:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 858:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 859:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 860:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 861:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 862:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 863:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 864:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 865:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 866:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 867
	 Choosing alt 0 in insn 867:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 868:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 869:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 870:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 871:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 872:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 873:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 874
	 Choosing alt 0 in insn 874:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 875:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 876:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 877:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 878:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 879:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 880:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 881:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 882:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 883:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 884:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 885:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 886:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 887:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 888:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 889:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 890
	 Choosing alt 0 in insn 890:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 891:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 892:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 893:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 894:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 895:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 896:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 897
	 Choosing alt 0 in insn 897:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 898:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 899:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 900:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 901:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 902:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 903:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 904:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 905:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 906:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 907:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 908:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 909
	 Choosing alt 0 in insn 909:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 910:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 911:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 912:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 913:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 914:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 915:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 916
	 Choosing alt 0 in insn 916:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 917:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 918:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 919:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 920:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 921:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 924:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 930:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 936:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 937:  (0) r  (1) i {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 938:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 939:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 940:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 941:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 942:  (0) r  (1) i {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 943:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 944:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 945:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 946:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 947:  (0) r  (1) i {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 948:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 949:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 950:  (0) rBwBz {*call}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 951:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 952:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 953:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 954:  (0) r  (1) Z {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 955:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 956:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 957:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 958:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 959:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 960:  (0) r  (1) Z {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 961:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 962:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 963:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 964:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 965:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 966:  (0) q  (1) n {*movqi_internal} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 967:  (0) rBwBz {*call} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 968:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-16)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 969:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 970:  (0) r  (1) i {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 971:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 972:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 973:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 974:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 976:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 977:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 978:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 979:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 982:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 983:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 984:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 986:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 987:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 988:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 989:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 992:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 994:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 995:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 996:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 997:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1000:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1001:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1002:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1003:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1004:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1005
	 Choosing alt 0 in insn 1005:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1006:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1007:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1008:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1009:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1010:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1011:  (0) =r  (1) g {*movsi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1012:  (0) r  (1) rm {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1015:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1016:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1017:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1018:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1019:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1020:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1021:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1022:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1023:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1024
	 Choosing alt 0 in insn 1024:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1025:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1026:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1027:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1028:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1029:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1030:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1031:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1032:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1033:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1034:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1035:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1036:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1037:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1038
	 Choosing alt 0 in insn 1038:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1039:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1040:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1041:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1042
	 Choosing alt 1 in insn 1042:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1044:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1045
	 Choosing alt 1 in insn 1045:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1046:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1047:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1048:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1049:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1050:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1051:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1052:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1053:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1054:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1055:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1056
	 Choosing alt 0 in insn 1056:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1057:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1058:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1059:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1060:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1061:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1062:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1063:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1064:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1065:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1066:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1067:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1068:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1069:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1070:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1071:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1072:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1073
	 Choosing alt 0 in insn 1073:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1074:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1077:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1080:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1081:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1082:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1083:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1084:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1085:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1086:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1092:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1093:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1094:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1095:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1098:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
	 Choosing alt 2 in insn 1099:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=934 from oldreg=879, assigning class SSE_REGS to r934
 1099: r934:SF=r934:SF/[frame:DI-0x34]
      REG_DEAD r879:SF
    Inserting insn reload before:
 1447: r934:SF=r879:SF
    Inserting insn reload after:
 1448: r498:SF=r934:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1448:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1100:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1101:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1102:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1104:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1105
	 Choosing alt 1 in insn 1105:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1106:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1107:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1108:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1110:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1112:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1114
	 Choosing alt 1 in insn 1114:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=935 from oldreg=498, assigning class SSE_REGS to r935
      Making reload reg 935 for reg 498 optional
 1114: r885:SF=r505:SF*r935:SF
      REG_DEAD r505:SF
      REG_DEAD r498:SF
    Inserting insn reload before:
 1449: r935:SF=r498:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1449:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1115:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1116:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1117:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1118:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1119:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1120:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1121:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1122:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1123:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1124
	 Choosing alt 0 in insn 1124:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1125:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1128:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1131:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1132:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1134:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1135:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1136:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1137:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1138:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1139
	 Choosing alt 1 in insn 1139:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1140:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1141:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1142
	 Choosing alt 1 in insn 1142:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1144
	 Choosing alt 1 in insn 1144:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1145:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1146:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1148:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1149:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1150:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1151:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1152:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1158:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1159:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1164:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1165:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1166:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1172:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1173:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1178:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1179:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1180:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1181:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1182:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1183
	 Choosing alt 0 in insn 1183:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1184:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1185:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1186:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1187:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1188:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1194:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1195:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1200:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1201:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1204:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1205:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1206:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1207:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1208:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1209:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1210:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1211
	 Choosing alt 0 in insn 1211:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1212:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1213:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1214:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1215:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1216:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1217:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1218:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1219:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1220:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1221:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1222:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1223:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1224
	 Choosing alt 0 in insn 1224:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1225:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1226:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1227:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1228:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1229:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1230:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1231:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1232:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1233:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1234:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1235:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1236:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1237:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1238:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1239:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1240
	 Choosing alt 0 in insn 1240:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1241:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1242:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1243:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1244:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1245:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1246:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1247:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1248:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1249:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1250:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1251
	 Choosing alt 0 in insn 1251:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1252:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1257:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1258:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1259:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1260:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1261:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1262:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1263:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1264:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1265:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1266
	 Choosing alt 0 in insn 1266:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1267:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1268:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1269:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1270:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1273:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1279:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1285:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1286:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1287:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1288:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1289:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1290:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1291:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1292
	 Choosing alt 0 in insn 1292:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1294:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1295:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1296:  (0) rm  (1) 0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 7 8 9
EBB 10
EBB 91
EBB 11
EBB 90
EBB 12
EBB 89
EBB 13
EBB 14 15
EBB 16 17
EBB 18 19 20
EBB 21
EBB 94
EBB 22
EBB 93
EBB 23
EBB 92
EBB 24
EBB 25 26
EBB 27 28
EBB 96
EBB 29
EBB 95
EBB 30
EBB 31 32
EBB 33 34
EBB 35 36 37 38
EBB 39 40
EBB 41 42 43
EBB 44
EBB 45 46 47
EBB 48
EBB 99
EBB 49
EBB 98
EBB 50
EBB 97
EBB 51
EBB 52 53
EBB 54 55 56
EBB 57 58
EBB 59
EBB 60
EBB 101
EBB 61
EBB 100
EBB 62
EBB 63 64
EBB 65 66
EBB 67 68 69 70
EBB 71 72
EBB 73 74
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=936 from oldreg=498, assigning class SSE_REGS to inheritance r936
    Original reg change 498->936 (bb73):
 1448: r936:SF=r934:SF
    Add original<-inheritance after:
 1450: r498:SF=r936:SF

    Inheritance reuse change 498->936 (bb73):
 1449: r935:SF=r936:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1450: r498:SF=r936:SF
deleting insn with uid = 1450.
EBB 75 76
EBB 77 78
EBB 79 80
EBB 81
EBB 82 83
EBB 84
EBB 85
EBB 104
EBB 86
EBB 103
EBB 87
EBB 102
EBB 88

********** Pseudo live ranges #1: **********

  BB 88
   Insn 1344: point = 0, n_alt = -1
  BB 102
   Insn 1439: point = 0, n_alt = -1
  BB 63
   Insn 980: point = 0, n_alt = -1
   Insn 979: point = 0, n_alt = 0
   Insn 978: point = 1, n_alt = 0
   Insn 977: point = 3, n_alt = 0
   Insn 976: point = 4, n_alt = 0
  BB 87
   Insn 1396: point = 4, n_alt = -1
   Insn 1296: point = 4, n_alt = 1
   Insn 1295: point = 4, n_alt = 0
   Insn 1294: point = 4, n_alt = 3
   Insn 1293: point = 4, n_alt = -2
   Insn 1292: point = 5, n_alt = 0
   Insn 1291: point = 7, n_alt = 4
   Insn 1290: point = 8, n_alt = 1
   Insn 1289: point = 10, n_alt = 0
   Insn 1288: point = 12, n_alt = 1
   Insn 1287: point = 14, n_alt = 0
   Insn 1286: point = 16, n_alt = 0
   Insn 1285: point = 18, n_alt = 0
  BB 103
   Insn 1442: point = 19, n_alt = -1
  BB 65
   Insn 990: point = 19, n_alt = -1
   Insn 989: point = 19, n_alt = 0
   Insn 988: point = 20, n_alt = 0
   Insn 987: point = 22, n_alt = 0
   Insn 986: point = 23, n_alt = 0
  BB 86
   Insn 1394: point = 24, n_alt = -1
   Insn 1279: point = 24, n_alt = 1
  BB 104
   Insn 1445: point = 25, n_alt = -1
  BB 67
   Insn 998: point = 26, n_alt = -1
   Insn 997: point = 26, n_alt = 0
   Insn 996: point = 27, n_alt = 0
   Insn 995: point = 29, n_alt = 0
   Insn 994: point = 30, n_alt = 0
  BB 85
   Insn 1392: point = 31, n_alt = -1
   Insn 1273: point = 31, n_alt = 1
  BB 84
   Insn 1270: point = 32, n_alt = 8
   Insn 1269: point = 33, n_alt = 0
   Insn 1268: point = 35, n_alt = 4
   Insn 1267: point = 36, n_alt = 3
   Insn 1266: point = 38, n_alt = 0
   Insn 1265: point = 40, n_alt = 0
   Insn 1264: point = 42, n_alt = 0
   Insn 1263: point = 43, n_alt = 0
   Insn 1262: point = 45, n_alt = 0
   Insn 1261: point = 47, n_alt = 0
   Insn 1260: point = 49, n_alt = 0
   Insn 1259: point = 50, n_alt = 1
   Insn 1258: point = 52, n_alt = 0
   Insn 1257: point = 54, n_alt = 0
  BB 83
   Insn 3: point = 56, n_alt = -2
  BB 82
   Insn 1253: point = 59, n_alt = -1
   Insn 1252: point = 59, n_alt = 0
   Insn 1251: point = 60, n_alt = 0
   Insn 1250: point = 62, n_alt = 0
   Insn 1249: point = 64, n_alt = 0
   Insn 1248: point = 65, n_alt = 1
   Insn 1247: point = 65, n_alt = 0
   Insn 1246: point = 67, n_alt = 0
   Insn 1245: point = 68, n_alt = 1
   Insn 1244: point = 68, n_alt = 7
   Insn 1243: point = 70, n_alt = 0
   Insn 1242: point = 72, n_alt = 4
   Insn 1241: point = 73, n_alt = 3
   Insn 1240: point = 75, n_alt = 0
   Insn 1239: point = 77, n_alt = 0
   Insn 1238: point = 79, n_alt = 0
   Insn 1237: point = 80, n_alt = 0
   Insn 1236: point = 82, n_alt = 0
   Insn 1235: point = 84, n_alt = 0
   Insn 1234: point = 86, n_alt = 0
   Insn 1233: point = 87, n_alt = 1
   Insn 1232: point = 89, n_alt = 0
   Insn 1231: point = 91, n_alt = 0
   Insn 1230: point = 92, n_alt = 7
   Insn 1229: point = 93, n_alt = 8
   Insn 1228: point = 94, n_alt = 0
   Insn 1227: point = 96, n_alt = 4
   Insn 1226: point = 97, n_alt = 1
   Insn 1225: point = 99, n_alt = 3
   Insn 1224: point = 101, n_alt = 0
   Insn 1223: point = 103, n_alt = 0
   Insn 1222: point = 105, n_alt = 0
   Insn 1221: point = 106, n_alt = 0
   Insn 1220: point = 108, n_alt = 0
   Insn 1219: point = 110, n_alt = 0
   Insn 1218: point = 112, n_alt = 0
   Insn 1217: point = 113, n_alt = 1
   Insn 1216: point = 115, n_alt = 0
   Insn 1215: point = 117, n_alt = 0
   Insn 1214: point = 118, n_alt = 7
   Insn 1213: point = 120, n_alt = 4
   Insn 1212: point = 121, n_alt = 3
   Insn 1211: point = 123, n_alt = 0
   Insn 1210: point = 125, n_alt = 0
   Insn 1209: point = 127, n_alt = 0
   Insn 1208: point = 128, n_alt = 0
   Insn 1207: point = 130, n_alt = 0
   Insn 1206: point = 132, n_alt = 0
   Insn 1205: point = 133, n_alt = 8
   Insn 1204: point = 134, n_alt = 7
  BB 80
   Insn 1390: point = 136, n_alt = -1
   Insn 1195: point = 136, n_alt = 8
   Insn 1194: point = 137, n_alt = 7
  BB 78
   Insn 1387: point = 139, n_alt = -1
   Insn 1173: point = 139, n_alt = 8
   Insn 1172: point = 140, n_alt = 7
  BB 76
   Insn 1384: point = 142, n_alt = -1
   Insn 1159: point = 142, n_alt = 8
   Insn 1158: point = 143, n_alt = 7
  BB 81
   Insn 1201: point = 145, n_alt = 8
   Insn 1200: point = 146, n_alt = 7
  BB 79
   Insn 1189: point = 148, n_alt = -1
   Insn 1188: point = 148, n_alt = 1
   Insn 1187: point = 149, n_alt = 7
   Insn 1186: point = 150, n_alt = 7
   Insn 1185: point = 152, n_alt = 4
   Insn 1184: point = 153, n_alt = 3
   Insn 1183: point = 155, n_alt = 0
   Insn 1182: point = 157, n_alt = 0
   Insn 1181: point = 159, n_alt = 0
   Insn 1180: point = 160, n_alt = 0
   Insn 1179: point = 162, n_alt = 0
   Insn 1178: point = 164, n_alt = 0
  BB 77
   Insn 1167: point = 166, n_alt = -1
   Insn 1166: point = 166, n_alt = 1
   Insn 1165: point = 167, n_alt = 7
   Insn 1164: point = 168, n_alt = 7
  BB 75
   Insn 1153: point = 170, n_alt = -1
   Insn 1152: point = 170, n_alt = 1
   Insn 1151: point = 171, n_alt = 7
   Insn 1150: point = 172, n_alt = 8
   Insn 1149: point = 173, n_alt = 1
   Insn 1148: point = 175, n_alt = 7
   Insn 1147: point = 176, n_alt = -2
   Insn 1146: point = 178, n_alt = 2
   Insn 1145: point = 180, n_alt = 7
   Insn 1144: point = 181, n_alt = 1
   Insn 1143: point = 183, n_alt = -2
   Insn 1142: point = 185, n_alt = 1
   Insn 1141: point = 187, n_alt = 7
   Insn 1140: point = 188, n_alt = 7
   Insn 1139: point = 189, n_alt = 1
   Insn 1138: point = 191, n_alt = 7
   Insn 1137: point = 192, n_alt = 7
   Insn 1136: point = 193, n_alt = 8
   Insn 1135: point = 194, n_alt = 1
   Insn 1134: point = 196, n_alt = 7
   Insn 1133: point = 197, n_alt = -2
   Insn 1132: point = 199, n_alt = 1
   Insn 1131: point = 201, n_alt = 1
  BB 74
   Insn 1128: point = 204, n_alt = 7
  BB 73
   Insn 1126: point = 206, n_alt = -1
   Insn 1125: point = 206, n_alt = 0
   Insn 1124: point = 207, n_alt = 0
   Insn 1123: point = 209, n_alt = 0
   Insn 1122: point = 211, n_alt = 0
   Insn 1121: point = 212, n_alt = 1
   Insn 1120: point = 212, n_alt = 0
   Insn 1119: point = 214, n_alt = 0
   Insn 1118: point = 215, n_alt = 1
   Insn 1117: point = 216, n_alt = 7
   Insn 1116: point = 217, n_alt = 7
   Insn 1115: point = 218, n_alt = 8
   Insn 1114: point = 219, n_alt = 1
   Insn 1449: point = 221, n_alt = 7
	   Creating copy r935<-r936@1000
   Insn 1113: point = 223, n_alt = -2
   Insn 1112: point = 224, n_alt = 0
   Insn 1111: point = 224, n_alt = -2
   Insn 1110: point = 225, n_alt = 2
   Insn 1109: point = 227, n_alt = -2
   Insn 1108: point = 229, n_alt = 2
   Insn 1107: point = 231, n_alt = 7
   Insn 1106: point = 232, n_alt = 7
   Insn 1105: point = 233, n_alt = 1
   Insn 1104: point = 235, n_alt = 7
   Insn 1103: point = 236, n_alt = -2
   Insn 1102: point = 238, n_alt = 2
   Insn 1101: point = 240, n_alt = 7
   Insn 1100: point = 241, n_alt = 7
   Insn 1448: point = 242, n_alt = 8
	   Creating copy r934->r936@1000
   Insn 1099: point = 244, n_alt = 2
   Insn 1447: point = 244, n_alt = -2
	Hard reg 21 is preferable by r934 with profit 1000
   Insn 1098: point = 246, n_alt = 7
  BB 72
   Insn 1095: point = 248, n_alt = 8
   Insn 1094: point = 249, n_alt = 7
   Insn 1093: point = 250, n_alt = 8
   Insn 1092: point = 251, n_alt = 7
  BB 71
   Insn 1087: point = 253, n_alt = -1
   Insn 1086: point = 253, n_alt = 1
   Insn 1085: point = 254, n_alt = 7
   Insn 1084: point = 255, n_alt = 8
   Insn 1083: point = 256, n_alt = 7
   Insn 1082: point = 257, n_alt = 8
   Insn 1081: point = 258, n_alt = 7
   Insn 1080: point = 259, n_alt = 8
  BB 70
   Insn 1077: point = 261, n_alt = 7
  BB 69
   Insn 1075: point = 263, n_alt = -1
   Insn 1074: point = 263, n_alt = 0
   Insn 1073: point = 264, n_alt = 0
   Insn 1072: point = 266, n_alt = 0
   Insn 1071: point = 268, n_alt = 0
   Insn 1070: point = 269, n_alt = 1
   Insn 1069: point = 269, n_alt = 0
   Insn 1068: point = 271, n_alt = 0
   Insn 1067: point = 272, n_alt = 1
   Insn 1066: point = 272, n_alt = 7
   Insn 1065: point = 273, n_alt = 8
   Insn 1064: point = 274, n_alt = 2
   Insn 1063: point = 276, n_alt = 7
   Insn 1062: point = 277, n_alt = 7
   Insn 1061: point = 278, n_alt = 8
   Insn 1060: point = 279, n_alt = 7
   Insn 1059: point = 281, n_alt = 0
   Insn 1058: point = 283, n_alt = 4
   Insn 1057: point = 284, n_alt = 3
   Insn 1056: point = 286, n_alt = 0
   Insn 1055: point = 288, n_alt = 0
   Insn 1054: point = 290, n_alt = 0
   Insn 1053: point = 291, n_alt = 0
   Insn 1052: point = 293, n_alt = 0
   Insn 1051: point = 295, n_alt = 0
   Insn 1050: point = 297, n_alt = 0
   Insn 1049: point = 298, n_alt = 1
   Insn 1048: point = 300, n_alt = 0
   Insn 1047: point = 302, n_alt = 0
   Insn 1046: point = 303, n_alt = 8
   Insn 1045: point = 304, n_alt = 1
   Insn 1044: point = 306, n_alt = 7
   Insn 1043: point = 307, n_alt = -2
   Insn 1042: point = 309, n_alt = 1
   Insn 1041: point = 311, n_alt = 7
   Insn 1040: point = 313, n_alt = 4
   Insn 1039: point = 314, n_alt = 3
   Insn 1038: point = 316, n_alt = 0
   Insn 1037: point = 318, n_alt = 0
   Insn 1036: point = 320, n_alt = 0
   Insn 1035: point = 321, n_alt = 0
   Insn 1034: point = 323, n_alt = 0
   Insn 1033: point = 325, n_alt = 0
   Insn 1032: point = 327, n_alt = 0
   Insn 1031: point = 328, n_alt = 1
   Insn 1030: point = 330, n_alt = 0
   Insn 1029: point = 332, n_alt = 0
   Insn 1028: point = 334, n_alt = 0
   Insn 1027: point = 335, n_alt = 7
   Insn 1026: point = 337, n_alt = 4
   Insn 1025: point = 338, n_alt = 3
   Insn 1024: point = 340, n_alt = 0
   Insn 1023: point = 342, n_alt = 0
   Insn 1022: point = 344, n_alt = 0
   Insn 1021: point = 345, n_alt = 0
   Insn 1020: point = 347, n_alt = 0
   Insn 1019: point = 349, n_alt = 0
   Insn 1018: point = 351, n_alt = 0
   Insn 1017: point = 352, n_alt = 1
   Insn 1016: point = 354, n_alt = 0
   Insn 1015: point = 356, n_alt = 0
  BB 68
   Insn 1013: point = 358, n_alt = -1
   Insn 1012: point = 358, n_alt = 1
   Insn 1011: point = 359, n_alt = 0
   Insn 1010: point = 360, n_alt = 1
   Insn 1009: point = 361, n_alt = 0
   Insn 1008: point = 363, n_alt = 0
   Insn 1007: point = 365, n_alt = 4
   Insn 1006: point = 366, n_alt = 3
   Insn 1005: point = 368, n_alt = 0
   Insn 1004: point = 370, n_alt = 0
   Insn 1003: point = 372, n_alt = 0
   Insn 1002: point = 373, n_alt = 0
   Insn 1001: point = 375, n_alt = 0
   Insn 1000: point = 377, n_alt = 0
  BB 66
   Insn 992: point = 379, n_alt = 1
  BB 64
   Insn 984: point = 380, n_alt = 1
   Insn 983: point = 381, n_alt = 0
   Insn 982: point = 382, n_alt = 0
  BB 62
   Insn 974: point = 383, n_alt = 1
   Insn 973: point = 383, n_alt = 0
   Insn 972: point = 383, n_alt = 3
   Insn 971: point = 383, n_alt = 2
   Insn 970: point = 383, n_alt = 4
   Insn 969: point = 383, n_alt = 4
   Insn 968: point = 383, n_alt = 0
   Insn 967: point = 383, n_alt = 0
   Insn 966: point = 383, n_alt = 3
   Insn 965: point = 383, n_alt = 4
   Insn 964: point = 383, n_alt = 4
   Insn 963: point = 383, n_alt = 4
   Insn 962: point = 383, n_alt = 4
   Insn 961: point = 383, n_alt = 4
   Insn 960: point = 383, n_alt = 2
   Insn 959: point = 383, n_alt = 0
   Insn 958: point = 383, n_alt = 0
   Insn 957: point = 383, n_alt = 0
   Insn 956: point = 383, n_alt = 3
   Insn 955: point = 383, n_alt = 4
   Insn 954: point = 383, n_alt = 2
   Insn 953: point = 383, n_alt = 2
   Insn 952: point = 383, n_alt = 2
   Insn 951: point = 383, n_alt = 2
   Insn 950: point = 383, n_alt = 0
   Insn 949: point = 383, n_alt = 3
   Insn 948: point = 383, n_alt = 2
   Insn 947: point = 383, n_alt = 4
   Insn 946: point = 383, n_alt = 4
   Insn 945: point = 383, n_alt = 0
   Insn 944: point = 383, n_alt = 3
   Insn 943: point = 383, n_alt = 2
   Insn 942: point = 383, n_alt = 4
   Insn 941: point = 383, n_alt = 4
   Insn 940: point = 383, n_alt = 0
   Insn 939: point = 383, n_alt = 3
   Insn 938: point = 383, n_alt = 2
   Insn 937: point = 383, n_alt = 4
   Insn 936: point = 383, n_alt = 4
  BB 100
   Insn 1433: point = 383, n_alt = -1
  BB 52
   Insn 719: point = 383, n_alt = -1
   Insn 718: point = 383, n_alt = 0
   Insn 717: point = 384, n_alt = 0
   Insn 716: point = 386, n_alt = 0
   Insn 715: point = 387, n_alt = 0
  BB 61
   Insn 1381: point = 388, n_alt = -1
   Insn 930: point = 388, n_alt = 1
  BB 101
   Insn 1436: point = 389, n_alt = -1
  BB 54
   Insn 727: point = 390, n_alt = -1
   Insn 726: point = 390, n_alt = 0
   Insn 725: point = 391, n_alt = 0
   Insn 724: point = 393, n_alt = 0
   Insn 723: point = 394, n_alt = 0
  BB 60
   Insn 1379: point = 395, n_alt = -1
   Insn 924: point = 395, n_alt = 1
  BB 58
   Insn 1377: point = 396, n_alt = -1
   Insn 842: point = 396, n_alt = 8
   Insn 841: point = 397, n_alt = 7
   Insn 840: point = 398, n_alt = 4
   Insn 839: point = 399, n_alt = 3
   Insn 838: point = 401, n_alt = 0
   Insn 837: point = 403, n_alt = 1
   Insn 836: point = 405, n_alt = 0
   Insn 835: point = 406, n_alt = 0
   Insn 834: point = 408, n_alt = 1
   Insn 833: point = 410, n_alt = 0
  BB 59
   Insn 921: point = 412, n_alt = 8
   Insn 920: point = 413, n_alt = 4
   Insn 919: point = 414, n_alt = 7
   Insn 918: point = 416, n_alt = 4
   Insn 917: point = 417, n_alt = 3
   Insn 916: point = 419, n_alt = 0
   Insn 915: point = 421, n_alt = 1
   Insn 914: point = 423, n_alt = 0
   Insn 913: point = 424, n_alt = 0
   Insn 912: point = 426, n_alt = 1
   Insn 911: point = 428, n_alt = 0
   Insn 910: point = 429, n_alt = 3
   Insn 909: point = 431, n_alt = 0
   Insn 908: point = 433, n_alt = 1
   Insn 907: point = 435, n_alt = 0
   Insn 906: point = 436, n_alt = 0
   Insn 905: point = 438, n_alt = 1
   Insn 904: point = 440, n_alt = 0
   Insn 903: point = 441, n_alt = 8
   Insn 902: point = 442, n_alt = 4
   Insn 901: point = 443, n_alt = 7
   Insn 900: point = 445, n_alt = 0
   Insn 899: point = 447, n_alt = 4
   Insn 898: point = 448, n_alt = 3
   Insn 897: point = 450, n_alt = 0
   Insn 896: point = 452, n_alt = 1
   Insn 895: point = 454, n_alt = 0
   Insn 894: point = 455, n_alt = 0
   Insn 893: point = 457, n_alt = 1
   Insn 892: point = 459, n_alt = 0
   Insn 891: point = 460, n_alt = 3
   Insn 890: point = 462, n_alt = 0
   Insn 889: point = 464, n_alt = 1
   Insn 888: point = 466, n_alt = 0
   Insn 887: point = 467, n_alt = 0
   Insn 886: point = 469, n_alt = 0
   Insn 885: point = 471, n_alt = 1
   Insn 884: point = 473, n_alt = 0
   Insn 883: point = 474, n_alt = 1
   Insn 882: point = 476, n_alt = 1
   Insn 881: point = 478, n_alt = 0
   Insn 880: point = 479, n_alt = 8
   Insn 879: point = 480, n_alt = 4
   Insn 878: point = 481, n_alt = 7
   Insn 877: point = 483, n_alt = 0
   Insn 876: point = 485, n_alt = 4
   Insn 875: point = 486, n_alt = 3
   Insn 874: point = 488, n_alt = 0
   Insn 873: point = 490, n_alt = 1
   Insn 872: point = 492, n_alt = 0
   Insn 871: point = 493, n_alt = 0
   Insn 870: point = 495, n_alt = 1
   Insn 869: point = 497, n_alt = 0
   Insn 868: point = 498, n_alt = 3
   Insn 867: point = 500, n_alt = 0
   Insn 866: point = 502, n_alt = 1
   Insn 865: point = 504, n_alt = 0
   Insn 864: point = 505, n_alt = 0
   Insn 863: point = 507, n_alt = 0
   Insn 862: point = 509, n_alt = 1
   Insn 861: point = 511, n_alt = 0
   Insn 860: point = 512, n_alt = 1
   Insn 859: point = 514, n_alt = 1
   Insn 858: point = 516, n_alt = 0
   Insn 857: point = 517, n_alt = 1
   Insn 856: point = 518, n_alt = 0
   Insn 855: point = 520, n_alt = 0
   Insn 854: point = 522, n_alt = 4
   Insn 853: point = 523, n_alt = 3
   Insn 852: point = 525, n_alt = 0
   Insn 851: point = 527, n_alt = 1
   Insn 850: point = 529, n_alt = 0
   Insn 849: point = 530, n_alt = 0
   Insn 848: point = 532, n_alt = 1
   Insn 847: point = 534, n_alt = 0
  BB 57
   Insn 828: point = 536, n_alt = -1
   Insn 827: point = 536, n_alt = 1
   Insn 826: point = 537, n_alt = 7
   Insn 825: point = 538, n_alt = 7
   Insn 824: point = 540, n_alt = 4
   Insn 823: point = 541, n_alt = 3
   Insn 822: point = 543, n_alt = 0
   Insn 821: point = 545, n_alt = 1
   Insn 820: point = 547, n_alt = 0
   Insn 819: point = 548, n_alt = 0
   Insn 818: point = 550, n_alt = 1
   Insn 817: point = 552, n_alt = 0
   Insn 816: point = 553, n_alt = 8
   Insn 815: point = 554, n_alt = 4
   Insn 814: point = 555, n_alt = 1
   Insn 813: point = 557, n_alt = 3
   Insn 812: point = 559, n_alt = 0
   Insn 811: point = 561, n_alt = 1
   Insn 810: point = 563, n_alt = 0
   Insn 809: point = 564, n_alt = 0
   Insn 808: point = 566, n_alt = 1
   Insn 807: point = 568, n_alt = 0
   Insn 806: point = 569, n_alt = 7
   Insn 805: point = 571, n_alt = 4
   Insn 804: point = 572, n_alt = 3
   Insn 803: point = 574, n_alt = 0
   Insn 802: point = 576, n_alt = 1
   Insn 801: point = 578, n_alt = 0
   Insn 800: point = 579, n_alt = 0
   Insn 799: point = 581, n_alt = 1
   Insn 798: point = 583, n_alt = 0
   Insn 797: point = 584, n_alt = 8
   Insn 796: point = 585, n_alt = 4
   Insn 795: point = 586, n_alt = 1
   Insn 794: point = 588, n_alt = 3
   Insn 793: point = 590, n_alt = 0
   Insn 792: point = 592, n_alt = 1
   Insn 791: point = 594, n_alt = 0
   Insn 790: point = 595, n_alt = 0
   Insn 789: point = 597, n_alt = 1
   Insn 788: point = 599, n_alt = 0
   Insn 787: point = 600, n_alt = 7
   Insn 786: point = 602, n_alt = 4
   Insn 785: point = 603, n_alt = 3
   Insn 784: point = 605, n_alt = 0
   Insn 783: point = 607, n_alt = 1
   Insn 782: point = 609, n_alt = 0
   Insn 781: point = 610, n_alt = 0
   Insn 780: point = 612, n_alt = 1
   Insn 779: point = 614, n_alt = 0
   Insn 778: point = 615, n_alt = 8
   Insn 777: point = 616, n_alt = 4
   Insn 776: point = 617, n_alt = 1
   Insn 775: point = 619, n_alt = 3
   Insn 774: point = 621, n_alt = 0
   Insn 773: point = 623, n_alt = 1
   Insn 772: point = 625, n_alt = 0
   Insn 771: point = 626, n_alt = 0
   Insn 770: point = 628, n_alt = 1
   Insn 769: point = 630, n_alt = 0
   Insn 768: point = 631, n_alt = 7
   Insn 767: point = 633, n_alt = 4
   Insn 766: point = 634, n_alt = 3
   Insn 765: point = 636, n_alt = 0
   Insn 764: point = 638, n_alt = 1
   Insn 763: point = 640, n_alt = 0
   Insn 762: point = 641, n_alt = 0
   Insn 761: point = 643, n_alt = 1
   Insn 760: point = 645, n_alt = 0
   Insn 759: point = 646, n_alt = 8
   Insn 758: point = 647, n_alt = 2
   Insn 757: point = 649, n_alt = 7
   Insn 756: point = 650, n_alt = 7
   Insn 755: point = 652, n_alt = 4
   Insn 754: point = 653, n_alt = 3
   Insn 753: point = 655, n_alt = 0
   Insn 752: point = 657, n_alt = 1
   Insn 751: point = 659, n_alt = 0
   Insn 750: point = 660, n_alt = 0
   Insn 749: point = 662, n_alt = 1
   Insn 748: point = 664, n_alt = 0
  BB 56
   Insn 743: point = 666, n_alt = -1
   Insn 742: point = 666, n_alt = 1
   Insn 741: point = 667, n_alt = 7
  BB 55
   Insn 740: point = 669, n_alt = -1
   Insn 739: point = 669, n_alt = 1
   Insn 738: point = 670, n_alt = 7
   Insn 737: point = 671, n_alt = 7
   Insn 736: point = 673, n_alt = 4
   Insn 735: point = 674, n_alt = 3
   Insn 734: point = 676, n_alt = 0
   Insn 733: point = 678, n_alt = 1
   Insn 732: point = 680, n_alt = 0
   Insn 731: point = 681, n_alt = 0
   Insn 730: point = 683, n_alt = 1
   Insn 729: point = 685, n_alt = 0
  BB 53
   Insn 721: point = 687, n_alt = 1
  BB 51
   Insn 713: point = 688, n_alt = 1
   Insn 712: point = 689, n_alt = 0
   Insn 711: point = 690, n_alt = 0
  BB 97
   Insn 1424: point = 691, n_alt = -1
  BB 31
   Insn 351: point = 691, n_alt = -1
   Insn 350: point = 691, n_alt = 0
   Insn 349: point = 692, n_alt = 0
   Insn 348: point = 694, n_alt = 0
   Insn 347: point = 695, n_alt = 0
  BB 50
   Insn 1374: point = 695, n_alt = -1
   Insn 705: point = 695, n_alt = 1
  BB 98
   Insn 1427: point = 695, n_alt = -1
  BB 33
   Insn 361: point = 695, n_alt = -1
   Insn 360: point = 695, n_alt = 0
   Insn 359: point = 696, n_alt = 0
   Insn 358: point = 698, n_alt = 0
   Insn 357: point = 699, n_alt = 0
  BB 49
   Insn 1372: point = 700, n_alt = -1
   Insn 699: point = 700, n_alt = 1
  BB 99
   Insn 1430: point = 701, n_alt = -1
  BB 35
   Insn 369: point = 702, n_alt = -1
   Insn 368: point = 702, n_alt = 0
   Insn 367: point = 703, n_alt = 0
   Insn 366: point = 705, n_alt = 0
   Insn 365: point = 706, n_alt = 0
  BB 48
   Insn 1370: point = 707, n_alt = -1
   Insn 693: point = 707, n_alt = 1
  BB 47
   Insn 690: point = 708, n_alt = 8
   Insn 689: point = 709, n_alt = 4
   Insn 688: point = 710, n_alt = 1
   Insn 687: point = 712, n_alt = 3
   Insn 686: point = 714, n_alt = 0
   Insn 685: point = 716, n_alt = 1
   Insn 684: point = 718, n_alt = 0
   Insn 683: point = 719, n_alt = 0
   Insn 682: point = 721, n_alt = 1
   Insn 681: point = 723, n_alt = 0
   Insn 680: point = 724, n_alt = 1
   Insn 679: point = 726, n_alt = 7
   Insn 678: point = 727, n_alt = 7
   Insn 677: point = 729, n_alt = 4
   Insn 676: point = 730, n_alt = 3
   Insn 675: point = 732, n_alt = 0
   Insn 674: point = 734, n_alt = 1
   Insn 673: point = 736, n_alt = 0
   Insn 672: point = 737, n_alt = 0
   Insn 671: point = 739, n_alt = 1
   Insn 670: point = 741, n_alt = 0
   Insn 669: point = 742, n_alt = 8
   Insn 668: point = 743, n_alt = 4
   Insn 667: point = 744, n_alt = 1
   Insn 666: point = 746, n_alt = 3
   Insn 665: point = 748, n_alt = 0
   Insn 664: point = 750, n_alt = 1
   Insn 663: point = 752, n_alt = 0
   Insn 662: point = 753, n_alt = 0
   Insn 661: point = 755, n_alt = 1
   Insn 660: point = 757, n_alt = 0
   Insn 659: point = 758, n_alt = 1
   Insn 658: point = 760, n_alt = 7
   Insn 657: point = 762, n_alt = 0
   Insn 656: point = 764, n_alt = 4
   Insn 655: point = 765, n_alt = 3
   Insn 654: point = 767, n_alt = 0
   Insn 653: point = 769, n_alt = 1
   Insn 652: point = 771, n_alt = 0
   Insn 651: point = 772, n_alt = 0
   Insn 650: point = 774, n_alt = 0
   Insn 649: point = 776, n_alt = 1
   Insn 648: point = 778, n_alt = 0
   Insn 647: point = 779, n_alt = 1
   Insn 646: point = 781, n_alt = 1
   Insn 645: point = 783, n_alt = 0
   Insn 644: point = 784, n_alt = 7
   Insn 643: point = 786, n_alt = 4
   Insn 642: point = 787, n_alt = 3
   Insn 641: point = 789, n_alt = 0
   Insn 640: point = 791, n_alt = 1
   Insn 639: point = 793, n_alt = 0
   Insn 638: point = 794, n_alt = 0
   Insn 637: point = 796, n_alt = 1
   Insn 636: point = 798, n_alt = 0
   Insn 635: point = 799, n_alt = 8
   Insn 634: point = 800, n_alt = 4
   Insn 633: point = 801, n_alt = 1
   Insn 632: point = 803, n_alt = 3
   Insn 631: point = 805, n_alt = 0
   Insn 630: point = 807, n_alt = 1
   Insn 629: point = 809, n_alt = 0
   Insn 628: point = 810, n_alt = 0
   Insn 627: point = 812, n_alt = 1
   Insn 626: point = 814, n_alt = 0
   Insn 625: point = 815, n_alt = 1
   Insn 624: point = 817, n_alt = 7
   Insn 623: point = 819, n_alt = 0
   Insn 622: point = 821, n_alt = 4
   Insn 621: point = 822, n_alt = 3
   Insn 620: point = 824, n_alt = 0
   Insn 619: point = 826, n_alt = 1
   Insn 618: point = 828, n_alt = 0
   Insn 617: point = 829, n_alt = 0
   Insn 616: point = 831, n_alt = 0
   Insn 615: point = 833, n_alt = 1
   Insn 614: point = 835, n_alt = 0
   Insn 613: point = 836, n_alt = 1
   Insn 612: point = 838, n_alt = 1
   Insn 611: point = 840, n_alt = 0
   Insn 610: point = 841, n_alt = 7
   Insn 609: point = 843, n_alt = 4
   Insn 608: point = 844, n_alt = 3
   Insn 607: point = 846, n_alt = 0
   Insn 606: point = 848, n_alt = 1
   Insn 605: point = 850, n_alt = 0
   Insn 604: point = 851, n_alt = 0
   Insn 603: point = 853, n_alt = 1
   Insn 602: point = 855, n_alt = 0
   Insn 601: point = 856, n_alt = 8
   Insn 600: point = 857, n_alt = 4
   Insn 599: point = 858, n_alt = 1
   Insn 598: point = 860, n_alt = 3
   Insn 597: point = 862, n_alt = 0
   Insn 596: point = 864, n_alt = 1
   Insn 595: point = 866, n_alt = 0
   Insn 594: point = 867, n_alt = 0
   Insn 593: point = 869, n_alt = 1
   Insn 592: point = 871, n_alt = 0
   Insn 591: point = 872, n_alt = 7
   Insn 590: point = 874, n_alt = 4
   Insn 589: point = 875, n_alt = 3
   Insn 588: point = 877, n_alt = 0
   Insn 587: point = 879, n_alt = 1
   Insn 586: point = 881, n_alt = 0
   Insn 585: point = 882, n_alt = 0
   Insn 584: point = 884, n_alt = 1
   Insn 583: point = 886, n_alt = 0
   Insn 582: point = 887, n_alt = 8
   Insn 581: point = 888, n_alt = 2
   Insn 580: point = 890, n_alt = 7
   Insn 579: point = 892, n_alt = 4
   Insn 578: point = 893, n_alt = 3
   Insn 577: point = 895, n_alt = 0
   Insn 576: point = 897, n_alt = 1
   Insn 575: point = 899, n_alt = 0
   Insn 574: point = 900, n_alt = 0
   Insn 573: point = 902, n_alt = 0
   Insn 572: point = 904, n_alt = 1
   Insn 571: point = 906, n_alt = 0
   Insn 570: point = 907, n_alt = 1
   Insn 569: point = 909, n_alt = 1
   Insn 568: point = 911, n_alt = 0
   Insn 567: point = 912, n_alt = 7
   Insn 566: point = 914, n_alt = 4
   Insn 565: point = 915, n_alt = 3
   Insn 564: point = 917, n_alt = 0
   Insn 563: point = 919, n_alt = 1
   Insn 562: point = 921, n_alt = 0
   Insn 561: point = 922, n_alt = 0
   Insn 560: point = 924, n_alt = 0
   Insn 559: point = 926, n_alt = 1
   Insn 558: point = 928, n_alt = 0
   Insn 557: point = 929, n_alt = 1
   Insn 556: point = 931, n_alt = 1
   Insn 555: point = 933, n_alt = 0
   Insn 554: point = 935, n_alt = 0
  BB 46
   Insn 549: point = 937, n_alt = -1
   Insn 548: point = 937, n_alt = 1
   Insn 547: point = 938, n_alt = 7
  BB 45
   Insn 542: point = 940, n_alt = -1
   Insn 541: point = 940, n_alt = 1
   Insn 540: point = 941, n_alt = 7
   Insn 539: point = 942, n_alt = 8
   Insn 538: point = 943, n_alt = 7
   Insn 537: point = 944, n_alt = 4
   Insn 536: point = 945, n_alt = 3
   Insn 535: point = 947, n_alt = 0
   Insn 534: point = 949, n_alt = 1
   Insn 533: point = 951, n_alt = 0
   Insn 532: point = 952, n_alt = 0
   Insn 531: point = 954, n_alt = 1
   Insn 530: point = 956, n_alt = 0
  BB 43
   Insn 1368: point = 958, n_alt = -1
   Insn 521: point = 958, n_alt = 8
   Insn 520: point = 959, n_alt = 7
  BB 40
   Insn 1366: point = 961, n_alt = -1
   Insn 496: point = 961, n_alt = 8
   Insn 495: point = 962, n_alt = 7
  BB 42
   Insn 515: point = 964, n_alt = -1
   Insn 514: point = 964, n_alt = 1
   Insn 513: point = 965, n_alt = 7
  BB 41
   Insn 512: point = 967, n_alt = -1
   Insn 511: point = 967, n_alt = 1
   Insn 510: point = 968, n_alt = 7
   Insn 509: point = 969, n_alt = 7
   Insn 508: point = 971, n_alt = 4
   Insn 507: point = 972, n_alt = 3
   Insn 506: point = 974, n_alt = 0
   Insn 505: point = 976, n_alt = 1
   Insn 504: point = 978, n_alt = 0
   Insn 503: point = 979, n_alt = 0
   Insn 502: point = 981, n_alt = 1
   Insn 501: point = 983, n_alt = 0
  BB 39
   Insn 490: point = 985, n_alt = -1
   Insn 489: point = 985, n_alt = 1
   Insn 488: point = 986, n_alt = 7
   Insn 487: point = 988, n_alt = 0
   Insn 486: point = 990, n_alt = 4
   Insn 485: point = 991, n_alt = 3
   Insn 484: point = 993, n_alt = 0
   Insn 483: point = 995, n_alt = 1
   Insn 482: point = 997, n_alt = 0
   Insn 481: point = 998, n_alt = 0
   Insn 480: point = 1000, n_alt = 0
   Insn 479: point = 1002, n_alt = 1
   Insn 478: point = 1004, n_alt = 0
   Insn 477: point = 1005, n_alt = 1
   Insn 476: point = 1007, n_alt = 1
   Insn 475: point = 1009, n_alt = 0
  BB 44
   Insn 527: point = 1011, n_alt = 8
   Insn 526: point = 1012, n_alt = 7
  BB 38
   Insn 1363: point = 1014, n_alt = -1
   Insn 470: point = 1014, n_alt = 8
   Insn 469: point = 1015, n_alt = 7
  BB 37
   Insn 464: point = 1017, n_alt = -1
   Insn 463: point = 1017, n_alt = 1
   Insn 462: point = 1018, n_alt = 7
   Insn 461: point = 1019, n_alt = 7
   Insn 460: point = 1021, n_alt = 0
   Insn 459: point = 1023, n_alt = 4
   Insn 458: point = 1024, n_alt = 3
   Insn 457: point = 1026, n_alt = 0
   Insn 456: point = 1028, n_alt = 1
   Insn 455: point = 1030, n_alt = 0
   Insn 454: point = 1031, n_alt = 0
   Insn 453: point = 1033, n_alt = 0
   Insn 452: point = 1035, n_alt = 1
   Insn 451: point = 1037, n_alt = 0
   Insn 450: point = 1038, n_alt = 1
   Insn 449: point = 1040, n_alt = 1
   Insn 448: point = 1042, n_alt = 0
  BB 36
   Insn 443: point = 1044, n_alt = -1
   Insn 442: point = 1044, n_alt = 1
   Insn 441: point = 1045, n_alt = 7
   Insn 440: point = 1047, n_alt = 4
   Insn 439: point = 1048, n_alt = 3
   Insn 438: point = 1050, n_alt = 0
   Insn 437: point = 1052, n_alt = 1
   Insn 436: point = 1054, n_alt = 0
   Insn 435: point = 1055, n_alt = 0
   Insn 434: point = 1057, n_alt = 0
   Insn 433: point = 1059, n_alt = 1
   Insn 432: point = 1061, n_alt = 0
   Insn 431: point = 1062, n_alt = 1
   Insn 430: point = 1064, n_alt = 1
   Insn 429: point = 1066, n_alt = 0
   Insn 428: point = 1067, n_alt = 8
   Insn 427: point = 1068, n_alt = 7
   Insn 426: point = 1069, n_alt = 8
   Insn 425: point = 1070, n_alt = 1
   Insn 424: point = 1072, n_alt = 7
   Insn 423: point = 1073, n_alt = 7
   Insn 422: point = 1075, n_alt = 4
   Insn 421: point = 1076, n_alt = 3
   Insn 420: point = 1078, n_alt = 0
   Insn 419: point = 1080, n_alt = 1
   Insn 418: point = 1082, n_alt = 0
   Insn 417: point = 1083, n_alt = 0
   Insn 416: point = 1085, n_alt = 1
   Insn 415: point = 1087, n_alt = 0
   Insn 414: point = 1088, n_alt = 8
   Insn 413: point = 1089, n_alt = 2
   Insn 412: point = 1091, n_alt = 7
   Insn 411: point = 1092, n_alt = 7
   Insn 410: point = 1094, n_alt = 4
   Insn 409: point = 1095, n_alt = 3
   Insn 408: point = 1097, n_alt = 0
   Insn 407: point = 1099, n_alt = 1
   Insn 406: point = 1101, n_alt = 0
   Insn 405: point = 1102, n_alt = 0
   Insn 404: point = 1104, n_alt = 1
   Insn 403: point = 1106, n_alt = 0
   Insn 402: point = 1107, n_alt = 8
   Insn 401: point = 1108, n_alt = 1
   Insn 400: point = 1110, n_alt = 7
   Insn 399: point = 1111, n_alt = -2
   Insn 398: point = 1113, n_alt = 1
   Insn 397: point = 1115, n_alt = 7
   Insn 396: point = 1117, n_alt = 4
   Insn 395: point = 1118, n_alt = 3
   Insn 394: point = 1120, n_alt = 0
   Insn 393: point = 1122, n_alt = 1
   Insn 392: point = 1124, n_alt = 0
   Insn 391: point = 1125, n_alt = 0
   Insn 390: point = 1127, n_alt = 0
   Insn 389: point = 1129, n_alt = 1
   Insn 388: point = 1131, n_alt = 0
   Insn 387: point = 1132, n_alt = 1
   Insn 386: point = 1134, n_alt = 1
   Insn 385: point = 1136, n_alt = 0
   Insn 384: point = 1138, n_alt = 0
   Insn 383: point = 1139, n_alt = 7
   Insn 382: point = 1141, n_alt = 4
   Insn 381: point = 1142, n_alt = 3
   Insn 380: point = 1144, n_alt = 0
   Insn 379: point = 1146, n_alt = 1
   Insn 378: point = 1148, n_alt = 0
   Insn 377: point = 1149, n_alt = 0
   Insn 376: point = 1151, n_alt = 0
   Insn 375: point = 1153, n_alt = 1
   Insn 374: point = 1155, n_alt = 0
   Insn 373: point = 1156, n_alt = 1
   Insn 372: point = 1158, n_alt = 1
   Insn 371: point = 1160, n_alt = 0
  BB 34
   Insn 363: point = 1162, n_alt = 1
  BB 32
   Insn 355: point = 1163, n_alt = 1
   Insn 354: point = 1164, n_alt = 0
   Insn 353: point = 1165, n_alt = 0
  BB 30
   Insn 345: point = 1166, n_alt = 1
  BB 95
   Insn 1418: point = 1166, n_alt = -1
  BB 25
   Insn 250: point = 1166, n_alt = -1
   Insn 249: point = 1166, n_alt = 0
   Insn 248: point = 1167, n_alt = 0
   Insn 247: point = 1169, n_alt = 0
   Insn 246: point = 1170, n_alt = 0
  BB 29
   Insn 1359: point = 1171, n_alt = -1
   Insn 339: point = 1171, n_alt = 1
  BB 96
   Insn 1421: point = 1172, n_alt = -1
  BB 27
   Insn 258: point = 1173, n_alt = -1
   Insn 257: point = 1173, n_alt = 0
   Insn 256: point = 1174, n_alt = 0
   Insn 255: point = 1176, n_alt = 0
   Insn 254: point = 1177, n_alt = 0
  BB 28
   Insn 1357: point = 1178, n_alt = -1
   Insn 333: point = 1178, n_alt = 1
   Insn 332: point = 1178, n_alt = 8
   Insn 331: point = 1179, n_alt = 7
   Insn 330: point = 1180, n_alt = 4
   Insn 329: point = 1181, n_alt = 3
   Insn 328: point = 1183, n_alt = 0
   Insn 327: point = 1185, n_alt = 1
   Insn 326: point = 1187, n_alt = 0
   Insn 325: point = 1188, n_alt = 0
   Insn 324: point = 1190, n_alt = 1
   Insn 323: point = 1192, n_alt = 0
   Insn 322: point = 1193, n_alt = 8
   Insn 321: point = 1194, n_alt = 7
   Insn 320: point = 1195, n_alt = 4
   Insn 319: point = 1196, n_alt = 3
   Insn 318: point = 1198, n_alt = 0
   Insn 317: point = 1200, n_alt = 1
   Insn 316: point = 1202, n_alt = 0
   Insn 315: point = 1203, n_alt = 0
   Insn 314: point = 1205, n_alt = 1
   Insn 313: point = 1207, n_alt = 0
   Insn 312: point = 1208, n_alt = 8
   Insn 311: point = 1209, n_alt = 7
   Insn 310: point = 1210, n_alt = 4
   Insn 309: point = 1211, n_alt = 3
   Insn 308: point = 1213, n_alt = 0
   Insn 307: point = 1215, n_alt = 1
   Insn 306: point = 1217, n_alt = 0
   Insn 305: point = 1218, n_alt = 0
   Insn 304: point = 1220, n_alt = 1
   Insn 303: point = 1222, n_alt = 0
   Insn 302: point = 1223, n_alt = 8
   Insn 301: point = 1224, n_alt = 7
   Insn 300: point = 1225, n_alt = 4
   Insn 299: point = 1226, n_alt = 3
   Insn 298: point = 1228, n_alt = 0
   Insn 297: point = 1230, n_alt = 1
   Insn 296: point = 1232, n_alt = 0
   Insn 295: point = 1233, n_alt = 0
   Insn 294: point = 1235, n_alt = 1
   Insn 293: point = 1237, n_alt = 0
   Insn 292: point = 1238, n_alt = 8
   Insn 291: point = 1239, n_alt = 7
   Insn 290: point = 1240, n_alt = 4
   Insn 289: point = 1241, n_alt = 3
   Insn 288: point = 1243, n_alt = 0
   Insn 287: point = 1245, n_alt = 1
   Insn 286: point = 1247, n_alt = 0
   Insn 285: point = 1248, n_alt = 0
   Insn 284: point = 1250, n_alt = 1
   Insn 283: point = 1252, n_alt = 0
   Insn 282: point = 1253, n_alt = 8
   Insn 281: point = 1254, n_alt = 4
   Insn 280: point = 1255, n_alt = 2
   Insn 279: point = 1257, n_alt = 7
   Insn 278: point = 1258, n_alt = 3
   Insn 277: point = 1260, n_alt = 0
   Insn 276: point = 1262, n_alt = 1
   Insn 275: point = 1264, n_alt = 0
   Insn 274: point = 1265, n_alt = 0
   Insn 273: point = 1267, n_alt = 1
   Insn 272: point = 1269, n_alt = 0
   Insn 271: point = 1270, n_alt = 1
   Insn 270: point = 1272, n_alt = 7
   Insn 269: point = 1274, n_alt = 4
   Insn 268: point = 1275, n_alt = 7
   Insn 267: point = 1277, n_alt = 4
   Insn 266: point = 1278, n_alt = 3
   Insn 265: point = 1280, n_alt = 0
   Insn 264: point = 1282, n_alt = 1
   Insn 263: point = 1284, n_alt = 0
   Insn 262: point = 1285, n_alt = 0
   Insn 261: point = 1287, n_alt = 1
   Insn 260: point = 1289, n_alt = 0
  BB 26
   Insn 252: point = 1291, n_alt = 1
  BB 24
   Insn 244: point = 1292, n_alt = 1
   Insn 243: point = 1293, n_alt = 0
   Insn 242: point = 1294, n_alt = 0
  BB 92
   Insn 1409: point = 1295, n_alt = -1
  BB 14
   Insn 109: point = 1295, n_alt = -1
   Insn 108: point = 1295, n_alt = 0
   Insn 107: point = 1296, n_alt = 0
   Insn 106: point = 1298, n_alt = 0
   Insn 105: point = 1299, n_alt = 0
  BB 23
   Insn 1355: point = 1299, n_alt = -1
   Insn 236: point = 1299, n_alt = 1
   Insn 235: point = 1299, n_alt = 0
   Insn 234: point = 1299, n_alt = 3
   Insn 233: point = 1299, n_alt = -2
   Insn 232: point = 1300, n_alt = 0
   Insn 231: point = 1302, n_alt = 4
   Insn 230: point = 1303, n_alt = 1
   Insn 229: point = 1305, n_alt = 0
   Insn 228: point = 1307, n_alt = 1
   Insn 227: point = 1309, n_alt = 0
   Insn 226: point = 1311, n_alt = 0
   Insn 225: point = 1313, n_alt = 0
   Insn 224: point = 1314, n_alt = 0
   Insn 223: point = 1314, n_alt = 3
   Insn 222: point = 1314, n_alt = -2
   Insn 221: point = 1315, n_alt = 0
   Insn 220: point = 1317, n_alt = 4
   Insn 219: point = 1318, n_alt = 1
   Insn 218: point = 1320, n_alt = 0
   Insn 217: point = 1322, n_alt = 1
   Insn 216: point = 1324, n_alt = 0
   Insn 215: point = 1326, n_alt = 0
   Insn 214: point = 1328, n_alt = 0
  BB 93
   Insn 1412: point = 1329, n_alt = -1
  BB 16
   Insn 119: point = 1329, n_alt = -1
   Insn 118: point = 1329, n_alt = 0
   Insn 117: point = 1330, n_alt = 0
   Insn 116: point = 1332, n_alt = 0
   Insn 115: point = 1333, n_alt = 0
  BB 22
   Insn 1353: point = 1334, n_alt = -1
   Insn 208: point = 1334, n_alt = 1
  BB 94
   Insn 1415: point = 1335, n_alt = -1
  BB 18
   Insn 127: point = 1336, n_alt = -1
   Insn 126: point = 1336, n_alt = 0
   Insn 125: point = 1337, n_alt = 0
   Insn 124: point = 1339, n_alt = 0
   Insn 123: point = 1340, n_alt = 0
  BB 21
   Insn 1351: point = 1341, n_alt = -1
   Insn 202: point = 1341, n_alt = 1
  BB 20
   Insn 199: point = 1342, n_alt = 8
   Insn 198: point = 1343, n_alt = 3
   Insn 197: point = 1345, n_alt = 4
   Insn 196: point = 1346, n_alt = 7
   Insn 195: point = 1348, n_alt = 3
   Insn 194: point = 1350, n_alt = 4
   Insn 193: point = 1351, n_alt = 3
   Insn 192: point = 1353, n_alt = 0
   Insn 191: point = 1355, n_alt = 1
   Insn 190: point = 1357, n_alt = 0
   Insn 189: point = 1358, n_alt = 0
   Insn 188: point = 1360, n_alt = 0
   Insn 187: point = 1362, n_alt = 1
   Insn 186: point = 1364, n_alt = 0
   Insn 185: point = 1365, n_alt = 1
   Insn 184: point = 1367, n_alt = 1
   Insn 183: point = 1369, n_alt = 0
   Insn 182: point = 1370, n_alt = 3
   Insn 181: point = 1372, n_alt = 0
   Insn 180: point = 1374, n_alt = 1
   Insn 179: point = 1376, n_alt = 0
   Insn 178: point = 1377, n_alt = 0
   Insn 177: point = 1379, n_alt = 0
   Insn 176: point = 1381, n_alt = 1
   Insn 175: point = 1383, n_alt = 0
   Insn 174: point = 1384, n_alt = 1
   Insn 173: point = 1386, n_alt = 1
   Insn 172: point = 1388, n_alt = 0
   Insn 171: point = 1389, n_alt = 8
   Insn 170: point = 1390, n_alt = 3
   Insn 169: point = 1392, n_alt = 4
   Insn 168: point = 1393, n_alt = 7
   Insn 167: point = 1395, n_alt = 3
   Insn 166: point = 1397, n_alt = 4
   Insn 165: point = 1398, n_alt = 3
   Insn 164: point = 1400, n_alt = 0
   Insn 163: point = 1402, n_alt = 1
   Insn 162: point = 1404, n_alt = 0
   Insn 161: point = 1405, n_alt = 0
   Insn 160: point = 1407, n_alt = 0
   Insn 159: point = 1409, n_alt = 1
   Insn 158: point = 1411, n_alt = 0
   Insn 157: point = 1412, n_alt = 1
   Insn 156: point = 1414, n_alt = 1
   Insn 155: point = 1416, n_alt = 0
   Insn 154: point = 1417, n_alt = 3
   Insn 153: point = 1419, n_alt = 0
   Insn 152: point = 1421, n_alt = 1
   Insn 151: point = 1423, n_alt = 0
   Insn 150: point = 1424, n_alt = 0
   Insn 149: point = 1426, n_alt = 0
   Insn 148: point = 1428, n_alt = 1
   Insn 147: point = 1430, n_alt = 0
   Insn 146: point = 1431, n_alt = 1
   Insn 145: point = 1433, n_alt = 1
   Insn 144: point = 1435, n_alt = 0
  BB 19
   Insn 142: point = 1437, n_alt = -1
   Insn 141: point = 1437, n_alt = 1
   Insn 140: point = 1438, n_alt = 0
   Insn 139: point = 1439, n_alt = 1
   Insn 138: point = 1440, n_alt = 0
   Insn 137: point = 1442, n_alt = 0
   Insn 136: point = 1444, n_alt = 4
   Insn 135: point = 1445, n_alt = 3
   Insn 134: point = 1447, n_alt = 0
   Insn 133: point = 1449, n_alt = 1
   Insn 132: point = 1451, n_alt = 0
   Insn 131: point = 1452, n_alt = 0
   Insn 130: point = 1454, n_alt = 1
   Insn 129: point = 1456, n_alt = 0
  BB 17
   Insn 121: point = 1458, n_alt = 1
  BB 15
   Insn 113: point = 1459, n_alt = 1
   Insn 112: point = 1460, n_alt = 0
   Insn 111: point = 1461, n_alt = 0
  BB 13
   Insn 103: point = 1462, n_alt = 1
  BB 89
   Insn 1400: point = 1462, n_alt = -1
  BB 3
   Insn 12: point = 1462, n_alt = -1
   Insn 11: point = 1462, n_alt = 0
   Insn 10: point = 1463, n_alt = 0
   Insn 9: point = 1465, n_alt = 0
   Insn 8: point = 1466, n_alt = 0
  BB 12
   Insn 1349: point = 1466, n_alt = -1
   Insn 97: point = 1466, n_alt = 1
   Insn 96: point = 1466, n_alt = 0
   Insn 95: point = 1466, n_alt = 3
   Insn 94: point = 1466, n_alt = -2
   Insn 93: point = 1467, n_alt = 0
   Insn 92: point = 1469, n_alt = 4
   Insn 91: point = 1470, n_alt = 1
   Insn 90: point = 1472, n_alt = 1
   Insn 89: point = 1474, n_alt = 0
   Insn 88: point = 1476, n_alt = 0
   Insn 87: point = 1478, n_alt = 0
  BB 90
   Insn 1403: point = 1479, n_alt = -1
  BB 5
   Insn 22: point = 1479, n_alt = -1
   Insn 21: point = 1479, n_alt = 0
   Insn 20: point = 1480, n_alt = 0
   Insn 19: point = 1482, n_alt = 0
   Insn 18: point = 1483, n_alt = 0
  BB 11
   Insn 1347: point = 1484, n_alt = -1
   Insn 81: point = 1484, n_alt = 1
  BB 91
   Insn 1406: point = 1485, n_alt = -1
  BB 7
   Insn 30: point = 1486, n_alt = -1
   Insn 29: point = 1486, n_alt = 0
   Insn 28: point = 1487, n_alt = 0
   Insn 27: point = 1489, n_alt = 0
   Insn 26: point = 1490, n_alt = 0
  BB 10
   Insn 1345: point = 1491, n_alt = -1
   Insn 75: point = 1491, n_alt = 1
  BB 9
   Insn 72: point = 1492, n_alt = 8
   Insn 71: point = 1493, n_alt = 4
   Insn 70: point = 1494, n_alt = 7
   Insn 69: point = 1496, n_alt = 4
   Insn 68: point = 1497, n_alt = 3
   Insn 67: point = 1499, n_alt = 0
   Insn 66: point = 1501, n_alt = 1
   Insn 65: point = 1503, n_alt = 0
   Insn 64: point = 1504, n_alt = 0
   Insn 63: point = 1506, n_alt = 0
   Insn 62: point = 1508, n_alt = 1
   Insn 61: point = 1510, n_alt = 0
   Insn 60: point = 1511, n_alt = 1
   Insn 59: point = 1513, n_alt = 1
   Insn 58: point = 1515, n_alt = 0
   Insn 57: point = 1516, n_alt = 3
   Insn 56: point = 1518, n_alt = 0
   Insn 55: point = 1520, n_alt = 1
   Insn 54: point = 1522, n_alt = 0
   Insn 53: point = 1523, n_alt = 0
   Insn 52: point = 1525, n_alt = 0
   Insn 51: point = 1527, n_alt = 1
   Insn 50: point = 1529, n_alt = 0
   Insn 49: point = 1530, n_alt = 1
   Insn 48: point = 1532, n_alt = 1
   Insn 47: point = 1534, n_alt = 0
  BB 8
   Insn 45: point = 1536, n_alt = -1
   Insn 44: point = 1536, n_alt = 1
   Insn 43: point = 1537, n_alt = 0
   Insn 42: point = 1538, n_alt = 1
   Insn 41: point = 1539, n_alt = 0
   Insn 40: point = 1541, n_alt = 0
   Insn 39: point = 1543, n_alt = 4
   Insn 38: point = 1544, n_alt = 3
   Insn 37: point = 1546, n_alt = 0
   Insn 36: point = 1548, n_alt = 1
   Insn 35: point = 1550, n_alt = 0
   Insn 34: point = 1551, n_alt = 0
   Insn 33: point = 1553, n_alt = 1
   Insn 32: point = 1555, n_alt = 0
  BB 6
   Insn 24: point = 1557, n_alt = 1
  BB 4
   Insn 16: point = 1558, n_alt = 1
   Insn 15: point = 1559, n_alt = 0
   Insn 14: point = 1560, n_alt = 0
  BB 2
   Insn 6: point = 1561, n_alt = 1
 r87: [1552..1553]
 r88: [1547..1551]
 r89: [1547..1548]
 r90: [1545..1546]
 r91: [1542..1544]
 r92: [1531..1532]
 r93: [1524..1530]
 r94: [1526..1527]
 r95: [1524..1525]
 r96: [1519..1523]
 r97: [1519..1520]
 r98: [1517..1518]
 r99: [1495..1516]
 r100: [1512..1513]
 r101: [1505..1511]
 r102: [1507..1508]
 r103: [1505..1506]
 r104: [1500..1504]
 r105: [1500..1501]
 r106: [1498..1499]
 r107: [1492..1497]
 r108: [1492..1494]
 r109: [1475..1476]
 r110: [1473..1474]
 r111: [1471..1472]
 r112: [1466..1467]
 r113: [1453..1454]
 r114: [1448..1452]
 r115: [1448..1449]
 r116: [1446..1447]
 r117: [1443..1445]
 r118: [1432..1433]
 r119: [1425..1431]
 r120: [1427..1428]
 r121: [1425..1426]
 r122: [1420..1424]
 r123: [1420..1421]
 r124: [1418..1419]
 r125: [1396..1417]
 r126: [1413..1414]
 r127: [1406..1412]
 r128: [1408..1409]
 r129: [1406..1407]
 r130: [1401..1405]
 r131: [1401..1402]
 r132: [1399..1400]
 r133: [1391..1398]
 r134: [1389..1393]
 r135: [1385..1386]
 r136: [1378..1384]
 r137: [1380..1381]
 r138: [1378..1379]
 r139: [1373..1377]
 r140: [1373..1374]
 r141: [1371..1372]
 r142: [1349..1370]
 r143: [1366..1367]
 r144: [1359..1365]
 r145: [1361..1362]
 r146: [1359..1360]
 r147: [1354..1358]
 r148: [1354..1355]
 r149: [1352..1353]
 r150: [1344..1351]
 r151: [1342..1346]
 r152: [1325..1326]
 r153: [1323..1324]
 r154: [1321..1322]
 r155: [1314..1315]
 r156: [1310..1311]
 r157: [1308..1309]
 r158: [1306..1307]
 r159: [1299..1300]
 r160: [1286..1287]
 r161: [1281..1285]
 r162: [1281..1282]
 r163: [1279..1280]
 r164: [1276..1278]
 r165: [1271..1275]
 r166: [1271..1272]
 r167: [1256..1270]
 r168: [1266..1267]
 r169: [1261..1265]
 r170: [1261..1262]
 r171: [1259..1260]
 r172: [1253..1258]
 r173: [1253..1255]
 r174: [1249..1250]
 r175: [1244..1248]
 r176: [1244..1245]
 r177: [1242..1243]
 r178: [1238..1241]
 r179: [1234..1235]
 r180: [1229..1233]
 r181: [1229..1230]
 r182: [1227..1228]
 r183: [1223..1226]
 r184: [1219..1220]
 r185: [1214..1218]
 r186: [1214..1215]
 r187: [1212..1213]
 r188: [1208..1211]
 r189: [1204..1205]
 r190: [1199..1203]
 r191: [1199..1200]
 r192: [1197..1198]
 r193: [1193..1196]
 r194: [1189..1190]
 r195: [1184..1188]
 r196: [1184..1185]
 r197: [1182..1183]
 r198: [1178..1181]
 r199: [1157..1158]
 r200: [1150..1156]
 r201: [1152..1153]
 r202: [1150..1151]
 r203: [1145..1149]
 r204: [1145..1146]
 r205: [1143..1144]
 r206: [1140..1142]
 r207: [1114..1139]
 r208: [1135..1136]
 r209: [1133..1134]
 r210: [1126..1132]
 r211: [1128..1129]
 r212: [1126..1127]
 r213: [1121..1125]
 r214: [1121..1122]
 r215: [1119..1120]
 r216: [1116..1118]
 r217: [1114..1115]
 r218: [1112..1113]
 r219: [1109..1111]
 r220: [1103..1104]
 r221: [1098..1102]
 r222: [1098..1099]
 r223: [1096..1097]
 r224: [1093..1095]
 r225: [1090..1092]
 r226: [1084..1085]
 r227: [1079..1083]
 r228: [1079..1080]
 r229: [1077..1078]
 r230: [1074..1076]
 r231: [1071..1073]
 r232: [1063..1064]
 r233: [1056..1062]
 r234: [1058..1059]
 r235: [1056..1057]
 r236: [1051..1055]
 r237: [1051..1052]
 r238: [1049..1050]
 r239: [1046..1048]
 r240: [1044..1045]
 r241: [1039..1040]
 r242: [1032..1038]
 r243: [1034..1035]
 r244: [1032..1033]
 r245: [1027..1031]
 r246: [1027..1028]
 r247: [1025..1026]
 r248: [1022..1024]
 r249: [1017..1019]
 r250: [1006..1007]
 r251: [999..1005]
 r252: [1001..1002]
 r253: [999..1000]
 r254: [994..998]
 r255: [994..995]
 r256: [992..993]
 r257: [989..991]
 r258: [985..986]
 r259: [980..981]
 r260: [975..979]
 r261: [975..976]
 r262: [973..974]
 r263: [970..972]
 r264: [964..969]
 r265: [953..954]
 r266: [948..952]
 r267: [948..949]
 r268: [946..947]
 r269: [942..945]
 r270: [932..933]
 r271: [930..931]
 r272: [923..929]
 r273: [925..926]
 r274: [923..924]
 r275: [918..922]
 r276: [918..919]
 r277: [916..917]
 r278: [913..915]
 r279: [889..912]
 r280: [908..909]
 r281: [901..907]
 r282: [903..904]
 r283: [901..902]
 r284: [896..900]
 r285: [896..897]
 r286: [894..895]
 r287: [891..893]
 r288: [889..890]
 r289: [883..884]
 r290: [878..882]
 r291: [878..879]
 r292: [876..877]
 r293: [873..875]
 r294: [859..872]
 r295: [868..869]
 r296: [863..867]
 r297: [863..864]
 r298: [861..862]
 r299: [856..860]
 r300: [856..858]
 r301: [852..853]
 r302: [847..851]
 r303: [847..848]
 r304: [845..846]
 r305: [842..844]
 r306: [802..841]
 r307: [837..838]
 r308: [830..836]
 r309: [832..833]
 r310: [830..831]
 r311: [825..829]
 r312: [825..826]
 r313: [823..824]
 r314: [820..822]
 r315: [816..817]
 r316: [802..815]
 r317: [811..812]
 r318: [806..810]
 r319: [806..807]
 r320: [804..805]
 r321: [799..803]
 r322: [799..801]
 r323: [795..796]
 r324: [790..794]
 r325: [790..791]
 r326: [788..789]
 r327: [785..787]
 r328: [745..784]
 r329: [780..781]
 r330: [773..779]
 r331: [775..776]
 r332: [773..774]
 r333: [768..772]
 r334: [768..769]
 r335: [766..767]
 r336: [763..765]
 r337: [759..760]
 r338: [745..758]
 r339: [754..755]
 r340: [749..753]
 r341: [749..750]
 r342: [747..748]
 r343: [742..746]
 r344: [742..744]
 r345: [738..739]
 r346: [733..737]
 r347: [733..734]
 r348: [731..732]
 r349: [728..730]
 r350: [711..727]
 r351: [711..724]
 r352: [720..721]
 r353: [715..719]
 r354: [715..716]
 r355: [713..714]
 r356: [708..712]
 r357: [708..710]
 r358: [682..683]
 r359: [677..681]
 r360: [677..678]
 r361: [675..676]
 r362: [672..674]
 r363: [666..671]
 r364: [661..662]
 r365: [656..660]
 r366: [656..657]
 r367: [654..655]
 r368: [651..653]
 r369: [648..650]
 r370: [642..643]
 r371: [637..641]
 r372: [637..638]
 r373: [635..636]
 r374: [632..634]
 r375: [618..631]
 r376: [627..628]
 r377: [622..626]
 r378: [622..623]
 r379: [620..621]
 r380: [615..619]
 r381: [615..617]
 r382: [611..612]
 r383: [606..610]
 r384: [606..607]
 r385: [604..605]
 r386: [601..603]
 r387: [587..600]
 r388: [596..597]
 r389: [591..595]
 r390: [591..592]
 r391: [589..590]
 r392: [584..588]
 r393: [584..586]
 r394: [580..581]
 r395: [575..579]
 r396: [575..576]
 r397: [573..574]
 r398: [570..572]
 r399: [556..569]
 r400: [565..566]
 r401: [560..564]
 r402: [560..561]
 r403: [558..559]
 r404: [553..557]
 r405: [553..555]
 r406: [549..550]
 r407: [544..548]
 r408: [544..545]
 r409: [542..543]
 r410: [539..541]
 r411: [536..538]
 r412: [407..408]
 r413: [402..406]
 r414: [402..403]
 r415: [400..401]
 r416: [396..399]
 r417: [531..532]
 r418: [526..530]
 r419: [526..527]
 r420: [524..525]
 r421: [521..523]
 r422: [513..514]
 r423: [506..512]
 r424: [508..509]
 r425: [506..507]
 r426: [501..505]
 r427: [501..502]
 r428: [499..500]
 r429: [484..498]
 r430: [494..495]
 r431: [489..493]
 r432: [489..490]
 r433: [487..488]
 r434: [479..486]
 r435: [479..481]
 r436: [475..476]
 r437: [468..474]
 r438: [470..471]
 r439: [468..469]
 r440: [463..467]
 r441: [463..464]
 r442: [461..462]
 r443: [446..460]
 r444: [456..457]
 r445: [451..455]
 r446: [451..452]
 r447: [449..450]
 r448: [441..448]
 r449: [441..443]
 r450: [437..438]
 r451: [432..436]
 r452: [432..433]
 r453: [430..431]
 r454: [415..429]
 r455: [425..426]
 r456: [420..424]
 r457: [420..421]
 r458: [418..419]
 r459: [412..417]
 r460: [412..414]
 r461: [374..375]
 r462: [369..373]
 r463: [369..370]
 r464: [367..368]
 r465: [364..366]
 r466: [353..354]
 r467: [346..352]
 r468: [348..349]
 r469: [346..347]
 r470: [341..345]
 r471: [341..342]
 r472: [339..340]
 r473: [336..338]
 r474: [310..335]
 r475: [331..332]
 r476: [329..330]
 r477: [322..328]
 r478: [324..325]
 r479: [322..323]
 r480: [317..321]
 r481: [317..318]
 r482: [315..316]
 r483: [312..314]
 r484: [310..311]
 r485: [308..309]
 r486: [305..307]
 r487: [299..300]
 r488: [292..298]
 r489: [294..295]
 r490: [292..293]
 r491: [287..291]
 r492: [287..288]
 r493: [285..286]
 r494: [282..284]
 r495: [265..269]
 r496: [265..266]
 r497: [263..264]
 r499: [237..238]
 r500: [234..236]
 r501: [226..233]
 r502: [228..229]
 r503: [226..227]
 r504: [224..225]
 r505: [220..223]
 r506: [208..212]
 r507: [208..209]
 r508: [206..207]
 r509: [200..201]
 r510: [198..199]
 r511: [195..197]
 r512: [182..189]
 r513: [184..185]
 r514: [182..183]
 r515: [179..181]
 r516: [177..178]
 r517: [174..176]
 r518: [161..162]
 r519: [156..160]
 r520: [156..157]
 r521: [154..155]
 r522: [151..153]
 r523: [148..150]
 r524: [129..130]
 r525: [124..128]
 r526: [124..125]
 r527: [122..123]
 r528: [119..121]
 r529: [98..118]
 r530: [114..115]
 r531: [107..113]
 r532: [109..110]
 r533: [107..108]
 r534: [102..106]
 r535: [102..103]
 r536: [100..101]
 r537: [95..99]
 r538: [93..97]
 r539: [88..89]
 r540: [81..87]
 r541: [83..84]
 r542: [81..82]
 r543: [76..80]
 r544: [76..77]
 r545: [74..75]
 r546: [71..73]
 r547: [61..65]
 r548: [61..62]
 r549: [59..60]
 r550: [51..52]
 r551: [44..50]
 r552: [46..47]
 r553: [44..45]
 r554: [39..43]
 r555: [39..40]
 r556: [37..38]
 r557: [34..36]
 r558: [15..16]
 r559: [13..14]
 r560: [11..12]
 r561: [4..5]
 r562: [263..272] [259..261]
 r563: [206..217] [202..204]
 r564: [59..92] [32..56]
 r565: [1462..1463]
 r566: [1558..1560]
 r567: [1479..1559]
 r568: [1479..1480]
 r569: [1486..1487]
 r570: [1295..1296]
 r571: [1459..1461]
 r572: [1329..1460]
 r573: [1329..1330]
 r574: [1336..1337]
 r575: [1292..1294]
 r576: [1166..1293]
 r577: [1166..1167]
 r578: [1173..1174]
 r579: [691..692]
 r580: [1163..1165]
 r581: [695..1164]
 r582: [695..696]
 r583: [702..703]
 r584: [688..690]
 r585: [383..689]
 r586: [383..384]
 r587: [390..391]
 r588: [0..1]
 r589: [380..382]
 r590: [19..381]
 r591: [19..20]
 r592: [26..27]
 r593: [57..68]
 r594: [1464..1465]
 r595: [1481..1482]
 r596: [1488..1489]
 r597: [1554..1555]
 r598: [1549..1550]
 r599: [1540..1543]
 r600: [1540..1541]
 r601: [1538..1539]
 r602: [1536..1537]
 r603: [1533..1534]
 r604: [1528..1529]
 r605: [1521..1522]
 r606: [1514..1515]
 r607: [1509..1510]
 r608: [1502..1503]
 r609: [1495..1496]
 r610: [1492..1493]
 r611: [1477..1478]
 r612: [1468..1470]
 r613: [1468..1469]
 r614: [1297..1298]
 r615: [1331..1332]
 r616: [1338..1339]
 r617: [1455..1456]
 r618: [1450..1451]
 r619: [1441..1444]
 r620: [1441..1442]
 r621: [1439..1440]
 r622: [1437..1438]
 r623: [1434..1435]
 r624: [1429..1430]
 r625: [1422..1423]
 r626: [1415..1416]
 r627: [1410..1411]
 r628: [1403..1404]
 r629: [1394..1397]
 r630: [1394..1395]
 r631: [1389..1392]
 r632: [1389..1390]
 r633: [1387..1388]
 r634: [1382..1383]
 r635: [1375..1376]
 r636: [1368..1369]
 r637: [1363..1364]
 r638: [1356..1357]
 r639: [1347..1350]
 r640: [1347..1348]
 r641: [1342..1345]
 r642: [1342..1343]
 r643: [1327..1328]
 r644: [1319..1320]
 r645: [1316..1318]
 r646: [1316..1317]
 r647: [1312..1313]
 r648: [1304..1305]
 r649: [1301..1303]
 r650: [1301..1302]
 r651: [1168..1169]
 r652: [1175..1176]
 r653: [1288..1289]
 r654: [1283..1284]
 r655: [1276..1277]
 r656: [1273..1274]
 r657: [1268..1269]
 r658: [1263..1264]
 r659: [1256..1257]
 r660: [1253..1254]
 r661: [1251..1252]
 r662: [1246..1247]
 r663: [1238..1240]
 r664: [1238..1239]
 r665: [1236..1237]
 r666: [1231..1232]
 r667: [1223..1225]
 r668: [1223..1224]
 r669: [1221..1222]
 r670: [1216..1217]
 r671: [1208..1210]
 r672: [1208..1209]
 r673: [1206..1207]
 r674: [1201..1202]
 r675: [1193..1195]
 r676: [1193..1194]
 r677: [1191..1192]
 r678: [1186..1187]
 r679: [1178..1180]
 r680: [1178..1179]
 r681: [693..694]
 r682: [697..698]
 r683: [704..705]
 r684: [1159..1160]
 r685: [1154..1155]
 r686: [1147..1148]
 r687: [1140..1141]
 r688: [1137..1138]
 r689: [1130..1131]
 r690: [1123..1124]
 r691: [1116..1117]
 r692: [1107..1108]
 r693: [1109..1110]
 r694: [1105..1106]
 r695: [1100..1101]
 r696: [1093..1094]
 r697: [1088..1089]
 r698: [1090..1091]
 r699: [1086..1087]
 r700: [1081..1082]
 r701: [1074..1075]
 r702: [1069..1070]
 r703: [1071..1072]
 r704: [1067..1068]
 r705: [1065..1066]
 r706: [1060..1061]
 r707: [1053..1054]
 r708: [1046..1047]
 r709: [1041..1042]
 r710: [1036..1037]
 r711: [1029..1030]
 r712: [1020..1023]
 r713: [1020..1021]
 r714: [1017..1018]
 r715: [1014..1015]
 r716: [1008..1009]
 r717: [1003..1004]
 r718: [996..997]
 r719: [987..990]
 r720: [987..988]
 r721: [961..962]
 r722: [982..983]
 r723: [977..978]
 r724: [970..971]
 r725: [967..968]
 r726: [964..965]
 r727: [958..959]
 r728: [1011..1012]
 r729: [955..956]
 r730: [950..951]
 r731: [942..944]
 r732: [942..943]
 r733: [940..941]
 r734: [937..938]
 r735: [934..935]
 r736: [927..928]
 r737: [920..921]
 r738: [913..914]
 r739: [910..911]
 r740: [905..906]
 r741: [898..899]
 r742: [891..892]
 r743: [887..888]
 r744: [885..886]
 r745: [880..881]
 r746: [873..874]
 r747: [870..871]
 r748: [865..866]
 r749: [856..857]
 r750: [854..855]
 r751: [849..850]
 r752: [842..843]
 r753: [839..840]
 r754: [834..835]
 r755: [827..828]
 r756: [818..821]
 r757: [818..819]
 r758: [813..814]
 r759: [808..809]
 r760: [799..800]
 r761: [797..798]
 r762: [792..793]
 r763: [785..786]
 r764: [782..783]
 r765: [777..778]
 r766: [770..771]
 r767: [761..764]
 r768: [761..762]
 r769: [756..757]
 r770: [751..752]
 r771: [742..743]
 r772: [740..741]
 r773: [735..736]
 r774: [728..729]
 r775: [725..726]
 r776: [722..723]
 r777: [717..718]
 r778: [708..709]
 r779: [385..386]
 r780: [392..393]
 r781: [684..685]
 r782: [679..680]
 r783: [672..673]
 r784: [669..670]
 r785: [666..667]
 r786: [663..664]
 r787: [658..659]
 r788: [651..652]
 r789: [646..647]
 r790: [648..649]
 r791: [644..645]
 r792: [639..640]
 r793: [632..633]
 r794: [629..630]
 r795: [624..625]
 r796: [615..616]
 r797: [613..614]
 r798: [608..609]
 r799: [601..602]
 r800: [598..599]
 r801: [593..594]
 r802: [584..585]
 r803: [582..583]
 r804: [577..578]
 r805: [570..571]
 r806: [567..568]
 r807: [562..563]
 r808: [553..554]
 r809: [551..552]
 r810: [546..547]
 r811: [539..540]
 r812: [536..537]
 r813: [409..410]
 r814: [404..405]
 r815: [396..398]
 r816: [396..397]
 r817: [533..534]
 r818: [528..529]
 r819: [519..522]
 r820: [519..520]
 r821: [517..518]
 r822: [515..516]
 r823: [510..511]
 r824: [503..504]
 r825: [496..497]
 r826: [491..492]
 r827: [482..485]
 r828: [482..483]
 r829: [479..480]
 r830: [477..478]
 r831: [472..473]
 r832: [465..466]
 r833: [458..459]
 r834: [453..454]
 r835: [444..447]
 r836: [444..445]
 r837: [441..442]
 r838: [439..440]
 r839: [434..435]
 r840: [427..428]
 r841: [422..423]
 r842: [415..416]
 r843: [412..413]
 r844: [2..3]
 r845: [21..22]
 r846: [28..29]
 r847: [376..377]
 r848: [371..372]
 r849: [362..365]
 r850: [362..363]
 r851: [360..361]
 r852: [358..359]
 r853: [355..356]
 r854: [350..351]
 r855: [343..344]
 r856: [336..337]
 r857: [333..334]
 r858: [326..327]
 r859: [319..320]
 r860: [312..313]
 r861: [303..304]
 r862: [305..306]
 r863: [301..302]
 r864: [296..297]
 r865: [289..290]
 r866: [280..283]
 r867: [280..281]
 r868: [278..279]
 r869: [273..274]
 r870: [275..277]
 r871: [275..276]
 r872: [270..271]
 r873: [267..268]
 r874: [257..258]
 r875: [255..256]
 r876: [253..254]
 r877: [250..251]
 r878: [248..249]
 r879: [245..246]
 r880: [239..241]
 r881: [239..240]
 r882: [234..235]
 r883: [230..232]
 r884: [230..231]
 r885: [218..219]
 r886: [213..214]
 r887: [215..216]
 r888: [210..211]
 r889: [193..194]
 r890: [195..196]
 r891: [190..192]
 r892: [190..191]
 r893: [186..188]
 r894: [186..187]
 r895: [179..180]
 r896: [172..173]
 r897: [174..175]
 r898: [170..171]
 r899: [142..143]
 r900: [166..168]
 r901: [166..167]
 r902: [139..140]
 r903: [163..164]
 r904: [158..159]
 r905: [151..152]
 r906: [148..149]
 r907: [136..137]
 r908: [145..146]
 r909: [133..134]
 r910: [131..132]
 r911: [126..127]
 r912: [119..120]
 r913: [116..117]
 r914: [111..112]
 r915: [104..105]
 r916: [93..96]
 r917: [93..94]
 r918: [90..91]
 r919: [85..86]
 r920: [78..79]
 r921: [69..72]
 r922: [69..70]
 r923: [66..67]
 r924: [63..64]
 r925: [53..54]
 r926: [48..49]
 r927: [41..42]
 r928: [32..35]
 r929: [32..33]
 r930: [17..18]
 r931: [9..10]
 r932: [6..8]
 r933: [6..7]
 r934: [243..244]
 r935: [220..221]
 r936: [222..242]
Compressing live ranges: from 1561 to 1268 - 81%
Ranges after the compression:
 r87: [1262..1263]
 r88: [1258..1261]
 r89: [1258..1259]
 r90: [1256..1257]
 r91: [1254..1255]
 r92: [1244..1245]
 r93: [1238..1243]
 r94: [1240..1241]
 r95: [1238..1239]
 r96: [1234..1237]
 r97: [1234..1235]
 r98: [1232..1233]
 r99: [1214..1231]
 r100: [1228..1229]
 r101: [1222..1227]
 r102: [1224..1225]
 r103: [1222..1223]
 r104: [1218..1221]
 r105: [1218..1219]
 r106: [1216..1217]
 r107: [1212..1215]
 r108: [1212..1213]
 r109: [1200..1201]
 r110: [1198..1199]
 r111: [1196..1197]
 r112: [1192..1193]
 r113: [1182..1183]
 r114: [1178..1181]
 r115: [1178..1179]
 r116: [1176..1177]
 r117: [1174..1175]
 r118: [1164..1165]
 r119: [1158..1163]
 r120: [1160..1161]
 r121: [1158..1159]
 r122: [1154..1157]
 r123: [1154..1155]
 r124: [1152..1153]
 r125: [1134..1151]
 r126: [1148..1149]
 r127: [1142..1147]
 r128: [1144..1145]
 r129: [1142..1143]
 r130: [1138..1141]
 r131: [1138..1139]
 r132: [1136..1137]
 r133: [1130..1135]
 r134: [1128..1131]
 r135: [1124..1125]
 r136: [1118..1123]
 r137: [1120..1121]
 r138: [1118..1119]
 r139: [1114..1117]
 r140: [1114..1115]
 r141: [1112..1113]
 r142: [1094..1111]
 r143: [1108..1109]
 r144: [1102..1107]
 r145: [1104..1105]
 r146: [1102..1103]
 r147: [1098..1101]
 r148: [1098..1099]
 r149: [1096..1097]
 r150: [1090..1095]
 r151: [1088..1091]
 r152: [1076..1077]
 r153: [1074..1075]
 r154: [1072..1073]
 r155: [1066..1067]
 r156: [1062..1063]
 r157: [1060..1061]
 r158: [1058..1059]
 r159: [1052..1053]
 r160: [1042..1043]
 r161: [1038..1041]
 r162: [1038..1039]
 r163: [1036..1037]
 r164: [1034..1035]
 r165: [1030..1033]
 r166: [1030..1031]
 r167: [1018..1029]
 r168: [1026..1027]
 r169: [1022..1025]
 r170: [1022..1023]
 r171: [1020..1021]
 r172: [1016..1019]
 r173: [1016..1017]
 r174: [1012..1013]
 r175: [1008..1011]
 r176: [1008..1009]
 r177: [1006..1007]
 r178: [1004..1005]
 r179: [1000..1001]
 r180: [996..999]
 r181: [996..997]
 r182: [994..995]
 r183: [992..993]
 r184: [988..989]
 r185: [984..987]
 r186: [984..985]
 r187: [982..983]
 r188: [980..981]
 r189: [976..977]
 r190: [972..975]
 r191: [972..973]
 r192: [970..971]
 r193: [968..969]
 r194: [964..965]
 r195: [960..963]
 r196: [960..961]
 r197: [958..959]
 r198: [956..957]
 r199: [942..943]
 r200: [936..941]
 r201: [938..939]
 r202: [936..937]
 r203: [932..935]
 r204: [932..933]
 r205: [930..931]
 r206: [928..929]
 r207: [906..927]
 r208: [924..925]
 r209: [922..923]
 r210: [916..921]
 r211: [918..919]
 r212: [916..917]
 r213: [912..915]
 r214: [912..913]
 r215: [910..911]
 r216: [908..909]
 r217: [906..907]
 r218: [904..905]
 r219: [902..903]
 r220: [896..897]
 r221: [892..895]
 r222: [892..893]
 r223: [890..891]
 r224: [888..889]
 r225: [886..887]
 r226: [880..881]
 r227: [876..879]
 r228: [876..877]
 r229: [874..875]
 r230: [872..873]
 r231: [870..871]
 r232: [862..863]
 r233: [856..861]
 r234: [858..859]
 r235: [856..857]
 r236: [852..855]
 r237: [852..853]
 r238: [850..851]
 r239: [848..849]
 r240: [846..847]
 r241: [842..843]
 r242: [836..841]
 r243: [838..839]
 r244: [836..837]
 r245: [832..835]
 r246: [832..833]
 r247: [830..831]
 r248: [828..829]
 r249: [824..825]
 r250: [816..817]
 r251: [810..815]
 r252: [812..813]
 r253: [810..811]
 r254: [806..809]
 r255: [806..807]
 r256: [804..805]
 r257: [802..803]
 r258: [798..799]
 r259: [794..795]
 r260: [790..793]
 r261: [790..791]
 r262: [788..789]
 r263: [786..787]
 r264: [782..785]
 r265: [774..775]
 r266: [770..773]
 r267: [770..771]
 r268: [768..769]
 r269: [766..767]
 r270: [758..759]
 r271: [756..757]
 r272: [750..755]
 r273: [752..753]
 r274: [750..751]
 r275: [746..749]
 r276: [746..747]
 r277: [744..745]
 r278: [742..743]
 r279: [722..741]
 r280: [738..739]
 r281: [732..737]
 r282: [734..735]
 r283: [732..733]
 r284: [728..731]
 r285: [728..729]
 r286: [726..727]
 r287: [724..725]
 r288: [722..723]
 r289: [716..717]
 r290: [712..715]
 r291: [712..713]
 r292: [710..711]
 r293: [708..709]
 r294: [696..707]
 r295: [704..705]
 r296: [700..703]
 r297: [700..701]
 r298: [698..699]
 r299: [694..697]
 r300: [694..695]
 r301: [690..691]
 r302: [686..689]
 r303: [686..687]
 r304: [684..685]
 r305: [682..683]
 r306: [648..681]
 r307: [678..679]
 r308: [672..677]
 r309: [674..675]
 r310: [672..673]
 r311: [668..671]
 r312: [668..669]
 r313: [666..667]
 r314: [664..665]
 r315: [660..661]
 r316: [648..659]
 r317: [656..657]
 r318: [652..655]
 r319: [652..653]
 r320: [650..651]
 r321: [646..649]
 r322: [646..647]
 r323: [642..643]
 r324: [638..641]
 r325: [638..639]
 r326: [636..637]
 r327: [634..635]
 r328: [600..633]
 r329: [630..631]
 r330: [624..629]
 r331: [626..627]
 r332: [624..625]
 r333: [620..623]
 r334: [620..621]
 r335: [618..619]
 r336: [616..617]
 r337: [612..613]
 r338: [600..611]
 r339: [608..609]
 r340: [604..607]
 r341: [604..605]
 r342: [602..603]
 r343: [598..601]
 r344: [598..599]
 r345: [594..595]
 r346: [590..593]
 r347: [590..591]
 r348: [588..589]
 r349: [586..587]
 r350: [572..585]
 r351: [572..583]
 r352: [580..581]
 r353: [576..579]
 r354: [576..577]
 r355: [574..575]
 r356: [570..573]
 r357: [570..571]
 r358: [552..553]
 r359: [548..551]
 r360: [548..549]
 r361: [546..547]
 r362: [544..545]
 r363: [540..543]
 r364: [536..537]
 r365: [532..535]
 r366: [532..533]
 r367: [530..531]
 r368: [528..529]
 r369: [526..527]
 r370: [520..521]
 r371: [516..519]
 r372: [516..517]
 r373: [514..515]
 r374: [512..513]
 r375: [500..511]
 r376: [508..509]
 r377: [504..507]
 r378: [504..505]
 r379: [502..503]
 r380: [498..501]
 r381: [498..499]
 r382: [494..495]
 r383: [490..493]
 r384: [490..491]
 r385: [488..489]
 r386: [486..487]
 r387: [474..485]
 r388: [482..483]
 r389: [478..481]
 r390: [478..479]
 r391: [476..477]
 r392: [472..475]
 r393: [472..473]
 r394: [468..469]
 r395: [464..467]
 r396: [464..465]
 r397: [462..463]
 r398: [460..461]
 r399: [448..459]
 r400: [456..457]
 r401: [452..455]
 r402: [452..453]
 r403: [450..451]
 r404: [446..449]
 r405: [446..447]
 r406: [442..443]
 r407: [438..441]
 r408: [438..439]
 r409: [436..437]
 r410: [434..435]
 r411: [432..433]
 r412: [324..325]
 r413: [320..323]
 r414: [320..321]
 r415: [318..319]
 r416: [316..317]
 r417: [428..429]
 r418: [424..427]
 r419: [424..425]
 r420: [422..423]
 r421: [420..421]
 r422: [412..413]
 r423: [406..411]
 r424: [408..409]
 r425: [406..407]
 r426: [402..405]
 r427: [402..403]
 r428: [400..401]
 r429: [388..399]
 r430: [396..397]
 r431: [392..395]
 r432: [392..393]
 r433: [390..391]
 r434: [384..389]
 r435: [384..385]
 r436: [380..381]
 r437: [374..379]
 r438: [376..377]
 r439: [374..375]
 r440: [370..373]
 r441: [370..371]
 r442: [368..369]
 r443: [356..367]
 r444: [364..365]
 r445: [360..363]
 r446: [360..361]
 r447: [358..359]
 r448: [352..357]
 r449: [352..353]
 r450: [348..349]
 r451: [344..347]
 r452: [344..345]
 r453: [342..343]
 r454: [330..341]
 r455: [338..339]
 r456: [334..337]
 r457: [334..335]
 r458: [332..333]
 r459: [328..331]
 r460: [328..329]
 r461: [302..303]
 r462: [298..301]
 r463: [298..299]
 r464: [296..297]
 r465: [294..295]
 r466: [284..285]
 r467: [278..283]
 r468: [280..281]
 r469: [278..279]
 r470: [274..277]
 r471: [274..275]
 r472: [272..273]
 r473: [270..271]
 r474: [248..269]
 r475: [266..267]
 r476: [264..265]
 r477: [258..263]
 r478: [260..261]
 r479: [258..259]
 r480: [254..257]
 r481: [254..255]
 r482: [252..253]
 r483: [250..251]
 r484: [248..249]
 r485: [246..247]
 r486: [244..245]
 r487: [238..239]
 r488: [232..237]
 r489: [234..235]
 r490: [232..233]
 r491: [228..231]
 r492: [228..229]
 r493: [226..227]
 r494: [224..225]
 r495: [210..213]
 r496: [210..211]
 r497: [208..209]
 r499: [188..189]
 r500: [186..187]
 r501: [180..185]
 r502: [182..183]
 r503: [180..181]
 r504: [178..179]
 r505: [174..177]
 r506: [164..167]
 r507: [164..165]
 r508: [162..163]
 r509: [158..159]
 r510: [156..157]
 r511: [154..155]
 r512: [144..149]
 r513: [146..147]
 r514: [144..145]
 r515: [142..143]
 r516: [140..141]
 r517: [138..139]
 r518: [128..129]
 r519: [124..127]
 r520: [124..125]
 r521: [122..123]
 r522: [120..121]
 r523: [118..119]
 r524: [104..105]
 r525: [100..103]
 r526: [100..101]
 r527: [98..99]
 r528: [96..97]
 r529: [78..95]
 r530: [92..93]
 r531: [86..91]
 r532: [88..89]
 r533: [86..87]
 r534: [82..85]
 r535: [82..83]
 r536: [80..81]
 r537: [76..79]
 r538: [74..77]
 r539: [70..71]
 r540: [64..69]
 r541: [66..67]
 r542: [64..65]
 r543: [60..63]
 r544: [60..61]
 r545: [58..59]
 r546: [56..57]
 r547: [48..51]
 r548: [48..49]
 r549: [46..47]
 r550: [42..43]
 r551: [36..41]
 r552: [38..39]
 r553: [36..37]
 r554: [32..35]
 r555: [32..33]
 r556: [30..31]
 r557: [28..29]
 r558: [14..15]
 r559: [12..13]
 r560: [10..11]
 r561: [4..5]
 r562: [206..215]
 r563: [160..171]
 r564: [26..73]
 r565: [1188..1189]
 r566: [1266..1267]
 r567: [1204..1267]
 r568: [1204..1205]
 r569: [1208..1209]
 r570: [1048..1049]
 r571: [1186..1187]
 r572: [1080..1187]
 r573: [1080..1081]
 r574: [1084..1085]
 r575: [1046..1047]
 r576: [948..1047]
 r577: [948..949]
 r578: [952..953]
 r579: [558..559]
 r580: [946..947]
 r581: [562..947]
 r582: [562..563]
 r583: [566..567]
 r584: [556..557]
 r585: [308..557]
 r586: [308..309]
 r587: [312..313]
 r588: [0..1]
 r589: [306..307]
 r590: [18..307]
 r591: [18..19]
 r592: [22..23]
 r593: [46..53]
 r594: [1190..1191]
 r595: [1206..1207]
 r596: [1210..1211]
 r597: [1264..1265]
 r598: [1260..1261]
 r599: [1252..1255]
 r600: [1252..1253]
 r601: [1250..1251]
 r602: [1248..1249]
 r603: [1246..1247]
 r604: [1242..1243]
 r605: [1236..1237]
 r606: [1230..1231]
 r607: [1226..1227]
 r608: [1220..1221]
 r609: [1214..1215]
 r610: [1212..1213]
 r611: [1202..1203]
 r612: [1194..1195]
 r613: [1194..1195]
 r614: [1050..1051]
 r615: [1082..1083]
 r616: [1086..1087]
 r617: [1184..1185]
 r618: [1180..1181]
 r619: [1172..1175]
 r620: [1172..1173]
 r621: [1170..1171]
 r622: [1168..1169]
 r623: [1166..1167]
 r624: [1162..1163]
 r625: [1156..1157]
 r626: [1150..1151]
 r627: [1146..1147]
 r628: [1140..1141]
 r629: [1132..1135]
 r630: [1132..1133]
 r631: [1128..1131]
 r632: [1128..1129]
 r633: [1126..1127]
 r634: [1122..1123]
 r635: [1116..1117]
 r636: [1110..1111]
 r637: [1106..1107]
 r638: [1100..1101]
 r639: [1092..1095]
 r640: [1092..1093]
 r641: [1088..1091]
 r642: [1088..1089]
 r643: [1078..1079]
 r644: [1070..1071]
 r645: [1068..1069]
 r646: [1068..1069]
 r647: [1064..1065]
 r648: [1056..1057]
 r649: [1054..1055]
 r650: [1054..1055]
 r651: [950..951]
 r652: [954..955]
 r653: [1044..1045]
 r654: [1040..1041]
 r655: [1034..1035]
 r656: [1032..1033]
 r657: [1028..1029]
 r658: [1024..1025]
 r659: [1018..1019]
 r660: [1016..1017]
 r661: [1014..1015]
 r662: [1010..1011]
 r663: [1004..1005]
 r664: [1004..1005]
 r665: [1002..1003]
 r666: [998..999]
 r667: [992..993]
 r668: [992..993]
 r669: [990..991]
 r670: [986..987]
 r671: [980..981]
 r672: [980..981]
 r673: [978..979]
 r674: [974..975]
 r675: [968..969]
 r676: [968..969]
 r677: [966..967]
 r678: [962..963]
 r679: [956..957]
 r680: [956..957]
 r681: [560..561]
 r682: [564..565]
 r683: [568..569]
 r684: [944..945]
 r685: [940..941]
 r686: [934..935]
 r687: [928..929]
 r688: [926..927]
 r689: [920..921]
 r690: [914..915]
 r691: [908..909]
 r692: [900..901]
 r693: [902..903]
 r694: [898..899]
 r695: [894..895]
 r696: [888..889]
 r697: [884..885]
 r698: [886..887]
 r699: [882..883]
 r700: [878..879]
 r701: [872..873]
 r702: [868..869]
 r703: [870..871]
 r704: [866..867]
 r705: [864..865]
 r706: [860..861]
 r707: [854..855]
 r708: [848..849]
 r709: [844..845]
 r710: [840..841]
 r711: [834..835]
 r712: [826..829]
 r713: [826..827]
 r714: [824..825]
 r715: [822..823]
 r716: [818..819]
 r717: [814..815]
 r718: [808..809]
 r719: [800..803]
 r720: [800..801]
 r721: [780..781]
 r722: [796..797]
 r723: [792..793]
 r724: [786..787]
 r725: [784..785]
 r726: [782..783]
 r727: [778..779]
 r728: [820..821]
 r729: [776..777]
 r730: [772..773]
 r731: [766..767]
 r732: [766..767]
 r733: [764..765]
 r734: [762..763]
 r735: [760..761]
 r736: [754..755]
 r737: [748..749]
 r738: [742..743]
 r739: [740..741]
 r740: [736..737]
 r741: [730..731]
 r742: [724..725]
 r743: [720..721]
 r744: [718..719]
 r745: [714..715]
 r746: [708..709]
 r747: [706..707]
 r748: [702..703]
 r749: [694..695]
 r750: [692..693]
 r751: [688..689]
 r752: [682..683]
 r753: [680..681]
 r754: [676..677]
 r755: [670..671]
 r756: [662..665]
 r757: [662..663]
 r758: [658..659]
 r759: [654..655]
 r760: [646..647]
 r761: [644..645]
 r762: [640..641]
 r763: [634..635]
 r764: [632..633]
 r765: [628..629]
 r766: [622..623]
 r767: [614..617]
 r768: [614..615]
 r769: [610..611]
 r770: [606..607]
 r771: [598..599]
 r772: [596..597]
 r773: [592..593]
 r774: [586..587]
 r775: [584..585]
 r776: [582..583]
 r777: [578..579]
 r778: [570..571]
 r779: [310..311]
 r780: [314..315]
 r781: [554..555]
 r782: [550..551]
 r783: [544..545]
 r784: [542..543]
 r785: [540..541]
 r786: [538..539]
 r787: [534..535]
 r788: [528..529]
 r789: [524..525]
 r790: [526..527]
 r791: [522..523]
 r792: [518..519]
 r793: [512..513]
 r794: [510..511]
 r795: [506..507]
 r796: [498..499]
 r797: [496..497]
 r798: [492..493]
 r799: [486..487]
 r800: [484..485]
 r801: [480..481]
 r802: [472..473]
 r803: [470..471]
 r804: [466..467]
 r805: [460..461]
 r806: [458..459]
 r807: [454..455]
 r808: [446..447]
 r809: [444..445]
 r810: [440..441]
 r811: [434..435]
 r812: [432..433]
 r813: [326..327]
 r814: [322..323]
 r815: [316..317]
 r816: [316..317]
 r817: [430..431]
 r818: [426..427]
 r819: [418..421]
 r820: [418..419]
 r821: [416..417]
 r822: [414..415]
 r823: [410..411]
 r824: [404..405]
 r825: [398..399]
 r826: [394..395]
 r827: [386..389]
 r828: [386..387]
 r829: [384..385]
 r830: [382..383]
 r831: [378..379]
 r832: [372..373]
 r833: [366..367]
 r834: [362..363]
 r835: [354..357]
 r836: [354..355]
 r837: [352..353]
 r838: [350..351]
 r839: [346..347]
 r840: [340..341]
 r841: [336..337]
 r842: [330..331]
 r843: [328..329]
 r844: [2..3]
 r845: [20..21]
 r846: [24..25]
 r847: [304..305]
 r848: [300..301]
 r849: [292..295]
 r850: [292..293]
 r851: [290..291]
 r852: [288..289]
 r853: [286..287]
 r854: [282..283]
 r855: [276..277]
 r856: [270..271]
 r857: [268..269]
 r858: [262..263]
 r859: [256..257]
 r860: [250..251]
 r861: [242..243]
 r862: [244..245]
 r863: [240..241]
 r864: [236..237]
 r865: [230..231]
 r866: [222..225]
 r867: [222..223]
 r868: [220..221]
 r869: [216..217]
 r870: [218..219]
 r871: [218..219]
 r872: [214..215]
 r873: [212..213]
 r874: [204..205]
 r875: [202..203]
 r876: [200..201]
 r877: [198..199]
 r878: [196..197]
 r879: [194..195]
 r880: [190..191]
 r881: [190..191]
 r882: [186..187]
 r883: [184..185]
 r884: [184..185]
 r885: [172..173]
 r886: [168..169]
 r887: [170..171]
 r888: [166..167]
 r889: [152..153]
 r890: [154..155]
 r891: [150..151]
 r892: [150..151]
 r893: [148..149]
 r894: [148..149]
 r895: [142..143]
 r896: [136..137]
 r897: [138..139]
 r898: [134..135]
 r899: [114..115]
 r900: [132..133]
 r901: [132..133]
 r902: [112..113]
 r903: [130..131]
 r904: [126..127]
 r905: [120..121]
 r906: [118..119]
 r907: [110..111]
 r908: [116..117]
 r909: [108..109]
 r910: [106..107]
 r911: [102..103]
 r912: [96..97]
 r913: [94..95]
 r914: [90..91]
 r915: [84..85]
 r916: [74..77]
 r917: [74..75]
 r918: [72..73]
 r919: [68..69]
 r920: [62..63]
 r921: [54..57]
 r922: [54..55]
 r923: [52..53]
 r924: [50..51]
 r925: [44..45]
 r926: [40..41]
 r927: [34..35]
 r928: [26..29]
 r929: [26..27]
 r930: [16..17]
 r931: [8..9]
 r932: [6..7]
 r933: [6..7]
 r934: [192..193]
 r935: [174..175]
 r936: [176..191]

********** Assignment #1: **********

	 Assigning to 936 (cl=SSE_REGS, orig=498, freq=2000, tfirst=934, tfreq=3000)...
	 Assigning to 934 (cl=SSE_REGS, orig=879, freq=3000, tfirst=934, tfreq=3000)...
	   Assign 21 to reload r934 (freq=3000)
	Hard reg 21 is preferable by r936 with profit 1000
	Hard reg 21 is preferable by r935 with profit 500
	 Assigning to 935 (cl=SSE_REGS, orig=498, freq=2000, tfirst=934, tfreq=3000)...
	   Assign 24 to optional reload r935 (freq=2000)
	Hard reg 21 is preferable by r936 with profit 1000
	Hard reg 24 is preferable by r936 with profit 1000
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 0 out of 1 (0.00%)
   Insn after restoring regs:
 1449: r935:SF=r498:SF
      REG_DEAD r498:SF
   Insn after restoring regs:
 1448: r498:SF=r934:SF
      REG_DEAD r934:SF
Remove optional reload reg 935
  Restoring original insn:
 1114: r885:SF=r505:SF*r498:SF
      REG_DEAD r498:SF
      REG_DEAD r505:SF
  Deleting move 1449
 1449: r935:SF=r498:SF
      REG_DEAD r498:SF
deleting insn with uid = 1449.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1114:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=937 from oldreg=498, assigning class SSE_REGS to r937
      Making reload reg 937 for reg 498 optional
 1114: r885:SF=r505:SF*r937:SF
      REG_DEAD r498:SF
      REG_DEAD r505:SF
    Inserting insn reload before:
 1451: r937:SF=r498:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1451:  (0) v  (1) m {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 7 8 9
EBB 10
EBB 91
EBB 11
EBB 90
EBB 12
EBB 89
EBB 13
EBB 14 15
EBB 16 17
EBB 18 19 20
EBB 21
EBB 94
EBB 22
EBB 93
EBB 23
EBB 92
EBB 24
EBB 25 26
EBB 27 28
EBB 96
EBB 29
EBB 95
EBB 30
EBB 31 32
EBB 33 34
EBB 35 36 37 38
EBB 39 40
EBB 41 42 43
EBB 44
EBB 45 46 47
EBB 48
EBB 99
EBB 49
EBB 98
EBB 50
EBB 97
EBB 51
EBB 52 53
EBB 54 55 56
EBB 57 58
EBB 59
EBB 60
EBB 101
EBB 61
EBB 100
EBB 62
EBB 63 64
EBB 65 66
EBB 67 68 69 70
EBB 71 72
EBB 73 74
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=938 from oldreg=498, assigning class SSE_REGS to inheritance r938
    Original reg change 498->938 (bb73):
 1448: r938:SF=r934:SF
      REG_DEAD r934:SF
    Add original<-inheritance after:
 1452: r498:SF=r938:SF

    Inheritance reuse change 498->938 (bb73):
 1451: r937:SF=r938:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1452: r498:SF=r938:SF
deleting insn with uid = 1452.
EBB 75 76
EBB 77 78
EBB 79 80
EBB 81
EBB 82 83
EBB 84
EBB 85
EBB 104
EBB 86
EBB 103
EBB 87
EBB 102
EBB 88

********** Pseudo live ranges #2: **********

  BB 88
   Insn 1344: point = 0, n_alt = -1
  BB 102
   Insn 1439: point = 0, n_alt = -1
  BB 63
   Insn 980: point = 0, n_alt = -1
   Insn 979: point = 0, n_alt = 0
   Insn 978: point = 1, n_alt = 0
   Insn 977: point = 3, n_alt = 0
   Insn 976: point = 4, n_alt = 0
  BB 87
   Insn 1396: point = 4, n_alt = -1
   Insn 1296: point = 4, n_alt = 1
   Insn 1295: point = 4, n_alt = 0
   Insn 1294: point = 4, n_alt = 3
   Insn 1293: point = 4, n_alt = -2
   Insn 1292: point = 5, n_alt = 0
   Insn 1291: point = 7, n_alt = 4
   Insn 1290: point = 8, n_alt = 1
   Insn 1289: point = 10, n_alt = 0
   Insn 1288: point = 12, n_alt = 1
   Insn 1287: point = 14, n_alt = 0
   Insn 1286: point = 16, n_alt = 0
   Insn 1285: point = 18, n_alt = 0
  BB 103
   Insn 1442: point = 19, n_alt = -1
  BB 65
   Insn 990: point = 19, n_alt = -1
   Insn 989: point = 19, n_alt = 0
   Insn 988: point = 20, n_alt = 0
   Insn 987: point = 22, n_alt = 0
   Insn 986: point = 23, n_alt = 0
  BB 86
   Insn 1394: point = 24, n_alt = -1
   Insn 1279: point = 24, n_alt = 1
  BB 104
   Insn 1445: point = 25, n_alt = -1
  BB 67
   Insn 998: point = 26, n_alt = -1
   Insn 997: point = 26, n_alt = 0
   Insn 996: point = 27, n_alt = 0
   Insn 995: point = 29, n_alt = 0
   Insn 994: point = 30, n_alt = 0
  BB 85
   Insn 1392: point = 31, n_alt = -1
   Insn 1273: point = 31, n_alt = 1
  BB 84
   Insn 1270: point = 32, n_alt = 8
   Insn 1269: point = 33, n_alt = 0
   Insn 1268: point = 35, n_alt = 4
   Insn 1267: point = 36, n_alt = 3
   Insn 1266: point = 38, n_alt = 0
   Insn 1265: point = 40, n_alt = 0
   Insn 1264: point = 42, n_alt = 0
   Insn 1263: point = 43, n_alt = 0
   Insn 1262: point = 45, n_alt = 0
   Insn 1261: point = 47, n_alt = 0
   Insn 1260: point = 49, n_alt = 0
   Insn 1259: point = 50, n_alt = 1
   Insn 1258: point = 52, n_alt = 0
   Insn 1257: point = 54, n_alt = 0
  BB 83
   Insn 3: point = 56, n_alt = -2
  BB 82
   Insn 1253: point = 59, n_alt = -1
   Insn 1252: point = 59, n_alt = 0
   Insn 1251: point = 60, n_alt = 0
   Insn 1250: point = 62, n_alt = 0
   Insn 1249: point = 64, n_alt = 0
   Insn 1248: point = 65, n_alt = 1
   Insn 1247: point = 65, n_alt = 0
   Insn 1246: point = 67, n_alt = 0
   Insn 1245: point = 68, n_alt = 1
   Insn 1244: point = 68, n_alt = 7
   Insn 1243: point = 70, n_alt = 0
   Insn 1242: point = 72, n_alt = 4
   Insn 1241: point = 73, n_alt = 3
   Insn 1240: point = 75, n_alt = 0
   Insn 1239: point = 77, n_alt = 0
   Insn 1238: point = 79, n_alt = 0
   Insn 1237: point = 80, n_alt = 0
   Insn 1236: point = 82, n_alt = 0
   Insn 1235: point = 84, n_alt = 0
   Insn 1234: point = 86, n_alt = 0
   Insn 1233: point = 87, n_alt = 1
   Insn 1232: point = 89, n_alt = 0
   Insn 1231: point = 91, n_alt = 0
   Insn 1230: point = 92, n_alt = 7
   Insn 1229: point = 93, n_alt = 8
   Insn 1228: point = 94, n_alt = 0
   Insn 1227: point = 96, n_alt = 4
   Insn 1226: point = 97, n_alt = 1
   Insn 1225: point = 99, n_alt = 3
   Insn 1224: point = 101, n_alt = 0
   Insn 1223: point = 103, n_alt = 0
   Insn 1222: point = 105, n_alt = 0
   Insn 1221: point = 106, n_alt = 0
   Insn 1220: point = 108, n_alt = 0
   Insn 1219: point = 110, n_alt = 0
   Insn 1218: point = 112, n_alt = 0
   Insn 1217: point = 113, n_alt = 1
   Insn 1216: point = 115, n_alt = 0
   Insn 1215: point = 117, n_alt = 0
   Insn 1214: point = 118, n_alt = 7
   Insn 1213: point = 120, n_alt = 4
   Insn 1212: point = 121, n_alt = 3
   Insn 1211: point = 123, n_alt = 0
   Insn 1210: point = 125, n_alt = 0
   Insn 1209: point = 127, n_alt = 0
   Insn 1208: point = 128, n_alt = 0
   Insn 1207: point = 130, n_alt = 0
   Insn 1206: point = 132, n_alt = 0
   Insn 1205: point = 133, n_alt = 8
   Insn 1204: point = 134, n_alt = 7
  BB 80
   Insn 1390: point = 136, n_alt = -1
   Insn 1195: point = 136, n_alt = 8
   Insn 1194: point = 137, n_alt = 7
  BB 78
   Insn 1387: point = 139, n_alt = -1
   Insn 1173: point = 139, n_alt = 8
   Insn 1172: point = 140, n_alt = 7
  BB 76
   Insn 1384: point = 142, n_alt = -1
   Insn 1159: point = 142, n_alt = 8
   Insn 1158: point = 143, n_alt = 7
  BB 81
   Insn 1201: point = 145, n_alt = 8
   Insn 1200: point = 146, n_alt = 7
  BB 79
   Insn 1189: point = 148, n_alt = -1
   Insn 1188: point = 148, n_alt = 1
   Insn 1187: point = 149, n_alt = 7
   Insn 1186: point = 150, n_alt = 7
   Insn 1185: point = 152, n_alt = 4
   Insn 1184: point = 153, n_alt = 3
   Insn 1183: point = 155, n_alt = 0
   Insn 1182: point = 157, n_alt = 0
   Insn 1181: point = 159, n_alt = 0
   Insn 1180: point = 160, n_alt = 0
   Insn 1179: point = 162, n_alt = 0
   Insn 1178: point = 164, n_alt = 0
  BB 77
   Insn 1167: point = 166, n_alt = -1
   Insn 1166: point = 166, n_alt = 1
   Insn 1165: point = 167, n_alt = 7
   Insn 1164: point = 168, n_alt = 7
  BB 75
   Insn 1153: point = 170, n_alt = -1
   Insn 1152: point = 170, n_alt = 1
   Insn 1151: point = 171, n_alt = 7
   Insn 1150: point = 172, n_alt = 8
   Insn 1149: point = 173, n_alt = 1
   Insn 1148: point = 175, n_alt = 7
   Insn 1147: point = 176, n_alt = -2
   Insn 1146: point = 178, n_alt = 2
   Insn 1145: point = 180, n_alt = 7
   Insn 1144: point = 181, n_alt = 1
   Insn 1143: point = 183, n_alt = -2
   Insn 1142: point = 185, n_alt = 1
   Insn 1141: point = 187, n_alt = 7
   Insn 1140: point = 188, n_alt = 7
   Insn 1139: point = 189, n_alt = 1
   Insn 1138: point = 191, n_alt = 7
   Insn 1137: point = 192, n_alt = 7
   Insn 1136: point = 193, n_alt = 8
   Insn 1135: point = 194, n_alt = 1
   Insn 1134: point = 196, n_alt = 7
   Insn 1133: point = 197, n_alt = -2
   Insn 1132: point = 199, n_alt = 1
   Insn 1131: point = 201, n_alt = 1
  BB 74
   Insn 1128: point = 204, n_alt = 7
  BB 73
   Insn 1126: point = 206, n_alt = -1
   Insn 1125: point = 206, n_alt = 0
   Insn 1124: point = 207, n_alt = 0
   Insn 1123: point = 209, n_alt = 0
   Insn 1122: point = 211, n_alt = 0
   Insn 1121: point = 212, n_alt = 1
   Insn 1120: point = 212, n_alt = 0
   Insn 1119: point = 214, n_alt = 0
   Insn 1118: point = 215, n_alt = 1
   Insn 1117: point = 216, n_alt = 7
   Insn 1116: point = 217, n_alt = 7
   Insn 1115: point = 218, n_alt = 8
   Insn 1114: point = 219, n_alt = 1
   Insn 1451: point = 221, n_alt = 7
	   Creating copy r937<-r938@1000
   Insn 1113: point = 223, n_alt = -2
   Insn 1112: point = 224, n_alt = 0
   Insn 1111: point = 224, n_alt = -2
   Insn 1110: point = 225, n_alt = 2
   Insn 1109: point = 227, n_alt = -2
   Insn 1108: point = 229, n_alt = 2
   Insn 1107: point = 231, n_alt = 7
   Insn 1106: point = 232, n_alt = 7
   Insn 1105: point = 233, n_alt = 1
   Insn 1104: point = 235, n_alt = 7
   Insn 1103: point = 236, n_alt = -2
   Insn 1102: point = 238, n_alt = 2
   Insn 1101: point = 240, n_alt = 7
   Insn 1100: point = 241, n_alt = 7
   Insn 1448: point = 242, n_alt = 8
	   Creating copy r934->r938@1000
   Insn 1099: point = 244, n_alt = 2
   Insn 1447: point = 244, n_alt = -2
	Hard reg 21 is preferable by r934 with profit 1000
   Insn 1098: point = 246, n_alt = 7
  BB 72
   Insn 1095: point = 248, n_alt = 8
   Insn 1094: point = 249, n_alt = 7
   Insn 1093: point = 250, n_alt = 8
   Insn 1092: point = 251, n_alt = 7
  BB 71
   Insn 1087: point = 253, n_alt = -1
   Insn 1086: point = 253, n_alt = 1
   Insn 1085: point = 254, n_alt = 7
   Insn 1084: point = 255, n_alt = 8
   Insn 1083: point = 256, n_alt = 7
   Insn 1082: point = 257, n_alt = 8
   Insn 1081: point = 258, n_alt = 7
   Insn 1080: point = 259, n_alt = 8
  BB 70
   Insn 1077: point = 261, n_alt = 7
  BB 69
   Insn 1075: point = 263, n_alt = -1
   Insn 1074: point = 263, n_alt = 0
   Insn 1073: point = 264, n_alt = 0
   Insn 1072: point = 266, n_alt = 0
   Insn 1071: point = 268, n_alt = 0
   Insn 1070: point = 269, n_alt = 1
   Insn 1069: point = 269, n_alt = 0
   Insn 1068: point = 271, n_alt = 0
   Insn 1067: point = 272, n_alt = 1
   Insn 1066: point = 272, n_alt = 7
   Insn 1065: point = 273, n_alt = 8
   Insn 1064: point = 274, n_alt = 2
   Insn 1063: point = 276, n_alt = 7
   Insn 1062: point = 277, n_alt = 7
   Insn 1061: point = 278, n_alt = 8
   Insn 1060: point = 279, n_alt = 7
   Insn 1059: point = 281, n_alt = 0
   Insn 1058: point = 283, n_alt = 4
   Insn 1057: point = 284, n_alt = 3
   Insn 1056: point = 286, n_alt = 0
   Insn 1055: point = 288, n_alt = 0
   Insn 1054: point = 290, n_alt = 0
   Insn 1053: point = 291, n_alt = 0
   Insn 1052: point = 293, n_alt = 0
   Insn 1051: point = 295, n_alt = 0
   Insn 1050: point = 297, n_alt = 0
   Insn 1049: point = 298, n_alt = 1
   Insn 1048: point = 300, n_alt = 0
   Insn 1047: point = 302, n_alt = 0
   Insn 1046: point = 303, n_alt = 8
   Insn 1045: point = 304, n_alt = 1
   Insn 1044: point = 306, n_alt = 7
   Insn 1043: point = 307, n_alt = -2
   Insn 1042: point = 309, n_alt = 1
   Insn 1041: point = 311, n_alt = 7
   Insn 1040: point = 313, n_alt = 4
   Insn 1039: point = 314, n_alt = 3
   Insn 1038: point = 316, n_alt = 0
   Insn 1037: point = 318, n_alt = 0
   Insn 1036: point = 320, n_alt = 0
   Insn 1035: point = 321, n_alt = 0
   Insn 1034: point = 323, n_alt = 0
   Insn 1033: point = 325, n_alt = 0
   Insn 1032: point = 327, n_alt = 0
   Insn 1031: point = 328, n_alt = 1
   Insn 1030: point = 330, n_alt = 0
   Insn 1029: point = 332, n_alt = 0
   Insn 1028: point = 334, n_alt = 0
   Insn 1027: point = 335, n_alt = 7
   Insn 1026: point = 337, n_alt = 4
   Insn 1025: point = 338, n_alt = 3
   Insn 1024: point = 340, n_alt = 0
   Insn 1023: point = 342, n_alt = 0
   Insn 1022: point = 344, n_alt = 0
   Insn 1021: point = 345, n_alt = 0
   Insn 1020: point = 347, n_alt = 0
   Insn 1019: point = 349, n_alt = 0
   Insn 1018: point = 351, n_alt = 0
   Insn 1017: point = 352, n_alt = 1
   Insn 1016: point = 354, n_alt = 0
   Insn 1015: point = 356, n_alt = 0
  BB 68
   Insn 1013: point = 358, n_alt = -1
   Insn 1012: point = 358, n_alt = 1
   Insn 1011: point = 359, n_alt = 0
   Insn 1010: point = 360, n_alt = 1
   Insn 1009: point = 361, n_alt = 0
   Insn 1008: point = 363, n_alt = 0
   Insn 1007: point = 365, n_alt = 4
   Insn 1006: point = 366, n_alt = 3
   Insn 1005: point = 368, n_alt = 0
   Insn 1004: point = 370, n_alt = 0
   Insn 1003: point = 372, n_alt = 0
   Insn 1002: point = 373, n_alt = 0
   Insn 1001: point = 375, n_alt = 0
   Insn 1000: point = 377, n_alt = 0
  BB 66
   Insn 992: point = 379, n_alt = 1
  BB 64
   Insn 984: point = 380, n_alt = 1
   Insn 983: point = 381, n_alt = 0
   Insn 982: point = 382, n_alt = 0
  BB 62
   Insn 974: point = 383, n_alt = 1
   Insn 973: point = 383, n_alt = 0
   Insn 972: point = 383, n_alt = 3
   Insn 971: point = 383, n_alt = 2
   Insn 970: point = 383, n_alt = 4
   Insn 969: point = 383, n_alt = 4
   Insn 968: point = 383, n_alt = 0
   Insn 967: point = 383, n_alt = 0
   Insn 966: point = 383, n_alt = 3
   Insn 965: point = 383, n_alt = 4
   Insn 964: point = 383, n_alt = 4
   Insn 963: point = 383, n_alt = 4
   Insn 962: point = 383, n_alt = 4
   Insn 961: point = 383, n_alt = 4
   Insn 960: point = 383, n_alt = 2
   Insn 959: point = 383, n_alt = 0
   Insn 958: point = 383, n_alt = 0
   Insn 957: point = 383, n_alt = 0
   Insn 956: point = 383, n_alt = 3
   Insn 955: point = 383, n_alt = 4
   Insn 954: point = 383, n_alt = 2
   Insn 953: point = 383, n_alt = 2
   Insn 952: point = 383, n_alt = 2
   Insn 951: point = 383, n_alt = 2
   Insn 950: point = 383, n_alt = 0
   Insn 949: point = 383, n_alt = 3
   Insn 948: point = 383, n_alt = 2
   Insn 947: point = 383, n_alt = 4
   Insn 946: point = 383, n_alt = 4
   Insn 945: point = 383, n_alt = 0
   Insn 944: point = 383, n_alt = 3
   Insn 943: point = 383, n_alt = 2
   Insn 942: point = 383, n_alt = 4
   Insn 941: point = 383, n_alt = 4
   Insn 940: point = 383, n_alt = 0
   Insn 939: point = 383, n_alt = 3
   Insn 938: point = 383, n_alt = 2
   Insn 937: point = 383, n_alt = 4
   Insn 936: point = 383, n_alt = 4
  BB 100
   Insn 1433: point = 383, n_alt = -1
  BB 52
   Insn 719: point = 383, n_alt = -1
   Insn 718: point = 383, n_alt = 0
   Insn 717: point = 384, n_alt = 0
   Insn 716: point = 386, n_alt = 0
   Insn 715: point = 387, n_alt = 0
  BB 61
   Insn 1381: point = 388, n_alt = -1
   Insn 930: point = 388, n_alt = 1
  BB 101
   Insn 1436: point = 389, n_alt = -1
  BB 54
   Insn 727: point = 390, n_alt = -1
   Insn 726: point = 390, n_alt = 0
   Insn 725: point = 391, n_alt = 0
   Insn 724: point = 393, n_alt = 0
   Insn 723: point = 394, n_alt = 0
  BB 60
   Insn 1379: point = 395, n_alt = -1
   Insn 924: point = 395, n_alt = 1
  BB 58
   Insn 1377: point = 396, n_alt = -1
   Insn 842: point = 396, n_alt = 8
   Insn 841: point = 397, n_alt = 7
   Insn 840: point = 398, n_alt = 4
   Insn 839: point = 399, n_alt = 3
   Insn 838: point = 401, n_alt = 0
   Insn 837: point = 403, n_alt = 1
   Insn 836: point = 405, n_alt = 0
   Insn 835: point = 406, n_alt = 0
   Insn 834: point = 408, n_alt = 1
   Insn 833: point = 410, n_alt = 0
  BB 59
   Insn 921: point = 412, n_alt = 8
   Insn 920: point = 413, n_alt = 4
   Insn 919: point = 414, n_alt = 7
   Insn 918: point = 416, n_alt = 4
   Insn 917: point = 417, n_alt = 3
   Insn 916: point = 419, n_alt = 0
   Insn 915: point = 421, n_alt = 1
   Insn 914: point = 423, n_alt = 0
   Insn 913: point = 424, n_alt = 0
   Insn 912: point = 426, n_alt = 1
   Insn 911: point = 428, n_alt = 0
   Insn 910: point = 429, n_alt = 3
   Insn 909: point = 431, n_alt = 0
   Insn 908: point = 433, n_alt = 1
   Insn 907: point = 435, n_alt = 0
   Insn 906: point = 436, n_alt = 0
   Insn 905: point = 438, n_alt = 1
   Insn 904: point = 440, n_alt = 0
   Insn 903: point = 441, n_alt = 8
   Insn 902: point = 442, n_alt = 4
   Insn 901: point = 443, n_alt = 7
   Insn 900: point = 445, n_alt = 0
   Insn 899: point = 447, n_alt = 4
   Insn 898: point = 448, n_alt = 3
   Insn 897: point = 450, n_alt = 0
   Insn 896: point = 452, n_alt = 1
   Insn 895: point = 454, n_alt = 0
   Insn 894: point = 455, n_alt = 0
   Insn 893: point = 457, n_alt = 1
   Insn 892: point = 459, n_alt = 0
   Insn 891: point = 460, n_alt = 3
   Insn 890: point = 462, n_alt = 0
   Insn 889: point = 464, n_alt = 1
   Insn 888: point = 466, n_alt = 0
   Insn 887: point = 467, n_alt = 0
   Insn 886: point = 469, n_alt = 0
   Insn 885: point = 471, n_alt = 1
   Insn 884: point = 473, n_alt = 0
   Insn 883: point = 474, n_alt = 1
   Insn 882: point = 476, n_alt = 1
   Insn 881: point = 478, n_alt = 0
   Insn 880: point = 479, n_alt = 8
   Insn 879: point = 480, n_alt = 4
   Insn 878: point = 481, n_alt = 7
   Insn 877: point = 483, n_alt = 0
   Insn 876: point = 485, n_alt = 4
   Insn 875: point = 486, n_alt = 3
   Insn 874: point = 488, n_alt = 0
   Insn 873: point = 490, n_alt = 1
   Insn 872: point = 492, n_alt = 0
   Insn 871: point = 493, n_alt = 0
   Insn 870: point = 495, n_alt = 1
   Insn 869: point = 497, n_alt = 0
   Insn 868: point = 498, n_alt = 3
   Insn 867: point = 500, n_alt = 0
   Insn 866: point = 502, n_alt = 1
   Insn 865: point = 504, n_alt = 0
   Insn 864: point = 505, n_alt = 0
   Insn 863: point = 507, n_alt = 0
   Insn 862: point = 509, n_alt = 1
   Insn 861: point = 511, n_alt = 0
   Insn 860: point = 512, n_alt = 1
   Insn 859: point = 514, n_alt = 1
   Insn 858: point = 516, n_alt = 0
   Insn 857: point = 517, n_alt = 1
   Insn 856: point = 518, n_alt = 0
   Insn 855: point = 520, n_alt = 0
   Insn 854: point = 522, n_alt = 4
   Insn 853: point = 523, n_alt = 3
   Insn 852: point = 525, n_alt = 0
   Insn 851: point = 527, n_alt = 1
   Insn 850: point = 529, n_alt = 0
   Insn 849: point = 530, n_alt = 0
   Insn 848: point = 532, n_alt = 1
   Insn 847: point = 534, n_alt = 0
  BB 57
   Insn 828: point = 536, n_alt = -1
   Insn 827: point = 536, n_alt = 1
   Insn 826: point = 537, n_alt = 7
   Insn 825: point = 538, n_alt = 7
   Insn 824: point = 540, n_alt = 4
   Insn 823: point = 541, n_alt = 3
   Insn 822: point = 543, n_alt = 0
   Insn 821: point = 545, n_alt = 1
   Insn 820: point = 547, n_alt = 0
   Insn 819: point = 548, n_alt = 0
   Insn 818: point = 550, n_alt = 1
   Insn 817: point = 552, n_alt = 0
   Insn 816: point = 553, n_alt = 8
   Insn 815: point = 554, n_alt = 4
   Insn 814: point = 555, n_alt = 1
   Insn 813: point = 557, n_alt = 3
   Insn 812: point = 559, n_alt = 0
   Insn 811: point = 561, n_alt = 1
   Insn 810: point = 563, n_alt = 0
   Insn 809: point = 564, n_alt = 0
   Insn 808: point = 566, n_alt = 1
   Insn 807: point = 568, n_alt = 0
   Insn 806: point = 569, n_alt = 7
   Insn 805: point = 571, n_alt = 4
   Insn 804: point = 572, n_alt = 3
   Insn 803: point = 574, n_alt = 0
   Insn 802: point = 576, n_alt = 1
   Insn 801: point = 578, n_alt = 0
   Insn 800: point = 579, n_alt = 0
   Insn 799: point = 581, n_alt = 1
   Insn 798: point = 583, n_alt = 0
   Insn 797: point = 584, n_alt = 8
   Insn 796: point = 585, n_alt = 4
   Insn 795: point = 586, n_alt = 1
   Insn 794: point = 588, n_alt = 3
   Insn 793: point = 590, n_alt = 0
   Insn 792: point = 592, n_alt = 1
   Insn 791: point = 594, n_alt = 0
   Insn 790: point = 595, n_alt = 0
   Insn 789: point = 597, n_alt = 1
   Insn 788: point = 599, n_alt = 0
   Insn 787: point = 600, n_alt = 7
   Insn 786: point = 602, n_alt = 4
   Insn 785: point = 603, n_alt = 3
   Insn 784: point = 605, n_alt = 0
   Insn 783: point = 607, n_alt = 1
   Insn 782: point = 609, n_alt = 0
   Insn 781: point = 610, n_alt = 0
   Insn 780: point = 612, n_alt = 1
   Insn 779: point = 614, n_alt = 0
   Insn 778: point = 615, n_alt = 8
   Insn 777: point = 616, n_alt = 4
   Insn 776: point = 617, n_alt = 1
   Insn 775: point = 619, n_alt = 3
   Insn 774: point = 621, n_alt = 0
   Insn 773: point = 623, n_alt = 1
   Insn 772: point = 625, n_alt = 0
   Insn 771: point = 626, n_alt = 0
   Insn 770: point = 628, n_alt = 1
   Insn 769: point = 630, n_alt = 0
   Insn 768: point = 631, n_alt = 7
   Insn 767: point = 633, n_alt = 4
   Insn 766: point = 634, n_alt = 3
   Insn 765: point = 636, n_alt = 0
   Insn 764: point = 638, n_alt = 1
   Insn 763: point = 640, n_alt = 0
   Insn 762: point = 641, n_alt = 0
   Insn 761: point = 643, n_alt = 1
   Insn 760: point = 645, n_alt = 0
   Insn 759: point = 646, n_alt = 8
   Insn 758: point = 647, n_alt = 2
   Insn 757: point = 649, n_alt = 7
   Insn 756: point = 650, n_alt = 7
   Insn 755: point = 652, n_alt = 4
   Insn 754: point = 653, n_alt = 3
   Insn 753: point = 655, n_alt = 0
   Insn 752: point = 657, n_alt = 1
   Insn 751: point = 659, n_alt = 0
   Insn 750: point = 660, n_alt = 0
   Insn 749: point = 662, n_alt = 1
   Insn 748: point = 664, n_alt = 0
  BB 56
   Insn 743: point = 666, n_alt = -1
   Insn 742: point = 666, n_alt = 1
   Insn 741: point = 667, n_alt = 7
  BB 55
   Insn 740: point = 669, n_alt = -1
   Insn 739: point = 669, n_alt = 1
   Insn 738: point = 670, n_alt = 7
   Insn 737: point = 671, n_alt = 7
   Insn 736: point = 673, n_alt = 4
   Insn 735: point = 674, n_alt = 3
   Insn 734: point = 676, n_alt = 0
   Insn 733: point = 678, n_alt = 1
   Insn 732: point = 680, n_alt = 0
   Insn 731: point = 681, n_alt = 0
   Insn 730: point = 683, n_alt = 1
   Insn 729: point = 685, n_alt = 0
  BB 53
   Insn 721: point = 687, n_alt = 1
  BB 51
   Insn 713: point = 688, n_alt = 1
   Insn 712: point = 689, n_alt = 0
   Insn 711: point = 690, n_alt = 0
  BB 97
   Insn 1424: point = 691, n_alt = -1
  BB 31
   Insn 351: point = 691, n_alt = -1
   Insn 350: point = 691, n_alt = 0
   Insn 349: point = 692, n_alt = 0
   Insn 348: point = 694, n_alt = 0
   Insn 347: point = 695, n_alt = 0
  BB 50
   Insn 1374: point = 695, n_alt = -1
   Insn 705: point = 695, n_alt = 1
  BB 98
   Insn 1427: point = 695, n_alt = -1
  BB 33
   Insn 361: point = 695, n_alt = -1
   Insn 360: point = 695, n_alt = 0
   Insn 359: point = 696, n_alt = 0
   Insn 358: point = 698, n_alt = 0
   Insn 357: point = 699, n_alt = 0
  BB 49
   Insn 1372: point = 700, n_alt = -1
   Insn 699: point = 700, n_alt = 1
  BB 99
   Insn 1430: point = 701, n_alt = -1
  BB 35
   Insn 369: point = 702, n_alt = -1
   Insn 368: point = 702, n_alt = 0
   Insn 367: point = 703, n_alt = 0
   Insn 366: point = 705, n_alt = 0
   Insn 365: point = 706, n_alt = 0
  BB 48
   Insn 1370: point = 707, n_alt = -1
   Insn 693: point = 707, n_alt = 1
  BB 47
   Insn 690: point = 708, n_alt = 8
   Insn 689: point = 709, n_alt = 4
   Insn 688: point = 710, n_alt = 1
   Insn 687: point = 712, n_alt = 3
   Insn 686: point = 714, n_alt = 0
   Insn 685: point = 716, n_alt = 1
   Insn 684: point = 718, n_alt = 0
   Insn 683: point = 719, n_alt = 0
   Insn 682: point = 721, n_alt = 1
   Insn 681: point = 723, n_alt = 0
   Insn 680: point = 724, n_alt = 1
   Insn 679: point = 726, n_alt = 7
   Insn 678: point = 727, n_alt = 7
   Insn 677: point = 729, n_alt = 4
   Insn 676: point = 730, n_alt = 3
   Insn 675: point = 732, n_alt = 0
   Insn 674: point = 734, n_alt = 1
   Insn 673: point = 736, n_alt = 0
   Insn 672: point = 737, n_alt = 0
   Insn 671: point = 739, n_alt = 1
   Insn 670: point = 741, n_alt = 0
   Insn 669: point = 742, n_alt = 8
   Insn 668: point = 743, n_alt = 4
   Insn 667: point = 744, n_alt = 1
   Insn 666: point = 746, n_alt = 3
   Insn 665: point = 748, n_alt = 0
   Insn 664: point = 750, n_alt = 1
   Insn 663: point = 752, n_alt = 0
   Insn 662: point = 753, n_alt = 0
   Insn 661: point = 755, n_alt = 1
   Insn 660: point = 757, n_alt = 0
   Insn 659: point = 758, n_alt = 1
   Insn 658: point = 760, n_alt = 7
   Insn 657: point = 762, n_alt = 0
   Insn 656: point = 764, n_alt = 4
   Insn 655: point = 765, n_alt = 3
   Insn 654: point = 767, n_alt = 0
   Insn 653: point = 769, n_alt = 1
   Insn 652: point = 771, n_alt = 0
   Insn 651: point = 772, n_alt = 0
   Insn 650: point = 774, n_alt = 0
   Insn 649: point = 776, n_alt = 1
   Insn 648: point = 778, n_alt = 0
   Insn 647: point = 779, n_alt = 1
   Insn 646: point = 781, n_alt = 1
   Insn 645: point = 783, n_alt = 0
   Insn 644: point = 784, n_alt = 7
   Insn 643: point = 786, n_alt = 4
   Insn 642: point = 787, n_alt = 3
   Insn 641: point = 789, n_alt = 0
   Insn 640: point = 791, n_alt = 1
   Insn 639: point = 793, n_alt = 0
   Insn 638: point = 794, n_alt = 0
   Insn 637: point = 796, n_alt = 1
   Insn 636: point = 798, n_alt = 0
   Insn 635: point = 799, n_alt = 8
   Insn 634: point = 800, n_alt = 4
   Insn 633: point = 801, n_alt = 1
   Insn 632: point = 803, n_alt = 3
   Insn 631: point = 805, n_alt = 0
   Insn 630: point = 807, n_alt = 1
   Insn 629: point = 809, n_alt = 0
   Insn 628: point = 810, n_alt = 0
   Insn 627: point = 812, n_alt = 1
   Insn 626: point = 814, n_alt = 0
   Insn 625: point = 815, n_alt = 1
   Insn 624: point = 817, n_alt = 7
   Insn 623: point = 819, n_alt = 0
   Insn 622: point = 821, n_alt = 4
   Insn 621: point = 822, n_alt = 3
   Insn 620: point = 824, n_alt = 0
   Insn 619: point = 826, n_alt = 1
   Insn 618: point = 828, n_alt = 0
   Insn 617: point = 829, n_alt = 0
   Insn 616: point = 831, n_alt = 0
   Insn 615: point = 833, n_alt = 1
   Insn 614: point = 835, n_alt = 0
   Insn 613: point = 836, n_alt = 1
   Insn 612: point = 838, n_alt = 1
   Insn 611: point = 840, n_alt = 0
   Insn 610: point = 841, n_alt = 7
   Insn 609: point = 843, n_alt = 4
   Insn 608: point = 844, n_alt = 3
   Insn 607: point = 846, n_alt = 0
   Insn 606: point = 848, n_alt = 1
   Insn 605: point = 850, n_alt = 0
   Insn 604: point = 851, n_alt = 0
   Insn 603: point = 853, n_alt = 1
   Insn 602: point = 855, n_alt = 0
   Insn 601: point = 856, n_alt = 8
   Insn 600: point = 857, n_alt = 4
   Insn 599: point = 858, n_alt = 1
   Insn 598: point = 860, n_alt = 3
   Insn 597: point = 862, n_alt = 0
   Insn 596: point = 864, n_alt = 1
   Insn 595: point = 866, n_alt = 0
   Insn 594: point = 867, n_alt = 0
   Insn 593: point = 869, n_alt = 1
   Insn 592: point = 871, n_alt = 0
   Insn 591: point = 872, n_alt = 7
   Insn 590: point = 874, n_alt = 4
   Insn 589: point = 875, n_alt = 3
   Insn 588: point = 877, n_alt = 0
   Insn 587: point = 879, n_alt = 1
   Insn 586: point = 881, n_alt = 0
   Insn 585: point = 882, n_alt = 0
   Insn 584: point = 884, n_alt = 1
   Insn 583: point = 886, n_alt = 0
   Insn 582: point = 887, n_alt = 8
   Insn 581: point = 888, n_alt = 2
   Insn 580: point = 890, n_alt = 7
   Insn 579: point = 892, n_alt = 4
   Insn 578: point = 893, n_alt = 3
   Insn 577: point = 895, n_alt = 0
   Insn 576: point = 897, n_alt = 1
   Insn 575: point = 899, n_alt = 0
   Insn 574: point = 900, n_alt = 0
   Insn 573: point = 902, n_alt = 0
   Insn 572: point = 904, n_alt = 1
   Insn 571: point = 906, n_alt = 0
   Insn 570: point = 907, n_alt = 1
   Insn 569: point = 909, n_alt = 1
   Insn 568: point = 911, n_alt = 0
   Insn 567: point = 912, n_alt = 7
   Insn 566: point = 914, n_alt = 4
   Insn 565: point = 915, n_alt = 3
   Insn 564: point = 917, n_alt = 0
   Insn 563: point = 919, n_alt = 1
   Insn 562: point = 921, n_alt = 0
   Insn 561: point = 922, n_alt = 0
   Insn 560: point = 924, n_alt = 0
   Insn 559: point = 926, n_alt = 1
   Insn 558: point = 928, n_alt = 0
   Insn 557: point = 929, n_alt = 1
   Insn 556: point = 931, n_alt = 1
   Insn 555: point = 933, n_alt = 0
   Insn 554: point = 935, n_alt = 0
  BB 46
   Insn 549: point = 937, n_alt = -1
   Insn 548: point = 937, n_alt = 1
   Insn 547: point = 938, n_alt = 7
  BB 45
   Insn 542: point = 940, n_alt = -1
   Insn 541: point = 940, n_alt = 1
   Insn 540: point = 941, n_alt = 7
   Insn 539: point = 942, n_alt = 8
   Insn 538: point = 943, n_alt = 7
   Insn 537: point = 944, n_alt = 4
   Insn 536: point = 945, n_alt = 3
   Insn 535: point = 947, n_alt = 0
   Insn 534: point = 949, n_alt = 1
   Insn 533: point = 951, n_alt = 0
   Insn 532: point = 952, n_alt = 0
   Insn 531: point = 954, n_alt = 1
   Insn 530: point = 956, n_alt = 0
  BB 43
   Insn 1368: point = 958, n_alt = -1
   Insn 521: point = 958, n_alt = 8
   Insn 520: point = 959, n_alt = 7
  BB 40
   Insn 1366: point = 961, n_alt = -1
   Insn 496: point = 961, n_alt = 8
   Insn 495: point = 962, n_alt = 7
  BB 42
   Insn 515: point = 964, n_alt = -1
   Insn 514: point = 964, n_alt = 1
   Insn 513: point = 965, n_alt = 7
  BB 41
   Insn 512: point = 967, n_alt = -1
   Insn 511: point = 967, n_alt = 1
   Insn 510: point = 968, n_alt = 7
   Insn 509: point = 969, n_alt = 7
   Insn 508: point = 971, n_alt = 4
   Insn 507: point = 972, n_alt = 3
   Insn 506: point = 974, n_alt = 0
   Insn 505: point = 976, n_alt = 1
   Insn 504: point = 978, n_alt = 0
   Insn 503: point = 979, n_alt = 0
   Insn 502: point = 981, n_alt = 1
   Insn 501: point = 983, n_alt = 0
  BB 39
   Insn 490: point = 985, n_alt = -1
   Insn 489: point = 985, n_alt = 1
   Insn 488: point = 986, n_alt = 7
   Insn 487: point = 988, n_alt = 0
   Insn 486: point = 990, n_alt = 4
   Insn 485: point = 991, n_alt = 3
   Insn 484: point = 993, n_alt = 0
   Insn 483: point = 995, n_alt = 1
   Insn 482: point = 997, n_alt = 0
   Insn 481: point = 998, n_alt = 0
   Insn 480: point = 1000, n_alt = 0
   Insn 479: point = 1002, n_alt = 1
   Insn 478: point = 1004, n_alt = 0
   Insn 477: point = 1005, n_alt = 1
   Insn 476: point = 1007, n_alt = 1
   Insn 475: point = 1009, n_alt = 0
  BB 44
   Insn 527: point = 1011, n_alt = 8
   Insn 526: point = 1012, n_alt = 7
  BB 38
   Insn 1363: point = 1014, n_alt = -1
   Insn 470: point = 1014, n_alt = 8
   Insn 469: point = 1015, n_alt = 7
  BB 37
   Insn 464: point = 1017, n_alt = -1
   Insn 463: point = 1017, n_alt = 1
   Insn 462: point = 1018, n_alt = 7
   Insn 461: point = 1019, n_alt = 7
   Insn 460: point = 1021, n_alt = 0
   Insn 459: point = 1023, n_alt = 4
   Insn 458: point = 1024, n_alt = 3
   Insn 457: point = 1026, n_alt = 0
   Insn 456: point = 1028, n_alt = 1
   Insn 455: point = 1030, n_alt = 0
   Insn 454: point = 1031, n_alt = 0
   Insn 453: point = 1033, n_alt = 0
   Insn 452: point = 1035, n_alt = 1
   Insn 451: point = 1037, n_alt = 0
   Insn 450: point = 1038, n_alt = 1
   Insn 449: point = 1040, n_alt = 1
   Insn 448: point = 1042, n_alt = 0
  BB 36
   Insn 443: point = 1044, n_alt = -1
   Insn 442: point = 1044, n_alt = 1
   Insn 441: point = 1045, n_alt = 7
   Insn 440: point = 1047, n_alt = 4
   Insn 439: point = 1048, n_alt = 3
   Insn 438: point = 1050, n_alt = 0
   Insn 437: point = 1052, n_alt = 1
   Insn 436: point = 1054, n_alt = 0
   Insn 435: point = 1055, n_alt = 0
   Insn 434: point = 1057, n_alt = 0
   Insn 433: point = 1059, n_alt = 1
   Insn 432: point = 1061, n_alt = 0
   Insn 431: point = 1062, n_alt = 1
   Insn 430: point = 1064, n_alt = 1
   Insn 429: point = 1066, n_alt = 0
   Insn 428: point = 1067, n_alt = 8
   Insn 427: point = 1068, n_alt = 7
   Insn 426: point = 1069, n_alt = 8
   Insn 425: point = 1070, n_alt = 1
   Insn 424: point = 1072, n_alt = 7
   Insn 423: point = 1073, n_alt = 7
   Insn 422: point = 1075, n_alt = 4
   Insn 421: point = 1076, n_alt = 3
   Insn 420: point = 1078, n_alt = 0
   Insn 419: point = 1080, n_alt = 1
   Insn 418: point = 1082, n_alt = 0
   Insn 417: point = 1083, n_alt = 0
   Insn 416: point = 1085, n_alt = 1
   Insn 415: point = 1087, n_alt = 0
   Insn 414: point = 1088, n_alt = 8
   Insn 413: point = 1089, n_alt = 2
   Insn 412: point = 1091, n_alt = 7
   Insn 411: point = 1092, n_alt = 7
   Insn 410: point = 1094, n_alt = 4
   Insn 409: point = 1095, n_alt = 3
   Insn 408: point = 1097, n_alt = 0
   Insn 407: point = 1099, n_alt = 1
   Insn 406: point = 1101, n_alt = 0
   Insn 405: point = 1102, n_alt = 0
   Insn 404: point = 1104, n_alt = 1
   Insn 403: point = 1106, n_alt = 0
   Insn 402: point = 1107, n_alt = 8
   Insn 401: point = 1108, n_alt = 1
   Insn 400: point = 1110, n_alt = 7
   Insn 399: point = 1111, n_alt = -2
   Insn 398: point = 1113, n_alt = 1
   Insn 397: point = 1115, n_alt = 7
   Insn 396: point = 1117, n_alt = 4
   Insn 395: point = 1118, n_alt = 3
   Insn 394: point = 1120, n_alt = 0
   Insn 393: point = 1122, n_alt = 1
   Insn 392: point = 1124, n_alt = 0
   Insn 391: point = 1125, n_alt = 0
   Insn 390: point = 1127, n_alt = 0
   Insn 389: point = 1129, n_alt = 1
   Insn 388: point = 1131, n_alt = 0
   Insn 387: point = 1132, n_alt = 1
   Insn 386: point = 1134, n_alt = 1
   Insn 385: point = 1136, n_alt = 0
   Insn 384: point = 1138, n_alt = 0
   Insn 383: point = 1139, n_alt = 7
   Insn 382: point = 1141, n_alt = 4
   Insn 381: point = 1142, n_alt = 3
   Insn 380: point = 1144, n_alt = 0
   Insn 379: point = 1146, n_alt = 1
   Insn 378: point = 1148, n_alt = 0
   Insn 377: point = 1149, n_alt = 0
   Insn 376: point = 1151, n_alt = 0
   Insn 375: point = 1153, n_alt = 1
   Insn 374: point = 1155, n_alt = 0
   Insn 373: point = 1156, n_alt = 1
   Insn 372: point = 1158, n_alt = 1
   Insn 371: point = 1160, n_alt = 0
  BB 34
   Insn 363: point = 1162, n_alt = 1
  BB 32
   Insn 355: point = 1163, n_alt = 1
   Insn 354: point = 1164, n_alt = 0
   Insn 353: point = 1165, n_alt = 0
  BB 30
   Insn 345: point = 1166, n_alt = 1
  BB 95
   Insn 1418: point = 1166, n_alt = -1
  BB 25
   Insn 250: point = 1166, n_alt = -1
   Insn 249: point = 1166, n_alt = 0
   Insn 248: point = 1167, n_alt = 0
   Insn 247: point = 1169, n_alt = 0
   Insn 246: point = 1170, n_alt = 0
  BB 29
   Insn 1359: point = 1171, n_alt = -1
   Insn 339: point = 1171, n_alt = 1
  BB 96
   Insn 1421: point = 1172, n_alt = -1
  BB 27
   Insn 258: point = 1173, n_alt = -1
   Insn 257: point = 1173, n_alt = 0
   Insn 256: point = 1174, n_alt = 0
   Insn 255: point = 1176, n_alt = 0
   Insn 254: point = 1177, n_alt = 0
  BB 28
   Insn 1357: point = 1178, n_alt = -1
   Insn 333: point = 1178, n_alt = 1
   Insn 332: point = 1178, n_alt = 8
   Insn 331: point = 1179, n_alt = 7
   Insn 330: point = 1180, n_alt = 4
   Insn 329: point = 1181, n_alt = 3
   Insn 328: point = 1183, n_alt = 0
   Insn 327: point = 1185, n_alt = 1
   Insn 326: point = 1187, n_alt = 0
   Insn 325: point = 1188, n_alt = 0
   Insn 324: point = 1190, n_alt = 1
   Insn 323: point = 1192, n_alt = 0
   Insn 322: point = 1193, n_alt = 8
   Insn 321: point = 1194, n_alt = 7
   Insn 320: point = 1195, n_alt = 4
   Insn 319: point = 1196, n_alt = 3
   Insn 318: point = 1198, n_alt = 0
   Insn 317: point = 1200, n_alt = 1
   Insn 316: point = 1202, n_alt = 0
   Insn 315: point = 1203, n_alt = 0
   Insn 314: point = 1205, n_alt = 1
   Insn 313: point = 1207, n_alt = 0
   Insn 312: point = 1208, n_alt = 8
   Insn 311: point = 1209, n_alt = 7
   Insn 310: point = 1210, n_alt = 4
   Insn 309: point = 1211, n_alt = 3
   Insn 308: point = 1213, n_alt = 0
   Insn 307: point = 1215, n_alt = 1
   Insn 306: point = 1217, n_alt = 0
   Insn 305: point = 1218, n_alt = 0
   Insn 304: point = 1220, n_alt = 1
   Insn 303: point = 1222, n_alt = 0
   Insn 302: point = 1223, n_alt = 8
   Insn 301: point = 1224, n_alt = 7
   Insn 300: point = 1225, n_alt = 4
   Insn 299: point = 1226, n_alt = 3
   Insn 298: point = 1228, n_alt = 0
   Insn 297: point = 1230, n_alt = 1
   Insn 296: point = 1232, n_alt = 0
   Insn 295: point = 1233, n_alt = 0
   Insn 294: point = 1235, n_alt = 1
   Insn 293: point = 1237, n_alt = 0
   Insn 292: point = 1238, n_alt = 8
   Insn 291: point = 1239, n_alt = 7
   Insn 290: point = 1240, n_alt = 4
   Insn 289: point = 1241, n_alt = 3
   Insn 288: point = 1243, n_alt = 0
   Insn 287: point = 1245, n_alt = 1
   Insn 286: point = 1247, n_alt = 0
   Insn 285: point = 1248, n_alt = 0
   Insn 284: point = 1250, n_alt = 1
   Insn 283: point = 1252, n_alt = 0
   Insn 282: point = 1253, n_alt = 8
   Insn 281: point = 1254, n_alt = 4
   Insn 280: point = 1255, n_alt = 2
   Insn 279: point = 1257, n_alt = 7
   Insn 278: point = 1258, n_alt = 3
   Insn 277: point = 1260, n_alt = 0
   Insn 276: point = 1262, n_alt = 1
   Insn 275: point = 1264, n_alt = 0
   Insn 274: point = 1265, n_alt = 0
   Insn 273: point = 1267, n_alt = 1
   Insn 272: point = 1269, n_alt = 0
   Insn 271: point = 1270, n_alt = 1
   Insn 270: point = 1272, n_alt = 7
   Insn 269: point = 1274, n_alt = 4
   Insn 268: point = 1275, n_alt = 7
   Insn 267: point = 1277, n_alt = 4
   Insn 266: point = 1278, n_alt = 3
   Insn 265: point = 1280, n_alt = 0
   Insn 264: point = 1282, n_alt = 1
   Insn 263: point = 1284, n_alt = 0
   Insn 262: point = 1285, n_alt = 0
   Insn 261: point = 1287, n_alt = 1
   Insn 260: point = 1289, n_alt = 0
  BB 26
   Insn 252: point = 1291, n_alt = 1
  BB 24
   Insn 244: point = 1292, n_alt = 1
   Insn 243: point = 1293, n_alt = 0
   Insn 242: point = 1294, n_alt = 0
  BB 92
   Insn 1409: point = 1295, n_alt = -1
  BB 14
   Insn 109: point = 1295, n_alt = -1
   Insn 108: point = 1295, n_alt = 0
   Insn 107: point = 1296, n_alt = 0
   Insn 106: point = 1298, n_alt = 0
   Insn 105: point = 1299, n_alt = 0
  BB 23
   Insn 1355: point = 1299, n_alt = -1
   Insn 236: point = 1299, n_alt = 1
   Insn 235: point = 1299, n_alt = 0
   Insn 234: point = 1299, n_alt = 3
   Insn 233: point = 1299, n_alt = -2
   Insn 232: point = 1300, n_alt = 0
   Insn 231: point = 1302, n_alt = 4
   Insn 230: point = 1303, n_alt = 1
   Insn 229: point = 1305, n_alt = 0
   Insn 228: point = 1307, n_alt = 1
   Insn 227: point = 1309, n_alt = 0
   Insn 226: point = 1311, n_alt = 0
   Insn 225: point = 1313, n_alt = 0
   Insn 224: point = 1314, n_alt = 0
   Insn 223: point = 1314, n_alt = 3
   Insn 222: point = 1314, n_alt = -2
   Insn 221: point = 1315, n_alt = 0
   Insn 220: point = 1317, n_alt = 4
   Insn 219: point = 1318, n_alt = 1
   Insn 218: point = 1320, n_alt = 0
   Insn 217: point = 1322, n_alt = 1
   Insn 216: point = 1324, n_alt = 0
   Insn 215: point = 1326, n_alt = 0
   Insn 214: point = 1328, n_alt = 0
  BB 93
   Insn 1412: point = 1329, n_alt = -1
  BB 16
   Insn 119: point = 1329, n_alt = -1
   Insn 118: point = 1329, n_alt = 0
   Insn 117: point = 1330, n_alt = 0
   Insn 116: point = 1332, n_alt = 0
   Insn 115: point = 1333, n_alt = 0
  BB 22
   Insn 1353: point = 1334, n_alt = -1
   Insn 208: point = 1334, n_alt = 1
  BB 94
   Insn 1415: point = 1335, n_alt = -1
  BB 18
   Insn 127: point = 1336, n_alt = -1
   Insn 126: point = 1336, n_alt = 0
   Insn 125: point = 1337, n_alt = 0
   Insn 124: point = 1339, n_alt = 0
   Insn 123: point = 1340, n_alt = 0
  BB 21
   Insn 1351: point = 1341, n_alt = -1
   Insn 202: point = 1341, n_alt = 1
  BB 20
   Insn 199: point = 1342, n_alt = 8
   Insn 198: point = 1343, n_alt = 3
   Insn 197: point = 1345, n_alt = 4
   Insn 196: point = 1346, n_alt = 7
   Insn 195: point = 1348, n_alt = 3
   Insn 194: point = 1350, n_alt = 4
   Insn 193: point = 1351, n_alt = 3
   Insn 192: point = 1353, n_alt = 0
   Insn 191: point = 1355, n_alt = 1
   Insn 190: point = 1357, n_alt = 0
   Insn 189: point = 1358, n_alt = 0
   Insn 188: point = 1360, n_alt = 0
   Insn 187: point = 1362, n_alt = 1
   Insn 186: point = 1364, n_alt = 0
   Insn 185: point = 1365, n_alt = 1
   Insn 184: point = 1367, n_alt = 1
   Insn 183: point = 1369, n_alt = 0
   Insn 182: point = 1370, n_alt = 3
   Insn 181: point = 1372, n_alt = 0
   Insn 180: point = 1374, n_alt = 1
   Insn 179: point = 1376, n_alt = 0
   Insn 178: point = 1377, n_alt = 0
   Insn 177: point = 1379, n_alt = 0
   Insn 176: point = 1381, n_alt = 1
   Insn 175: point = 1383, n_alt = 0
   Insn 174: point = 1384, n_alt = 1
   Insn 173: point = 1386, n_alt = 1
   Insn 172: point = 1388, n_alt = 0
   Insn 171: point = 1389, n_alt = 8
   Insn 170: point = 1390, n_alt = 3
   Insn 169: point = 1392, n_alt = 4
   Insn 168: point = 1393, n_alt = 7
   Insn 167: point = 1395, n_alt = 3
   Insn 166: point = 1397, n_alt = 4
   Insn 165: point = 1398, n_alt = 3
   Insn 164: point = 1400, n_alt = 0
   Insn 163: point = 1402, n_alt = 1
   Insn 162: point = 1404, n_alt = 0
   Insn 161: point = 1405, n_alt = 0
   Insn 160: point = 1407, n_alt = 0
   Insn 159: point = 1409, n_alt = 1
   Insn 158: point = 1411, n_alt = 0
   Insn 157: point = 1412, n_alt = 1
   Insn 156: point = 1414, n_alt = 1
   Insn 155: point = 1416, n_alt = 0
   Insn 154: point = 1417, n_alt = 3
   Insn 153: point = 1419, n_alt = 0
   Insn 152: point = 1421, n_alt = 1
   Insn 151: point = 1423, n_alt = 0
   Insn 150: point = 1424, n_alt = 0
   Insn 149: point = 1426, n_alt = 0
   Insn 148: point = 1428, n_alt = 1
   Insn 147: point = 1430, n_alt = 0
   Insn 146: point = 1431, n_alt = 1
   Insn 145: point = 1433, n_alt = 1
   Insn 144: point = 1435, n_alt = 0
  BB 19
   Insn 142: point = 1437, n_alt = -1
   Insn 141: point = 1437, n_alt = 1
   Insn 140: point = 1438, n_alt = 0
   Insn 139: point = 1439, n_alt = 1
   Insn 138: point = 1440, n_alt = 0
   Insn 137: point = 1442, n_alt = 0
   Insn 136: point = 1444, n_alt = 4
   Insn 135: point = 1445, n_alt = 3
   Insn 134: point = 1447, n_alt = 0
   Insn 133: point = 1449, n_alt = 1
   Insn 132: point = 1451, n_alt = 0
   Insn 131: point = 1452, n_alt = 0
   Insn 130: point = 1454, n_alt = 1
   Insn 129: point = 1456, n_alt = 0
  BB 17
   Insn 121: point = 1458, n_alt = 1
  BB 15
   Insn 113: point = 1459, n_alt = 1
   Insn 112: point = 1460, n_alt = 0
   Insn 111: point = 1461, n_alt = 0
  BB 13
   Insn 103: point = 1462, n_alt = 1
  BB 89
   Insn 1400: point = 1462, n_alt = -1
  BB 3
   Insn 12: point = 1462, n_alt = -1
   Insn 11: point = 1462, n_alt = 0
   Insn 10: point = 1463, n_alt = 0
   Insn 9: point = 1465, n_alt = 0
   Insn 8: point = 1466, n_alt = 0
  BB 12
   Insn 1349: point = 1466, n_alt = -1
   Insn 97: point = 1466, n_alt = 1
   Insn 96: point = 1466, n_alt = 0
   Insn 95: point = 1466, n_alt = 3
   Insn 94: point = 1466, n_alt = -2
   Insn 93: point = 1467, n_alt = 0
   Insn 92: point = 1469, n_alt = 4
   Insn 91: point = 1470, n_alt = 1
   Insn 90: point = 1472, n_alt = 1
   Insn 89: point = 1474, n_alt = 0
   Insn 88: point = 1476, n_alt = 0
   Insn 87: point = 1478, n_alt = 0
  BB 90
   Insn 1403: point = 1479, n_alt = -1
  BB 5
   Insn 22: point = 1479, n_alt = -1
   Insn 21: point = 1479, n_alt = 0
   Insn 20: point = 1480, n_alt = 0
   Insn 19: point = 1482, n_alt = 0
   Insn 18: point = 1483, n_alt = 0
  BB 11
   Insn 1347: point = 1484, n_alt = -1
   Insn 81: point = 1484, n_alt = 1
  BB 91
   Insn 1406: point = 1485, n_alt = -1
  BB 7
   Insn 30: point = 1486, n_alt = -1
   Insn 29: point = 1486, n_alt = 0
   Insn 28: point = 1487, n_alt = 0
   Insn 27: point = 1489, n_alt = 0
   Insn 26: point = 1490, n_alt = 0
  BB 10
   Insn 1345: point = 1491, n_alt = -1
   Insn 75: point = 1491, n_alt = 1
  BB 9
   Insn 72: point = 1492, n_alt = 8
   Insn 71: point = 1493, n_alt = 4
   Insn 70: point = 1494, n_alt = 7
   Insn 69: point = 1496, n_alt = 4
   Insn 68: point = 1497, n_alt = 3
   Insn 67: point = 1499, n_alt = 0
   Insn 66: point = 1501, n_alt = 1
   Insn 65: point = 1503, n_alt = 0
   Insn 64: point = 1504, n_alt = 0
   Insn 63: point = 1506, n_alt = 0
   Insn 62: point = 1508, n_alt = 1
   Insn 61: point = 1510, n_alt = 0
   Insn 60: point = 1511, n_alt = 1
   Insn 59: point = 1513, n_alt = 1
   Insn 58: point = 1515, n_alt = 0
   Insn 57: point = 1516, n_alt = 3
   Insn 56: point = 1518, n_alt = 0
   Insn 55: point = 1520, n_alt = 1
   Insn 54: point = 1522, n_alt = 0
   Insn 53: point = 1523, n_alt = 0
   Insn 52: point = 1525, n_alt = 0
   Insn 51: point = 1527, n_alt = 1
   Insn 50: point = 1529, n_alt = 0
   Insn 49: point = 1530, n_alt = 1
   Insn 48: point = 1532, n_alt = 1
   Insn 47: point = 1534, n_alt = 0
  BB 8
   Insn 45: point = 1536, n_alt = -1
   Insn 44: point = 1536, n_alt = 1
   Insn 43: point = 1537, n_alt = 0
   Insn 42: point = 1538, n_alt = 1
   Insn 41: point = 1539, n_alt = 0
   Insn 40: point = 1541, n_alt = 0
   Insn 39: point = 1543, n_alt = 4
   Insn 38: point = 1544, n_alt = 3
   Insn 37: point = 1546, n_alt = 0
   Insn 36: point = 1548, n_alt = 1
   Insn 35: point = 1550, n_alt = 0
   Insn 34: point = 1551, n_alt = 0
   Insn 33: point = 1553, n_alt = 1
   Insn 32: point = 1555, n_alt = 0
  BB 6
   Insn 24: point = 1557, n_alt = 1
  BB 4
   Insn 16: point = 1558, n_alt = 1
   Insn 15: point = 1559, n_alt = 0
   Insn 14: point = 1560, n_alt = 0
  BB 2
   Insn 6: point = 1561, n_alt = 1
 r87: [1552..1553]
 r88: [1547..1551]
 r89: [1547..1548]
 r90: [1545..1546]
 r91: [1542..1544]
 r92: [1531..1532]
 r93: [1524..1530]
 r94: [1526..1527]
 r95: [1524..1525]
 r96: [1519..1523]
 r97: [1519..1520]
 r98: [1517..1518]
 r99: [1495..1516]
 r100: [1512..1513]
 r101: [1505..1511]
 r102: [1507..1508]
 r103: [1505..1506]
 r104: [1500..1504]
 r105: [1500..1501]
 r106: [1498..1499]
 r107: [1492..1497]
 r108: [1492..1494]
 r109: [1475..1476]
 r110: [1473..1474]
 r111: [1471..1472]
 r112: [1466..1467]
 r113: [1453..1454]
 r114: [1448..1452]
 r115: [1448..1449]
 r116: [1446..1447]
 r117: [1443..1445]
 r118: [1432..1433]
 r119: [1425..1431]
 r120: [1427..1428]
 r121: [1425..1426]
 r122: [1420..1424]
 r123: [1420..1421]
 r124: [1418..1419]
 r125: [1396..1417]
 r126: [1413..1414]
 r127: [1406..1412]
 r128: [1408..1409]
 r129: [1406..1407]
 r130: [1401..1405]
 r131: [1401..1402]
 r132: [1399..1400]
 r133: [1391..1398]
 r134: [1389..1393]
 r135: [1385..1386]
 r136: [1378..1384]
 r137: [1380..1381]
 r138: [1378..1379]
 r139: [1373..1377]
 r140: [1373..1374]
 r141: [1371..1372]
 r142: [1349..1370]
 r143: [1366..1367]
 r144: [1359..1365]
 r145: [1361..1362]
 r146: [1359..1360]
 r147: [1354..1358]
 r148: [1354..1355]
 r149: [1352..1353]
 r150: [1344..1351]
 r151: [1342..1346]
 r152: [1325..1326]
 r153: [1323..1324]
 r154: [1321..1322]
 r155: [1314..1315]
 r156: [1310..1311]
 r157: [1308..1309]
 r158: [1306..1307]
 r159: [1299..1300]
 r160: [1286..1287]
 r161: [1281..1285]
 r162: [1281..1282]
 r163: [1279..1280]
 r164: [1276..1278]
 r165: [1271..1275]
 r166: [1271..1272]
 r167: [1256..1270]
 r168: [1266..1267]
 r169: [1261..1265]
 r170: [1261..1262]
 r171: [1259..1260]
 r172: [1253..1258]
 r173: [1253..1255]
 r174: [1249..1250]
 r175: [1244..1248]
 r176: [1244..1245]
 r177: [1242..1243]
 r178: [1238..1241]
 r179: [1234..1235]
 r180: [1229..1233]
 r181: [1229..1230]
 r182: [1227..1228]
 r183: [1223..1226]
 r184: [1219..1220]
 r185: [1214..1218]
 r186: [1214..1215]
 r187: [1212..1213]
 r188: [1208..1211]
 r189: [1204..1205]
 r190: [1199..1203]
 r191: [1199..1200]
 r192: [1197..1198]
 r193: [1193..1196]
 r194: [1189..1190]
 r195: [1184..1188]
 r196: [1184..1185]
 r197: [1182..1183]
 r198: [1178..1181]
 r199: [1157..1158]
 r200: [1150..1156]
 r201: [1152..1153]
 r202: [1150..1151]
 r203: [1145..1149]
 r204: [1145..1146]
 r205: [1143..1144]
 r206: [1140..1142]
 r207: [1114..1139]
 r208: [1135..1136]
 r209: [1133..1134]
 r210: [1126..1132]
 r211: [1128..1129]
 r212: [1126..1127]
 r213: [1121..1125]
 r214: [1121..1122]
 r215: [1119..1120]
 r216: [1116..1118]
 r217: [1114..1115]
 r218: [1112..1113]
 r219: [1109..1111]
 r220: [1103..1104]
 r221: [1098..1102]
 r222: [1098..1099]
 r223: [1096..1097]
 r224: [1093..1095]
 r225: [1090..1092]
 r226: [1084..1085]
 r227: [1079..1083]
 r228: [1079..1080]
 r229: [1077..1078]
 r230: [1074..1076]
 r231: [1071..1073]
 r232: [1063..1064]
 r233: [1056..1062]
 r234: [1058..1059]
 r235: [1056..1057]
 r236: [1051..1055]
 r237: [1051..1052]
 r238: [1049..1050]
 r239: [1046..1048]
 r240: [1044..1045]
 r241: [1039..1040]
 r242: [1032..1038]
 r243: [1034..1035]
 r244: [1032..1033]
 r245: [1027..1031]
 r246: [1027..1028]
 r247: [1025..1026]
 r248: [1022..1024]
 r249: [1017..1019]
 r250: [1006..1007]
 r251: [999..1005]
 r252: [1001..1002]
 r253: [999..1000]
 r254: [994..998]
 r255: [994..995]
 r256: [992..993]
 r257: [989..991]
 r258: [985..986]
 r259: [980..981]
 r260: [975..979]
 r261: [975..976]
 r262: [973..974]
 r263: [970..972]
 r264: [964..969]
 r265: [953..954]
 r266: [948..952]
 r267: [948..949]
 r268: [946..947]
 r269: [942..945]
 r270: [932..933]
 r271: [930..931]
 r272: [923..929]
 r273: [925..926]
 r274: [923..924]
 r275: [918..922]
 r276: [918..919]
 r277: [916..917]
 r278: [913..915]
 r279: [889..912]
 r280: [908..909]
 r281: [901..907]
 r282: [903..904]
 r283: [901..902]
 r284: [896..900]
 r285: [896..897]
 r286: [894..895]
 r287: [891..893]
 r288: [889..890]
 r289: [883..884]
 r290: [878..882]
 r291: [878..879]
 r292: [876..877]
 r293: [873..875]
 r294: [859..872]
 r295: [868..869]
 r296: [863..867]
 r297: [863..864]
 r298: [861..862]
 r299: [856..860]
 r300: [856..858]
 r301: [852..853]
 r302: [847..851]
 r303: [847..848]
 r304: [845..846]
 r305: [842..844]
 r306: [802..841]
 r307: [837..838]
 r308: [830..836]
 r309: [832..833]
 r310: [830..831]
 r311: [825..829]
 r312: [825..826]
 r313: [823..824]
 r314: [820..822]
 r315: [816..817]
 r316: [802..815]
 r317: [811..812]
 r318: [806..810]
 r319: [806..807]
 r320: [804..805]
 r321: [799..803]
 r322: [799..801]
 r323: [795..796]
 r324: [790..794]
 r325: [790..791]
 r326: [788..789]
 r327: [785..787]
 r328: [745..784]
 r329: [780..781]
 r330: [773..779]
 r331: [775..776]
 r332: [773..774]
 r333: [768..772]
 r334: [768..769]
 r335: [766..767]
 r336: [763..765]
 r337: [759..760]
 r338: [745..758]
 r339: [754..755]
 r340: [749..753]
 r341: [749..750]
 r342: [747..748]
 r343: [742..746]
 r344: [742..744]
 r345: [738..739]
 r346: [733..737]
 r347: [733..734]
 r348: [731..732]
 r349: [728..730]
 r350: [711..727]
 r351: [711..724]
 r352: [720..721]
 r353: [715..719]
 r354: [715..716]
 r355: [713..714]
 r356: [708..712]
 r357: [708..710]
 r358: [682..683]
 r359: [677..681]
 r360: [677..678]
 r361: [675..676]
 r362: [672..674]
 r363: [666..671]
 r364: [661..662]
 r365: [656..660]
 r366: [656..657]
 r367: [654..655]
 r368: [651..653]
 r369: [648..650]
 r370: [642..643]
 r371: [637..641]
 r372: [637..638]
 r373: [635..636]
 r374: [632..634]
 r375: [618..631]
 r376: [627..628]
 r377: [622..626]
 r378: [622..623]
 r379: [620..621]
 r380: [615..619]
 r381: [615..617]
 r382: [611..612]
 r383: [606..610]
 r384: [606..607]
 r385: [604..605]
 r386: [601..603]
 r387: [587..600]
 r388: [596..597]
 r389: [591..595]
 r390: [591..592]
 r391: [589..590]
 r392: [584..588]
 r393: [584..586]
 r394: [580..581]
 r395: [575..579]
 r396: [575..576]
 r397: [573..574]
 r398: [570..572]
 r399: [556..569]
 r400: [565..566]
 r401: [560..564]
 r402: [560..561]
 r403: [558..559]
 r404: [553..557]
 r405: [553..555]
 r406: [549..550]
 r407: [544..548]
 r408: [544..545]
 r409: [542..543]
 r410: [539..541]
 r411: [536..538]
 r412: [407..408]
 r413: [402..406]
 r414: [402..403]
 r415: [400..401]
 r416: [396..399]
 r417: [531..532]
 r418: [526..530]
 r419: [526..527]
 r420: [524..525]
 r421: [521..523]
 r422: [513..514]
 r423: [506..512]
 r424: [508..509]
 r425: [506..507]
 r426: [501..505]
 r427: [501..502]
 r428: [499..500]
 r429: [484..498]
 r430: [494..495]
 r431: [489..493]
 r432: [489..490]
 r433: [487..488]
 r434: [479..486]
 r435: [479..481]
 r436: [475..476]
 r437: [468..474]
 r438: [470..471]
 r439: [468..469]
 r440: [463..467]
 r441: [463..464]
 r442: [461..462]
 r443: [446..460]
 r444: [456..457]
 r445: [451..455]
 r446: [451..452]
 r447: [449..450]
 r448: [441..448]
 r449: [441..443]
 r450: [437..438]
 r451: [432..436]
 r452: [432..433]
 r453: [430..431]
 r454: [415..429]
 r455: [425..426]
 r456: [420..424]
 r457: [420..421]
 r458: [418..419]
 r459: [412..417]
 r460: [412..414]
 r461: [374..375]
 r462: [369..373]
 r463: [369..370]
 r464: [367..368]
 r465: [364..366]
 r466: [353..354]
 r467: [346..352]
 r468: [348..349]
 r469: [346..347]
 r470: [341..345]
 r471: [341..342]
 r472: [339..340]
 r473: [336..338]
 r474: [310..335]
 r475: [331..332]
 r476: [329..330]
 r477: [322..328]
 r478: [324..325]
 r479: [322..323]
 r480: [317..321]
 r481: [317..318]
 r482: [315..316]
 r483: [312..314]
 r484: [310..311]
 r485: [308..309]
 r486: [305..307]
 r487: [299..300]
 r488: [292..298]
 r489: [294..295]
 r490: [292..293]
 r491: [287..291]
 r492: [287..288]
 r493: [285..286]
 r494: [282..284]
 r495: [265..269]
 r496: [265..266]
 r497: [263..264]
 r499: [237..238]
 r500: [234..236]
 r501: [226..233]
 r502: [228..229]
 r503: [226..227]
 r504: [224..225]
 r505: [220..223]
 r506: [208..212]
 r507: [208..209]
 r508: [206..207]
 r509: [200..201]
 r510: [198..199]
 r511: [195..197]
 r512: [182..189]
 r513: [184..185]
 r514: [182..183]
 r515: [179..181]
 r516: [177..178]
 r517: [174..176]
 r518: [161..162]
 r519: [156..160]
 r520: [156..157]
 r521: [154..155]
 r522: [151..153]
 r523: [148..150]
 r524: [129..130]
 r525: [124..128]
 r526: [124..125]
 r527: [122..123]
 r528: [119..121]
 r529: [98..118]
 r530: [114..115]
 r531: [107..113]
 r532: [109..110]
 r533: [107..108]
 r534: [102..106]
 r535: [102..103]
 r536: [100..101]
 r537: [95..99]
 r538: [93..97]
 r539: [88..89]
 r540: [81..87]
 r541: [83..84]
 r542: [81..82]
 r543: [76..80]
 r544: [76..77]
 r545: [74..75]
 r546: [71..73]
 r547: [61..65]
 r548: [61..62]
 r549: [59..60]
 r550: [51..52]
 r551: [44..50]
 r552: [46..47]
 r553: [44..45]
 r554: [39..43]
 r555: [39..40]
 r556: [37..38]
 r557: [34..36]
 r558: [15..16]
 r559: [13..14]
 r560: [11..12]
 r561: [4..5]
 r562: [263..272] [259..261]
 r563: [206..217] [202..204]
 r564: [59..92] [32..56]
 r565: [1462..1463]
 r566: [1558..1560]
 r567: [1479..1559]
 r568: [1479..1480]
 r569: [1486..1487]
 r570: [1295..1296]
 r571: [1459..1461]
 r572: [1329..1460]
 r573: [1329..1330]
 r574: [1336..1337]
 r575: [1292..1294]
 r576: [1166..1293]
 r577: [1166..1167]
 r578: [1173..1174]
 r579: [691..692]
 r580: [1163..1165]
 r581: [695..1164]
 r582: [695..696]
 r583: [702..703]
 r584: [688..690]
 r585: [383..689]
 r586: [383..384]
 r587: [390..391]
 r588: [0..1]
 r589: [380..382]
 r590: [19..381]
 r591: [19..20]
 r592: [26..27]
 r593: [57..68]
 r594: [1464..1465]
 r595: [1481..1482]
 r596: [1488..1489]
 r597: [1554..1555]
 r598: [1549..1550]
 r599: [1540..1543]
 r600: [1540..1541]
 r601: [1538..1539]
 r602: [1536..1537]
 r603: [1533..1534]
 r604: [1528..1529]
 r605: [1521..1522]
 r606: [1514..1515]
 r607: [1509..1510]
 r608: [1502..1503]
 r609: [1495..1496]
 r610: [1492..1493]
 r611: [1477..1478]
 r612: [1468..1470]
 r613: [1468..1469]
 r614: [1297..1298]
 r615: [1331..1332]
 r616: [1338..1339]
 r617: [1455..1456]
 r618: [1450..1451]
 r619: [1441..1444]
 r620: [1441..1442]
 r621: [1439..1440]
 r622: [1437..1438]
 r623: [1434..1435]
 r624: [1429..1430]
 r625: [1422..1423]
 r626: [1415..1416]
 r627: [1410..1411]
 r628: [1403..1404]
 r629: [1394..1397]
 r630: [1394..1395]
 r631: [1389..1392]
 r632: [1389..1390]
 r633: [1387..1388]
 r634: [1382..1383]
 r635: [1375..1376]
 r636: [1368..1369]
 r637: [1363..1364]
 r638: [1356..1357]
 r639: [1347..1350]
 r640: [1347..1348]
 r641: [1342..1345]
 r642: [1342..1343]
 r643: [1327..1328]
 r644: [1319..1320]
 r645: [1316..1318]
 r646: [1316..1317]
 r647: [1312..1313]
 r648: [1304..1305]
 r649: [1301..1303]
 r650: [1301..1302]
 r651: [1168..1169]
 r652: [1175..1176]
 r653: [1288..1289]
 r654: [1283..1284]
 r655: [1276..1277]
 r656: [1273..1274]
 r657: [1268..1269]
 r658: [1263..1264]
 r659: [1256..1257]
 r660: [1253..1254]
 r661: [1251..1252]
 r662: [1246..1247]
 r663: [1238..1240]
 r664: [1238..1239]
 r665: [1236..1237]
 r666: [1231..1232]
 r667: [1223..1225]
 r668: [1223..1224]
 r669: [1221..1222]
 r670: [1216..1217]
 r671: [1208..1210]
 r672: [1208..1209]
 r673: [1206..1207]
 r674: [1201..1202]
 r675: [1193..1195]
 r676: [1193..1194]
 r677: [1191..1192]
 r678: [1186..1187]
 r679: [1178..1180]
 r680: [1178..1179]
 r681: [693..694]
 r682: [697..698]
 r683: [704..705]
 r684: [1159..1160]
 r685: [1154..1155]
 r686: [1147..1148]
 r687: [1140..1141]
 r688: [1137..1138]
 r689: [1130..1131]
 r690: [1123..1124]
 r691: [1116..1117]
 r692: [1107..1108]
 r693: [1109..1110]
 r694: [1105..1106]
 r695: [1100..1101]
 r696: [1093..1094]
 r697: [1088..1089]
 r698: [1090..1091]
 r699: [1086..1087]
 r700: [1081..1082]
 r701: [1074..1075]
 r702: [1069..1070]
 r703: [1071..1072]
 r704: [1067..1068]
 r705: [1065..1066]
 r706: [1060..1061]
 r707: [1053..1054]
 r708: [1046..1047]
 r709: [1041..1042]
 r710: [1036..1037]
 r711: [1029..1030]
 r712: [1020..1023]
 r713: [1020..1021]
 r714: [1017..1018]
 r715: [1014..1015]
 r716: [1008..1009]
 r717: [1003..1004]
 r718: [996..997]
 r719: [987..990]
 r720: [987..988]
 r721: [961..962]
 r722: [982..983]
 r723: [977..978]
 r724: [970..971]
 r725: [967..968]
 r726: [964..965]
 r727: [958..959]
 r728: [1011..1012]
 r729: [955..956]
 r730: [950..951]
 r731: [942..944]
 r732: [942..943]
 r733: [940..941]
 r734: [937..938]
 r735: [934..935]
 r736: [927..928]
 r737: [920..921]
 r738: [913..914]
 r739: [910..911]
 r740: [905..906]
 r741: [898..899]
 r742: [891..892]
 r743: [887..888]
 r744: [885..886]
 r745: [880..881]
 r746: [873..874]
 r747: [870..871]
 r748: [865..866]
 r749: [856..857]
 r750: [854..855]
 r751: [849..850]
 r752: [842..843]
 r753: [839..840]
 r754: [834..835]
 r755: [827..828]
 r756: [818..821]
 r757: [818..819]
 r758: [813..814]
 r759: [808..809]
 r760: [799..800]
 r761: [797..798]
 r762: [792..793]
 r763: [785..786]
 r764: [782..783]
 r765: [777..778]
 r766: [770..771]
 r767: [761..764]
 r768: [761..762]
 r769: [756..757]
 r770: [751..752]
 r771: [742..743]
 r772: [740..741]
 r773: [735..736]
 r774: [728..729]
 r775: [725..726]
 r776: [722..723]
 r777: [717..718]
 r778: [708..709]
 r779: [385..386]
 r780: [392..393]
 r781: [684..685]
 r782: [679..680]
 r783: [672..673]
 r784: [669..670]
 r785: [666..667]
 r786: [663..664]
 r787: [658..659]
 r788: [651..652]
 r789: [646..647]
 r790: [648..649]
 r791: [644..645]
 r792: [639..640]
 r793: [632..633]
 r794: [629..630]
 r795: [624..625]
 r796: [615..616]
 r797: [613..614]
 r798: [608..609]
 r799: [601..602]
 r800: [598..599]
 r801: [593..594]
 r802: [584..585]
 r803: [582..583]
 r804: [577..578]
 r805: [570..571]
 r806: [567..568]
 r807: [562..563]
 r808: [553..554]
 r809: [551..552]
 r810: [546..547]
 r811: [539..540]
 r812: [536..537]
 r813: [409..410]
 r814: [404..405]
 r815: [396..398]
 r816: [396..397]
 r817: [533..534]
 r818: [528..529]
 r819: [519..522]
 r820: [519..520]
 r821: [517..518]
 r822: [515..516]
 r823: [510..511]
 r824: [503..504]
 r825: [496..497]
 r826: [491..492]
 r827: [482..485]
 r828: [482..483]
 r829: [479..480]
 r830: [477..478]
 r831: [472..473]
 r832: [465..466]
 r833: [458..459]
 r834: [453..454]
 r835: [444..447]
 r836: [444..445]
 r837: [441..442]
 r838: [439..440]
 r839: [434..435]
 r840: [427..428]
 r841: [422..423]
 r842: [415..416]
 r843: [412..413]
 r844: [2..3]
 r845: [21..22]
 r846: [28..29]
 r847: [376..377]
 r848: [371..372]
 r849: [362..365]
 r850: [362..363]
 r851: [360..361]
 r852: [358..359]
 r853: [355..356]
 r854: [350..351]
 r855: [343..344]
 r856: [336..337]
 r857: [333..334]
 r858: [326..327]
 r859: [319..320]
 r860: [312..313]
 r861: [303..304]
 r862: [305..306]
 r863: [301..302]
 r864: [296..297]
 r865: [289..290]
 r866: [280..283]
 r867: [280..281]
 r868: [278..279]
 r869: [273..274]
 r870: [275..277]
 r871: [275..276]
 r872: [270..271]
 r873: [267..268]
 r874: [257..258]
 r875: [255..256]
 r876: [253..254]
 r877: [250..251]
 r878: [248..249]
 r879: [245..246]
 r880: [239..241]
 r881: [239..240]
 r882: [234..235]
 r883: [230..232]
 r884: [230..231]
 r885: [218..219]
 r886: [213..214]
 r887: [215..216]
 r888: [210..211]
 r889: [193..194]
 r890: [195..196]
 r891: [190..192]
 r892: [190..191]
 r893: [186..188]
 r894: [186..187]
 r895: [179..180]
 r896: [172..173]
 r897: [174..175]
 r898: [170..171]
 r899: [142..143]
 r900: [166..168]
 r901: [166..167]
 r902: [139..140]
 r903: [163..164]
 r904: [158..159]
 r905: [151..152]
 r906: [148..149]
 r907: [136..137]
 r908: [145..146]
 r909: [133..134]
 r910: [131..132]
 r911: [126..127]
 r912: [119..120]
 r913: [116..117]
 r914: [111..112]
 r915: [104..105]
 r916: [93..96]
 r917: [93..94]
 r918: [90..91]
 r919: [85..86]
 r920: [78..79]
 r921: [69..72]
 r922: [69..70]
 r923: [66..67]
 r924: [63..64]
 r925: [53..54]
 r926: [48..49]
 r927: [41..42]
 r928: [32..35]
 r929: [32..33]
 r930: [17..18]
 r931: [9..10]
 r932: [6..8]
 r933: [6..7]
 r934: [243..244]
 r937: [220..221]
 r938: [222..242]
Compressing live ranges: from 1561 to 1268 - 81%
Ranges after the compression:
 r87: [1262..1263]
 r88: [1258..1261]
 r89: [1258..1259]
 r90: [1256..1257]
 r91: [1254..1255]
 r92: [1244..1245]
 r93: [1238..1243]
 r94: [1240..1241]
 r95: [1238..1239]
 r96: [1234..1237]
 r97: [1234..1235]
 r98: [1232..1233]
 r99: [1214..1231]
 r100: [1228..1229]
 r101: [1222..1227]
 r102: [1224..1225]
 r103: [1222..1223]
 r104: [1218..1221]
 r105: [1218..1219]
 r106: [1216..1217]
 r107: [1212..1215]
 r108: [1212..1213]
 r109: [1200..1201]
 r110: [1198..1199]
 r111: [1196..1197]
 r112: [1192..1193]
 r113: [1182..1183]
 r114: [1178..1181]
 r115: [1178..1179]
 r116: [1176..1177]
 r117: [1174..1175]
 r118: [1164..1165]
 r119: [1158..1163]
 r120: [1160..1161]
 r121: [1158..1159]
 r122: [1154..1157]
 r123: [1154..1155]
 r124: [1152..1153]
 r125: [1134..1151]
 r126: [1148..1149]
 r127: [1142..1147]
 r128: [1144..1145]
 r129: [1142..1143]
 r130: [1138..1141]
 r131: [1138..1139]
 r132: [1136..1137]
 r133: [1130..1135]
 r134: [1128..1131]
 r135: [1124..1125]
 r136: [1118..1123]
 r137: [1120..1121]
 r138: [1118..1119]
 r139: [1114..1117]
 r140: [1114..1115]
 r141: [1112..1113]
 r142: [1094..1111]
 r143: [1108..1109]
 r144: [1102..1107]
 r145: [1104..1105]
 r146: [1102..1103]
 r147: [1098..1101]
 r148: [1098..1099]
 r149: [1096..1097]
 r150: [1090..1095]
 r151: [1088..1091]
 r152: [1076..1077]
 r153: [1074..1075]
 r154: [1072..1073]
 r155: [1066..1067]
 r156: [1062..1063]
 r157: [1060..1061]
 r158: [1058..1059]
 r159: [1052..1053]
 r160: [1042..1043]
 r161: [1038..1041]
 r162: [1038..1039]
 r163: [1036..1037]
 r164: [1034..1035]
 r165: [1030..1033]
 r166: [1030..1031]
 r167: [1018..1029]
 r168: [1026..1027]
 r169: [1022..1025]
 r170: [1022..1023]
 r171: [1020..1021]
 r172: [1016..1019]
 r173: [1016..1017]
 r174: [1012..1013]
 r175: [1008..1011]
 r176: [1008..1009]
 r177: [1006..1007]
 r178: [1004..1005]
 r179: [1000..1001]
 r180: [996..999]
 r181: [996..997]
 r182: [994..995]
 r183: [992..993]
 r184: [988..989]
 r185: [984..987]
 r186: [984..985]
 r187: [982..983]
 r188: [980..981]
 r189: [976..977]
 r190: [972..975]
 r191: [972..973]
 r192: [970..971]
 r193: [968..969]
 r194: [964..965]
 r195: [960..963]
 r196: [960..961]
 r197: [958..959]
 r198: [956..957]
 r199: [942..943]
 r200: [936..941]
 r201: [938..939]
 r202: [936..937]
 r203: [932..935]
 r204: [932..933]
 r205: [930..931]
 r206: [928..929]
 r207: [906..927]
 r208: [924..925]
 r209: [922..923]
 r210: [916..921]
 r211: [918..919]
 r212: [916..917]
 r213: [912..915]
 r214: [912..913]
 r215: [910..911]
 r216: [908..909]
 r217: [906..907]
 r218: [904..905]
 r219: [902..903]
 r220: [896..897]
 r221: [892..895]
 r222: [892..893]
 r223: [890..891]
 r224: [888..889]
 r225: [886..887]
 r226: [880..881]
 r227: [876..879]
 r228: [876..877]
 r229: [874..875]
 r230: [872..873]
 r231: [870..871]
 r232: [862..863]
 r233: [856..861]
 r234: [858..859]
 r235: [856..857]
 r236: [852..855]
 r237: [852..853]
 r238: [850..851]
 r239: [848..849]
 r240: [846..847]
 r241: [842..843]
 r242: [836..841]
 r243: [838..839]
 r244: [836..837]
 r245: [832..835]
 r246: [832..833]
 r247: [830..831]
 r248: [828..829]
 r249: [824..825]
 r250: [816..817]
 r251: [810..815]
 r252: [812..813]
 r253: [810..811]
 r254: [806..809]
 r255: [806..807]
 r256: [804..805]
 r257: [802..803]
 r258: [798..799]
 r259: [794..795]
 r260: [790..793]
 r261: [790..791]
 r262: [788..789]
 r263: [786..787]
 r264: [782..785]
 r265: [774..775]
 r266: [770..773]
 r267: [770..771]
 r268: [768..769]
 r269: [766..767]
 r270: [758..759]
 r271: [756..757]
 r272: [750..755]
 r273: [752..753]
 r274: [750..751]
 r275: [746..749]
 r276: [746..747]
 r277: [744..745]
 r278: [742..743]
 r279: [722..741]
 r280: [738..739]
 r281: [732..737]
 r282: [734..735]
 r283: [732..733]
 r284: [728..731]
 r285: [728..729]
 r286: [726..727]
 r287: [724..725]
 r288: [722..723]
 r289: [716..717]
 r290: [712..715]
 r291: [712..713]
 r292: [710..711]
 r293: [708..709]
 r294: [696..707]
 r295: [704..705]
 r296: [700..703]
 r297: [700..701]
 r298: [698..699]
 r299: [694..697]
 r300: [694..695]
 r301: [690..691]
 r302: [686..689]
 r303: [686..687]
 r304: [684..685]
 r305: [682..683]
 r306: [648..681]
 r307: [678..679]
 r308: [672..677]
 r309: [674..675]
 r310: [672..673]
 r311: [668..671]
 r312: [668..669]
 r313: [666..667]
 r314: [664..665]
 r315: [660..661]
 r316: [648..659]
 r317: [656..657]
 r318: [652..655]
 r319: [652..653]
 r320: [650..651]
 r321: [646..649]
 r322: [646..647]
 r323: [642..643]
 r324: [638..641]
 r325: [638..639]
 r326: [636..637]
 r327: [634..635]
 r328: [600..633]
 r329: [630..631]
 r330: [624..629]
 r331: [626..627]
 r332: [624..625]
 r333: [620..623]
 r334: [620..621]
 r335: [618..619]
 r336: [616..617]
 r337: [612..613]
 r338: [600..611]
 r339: [608..609]
 r340: [604..607]
 r341: [604..605]
 r342: [602..603]
 r343: [598..601]
 r344: [598..599]
 r345: [594..595]
 r346: [590..593]
 r347: [590..591]
 r348: [588..589]
 r349: [586..587]
 r350: [572..585]
 r351: [572..583]
 r352: [580..581]
 r353: [576..579]
 r354: [576..577]
 r355: [574..575]
 r356: [570..573]
 r357: [570..571]
 r358: [552..553]
 r359: [548..551]
 r360: [548..549]
 r361: [546..547]
 r362: [544..545]
 r363: [540..543]
 r364: [536..537]
 r365: [532..535]
 r366: [532..533]
 r367: [530..531]
 r368: [528..529]
 r369: [526..527]
 r370: [520..521]
 r371: [516..519]
 r372: [516..517]
 r373: [514..515]
 r374: [512..513]
 r375: [500..511]
 r376: [508..509]
 r377: [504..507]
 r378: [504..505]
 r379: [502..503]
 r380: [498..501]
 r381: [498..499]
 r382: [494..495]
 r383: [490..493]
 r384: [490..491]
 r385: [488..489]
 r386: [486..487]
 r387: [474..485]
 r388: [482..483]
 r389: [478..481]
 r390: [478..479]
 r391: [476..477]
 r392: [472..475]
 r393: [472..473]
 r394: [468..469]
 r395: [464..467]
 r396: [464..465]
 r397: [462..463]
 r398: [460..461]
 r399: [448..459]
 r400: [456..457]
 r401: [452..455]
 r402: [452..453]
 r403: [450..451]
 r404: [446..449]
 r405: [446..447]
 r406: [442..443]
 r407: [438..441]
 r408: [438..439]
 r409: [436..437]
 r410: [434..435]
 r411: [432..433]
 r412: [324..325]
 r413: [320..323]
 r414: [320..321]
 r415: [318..319]
 r416: [316..317]
 r417: [428..429]
 r418: [424..427]
 r419: [424..425]
 r420: [422..423]
 r421: [420..421]
 r422: [412..413]
 r423: [406..411]
 r424: [408..409]
 r425: [406..407]
 r426: [402..405]
 r427: [402..403]
 r428: [400..401]
 r429: [388..399]
 r430: [396..397]
 r431: [392..395]
 r432: [392..393]
 r433: [390..391]
 r434: [384..389]
 r435: [384..385]
 r436: [380..381]
 r437: [374..379]
 r438: [376..377]
 r439: [374..375]
 r440: [370..373]
 r441: [370..371]
 r442: [368..369]
 r443: [356..367]
 r444: [364..365]
 r445: [360..363]
 r446: [360..361]
 r447: [358..359]
 r448: [352..357]
 r449: [352..353]
 r450: [348..349]
 r451: [344..347]
 r452: [344..345]
 r453: [342..343]
 r454: [330..341]
 r455: [338..339]
 r456: [334..337]
 r457: [334..335]
 r458: [332..333]
 r459: [328..331]
 r460: [328..329]
 r461: [302..303]
 r462: [298..301]
 r463: [298..299]
 r464: [296..297]
 r465: [294..295]
 r466: [284..285]
 r467: [278..283]
 r468: [280..281]
 r469: [278..279]
 r470: [274..277]
 r471: [274..275]
 r472: [272..273]
 r473: [270..271]
 r474: [248..269]
 r475: [266..267]
 r476: [264..265]
 r477: [258..263]
 r478: [260..261]
 r479: [258..259]
 r480: [254..257]
 r481: [254..255]
 r482: [252..253]
 r483: [250..251]
 r484: [248..249]
 r485: [246..247]
 r486: [244..245]
 r487: [238..239]
 r488: [232..237]
 r489: [234..235]
 r490: [232..233]
 r491: [228..231]
 r492: [228..229]
 r493: [226..227]
 r494: [224..225]
 r495: [210..213]
 r496: [210..211]
 r497: [208..209]
 r499: [188..189]
 r500: [186..187]
 r501: [180..185]
 r502: [182..183]
 r503: [180..181]
 r504: [178..179]
 r505: [174..177]
 r506: [164..167]
 r507: [164..165]
 r508: [162..163]
 r509: [158..159]
 r510: [156..157]
 r511: [154..155]
 r512: [144..149]
 r513: [146..147]
 r514: [144..145]
 r515: [142..143]
 r516: [140..141]
 r517: [138..139]
 r518: [128..129]
 r519: [124..127]
 r520: [124..125]
 r521: [122..123]
 r522: [120..121]
 r523: [118..119]
 r524: [104..105]
 r525: [100..103]
 r526: [100..101]
 r527: [98..99]
 r528: [96..97]
 r529: [78..95]
 r530: [92..93]
 r531: [86..91]
 r532: [88..89]
 r533: [86..87]
 r534: [82..85]
 r535: [82..83]
 r536: [80..81]
 r537: [76..79]
 r538: [74..77]
 r539: [70..71]
 r540: [64..69]
 r541: [66..67]
 r542: [64..65]
 r543: [60..63]
 r544: [60..61]
 r545: [58..59]
 r546: [56..57]
 r547: [48..51]
 r548: [48..49]
 r549: [46..47]
 r550: [42..43]
 r551: [36..41]
 r552: [38..39]
 r553: [36..37]
 r554: [32..35]
 r555: [32..33]
 r556: [30..31]
 r557: [28..29]
 r558: [14..15]
 r559: [12..13]
 r560: [10..11]
 r561: [4..5]
 r562: [206..215]
 r563: [160..171]
 r564: [26..73]
 r565: [1188..1189]
 r566: [1266..1267]
 r567: [1204..1267]
 r568: [1204..1205]
 r569: [1208..1209]
 r570: [1048..1049]
 r571: [1186..1187]
 r572: [1080..1187]
 r573: [1080..1081]
 r574: [1084..1085]
 r575: [1046..1047]
 r576: [948..1047]
 r577: [948..949]
 r578: [952..953]
 r579: [558..559]
 r580: [946..947]
 r581: [562..947]
 r582: [562..563]
 r583: [566..567]
 r584: [556..557]
 r585: [308..557]
 r586: [308..309]
 r587: [312..313]
 r588: [0..1]
 r589: [306..307]
 r590: [18..307]
 r591: [18..19]
 r592: [22..23]
 r593: [46..53]
 r594: [1190..1191]
 r595: [1206..1207]
 r596: [1210..1211]
 r597: [1264..1265]
 r598: [1260..1261]
 r599: [1252..1255]
 r600: [1252..1253]
 r601: [1250..1251]
 r602: [1248..1249]
 r603: [1246..1247]
 r604: [1242..1243]
 r605: [1236..1237]
 r606: [1230..1231]
 r607: [1226..1227]
 r608: [1220..1221]
 r609: [1214..1215]
 r610: [1212..1213]
 r611: [1202..1203]
 r612: [1194..1195]
 r613: [1194..1195]
 r614: [1050..1051]
 r615: [1082..1083]
 r616: [1086..1087]
 r617: [1184..1185]
 r618: [1180..1181]
 r619: [1172..1175]
 r620: [1172..1173]
 r621: [1170..1171]
 r622: [1168..1169]
 r623: [1166..1167]
 r624: [1162..1163]
 r625: [1156..1157]
 r626: [1150..1151]
 r627: [1146..1147]
 r628: [1140..1141]
 r629: [1132..1135]
 r630: [1132..1133]
 r631: [1128..1131]
 r632: [1128..1129]
 r633: [1126..1127]
 r634: [1122..1123]
 r635: [1116..1117]
 r636: [1110..1111]
 r637: [1106..1107]
 r638: [1100..1101]
 r639: [1092..1095]
 r640: [1092..1093]
 r641: [1088..1091]
 r642: [1088..1089]
 r643: [1078..1079]
 r644: [1070..1071]
 r645: [1068..1069]
 r646: [1068..1069]
 r647: [1064..1065]
 r648: [1056..1057]
 r649: [1054..1055]
 r650: [1054..1055]
 r651: [950..951]
 r652: [954..955]
 r653: [1044..1045]
 r654: [1040..1041]
 r655: [1034..1035]
 r656: [1032..1033]
 r657: [1028..1029]
 r658: [1024..1025]
 r659: [1018..1019]
 r660: [1016..1017]
 r661: [1014..1015]
 r662: [1010..1011]
 r663: [1004..1005]
 r664: [1004..1005]
 r665: [1002..1003]
 r666: [998..999]
 r667: [992..993]
 r668: [992..993]
 r669: [990..991]
 r670: [986..987]
 r671: [980..981]
 r672: [980..981]
 r673: [978..979]
 r674: [974..975]
 r675: [968..969]
 r676: [968..969]
 r677: [966..967]
 r678: [962..963]
 r679: [956..957]
 r680: [956..957]
 r681: [560..561]
 r682: [564..565]
 r683: [568..569]
 r684: [944..945]
 r685: [940..941]
 r686: [934..935]
 r687: [928..929]
 r688: [926..927]
 r689: [920..921]
 r690: [914..915]
 r691: [908..909]
 r692: [900..901]
 r693: [902..903]
 r694: [898..899]
 r695: [894..895]
 r696: [888..889]
 r697: [884..885]
 r698: [886..887]
 r699: [882..883]
 r700: [878..879]
 r701: [872..873]
 r702: [868..869]
 r703: [870..871]
 r704: [866..867]
 r705: [864..865]
 r706: [860..861]
 r707: [854..855]
 r708: [848..849]
 r709: [844..845]
 r710: [840..841]
 r711: [834..835]
 r712: [826..829]
 r713: [826..827]
 r714: [824..825]
 r715: [822..823]
 r716: [818..819]
 r717: [814..815]
 r718: [808..809]
 r719: [800..803]
 r720: [800..801]
 r721: [780..781]
 r722: [796..797]
 r723: [792..793]
 r724: [786..787]
 r725: [784..785]
 r726: [782..783]
 r727: [778..779]
 r728: [820..821]
 r729: [776..777]
 r730: [772..773]
 r731: [766..767]
 r732: [766..767]
 r733: [764..765]
 r734: [762..763]
 r735: [760..761]
 r736: [754..755]
 r737: [748..749]
 r738: [742..743]
 r739: [740..741]
 r740: [736..737]
 r741: [730..731]
 r742: [724..725]
 r743: [720..721]
 r744: [718..719]
 r745: [714..715]
 r746: [708..709]
 r747: [706..707]
 r748: [702..703]
 r749: [694..695]
 r750: [692..693]
 r751: [688..689]
 r752: [682..683]
 r753: [680..681]
 r754: [676..677]
 r755: [670..671]
 r756: [662..665]
 r757: [662..663]
 r758: [658..659]
 r759: [654..655]
 r760: [646..647]
 r761: [644..645]
 r762: [640..641]
 r763: [634..635]
 r764: [632..633]
 r765: [628..629]
 r766: [622..623]
 r767: [614..617]
 r768: [614..615]
 r769: [610..611]
 r770: [606..607]
 r771: [598..599]
 r772: [596..597]
 r773: [592..593]
 r774: [586..587]
 r775: [584..585]
 r776: [582..583]
 r777: [578..579]
 r778: [570..571]
 r779: [310..311]
 r780: [314..315]
 r781: [554..555]
 r782: [550..551]
 r783: [544..545]
 r784: [542..543]
 r785: [540..541]
 r786: [538..539]
 r787: [534..535]
 r788: [528..529]
 r789: [524..525]
 r790: [526..527]
 r791: [522..523]
 r792: [518..519]
 r793: [512..513]
 r794: [510..511]
 r795: [506..507]
 r796: [498..499]
 r797: [496..497]
 r798: [492..493]
 r799: [486..487]
 r800: [484..485]
 r801: [480..481]
 r802: [472..473]
 r803: [470..471]
 r804: [466..467]
 r805: [460..461]
 r806: [458..459]
 r807: [454..455]
 r808: [446..447]
 r809: [444..445]
 r810: [440..441]
 r811: [434..435]
 r812: [432..433]
 r813: [326..327]
 r814: [322..323]
 r815: [316..317]
 r816: [316..317]
 r817: [430..431]
 r818: [426..427]
 r819: [418..421]
 r820: [418..419]
 r821: [416..417]
 r822: [414..415]
 r823: [410..411]
 r824: [404..405]
 r825: [398..399]
 r826: [394..395]
 r827: [386..389]
 r828: [386..387]
 r829: [384..385]
 r830: [382..383]
 r831: [378..379]
 r832: [372..373]
 r833: [366..367]
 r834: [362..363]
 r835: [354..357]
 r836: [354..355]
 r837: [352..353]
 r838: [350..351]
 r839: [346..347]
 r840: [340..341]
 r841: [336..337]
 r842: [330..331]
 r843: [328..329]
 r844: [2..3]
 r845: [20..21]
 r846: [24..25]
 r847: [304..305]
 r848: [300..301]
 r849: [292..295]
 r850: [292..293]
 r851: [290..291]
 r852: [288..289]
 r853: [286..287]
 r854: [282..283]
 r855: [276..277]
 r856: [270..271]
 r857: [268..269]
 r858: [262..263]
 r859: [256..257]
 r860: [250..251]
 r861: [242..243]
 r862: [244..245]
 r863: [240..241]
 r864: [236..237]
 r865: [230..231]
 r866: [222..225]
 r867: [222..223]
 r868: [220..221]
 r869: [216..217]
 r870: [218..219]
 r871: [218..219]
 r872: [214..215]
 r873: [212..213]
 r874: [204..205]
 r875: [202..203]
 r876: [200..201]
 r877: [198..199]
 r878: [196..197]
 r879: [194..195]
 r880: [190..191]
 r881: [190..191]
 r882: [186..187]
 r883: [184..185]
 r884: [184..185]
 r885: [172..173]
 r886: [168..169]
 r887: [170..171]
 r888: [166..167]
 r889: [152..153]
 r890: [154..155]
 r891: [150..151]
 r892: [150..151]
 r893: [148..149]
 r894: [148..149]
 r895: [142..143]
 r896: [136..137]
 r897: [138..139]
 r898: [134..135]
 r899: [114..115]
 r900: [132..133]
 r901: [132..133]
 r902: [112..113]
 r903: [130..131]
 r904: [126..127]
 r905: [120..121]
 r906: [118..119]
 r907: [110..111]
 r908: [116..117]
 r909: [108..109]
 r910: [106..107]
 r911: [102..103]
 r912: [96..97]
 r913: [94..95]
 r914: [90..91]
 r915: [84..85]
 r916: [74..77]
 r917: [74..75]
 r918: [72..73]
 r919: [68..69]
 r920: [62..63]
 r921: [54..57]
 r922: [54..55]
 r923: [52..53]
 r924: [50..51]
 r925: [44..45]
 r926: [40..41]
 r927: [34..35]
 r928: [26..29]
 r929: [26..27]
 r930: [16..17]
 r931: [8..9]
 r932: [6..7]
 r933: [6..7]
 r934: [192..193]
 r937: [174..175]
 r938: [176..191]

********** Assignment #2: **********

	 Assigning to 938 (cl=SSE_REGS, orig=498, freq=2000, tfirst=937, tfreq=2000)...
	 Assigning to 937 (cl=SSE_REGS, orig=498, freq=2000, tfirst=937, tfreq=2000)...
	   Assign 24 to optional reload r937 (freq=2000)
	Hard reg 24 is preferable by r938 with profit 1000
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Inherit 0 out of 1 (0.00%)
   Insn after restoring regs:
 1451: r937:SF=r498:SF
      REG_DEAD r498:SF
   Insn after restoring regs:
 1448: r498:SF=r934:SF
      REG_DEAD r934:SF
Keep optional reload reg 935
Remove optional reload reg 937
  Restoring original insn:
 1114: r885:SF=r505:SF*r498:SF
      REG_DEAD r498:SF
      REG_DEAD r505:SF
  Deleting move 1451
 1451: r937:SF=r498:SF
      REG_DEAD r498:SF
deleting insn with uid = 1451.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1114:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 88
   Insn 1344: point = 0, n_alt = -1
  BB 102
   Insn 1439: point = 0, n_alt = -1
  BB 63
   Insn 980: point = 0, n_alt = -1
   Insn 979: point = 0, n_alt = 0
   Insn 978: point = 1, n_alt = 0
   Insn 977: point = 3, n_alt = 0
   Insn 976: point = 4, n_alt = 0
  BB 87
   Insn 1396: point = 4, n_alt = -1
   Insn 1296: point = 4, n_alt = 1
   Insn 1295: point = 4, n_alt = 0
   Insn 1294: point = 4, n_alt = 3
   Insn 1293: point = 4, n_alt = -2
   Insn 1292: point = 5, n_alt = 0
   Insn 1291: point = 7, n_alt = 4
   Insn 1290: point = 8, n_alt = 1
   Insn 1289: point = 10, n_alt = 0
   Insn 1288: point = 12, n_alt = 1
   Insn 1287: point = 14, n_alt = 0
   Insn 1286: point = 16, n_alt = 0
   Insn 1285: point = 18, n_alt = 0
  BB 103
   Insn 1442: point = 19, n_alt = -1
  BB 65
   Insn 990: point = 19, n_alt = -1
   Insn 989: point = 19, n_alt = 0
   Insn 988: point = 20, n_alt = 0
   Insn 987: point = 22, n_alt = 0
   Insn 986: point = 23, n_alt = 0
  BB 86
   Insn 1394: point = 24, n_alt = -1
   Insn 1279: point = 24, n_alt = 1
  BB 104
   Insn 1445: point = 25, n_alt = -1
  BB 67
   Insn 998: point = 26, n_alt = -1
   Insn 997: point = 26, n_alt = 0
   Insn 996: point = 27, n_alt = 0
   Insn 995: point = 29, n_alt = 0
   Insn 994: point = 30, n_alt = 0
  BB 85
   Insn 1392: point = 31, n_alt = -1
   Insn 1273: point = 31, n_alt = 1
  BB 84
   Insn 1270: point = 32, n_alt = 8
   Insn 1269: point = 33, n_alt = 0
   Insn 1268: point = 35, n_alt = 4
   Insn 1267: point = 36, n_alt = 3
   Insn 1266: point = 38, n_alt = 0
   Insn 1265: point = 40, n_alt = 0
   Insn 1264: point = 42, n_alt = 0
   Insn 1263: point = 43, n_alt = 0
   Insn 1262: point = 45, n_alt = 0
   Insn 1261: point = 47, n_alt = 0
   Insn 1260: point = 49, n_alt = 0
   Insn 1259: point = 50, n_alt = 1
   Insn 1258: point = 52, n_alt = 0
   Insn 1257: point = 54, n_alt = 0
  BB 83
   Insn 3: point = 56, n_alt = -2
  BB 82
   Insn 1253: point = 59, n_alt = -1
   Insn 1252: point = 59, n_alt = 0
   Insn 1251: point = 60, n_alt = 0
   Insn 1250: point = 62, n_alt = 0
   Insn 1249: point = 64, n_alt = 0
   Insn 1248: point = 65, n_alt = 1
   Insn 1247: point = 65, n_alt = 0
   Insn 1246: point = 67, n_alt = 0
   Insn 1245: point = 68, n_alt = 1
   Insn 1244: point = 68, n_alt = 7
   Insn 1243: point = 70, n_alt = 0
   Insn 1242: point = 72, n_alt = 4
   Insn 1241: point = 73, n_alt = 3
   Insn 1240: point = 75, n_alt = 0
   Insn 1239: point = 77, n_alt = 0
   Insn 1238: point = 79, n_alt = 0
   Insn 1237: point = 80, n_alt = 0
   Insn 1236: point = 82, n_alt = 0
   Insn 1235: point = 84, n_alt = 0
   Insn 1234: point = 86, n_alt = 0
   Insn 1233: point = 87, n_alt = 1
   Insn 1232: point = 89, n_alt = 0
   Insn 1231: point = 91, n_alt = 0
   Insn 1230: point = 92, n_alt = 7
   Insn 1229: point = 93, n_alt = 8
   Insn 1228: point = 94, n_alt = 0
   Insn 1227: point = 96, n_alt = 4
   Insn 1226: point = 97, n_alt = 1
   Insn 1225: point = 99, n_alt = 3
   Insn 1224: point = 101, n_alt = 0
   Insn 1223: point = 103, n_alt = 0
   Insn 1222: point = 105, n_alt = 0
   Insn 1221: point = 106, n_alt = 0
   Insn 1220: point = 108, n_alt = 0
   Insn 1219: point = 110, n_alt = 0
   Insn 1218: point = 112, n_alt = 0
   Insn 1217: point = 113, n_alt = 1
   Insn 1216: point = 115, n_alt = 0
   Insn 1215: point = 117, n_alt = 0
   Insn 1214: point = 118, n_alt = 7
   Insn 1213: point = 120, n_alt = 4
   Insn 1212: point = 121, n_alt = 3
   Insn 1211: point = 123, n_alt = 0
   Insn 1210: point = 125, n_alt = 0
   Insn 1209: point = 127, n_alt = 0
   Insn 1208: point = 128, n_alt = 0
   Insn 1207: point = 130, n_alt = 0
   Insn 1206: point = 132, n_alt = 0
   Insn 1205: point = 133, n_alt = 8
   Insn 1204: point = 134, n_alt = 7
  BB 80
   Insn 1390: point = 136, n_alt = -1
   Insn 1195: point = 136, n_alt = 8
   Insn 1194: point = 137, n_alt = 7
  BB 78
   Insn 1387: point = 139, n_alt = -1
   Insn 1173: point = 139, n_alt = 8
   Insn 1172: point = 140, n_alt = 7
  BB 76
   Insn 1384: point = 142, n_alt = -1
   Insn 1159: point = 142, n_alt = 8
   Insn 1158: point = 143, n_alt = 7
  BB 81
   Insn 1201: point = 145, n_alt = 8
   Insn 1200: point = 146, n_alt = 7
  BB 79
   Insn 1189: point = 148, n_alt = -1
   Insn 1188: point = 148, n_alt = 1
   Insn 1187: point = 149, n_alt = 7
   Insn 1186: point = 150, n_alt = 7
   Insn 1185: point = 152, n_alt = 4
   Insn 1184: point = 153, n_alt = 3
   Insn 1183: point = 155, n_alt = 0
   Insn 1182: point = 157, n_alt = 0
   Insn 1181: point = 159, n_alt = 0
   Insn 1180: point = 160, n_alt = 0
   Insn 1179: point = 162, n_alt = 0
   Insn 1178: point = 164, n_alt = 0
  BB 77
   Insn 1167: point = 166, n_alt = -1
   Insn 1166: point = 166, n_alt = 1
   Insn 1165: point = 167, n_alt = 7
   Insn 1164: point = 168, n_alt = 7
  BB 75
   Insn 1153: point = 170, n_alt = -1
   Insn 1152: point = 170, n_alt = 1
   Insn 1151: point = 171, n_alt = 7
   Insn 1150: point = 172, n_alt = 8
   Insn 1149: point = 173, n_alt = 1
   Insn 1148: point = 175, n_alt = 7
   Insn 1147: point = 176, n_alt = -2
   Insn 1146: point = 178, n_alt = 2
   Insn 1145: point = 180, n_alt = 7
   Insn 1144: point = 181, n_alt = 1
   Insn 1143: point = 183, n_alt = -2
   Insn 1142: point = 185, n_alt = 1
   Insn 1141: point = 187, n_alt = 7
   Insn 1140: point = 188, n_alt = 7
   Insn 1139: point = 189, n_alt = 1
   Insn 1138: point = 191, n_alt = 7
   Insn 1137: point = 192, n_alt = 7
   Insn 1136: point = 193, n_alt = 8
   Insn 1135: point = 194, n_alt = 1
   Insn 1134: point = 196, n_alt = 7
   Insn 1133: point = 197, n_alt = -2
   Insn 1132: point = 199, n_alt = 1
   Insn 1131: point = 201, n_alt = 1
  BB 74
   Insn 1128: point = 204, n_alt = 7
  BB 73
   Insn 1126: point = 206, n_alt = -1
   Insn 1125: point = 206, n_alt = 0
   Insn 1124: point = 207, n_alt = 0
   Insn 1123: point = 209, n_alt = 0
   Insn 1122: point = 211, n_alt = 0
   Insn 1121: point = 212, n_alt = 1
   Insn 1120: point = 212, n_alt = 0
   Insn 1119: point = 214, n_alt = 0
   Insn 1118: point = 215, n_alt = 1
   Insn 1117: point = 216, n_alt = 7
   Insn 1116: point = 217, n_alt = 7
   Insn 1115: point = 218, n_alt = 8
   Insn 1114: point = 219, n_alt = 1
   Insn 1113: point = 221, n_alt = -2
   Insn 1112: point = 222, n_alt = 0
   Insn 1111: point = 222, n_alt = -2
   Insn 1110: point = 223, n_alt = 2
   Insn 1109: point = 225, n_alt = -2
   Insn 1108: point = 227, n_alt = 2
   Insn 1107: point = 229, n_alt = 7
   Insn 1106: point = 230, n_alt = 7
   Insn 1105: point = 231, n_alt = 1
   Insn 1104: point = 233, n_alt = 7
   Insn 1103: point = 234, n_alt = -2
   Insn 1102: point = 236, n_alt = 2
   Insn 1101: point = 238, n_alt = 7
   Insn 1100: point = 239, n_alt = 7
   Insn 1448: point = 240, n_alt = 8
   Insn 1099: point = 242, n_alt = 2
   Insn 1447: point = 242, n_alt = -2
   Insn 1098: point = 244, n_alt = 7
  BB 72
   Insn 1095: point = 246, n_alt = 8
   Insn 1094: point = 247, n_alt = 7
   Insn 1093: point = 248, n_alt = 8
   Insn 1092: point = 249, n_alt = 7
  BB 71
   Insn 1087: point = 251, n_alt = -1
   Insn 1086: point = 251, n_alt = 1
   Insn 1085: point = 252, n_alt = 7
   Insn 1084: point = 253, n_alt = 8
   Insn 1083: point = 254, n_alt = 7
   Insn 1082: point = 255, n_alt = 8
   Insn 1081: point = 256, n_alt = 7
   Insn 1080: point = 257, n_alt = 8
  BB 70
   Insn 1077: point = 259, n_alt = 7
  BB 69
   Insn 1075: point = 261, n_alt = -1
   Insn 1074: point = 261, n_alt = 0
   Insn 1073: point = 262, n_alt = 0
   Insn 1072: point = 264, n_alt = 0
   Insn 1071: point = 266, n_alt = 0
   Insn 1070: point = 267, n_alt = 1
   Insn 1069: point = 267, n_alt = 0
   Insn 1068: point = 269, n_alt = 0
   Insn 1067: point = 270, n_alt = 1
   Insn 1066: point = 270, n_alt = 7
   Insn 1065: point = 271, n_alt = 8
   Insn 1064: point = 272, n_alt = 2
   Insn 1063: point = 274, n_alt = 7
   Insn 1062: point = 275, n_alt = 7
   Insn 1061: point = 276, n_alt = 8
   Insn 1060: point = 277, n_alt = 7
   Insn 1059: point = 279, n_alt = 0
   Insn 1058: point = 281, n_alt = 4
   Insn 1057: point = 282, n_alt = 3
   Insn 1056: point = 284, n_alt = 0
   Insn 1055: point = 286, n_alt = 0
   Insn 1054: point = 288, n_alt = 0
   Insn 1053: point = 289, n_alt = 0
   Insn 1052: point = 291, n_alt = 0
   Insn 1051: point = 293, n_alt = 0
   Insn 1050: point = 295, n_alt = 0
   Insn 1049: point = 296, n_alt = 1
   Insn 1048: point = 298, n_alt = 0
   Insn 1047: point = 300, n_alt = 0
   Insn 1046: point = 301, n_alt = 8
   Insn 1045: point = 302, n_alt = 1
   Insn 1044: point = 304, n_alt = 7
   Insn 1043: point = 305, n_alt = -2
   Insn 1042: point = 307, n_alt = 1
   Insn 1041: point = 309, n_alt = 7
   Insn 1040: point = 311, n_alt = 4
   Insn 1039: point = 312, n_alt = 3
   Insn 1038: point = 314, n_alt = 0
   Insn 1037: point = 316, n_alt = 0
   Insn 1036: point = 318, n_alt = 0
   Insn 1035: point = 319, n_alt = 0
   Insn 1034: point = 321, n_alt = 0
   Insn 1033: point = 323, n_alt = 0
   Insn 1032: point = 325, n_alt = 0
   Insn 1031: point = 326, n_alt = 1
   Insn 1030: point = 328, n_alt = 0
   Insn 1029: point = 330, n_alt = 0
   Insn 1028: point = 332, n_alt = 0
   Insn 1027: point = 333, n_alt = 7
   Insn 1026: point = 335, n_alt = 4
   Insn 1025: point = 336, n_alt = 3
   Insn 1024: point = 338, n_alt = 0
   Insn 1023: point = 340, n_alt = 0
   Insn 1022: point = 342, n_alt = 0
   Insn 1021: point = 343, n_alt = 0
   Insn 1020: point = 345, n_alt = 0
   Insn 1019: point = 347, n_alt = 0
   Insn 1018: point = 349, n_alt = 0
   Insn 1017: point = 350, n_alt = 1
   Insn 1016: point = 352, n_alt = 0
   Insn 1015: point = 354, n_alt = 0
  BB 68
   Insn 1013: point = 356, n_alt = -1
   Insn 1012: point = 356, n_alt = 1
   Insn 1011: point = 357, n_alt = 0
   Insn 1010: point = 358, n_alt = 1
   Insn 1009: point = 359, n_alt = 0
   Insn 1008: point = 361, n_alt = 0
   Insn 1007: point = 363, n_alt = 4
   Insn 1006: point = 364, n_alt = 3
   Insn 1005: point = 366, n_alt = 0
   Insn 1004: point = 368, n_alt = 0
   Insn 1003: point = 370, n_alt = 0
   Insn 1002: point = 371, n_alt = 0
   Insn 1001: point = 373, n_alt = 0
   Insn 1000: point = 375, n_alt = 0
  BB 66
   Insn 992: point = 377, n_alt = 1
  BB 64
   Insn 984: point = 378, n_alt = 1
   Insn 983: point = 379, n_alt = 0
   Insn 982: point = 380, n_alt = 0
  BB 62
   Insn 974: point = 381, n_alt = 1
   Insn 973: point = 381, n_alt = 0
   Insn 972: point = 381, n_alt = 3
   Insn 971: point = 381, n_alt = 2
   Insn 970: point = 381, n_alt = 4
   Insn 969: point = 381, n_alt = 4
   Insn 968: point = 381, n_alt = 0
   Insn 967: point = 381, n_alt = 0
   Insn 966: point = 381, n_alt = 3
   Insn 965: point = 381, n_alt = 4
   Insn 964: point = 381, n_alt = 4
   Insn 963: point = 381, n_alt = 4
   Insn 962: point = 381, n_alt = 4
   Insn 961: point = 381, n_alt = 4
   Insn 960: point = 381, n_alt = 2
   Insn 959: point = 381, n_alt = 0
   Insn 958: point = 381, n_alt = 0
   Insn 957: point = 381, n_alt = 0
   Insn 956: point = 381, n_alt = 3
   Insn 955: point = 381, n_alt = 4
   Insn 954: point = 381, n_alt = 2
   Insn 953: point = 381, n_alt = 2
   Insn 952: point = 381, n_alt = 2
   Insn 951: point = 381, n_alt = 2
   Insn 950: point = 381, n_alt = 0
   Insn 949: point = 381, n_alt = 3
   Insn 948: point = 381, n_alt = 2
   Insn 947: point = 381, n_alt = 4
   Insn 946: point = 381, n_alt = 4
   Insn 945: point = 381, n_alt = 0
   Insn 944: point = 381, n_alt = 3
   Insn 943: point = 381, n_alt = 2
   Insn 942: point = 381, n_alt = 4
   Insn 941: point = 381, n_alt = 4
   Insn 940: point = 381, n_alt = 0
   Insn 939: point = 381, n_alt = 3
   Insn 938: point = 381, n_alt = 2
   Insn 937: point = 381, n_alt = 4
   Insn 936: point = 381, n_alt = 4
  BB 100
   Insn 1433: point = 381, n_alt = -1
  BB 52
   Insn 719: point = 381, n_alt = -1
   Insn 718: point = 381, n_alt = 0
   Insn 717: point = 382, n_alt = 0
   Insn 716: point = 384, n_alt = 0
   Insn 715: point = 385, n_alt = 0
  BB 61
   Insn 1381: point = 386, n_alt = -1
   Insn 930: point = 386, n_alt = 1
  BB 101
   Insn 1436: point = 387, n_alt = -1
  BB 54
   Insn 727: point = 388, n_alt = -1
   Insn 726: point = 388, n_alt = 0
   Insn 725: point = 389, n_alt = 0
   Insn 724: point = 391, n_alt = 0
   Insn 723: point = 392, n_alt = 0
  BB 60
   Insn 1379: point = 393, n_alt = -1
   Insn 924: point = 393, n_alt = 1
  BB 58
   Insn 1377: point = 394, n_alt = -1
   Insn 842: point = 394, n_alt = 8
   Insn 841: point = 395, n_alt = 7
   Insn 840: point = 396, n_alt = 4
   Insn 839: point = 397, n_alt = 3
   Insn 838: point = 399, n_alt = 0
   Insn 837: point = 401, n_alt = 1
   Insn 836: point = 403, n_alt = 0
   Insn 835: point = 404, n_alt = 0
   Insn 834: point = 406, n_alt = 1
   Insn 833: point = 408, n_alt = 0
  BB 59
   Insn 921: point = 410, n_alt = 8
   Insn 920: point = 411, n_alt = 4
   Insn 919: point = 412, n_alt = 7
   Insn 918: point = 414, n_alt = 4
   Insn 917: point = 415, n_alt = 3
   Insn 916: point = 417, n_alt = 0
   Insn 915: point = 419, n_alt = 1
   Insn 914: point = 421, n_alt = 0
   Insn 913: point = 422, n_alt = 0
   Insn 912: point = 424, n_alt = 1
   Insn 911: point = 426, n_alt = 0
   Insn 910: point = 427, n_alt = 3
   Insn 909: point = 429, n_alt = 0
   Insn 908: point = 431, n_alt = 1
   Insn 907: point = 433, n_alt = 0
   Insn 906: point = 434, n_alt = 0
   Insn 905: point = 436, n_alt = 1
   Insn 904: point = 438, n_alt = 0
   Insn 903: point = 439, n_alt = 8
   Insn 902: point = 440, n_alt = 4
   Insn 901: point = 441, n_alt = 7
   Insn 900: point = 443, n_alt = 0
   Insn 899: point = 445, n_alt = 4
   Insn 898: point = 446, n_alt = 3
   Insn 897: point = 448, n_alt = 0
   Insn 896: point = 450, n_alt = 1
   Insn 895: point = 452, n_alt = 0
   Insn 894: point = 453, n_alt = 0
   Insn 893: point = 455, n_alt = 1
   Insn 892: point = 457, n_alt = 0
   Insn 891: point = 458, n_alt = 3
   Insn 890: point = 460, n_alt = 0
   Insn 889: point = 462, n_alt = 1
   Insn 888: point = 464, n_alt = 0
   Insn 887: point = 465, n_alt = 0
   Insn 886: point = 467, n_alt = 0
   Insn 885: point = 469, n_alt = 1
   Insn 884: point = 471, n_alt = 0
   Insn 883: point = 472, n_alt = 1
   Insn 882: point = 474, n_alt = 1
   Insn 881: point = 476, n_alt = 0
   Insn 880: point = 477, n_alt = 8
   Insn 879: point = 478, n_alt = 4
   Insn 878: point = 479, n_alt = 7
   Insn 877: point = 481, n_alt = 0
   Insn 876: point = 483, n_alt = 4
   Insn 875: point = 484, n_alt = 3
   Insn 874: point = 486, n_alt = 0
   Insn 873: point = 488, n_alt = 1
   Insn 872: point = 490, n_alt = 0
   Insn 871: point = 491, n_alt = 0
   Insn 870: point = 493, n_alt = 1
   Insn 869: point = 495, n_alt = 0
   Insn 868: point = 496, n_alt = 3
   Insn 867: point = 498, n_alt = 0
   Insn 866: point = 500, n_alt = 1
   Insn 865: point = 502, n_alt = 0
   Insn 864: point = 503, n_alt = 0
   Insn 863: point = 505, n_alt = 0
   Insn 862: point = 507, n_alt = 1
   Insn 861: point = 509, n_alt = 0
   Insn 860: point = 510, n_alt = 1
   Insn 859: point = 512, n_alt = 1
   Insn 858: point = 514, n_alt = 0
   Insn 857: point = 515, n_alt = 1
   Insn 856: point = 516, n_alt = 0
   Insn 855: point = 518, n_alt = 0
   Insn 854: point = 520, n_alt = 4
   Insn 853: point = 521, n_alt = 3
   Insn 852: point = 523, n_alt = 0
   Insn 851: point = 525, n_alt = 1
   Insn 850: point = 527, n_alt = 0
   Insn 849: point = 528, n_alt = 0
   Insn 848: point = 530, n_alt = 1
   Insn 847: point = 532, n_alt = 0
  BB 57
   Insn 828: point = 534, n_alt = -1
   Insn 827: point = 534, n_alt = 1
   Insn 826: point = 535, n_alt = 7
   Insn 825: point = 536, n_alt = 7
   Insn 824: point = 538, n_alt = 4
   Insn 823: point = 539, n_alt = 3
   Insn 822: point = 541, n_alt = 0
   Insn 821: point = 543, n_alt = 1
   Insn 820: point = 545, n_alt = 0
   Insn 819: point = 546, n_alt = 0
   Insn 818: point = 548, n_alt = 1
   Insn 817: point = 550, n_alt = 0
   Insn 816: point = 551, n_alt = 8
   Insn 815: point = 552, n_alt = 4
   Insn 814: point = 553, n_alt = 1
   Insn 813: point = 555, n_alt = 3
   Insn 812: point = 557, n_alt = 0
   Insn 811: point = 559, n_alt = 1
   Insn 810: point = 561, n_alt = 0
   Insn 809: point = 562, n_alt = 0
   Insn 808: point = 564, n_alt = 1
   Insn 807: point = 566, n_alt = 0
   Insn 806: point = 567, n_alt = 7
   Insn 805: point = 569, n_alt = 4
   Insn 804: point = 570, n_alt = 3
   Insn 803: point = 572, n_alt = 0
   Insn 802: point = 574, n_alt = 1
   Insn 801: point = 576, n_alt = 0
   Insn 800: point = 577, n_alt = 0
   Insn 799: point = 579, n_alt = 1
   Insn 798: point = 581, n_alt = 0
   Insn 797: point = 582, n_alt = 8
   Insn 796: point = 583, n_alt = 4
   Insn 795: point = 584, n_alt = 1
   Insn 794: point = 586, n_alt = 3
   Insn 793: point = 588, n_alt = 0
   Insn 792: point = 590, n_alt = 1
   Insn 791: point = 592, n_alt = 0
   Insn 790: point = 593, n_alt = 0
   Insn 789: point = 595, n_alt = 1
   Insn 788: point = 597, n_alt = 0
   Insn 787: point = 598, n_alt = 7
   Insn 786: point = 600, n_alt = 4
   Insn 785: point = 601, n_alt = 3
   Insn 784: point = 603, n_alt = 0
   Insn 783: point = 605, n_alt = 1
   Insn 782: point = 607, n_alt = 0
   Insn 781: point = 608, n_alt = 0
   Insn 780: point = 610, n_alt = 1
   Insn 779: point = 612, n_alt = 0
   Insn 778: point = 613, n_alt = 8
   Insn 777: point = 614, n_alt = 4
   Insn 776: point = 615, n_alt = 1
   Insn 775: point = 617, n_alt = 3
   Insn 774: point = 619, n_alt = 0
   Insn 773: point = 621, n_alt = 1
   Insn 772: point = 623, n_alt = 0
   Insn 771: point = 624, n_alt = 0
   Insn 770: point = 626, n_alt = 1
   Insn 769: point = 628, n_alt = 0
   Insn 768: point = 629, n_alt = 7
   Insn 767: point = 631, n_alt = 4
   Insn 766: point = 632, n_alt = 3
   Insn 765: point = 634, n_alt = 0
   Insn 764: point = 636, n_alt = 1
   Insn 763: point = 638, n_alt = 0
   Insn 762: point = 639, n_alt = 0
   Insn 761: point = 641, n_alt = 1
   Insn 760: point = 643, n_alt = 0
   Insn 759: point = 644, n_alt = 8
   Insn 758: point = 645, n_alt = 2
   Insn 757: point = 647, n_alt = 7
   Insn 756: point = 648, n_alt = 7
   Insn 755: point = 650, n_alt = 4
   Insn 754: point = 651, n_alt = 3
   Insn 753: point = 653, n_alt = 0
   Insn 752: point = 655, n_alt = 1
   Insn 751: point = 657, n_alt = 0
   Insn 750: point = 658, n_alt = 0
   Insn 749: point = 660, n_alt = 1
   Insn 748: point = 662, n_alt = 0
  BB 56
   Insn 743: point = 664, n_alt = -1
   Insn 742: point = 664, n_alt = 1
   Insn 741: point = 665, n_alt = 7
  BB 55
   Insn 740: point = 667, n_alt = -1
   Insn 739: point = 667, n_alt = 1
   Insn 738: point = 668, n_alt = 7
   Insn 737: point = 669, n_alt = 7
   Insn 736: point = 671, n_alt = 4
   Insn 735: point = 672, n_alt = 3
   Insn 734: point = 674, n_alt = 0
   Insn 733: point = 676, n_alt = 1
   Insn 732: point = 678, n_alt = 0
   Insn 731: point = 679, n_alt = 0
   Insn 730: point = 681, n_alt = 1
   Insn 729: point = 683, n_alt = 0
  BB 53
   Insn 721: point = 685, n_alt = 1
  BB 51
   Insn 713: point = 686, n_alt = 1
   Insn 712: point = 687, n_alt = 0
   Insn 711: point = 688, n_alt = 0
  BB 97
   Insn 1424: point = 689, n_alt = -1
  BB 31
   Insn 351: point = 689, n_alt = -1
   Insn 350: point = 689, n_alt = 0
   Insn 349: point = 690, n_alt = 0
   Insn 348: point = 692, n_alt = 0
   Insn 347: point = 693, n_alt = 0
  BB 50
   Insn 1374: point = 693, n_alt = -1
   Insn 705: point = 693, n_alt = 1
  BB 98
   Insn 1427: point = 693, n_alt = -1
  BB 33
   Insn 361: point = 693, n_alt = -1
   Insn 360: point = 693, n_alt = 0
   Insn 359: point = 694, n_alt = 0
   Insn 358: point = 696, n_alt = 0
   Insn 357: point = 697, n_alt = 0
  BB 49
   Insn 1372: point = 698, n_alt = -1
   Insn 699: point = 698, n_alt = 1
  BB 99
   Insn 1430: point = 699, n_alt = -1
  BB 35
   Insn 369: point = 700, n_alt = -1
   Insn 368: point = 700, n_alt = 0
   Insn 367: point = 701, n_alt = 0
   Insn 366: point = 703, n_alt = 0
   Insn 365: point = 704, n_alt = 0
  BB 48
   Insn 1370: point = 705, n_alt = -1
   Insn 693: point = 705, n_alt = 1
  BB 47
   Insn 690: point = 706, n_alt = 8
   Insn 689: point = 707, n_alt = 4
   Insn 688: point = 708, n_alt = 1
   Insn 687: point = 710, n_alt = 3
   Insn 686: point = 712, n_alt = 0
   Insn 685: point = 714, n_alt = 1
   Insn 684: point = 716, n_alt = 0
   Insn 683: point = 717, n_alt = 0
   Insn 682: point = 719, n_alt = 1
   Insn 681: point = 721, n_alt = 0
   Insn 680: point = 722, n_alt = 1
   Insn 679: point = 724, n_alt = 7
   Insn 678: point = 725, n_alt = 7
   Insn 677: point = 727, n_alt = 4
   Insn 676: point = 728, n_alt = 3
   Insn 675: point = 730, n_alt = 0
   Insn 674: point = 732, n_alt = 1
   Insn 673: point = 734, n_alt = 0
   Insn 672: point = 735, n_alt = 0
   Insn 671: point = 737, n_alt = 1
   Insn 670: point = 739, n_alt = 0
   Insn 669: point = 740, n_alt = 8
   Insn 668: point = 741, n_alt = 4
   Insn 667: point = 742, n_alt = 1
   Insn 666: point = 744, n_alt = 3
   Insn 665: point = 746, n_alt = 0
   Insn 664: point = 748, n_alt = 1
   Insn 663: point = 750, n_alt = 0
   Insn 662: point = 751, n_alt = 0
   Insn 661: point = 753, n_alt = 1
   Insn 660: point = 755, n_alt = 0
   Insn 659: point = 756, n_alt = 1
   Insn 658: point = 758, n_alt = 7
   Insn 657: point = 760, n_alt = 0
   Insn 656: point = 762, n_alt = 4
   Insn 655: point = 763, n_alt = 3
   Insn 654: point = 765, n_alt = 0
   Insn 653: point = 767, n_alt = 1
   Insn 652: point = 769, n_alt = 0
   Insn 651: point = 770, n_alt = 0
   Insn 650: point = 772, n_alt = 0
   Insn 649: point = 774, n_alt = 1
   Insn 648: point = 776, n_alt = 0
   Insn 647: point = 777, n_alt = 1
   Insn 646: point = 779, n_alt = 1
   Insn 645: point = 781, n_alt = 0
   Insn 644: point = 782, n_alt = 7
   Insn 643: point = 784, n_alt = 4
   Insn 642: point = 785, n_alt = 3
   Insn 641: point = 787, n_alt = 0
   Insn 640: point = 789, n_alt = 1
   Insn 639: point = 791, n_alt = 0
   Insn 638: point = 792, n_alt = 0
   Insn 637: point = 794, n_alt = 1
   Insn 636: point = 796, n_alt = 0
   Insn 635: point = 797, n_alt = 8
   Insn 634: point = 798, n_alt = 4
   Insn 633: point = 799, n_alt = 1
   Insn 632: point = 801, n_alt = 3
   Insn 631: point = 803, n_alt = 0
   Insn 630: point = 805, n_alt = 1
   Insn 629: point = 807, n_alt = 0
   Insn 628: point = 808, n_alt = 0
   Insn 627: point = 810, n_alt = 1
   Insn 626: point = 812, n_alt = 0
   Insn 625: point = 813, n_alt = 1
   Insn 624: point = 815, n_alt = 7
   Insn 623: point = 817, n_alt = 0
   Insn 622: point = 819, n_alt = 4
   Insn 621: point = 820, n_alt = 3
   Insn 620: point = 822, n_alt = 0
   Insn 619: point = 824, n_alt = 1
   Insn 618: point = 826, n_alt = 0
   Insn 617: point = 827, n_alt = 0
   Insn 616: point = 829, n_alt = 0
   Insn 615: point = 831, n_alt = 1
   Insn 614: point = 833, n_alt = 0
   Insn 613: point = 834, n_alt = 1
   Insn 612: point = 836, n_alt = 1
   Insn 611: point = 838, n_alt = 0
   Insn 610: point = 839, n_alt = 7
   Insn 609: point = 841, n_alt = 4
   Insn 608: point = 842, n_alt = 3
   Insn 607: point = 844, n_alt = 0
   Insn 606: point = 846, n_alt = 1
   Insn 605: point = 848, n_alt = 0
   Insn 604: point = 849, n_alt = 0
   Insn 603: point = 851, n_alt = 1
   Insn 602: point = 853, n_alt = 0
   Insn 601: point = 854, n_alt = 8
   Insn 600: point = 855, n_alt = 4
   Insn 599: point = 856, n_alt = 1
   Insn 598: point = 858, n_alt = 3
   Insn 597: point = 860, n_alt = 0
   Insn 596: point = 862, n_alt = 1
   Insn 595: point = 864, n_alt = 0
   Insn 594: point = 865, n_alt = 0
   Insn 593: point = 867, n_alt = 1
   Insn 592: point = 869, n_alt = 0
   Insn 591: point = 870, n_alt = 7
   Insn 590: point = 872, n_alt = 4
   Insn 589: point = 873, n_alt = 3
   Insn 588: point = 875, n_alt = 0
   Insn 587: point = 877, n_alt = 1
   Insn 586: point = 879, n_alt = 0
   Insn 585: point = 880, n_alt = 0
   Insn 584: point = 882, n_alt = 1
   Insn 583: point = 884, n_alt = 0
   Insn 582: point = 885, n_alt = 8
   Insn 581: point = 886, n_alt = 2
   Insn 580: point = 888, n_alt = 7
   Insn 579: point = 890, n_alt = 4
   Insn 578: point = 891, n_alt = 3
   Insn 577: point = 893, n_alt = 0
   Insn 576: point = 895, n_alt = 1
   Insn 575: point = 897, n_alt = 0
   Insn 574: point = 898, n_alt = 0
   Insn 573: point = 900, n_alt = 0
   Insn 572: point = 902, n_alt = 1
   Insn 571: point = 904, n_alt = 0
   Insn 570: point = 905, n_alt = 1
   Insn 569: point = 907, n_alt = 1
   Insn 568: point = 909, n_alt = 0
   Insn 567: point = 910, n_alt = 7
   Insn 566: point = 912, n_alt = 4
   Insn 565: point = 913, n_alt = 3
   Insn 564: point = 915, n_alt = 0
   Insn 563: point = 917, n_alt = 1
   Insn 562: point = 919, n_alt = 0
   Insn 561: point = 920, n_alt = 0
   Insn 560: point = 922, n_alt = 0
   Insn 559: point = 924, n_alt = 1
   Insn 558: point = 926, n_alt = 0
   Insn 557: point = 927, n_alt = 1
   Insn 556: point = 929, n_alt = 1
   Insn 555: point = 931, n_alt = 0
   Insn 554: point = 933, n_alt = 0
  BB 46
   Insn 549: point = 935, n_alt = -1
   Insn 548: point = 935, n_alt = 1
   Insn 547: point = 936, n_alt = 7
  BB 45
   Insn 542: point = 938, n_alt = -1
   Insn 541: point = 938, n_alt = 1
   Insn 540: point = 939, n_alt = 7
   Insn 539: point = 940, n_alt = 8
   Insn 538: point = 941, n_alt = 7
   Insn 537: point = 942, n_alt = 4
   Insn 536: point = 943, n_alt = 3
   Insn 535: point = 945, n_alt = 0
   Insn 534: point = 947, n_alt = 1
   Insn 533: point = 949, n_alt = 0
   Insn 532: point = 950, n_alt = 0
   Insn 531: point = 952, n_alt = 1
   Insn 530: point = 954, n_alt = 0
  BB 43
   Insn 1368: point = 956, n_alt = -1
   Insn 521: point = 956, n_alt = 8
   Insn 520: point = 957, n_alt = 7
  BB 40
   Insn 1366: point = 959, n_alt = -1
   Insn 496: point = 959, n_alt = 8
   Insn 495: point = 960, n_alt = 7
  BB 42
   Insn 515: point = 962, n_alt = -1
   Insn 514: point = 962, n_alt = 1
   Insn 513: point = 963, n_alt = 7
  BB 41
   Insn 512: point = 965, n_alt = -1
   Insn 511: point = 965, n_alt = 1
   Insn 510: point = 966, n_alt = 7
   Insn 509: point = 967, n_alt = 7
   Insn 508: point = 969, n_alt = 4
   Insn 507: point = 970, n_alt = 3
   Insn 506: point = 972, n_alt = 0
   Insn 505: point = 974, n_alt = 1
   Insn 504: point = 976, n_alt = 0
   Insn 503: point = 977, n_alt = 0
   Insn 502: point = 979, n_alt = 1
   Insn 501: point = 981, n_alt = 0
  BB 39
   Insn 490: point = 983, n_alt = -1
   Insn 489: point = 983, n_alt = 1
   Insn 488: point = 984, n_alt = 7
   Insn 487: point = 986, n_alt = 0
   Insn 486: point = 988, n_alt = 4
   Insn 485: point = 989, n_alt = 3
   Insn 484: point = 991, n_alt = 0
   Insn 483: point = 993, n_alt = 1
   Insn 482: point = 995, n_alt = 0
   Insn 481: point = 996, n_alt = 0
   Insn 480: point = 998, n_alt = 0
   Insn 479: point = 1000, n_alt = 1
   Insn 478: point = 1002, n_alt = 0
   Insn 477: point = 1003, n_alt = 1
   Insn 476: point = 1005, n_alt = 1
   Insn 475: point = 1007, n_alt = 0
  BB 44
   Insn 527: point = 1009, n_alt = 8
   Insn 526: point = 1010, n_alt = 7
  BB 38
   Insn 1363: point = 1012, n_alt = -1
   Insn 470: point = 1012, n_alt = 8
   Insn 469: point = 1013, n_alt = 7
  BB 37
   Insn 464: point = 1015, n_alt = -1
   Insn 463: point = 1015, n_alt = 1
   Insn 462: point = 1016, n_alt = 7
   Insn 461: point = 1017, n_alt = 7
   Insn 460: point = 1019, n_alt = 0
   Insn 459: point = 1021, n_alt = 4
   Insn 458: point = 1022, n_alt = 3
   Insn 457: point = 1024, n_alt = 0
   Insn 456: point = 1026, n_alt = 1
   Insn 455: point = 1028, n_alt = 0
   Insn 454: point = 1029, n_alt = 0
   Insn 453: point = 1031, n_alt = 0
   Insn 452: point = 1033, n_alt = 1
   Insn 451: point = 1035, n_alt = 0
   Insn 450: point = 1036, n_alt = 1
   Insn 449: point = 1038, n_alt = 1
   Insn 448: point = 1040, n_alt = 0
  BB 36
   Insn 443: point = 1042, n_alt = -1
   Insn 442: point = 1042, n_alt = 1
   Insn 441: point = 1043, n_alt = 7
   Insn 440: point = 1045, n_alt = 4
   Insn 439: point = 1046, n_alt = 3
   Insn 438: point = 1048, n_alt = 0
   Insn 437: point = 1050, n_alt = 1
   Insn 436: point = 1052, n_alt = 0
   Insn 435: point = 1053, n_alt = 0
   Insn 434: point = 1055, n_alt = 0
   Insn 433: point = 1057, n_alt = 1
   Insn 432: point = 1059, n_alt = 0
   Insn 431: point = 1060, n_alt = 1
   Insn 430: point = 1062, n_alt = 1
   Insn 429: point = 1064, n_alt = 0
   Insn 428: point = 1065, n_alt = 8
   Insn 427: point = 1066, n_alt = 7
   Insn 426: point = 1067, n_alt = 8
   Insn 425: point = 1068, n_alt = 1
   Insn 424: point = 1070, n_alt = 7
   Insn 423: point = 1071, n_alt = 7
   Insn 422: point = 1073, n_alt = 4
   Insn 421: point = 1074, n_alt = 3
   Insn 420: point = 1076, n_alt = 0
   Insn 419: point = 1078, n_alt = 1
   Insn 418: point = 1080, n_alt = 0
   Insn 417: point = 1081, n_alt = 0
   Insn 416: point = 1083, n_alt = 1
   Insn 415: point = 1085, n_alt = 0
   Insn 414: point = 1086, n_alt = 8
   Insn 413: point = 1087, n_alt = 2
   Insn 412: point = 1089, n_alt = 7
   Insn 411: point = 1090, n_alt = 7
   Insn 410: point = 1092, n_alt = 4
   Insn 409: point = 1093, n_alt = 3
   Insn 408: point = 1095, n_alt = 0
   Insn 407: point = 1097, n_alt = 1
   Insn 406: point = 1099, n_alt = 0
   Insn 405: point = 1100, n_alt = 0
   Insn 404: point = 1102, n_alt = 1
   Insn 403: point = 1104, n_alt = 0
   Insn 402: point = 1105, n_alt = 8
   Insn 401: point = 1106, n_alt = 1
   Insn 400: point = 1108, n_alt = 7
   Insn 399: point = 1109, n_alt = -2
   Insn 398: point = 1111, n_alt = 1
   Insn 397: point = 1113, n_alt = 7
   Insn 396: point = 1115, n_alt = 4
   Insn 395: point = 1116, n_alt = 3
   Insn 394: point = 1118, n_alt = 0
   Insn 393: point = 1120, n_alt = 1
   Insn 392: point = 1122, n_alt = 0
   Insn 391: point = 1123, n_alt = 0
   Insn 390: point = 1125, n_alt = 0
   Insn 389: point = 1127, n_alt = 1
   Insn 388: point = 1129, n_alt = 0
   Insn 387: point = 1130, n_alt = 1
   Insn 386: point = 1132, n_alt = 1
   Insn 385: point = 1134, n_alt = 0
   Insn 384: point = 1136, n_alt = 0
   Insn 383: point = 1137, n_alt = 7
   Insn 382: point = 1139, n_alt = 4
   Insn 381: point = 1140, n_alt = 3
   Insn 380: point = 1142, n_alt = 0
   Insn 379: point = 1144, n_alt = 1
   Insn 378: point = 1146, n_alt = 0
   Insn 377: point = 1147, n_alt = 0
   Insn 376: point = 1149, n_alt = 0
   Insn 375: point = 1151, n_alt = 1
   Insn 374: point = 1153, n_alt = 0
   Insn 373: point = 1154, n_alt = 1
   Insn 372: point = 1156, n_alt = 1
   Insn 371: point = 1158, n_alt = 0
  BB 34
   Insn 363: point = 1160, n_alt = 1
  BB 32
   Insn 355: point = 1161, n_alt = 1
   Insn 354: point = 1162, n_alt = 0
   Insn 353: point = 1163, n_alt = 0
  BB 30
   Insn 345: point = 1164, n_alt = 1
  BB 95
   Insn 1418: point = 1164, n_alt = -1
  BB 25
   Insn 250: point = 1164, n_alt = -1
   Insn 249: point = 1164, n_alt = 0
   Insn 248: point = 1165, n_alt = 0
   Insn 247: point = 1167, n_alt = 0
   Insn 246: point = 1168, n_alt = 0
  BB 29
   Insn 1359: point = 1169, n_alt = -1
   Insn 339: point = 1169, n_alt = 1
  BB 96
   Insn 1421: point = 1170, n_alt = -1
  BB 27
   Insn 258: point = 1171, n_alt = -1
   Insn 257: point = 1171, n_alt = 0
   Insn 256: point = 1172, n_alt = 0
   Insn 255: point = 1174, n_alt = 0
   Insn 254: point = 1175, n_alt = 0
  BB 28
   Insn 1357: point = 1176, n_alt = -1
   Insn 333: point = 1176, n_alt = 1
   Insn 332: point = 1176, n_alt = 8
   Insn 331: point = 1177, n_alt = 7
   Insn 330: point = 1178, n_alt = 4
   Insn 329: point = 1179, n_alt = 3
   Insn 328: point = 1181, n_alt = 0
   Insn 327: point = 1183, n_alt = 1
   Insn 326: point = 1185, n_alt = 0
   Insn 325: point = 1186, n_alt = 0
   Insn 324: point = 1188, n_alt = 1
   Insn 323: point = 1190, n_alt = 0
   Insn 322: point = 1191, n_alt = 8
   Insn 321: point = 1192, n_alt = 7
   Insn 320: point = 1193, n_alt = 4
   Insn 319: point = 1194, n_alt = 3
   Insn 318: point = 1196, n_alt = 0
   Insn 317: point = 1198, n_alt = 1
   Insn 316: point = 1200, n_alt = 0
   Insn 315: point = 1201, n_alt = 0
   Insn 314: point = 1203, n_alt = 1
   Insn 313: point = 1205, n_alt = 0
   Insn 312: point = 1206, n_alt = 8
   Insn 311: point = 1207, n_alt = 7
   Insn 310: point = 1208, n_alt = 4
   Insn 309: point = 1209, n_alt = 3
   Insn 308: point = 1211, n_alt = 0
   Insn 307: point = 1213, n_alt = 1
   Insn 306: point = 1215, n_alt = 0
   Insn 305: point = 1216, n_alt = 0
   Insn 304: point = 1218, n_alt = 1
   Insn 303: point = 1220, n_alt = 0
   Insn 302: point = 1221, n_alt = 8
   Insn 301: point = 1222, n_alt = 7
   Insn 300: point = 1223, n_alt = 4
   Insn 299: point = 1224, n_alt = 3
   Insn 298: point = 1226, n_alt = 0
   Insn 297: point = 1228, n_alt = 1
   Insn 296: point = 1230, n_alt = 0
   Insn 295: point = 1231, n_alt = 0
   Insn 294: point = 1233, n_alt = 1
   Insn 293: point = 1235, n_alt = 0
   Insn 292: point = 1236, n_alt = 8
   Insn 291: point = 1237, n_alt = 7
   Insn 290: point = 1238, n_alt = 4
   Insn 289: point = 1239, n_alt = 3
   Insn 288: point = 1241, n_alt = 0
   Insn 287: point = 1243, n_alt = 1
   Insn 286: point = 1245, n_alt = 0
   Insn 285: point = 1246, n_alt = 0
   Insn 284: point = 1248, n_alt = 1
   Insn 283: point = 1250, n_alt = 0
   Insn 282: point = 1251, n_alt = 8
   Insn 281: point = 1252, n_alt = 4
   Insn 280: point = 1253, n_alt = 2
   Insn 279: point = 1255, n_alt = 7
   Insn 278: point = 1256, n_alt = 3
   Insn 277: point = 1258, n_alt = 0
   Insn 276: point = 1260, n_alt = 1
   Insn 275: point = 1262, n_alt = 0
   Insn 274: point = 1263, n_alt = 0
   Insn 273: point = 1265, n_alt = 1
   Insn 272: point = 1267, n_alt = 0
   Insn 271: point = 1268, n_alt = 1
   Insn 270: point = 1270, n_alt = 7
   Insn 269: point = 1272, n_alt = 4
   Insn 268: point = 1273, n_alt = 7
   Insn 267: point = 1275, n_alt = 4
   Insn 266: point = 1276, n_alt = 3
   Insn 265: point = 1278, n_alt = 0
   Insn 264: point = 1280, n_alt = 1
   Insn 263: point = 1282, n_alt = 0
   Insn 262: point = 1283, n_alt = 0
   Insn 261: point = 1285, n_alt = 1
   Insn 260: point = 1287, n_alt = 0
  BB 26
   Insn 252: point = 1289, n_alt = 1
  BB 24
   Insn 244: point = 1290, n_alt = 1
   Insn 243: point = 1291, n_alt = 0
   Insn 242: point = 1292, n_alt = 0
  BB 92
   Insn 1409: point = 1293, n_alt = -1
  BB 14
   Insn 109: point = 1293, n_alt = -1
   Insn 108: point = 1293, n_alt = 0
   Insn 107: point = 1294, n_alt = 0
   Insn 106: point = 1296, n_alt = 0
   Insn 105: point = 1297, n_alt = 0
  BB 23
   Insn 1355: point = 1297, n_alt = -1
   Insn 236: point = 1297, n_alt = 1
   Insn 235: point = 1297, n_alt = 0
   Insn 234: point = 1297, n_alt = 3
   Insn 233: point = 1297, n_alt = -2
   Insn 232: point = 1298, n_alt = 0
   Insn 231: point = 1300, n_alt = 4
   Insn 230: point = 1301, n_alt = 1
   Insn 229: point = 1303, n_alt = 0
   Insn 228: point = 1305, n_alt = 1
   Insn 227: point = 1307, n_alt = 0
   Insn 226: point = 1309, n_alt = 0
   Insn 225: point = 1311, n_alt = 0
   Insn 224: point = 1312, n_alt = 0
   Insn 223: point = 1312, n_alt = 3
   Insn 222: point = 1312, n_alt = -2
   Insn 221: point = 1313, n_alt = 0
   Insn 220: point = 1315, n_alt = 4
   Insn 219: point = 1316, n_alt = 1
   Insn 218: point = 1318, n_alt = 0
   Insn 217: point = 1320, n_alt = 1
   Insn 216: point = 1322, n_alt = 0
   Insn 215: point = 1324, n_alt = 0
   Insn 214: point = 1326, n_alt = 0
  BB 93
   Insn 1412: point = 1327, n_alt = -1
  BB 16
   Insn 119: point = 1327, n_alt = -1
   Insn 118: point = 1327, n_alt = 0
   Insn 117: point = 1328, n_alt = 0
   Insn 116: point = 1330, n_alt = 0
   Insn 115: point = 1331, n_alt = 0
  BB 22
   Insn 1353: point = 1332, n_alt = -1
   Insn 208: point = 1332, n_alt = 1
  BB 94
   Insn 1415: point = 1333, n_alt = -1
  BB 18
   Insn 127: point = 1334, n_alt = -1
   Insn 126: point = 1334, n_alt = 0
   Insn 125: point = 1335, n_alt = 0
   Insn 124: point = 1337, n_alt = 0
   Insn 123: point = 1338, n_alt = 0
  BB 21
   Insn 1351: point = 1339, n_alt = -1
   Insn 202: point = 1339, n_alt = 1
  BB 20
   Insn 199: point = 1340, n_alt = 8
   Insn 198: point = 1341, n_alt = 3
   Insn 197: point = 1343, n_alt = 4
   Insn 196: point = 1344, n_alt = 7
   Insn 195: point = 1346, n_alt = 3
   Insn 194: point = 1348, n_alt = 4
   Insn 193: point = 1349, n_alt = 3
   Insn 192: point = 1351, n_alt = 0
   Insn 191: point = 1353, n_alt = 1
   Insn 190: point = 1355, n_alt = 0
   Insn 189: point = 1356, n_alt = 0
   Insn 188: point = 1358, n_alt = 0
   Insn 187: point = 1360, n_alt = 1
   Insn 186: point = 1362, n_alt = 0
   Insn 185: point = 1363, n_alt = 1
   Insn 184: point = 1365, n_alt = 1
   Insn 183: point = 1367, n_alt = 0
   Insn 182: point = 1368, n_alt = 3
   Insn 181: point = 1370, n_alt = 0
   Insn 180: point = 1372, n_alt = 1
   Insn 179: point = 1374, n_alt = 0
   Insn 178: point = 1375, n_alt = 0
   Insn 177: point = 1377, n_alt = 0
   Insn 176: point = 1379, n_alt = 1
   Insn 175: point = 1381, n_alt = 0
   Insn 174: point = 1382, n_alt = 1
   Insn 173: point = 1384, n_alt = 1
   Insn 172: point = 1386, n_alt = 0
   Insn 171: point = 1387, n_alt = 8
   Insn 170: point = 1388, n_alt = 3
   Insn 169: point = 1390, n_alt = 4
   Insn 168: point = 1391, n_alt = 7
   Insn 167: point = 1393, n_alt = 3
   Insn 166: point = 1395, n_alt = 4
   Insn 165: point = 1396, n_alt = 3
   Insn 164: point = 1398, n_alt = 0
   Insn 163: point = 1400, n_alt = 1
   Insn 162: point = 1402, n_alt = 0
   Insn 161: point = 1403, n_alt = 0
   Insn 160: point = 1405, n_alt = 0
   Insn 159: point = 1407, n_alt = 1
   Insn 158: point = 1409, n_alt = 0
   Insn 157: point = 1410, n_alt = 1
   Insn 156: point = 1412, n_alt = 1
   Insn 155: point = 1414, n_alt = 0
   Insn 154: point = 1415, n_alt = 3
   Insn 153: point = 1417, n_alt = 0
   Insn 152: point = 1419, n_alt = 1
   Insn 151: point = 1421, n_alt = 0
   Insn 150: point = 1422, n_alt = 0
   Insn 149: point = 1424, n_alt = 0
   Insn 148: point = 1426, n_alt = 1
   Insn 147: point = 1428, n_alt = 0
   Insn 146: point = 1429, n_alt = 1
   Insn 145: point = 1431, n_alt = 1
   Insn 144: point = 1433, n_alt = 0
  BB 19
   Insn 142: point = 1435, n_alt = -1
   Insn 141: point = 1435, n_alt = 1
   Insn 140: point = 1436, n_alt = 0
   Insn 139: point = 1437, n_alt = 1
   Insn 138: point = 1438, n_alt = 0
   Insn 137: point = 1440, n_alt = 0
   Insn 136: point = 1442, n_alt = 4
   Insn 135: point = 1443, n_alt = 3
   Insn 134: point = 1445, n_alt = 0
   Insn 133: point = 1447, n_alt = 1
   Insn 132: point = 1449, n_alt = 0
   Insn 131: point = 1450, n_alt = 0
   Insn 130: point = 1452, n_alt = 1
   Insn 129: point = 1454, n_alt = 0
  BB 17
   Insn 121: point = 1456, n_alt = 1
  BB 15
   Insn 113: point = 1457, n_alt = 1
   Insn 112: point = 1458, n_alt = 0
   Insn 111: point = 1459, n_alt = 0
  BB 13
   Insn 103: point = 1460, n_alt = 1
  BB 89
   Insn 1400: point = 1460, n_alt = -1
  BB 3
   Insn 12: point = 1460, n_alt = -1
   Insn 11: point = 1460, n_alt = 0
   Insn 10: point = 1461, n_alt = 0
   Insn 9: point = 1463, n_alt = 0
   Insn 8: point = 1464, n_alt = 0
  BB 12
   Insn 1349: point = 1464, n_alt = -1
   Insn 97: point = 1464, n_alt = 1
   Insn 96: point = 1464, n_alt = 0
   Insn 95: point = 1464, n_alt = 3
   Insn 94: point = 1464, n_alt = -2
   Insn 93: point = 1465, n_alt = 0
   Insn 92: point = 1467, n_alt = 4
   Insn 91: point = 1468, n_alt = 1
   Insn 90: point = 1470, n_alt = 1
   Insn 89: point = 1472, n_alt = 0
   Insn 88: point = 1474, n_alt = 0
   Insn 87: point = 1476, n_alt = 0
  BB 90
   Insn 1403: point = 1477, n_alt = -1
  BB 5
   Insn 22: point = 1477, n_alt = -1
   Insn 21: point = 1477, n_alt = 0
   Insn 20: point = 1478, n_alt = 0
   Insn 19: point = 1480, n_alt = 0
   Insn 18: point = 1481, n_alt = 0
  BB 11
   Insn 1347: point = 1482, n_alt = -1
   Insn 81: point = 1482, n_alt = 1
  BB 91
   Insn 1406: point = 1483, n_alt = -1
  BB 7
   Insn 30: point = 1484, n_alt = -1
   Insn 29: point = 1484, n_alt = 0
   Insn 28: point = 1485, n_alt = 0
   Insn 27: point = 1487, n_alt = 0
   Insn 26: point = 1488, n_alt = 0
  BB 10
   Insn 1345: point = 1489, n_alt = -1
   Insn 75: point = 1489, n_alt = 1
  BB 9
   Insn 72: point = 1490, n_alt = 8
   Insn 71: point = 1491, n_alt = 4
   Insn 70: point = 1492, n_alt = 7
   Insn 69: point = 1494, n_alt = 4
   Insn 68: point = 1495, n_alt = 3
   Insn 67: point = 1497, n_alt = 0
   Insn 66: point = 1499, n_alt = 1
   Insn 65: point = 1501, n_alt = 0
   Insn 64: point = 1502, n_alt = 0
   Insn 63: point = 1504, n_alt = 0
   Insn 62: point = 1506, n_alt = 1
   Insn 61: point = 1508, n_alt = 0
   Insn 60: point = 1509, n_alt = 1
   Insn 59: point = 1511, n_alt = 1
   Insn 58: point = 1513, n_alt = 0
   Insn 57: point = 1514, n_alt = 3
   Insn 56: point = 1516, n_alt = 0
   Insn 55: point = 1518, n_alt = 1
   Insn 54: point = 1520, n_alt = 0
   Insn 53: point = 1521, n_alt = 0
   Insn 52: point = 1523, n_alt = 0
   Insn 51: point = 1525, n_alt = 1
   Insn 50: point = 1527, n_alt = 0
   Insn 49: point = 1528, n_alt = 1
   Insn 48: point = 1530, n_alt = 1
   Insn 47: point = 1532, n_alt = 0
  BB 8
   Insn 45: point = 1534, n_alt = -1
   Insn 44: point = 1534, n_alt = 1
   Insn 43: point = 1535, n_alt = 0
   Insn 42: point = 1536, n_alt = 1
   Insn 41: point = 1537, n_alt = 0
   Insn 40: point = 1539, n_alt = 0
   Insn 39: point = 1541, n_alt = 4
   Insn 38: point = 1542, n_alt = 3
   Insn 37: point = 1544, n_alt = 0
   Insn 36: point = 1546, n_alt = 1
   Insn 35: point = 1548, n_alt = 0
   Insn 34: point = 1549, n_alt = 0
   Insn 33: point = 1551, n_alt = 1
   Insn 32: point = 1553, n_alt = 0
  BB 6
   Insn 24: point = 1555, n_alt = 1
  BB 4
   Insn 16: point = 1556, n_alt = 1
   Insn 15: point = 1557, n_alt = 0
   Insn 14: point = 1558, n_alt = 0
  BB 2
   Insn 6: point = 1559, n_alt = 1
 r498: [220..240]
Compressing live ranges: from 1559 to 2 - 0%
Ranges after the compression:
 r498: [0..1]
  Slot 0 regnos (width = 0):	 498
Changing spilled pseudos to memory in insn #1448
Changing spilled pseudos to memory in insn #1114
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 1 for insn #1114
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1114:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1448
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1448:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=128, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=96, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 33
changing reg in insn 34
changing reg in insn 34
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 38
changing reg in insn 40
changing reg in insn 48
changing reg in insn 49
changing reg in insn 49
changing reg in insn 53
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 53
changing reg in insn 53
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 57
changing reg in insn 70
changing reg in insn 59
changing reg in insn 60
changing reg in insn 60
changing reg in insn 64
changing reg in insn 62
changing reg in insn 63
changing reg in insn 63
changing reg in insn 64
changing reg in insn 64
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
changing reg in insn 68
changing reg in insn 72
changing reg in insn 70
changing reg in insn 72
changing reg in insn 88
changing reg in insn 89
changing reg in insn 89
changing reg in insn 90
changing reg in insn 90
changing reg in insn 91
changing reg in insn 93
changing reg in insn 94
changing reg in insn 130
changing reg in insn 131
changing reg in insn 131
changing reg in insn 133
changing reg in insn 134
changing reg in insn 135
changing reg in insn 135
changing reg in insn 137
changing reg in insn 145
changing reg in insn 146
changing reg in insn 146
changing reg in insn 150
changing reg in insn 148
changing reg in insn 149
changing reg in insn 149
changing reg in insn 150
changing reg in insn 150
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
changing reg in insn 154
changing reg in insn 167
changing reg in insn 156
changing reg in insn 157
changing reg in insn 157
changing reg in insn 161
changing reg in insn 159
changing reg in insn 160
changing reg in insn 160
changing reg in insn 161
changing reg in insn 161
changing reg in insn 163
changing reg in insn 164
changing reg in insn 165
changing reg in insn 165
changing reg in insn 170
changing reg in insn 168
changing reg in insn 171
changing reg in insn 173
changing reg in insn 174
changing reg in insn 174
changing reg in insn 178
changing reg in insn 176
changing reg in insn 177
changing reg in insn 177
changing reg in insn 178
changing reg in insn 178
changing reg in insn 180
changing reg in insn 181
changing reg in insn 182
changing reg in insn 182
changing reg in insn 195
changing reg in insn 184
changing reg in insn 185
changing reg in insn 185
changing reg in insn 189
changing reg in insn 187
changing reg in insn 188
changing reg in insn 188
changing reg in insn 189
changing reg in insn 189
changing reg in insn 191
changing reg in insn 192
changing reg in insn 193
changing reg in insn 193
changing reg in insn 198
changing reg in insn 196
changing reg in insn 199
changing reg in insn 215
changing reg in insn 216
changing reg in insn 216
changing reg in insn 217
changing reg in insn 217
changing reg in insn 218
changing reg in insn 221
changing reg in insn 222
changing reg in insn 226
changing reg in insn 227
changing reg in insn 227
changing reg in insn 228
changing reg in insn 228
changing reg in insn 229
changing reg in insn 232
changing reg in insn 233
changing reg in insn 261
changing reg in insn 262
changing reg in insn 262
changing reg in insn 264
changing reg in insn 265
changing reg in insn 266
changing reg in insn 266
changing reg in insn 268
changing reg in insn 268
changing reg in insn 270
changing reg in insn 271
changing reg in insn 280
changing reg in insn 273
changing reg in insn 274
changing reg in insn 274
changing reg in insn 276
changing reg in insn 277
changing reg in insn 278
changing reg in insn 278
changing reg in insn 282
changing reg in insn 280
changing reg in insn 282
changing reg in insn 284
changing reg in insn 285
changing reg in insn 285
changing reg in insn 287
changing reg in insn 288
changing reg in insn 289
changing reg in insn 289
changing reg in insn 292
changing reg in insn 294
changing reg in insn 295
changing reg in insn 295
changing reg in insn 297
changing reg in insn 298
changing reg in insn 299
changing reg in insn 299
changing reg in insn 302
changing reg in insn 304
changing reg in insn 305
changing reg in insn 305
changing reg in insn 307
changing reg in insn 308
changing reg in insn 309
changing reg in insn 309
changing reg in insn 312
changing reg in insn 314
changing reg in insn 315
changing reg in insn 315
changing reg in insn 317
changing reg in insn 318
changing reg in insn 319
changing reg in insn 319
changing reg in insn 322
changing reg in insn 324
changing reg in insn 325
changing reg in insn 325
changing reg in insn 327
changing reg in insn 328
changing reg in insn 329
changing reg in insn 329
changing reg in insn 332
changing reg in insn 372
changing reg in insn 373
changing reg in insn 373
changing reg in insn 377
changing reg in insn 375
changing reg in insn 376
changing reg in insn 376
changing reg in insn 377
changing reg in insn 377
changing reg in insn 379
changing reg in insn 380
changing reg in insn 381
changing reg in insn 381
changing reg in insn 383
changing reg in insn 383
changing reg in insn 385
changing reg in insn 386
changing reg in insn 386
changing reg in insn 387
changing reg in insn 387
changing reg in insn 391
changing reg in insn 389
changing reg in insn 390
changing reg in insn 390
changing reg in insn 391
changing reg in insn 391
changing reg in insn 393
changing reg in insn 394
changing reg in insn 395
changing reg in insn 395
changing reg in insn 397
changing reg in insn 397
changing reg in insn 398
changing reg in insn 399
changing reg in insn 399
changing reg in insn 404
changing reg in insn 405
changing reg in insn 405
changing reg in insn 407
changing reg in insn 408
changing reg in insn 409
changing reg in insn 409
changing reg in insn 411
changing reg in insn 411
changing reg in insn 413
changing reg in insn 416
changing reg in insn 417
changing reg in insn 417
changing reg in insn 419
changing reg in insn 420
changing reg in insn 421
changing reg in insn 421
changing reg in insn 423
changing reg in insn 423
changing reg in insn 430
changing reg in insn 431
changing reg in insn 431
changing reg in insn 435
changing reg in insn 433
changing reg in insn 434
changing reg in insn 434
changing reg in insn 435
changing reg in insn 435
changing reg in insn 437
changing reg in insn 438
changing reg in insn 439
changing reg in insn 439
changing reg in insn 441
changing reg in insn 441
changing reg in insn 442
changing reg in insn 449
changing reg in insn 450
changing reg in insn 450
changing reg in insn 454
changing reg in insn 452
changing reg in insn 453
changing reg in insn 453
changing reg in insn 454
changing reg in insn 454
changing reg in insn 456
changing reg in insn 457
changing reg in insn 458
changing reg in insn 458
changing reg in insn 460
changing reg in insn 461
changing reg in insn 463
changing reg in insn 476
changing reg in insn 477
changing reg in insn 477
changing reg in insn 481
changing reg in insn 479
changing reg in insn 480
changing reg in insn 480
changing reg in insn 481
changing reg in insn 481
changing reg in insn 483
changing reg in insn 484
changing reg in insn 485
changing reg in insn 485
changing reg in insn 487
changing reg in insn 488
changing reg in insn 489
changing reg in insn 502
changing reg in insn 503
changing reg in insn 503
changing reg in insn 505
changing reg in insn 506
changing reg in insn 507
changing reg in insn 507
changing reg in insn 509
changing reg in insn 509
changing reg in insn 514
changing reg in insn 511
changing reg in insn 531
changing reg in insn 532
changing reg in insn 532
changing reg in insn 534
changing reg in insn 535
changing reg in insn 536
changing reg in insn 536
changing reg in insn 539
changing reg in insn 555
changing reg in insn 556
changing reg in insn 556
changing reg in insn 557
changing reg in insn 557
changing reg in insn 561
changing reg in insn 559
changing reg in insn 560
changing reg in insn 560
changing reg in insn 561
changing reg in insn 561
changing reg in insn 563
changing reg in insn 564
changing reg in insn 565
changing reg in insn 565
changing reg in insn 567
changing reg in insn 567
changing reg in insn 581
changing reg in insn 569
changing reg in insn 570
changing reg in insn 570
changing reg in insn 574
changing reg in insn 572
changing reg in insn 573
changing reg in insn 573
changing reg in insn 574
changing reg in insn 574
changing reg in insn 576
changing reg in insn 577
changing reg in insn 578
changing reg in insn 578
changing reg in insn 580
changing reg in insn 580
changing reg in insn 581
changing reg in insn 584
changing reg in insn 585
changing reg in insn 585
changing reg in insn 587
changing reg in insn 588
changing reg in insn 589
changing reg in insn 589
changing reg in insn 591
changing reg in insn 591
changing reg in insn 599
changing reg in insn 593
changing reg in insn 594
changing reg in insn 594
changing reg in insn 596
changing reg in insn 597
changing reg in insn 598
changing reg in insn 598
changing reg in insn 601
changing reg in insn 599
changing reg in insn 601
changing reg in insn 603
changing reg in insn 604
changing reg in insn 604
changing reg in insn 606
changing reg in insn 607
changing reg in insn 608
changing reg in insn 608
changing reg in insn 610
changing reg in insn 610
changing reg in insn 612
changing reg in insn 613
changing reg in insn 613
changing reg in insn 617
changing reg in insn 615
changing reg in insn 616
changing reg in insn 616
changing reg in insn 617
changing reg in insn 617
changing reg in insn 619
changing reg in insn 620
changing reg in insn 621
changing reg in insn 621
changing reg in insn 623
changing reg in insn 624
changing reg in insn 625
changing reg in insn 625
changing reg in insn 627
changing reg in insn 628
changing reg in insn 628
changing reg in insn 630
changing reg in insn 631
changing reg in insn 632
changing reg in insn 632
changing reg in insn 635
changing reg in insn 633
changing reg in insn 635
changing reg in insn 637
changing reg in insn 638
changing reg in insn 638
changing reg in insn 640
changing reg in insn 641
changing reg in insn 642
changing reg in insn 642
changing reg in insn 644
changing reg in insn 644
changing reg in insn 646
changing reg in insn 647
changing reg in insn 647
changing reg in insn 651
changing reg in insn 649
changing reg in insn 650
changing reg in insn 650
changing reg in insn 651
changing reg in insn 651
changing reg in insn 653
changing reg in insn 654
changing reg in insn 655
changing reg in insn 655
changing reg in insn 657
changing reg in insn 658
changing reg in insn 659
changing reg in insn 659
changing reg in insn 661
changing reg in insn 662
changing reg in insn 662
changing reg in insn 664
changing reg in insn 665
changing reg in insn 666
changing reg in insn 666
changing reg in insn 669
changing reg in insn 667
changing reg in insn 669
changing reg in insn 671
changing reg in insn 672
changing reg in insn 672
changing reg in insn 674
changing reg in insn 675
changing reg in insn 676
changing reg in insn 676
changing reg in insn 678
changing reg in insn 678
changing reg in insn 680
changing reg in insn 682
changing reg in insn 683
changing reg in insn 683
changing reg in insn 685
changing reg in insn 686
changing reg in insn 687
changing reg in insn 687
changing reg in insn 690
changing reg in insn 688
changing reg in insn 690
changing reg in insn 730
changing reg in insn 731
changing reg in insn 731
changing reg in insn 733
changing reg in insn 734
changing reg in insn 735
changing reg in insn 735
changing reg in insn 737
changing reg in insn 737
changing reg in insn 742
changing reg in insn 739
changing reg in insn 749
changing reg in insn 750
changing reg in insn 750
changing reg in insn 752
changing reg in insn 753
changing reg in insn 754
changing reg in insn 754
changing reg in insn 756
changing reg in insn 756
changing reg in insn 758
changing reg in insn 761
changing reg in insn 762
changing reg in insn 762
changing reg in insn 764
changing reg in insn 765
changing reg in insn 766
changing reg in insn 766
changing reg in insn 768
changing reg in insn 768
changing reg in insn 776
changing reg in insn 770
changing reg in insn 771
changing reg in insn 771
changing reg in insn 773
changing reg in insn 774
changing reg in insn 775
changing reg in insn 775
changing reg in insn 778
changing reg in insn 776
changing reg in insn 778
changing reg in insn 780
changing reg in insn 781
changing reg in insn 781
changing reg in insn 783
changing reg in insn 784
changing reg in insn 785
changing reg in insn 785
changing reg in insn 787
changing reg in insn 787
changing reg in insn 795
changing reg in insn 789
changing reg in insn 790
changing reg in insn 790
changing reg in insn 792
changing reg in insn 793
changing reg in insn 794
changing reg in insn 794
changing reg in insn 797
changing reg in insn 795
changing reg in insn 797
changing reg in insn 799
changing reg in insn 800
changing reg in insn 800
changing reg in insn 802
changing reg in insn 803
changing reg in insn 804
changing reg in insn 804
changing reg in insn 806
changing reg in insn 806
changing reg in insn 814
changing reg in insn 808
changing reg in insn 809
changing reg in insn 809
changing reg in insn 811
changing reg in insn 812
changing reg in insn 813
changing reg in insn 813
changing reg in insn 816
changing reg in insn 814
changing reg in insn 816
changing reg in insn 818
changing reg in insn 819
changing reg in insn 819
changing reg in insn 821
changing reg in insn 822
changing reg in insn 823
changing reg in insn 823
changing reg in insn 825
changing reg in insn 825
changing reg in insn 827
changing reg in insn 834
changing reg in insn 835
changing reg in insn 835
changing reg in insn 837
changing reg in insn 838
changing reg in insn 839
changing reg in insn 839
changing reg in insn 842
changing reg in insn 848
changing reg in insn 849
changing reg in insn 849
changing reg in insn 851
changing reg in insn 852
changing reg in insn 853
changing reg in insn 853
changing reg in insn 855
changing reg in insn 859
changing reg in insn 860
changing reg in insn 860
changing reg in insn 864
changing reg in insn 862
changing reg in insn 863
changing reg in insn 863
changing reg in insn 864
changing reg in insn 864
changing reg in insn 866
changing reg in insn 867
changing reg in insn 868
changing reg in insn 868
changing reg in insn 877
changing reg in insn 870
changing reg in insn 871
changing reg in insn 871
changing reg in insn 873
changing reg in insn 874
changing reg in insn 875
changing reg in insn 875
changing reg in insn 880
changing reg in insn 878
changing reg in insn 880
changing reg in insn 882
changing reg in insn 883
changing reg in insn 883
changing reg in insn 887
changing reg in insn 885
changing reg in insn 886
changing reg in insn 886
changing reg in insn 887
changing reg in insn 887
changing reg in insn 889
changing reg in insn 890
changing reg in insn 891
changing reg in insn 891
changing reg in insn 900
changing reg in insn 893
changing reg in insn 894
changing reg in insn 894
changing reg in insn 896
changing reg in insn 897
changing reg in insn 898
changing reg in insn 898
changing reg in insn 903
changing reg in insn 901
changing reg in insn 903
changing reg in insn 905
changing reg in insn 906
changing reg in insn 906
changing reg in insn 908
changing reg in insn 909
changing reg in insn 910
changing reg in insn 910
changing reg in insn 919
changing reg in insn 912
changing reg in insn 913
changing reg in insn 913
changing reg in insn 915
changing reg in insn 916
changing reg in insn 917
changing reg in insn 917
changing reg in insn 921
changing reg in insn 919
changing reg in insn 921
changing reg in insn 1001
changing reg in insn 1002
changing reg in insn 1002
changing reg in insn 1004
changing reg in insn 1005
changing reg in insn 1006
changing reg in insn 1006
changing reg in insn 1008
changing reg in insn 1016
changing reg in insn 1017
changing reg in insn 1017
changing reg in insn 1021
changing reg in insn 1019
changing reg in insn 1020
changing reg in insn 1020
changing reg in insn 1021
changing reg in insn 1021
changing reg in insn 1023
changing reg in insn 1024
changing reg in insn 1025
changing reg in insn 1025
changing reg in insn 1027
changing reg in insn 1027
changing reg in insn 1029
changing reg in insn 1030
changing reg in insn 1030
changing reg in insn 1031
changing reg in insn 1031
changing reg in insn 1035
changing reg in insn 1033
changing reg in insn 1034
changing reg in insn 1034
changing reg in insn 1035
changing reg in insn 1035
changing reg in insn 1037
changing reg in insn 1038
changing reg in insn 1039
changing reg in insn 1039
changing reg in insn 1041
changing reg in insn 1041
changing reg in insn 1042
changing reg in insn 1043
changing reg in insn 1043
changing reg in insn 1048
changing reg in insn 1049
changing reg in insn 1049
changing reg in insn 1053
changing reg in insn 1051
changing reg in insn 1052
changing reg in insn 1052
changing reg in insn 1053
changing reg in insn 1053
changing reg in insn 1055
changing reg in insn 1056
changing reg in insn 1057
changing reg in insn 1057
changing reg in insn 1059
changing reg in insn 1069
changing reg in insn 1072
changing reg in insn 1073
changing reg in insn 1074
changing reg in insn 1102
changing reg in insn 1103
changing reg in insn 1103
changing reg in insn 1105
changing reg in insn 1110
changing reg in insn 1108
changing reg in insn 1109
changing reg in insn 1109
changing reg in insn 1110
changing reg in insn 1110
changing reg in insn 1111
changing reg in insn 1113
changing reg in insn 1120
changing reg in insn 1123
changing reg in insn 1124
changing reg in insn 1125
changing reg in insn 1131
changing reg in insn 1132
changing reg in insn 1132
changing reg in insn 1133
changing reg in insn 1133
changing reg in insn 1135
changing reg in insn 1139
changing reg in insn 1142
changing reg in insn 1143
changing reg in insn 1143
changing reg in insn 1144
changing reg in insn 1146
changing reg in insn 1146
changing reg in insn 1147
changing reg in insn 1147
changing reg in insn 1149
changing reg in insn 1179
changing reg in insn 1180
changing reg in insn 1180
changing reg in insn 1182
changing reg in insn 1183
changing reg in insn 1184
changing reg in insn 1184
changing reg in insn 1186
changing reg in insn 1186
changing reg in insn 1188
changing reg in insn 1207
changing reg in insn 1208
changing reg in insn 1208
changing reg in insn 1210
changing reg in insn 1211
changing reg in insn 1212
changing reg in insn 1212
changing reg in insn 1214
changing reg in insn 1214
changing reg in insn 1226
changing reg in insn 1216
changing reg in insn 1217
changing reg in insn 1217
changing reg in insn 1221
changing reg in insn 1219
changing reg in insn 1220
changing reg in insn 1220
changing reg in insn 1221
changing reg in insn 1221
changing reg in insn 1223
changing reg in insn 1224
changing reg in insn 1225
changing reg in insn 1225
changing reg in insn 1228
changing reg in insn 1226
changing reg in insn 1229
changing reg in insn 1232
changing reg in insn 1233
changing reg in insn 1233
changing reg in insn 1237
changing reg in insn 1235
changing reg in insn 1236
changing reg in insn 1236
changing reg in insn 1237
changing reg in insn 1237
changing reg in insn 1239
changing reg in insn 1240
changing reg in insn 1241
changing reg in insn 1241
changing reg in insn 1243
changing reg in insn 1247
changing reg in insn 1250
changing reg in insn 1251
changing reg in insn 1252
changing reg in insn 1258
changing reg in insn 1259
changing reg in insn 1259
changing reg in insn 1263
changing reg in insn 1261
changing reg in insn 1262
changing reg in insn 1262
changing reg in insn 1263
changing reg in insn 1263
changing reg in insn 1265
changing reg in insn 1266
changing reg in insn 1267
changing reg in insn 1267
changing reg in insn 1269
changing reg in insn 1286
changing reg in insn 1287
changing reg in insn 1287
changing reg in insn 1288
changing reg in insn 1288
changing reg in insn 1289
changing reg in insn 1292
changing reg in insn 1293
changing reg in insn 1077
changing reg in insn 1066
changing reg in insn 1080
changing reg in insn 1070
changing reg in insn 1070
changing reg in insn 1067
changing reg in insn 1128
changing reg in insn 1116
changing reg in insn 1131
changing reg in insn 1121
changing reg in insn 1121
changing reg in insn 1118
changing reg in insn 3
changing reg in insn 1230
changing reg in insn 1270
changing reg in insn 1248
changing reg in insn 1248
changing reg in insn 1245
changing reg in insn 10
changing reg in insn 11
changing reg in insn 14
changing reg in insn 16
changing reg in insn 15
changing reg in insn 18
changing reg in insn 20
changing reg in insn 21
changing reg in insn 28
changing reg in insn 29
changing reg in insn 107
changing reg in insn 108
changing reg in insn 111
changing reg in insn 113
changing reg in insn 112
changing reg in insn 115
changing reg in insn 117
changing reg in insn 118
changing reg in insn 125
changing reg in insn 126
changing reg in insn 242
changing reg in insn 244
changing reg in insn 243
changing reg in insn 246
changing reg in insn 248
changing reg in insn 249
changing reg in insn 256
changing reg in insn 257
changing reg in insn 349
changing reg in insn 350
changing reg in insn 353
changing reg in insn 355
changing reg in insn 354
changing reg in insn 357
changing reg in insn 359
changing reg in insn 360
changing reg in insn 367
changing reg in insn 368
changing reg in insn 711
changing reg in insn 713
changing reg in insn 712
changing reg in insn 715
changing reg in insn 717
changing reg in insn 718
changing reg in insn 725
changing reg in insn 726
changing reg in insn 978
changing reg in insn 979
changing reg in insn 982
changing reg in insn 984
changing reg in insn 983
changing reg in insn 986
changing reg in insn 988
changing reg in insn 989
changing reg in insn 996
changing reg in insn 997
changing reg in insn 1244
changing reg in insn 3
changing reg in insn 1245
changing reg in insn 9
changing reg in insn 10
changing reg in insn 19
changing reg in insn 20
changing reg in insn 27
changing reg in insn 28
changing reg in insn 32
changing reg in insn 33
changing reg in insn 35
changing reg in insn 36
changing reg in insn 39
changing reg in insn 41
changing reg in insn 40
changing reg in insn 41
changing reg in insn 41
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 47
changing reg in insn 48
changing reg in insn 50
changing reg in insn 51
changing reg in insn 54
changing reg in insn 55
changing reg in insn 58
changing reg in insn 59
changing reg in insn 61
changing reg in insn 62
changing reg in insn 65
changing reg in insn 66
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 72
changing reg in insn 87
changing reg in insn 88
changing reg in insn 91
changing reg in insn 92
changing reg in insn 106
changing reg in insn 107
changing reg in insn 116
changing reg in insn 117
changing reg in insn 124
changing reg in insn 125
changing reg in insn 129
changing reg in insn 130
changing reg in insn 132
changing reg in insn 133
changing reg in insn 136
changing reg in insn 138
changing reg in insn 137
changing reg in insn 138
changing reg in insn 138
changing reg in insn 139
changing reg in insn 140
changing reg in insn 141
changing reg in insn 144
changing reg in insn 145
changing reg in insn 147
changing reg in insn 148
changing reg in insn 151
changing reg in insn 152
changing reg in insn 155
changing reg in insn 156
changing reg in insn 158
changing reg in insn 159
changing reg in insn 162
changing reg in insn 163
changing reg in insn 166
changing reg in insn 168
changing reg in insn 167
changing reg in insn 168
changing reg in insn 169
changing reg in insn 171
changing reg in insn 170
changing reg in insn 171
changing reg in insn 172
changing reg in insn 173
changing reg in insn 175
changing reg in insn 176
changing reg in insn 179
changing reg in insn 180
changing reg in insn 183
changing reg in insn 184
changing reg in insn 186
changing reg in insn 187
changing reg in insn 190
changing reg in insn 191
changing reg in insn 194
changing reg in insn 196
changing reg in insn 195
changing reg in insn 196
changing reg in insn 197
changing reg in insn 199
changing reg in insn 198
changing reg in insn 199
changing reg in insn 214
changing reg in insn 215
changing reg in insn 218
changing reg in insn 219
changing reg in insn 219
changing reg in insn 220
changing reg in insn 225
changing reg in insn 226
changing reg in insn 229
changing reg in insn 230
changing reg in insn 230
changing reg in insn 231
changing reg in insn 247
changing reg in insn 248
changing reg in insn 255
changing reg in insn 256
changing reg in insn 260
changing reg in insn 261
changing reg in insn 263
changing reg in insn 264
changing reg in insn 267
changing reg in insn 268
changing reg in insn 269
changing reg in insn 270
changing reg in insn 272
changing reg in insn 273
changing reg in insn 275
changing reg in insn 276
changing reg in insn 279
changing reg in insn 280
changing reg in insn 281
changing reg in insn 282
changing reg in insn 283
changing reg in insn 284
changing reg in insn 286
changing reg in insn 287
changing reg in insn 290
changing reg in insn 292
changing reg in insn 291
changing reg in insn 292
changing reg in insn 293
changing reg in insn 294
changing reg in insn 296
changing reg in insn 297
changing reg in insn 300
changing reg in insn 302
changing reg in insn 301
changing reg in insn 302
changing reg in insn 303
changing reg in insn 304
changing reg in insn 306
changing reg in insn 307
changing reg in insn 310
changing reg in insn 312
changing reg in insn 311
changing reg in insn 312
changing reg in insn 313
changing reg in insn 314
changing reg in insn 316
changing reg in insn 317
changing reg in insn 320
changing reg in insn 322
changing reg in insn 321
changing reg in insn 322
changing reg in insn 323
changing reg in insn 324
changing reg in insn 326
changing reg in insn 327
changing reg in insn 330
changing reg in insn 332
changing reg in insn 331
changing reg in insn 332
changing reg in insn 348
changing reg in insn 349
changing reg in insn 358
changing reg in insn 359
changing reg in insn 366
changing reg in insn 367
changing reg in insn 371
changing reg in insn 372
changing reg in insn 374
changing reg in insn 375
changing reg in insn 378
changing reg in insn 379
changing reg in insn 382
changing reg in insn 383
changing reg in insn 384
changing reg in insn 385
changing reg in insn 388
changing reg in insn 389
changing reg in insn 392
changing reg in insn 393
changing reg in insn 396
changing reg in insn 397
changing reg in insn 401
changing reg in insn 402
changing reg in insn 400
changing reg in insn 403
changing reg in insn 404
changing reg in insn 406
changing reg in insn 407
changing reg in insn 410
changing reg in insn 411
changing reg in insn 413
changing reg in insn 414
changing reg in insn 412
changing reg in insn 413
changing reg in insn 415
changing reg in insn 416
changing reg in insn 418
changing reg in insn 419
changing reg in insn 422
changing reg in insn 423
changing reg in insn 425
changing reg in insn 426
changing reg in insn 424
changing reg in insn 427
changing reg in insn 428
changing reg in insn 429
changing reg in insn 430
changing reg in insn 432
changing reg in insn 433
changing reg in insn 436
changing reg in insn 437
changing reg in insn 440
changing reg in insn 441
changing reg in insn 448
changing reg in insn 449
changing reg in insn 451
changing reg in insn 452
changing reg in insn 455
changing reg in insn 456
changing reg in insn 459
changing reg in insn 461
changing reg in insn 460
changing reg in insn 461
changing reg in insn 462
changing reg in insn 463
changing reg in insn 469
changing reg in insn 470
changing reg in insn 475
changing reg in insn 476
changing reg in insn 478
changing reg in insn 479
changing reg in insn 482
changing reg in insn 483
changing reg in insn 486
changing reg in insn 488
changing reg in insn 487
changing reg in insn 488
changing reg in insn 495
changing reg in insn 496
changing reg in insn 501
changing reg in insn 502
changing reg in insn 504
changing reg in insn 505
changing reg in insn 508
changing reg in insn 509
changing reg in insn 510
changing reg in insn 511
changing reg in insn 513
changing reg in insn 514
changing reg in insn 520
changing reg in insn 521
changing reg in insn 526
changing reg in insn 527
changing reg in insn 530
changing reg in insn 531
changing reg in insn 533
changing reg in insn 534
changing reg in insn 537
changing reg in insn 539
changing reg in insn 538
changing reg in insn 539
changing reg in insn 540
changing reg in insn 541
changing reg in insn 547
changing reg in insn 548
changing reg in insn 554
changing reg in insn 555
changing reg in insn 558
changing reg in insn 559
changing reg in insn 562
changing reg in insn 563
changing reg in insn 566
changing reg in insn 567
changing reg in insn 568
changing reg in insn 569
changing reg in insn 571
changing reg in insn 572
changing reg in insn 575
changing reg in insn 576
changing reg in insn 579
changing reg in insn 580
changing reg in insn 581
changing reg in insn 582
changing reg in insn 583
changing reg in insn 584
changing reg in insn 586
changing reg in insn 587
changing reg in insn 590
changing reg in insn 591
changing reg in insn 592
changing reg in insn 593
changing reg in insn 595
changing reg in insn 596
changing reg in insn 600
changing reg in insn 601
changing reg in insn 602
changing reg in insn 603
changing reg in insn 605
changing reg in insn 606
changing reg in insn 609
changing reg in insn 610
changing reg in insn 611
changing reg in insn 612
changing reg in insn 614
changing reg in insn 615
changing reg in insn 618
changing reg in insn 619
changing reg in insn 622
changing reg in insn 624
changing reg in insn 623
changing reg in insn 624
changing reg in insn 626
changing reg in insn 627
changing reg in insn 629
changing reg in insn 630
changing reg in insn 634
changing reg in insn 635
changing reg in insn 636
changing reg in insn 637
changing reg in insn 639
changing reg in insn 640
changing reg in insn 643
changing reg in insn 644
changing reg in insn 645
changing reg in insn 646
changing reg in insn 648
changing reg in insn 649
changing reg in insn 652
changing reg in insn 653
changing reg in insn 656
changing reg in insn 658
changing reg in insn 657
changing reg in insn 658
changing reg in insn 660
changing reg in insn 661
changing reg in insn 663
changing reg in insn 664
changing reg in insn 668
changing reg in insn 669
changing reg in insn 670
changing reg in insn 671
changing reg in insn 673
changing reg in insn 674
changing reg in insn 677
changing reg in insn 678
changing reg in insn 679
changing reg in insn 680
changing reg in insn 681
changing reg in insn 682
changing reg in insn 684
changing reg in insn 685
changing reg in insn 689
changing reg in insn 690
changing reg in insn 716
changing reg in insn 717
changing reg in insn 724
changing reg in insn 725
changing reg in insn 729
changing reg in insn 730
changing reg in insn 732
changing reg in insn 733
changing reg in insn 736
changing reg in insn 737
changing reg in insn 738
changing reg in insn 739
changing reg in insn 741
changing reg in insn 742
changing reg in insn 748
changing reg in insn 749
changing reg in insn 751
changing reg in insn 752
changing reg in insn 755
changing reg in insn 756
changing reg in insn 758
changing reg in insn 759
changing reg in insn 757
changing reg in insn 758
changing reg in insn 760
changing reg in insn 761
changing reg in insn 763
changing reg in insn 764
changing reg in insn 767
changing reg in insn 768
changing reg in insn 769
changing reg in insn 770
changing reg in insn 772
changing reg in insn 773
changing reg in insn 777
changing reg in insn 778
changing reg in insn 779
changing reg in insn 780
changing reg in insn 782
changing reg in insn 783
changing reg in insn 786
changing reg in insn 787
changing reg in insn 788
changing reg in insn 789
changing reg in insn 791
changing reg in insn 792
changing reg in insn 796
changing reg in insn 797
changing reg in insn 798
changing reg in insn 799
changing reg in insn 801
changing reg in insn 802
changing reg in insn 805
changing reg in insn 806
changing reg in insn 807
changing reg in insn 808
changing reg in insn 810
changing reg in insn 811
changing reg in insn 815
changing reg in insn 816
changing reg in insn 817
changing reg in insn 818
changing reg in insn 820
changing reg in insn 821
changing reg in insn 824
changing reg in insn 825
changing reg in insn 826
changing reg in insn 827
changing reg in insn 833
changing reg in insn 834
changing reg in insn 836
changing reg in insn 837
changing reg in insn 840
changing reg in insn 842
changing reg in insn 841
changing reg in insn 842
changing reg in insn 847
changing reg in insn 848
changing reg in insn 850
changing reg in insn 851
changing reg in insn 854
changing reg in insn 856
changing reg in insn 855
changing reg in insn 856
changing reg in insn 856
changing reg in insn 857
changing reg in insn 858
changing reg in insn 859
changing reg in insn 861
changing reg in insn 862
changing reg in insn 865
changing reg in insn 866
changing reg in insn 869
changing reg in insn 870
changing reg in insn 872
changing reg in insn 873
changing reg in insn 876
changing reg in insn 878
changing reg in insn 877
changing reg in insn 878
changing reg in insn 879
changing reg in insn 880
changing reg in insn 881
changing reg in insn 882
changing reg in insn 884
changing reg in insn 885
changing reg in insn 888
changing reg in insn 889
changing reg in insn 892
changing reg in insn 893
changing reg in insn 895
changing reg in insn 896
changing reg in insn 899
changing reg in insn 901
changing reg in insn 900
changing reg in insn 901
changing reg in insn 902
changing reg in insn 903
changing reg in insn 904
changing reg in insn 905
changing reg in insn 907
changing reg in insn 908
changing reg in insn 911
changing reg in insn 912
changing reg in insn 914
changing reg in insn 915
changing reg in insn 918
changing reg in insn 919
changing reg in insn 920
changing reg in insn 921
changing reg in insn 977
changing reg in insn 978
changing reg in insn 987
changing reg in insn 988
changing reg in insn 995
changing reg in insn 996
changing reg in insn 1000
changing reg in insn 1001
changing reg in insn 1003
changing reg in insn 1004
changing reg in insn 1007
changing reg in insn 1009
changing reg in insn 1008
changing reg in insn 1009
changing reg in insn 1009
changing reg in insn 1010
changing reg in insn 1011
changing reg in insn 1012
changing reg in insn 1015
changing reg in insn 1016
changing reg in insn 1018
changing reg in insn 1019
changing reg in insn 1022
changing reg in insn 1023
changing reg in insn 1026
changing reg in insn 1027
changing reg in insn 1028
changing reg in insn 1029
changing reg in insn 1032
changing reg in insn 1033
changing reg in insn 1036
changing reg in insn 1037
changing reg in insn 1040
changing reg in insn 1041
changing reg in insn 1045
changing reg in insn 1046
changing reg in insn 1044
changing reg in insn 1047
changing reg in insn 1048
changing reg in insn 1050
changing reg in insn 1051
changing reg in insn 1054
changing reg in insn 1055
changing reg in insn 1058
changing reg in insn 1060
changing reg in insn 1059
changing reg in insn 1060
changing reg in insn 1060
changing reg in insn 1061
changing reg in insn 1064
changing reg in insn 1065
changing reg in insn 1062
changing reg in insn 1064
changing reg in insn 1063
changing reg in insn 1064
changing reg in insn 1068
changing reg in insn 1069
changing reg in insn 1071
changing reg in insn 1072
changing reg in insn 1081
changing reg in insn 1082
changing reg in insn 1083
changing reg in insn 1084
changing reg in insn 1085
changing reg in insn 1086
changing reg in insn 1092
changing reg in insn 1093
changing reg in insn 1094
changing reg in insn 1095
changing reg in insn 1098
changing reg in insn 1100
changing reg in insn 1102
changing reg in insn 1101
changing reg in insn 1102
changing reg in insn 1104
changing reg in insn 1106
changing reg in insn 1108
changing reg in insn 1107
changing reg in insn 1108
changing reg in insn 1114
changing reg in insn 1115
changing reg in insn 1119
changing reg in insn 1120
changing reg in insn 1117
changing reg in insn 1118
changing reg in insn 1122
changing reg in insn 1123
changing reg in insn 1135
changing reg in insn 1136
changing reg in insn 1134
changing reg in insn 1135
changing reg in insn 1137
changing reg in insn 1138
changing reg in insn 1140
changing reg in insn 1141
changing reg in insn 1145
changing reg in insn 1146
changing reg in insn 1149
changing reg in insn 1150
changing reg in insn 1148
changing reg in insn 1149
changing reg in insn 1151
changing reg in insn 1152
changing reg in insn 1158
changing reg in insn 1159
changing reg in insn 1164
changing reg in insn 1166
changing reg in insn 1165
changing reg in insn 1166
changing reg in insn 1172
changing reg in insn 1173
changing reg in insn 1178
changing reg in insn 1179
changing reg in insn 1181
changing reg in insn 1182
changing reg in insn 1185
changing reg in insn 1186
changing reg in insn 1187
changing reg in insn 1188
changing reg in insn 1194
changing reg in insn 1195
changing reg in insn 1200
changing reg in insn 1201
changing reg in insn 1204
changing reg in insn 1205
changing reg in insn 1206
changing reg in insn 1207
changing reg in insn 1209
changing reg in insn 1210
changing reg in insn 1213
changing reg in insn 1214
changing reg in insn 1215
changing reg in insn 1216
changing reg in insn 1218
changing reg in insn 1219
changing reg in insn 1222
changing reg in insn 1223
changing reg in insn 1227
changing reg in insn 1229
changing reg in insn 1228
changing reg in insn 1229
changing reg in insn 1231
changing reg in insn 1232
changing reg in insn 1234
changing reg in insn 1235
changing reg in insn 1238
changing reg in insn 1239
changing reg in insn 1242
changing reg in insn 1244
changing reg in insn 1243
changing reg in insn 1244
changing reg in insn 1246
changing reg in insn 1247
changing reg in insn 1249
changing reg in insn 1250
changing reg in insn 1257
changing reg in insn 1258
changing reg in insn 1260
changing reg in insn 1261
changing reg in insn 1264
changing reg in insn 1265
changing reg in insn 1268
changing reg in insn 1270
changing reg in insn 1269
changing reg in insn 1270
changing reg in insn 1285
changing reg in insn 1286
changing reg in insn 1289
changing reg in insn 1290
changing reg in insn 1290
changing reg in insn 1291
deleting insn with uid = 1447.
deleting insn with uid = 1109.
deleting insn with uid = 1111.
deleting insn with uid = 1113.
deleting insn with uid = 1143.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 96.
verify found no changes in insn with uid = 224.
verify found no changes in insn with uid = 235.
verify found no changes in insn with uid = 940.
verify found no changes in insn with uid = 945.
verify found no changes in insn with uid = 950.
verify found no changes in insn with uid = 957.
verify found no changes in insn with uid = 967.
verify found no changes in insn with uid = 973.
verify found no changes in insn with uid = 1112.
verify found no changes in insn with uid = 1295.


blosfc2

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9]
;;  ref usage 	r0={154d,142u} r1={456d,444u} r2={140d,128u} r3={1d,1u} r4={26d,14u} r5={24d,12u} r6={1d,391u} r7={4d,120u} r8={11d} r9={11d} r10={11d} r11={11d} r12={11d} r13={11d} r14={11d} r15={11d} r17={362d,58u} r18={11d} r19={11d} r20={1d,1u,3e} r21={116d,113u} r22={46d,35u} r23={14d,2u} r24={12d} r25={12d} r26={12d} r27={12d} r28={12d} r29={11d} r30={11d} r31={11d} r32={11d} r33={11d} r34={11d} r35={11d} r36={11d} r37={14d,2u} r38={13d,1u} r39={11d} r40={11d} r45={11d} r46={11d} r47={11d} r48={11d} r49={11d} r50={11d} r51={11d} r52={11d} r53={11d} r54={11d} r55={11d} r56={11d} r57={11d} r58={11d} r59={11d} r60={11d} r61={11d} r62={11d} r63={11d} r64={11d} r65={11d} r66={11d} r67={11d} r68={11d} r69={11d} r70={11d} r71={11d} r72={11d} r73={11d} r74={11d} r75={11d} r76={11d} r77={11d} r78={11d} r79={11d} r80={11d} 
;;    total ref usage 3515{2048d,1464u,3e} in 1118{1107 regular + 11 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 4 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 2 98 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
        (const_int 1 [0x1])) "BLOSFC2.f":77 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              12 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 565 594
(code_label 98 6 7 3 8 (nil) [1 uses])
(note 7 98 8 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 8 7 9 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
            (const_int 38 [0x26]))) "BLOSFC2.f":77 11 {*cmpsi_1}
     (nil))
(insn 9 8 10 3 (set (reg:QI 0 ax [594])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":77 678 {*setcc_qi}
     (nil))
(insn 10 9 11 3 (set (reg:SI 0 ax [orig:565 _521 ] [565])
        (zero_extend:SI (reg:QI 0 ax [594]))) "BLOSFC2.f":77 140 {*zero_extendqisi2}
     (nil))
(insn 11 10 12 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:565 _521 ] [565])
            (const_int 0 [0]))) "BLOSFC2.f":77 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 12 11 13 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1399)
            (pc))) "BLOSFC2.f":77 682 {*jcc}
     (nil)
 -> 1399)
;;  succ:       89
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 566 567
(note 13 12 14 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 4 (set (reg:SI 1 dx [orig:566 _522 ] [566])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0d481aa750 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "BLOSFC2.f":78 86 {*movsi_internal}
     (nil))
(insn 15 14 16 4 (set (reg:SI 0 ax [orig:567 _523 ] [567])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0d481aa750 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "BLOSFC2.f":78 86 {*movsi_internal}
     (nil))
(insn 16 15 82 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:566 _522 ] [566])) "BLOSFC2.f":78 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              11 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567
;; lr  def 	 17 [flags] 568 595
(code_label 82 16 17 5 7 (nil) [1 uses])
(note 17 82 18 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:567 _523 ] [567]))) "BLOSFC2.f":78 11 {*cmpsi_1}
     (nil))
(insn 19 18 20 5 (set (reg:QI 1 dx [595])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":78 678 {*setcc_qi}
     (nil))
(insn 20 19 21 5 (set (reg:SI 1 dx [orig:568 _525 ] [568])
        (zero_extend:SI (reg:QI 1 dx [595]))) "BLOSFC2.f":78 140 {*zero_extendqisi2}
     (nil))
(insn 21 20 22 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:568 _525 ] [568])
            (const_int 0 [0]))) "BLOSFC2.f":78 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 22 21 23 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1402)
            (pc))) "BLOSFC2.f":78 682 {*jcc}
     (nil)
 -> 1402)
;;  succ:       90
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 23 22 24 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 76 6 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "BLOSFC2.f":79 86 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              10 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 569 596
(code_label 76 24 25 7 6 (nil) [1 uses])
(note 25 76 26 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 26 25 27 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "BLOSFC2.f":79 11 {*cmpsi_1}
     (nil))
(insn 27 26 28 7 (set (reg:QI 1 dx [596])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":79 678 {*setcc_qi}
     (nil))
(insn 28 27 29 7 (set (reg:SI 1 dx [orig:569 _527 ] [569])
        (zero_extend:SI (reg:QI 1 dx [596]))) "BLOSFC2.f":79 140 {*zero_extendqisi2}
     (nil))
(insn 29 28 30 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:569 _527 ] [569])
            (const_int 0 [0]))) "BLOSFC2.f":79 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 30 29 31 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1405)
            (pc))) "BLOSFC2.f":79 682 {*jcc}
     (nil)
 -> 1405)
;;  succ:       91
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 597 598 599 600 601 602
(note 31 30 32 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 8 (set (reg:SI 1 dx [597])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":80 86 {*movsi_internal}
     (nil))
(insn 33 32 34 8 (set (reg:DI 1 dx [orig:87 _1 ] [87])
        (sign_extend:DI (reg:SI 1 dx [597]))) "BLOSFC2.f":80 149 {*extendsidi2_rex64}
     (nil))
(insn 34 33 35 8 (parallel [
            (set (reg:DI 2 cx [orig:88 _2 ] [88])
                (mult:DI (reg:DI 1 dx [orig:87 _1 ] [87])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":80 349 {*muldi3_1}
     (nil))
(insn 35 34 36 8 (set (reg:SI 1 dx [598])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":80 86 {*movsi_internal}
     (nil))
(insn 36 35 37 8 (set (reg:DI 1 dx [orig:89 _3 ] [89])
        (sign_extend:DI (reg:SI 1 dx [598]))) "BLOSFC2.f":80 149 {*extendsidi2_rex64}
     (nil))
(insn 37 36 38 8 (parallel [
            (set (reg:DI 1 dx [orig:90 _4 ] [90])
                (plus:DI (reg:DI 1 dx [orig:89 _3 ] [89])
                    (reg:DI 2 cx [orig:88 _2 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":80 222 {*adddi_1}
     (nil))
(insn 38 37 39 8 (parallel [
            (set (reg:DI 2 cx [orig:91 _5 ] [91])
                (plus:DI (reg:DI 1 dx [orig:90 _4 ] [90])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":80 222 {*adddi_1}
     (nil))
(insn 39 38 40 8 (set (reg/f:DI 1 dx [599])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f0d481a4990 loops>)) "BLOSFC2.f":80 85 {*movdi_internal}
     (nil))
(insn 40 39 41 8 (parallel [
            (set (reg:DI 2 cx [600])
                (plus:DI (reg:DI 2 cx [orig:91 _5 ] [91])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":80 222 {*adddi_1}
     (nil))
(insn 41 40 42 8 (set (reg:SI 1 dx [601])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [600])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [599])) [2 loops.lmh S4 A32])) "BLOSFC2.f":80 86 {*movsi_internal}
     (nil))
(insn 42 41 43 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 llmh+0 S4 A32])
        (reg:SI 1 dx [601])) "BLOSFC2.f":80 86 {*movsi_internal}
     (nil))
(insn 43 42 44 8 (set (reg:SI 1 dx [602])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":81 86 {*movsi_internal}
     (nil))
(insn 44 43 45 8 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [602])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [2 llmh+0 S4 A32]))) "BLOSFC2.f":81 11 {*cmpsi_1}
     (nil))
(jump_insn 45 44 46 8 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 73)
            (pc))) "BLOSFC2.f":81 682 {*jcc}
     (nil)
 -> 73)
;;  succ:       9 (FALLTHRU)
;;              10
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 603 604 605 606 607 608 609 610
(note 46 45 47 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 47 46 48 9 (set (reg:SI 1 dx [603])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 llmh+0 S4 A32])) "BLOSFC2.f":81 86 {*movsi_internal}
     (nil))
(insn 48 47 49 9 (set (reg:DI 1 dx [orig:92 _6 ] [92])
        (sign_extend:DI (reg:SI 1 dx [603]))) "BLOSFC2.f":81 149 {*extendsidi2_rex64}
     (nil))
(insn 49 48 50 9 (parallel [
            (set (reg:DI 2 cx [orig:93 _7 ] [93])
                (mult:DI (reg:DI 1 dx [orig:92 _6 ] [92])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":81 349 {*muldi3_1}
     (nil))
(insn 50 49 51 9 (set (reg:SI 1 dx [604])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":81 86 {*movsi_internal}
     (nil))
(insn 51 50 52 9 (set (reg:DI 1 dx [orig:94 _8 ] [94])
        (sign_extend:DI (reg:SI 1 dx [604]))) "BLOSFC2.f":81 149 {*extendsidi2_rex64}
     (nil))
(insn 52 51 53 9 (parallel [
            (set (reg:DI 1 dx [orig:95 _9 ] [95])
                (mult:DI (reg:DI 1 dx [orig:94 _8 ] [94])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":81 349 {*muldi3_1}
     (nil))
(insn 53 52 54 9 (parallel [
            (set (reg:DI 2 cx [orig:96 _10 ] [96])
                (plus:DI (reg:DI 2 cx [orig:93 _7 ] [93])
                    (reg:DI 1 dx [orig:95 _9 ] [95])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":81 222 {*adddi_1}
     (nil))
(insn 54 53 55 9 (set (reg:SI 1 dx [605])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":81 86 {*movsi_internal}
     (nil))
(insn 55 54 56 9 (set (reg:DI 1 dx [orig:97 _11 ] [97])
        (sign_extend:DI (reg:SI 1 dx [605]))) "BLOSFC2.f":81 149 {*extendsidi2_rex64}
     (nil))
(insn 56 55 57 9 (parallel [
            (set (reg:DI 1 dx [orig:98 _12 ] [98])
                (plus:DI (reg:DI 1 dx [orig:97 _11 ] [97])
                    (reg:DI 2 cx [orig:96 _10 ] [96])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":81 222 {*adddi_1}
     (nil))
(insn 57 56 58 9 (parallel [
            (set (reg:DI 4 si [orig:99 _13 ] [99])
                (plus:DI (reg:DI 1 dx [orig:98 _12 ] [98])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":81 222 {*adddi_1}
     (nil))
(insn 58 57 59 9 (set (reg:SI 1 dx [606])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":81 86 {*movsi_internal}
     (nil))
(insn 59 58 60 9 (set (reg:DI 1 dx [orig:100 _14 ] [100])
        (sign_extend:DI (reg:SI 1 dx [606]))) "BLOSFC2.f":81 149 {*extendsidi2_rex64}
     (nil))
(insn 60 59 61 9 (parallel [
            (set (reg:DI 2 cx [orig:101 _15 ] [101])
                (mult:DI (reg:DI 1 dx [orig:100 _14 ] [100])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":81 349 {*muldi3_1}
     (nil))
(insn 61 60 62 9 (set (reg:SI 1 dx [607])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":81 86 {*movsi_internal}
     (nil))
(insn 62 61 63 9 (set (reg:DI 1 dx [orig:102 _16 ] [102])
        (sign_extend:DI (reg:SI 1 dx [607]))) "BLOSFC2.f":81 149 {*extendsidi2_rex64}
     (nil))
(insn 63 62 64 9 (parallel [
            (set (reg:DI 1 dx [orig:103 _17 ] [103])
                (mult:DI (reg:DI 1 dx [orig:102 _16 ] [102])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":81 349 {*muldi3_1}
     (nil))
(insn 64 63 65 9 (parallel [
            (set (reg:DI 2 cx [orig:104 _18 ] [104])
                (plus:DI (reg:DI 2 cx [orig:101 _15 ] [101])
                    (reg:DI 1 dx [orig:103 _17 ] [103])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":81 222 {*adddi_1}
     (nil))
(insn 65 64 66 9 (set (reg:SI 1 dx [608])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":81 86 {*movsi_internal}
     (nil))
(insn 66 65 67 9 (set (reg:DI 1 dx [orig:105 _19 ] [105])
        (sign_extend:DI (reg:SI 1 dx [608]))) "BLOSFC2.f":81 149 {*extendsidi2_rex64}
     (nil))
(insn 67 66 68 9 (parallel [
            (set (reg:DI 1 dx [orig:106 _20 ] [106])
                (plus:DI (reg:DI 1 dx [orig:105 _19 ] [105])
                    (reg:DI 2 cx [orig:104 _18 ] [104])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":81 222 {*adddi_1}
     (nil))
(insn 68 67 69 9 (parallel [
            (set (reg:DI 2 cx [orig:107 _21 ] [107])
                (plus:DI (reg:DI 1 dx [orig:106 _20 ] [106])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":81 222 {*adddi_1}
     (nil))
(insn 69 68 70 9 (set (reg/f:DI 1 dx [609])
        (symbol_ref:DI ("omgaot_") [flags 0x202]  <var_decl 0x7f0d481aa630 omgaot>)) "BLOSFC2.f":81 85 {*movdi_internal}
     (nil))
(insn 70 69 71 9 (set (reg:SF 21 xmm0 [orig:108 _22 ] [108])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:99 _13 ] [99])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [609])) [1 omgaot.omga S4 A32])) "BLOSFC2.f":81 131 {*movsf_internal}
     (nil))
(insn 71 70 72 9 (set (reg/f:DI 1 dx [610])
        (symbol_ref:DI ("omgaot_") [flags 0x202]  <var_decl 0x7f0d481aa630 omgaot>)) "BLOSFC2.f":81 85 {*movdi_internal}
     (nil))
(insn 72 71 73 9 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:107 _21 ] [107])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [610])) [1 omgaot.omga S4 A32])
        (reg:SF 21 xmm0 [orig:108 _22 ] [108])) "BLOSFC2.f":81 131 {*movsf_internal}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 91, flags: (RTL, MODIFIED)
;;  pred:       8
;;              9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 73 72 74 10 5 (nil) [1 uses])
(note 74 73 75 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 1345 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":79 221 {*addsi_1}
     (nil))
(jump_insn 1345 75 1346 10 (set (pc)
        (label_ref 76)) "BLOSFC2.f":79 683 {jump}
     (nil)
 -> 76)
;;  succ:       7 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567

(barrier 1346 1345 1405)
;; basic block 91, loop depth 0, maybe hot
;;  prev block 10, next block 11, flags: (RTL, MODIFIED)
;;  pred:       7
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1405 1346 1404 91 86 (nil) [1 uses])
(note 1404 1405 1406 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 1406 1404 79 91 (const_int 0 [0]) "BLOSFC2.f":81 718 {nop}
     (nil))
;;  succ:       11 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567

;; basic block 11, loop depth 0, maybe hot
;;  prev block 91, next block 90, flags: (RTL, MODIFIED)
;;  pred:       91 [always]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 79 1406 80 11 4 (nil) [0 uses])
(note 80 79 81 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 81 80 1347 11 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":78 221 {*addsi_1}
     (nil))
(jump_insn 1347 81 1348 11 (set (pc)
        (label_ref 82)) "BLOSFC2.f":78 683 {jump}
     (nil)
 -> 82)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 567

(barrier 1348 1347 1402)
;; basic block 90, loop depth 0, maybe hot
;;  prev block 11, next block 12, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1402 1348 1401 90 85 (nil) [1 uses])
(note 1401 1402 1403 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1403 1401 85 90 (const_int 0 [0]) "BLOSFC2.f":79 718 {nop}
     (nil))
;;  succ:       12 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 90, next block 89, flags: (RTL, MODIFIED)
;;  pred:       90 [always]  (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 109 110 111 112 611 612 613
(code_label 85 1403 86 12 3 (nil) [0 uses])
(note 86 85 87 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 12 (set (reg:SI 0 ax [611])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":84 86 {*movsi_internal}
     (nil))
(insn 88 87 89 12 (set (reg:DI 0 ax [orig:109 _23 ] [109])
        (sign_extend:DI (reg:SI 0 ax [611]))) "BLOSFC2.f":84 149 {*extendsidi2_rex64}
     (nil))
(insn 89 88 90 12 (parallel [
            (set (reg:DI 0 ax [orig:110 _24 ] [110])
                (plus:DI (reg:DI 0 ax [orig:109 _23 ] [109])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":84 222 {*adddi_1}
     (nil))
(insn 90 89 91 12 (parallel [
            (set (reg:DI 0 ax [orig:111 _25 ] [111])
                (mult:DI (reg:DI 0 ax [orig:110 _24 ] [110])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":84 349 {*muldi3_1}
     (nil))
(insn 91 90 92 12 (parallel [
            (set (reg:DI 1 dx [612])
                (ashift:DI (reg:DI 0 ax [orig:111 _25 ] [111])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":84 551 {*ashldi3_1}
     (nil))
(insn 92 91 93 12 (set (reg:DI 0 ax [613])
        (symbol_ref:DI ("omgaot_") [flags 0x202]  <var_decl 0x7f0d481aa630 omgaot>)) "BLOSFC2.f":84 85 {*movdi_internal}
     (nil))
(insn 93 92 94 12 (parallel [
            (set (reg/f:DI 0 ax [orig:112 _26 ] [112])
                (plus:DI (reg:DI 0 ax [613])
                    (reg:DI 1 dx [612])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":84 222 {*adddi_1}
     (nil))
(insn 94 93 95 12 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:112 _26 ] [112])) "BLOSFC2.f":84 85 {*movdi_internal}
     (nil))
(insn 95 94 96 12 (set (reg:QI 0 ax)
        (const_int 0 [0])) "BLOSFC2.f":84 88 {*movqi_internal}
     (nil))
(call_insn 96 95 97 12 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7f0d48191600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "BLOSFC2.f":84 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 97 96 1349 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":77 221 {*addsi_1}
     (nil))
(jump_insn 1349 97 1350 12 (set (pc)
        (label_ref 98)) "BLOSFC2.f":77 683 {jump}
     (nil)
 -> 98)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1350 1349 1399)
;; basic block 89, loop depth 0, maybe hot
;;  prev block 12, next block 13, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1399 1350 1398 89 84 (nil) [1 uses])
(note 1398 1399 1400 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 1400 1398 101 89 (const_int 0 [0]) "BLOSFC2.f":84 718 {nop}
     (nil))
;;  succ:       13 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 89, next block 14, flags: (RTL, MODIFIED)
;;  pred:       89 [always]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 101 1400 102 13 2 (nil) [0 uses])
(note 102 101 103 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 103 102 237 13 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
        (const_int 1 [0x1])) "BLOSFC2.f":88 86 {*movsi_internal}
     (nil))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;;              23 [always] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 570 614
(code_label 237 103 104 14 15 (nil) [1 uses])
(note 104 237 105 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 14 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
            (const_int 38 [0x26]))) "BLOSFC2.f":88 11 {*cmpsi_1}
     (nil))
(insn 106 105 107 14 (set (reg:QI 0 ax [614])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":88 678 {*setcc_qi}
     (nil))
(insn 107 106 108 14 (set (reg:SI 0 ax [orig:570 _535 ] [570])
        (zero_extend:SI (reg:QI 0 ax [614]))) "BLOSFC2.f":88 140 {*zero_extendqisi2}
     (nil))
(insn 108 107 109 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:570 _535 ] [570])
            (const_int 0 [0]))) "BLOSFC2.f":88 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 109 108 110 14 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1408)
            (pc))) "BLOSFC2.f":88 682 {*jcc}
     (nil)
 -> 1408)
;;  succ:       92
;;              15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 571 572
(note 110 109 111 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 112 15 (set (reg:SI 1 dx [orig:571 _536 ] [571])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0d481aa750 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "BLOSFC2.f":89 86 {*movsi_internal}
     (nil))
(insn 112 111 113 15 (set (reg:SI 0 ax [orig:572 _537 ] [572])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0d481aa750 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "BLOSFC2.f":89 86 {*movsi_internal}
     (nil))
(insn 113 112 209 15 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:571 _536 ] [571])) "BLOSFC2.f":89 86 {*movsi_internal}
     (nil))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;;              22 [always] 
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572
;; lr  def 	 17 [flags] 573 615
(code_label 209 113 114 16 14 (nil) [1 uses])
(note 114 209 115 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 115 114 116 16 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:572 _537 ] [572]))) "BLOSFC2.f":89 11 {*cmpsi_1}
     (nil))
(insn 116 115 117 16 (set (reg:QI 1 dx [615])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":89 678 {*setcc_qi}
     (nil))
(insn 117 116 118 16 (set (reg:SI 1 dx [orig:573 _539 ] [573])
        (zero_extend:SI (reg:QI 1 dx [615]))) "BLOSFC2.f":89 140 {*zero_extendqisi2}
     (nil))
(insn 118 117 119 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:573 _539 ] [573])
            (const_int 0 [0]))) "BLOSFC2.f":89 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 119 118 120 16 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1411)
            (pc))) "BLOSFC2.f":89 682 {*jcc}
     (nil)
 -> 1411)
;;  succ:       93
;;              17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 120 119 121 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 121 120 203 17 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "BLOSFC2.f":90 86 {*movsi_internal}
     (nil))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;;              21 [always] 
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 574 616
(code_label 203 121 122 18 13 (nil) [1 uses])
(note 122 203 123 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 123 122 124 18 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "BLOSFC2.f":90 11 {*cmpsi_1}
     (nil))
(insn 124 123 125 18 (set (reg:QI 1 dx [616])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":90 678 {*setcc_qi}
     (nil))
(insn 125 124 126 18 (set (reg:SI 1 dx [orig:574 _541 ] [574])
        (zero_extend:SI (reg:QI 1 dx [616]))) "BLOSFC2.f":90 140 {*zero_extendqisi2}
     (nil))
(insn 126 125 127 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:574 _541 ] [574])
            (const_int 0 [0]))) "BLOSFC2.f":90 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 127 126 128 18 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1414)
            (pc))) "BLOSFC2.f":90 682 {*jcc}
     (nil)
 -> 1414)
;;  succ:       94
;;              19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 113 114 115 116 117 617 618 619 620 621 622
(note 128 127 129 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 19 (set (reg:SI 1 dx [617])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":91 86 {*movsi_internal}
     (nil))
(insn 130 129 131 19 (set (reg:DI 1 dx [orig:113 _27 ] [113])
        (sign_extend:DI (reg:SI 1 dx [617]))) "BLOSFC2.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 131 130 132 19 (parallel [
            (set (reg:DI 2 cx [orig:114 _28 ] [114])
                (mult:DI (reg:DI 1 dx [orig:113 _27 ] [113])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":91 349 {*muldi3_1}
     (nil))
(insn 132 131 133 19 (set (reg:SI 1 dx [618])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":91 86 {*movsi_internal}
     (nil))
(insn 133 132 134 19 (set (reg:DI 1 dx [orig:115 _29 ] [115])
        (sign_extend:DI (reg:SI 1 dx [618]))) "BLOSFC2.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 134 133 135 19 (parallel [
            (set (reg:DI 1 dx [orig:116 _30 ] [116])
                (plus:DI (reg:DI 1 dx [orig:115 _29 ] [115])
                    (reg:DI 2 cx [orig:114 _28 ] [114])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":91 222 {*adddi_1}
     (nil))
(insn 135 134 136 19 (parallel [
            (set (reg:DI 2 cx [orig:117 _31 ] [117])
                (plus:DI (reg:DI 1 dx [orig:116 _30 ] [116])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":91 222 {*adddi_1}
     (nil))
(insn 136 135 137 19 (set (reg/f:DI 1 dx [619])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f0d481a4990 loops>)) "BLOSFC2.f":91 85 {*movdi_internal}
     (nil))
(insn 137 136 138 19 (parallel [
            (set (reg:DI 2 cx [620])
                (plus:DI (reg:DI 2 cx [orig:117 _31 ] [117])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":91 222 {*adddi_1}
     (nil))
(insn 138 137 139 19 (set (reg:SI 1 dx [621])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [620])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [619])) [2 loops.lmv S4 A32])) "BLOSFC2.f":91 86 {*movsi_internal}
     (nil))
(insn 139 138 140 19 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 llmv+0 S4 A32])
        (reg:SI 1 dx [621])) "BLOSFC2.f":91 86 {*movsi_internal}
     (nil))
(insn 140 139 141 19 (set (reg:SI 1 dx [622])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":92 86 {*movsi_internal}
     (nil))
(insn 141 140 142 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 1 dx [622])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 llmv+0 S4 A32]))) "BLOSFC2.f":92 11 {*cmpsi_1}
     (nil))
(jump_insn 142 141 143 19 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 200)
            (pc))) "BLOSFC2.f":92 682 {*jcc}
     (nil)
 -> 200)
;;  succ:       20 (FALLTHRU)
;;              21
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 640 641 642
(note 143 142 144 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 144 143 145 20 (set (reg:SI 1 dx [623])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 llmv+0 S4 A32])) "BLOSFC2.f":93 86 {*movsi_internal}
     (nil))
(insn 145 144 146 20 (set (reg:DI 1 dx [orig:118 _32 ] [118])
        (sign_extend:DI (reg:SI 1 dx [623]))) "BLOSFC2.f":93 149 {*extendsidi2_rex64}
     (nil))
(insn 146 145 147 20 (parallel [
            (set (reg:DI 2 cx [orig:119 _33 ] [119])
                (mult:DI (reg:DI 1 dx [orig:118 _32 ] [118])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":93 349 {*muldi3_1}
     (nil))
(insn 147 146 148 20 (set (reg:SI 1 dx [624])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":93 86 {*movsi_internal}
     (nil))
(insn 148 147 149 20 (set (reg:DI 1 dx [orig:120 _34 ] [120])
        (sign_extend:DI (reg:SI 1 dx [624]))) "BLOSFC2.f":93 149 {*extendsidi2_rex64}
     (nil))
(insn 149 148 150 20 (parallel [
            (set (reg:DI 1 dx [orig:121 _35 ] [121])
                (mult:DI (reg:DI 1 dx [orig:120 _34 ] [120])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":93 349 {*muldi3_1}
     (nil))
(insn 150 149 151 20 (parallel [
            (set (reg:DI 2 cx [orig:122 _36 ] [122])
                (plus:DI (reg:DI 2 cx [orig:119 _33 ] [119])
                    (reg:DI 1 dx [orig:121 _35 ] [121])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":93 222 {*adddi_1}
     (nil))
(insn 151 150 152 20 (set (reg:SI 1 dx [625])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":93 86 {*movsi_internal}
     (nil))
(insn 152 151 153 20 (set (reg:DI 1 dx [orig:123 _37 ] [123])
        (sign_extend:DI (reg:SI 1 dx [625]))) "BLOSFC2.f":93 149 {*extendsidi2_rex64}
     (nil))
(insn 153 152 154 20 (parallel [
            (set (reg:DI 1 dx [orig:124 _38 ] [124])
                (plus:DI (reg:DI 1 dx [orig:123 _37 ] [123])
                    (reg:DI 2 cx [orig:122 _36 ] [122])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":93 222 {*adddi_1}
     (nil))
(insn 154 153 155 20 (parallel [
            (set (reg:DI 5 di [orig:125 _39 ] [125])
                (plus:DI (reg:DI 1 dx [orig:124 _38 ] [124])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":93 222 {*adddi_1}
     (nil))
(insn 155 154 156 20 (set (reg:SI 1 dx [626])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":93 86 {*movsi_internal}
     (nil))
(insn 156 155 157 20 (set (reg:DI 1 dx [orig:126 _40 ] [126])
        (sign_extend:DI (reg:SI 1 dx [626]))) "BLOSFC2.f":93 149 {*extendsidi2_rex64}
     (nil))
(insn 157 156 158 20 (parallel [
            (set (reg:DI 2 cx [orig:127 _41 ] [127])
                (mult:DI (reg:DI 1 dx [orig:126 _40 ] [126])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":93 349 {*muldi3_1}
     (nil))
(insn 158 157 159 20 (set (reg:SI 1 dx [627])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":93 86 {*movsi_internal}
     (nil))
(insn 159 158 160 20 (set (reg:DI 1 dx [orig:128 _42 ] [128])
        (sign_extend:DI (reg:SI 1 dx [627]))) "BLOSFC2.f":93 149 {*extendsidi2_rex64}
     (nil))
(insn 160 159 161 20 (parallel [
            (set (reg:DI 1 dx [orig:129 _43 ] [129])
                (mult:DI (reg:DI 1 dx [orig:128 _42 ] [128])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":93 349 {*muldi3_1}
     (nil))
(insn 161 160 162 20 (parallel [
            (set (reg:DI 2 cx [orig:130 _44 ] [130])
                (plus:DI (reg:DI 2 cx [orig:127 _41 ] [127])
                    (reg:DI 1 dx [orig:129 _43 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":93 222 {*adddi_1}
     (nil))
(insn 162 161 163 20 (set (reg:SI 1 dx [628])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":93 86 {*movsi_internal}
     (nil))
(insn 163 162 164 20 (set (reg:DI 1 dx [orig:131 _45 ] [131])
        (sign_extend:DI (reg:SI 1 dx [628]))) "BLOSFC2.f":93 149 {*extendsidi2_rex64}
     (nil))
(insn 164 163 165 20 (parallel [
            (set (reg:DI 1 dx [orig:132 _46 ] [132])
                (plus:DI (reg:DI 1 dx [orig:131 _45 ] [131])
                    (reg:DI 2 cx [orig:130 _44 ] [130])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":93 222 {*adddi_1}
     (nil))
(insn 165 164 166 20 (parallel [
            (set (reg:DI 4 si [orig:133 _47 ] [133])
                (plus:DI (reg:DI 1 dx [orig:132 _46 ] [132])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":93 222 {*adddi_1}
     (nil))
(insn 166 165 167 20 (set (reg/f:DI 1 dx [629])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":93 85 {*movdi_internal}
     (nil))
(insn 167 166 168 20 (parallel [
            (set (reg:DI 2 cx [630])
                (plus:DI (reg:DI 5 di [orig:125 _39 ] [125])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":93 222 {*adddi_1}
     (nil))
(insn 168 167 169 20 (set (reg:SF 21 xmm0 [orig:134 _48 ] [134])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [630])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [629])) [1 vrbls.u S4 A32])) "BLOSFC2.f":93 131 {*movsf_internal}
     (nil))
(insn 169 168 170 20 (set (reg/f:DI 1 dx [631])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":93 85 {*movdi_internal}
     (nil))
(insn 170 169 171 20 (parallel [
            (set (reg:DI 2 cx [632])
                (plus:DI (reg:DI 4 si [orig:133 _47 ] [133])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":93 222 {*adddi_1}
     (nil))
(insn 171 170 172 20 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [632])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [631])) [1 vrbls.u S4 A32])
        (reg:SF 21 xmm0 [orig:134 _48 ] [134])) "BLOSFC2.f":93 131 {*movsf_internal}
     (nil))
(insn 172 171 173 20 (set (reg:SI 1 dx [633])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 llmv+0 S4 A32])) "BLOSFC2.f":94 86 {*movsi_internal}
     (nil))
(insn 173 172 174 20 (set (reg:DI 1 dx [orig:135 _49 ] [135])
        (sign_extend:DI (reg:SI 1 dx [633]))) "BLOSFC2.f":94 149 {*extendsidi2_rex64}
     (nil))
(insn 174 173 175 20 (parallel [
            (set (reg:DI 2 cx [orig:136 _50 ] [136])
                (mult:DI (reg:DI 1 dx [orig:135 _49 ] [135])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":94 349 {*muldi3_1}
     (nil))
(insn 175 174 176 20 (set (reg:SI 1 dx [634])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":94 86 {*movsi_internal}
     (nil))
(insn 176 175 177 20 (set (reg:DI 1 dx [orig:137 _51 ] [137])
        (sign_extend:DI (reg:SI 1 dx [634]))) "BLOSFC2.f":94 149 {*extendsidi2_rex64}
     (nil))
(insn 177 176 178 20 (parallel [
            (set (reg:DI 1 dx [orig:138 _52 ] [138])
                (mult:DI (reg:DI 1 dx [orig:137 _51 ] [137])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":94 349 {*muldi3_1}
     (nil))
(insn 178 177 179 20 (parallel [
            (set (reg:DI 2 cx [orig:139 _53 ] [139])
                (plus:DI (reg:DI 2 cx [orig:136 _50 ] [136])
                    (reg:DI 1 dx [orig:138 _52 ] [138])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":94 222 {*adddi_1}
     (nil))
(insn 179 178 180 20 (set (reg:SI 1 dx [635])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":94 86 {*movsi_internal}
     (nil))
(insn 180 179 181 20 (set (reg:DI 1 dx [orig:140 _54 ] [140])
        (sign_extend:DI (reg:SI 1 dx [635]))) "BLOSFC2.f":94 149 {*extendsidi2_rex64}
     (nil))
(insn 181 180 182 20 (parallel [
            (set (reg:DI 1 dx [orig:141 _55 ] [141])
                (plus:DI (reg:DI 1 dx [orig:140 _54 ] [140])
                    (reg:DI 2 cx [orig:139 _53 ] [139])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":94 222 {*adddi_1}
     (nil))
(insn 182 181 183 20 (parallel [
            (set (reg:DI 5 di [orig:142 _56 ] [142])
                (plus:DI (reg:DI 1 dx [orig:141 _55 ] [141])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":94 222 {*adddi_1}
     (nil))
(insn 183 182 184 20 (set (reg:SI 1 dx [636])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":94 86 {*movsi_internal}
     (nil))
(insn 184 183 185 20 (set (reg:DI 1 dx [orig:143 _57 ] [143])
        (sign_extend:DI (reg:SI 1 dx [636]))) "BLOSFC2.f":94 149 {*extendsidi2_rex64}
     (nil))
(insn 185 184 186 20 (parallel [
            (set (reg:DI 2 cx [orig:144 _58 ] [144])
                (mult:DI (reg:DI 1 dx [orig:143 _57 ] [143])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":94 349 {*muldi3_1}
     (nil))
(insn 186 185 187 20 (set (reg:SI 1 dx [637])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":94 86 {*movsi_internal}
     (nil))
(insn 187 186 188 20 (set (reg:DI 1 dx [orig:145 _59 ] [145])
        (sign_extend:DI (reg:SI 1 dx [637]))) "BLOSFC2.f":94 149 {*extendsidi2_rex64}
     (nil))
(insn 188 187 189 20 (parallel [
            (set (reg:DI 1 dx [orig:146 _60 ] [146])
                (mult:DI (reg:DI 1 dx [orig:145 _59 ] [145])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":94 349 {*muldi3_1}
     (nil))
(insn 189 188 190 20 (parallel [
            (set (reg:DI 2 cx [orig:147 _61 ] [147])
                (plus:DI (reg:DI 2 cx [orig:144 _58 ] [144])
                    (reg:DI 1 dx [orig:146 _60 ] [146])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":94 222 {*adddi_1}
     (nil))
(insn 190 189 191 20 (set (reg:SI 1 dx [638])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":94 86 {*movsi_internal}
     (nil))
(insn 191 190 192 20 (set (reg:DI 1 dx [orig:148 _62 ] [148])
        (sign_extend:DI (reg:SI 1 dx [638]))) "BLOSFC2.f":94 149 {*extendsidi2_rex64}
     (nil))
(insn 192 191 193 20 (parallel [
            (set (reg:DI 1 dx [orig:149 _63 ] [149])
                (plus:DI (reg:DI 1 dx [orig:148 _62 ] [148])
                    (reg:DI 2 cx [orig:147 _61 ] [147])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":94 222 {*adddi_1}
     (nil))
(insn 193 192 194 20 (parallel [
            (set (reg:DI 4 si [orig:150 _64 ] [150])
                (plus:DI (reg:DI 1 dx [orig:149 _63 ] [149])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":94 222 {*adddi_1}
     (nil))
(insn 194 193 195 20 (set (reg/f:DI 1 dx [639])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":94 85 {*movdi_internal}
     (nil))
(insn 195 194 196 20 (parallel [
            (set (reg:DI 2 cx [640])
                (plus:DI (reg:DI 5 di [orig:142 _56 ] [142])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":94 222 {*adddi_1}
     (nil))
(insn 196 195 197 20 (set (reg:SF 21 xmm0 [orig:151 _65 ] [151])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [640])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [639])) [1 vrbls.v S4 A32])) "BLOSFC2.f":94 131 {*movsf_internal}
     (nil))
(insn 197 196 198 20 (set (reg/f:DI 1 dx [641])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":94 85 {*movdi_internal}
     (nil))
(insn 198 197 199 20 (parallel [
            (set (reg:DI 2 cx [642])
                (plus:DI (reg:DI 4 si [orig:150 _64 ] [150])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":94 222 {*adddi_1}
     (nil))
(insn 199 198 200 20 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [642])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [641])) [1 vrbls.v S4 A32])
        (reg:SF 21 xmm0 [orig:151 _65 ] [151])) "BLOSFC2.f":94 131 {*movsf_internal}
     (nil))
;;  succ:       21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 94, flags: (RTL, MODIFIED)
;;  pred:       19
;;              20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 200 199 201 21 12 (nil) [1 uses])
(note 201 200 202 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 1351 21 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":90 221 {*addsi_1}
     (nil))
(jump_insn 1351 202 1352 21 (set (pc)
        (label_ref 203)) "BLOSFC2.f":90 683 {jump}
     (nil)
 -> 203)
;;  succ:       18 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572

(barrier 1352 1351 1414)
;; basic block 94, loop depth 0, maybe hot
;;  prev block 21, next block 22, flags: (RTL, MODIFIED)
;;  pred:       18
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1414 1352 1413 94 89 (nil) [1 uses])
(note 1413 1414 1415 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 1415 1413 206 94 (const_int 0 [0]) "BLOSFC2.f":92 718 {nop}
     (nil))
;;  succ:       22 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572

;; basic block 22, loop depth 0, maybe hot
;;  prev block 94, next block 93, flags: (RTL, MODIFIED)
;;  pred:       94 [always]  (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 206 1415 207 22 11 (nil) [0 uses])
(note 207 206 208 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 1353 22 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":89 221 {*addsi_1}
     (nil))
(jump_insn 1353 208 1354 22 (set (pc)
        (label_ref 209)) "BLOSFC2.f":89 683 {jump}
     (nil)
 -> 209)
;;  succ:       16 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 572

(barrier 1354 1353 1411)
;; basic block 93, loop depth 0, maybe hot
;;  prev block 22, next block 23, flags: (RTL, MODIFIED)
;;  pred:       16
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1411 1354 1410 93 88 (nil) [1 uses])
(note 1410 1411 1412 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 1412 1410 212 93 (const_int 0 [0]) "BLOSFC2.f":90 718 {nop}
     (nil))
;;  succ:       23 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, maybe hot
;;  prev block 93, next block 92, flags: (RTL, MODIFIED)
;;  pred:       93 [always]  (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 152 153 154 155 156 157 158 159 643 644 645 646 647 648 649 650
(code_label 212 1412 213 23 10 (nil) [0 uses])
(note 213 212 214 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 214 213 215 23 (set (reg:SI 0 ax [643])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":98 86 {*movsi_internal}
     (nil))
(insn 215 214 216 23 (set (reg:DI 0 ax [orig:152 _66 ] [152])
        (sign_extend:DI (reg:SI 0 ax [643]))) "BLOSFC2.f":98 149 {*extendsidi2_rex64}
     (nil))
(insn 216 215 217 23 (parallel [
            (set (reg:DI 0 ax [orig:153 _67 ] [153])
                (plus:DI (reg:DI 0 ax [orig:152 _66 ] [152])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":98 222 {*adddi_1}
     (nil))
(insn 217 216 218 23 (parallel [
            (set (reg:DI 0 ax [orig:154 _68 ] [154])
                (mult:DI (reg:DI 0 ax [orig:153 _67 ] [153])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":98 349 {*muldi3_1}
     (nil))
(insn 218 217 219 23 (parallel [
            (set (reg:DI 0 ax [644])
                (plus:DI (reg:DI 0 ax [orig:154 _68 ] [154])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":98 222 {*adddi_1}
     (nil))
(insn 219 218 220 23 (parallel [
            (set (reg:DI 1 dx [645])
                (ashift:DI (reg:DI 0 ax [644])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":98 551 {*ashldi3_1}
     (nil))
(insn 220 219 221 23 (set (reg:DI 0 ax [646])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":98 85 {*movdi_internal}
     (nil))
(insn 221 220 222 23 (parallel [
            (set (reg/f:DI 0 ax [orig:155 _69 ] [155])
                (plus:DI (reg:DI 0 ax [646])
                    (reg:DI 1 dx [645])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":98 222 {*adddi_1}
     (nil))
(insn 222 221 223 23 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:155 _69 ] [155])) "BLOSFC2.f":98 85 {*movdi_internal}
     (nil))
(insn 223 222 224 23 (set (reg:QI 0 ax)
        (const_int 0 [0])) "BLOSFC2.f":98 88 {*movqi_internal}
     (nil))
(call_insn 224 223 225 23 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7f0d48191600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "BLOSFC2.f":98 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 225 224 226 23 (set (reg:SI 0 ax [647])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":99 86 {*movsi_internal}
     (nil))
(insn 226 225 227 23 (set (reg:DI 0 ax [orig:156 _70 ] [156])
        (sign_extend:DI (reg:SI 0 ax [647]))) "BLOSFC2.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 227 226 228 23 (parallel [
            (set (reg:DI 0 ax [orig:157 _71 ] [157])
                (plus:DI (reg:DI 0 ax [orig:156 _70 ] [156])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":99 222 {*adddi_1}
     (nil))
(insn 228 227 229 23 (parallel [
            (set (reg:DI 0 ax [orig:158 _72 ] [158])
                (mult:DI (reg:DI 0 ax [orig:157 _71 ] [157])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":99 349 {*muldi3_1}
     (nil))
(insn 229 228 230 23 (parallel [
            (set (reg:DI 0 ax [648])
                (plus:DI (reg:DI 0 ax [orig:158 _72 ] [158])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":99 222 {*adddi_1}
     (nil))
(insn 230 229 231 23 (parallel [
            (set (reg:DI 1 dx [649])
                (ashift:DI (reg:DI 0 ax [648])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":99 551 {*ashldi3_1}
     (nil))
(insn 231 230 232 23 (set (reg:DI 0 ax [650])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":99 85 {*movdi_internal}
     (nil))
(insn 232 231 233 23 (parallel [
            (set (reg/f:DI 0 ax [orig:159 _73 ] [159])
                (plus:DI (reg:DI 0 ax [650])
                    (reg:DI 1 dx [649])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":99 222 {*adddi_1}
     (nil))
(insn 233 232 234 23 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:159 _73 ] [159])) "BLOSFC2.f":99 85 {*movdi_internal}
     (nil))
(insn 234 233 235 23 (set (reg:QI 0 ax)
        (const_int 0 [0])) "BLOSFC2.f":99 88 {*movqi_internal}
     (nil))
(call_insn 235 234 236 23 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7f0d48191600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "BLOSFC2.f":99 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 236 235 1355 23 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":88 221 {*addsi_1}
     (nil))
(jump_insn 1355 236 1356 23 (set (pc)
        (label_ref 237)) "BLOSFC2.f":88 683 {jump}
     (nil)
 -> 237)
;;  succ:       14 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1356 1355 1408)
;; basic block 92, loop depth 0, maybe hot
;;  prev block 23, next block 24, flags: (RTL, MODIFIED)
;;  pred:       14
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1408 1356 1407 92 87 (nil) [1 uses])
(note 1407 1408 1409 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1409 1407 240 92 (const_int 0 [0]) "BLOSFC2.f":99 718 {nop}
     (nil))
;;  succ:       24 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 24, loop depth 0, maybe hot
;;  prev block 92, next block 25, flags: (RTL, MODIFIED)
;;  pred:       92 [always]  (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 575 576
(code_label 240 1409 241 24 9 (nil) [0 uses])
(note 241 240 242 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 242 241 243 24 (set (reg:SI 1 dx [orig:575 _550 ] [575])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0d481aa750 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "BLOSFC2.f":106 86 {*movsi_internal}
     (nil))
(insn 243 242 244 24 (set (reg:SI 0 ax [orig:576 _551 ] [576])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0d481aa750 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "BLOSFC2.f":106 86 {*movsi_internal}
     (nil))
(insn 244 243 340 24 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:575 _550 ] [575])) "BLOSFC2.f":106 86 {*movsi_internal}
     (nil))
;;  succ:       25 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 576

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;;              29 [always] 
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 576
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 576
;; lr  def 	 17 [flags] 577 651
(code_label 340 244 245 25 19 (nil) [1 uses])
(note 245 340 246 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:576 _551 ] [576]))) "BLOSFC2.f":106 11 {*cmpsi_1}
     (nil))
(insn 247 246 248 25 (set (reg:QI 1 dx [651])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":106 678 {*setcc_qi}
     (nil))
(insn 248 247 249 25 (set (reg:SI 1 dx [orig:577 _553 ] [577])
        (zero_extend:SI (reg:QI 1 dx [651]))) "BLOSFC2.f":106 140 {*zero_extendqisi2}
     (nil))
(insn 249 248 250 25 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:577 _553 ] [577])
            (const_int 0 [0]))) "BLOSFC2.f":106 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 250 249 251 25 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1417)
            (pc))) "BLOSFC2.f":106 682 {*jcc}
     (nil)
 -> 1417)
;;  succ:       95
;;              26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 576

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 576
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 251 250 252 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 252 251 334 26 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "BLOSFC2.f":107 86 {*movsi_internal}
     (nil))
;;  succ:       27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 576

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;;              28 [always] 
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 576
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 578 652
(code_label 334 252 253 27 18 (nil) [1 uses])
(note 253 334 254 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 255 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "BLOSFC2.f":107 11 {*cmpsi_1}
     (nil))
(insn 255 254 256 27 (set (reg:QI 1 dx [652])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":107 678 {*setcc_qi}
     (nil))
(insn 256 255 257 27 (set (reg:SI 1 dx [orig:578 _555 ] [578])
        (zero_extend:SI (reg:QI 1 dx [652]))) "BLOSFC2.f":107 140 {*zero_extendqisi2}
     (nil))
(insn 257 256 258 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:578 _555 ] [578])
            (const_int 0 [0]))) "BLOSFC2.f":107 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 258 257 259 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1420)
            (pc))) "BLOSFC2.f":107 682 {*jcc}
     (nil)
 -> 1420)
;;  succ:       96
;;              28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 576

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 96, flags: (RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 576
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 653 654 655 656 657 658 659 660 661 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679 680
(note 259 258 260 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 261 28 (set (reg:SI 1 dx [653])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":108 86 {*movsi_internal}
     (nil))
(insn 261 260 262 28 (set (reg:DI 1 dx [orig:160 _74 ] [160])
        (sign_extend:DI (reg:SI 1 dx [653]))) "BLOSFC2.f":108 149 {*extendsidi2_rex64}
     (nil))
(insn 262 261 263 28 (parallel [
            (set (reg:DI 2 cx [orig:161 _75 ] [161])
                (mult:DI (reg:DI 1 dx [orig:160 _74 ] [160])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":108 349 {*muldi3_1}
     (nil))
(insn 263 262 264 28 (set (reg:SI 1 dx [654])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":108 86 {*movsi_internal}
     (nil))
(insn 264 263 265 28 (set (reg:DI 1 dx [orig:162 _76 ] [162])
        (sign_extend:DI (reg:SI 1 dx [654]))) "BLOSFC2.f":108 149 {*extendsidi2_rex64}
     (nil))
(insn 265 264 266 28 (parallel [
            (set (reg:DI 1 dx [orig:163 _77 ] [163])
                (plus:DI (reg:DI 1 dx [orig:162 _76 ] [162])
                    (reg:DI 2 cx [orig:161 _75 ] [161])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":108 222 {*adddi_1}
     (nil))
(insn 266 265 267 28 (parallel [
            (set (reg:DI 2 cx [orig:164 _78 ] [164])
                (plus:DI (reg:DI 1 dx [orig:163 _77 ] [163])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":108 222 {*adddi_1}
     (nil))
(insn 267 266 268 28 (set (reg/f:DI 1 dx [655])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":108 85 {*movdi_internal}
     (nil))
(insn 268 267 269 28 (set (reg:SF 22 xmm1 [orig:165 _79 ] [165])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:164 _78 ] [164])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [655])) [1 vrbls.pd S4 A32])) "BLOSFC2.f":108 131 {*movsf_internal}
     (nil))
(insn 269 268 270 28 (set (reg/f:DI 1 dx [656])
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7f0d481a4e10 mapot>)) "BLOSFC2.f":1 85 {*movdi_internal}
     (nil))
(insn 270 269 271 28 (set (reg:SF 21 xmm0 [orig:166 _80 ] [166])
        (mem/c:SF (plus:DI (reg/f:DI 1 dx [656])
                (const_int 4000012 [0x3d090c])) [1 mapot.pt+0 S4 A32])) "BLOSFC2.f":1 131 {*movsf_internal}
     (nil))
(insn 271 270 272 28 (set (reg:SF 21 xmm0 [orig:167 _81 ] [167])
        (plus:SF (reg:SF 21 xmm0 [orig:166 _80 ] [166])
            (reg:SF 22 xmm1 [orig:165 _79 ] [165]))) "BLOSFC2.f":108 838 {*fop_sf_comm}
     (nil))
(insn 272 271 273 28 (set (reg:SI 1 dx [657])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":108 86 {*movsi_internal}
     (nil))
(insn 273 272 274 28 (set (reg:DI 1 dx [orig:168 _82 ] [168])
        (sign_extend:DI (reg:SI 1 dx [657]))) "BLOSFC2.f":108 149 {*extendsidi2_rex64}
     (nil))
(insn 274 273 275 28 (parallel [
            (set (reg:DI 2 cx [orig:169 _83 ] [169])
                (mult:DI (reg:DI 1 dx [orig:168 _82 ] [168])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":108 349 {*muldi3_1}
     (nil))
(insn 275 274 276 28 (set (reg:SI 1 dx [658])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":108 86 {*movsi_internal}
     (nil))
(insn 276 275 277 28 (set (reg:DI 1 dx [orig:170 _84 ] [170])
        (sign_extend:DI (reg:SI 1 dx [658]))) "BLOSFC2.f":108 149 {*extendsidi2_rex64}
     (nil))
(insn 277 276 278 28 (parallel [
            (set (reg:DI 1 dx [orig:171 _85 ] [171])
                (plus:DI (reg:DI 1 dx [orig:170 _84 ] [170])
                    (reg:DI 2 cx [orig:169 _83 ] [169])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":108 222 {*adddi_1}
     (nil))
(insn 278 277 279 28 (parallel [
            (set (reg:DI 2 cx [orig:172 _86 ] [172])
                (plus:DI (reg:DI 1 dx [orig:171 _85 ] [171])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":108 222 {*adddi_1}
     (nil))
(insn 279 278 280 28 (set (reg:SF 22 xmm1 [659])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":108 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+3 [0x0.bb8p+12])
        (nil)))
(insn 280 279 281 28 (set (reg:SF 21 xmm0 [orig:173 _87 ] [173])
        (minus:SF (reg:SF 21 xmm0 [orig:167 _81 ] [167])
            (reg:SF 22 xmm1 [659]))) "BLOSFC2.f":108 841 {*fop_sf_1}
     (nil))
(insn 281 280 282 28 (set (reg/f:DI 1 dx [660])
        (symbol_ref:DI ("pbnd.4090") [flags 0x202]  <var_decl 0x7f0d481b0a20 pbnd>)) "BLOSFC2.f":108 85 {*movdi_internal}
     (nil))
(insn 282 281 283 28 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:172 _86 ] [172])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [660])) [1 pbnd S4 A32])
        (reg:SF 21 xmm0 [orig:173 _87 ] [173])) "BLOSFC2.f":108 131 {*movsf_internal}
     (nil))
(insn 283 282 284 28 (set (reg:SI 1 dx [661])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":109 86 {*movsi_internal}
     (nil))
(insn 284 283 285 28 (set (reg:DI 1 dx [orig:174 _88 ] [174])
        (sign_extend:DI (reg:SI 1 dx [661]))) "BLOSFC2.f":109 149 {*extendsidi2_rex64}
     (nil))
(insn 285 284 286 28 (parallel [
            (set (reg:DI 2 cx [orig:175 _89 ] [175])
                (mult:DI (reg:DI 1 dx [orig:174 _88 ] [174])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":109 349 {*muldi3_1}
     (nil))
(insn 286 285 287 28 (set (reg:SI 1 dx [662])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":109 86 {*movsi_internal}
     (nil))
(insn 287 286 288 28 (set (reg:DI 1 dx [orig:176 _90 ] [176])
        (sign_extend:DI (reg:SI 1 dx [662]))) "BLOSFC2.f":109 149 {*extendsidi2_rex64}
     (nil))
(insn 288 287 289 28 (parallel [
            (set (reg:DI 1 dx [orig:177 _91 ] [177])
                (plus:DI (reg:DI 1 dx [orig:176 _90 ] [176])
                    (reg:DI 2 cx [orig:175 _89 ] [175])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":109 222 {*adddi_1}
     (nil))
(insn 289 288 290 28 (parallel [
            (set (reg:DI 2 cx [orig:178 _92 ] [178])
                (plus:DI (reg:DI 1 dx [orig:177 _91 ] [177])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":109 222 {*adddi_1}
     (nil))
(insn 290 289 291 28 (set (reg/f:DI 1 dx [663])
        (symbol_ref:DI ("psum.4094") [flags 0x202]  <var_decl 0x7f0d481b0bd0 psum>)) "BLOSFC2.f":109 85 {*movdi_internal}
     (nil))
(insn 291 290 292 28 (set (reg:SF 21 xmm0 [664])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":109 131 {*movsf_internal}
     (nil))
(insn 292 291 293 28 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:178 _92 ] [178])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [663])) [1 psum S4 A32])
        (reg:SF 21 xmm0 [664])) "BLOSFC2.f":109 131 {*movsf_internal}
     (nil))
(insn 293 292 294 28 (set (reg:SI 1 dx [665])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":110 86 {*movsi_internal}
     (nil))
(insn 294 293 295 28 (set (reg:DI 1 dx [orig:179 _93 ] [179])
        (sign_extend:DI (reg:SI 1 dx [665]))) "BLOSFC2.f":110 149 {*extendsidi2_rex64}
     (nil))
(insn 295 294 296 28 (parallel [
            (set (reg:DI 2 cx [orig:180 _94 ] [180])
                (mult:DI (reg:DI 1 dx [orig:179 _93 ] [179])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":110 349 {*muldi3_1}
     (nil))
(insn 296 295 297 28 (set (reg:SI 1 dx [666])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":110 86 {*movsi_internal}
     (nil))
(insn 297 296 298 28 (set (reg:DI 1 dx [orig:181 _95 ] [181])
        (sign_extend:DI (reg:SI 1 dx [666]))) "BLOSFC2.f":110 149 {*extendsidi2_rex64}
     (nil))
(insn 298 297 299 28 (parallel [
            (set (reg:DI 1 dx [orig:182 _96 ] [182])
                (plus:DI (reg:DI 1 dx [orig:181 _95 ] [181])
                    (reg:DI 2 cx [orig:180 _94 ] [180])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":110 222 {*adddi_1}
     (nil))
(insn 299 298 300 28 (parallel [
            (set (reg:DI 2 cx [orig:183 _97 ] [183])
                (plus:DI (reg:DI 1 dx [orig:182 _96 ] [182])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":110 222 {*adddi_1}
     (nil))
(insn 300 299 301 28 (set (reg/f:DI 1 dx [667])
        (symbol_ref:DI ("tbnd.4107") [flags 0x202]  <var_decl 0x7f0d481b31b0 tbnd>)) "BLOSFC2.f":110 85 {*movdi_internal}
     (nil))
(insn 301 300 302 28 (set (reg:SF 21 xmm0 [668])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":110 131 {*movsf_internal}
     (nil))
(insn 302 301 303 28 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:183 _97 ] [183])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [667])) [1 tbnd S4 A32])
        (reg:SF 21 xmm0 [668])) "BLOSFC2.f":110 131 {*movsf_internal}
     (nil))
(insn 303 302 304 28 (set (reg:SI 1 dx [669])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":111 86 {*movsi_internal}
     (nil))
(insn 304 303 305 28 (set (reg:DI 1 dx [orig:184 _98 ] [184])
        (sign_extend:DI (reg:SI 1 dx [669]))) "BLOSFC2.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 305 304 306 28 (parallel [
            (set (reg:DI 2 cx [orig:185 _99 ] [185])
                (mult:DI (reg:DI 1 dx [orig:184 _98 ] [184])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":111 349 {*muldi3_1}
     (nil))
(insn 306 305 307 28 (set (reg:SI 1 dx [670])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":111 86 {*movsi_internal}
     (nil))
(insn 307 306 308 28 (set (reg:DI 1 dx [orig:186 _100 ] [186])
        (sign_extend:DI (reg:SI 1 dx [670]))) "BLOSFC2.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 308 307 309 28 (parallel [
            (set (reg:DI 1 dx [orig:187 _101 ] [187])
                (plus:DI (reg:DI 1 dx [orig:186 _100 ] [186])
                    (reg:DI 2 cx [orig:185 _99 ] [185])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":111 222 {*adddi_1}
     (nil))
(insn 309 308 310 28 (parallel [
            (set (reg:DI 2 cx [orig:188 _102 ] [188])
                (plus:DI (reg:DI 1 dx [orig:187 _101 ] [187])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":111 222 {*adddi_1}
     (nil))
(insn 310 309 311 28 (set (reg/f:DI 1 dx [671])
        (symbol_ref:DI ("qbnd.4097") [flags 0x202]  <var_decl 0x7f0d481b0cf0 qbnd>)) "BLOSFC2.f":111 85 {*movdi_internal}
     (nil))
(insn 311 310 312 28 (set (reg:SF 21 xmm0 [672])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":111 131 {*movsf_internal}
     (nil))
(insn 312 311 313 28 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:188 _102 ] [188])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [671])) [1 qbnd S4 A32])
        (reg:SF 21 xmm0 [672])) "BLOSFC2.f":111 131 {*movsf_internal}
     (nil))
(insn 313 312 314 28 (set (reg:SI 1 dx [673])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":112 86 {*movsi_internal}
     (nil))
(insn 314 313 315 28 (set (reg:DI 1 dx [orig:189 _103 ] [189])
        (sign_extend:DI (reg:SI 1 dx [673]))) "BLOSFC2.f":112 149 {*extendsidi2_rex64}
     (nil))
(insn 315 314 316 28 (parallel [
            (set (reg:DI 2 cx [orig:190 _104 ] [190])
                (mult:DI (reg:DI 1 dx [orig:189 _103 ] [189])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":112 349 {*muldi3_1}
     (nil))
(insn 316 315 317 28 (set (reg:SI 1 dx [674])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":112 86 {*movsi_internal}
     (nil))
(insn 317 316 318 28 (set (reg:DI 1 dx [orig:191 _105 ] [191])
        (sign_extend:DI (reg:SI 1 dx [674]))) "BLOSFC2.f":112 149 {*extendsidi2_rex64}
     (nil))
(insn 318 317 319 28 (parallel [
            (set (reg:DI 1 dx [orig:192 _106 ] [192])
                (plus:DI (reg:DI 1 dx [orig:191 _105 ] [191])
                    (reg:DI 2 cx [orig:190 _104 ] [190])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":112 222 {*adddi_1}
     (nil))
(insn 319 318 320 28 (parallel [
            (set (reg:DI 2 cx [orig:193 _107 ] [193])
                (plus:DI (reg:DI 1 dx [orig:192 _106 ] [192])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":112 222 {*adddi_1}
     (nil))
(insn 320 319 321 28 (set (reg/f:DI 1 dx [675])
        (symbol_ref:DI ("iceb.4082") [flags 0x202]  <var_decl 0x7f0d481b06c0 iceb>)) "BLOSFC2.f":112 85 {*movdi_internal}
     (nil))
(insn 321 320 322 28 (set (reg:SF 21 xmm0 [676])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":112 131 {*movsf_internal}
     (nil))
(insn 322 321 323 28 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:193 _107 ] [193])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [675])) [1 iceb S4 A32])
        (reg:SF 21 xmm0 [676])) "BLOSFC2.f":112 131 {*movsf_internal}
     (nil))
(insn 323 322 324 28 (set (reg:SI 1 dx [677])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":113 86 {*movsi_internal}
     (nil))
(insn 324 323 325 28 (set (reg:DI 1 dx [orig:194 _108 ] [194])
        (sign_extend:DI (reg:SI 1 dx [677]))) "BLOSFC2.f":113 149 {*extendsidi2_rex64}
     (nil))
(insn 325 324 326 28 (parallel [
            (set (reg:DI 2 cx [orig:195 _109 ] [195])
                (mult:DI (reg:DI 1 dx [orig:194 _108 ] [194])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":113 349 {*muldi3_1}
     (nil))
(insn 326 325 327 28 (set (reg:SI 1 dx [678])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":113 86 {*movsi_internal}
     (nil))
(insn 327 326 328 28 (set (reg:DI 1 dx [orig:196 _110 ] [196])
        (sign_extend:DI (reg:SI 1 dx [678]))) "BLOSFC2.f":113 149 {*extendsidi2_rex64}
     (nil))
(insn 328 327 329 28 (parallel [
            (set (reg:DI 1 dx [orig:197 _111 ] [197])
                (plus:DI (reg:DI 1 dx [orig:196 _110 ] [196])
                    (reg:DI 2 cx [orig:195 _109 ] [195])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":113 222 {*adddi_1}
     (nil))
(insn 329 328 330 28 (parallel [
            (set (reg:DI 2 cx [orig:198 _112 ] [198])
                (plus:DI (reg:DI 1 dx [orig:197 _111 ] [197])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":113 222 {*adddi_1}
     (nil))
(insn 330 329 331 28 (set (reg/f:DI 1 dx [679])
        (symbol_ref:DI ("iwm1.4084") [flags 0x202]  <var_decl 0x7f0d481b0750 iwm1>)) "BLOSFC2.f":113 85 {*movdi_internal}
     (nil))
(insn 331 330 332 28 (set (reg:SF 21 xmm0 [680])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":113 131 {*movsf_internal}
     (nil))
(insn 332 331 333 28 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:198 _112 ] [198])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [679])) [1 iwm1 S4 A32])
        (reg:SF 21 xmm0 [680])) "BLOSFC2.f":113 131 {*movsf_internal}
     (nil))
(insn 333 332 1357 28 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":107 221 {*addsi_1}
     (nil))
(jump_insn 1357 333 1358 28 (set (pc)
        (label_ref 334)) "BLOSFC2.f":107 683 {jump}
     (nil)
 -> 334)
;;  succ:       27 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 576

(barrier 1358 1357 1420)
;; basic block 96, loop depth 0, maybe hot
;;  prev block 28, next block 29, flags: (RTL, MODIFIED)
;;  pred:       27
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 576
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1420 1358 1419 96 91 (nil) [1 uses])
(note 1419 1420 1421 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1421 1419 337 96 (const_int 0 [0]) "BLOSFC2.f":113 718 {nop}
     (nil))
;;  succ:       29 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 576

;; basic block 29, loop depth 0, maybe hot
;;  prev block 96, next block 95, flags: (RTL, MODIFIED)
;;  pred:       96 [always]  (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 576
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 337 1421 338 29 17 (nil) [0 uses])
(note 338 337 339 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 1359 29 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":106 221 {*addsi_1}
     (nil))
(jump_insn 1359 339 1360 29 (set (pc)
        (label_ref 340)) "BLOSFC2.f":106 683 {jump}
     (nil)
 -> 340)
;;  succ:       25 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 576

(barrier 1360 1359 1417)
;; basic block 95, loop depth 0, maybe hot
;;  prev block 29, next block 30, flags: (RTL, MODIFIED)
;;  pred:       25
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1417 1360 1416 95 90 (nil) [1 uses])
(note 1416 1417 1418 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1418 1416 343 95 (const_int 0 [0]) "BLOSFC2.f":107 718 {nop}
     (nil))
;;  succ:       30 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 30, loop depth 0, maybe hot
;;  prev block 95, next block 31, flags: (RTL, MODIFIED)
;;  pred:       95 [always]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 343 1418 344 30 16 (nil) [0 uses])
(note 344 343 345 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 345 344 706 30 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
        (const_int 1 [0x1])) "BLOSFC2.f":116 86 {*movsi_internal}
     (nil))
;;  succ:       31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;;              50 [always] 
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 579 681
(code_label 706 345 346 31 36 (nil) [1 uses])
(note 346 706 347 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 347 346 348 31 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
            (const_int 38 [0x26]))) "BLOSFC2.f":116 11 {*cmpsi_1}
     (nil))
(insn 348 347 349 31 (set (reg:QI 0 ax [681])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":116 678 {*setcc_qi}
     (nil))
(insn 349 348 350 31 (set (reg:SI 0 ax [orig:579 _565 ] [579])
        (zero_extend:SI (reg:QI 0 ax [681]))) "BLOSFC2.f":116 140 {*zero_extendqisi2}
     (nil))
(insn 350 349 351 31 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:579 _565 ] [579])
            (const_int 0 [0]))) "BLOSFC2.f":116 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 351 350 352 31 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1423)
            (pc))) "BLOSFC2.f":116 682 {*jcc}
     (nil)
 -> 1423)
;;  succ:       97
;;              32 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 580 581
(note 352 351 353 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 353 352 354 32 (set (reg:SI 1 dx [orig:580 _566 ] [580])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0d481aa750 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "BLOSFC2.f":117 86 {*movsi_internal}
     (nil))
(insn 354 353 355 32 (set (reg:SI 0 ax [orig:581 _567 ] [581])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0d481aa750 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "BLOSFC2.f":117 86 {*movsi_internal}
     (nil))
(insn 355 354 700 32 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:580 _566 ] [580])) "BLOSFC2.f":117 86 {*movsi_internal}
     (nil))
;;  succ:       33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;;              49 [always] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  def 	 17 [flags] 582 682
(code_label 700 355 356 33 35 (nil) [1 uses])
(note 356 700 357 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 357 356 358 33 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:581 _567 ] [581]))) "BLOSFC2.f":117 11 {*cmpsi_1}
     (nil))
(insn 358 357 359 33 (set (reg:QI 1 dx [682])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":117 678 {*setcc_qi}
     (nil))
(insn 359 358 360 33 (set (reg:SI 1 dx [orig:582 _569 ] [582])
        (zero_extend:SI (reg:QI 1 dx [682]))) "BLOSFC2.f":117 140 {*zero_extendqisi2}
     (nil))
(insn 360 359 361 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:582 _569 ] [582])
            (const_int 0 [0]))) "BLOSFC2.f":117 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 361 360 362 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1426)
            (pc))) "BLOSFC2.f":117 682 {*jcc}
     (nil)
 -> 1426)
;;  succ:       98
;;              34 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 362 361 363 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 363 362 694 34 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "BLOSFC2.f":118 86 {*movsi_internal}
     (nil))
;;  succ:       35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;;              48 [always] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 583 683
(code_label 694 363 364 35 34 (nil) [1 uses])
(note 364 694 365 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 365 364 366 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "BLOSFC2.f":118 11 {*cmpsi_1}
     (nil))
(insn 366 365 367 35 (set (reg:QI 1 dx [683])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":118 678 {*setcc_qi}
     (nil))
(insn 367 366 368 35 (set (reg:SI 1 dx [orig:583 _571 ] [583])
        (zero_extend:SI (reg:QI 1 dx [683]))) "BLOSFC2.f":118 140 {*zero_extendqisi2}
     (nil))
(insn 368 367 369 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:583 _571 ] [583])
            (const_int 0 [0]))) "BLOSFC2.f":118 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 369 368 370 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1429)
            (pc))) "BLOSFC2.f":118 682 {*jcc}
     (nil)
 -> 1429)
;;  succ:       99
;;              36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 37, flags: (RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708
(note 370 369 371 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 371 370 372 36 (set (reg:SI 1 dx [684])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":119 86 {*movsi_internal}
     (nil))
(insn 372 371 373 36 (set (reg:DI 1 dx [orig:199 _113 ] [199])
        (sign_extend:DI (reg:SI 1 dx [684]))) "BLOSFC2.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 373 372 374 36 (parallel [
            (set (reg:DI 2 cx [orig:200 _114 ] [200])
                (mult:DI (reg:DI 1 dx [orig:199 _113 ] [199])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":119 349 {*muldi3_1}
     (nil))
(insn 374 373 375 36 (set (reg:SI 1 dx [685])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":119 86 {*movsi_internal}
     (nil))
(insn 375 374 376 36 (set (reg:DI 1 dx [orig:201 _115 ] [201])
        (sign_extend:DI (reg:SI 1 dx [685]))) "BLOSFC2.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 376 375 377 36 (parallel [
            (set (reg:DI 1 dx [orig:202 _116 ] [202])
                (mult:DI (reg:DI 1 dx [orig:201 _115 ] [201])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":119 349 {*muldi3_1}
     (nil))
(insn 377 376 378 36 (parallel [
            (set (reg:DI 2 cx [orig:203 _117 ] [203])
                (plus:DI (reg:DI 2 cx [orig:200 _114 ] [200])
                    (reg:DI 1 dx [orig:202 _116 ] [202])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":119 222 {*adddi_1}
     (nil))
(insn 378 377 379 36 (set (reg:SI 1 dx [686])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":119 86 {*movsi_internal}
     (nil))
(insn 379 378 380 36 (set (reg:DI 1 dx [orig:204 _118 ] [204])
        (sign_extend:DI (reg:SI 1 dx [686]))) "BLOSFC2.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 380 379 381 36 (parallel [
            (set (reg:DI 1 dx [orig:205 _119 ] [205])
                (plus:DI (reg:DI 1 dx [orig:204 _118 ] [204])
                    (reg:DI 2 cx [orig:203 _117 ] [203])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":119 222 {*adddi_1}
     (nil))
(insn 381 380 382 36 (parallel [
            (set (reg:DI 2 cx [orig:206 _120 ] [206])
                (plus:DI (reg:DI 1 dx [orig:205 _119 ] [205])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":119 222 {*adddi_1}
     (nil))
(insn 382 381 383 36 (set (reg/f:DI 1 dx [687])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0d4819bbd0 extra>)) "BLOSFC2.f":119 85 {*movdi_internal}
     (nil))
(insn 383 382 384 36 (set (reg:SF 22 xmm1 [orig:207 _121 ] [207])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:206 _120 ] [206])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [687])) [1 extra.pint S4 A32])) "BLOSFC2.f":119 131 {*movsf_internal}
     (nil))
(insn 384 383 385 36 (set (reg:SI 1 dx [688])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":119 86 {*movsi_internal}
     (nil))
(insn 385 384 386 36 (parallel [
            (set (reg:SI 1 dx [orig:208 _122 ] [208])
                (plus:SI (reg:SI 1 dx [688])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":119 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 386 385 387 36 (set (reg:DI 1 dx [orig:209 _123 ] [209])
        (sign_extend:DI (reg:SI 1 dx [orig:208 _122 ] [208]))) "BLOSFC2.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 387 386 388 36 (parallel [
            (set (reg:DI 2 cx [orig:210 _124 ] [210])
                (mult:DI (reg:DI 1 dx [orig:209 _123 ] [209])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":119 349 {*muldi3_1}
     (nil))
(insn 388 387 389 36 (set (reg:SI 1 dx [689])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":119 86 {*movsi_internal}
     (nil))
(insn 389 388 390 36 (set (reg:DI 1 dx [orig:211 _125 ] [211])
        (sign_extend:DI (reg:SI 1 dx [689]))) "BLOSFC2.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 390 389 391 36 (parallel [
            (set (reg:DI 1 dx [orig:212 _126 ] [212])
                (mult:DI (reg:DI 1 dx [orig:211 _125 ] [211])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":119 349 {*muldi3_1}
     (nil))
(insn 391 390 392 36 (parallel [
            (set (reg:DI 2 cx [orig:213 _127 ] [213])
                (plus:DI (reg:DI 2 cx [orig:210 _124 ] [210])
                    (reg:DI 1 dx [orig:212 _126 ] [212])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":119 222 {*adddi_1}
     (nil))
(insn 392 391 393 36 (set (reg:SI 1 dx [690])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":119 86 {*movsi_internal}
     (nil))
(insn 393 392 394 36 (set (reg:DI 1 dx [orig:214 _128 ] [214])
        (sign_extend:DI (reg:SI 1 dx [690]))) "BLOSFC2.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 394 393 395 36 (parallel [
            (set (reg:DI 1 dx [orig:215 _129 ] [215])
                (plus:DI (reg:DI 1 dx [orig:214 _128 ] [214])
                    (reg:DI 2 cx [orig:213 _127 ] [213])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":119 222 {*adddi_1}
     (nil))
(insn 395 394 396 36 (parallel [
            (set (reg:DI 2 cx [orig:216 _130 ] [216])
                (plus:DI (reg:DI 1 dx [orig:215 _129 ] [215])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":119 222 {*adddi_1}
     (nil))
(insn 396 395 397 36 (set (reg/f:DI 1 dx [691])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0d4819bbd0 extra>)) "BLOSFC2.f":119 85 {*movdi_internal}
     (nil))
(insn 397 396 398 36 (set (reg:SF 21 xmm0 [orig:217 _131 ] [217])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:216 _130 ] [216])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [691])) [1 extra.pint S4 A32])) "BLOSFC2.f":119 131 {*movsf_internal}
     (nil))
(insn 398 397 399 36 (set (reg:SF 21 xmm0 [orig:218 _132 ] [218])
        (plus:SF (reg:SF 21 xmm0 [orig:217 _131 ] [217])
            (reg:SF 22 xmm1 [orig:207 _121 ] [207]))) "BLOSFC2.f":119 838 {*fop_sf_comm}
     (nil))
(insn 399 398 400 36 (set (reg:SF 22 xmm1 [orig:219 _133 ] [219])
        (reg:SF 21 xmm0 [orig:218 _132 ] [218])) "BLOSFC2.f":119 131 {*movsf_internal}
     (nil))
(insn 400 399 401 36 (set (reg:SF 21 xmm0 [693])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":119 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 401 400 402 36 (set (reg:SF 21 xmm0 [692])
        (mult:SF (reg:SF 21 xmm0 [693])
            (reg:SF 22 xmm1 [orig:219 _133 ] [219]))) "BLOSFC2.f":119 838 {*fop_sf_comm}
     (nil))
(insn 402 401 403 36 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pm+0 S4 A32])
        (reg:SF 21 xmm0 [692])) "BLOSFC2.f":119 131 {*movsf_internal}
     (nil))
(insn 403 402 404 36 (set (reg:SI 1 dx [694])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":120 86 {*movsi_internal}
     (nil))
(insn 404 403 405 36 (set (reg:DI 1 dx [orig:220 _134 ] [220])
        (sign_extend:DI (reg:SI 1 dx [694]))) "BLOSFC2.f":120 149 {*extendsidi2_rex64}
     (nil))
(insn 405 404 406 36 (parallel [
            (set (reg:DI 2 cx [orig:221 _135 ] [221])
                (mult:DI (reg:DI 1 dx [orig:220 _134 ] [220])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":120 349 {*muldi3_1}
     (nil))
(insn 406 405 407 36 (set (reg:SI 1 dx [695])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":120 86 {*movsi_internal}
     (nil))
(insn 407 406 408 36 (set (reg:DI 1 dx [orig:222 _136 ] [222])
        (sign_extend:DI (reg:SI 1 dx [695]))) "BLOSFC2.f":120 149 {*extendsidi2_rex64}
     (nil))
(insn 408 407 409 36 (parallel [
            (set (reg:DI 1 dx [orig:223 _137 ] [223])
                (plus:DI (reg:DI 1 dx [orig:222 _136 ] [222])
                    (reg:DI 2 cx [orig:221 _135 ] [221])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":120 222 {*adddi_1}
     (nil))
(insn 409 408 410 36 (parallel [
            (set (reg:DI 2 cx [orig:224 _138 ] [224])
                (plus:DI (reg:DI 1 dx [orig:223 _137 ] [223])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":120 222 {*adddi_1}
     (nil))
(insn 410 409 411 36 (set (reg/f:DI 1 dx [696])
        (symbol_ref:DI ("pbnd.4090") [flags 0x202]  <var_decl 0x7f0d481b0a20 pbnd>)) "BLOSFC2.f":120 85 {*movdi_internal}
     (nil))
(insn 411 410 412 36 (set (reg:SF 21 xmm0 [orig:225 _139 ] [225])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:224 _138 ] [224])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [696])) [1 pbnd S4 A32])) "BLOSFC2.f":120 131 {*movsf_internal}
     (nil))
(insn 412 411 413 36 (set (reg:SF 22 xmm1 [698])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":120 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+3 [0x0.bb8p+12])
        (nil)))
(insn 413 412 414 36 (set (reg:SF 21 xmm0 [697])
        (minus:SF (reg:SF 21 xmm0 [orig:225 _139 ] [225])
            (reg:SF 22 xmm1 [698]))) "BLOSFC2.f":120 841 {*fop_sf_1}
     (nil))
(insn 414 413 415 36 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 ptop+0 S4 A32])
        (reg:SF 21 xmm0 [697])) "BLOSFC2.f":120 131 {*movsf_internal}
     (nil))
(insn 415 414 416 36 (set (reg:SI 1 dx [699])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":121 86 {*movsi_internal}
     (nil))
(insn 416 415 417 36 (set (reg:DI 1 dx [orig:226 _140 ] [226])
        (sign_extend:DI (reg:SI 1 dx [699]))) "BLOSFC2.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 417 416 418 36 (parallel [
            (set (reg:DI 2 cx [orig:227 _141 ] [227])
                (mult:DI (reg:DI 1 dx [orig:226 _140 ] [226])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":121 349 {*muldi3_1}
     (nil))
(insn 418 417 419 36 (set (reg:SI 1 dx [700])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":121 86 {*movsi_internal}
     (nil))
(insn 419 418 420 36 (set (reg:DI 1 dx [orig:228 _142 ] [228])
        (sign_extend:DI (reg:SI 1 dx [700]))) "BLOSFC2.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 420 419 421 36 (parallel [
            (set (reg:DI 1 dx [orig:229 _143 ] [229])
                (plus:DI (reg:DI 1 dx [orig:228 _142 ] [228])
                    (reg:DI 2 cx [orig:227 _141 ] [227])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":121 222 {*adddi_1}
     (nil))
(insn 421 420 422 36 (parallel [
            (set (reg:DI 2 cx [orig:230 _144 ] [230])
                (plus:DI (reg:DI 1 dx [orig:229 _143 ] [229])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":121 222 {*adddi_1}
     (nil))
(insn 422 421 423 36 (set (reg/f:DI 1 dx [701])
        (symbol_ref:DI ("pbnd.4090") [flags 0x202]  <var_decl 0x7f0d481b0a20 pbnd>)) "BLOSFC2.f":121 85 {*movdi_internal}
     (nil))
(insn 423 422 424 36 (set (reg:SF 22 xmm1 [orig:231 _145 ] [231])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:230 _144 ] [230])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [701])) [1 pbnd S4 A32])) "BLOSFC2.f":121 131 {*movsf_internal}
     (nil))
(insn 424 423 425 36 (set (reg:SF 21 xmm0 [703])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":121 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+3 [0x0.bb8p+12])
        (nil)))
(insn 425 424 426 36 (set (reg:SF 21 xmm0 [702])
        (plus:SF (reg:SF 21 xmm0 [703])
            (reg:SF 22 xmm1 [orig:231 _145 ] [231]))) "BLOSFC2.f":121 838 {*fop_sf_comm}
     (nil))
(insn 426 425 427 36 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 pbot+0 S4 A32])
        (reg:SF 21 xmm0 [702])) "BLOSFC2.f":121 131 {*movsf_internal}
     (nil))
(insn 427 426 428 36 (set (reg:SF 21 xmm0 [704])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":123 131 {*movsf_internal}
     (nil))
(insn 428 427 429 36 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 riw+0 S4 A32])
        (reg:SF 21 xmm0 [704])) "BLOSFC2.f":123 131 {*movsf_internal}
     (nil))
(insn 429 428 430 36 (set (reg:SI 1 dx [705])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":124 86 {*movsi_internal}
     (nil))
(insn 430 429 431 36 (set (reg:DI 1 dx [orig:232 _146 ] [232])
        (sign_extend:DI (reg:SI 1 dx [705]))) "BLOSFC2.f":124 149 {*extendsidi2_rex64}
     (nil))
(insn 431 430 432 36 (parallel [
            (set (reg:DI 2 cx [orig:233 _147 ] [233])
                (mult:DI (reg:DI 1 dx [orig:232 _146 ] [232])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":124 349 {*muldi3_1}
     (nil))
(insn 432 431 433 36 (set (reg:SI 1 dx [706])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":124 86 {*movsi_internal}
     (nil))
(insn 433 432 434 36 (set (reg:DI 1 dx [orig:234 _148 ] [234])
        (sign_extend:DI (reg:SI 1 dx [706]))) "BLOSFC2.f":124 149 {*extendsidi2_rex64}
     (nil))
(insn 434 433 435 36 (parallel [
            (set (reg:DI 1 dx [orig:235 _149 ] [235])
                (mult:DI (reg:DI 1 dx [orig:234 _148 ] [234])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":124 349 {*muldi3_1}
     (nil))
(insn 435 434 436 36 (parallel [
            (set (reg:DI 2 cx [orig:236 _150 ] [236])
                (plus:DI (reg:DI 2 cx [orig:233 _147 ] [233])
                    (reg:DI 1 dx [orig:235 _149 ] [235])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":124 222 {*adddi_1}
     (nil))
(insn 436 435 437 36 (set (reg:SI 1 dx [707])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":124 86 {*movsi_internal}
     (nil))
(insn 437 436 438 36 (set (reg:DI 1 dx [orig:237 _151 ] [237])
        (sign_extend:DI (reg:SI 1 dx [707]))) "BLOSFC2.f":124 149 {*extendsidi2_rex64}
     (nil))
(insn 438 437 439 36 (parallel [
            (set (reg:DI 1 dx [orig:238 _152 ] [238])
                (plus:DI (reg:DI 1 dx [orig:237 _151 ] [237])
                    (reg:DI 2 cx [orig:236 _150 ] [236])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":124 222 {*adddi_1}
     (nil))
(insn 439 438 440 36 (parallel [
            (set (reg:DI 2 cx [orig:239 _153 ] [239])
                (plus:DI (reg:DI 1 dx [orig:238 _152 ] [238])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":124 222 {*adddi_1}
     (nil))
(insn 440 439 441 36 (set (reg/f:DI 1 dx [708])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f0d4f204ab0 cldwtr>)) "BLOSFC2.f":124 85 {*movdi_internal}
     (nil))
(insn 441 440 442 36 (set (reg:SF 21 xmm0 [orig:240 _154 ] [240])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:239 _153 ] [239])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [708])) [1 cldwtr.cwm S4 A32])) "BLOSFC2.f":124 131 {*movsf_internal}
     (nil))
(insn 442 441 443 36 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:240 _154 ] [240])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32]))) "BLOSFC2.f":124 53 {*cmpisf}
     (nil))
(jump_insn 443 442 447 36 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1361)
            (pc))) "BLOSFC2.f":124 682 {*jcc}
     (nil)
 -> 1361)
;;  succ:       37 (FALLTHRU)
;;              44
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 241 242 243 244 245 246 247 248 249 709 710 711 712 713 714
(note 447 443 448 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 448 447 449 37 (set (reg:SI 1 dx [709])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":125 86 {*movsi_internal}
     (nil))
(insn 449 448 450 37 (set (reg:DI 1 dx [orig:241 _155 ] [241])
        (sign_extend:DI (reg:SI 1 dx [709]))) "BLOSFC2.f":125 149 {*extendsidi2_rex64}
     (nil))
(insn 450 449 451 37 (parallel [
            (set (reg:DI 2 cx [orig:242 _156 ] [242])
                (mult:DI (reg:DI 1 dx [orig:241 _155 ] [241])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":125 349 {*muldi3_1}
     (nil))
(insn 451 450 452 37 (set (reg:SI 1 dx [710])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":125 86 {*movsi_internal}
     (nil))
(insn 452 451 453 37 (set (reg:DI 1 dx [orig:243 _157 ] [243])
        (sign_extend:DI (reg:SI 1 dx [710]))) "BLOSFC2.f":125 149 {*extendsidi2_rex64}
     (nil))
(insn 453 452 454 37 (parallel [
            (set (reg:DI 1 dx [orig:244 _158 ] [244])
                (mult:DI (reg:DI 1 dx [orig:243 _157 ] [243])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":125 349 {*muldi3_1}
     (nil))
(insn 454 453 455 37 (parallel [
            (set (reg:DI 2 cx [orig:245 _159 ] [245])
                (plus:DI (reg:DI 2 cx [orig:242 _156 ] [242])
                    (reg:DI 1 dx [orig:244 _158 ] [244])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":125 222 {*adddi_1}
     (nil))
(insn 455 454 456 37 (set (reg:SI 1 dx [711])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":125 86 {*movsi_internal}
     (nil))
(insn 456 455 457 37 (set (reg:DI 1 dx [orig:246 _160 ] [246])
        (sign_extend:DI (reg:SI 1 dx [711]))) "BLOSFC2.f":125 149 {*extendsidi2_rex64}
     (nil))
(insn 457 456 458 37 (parallel [
            (set (reg:DI 1 dx [orig:247 _161 ] [247])
                (plus:DI (reg:DI 1 dx [orig:246 _160 ] [246])
                    (reg:DI 2 cx [orig:245 _159 ] [245])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":125 222 {*adddi_1}
     (nil))
(insn 458 457 459 37 (parallel [
            (set (reg:DI 2 cx [orig:248 _162 ] [248])
                (plus:DI (reg:DI 1 dx [orig:247 _161 ] [247])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":125 222 {*adddi_1}
     (nil))
(insn 459 458 460 37 (set (reg/f:DI 1 dx [712])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":125 85 {*movdi_internal}
     (nil))
(insn 460 459 461 37 (parallel [
            (set (reg:DI 2 cx [713])
                (plus:DI (reg:DI 2 cx [orig:248 _162 ] [248])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":125 222 {*adddi_1}
     (nil))
(insn 461 460 462 37 (set (reg:SF 22 xmm1 [orig:249 _163 ] [249])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [713])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [712])) [1 vrbls.t S4 A32])) "BLOSFC2.f":125 131 {*movsf_internal}
     (nil))
(insn 462 461 463 37 (set (reg:SF 21 xmm0 [714])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":125 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.58149993896484375e+2 [0x0.811333p+9])
        (nil)))
(insn 463 462 464 37 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [714])
            (reg:SF 22 xmm1 [orig:249 _163 ] [249]))) "BLOSFC2.f":125 53 {*cmpisf}
     (nil))
(jump_insn 464 463 468 37 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1362)
            (pc))) "BLOSFC2.f":125 682 {*jcc}
     (nil)
 -> 1362)
;;  succ:       38 (FALLTHRU)
;;              39
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 715
(note 468 464 469 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 469 468 470 38 (set (reg:SF 21 xmm0 [715])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":126 131 {*movsf_internal}
     (nil))
(insn 470 469 1363 38 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 riw+0 S4 A32])
        (reg:SF 21 xmm0 [715])) "BLOSFC2.f":126 131 {*movsf_internal}
     (nil))
(jump_insn 1363 470 1364 38 (set (pc)
        (label_ref 528)) 683 {jump}
     (nil)
 -> 528)
;;  succ:       45 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

(barrier 1364 1363 1362)
;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       37
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 250 251 252 253 254 255 256 257 258 716 717 718 719 720
(code_label 1362 1364 474 39 78 (nil) [1 uses])
(note 474 1362 475 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 475 474 476 39 (set (reg:SI 1 dx [716])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":127 86 {*movsi_internal}
     (nil))
(insn 476 475 477 39 (set (reg:DI 1 dx [orig:250 _164 ] [250])
        (sign_extend:DI (reg:SI 1 dx [716]))) "BLOSFC2.f":127 149 {*extendsidi2_rex64}
     (nil))
(insn 477 476 478 39 (parallel [
            (set (reg:DI 2 cx [orig:251 _165 ] [251])
                (mult:DI (reg:DI 1 dx [orig:250 _164 ] [250])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":127 349 {*muldi3_1}
     (nil))
(insn 478 477 479 39 (set (reg:SI 1 dx [717])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":127 86 {*movsi_internal}
     (nil))
(insn 479 478 480 39 (set (reg:DI 1 dx [orig:252 _166 ] [252])
        (sign_extend:DI (reg:SI 1 dx [717]))) "BLOSFC2.f":127 149 {*extendsidi2_rex64}
     (nil))
(insn 480 479 481 39 (parallel [
            (set (reg:DI 1 dx [orig:253 _167 ] [253])
                (mult:DI (reg:DI 1 dx [orig:252 _166 ] [252])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":127 349 {*muldi3_1}
     (nil))
(insn 481 480 482 39 (parallel [
            (set (reg:DI 2 cx [orig:254 _168 ] [254])
                (plus:DI (reg:DI 2 cx [orig:251 _165 ] [251])
                    (reg:DI 1 dx [orig:253 _167 ] [253])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":127 222 {*adddi_1}
     (nil))
(insn 482 481 483 39 (set (reg:SI 1 dx [718])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":127 86 {*movsi_internal}
     (nil))
(insn 483 482 484 39 (set (reg:DI 1 dx [orig:255 _169 ] [255])
        (sign_extend:DI (reg:SI 1 dx [718]))) "BLOSFC2.f":127 149 {*extendsidi2_rex64}
     (nil))
(insn 484 483 485 39 (parallel [
            (set (reg:DI 1 dx [orig:256 _170 ] [256])
                (plus:DI (reg:DI 1 dx [orig:255 _169 ] [255])
                    (reg:DI 2 cx [orig:254 _168 ] [254])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":127 222 {*adddi_1}
     (nil))
(insn 485 484 486 39 (parallel [
            (set (reg:DI 2 cx [orig:257 _171 ] [257])
                (plus:DI (reg:DI 1 dx [orig:256 _170 ] [256])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":127 222 {*adddi_1}
     (nil))
(insn 486 485 487 39 (set (reg/f:DI 1 dx [719])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":127 85 {*movdi_internal}
     (nil))
(insn 487 486 488 39 (parallel [
            (set (reg:DI 2 cx [720])
                (plus:DI (reg:DI 2 cx [orig:257 _171 ] [257])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":127 222 {*adddi_1}
     (nil))
(insn 488 487 489 39 (set (reg:SF 21 xmm0 [orig:258 _172 ] [258])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [720])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [719])) [1 vrbls.t S4 A32])) "BLOSFC2.f":127 131 {*movsf_internal}
     (nil))
(insn 489 488 490 39 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:258 _172 ] [258])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32]))) "BLOSFC2.f":127 53 {*cmpisf}
     (nil))
(jump_insn 490 489 494 39 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1365)
            (pc))) "BLOSFC2.f":127 682 {*jcc}
     (nil)
 -> 1365)
;;  succ:       40 (FALLTHRU)
;;              41
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 41, flags: (RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 721
(note 494 490 495 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 495 494 496 40 (set (reg:SF 21 xmm0 [721])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":128 131 {*movsf_internal}
     (nil))
(insn 496 495 1366 40 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 riw+0 S4 A32])
        (reg:SF 21 xmm0 [721])) "BLOSFC2.f":128 131 {*movsf_internal}
     (nil))
(jump_insn 1366 496 1367 40 (set (pc)
        (label_ref 528)) 683 {jump}
     (nil)
 -> 528)
;;  succ:       45 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

(barrier 1367 1366 1365)
;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 42, flags: (RTL, MODIFIED)
;;  pred:       39
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 259 260 261 262 263 264 722 723 724 725
(code_label 1365 1367 500 41 79 (nil) [1 uses])
(note 500 1365 501 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 501 500 502 41 (set (reg:SI 1 dx [722])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":130 86 {*movsi_internal}
     (nil))
(insn 502 501 503 41 (set (reg:DI 1 dx [orig:259 _173 ] [259])
        (sign_extend:DI (reg:SI 1 dx [722]))) "BLOSFC2.f":130 149 {*extendsidi2_rex64}
     (nil))
(insn 503 502 504 41 (parallel [
            (set (reg:DI 2 cx [orig:260 _174 ] [260])
                (mult:DI (reg:DI 1 dx [orig:259 _173 ] [259])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":130 349 {*muldi3_1}
     (nil))
(insn 504 503 505 41 (set (reg:SI 1 dx [723])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":130 86 {*movsi_internal}
     (nil))
(insn 505 504 506 41 (set (reg:DI 1 dx [orig:261 _175 ] [261])
        (sign_extend:DI (reg:SI 1 dx [723]))) "BLOSFC2.f":130 149 {*extendsidi2_rex64}
     (nil))
(insn 506 505 507 41 (parallel [
            (set (reg:DI 1 dx [orig:262 _176 ] [262])
                (plus:DI (reg:DI 1 dx [orig:261 _175 ] [261])
                    (reg:DI 2 cx [orig:260 _174 ] [260])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":130 222 {*adddi_1}
     (nil))
(insn 507 506 508 41 (parallel [
            (set (reg:DI 2 cx [orig:263 _177 ] [263])
                (plus:DI (reg:DI 1 dx [orig:262 _176 ] [262])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":130 222 {*adddi_1}
     (nil))
(insn 508 507 509 41 (set (reg/f:DI 1 dx [724])
        (symbol_ref:DI ("iwm1.4084") [flags 0x202]  <var_decl 0x7f0d481b0750 iwm1>)) "BLOSFC2.f":130 85 {*movdi_internal}
     (nil))
(insn 509 508 510 41 (set (reg:SF 21 xmm0 [orig:264 _178 ] [264])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:263 _177 ] [263])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [724])) [1 iwm1 S4 A32])) "BLOSFC2.f":130 131 {*movsf_internal}
     (nil))
(insn 510 509 511 41 (set (reg:SF 22 xmm1 [725])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":130 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 511 510 512 41 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:264 _178 ] [264])
                    (reg:SF 22 xmm1 [725]))
            ] UNSPEC_NOTRAP)) "BLOSFC2.f":130 54 {*cmpiusf}
     (nil))
(jump_insn 512 511 1312 41 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 528)
            (pc))) "BLOSFC2.f":130 682 {*jcc}
     (nil)
 -> 528)
;;  succ:       45
;;              42 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 264 581

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 264 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 264
;; lr  def 	 17 [flags] 726
(note 1312 512 513 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 513 1312 514 42 (set (reg:SF 22 xmm1 [726])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":130 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 514 513 515 42 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:264 _178 ] [264])
                    (reg:SF 22 xmm1 [726]))
            ] UNSPEC_NOTRAP)) "BLOSFC2.f":130 54 {*cmpiusf}
     (nil))
(jump_insn 515 514 519 42 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 528)
            (pc))) "BLOSFC2.f":130 682 {*jcc}
     (nil)
 -> 528)
;;  succ:       43 (FALLTHRU)
;;              45
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

;; basic block 43, loop depth 0, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 727
(note 519 515 520 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 520 519 521 43 (set (reg:SF 21 xmm0 [727])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":130 131 {*movsf_internal}
     (nil))
(insn 521 520 1368 43 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 riw+0 S4 A32])
        (reg:SF 21 xmm0 [727])) "BLOSFC2.f":130 131 {*movsf_internal}
     (nil))
(jump_insn 1368 521 1369 43 (set (pc)
        (label_ref 528)) 683 {jump}
     (nil)
 -> 528)
;;  succ:       45 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

(barrier 1369 1368 1361)
;; basic block 44, loop depth 0, maybe hot
;;  prev block 43, next block 45, flags: (RTL, MODIFIED)
;;  pred:       36
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 728
(code_label 1361 1369 525 44 77 (nil) [1 uses])
(note 525 1361 526 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 526 525 527 44 (set (reg:SF 21 xmm0 [728])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":133 131 {*movsf_internal}
     (nil))
(insn 527 526 528 44 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 riw+0 S4 A32])
        (reg:SF 21 xmm0 [728])) "BLOSFC2.f":133 131 {*movsf_internal}
     (nil))
;;  succ:       45 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 46, flags: (RTL, MODIFIED)
;;  pred:       38 [always] 
;;              44 (FALLTHRU)
;;              42
;;              40 [always] 
;;              41
;;              43 [always] 
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 265 266 267 268 269 729 730 731 732 733
(code_label 528 527 529 45 27 (nil) [5 uses])
(note 529 528 530 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 530 529 531 45 (set (reg:SI 1 dx [729])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":135 86 {*movsi_internal}
     (nil))
(insn 531 530 532 45 (set (reg:DI 1 dx [orig:265 _179 ] [265])
        (sign_extend:DI (reg:SI 1 dx [729]))) "BLOSFC2.f":135 149 {*extendsidi2_rex64}
     (nil))
(insn 532 531 533 45 (parallel [
            (set (reg:DI 2 cx [orig:266 _180 ] [266])
                (mult:DI (reg:DI 1 dx [orig:265 _179 ] [265])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":135 349 {*muldi3_1}
     (nil))
(insn 533 532 534 45 (set (reg:SI 1 dx [730])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":135 86 {*movsi_internal}
     (nil))
(insn 534 533 535 45 (set (reg:DI 1 dx [orig:267 _181 ] [267])
        (sign_extend:DI (reg:SI 1 dx [730]))) "BLOSFC2.f":135 149 {*extendsidi2_rex64}
     (nil))
(insn 535 534 536 45 (parallel [
            (set (reg:DI 1 dx [orig:268 _182 ] [268])
                (plus:DI (reg:DI 1 dx [orig:267 _181 ] [267])
                    (reg:DI 2 cx [orig:266 _180 ] [266])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":135 222 {*adddi_1}
     (nil))
(insn 536 535 537 45 (parallel [
            (set (reg:DI 2 cx [orig:269 _183 ] [269])
                (plus:DI (reg:DI 1 dx [orig:268 _182 ] [268])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":135 222 {*adddi_1}
     (nil))
(insn 537 536 538 45 (set (reg/f:DI 1 dx [731])
        (symbol_ref:DI ("iwm1.4084") [flags 0x202]  <var_decl 0x7f0d481b0750 iwm1>)) "BLOSFC2.f":135 85 {*movdi_internal}
     (nil))
(insn 538 537 539 45 (set (reg:SF 21 xmm0 [732])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 riw+0 S4 A32])) "BLOSFC2.f":135 131 {*movsf_internal}
     (nil))
(insn 539 538 540 45 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:269 _183 ] [269])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [731])) [1 iwm1 S4 A32])
        (reg:SF 21 xmm0 [732])) "BLOSFC2.f":135 131 {*movsf_internal}
     (nil))
(insn 540 539 541 45 (set (reg:SF 21 xmm0 [733])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pm+0 S4 A32])) "BLOSFC2.f":137 131 {*movsf_internal}
     (nil))
(insn 541 540 542 45 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [733])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [1 ptop+0 S4 A32]))) "BLOSFC2.f":137 53 {*cmpisf}
     (nil))
(jump_insn 542 541 546 45 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 691)
            (pc))) "BLOSFC2.f":137 682 {*jcc}
     (nil)
 -> 691)
;;  succ:       46 (FALLTHRU)
;;              48
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

;; basic block 46, loop depth 0, maybe hot
;;  prev block 45, next block 47, flags: (RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 734
(note 546 542 547 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 547 546 548 46 (set (reg:SF 21 xmm0 [734])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 pbot+0 S4 A32])) "BLOSFC2.f":137 131 {*movsf_internal}
     (nil))
(insn 548 547 549 46 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [734])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [1 pm+0 S4 A32]))) "BLOSFC2.f":137 53 {*cmpisf}
     (nil))
(jump_insn 549 548 553 46 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 691)
            (pc))) "BLOSFC2.f":137 682 {*jcc}
     (nil)
 -> 691)
;;  succ:       47 (FALLTHRU)
;;              48
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

;; basic block 47, loop depth 0, maybe hot
;;  prev block 46, next block 48, flags: (RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags
(note 553 549 554 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 554 553 555 47 (set (reg:SI 1 dx [735])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":138 86 {*movsi_internal}
     (nil))
(insn 555 554 556 47 (parallel [
            (set (reg:SI 1 dx [orig:270 _184 ] [270])
                (plus:SI (reg:SI 1 dx [735])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":138 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 556 555 557 47 (set (reg:DI 1 dx [orig:271 _185 ] [271])
        (sign_extend:DI (reg:SI 1 dx [orig:270 _184 ] [270]))) "BLOSFC2.f":138 149 {*extendsidi2_rex64}
     (nil))
(insn 557 556 558 47 (parallel [
            (set (reg:DI 2 cx [orig:272 _186 ] [272])
                (mult:DI (reg:DI 1 dx [orig:271 _185 ] [271])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":138 349 {*muldi3_1}
     (nil))
(insn 558 557 559 47 (set (reg:SI 1 dx [736])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":138 86 {*movsi_internal}
     (nil))
(insn 559 558 560 47 (set (reg:DI 1 dx [orig:273 _187 ] [273])
        (sign_extend:DI (reg:SI 1 dx [736]))) "BLOSFC2.f":138 149 {*extendsidi2_rex64}
     (nil))
(insn 560 559 561 47 (parallel [
            (set (reg:DI 1 dx [orig:274 _188 ] [274])
                (mult:DI (reg:DI 1 dx [orig:273 _187 ] [273])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":138 349 {*muldi3_1}
     (nil))
(insn 561 560 562 47 (parallel [
            (set (reg:DI 2 cx [orig:275 _189 ] [275])
                (plus:DI (reg:DI 2 cx [orig:272 _186 ] [272])
                    (reg:DI 1 dx [orig:274 _188 ] [274])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":138 222 {*adddi_1}
     (nil))
(insn 562 561 563 47 (set (reg:SI 1 dx [737])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":138 86 {*movsi_internal}
     (nil))
(insn 563 562 564 47 (set (reg:DI 1 dx [orig:276 _190 ] [276])
        (sign_extend:DI (reg:SI 1 dx [737]))) "BLOSFC2.f":138 149 {*extendsidi2_rex64}
     (nil))
(insn 564 563 565 47 (parallel [
            (set (reg:DI 1 dx [orig:277 _191 ] [277])
                (plus:DI (reg:DI 1 dx [orig:276 _190 ] [276])
                    (reg:DI 2 cx [orig:275 _189 ] [275])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":138 222 {*adddi_1}
     (nil))
(insn 565 564 566 47 (parallel [
            (set (reg:DI 2 cx [orig:278 _192 ] [278])
                (plus:DI (reg:DI 1 dx [orig:277 _191 ] [277])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":138 222 {*adddi_1}
     (nil))
(insn 566 565 567 47 (set (reg/f:DI 1 dx [738])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0d4819bbd0 extra>)) "BLOSFC2.f":138 85 {*movdi_internal}
     (nil))
(insn 567 566 568 47 (set (reg:SF 21 xmm0 [orig:279 _193 ] [279])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:278 _192 ] [278])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [738])) [1 extra.pint S4 A32])) "BLOSFC2.f":138 131 {*movsf_internal}
     (nil))
(insn 568 567 569 47 (set (reg:SI 1 dx [739])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":138 86 {*movsi_internal}
     (nil))
(insn 569 568 570 47 (set (reg:DI 1 dx [orig:280 _194 ] [280])
        (sign_extend:DI (reg:SI 1 dx [739]))) "BLOSFC2.f":138 149 {*extendsidi2_rex64}
     (nil))
(insn 570 569 571 47 (parallel [
            (set (reg:DI 2 cx [orig:281 _195 ] [281])
                (mult:DI (reg:DI 1 dx [orig:280 _194 ] [280])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":138 349 {*muldi3_1}
     (nil))
(insn 571 570 572 47 (set (reg:SI 1 dx [740])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":138 86 {*movsi_internal}
     (nil))
(insn 572 571 573 47 (set (reg:DI 1 dx [orig:282 _196 ] [282])
        (sign_extend:DI (reg:SI 1 dx [740]))) "BLOSFC2.f":138 149 {*extendsidi2_rex64}
     (nil))
(insn 573 572 574 47 (parallel [
            (set (reg:DI 1 dx [orig:283 _197 ] [283])
                (mult:DI (reg:DI 1 dx [orig:282 _196 ] [282])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":138 349 {*muldi3_1}
     (nil))
(insn 574 573 575 47 (parallel [
            (set (reg:DI 2 cx [orig:284 _198 ] [284])
                (plus:DI (reg:DI 2 cx [orig:281 _195 ] [281])
                    (reg:DI 1 dx [orig:283 _197 ] [283])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":138 222 {*adddi_1}
     (nil))
(insn 575 574 576 47 (set (reg:SI 1 dx [741])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":138 86 {*movsi_internal}
     (nil))
(insn 576 575 577 47 (set (reg:DI 1 dx [orig:285 _199 ] [285])
        (sign_extend:DI (reg:SI 1 dx [741]))) "BLOSFC2.f":138 149 {*extendsidi2_rex64}
     (nil))
(insn 577 576 578 47 (parallel [
            (set (reg:DI 1 dx [orig:286 _200 ] [286])
                (plus:DI (reg:DI 1 dx [orig:285 _199 ] [285])
                    (reg:DI 2 cx [orig:284 _198 ] [284])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":138 222 {*adddi_1}
     (nil))
(insn 578 577 579 47 (parallel [
            (set (reg:DI 2 cx [orig:287 _201 ] [287])
                (plus:DI (reg:DI 1 dx [orig:286 _200 ] [286])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":138 222 {*adddi_1}
     (nil))
(insn 579 578 580 47 (set (reg/f:DI 1 dx [742])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0d4819bbd0 extra>)) "BLOSFC2.f":138 85 {*movdi_internal}
     (nil))
(insn 580 579 581 47 (set (reg:SF 22 xmm1 [orig:288 _202 ] [288])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:287 _201 ] [287])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [742])) [1 extra.pint S4 A32])) "BLOSFC2.f":138 131 {*movsf_internal}
     (nil))
(insn 581 580 582 47 (set (reg:SF 21 xmm0 [743])
        (minus:SF (reg:SF 21 xmm0 [orig:279 _193 ] [279])
            (reg:SF 22 xmm1 [orig:288 _202 ] [288]))) "BLOSFC2.f":138 841 {*fop_sf_1}
     (nil))
(insn 582 581 583 47 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 dp+0 S4 A32])
        (reg:SF 21 xmm0 [743])) "BLOSFC2.f":138 131 {*movsf_internal}
     (nil))
(insn 583 582 584 47 (set (reg:SI 1 dx [744])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":139 86 {*movsi_internal}
     (nil))
(insn 584 583 585 47 (set (reg:DI 1 dx [orig:289 _203 ] [289])
        (sign_extend:DI (reg:SI 1 dx [744]))) "BLOSFC2.f":139 149 {*extendsidi2_rex64}
     (nil))
(insn 585 584 586 47 (parallel [
            (set (reg:DI 2 cx [orig:290 _204 ] [290])
                (mult:DI (reg:DI 1 dx [orig:289 _203 ] [289])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":139 349 {*muldi3_1}
     (nil))
(insn 586 585 587 47 (set (reg:SI 1 dx [745])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":139 86 {*movsi_internal}
     (nil))
(insn 587 586 588 47 (set (reg:DI 1 dx [orig:291 _205 ] [291])
        (sign_extend:DI (reg:SI 1 dx [745]))) "BLOSFC2.f":139 149 {*extendsidi2_rex64}
     (nil))
(insn 588 587 589 47 (parallel [
            (set (reg:DI 1 dx [orig:292 _206 ] [292])
                (plus:DI (reg:DI 1 dx [orig:291 _205 ] [291])
                    (reg:DI 2 cx [orig:290 _204 ] [290])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":139 222 {*adddi_1}
     (nil))
(insn 589 588 590 47 (parallel [
            (set (reg:DI 2 cx [orig:293 _207 ] [293])
                (plus:DI (reg:DI 1 dx [orig:292 _206 ] [292])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":139 222 {*adddi_1}
     (nil))
(insn 590 589 591 47 (set (reg/f:DI 1 dx [746])
        (symbol_ref:DI ("psum.4094") [flags 0x202]  <var_decl 0x7f0d481b0bd0 psum>)) "BLOSFC2.f":139 85 {*movdi_internal}
     (nil))
(insn 591 590 592 47 (set (reg:SF 21 xmm0 [orig:294 _208 ] [294])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:293 _207 ] [293])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [746])) [1 psum S4 A32])) "BLOSFC2.f":139 131 {*movsf_internal}
     (nil))
(insn 592 591 593 47 (set (reg:SI 1 dx [747])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":139 86 {*movsi_internal}
     (nil))
(insn 593 592 594 47 (set (reg:DI 1 dx [orig:295 _209 ] [295])
        (sign_extend:DI (reg:SI 1 dx [747]))) "BLOSFC2.f":139 149 {*extendsidi2_rex64}
     (nil))
(insn 594 593 595 47 (parallel [
            (set (reg:DI 2 cx [orig:296 _210 ] [296])
                (mult:DI (reg:DI 1 dx [orig:295 _209 ] [295])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":139 349 {*muldi3_1}
     (nil))
(insn 595 594 596 47 (set (reg:SI 1 dx [748])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":139 86 {*movsi_internal}
     (nil))
(insn 596 595 597 47 (set (reg:DI 1 dx [orig:297 _211 ] [297])
        (sign_extend:DI (reg:SI 1 dx [748]))) "BLOSFC2.f":139 149 {*extendsidi2_rex64}
     (nil))
(insn 597 596 598 47 (parallel [
            (set (reg:DI 1 dx [orig:298 _212 ] [298])
                (plus:DI (reg:DI 1 dx [orig:297 _211 ] [297])
                    (reg:DI 2 cx [orig:296 _210 ] [296])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":139 222 {*adddi_1}
     (nil))
(insn 598 597 599 47 (parallel [
            (set (reg:DI 2 cx [orig:299 _213 ] [299])
                (plus:DI (reg:DI 1 dx [orig:298 _212 ] [298])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":139 222 {*adddi_1}
     (nil))
(insn 599 598 600 47 (set (reg:SF 21 xmm0 [orig:300 _214 ] [300])
        (plus:SF (reg:SF 21 xmm0 [orig:294 _208 ] [294])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 dp+0 S4 A32]))) "BLOSFC2.f":139 838 {*fop_sf_comm}
     (nil))
(insn 600 599 601 47 (set (reg/f:DI 1 dx [749])
        (symbol_ref:DI ("psum.4094") [flags 0x202]  <var_decl 0x7f0d481b0bd0 psum>)) "BLOSFC2.f":139 85 {*movdi_internal}
     (nil))
(insn 601 600 602 47 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:299 _213 ] [299])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [749])) [1 psum S4 A32])
        (reg:SF 21 xmm0 [orig:300 _214 ] [300])) "BLOSFC2.f":139 131 {*movsf_internal}
     (nil))
(insn 602 601 603 47 (set (reg:SI 1 dx [750])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":140 86 {*movsi_internal}
     (nil))
(insn 603 602 604 47 (set (reg:DI 1 dx [orig:301 _215 ] [301])
        (sign_extend:DI (reg:SI 1 dx [750]))) "BLOSFC2.f":140 149 {*extendsidi2_rex64}
     (nil))
(insn 604 603 605 47 (parallel [
            (set (reg:DI 2 cx [orig:302 _216 ] [302])
                (mult:DI (reg:DI 1 dx [orig:301 _215 ] [301])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":140 349 {*muldi3_1}
     (nil))
(insn 605 604 606 47 (set (reg:SI 1 dx [751])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":140 86 {*movsi_internal}
     (nil))
(insn 606 605 607 47 (set (reg:DI 1 dx [orig:303 _217 ] [303])
        (sign_extend:DI (reg:SI 1 dx [751]))) "BLOSFC2.f":140 149 {*extendsidi2_rex64}
     (nil))
(insn 607 606 608 47 (parallel [
            (set (reg:DI 1 dx [orig:304 _218 ] [304])
                (plus:DI (reg:DI 1 dx [orig:303 _217 ] [303])
                    (reg:DI 2 cx [orig:302 _216 ] [302])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":140 222 {*adddi_1}
     (nil))
(insn 608 607 609 47 (parallel [
            (set (reg:DI 2 cx [orig:305 _219 ] [305])
                (plus:DI (reg:DI 1 dx [orig:304 _218 ] [304])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":140 222 {*adddi_1}
     (nil))
(insn 609 608 610 47 (set (reg/f:DI 1 dx [752])
        (symbol_ref:DI ("tbnd.4107") [flags 0x202]  <var_decl 0x7f0d481b31b0 tbnd>)) "BLOSFC2.f":140 85 {*movdi_internal}
     (nil))
(insn 610 609 611 47 (set (reg:SF 22 xmm1 [orig:306 _220 ] [306])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:305 _219 ] [305])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [752])) [1 tbnd S4 A32])) "BLOSFC2.f":140 131 {*movsf_internal}
     (nil))
(insn 611 610 612 47 (set (reg:SI 1 dx [753])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":140 86 {*movsi_internal}
     (nil))
(insn 612 611 613 47 (set (reg:DI 1 dx [orig:307 _221 ] [307])
        (sign_extend:DI (reg:SI 1 dx [753]))) "BLOSFC2.f":140 149 {*extendsidi2_rex64}
     (nil))
(insn 613 612 614 47 (parallel [
            (set (reg:DI 2 cx [orig:308 _222 ] [308])
                (mult:DI (reg:DI 1 dx [orig:307 _221 ] [307])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":140 349 {*muldi3_1}
     (nil))
(insn 614 613 615 47 (set (reg:SI 1 dx [754])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":140 86 {*movsi_internal}
     (nil))
(insn 615 614 616 47 (set (reg:DI 1 dx [orig:309 _223 ] [309])
        (sign_extend:DI (reg:SI 1 dx [754]))) "BLOSFC2.f":140 149 {*extendsidi2_rex64}
     (nil))
(insn 616 615 617 47 (parallel [
            (set (reg:DI 1 dx [orig:310 _224 ] [310])
                (mult:DI (reg:DI 1 dx [orig:309 _223 ] [309])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":140 349 {*muldi3_1}
     (nil))
(insn 617 616 618 47 (parallel [
            (set (reg:DI 2 cx [orig:311 _225 ] [311])
                (plus:DI (reg:DI 2 cx [orig:308 _222 ] [308])
                    (reg:DI 1 dx [orig:310 _224 ] [310])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":140 222 {*adddi_1}
     (nil))
(insn 618 617 619 47 (set (reg:SI 1 dx [755])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":140 86 {*movsi_internal}
     (nil))
(insn 619 618 620 47 (set (reg:DI 1 dx [orig:312 _226 ] [312])
        (sign_extend:DI (reg:SI 1 dx [755]))) "BLOSFC2.f":140 149 {*extendsidi2_rex64}
     (nil))
(insn 620 619 621 47 (parallel [
            (set (reg:DI 1 dx [orig:313 _227 ] [313])
                (plus:DI (reg:DI 1 dx [orig:312 _226 ] [312])
                    (reg:DI 2 cx [orig:311 _225 ] [311])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":140 222 {*adddi_1}
     (nil))
(insn 621 620 622 47 (parallel [
            (set (reg:DI 2 cx [orig:314 _228 ] [314])
                (plus:DI (reg:DI 1 dx [orig:313 _227 ] [313])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":140 222 {*adddi_1}
     (nil))
(insn 622 621 623 47 (set (reg/f:DI 1 dx [756])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":140 85 {*movdi_internal}
     (nil))
(insn 623 622 624 47 (parallel [
            (set (reg:DI 2 cx [757])
                (plus:DI (reg:DI 2 cx [orig:314 _228 ] [314])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":140 222 {*adddi_1}
     (nil))
(insn 624 623 625 47 (set (reg:SF 21 xmm0 [orig:315 _229 ] [315])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [757])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [756])) [1 vrbls.t S4 A32])) "BLOSFC2.f":140 131 {*movsf_internal}
     (nil))
(insn 625 624 626 47 (set (reg:SF 21 xmm0 [orig:316 _230 ] [316])
        (mult:SF (reg:SF 21 xmm0 [orig:315 _229 ] [315])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 dp+0 S4 A32]))) "BLOSFC2.f":140 838 {*fop_sf_comm}
     (nil))
(insn 626 625 627 47 (set (reg:SI 1 dx [758])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":140 86 {*movsi_internal}
     (nil))
(insn 627 626 628 47 (set (reg:DI 1 dx [orig:317 _231 ] [317])
        (sign_extend:DI (reg:SI 1 dx [758]))) "BLOSFC2.f":140 149 {*extendsidi2_rex64}
     (nil))
(insn 628 627 629 47 (parallel [
            (set (reg:DI 2 cx [orig:318 _232 ] [318])
                (mult:DI (reg:DI 1 dx [orig:317 _231 ] [317])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":140 349 {*muldi3_1}
     (nil))
(insn 629 628 630 47 (set (reg:SI 1 dx [759])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":140 86 {*movsi_internal}
     (nil))
(insn 630 629 631 47 (set (reg:DI 1 dx [orig:319 _233 ] [319])
        (sign_extend:DI (reg:SI 1 dx [759]))) "BLOSFC2.f":140 149 {*extendsidi2_rex64}
     (nil))
(insn 631 630 632 47 (parallel [
            (set (reg:DI 1 dx [orig:320 _234 ] [320])
                (plus:DI (reg:DI 1 dx [orig:319 _233 ] [319])
                    (reg:DI 2 cx [orig:318 _232 ] [318])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":140 222 {*adddi_1}
     (nil))
(insn 632 631 633 47 (parallel [
            (set (reg:DI 2 cx [orig:321 _235 ] [321])
                (plus:DI (reg:DI 1 dx [orig:320 _234 ] [320])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":140 222 {*adddi_1}
     (nil))
(insn 633 632 634 47 (set (reg:SF 21 xmm0 [orig:322 _236 ] [322])
        (plus:SF (reg:SF 21 xmm0 [orig:316 _230 ] [316])
            (reg:SF 22 xmm1 [orig:306 _220 ] [306]))) "BLOSFC2.f":140 838 {*fop_sf_comm}
     (nil))
(insn 634 633 635 47 (set (reg/f:DI 1 dx [760])
        (symbol_ref:DI ("tbnd.4107") [flags 0x202]  <var_decl 0x7f0d481b31b0 tbnd>)) "BLOSFC2.f":140 85 {*movdi_internal}
     (nil))
(insn 635 634 636 47 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:321 _235 ] [321])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [760])) [1 tbnd S4 A32])
        (reg:SF 21 xmm0 [orig:322 _236 ] [322])) "BLOSFC2.f":140 131 {*movsf_internal}
     (nil))
(insn 636 635 637 47 (set (reg:SI 1 dx [761])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":141 86 {*movsi_internal}
     (nil))
(insn 637 636 638 47 (set (reg:DI 1 dx [orig:323 _237 ] [323])
        (sign_extend:DI (reg:SI 1 dx [761]))) "BLOSFC2.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 638 637 639 47 (parallel [
            (set (reg:DI 2 cx [orig:324 _238 ] [324])
                (mult:DI (reg:DI 1 dx [orig:323 _237 ] [323])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":141 349 {*muldi3_1}
     (nil))
(insn 639 638 640 47 (set (reg:SI 1 dx [762])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":141 86 {*movsi_internal}
     (nil))
(insn 640 639 641 47 (set (reg:DI 1 dx [orig:325 _239 ] [325])
        (sign_extend:DI (reg:SI 1 dx [762]))) "BLOSFC2.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 641 640 642 47 (parallel [
            (set (reg:DI 1 dx [orig:326 _240 ] [326])
                (plus:DI (reg:DI 1 dx [orig:325 _239 ] [325])
                    (reg:DI 2 cx [orig:324 _238 ] [324])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":141 222 {*adddi_1}
     (nil))
(insn 642 641 643 47 (parallel [
            (set (reg:DI 2 cx [orig:327 _241 ] [327])
                (plus:DI (reg:DI 1 dx [orig:326 _240 ] [326])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":141 222 {*adddi_1}
     (nil))
(insn 643 642 644 47 (set (reg/f:DI 1 dx [763])
        (symbol_ref:DI ("qbnd.4097") [flags 0x202]  <var_decl 0x7f0d481b0cf0 qbnd>)) "BLOSFC2.f":141 85 {*movdi_internal}
     (nil))
(insn 644 643 645 47 (set (reg:SF 22 xmm1 [orig:328 _242 ] [328])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:327 _241 ] [327])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [763])) [1 qbnd S4 A32])) "BLOSFC2.f":141 131 {*movsf_internal}
     (nil))
(insn 645 644 646 47 (set (reg:SI 1 dx [764])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":141 86 {*movsi_internal}
     (nil))
(insn 646 645 647 47 (set (reg:DI 1 dx [orig:329 _243 ] [329])
        (sign_extend:DI (reg:SI 1 dx [764]))) "BLOSFC2.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 647 646 648 47 (parallel [
            (set (reg:DI 2 cx [orig:330 _244 ] [330])
                (mult:DI (reg:DI 1 dx [orig:329 _243 ] [329])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":141 349 {*muldi3_1}
     (nil))
(insn 648 647 649 47 (set (reg:SI 1 dx [765])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":141 86 {*movsi_internal}
     (nil))
(insn 649 648 650 47 (set (reg:DI 1 dx [orig:331 _245 ] [331])
        (sign_extend:DI (reg:SI 1 dx [765]))) "BLOSFC2.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 650 649 651 47 (parallel [
            (set (reg:DI 1 dx [orig:332 _246 ] [332])
                (mult:DI (reg:DI 1 dx [orig:331 _245 ] [331])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":141 349 {*muldi3_1}
     (nil))
(insn 651 650 652 47 (parallel [
            (set (reg:DI 2 cx [orig:333 _247 ] [333])
                (plus:DI (reg:DI 2 cx [orig:330 _244 ] [330])
                    (reg:DI 1 dx [orig:332 _246 ] [332])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":141 222 {*adddi_1}
     (nil))
(insn 652 651 653 47 (set (reg:SI 1 dx [766])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":141 86 {*movsi_internal}
     (nil))
(insn 653 652 654 47 (set (reg:DI 1 dx [orig:334 _248 ] [334])
        (sign_extend:DI (reg:SI 1 dx [766]))) "BLOSFC2.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 654 653 655 47 (parallel [
            (set (reg:DI 1 dx [orig:335 _249 ] [335])
                (plus:DI (reg:DI 1 dx [orig:334 _248 ] [334])
                    (reg:DI 2 cx [orig:333 _247 ] [333])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":141 222 {*adddi_1}
     (nil))
(insn 655 654 656 47 (parallel [
            (set (reg:DI 2 cx [orig:336 _250 ] [336])
                (plus:DI (reg:DI 1 dx [orig:335 _249 ] [335])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":141 222 {*adddi_1}
     (nil))
(insn 656 655 657 47 (set (reg/f:DI 1 dx [767])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":141 85 {*movdi_internal}
     (nil))
(insn 657 656 658 47 (parallel [
            (set (reg:DI 2 cx [768])
                (plus:DI (reg:DI 2 cx [orig:336 _250 ] [336])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":141 222 {*adddi_1}
     (nil))
(insn 658 657 659 47 (set (reg:SF 21 xmm0 [orig:337 _251 ] [337])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [768])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [767])) [1 vrbls.q S4 A32])) "BLOSFC2.f":141 131 {*movsf_internal}
     (nil))
(insn 659 658 660 47 (set (reg:SF 21 xmm0 [orig:338 _252 ] [338])
        (mult:SF (reg:SF 21 xmm0 [orig:337 _251 ] [337])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 dp+0 S4 A32]))) "BLOSFC2.f":141 838 {*fop_sf_comm}
     (nil))
(insn 660 659 661 47 (set (reg:SI 1 dx [769])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":141 86 {*movsi_internal}
     (nil))
(insn 661 660 662 47 (set (reg:DI 1 dx [orig:339 _253 ] [339])
        (sign_extend:DI (reg:SI 1 dx [769]))) "BLOSFC2.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 662 661 663 47 (parallel [
            (set (reg:DI 2 cx [orig:340 _254 ] [340])
                (mult:DI (reg:DI 1 dx [orig:339 _253 ] [339])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":141 349 {*muldi3_1}
     (nil))
(insn 663 662 664 47 (set (reg:SI 1 dx [770])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":141 86 {*movsi_internal}
     (nil))
(insn 664 663 665 47 (set (reg:DI 1 dx [orig:341 _255 ] [341])
        (sign_extend:DI (reg:SI 1 dx [770]))) "BLOSFC2.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 665 664 666 47 (parallel [
            (set (reg:DI 1 dx [orig:342 _256 ] [342])
                (plus:DI (reg:DI 1 dx [orig:341 _255 ] [341])
                    (reg:DI 2 cx [orig:340 _254 ] [340])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":141 222 {*adddi_1}
     (nil))
(insn 666 665 667 47 (parallel [
            (set (reg:DI 2 cx [orig:343 _257 ] [343])
                (plus:DI (reg:DI 1 dx [orig:342 _256 ] [342])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":141 222 {*adddi_1}
     (nil))
(insn 667 666 668 47 (set (reg:SF 21 xmm0 [orig:344 _258 ] [344])
        (plus:SF (reg:SF 21 xmm0 [orig:338 _252 ] [338])
            (reg:SF 22 xmm1 [orig:328 _242 ] [328]))) "BLOSFC2.f":141 838 {*fop_sf_comm}
     (nil))
(insn 668 667 669 47 (set (reg/f:DI 1 dx [771])
        (symbol_ref:DI ("qbnd.4097") [flags 0x202]  <var_decl 0x7f0d481b0cf0 qbnd>)) "BLOSFC2.f":141 85 {*movdi_internal}
     (nil))
(insn 669 668 670 47 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:343 _257 ] [343])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [771])) [1 qbnd S4 A32])
        (reg:SF 21 xmm0 [orig:344 _258 ] [344])) "BLOSFC2.f":141 131 {*movsf_internal}
     (nil))
(insn 670 669 671 47 (set (reg:SI 1 dx [772])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":142 86 {*movsi_internal}
     (nil))
(insn 671 670 672 47 (set (reg:DI 1 dx [orig:345 _259 ] [345])
        (sign_extend:DI (reg:SI 1 dx [772]))) "BLOSFC2.f":142 149 {*extendsidi2_rex64}
     (nil))
(insn 672 671 673 47 (parallel [
            (set (reg:DI 2 cx [orig:346 _260 ] [346])
                (mult:DI (reg:DI 1 dx [orig:345 _259 ] [345])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":142 349 {*muldi3_1}
     (nil))
(insn 673 672 674 47 (set (reg:SI 1 dx [773])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":142 86 {*movsi_internal}
     (nil))
(insn 674 673 675 47 (set (reg:DI 1 dx [orig:347 _261 ] [347])
        (sign_extend:DI (reg:SI 1 dx [773]))) "BLOSFC2.f":142 149 {*extendsidi2_rex64}
     (nil))
(insn 675 674 676 47 (parallel [
            (set (reg:DI 1 dx [orig:348 _262 ] [348])
                (plus:DI (reg:DI 1 dx [orig:347 _261 ] [347])
                    (reg:DI 2 cx [orig:346 _260 ] [346])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":142 222 {*adddi_1}
     (nil))
(insn 676 675 677 47 (parallel [
            (set (reg:DI 2 cx [orig:349 _263 ] [349])
                (plus:DI (reg:DI 1 dx [orig:348 _262 ] [348])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":142 222 {*adddi_1}
     (nil))
(insn 677 676 678 47 (set (reg/f:DI 1 dx [774])
        (symbol_ref:DI ("iceb.4082") [flags 0x202]  <var_decl 0x7f0d481b06c0 iceb>)) "BLOSFC2.f":142 85 {*movdi_internal}
     (nil))
(insn 678 677 679 47 (set (reg:SF 22 xmm1 [orig:350 _264 ] [350])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:349 _263 ] [349])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [774])) [1 iceb S4 A32])) "BLOSFC2.f":142 131 {*movsf_internal}
     (nil))
(insn 679 678 680 47 (set (reg:SF 21 xmm0 [775])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 riw+0 S4 A32])) "BLOSFC2.f":142 131 {*movsf_internal}
     (nil))
(insn 680 679 681 47 (set (reg:SF 21 xmm0 [orig:351 _265 ] [351])
        (mult:SF (reg:SF 21 xmm0 [775])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 dp+0 S4 A32]))) "BLOSFC2.f":142 838 {*fop_sf_comm}
     (nil))
(insn 681 680 682 47 (set (reg:SI 1 dx [776])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":142 86 {*movsi_internal}
     (nil))
(insn 682 681 683 47 (set (reg:DI 1 dx [orig:352 _266 ] [352])
        (sign_extend:DI (reg:SI 1 dx [776]))) "BLOSFC2.f":142 149 {*extendsidi2_rex64}
     (nil))
(insn 683 682 684 47 (parallel [
            (set (reg:DI 2 cx [orig:353 _267 ] [353])
                (mult:DI (reg:DI 1 dx [orig:352 _266 ] [352])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":142 349 {*muldi3_1}
     (nil))
(insn 684 683 685 47 (set (reg:SI 1 dx [777])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":142 86 {*movsi_internal}
     (nil))
(insn 685 684 686 47 (set (reg:DI 1 dx [orig:354 _268 ] [354])
        (sign_extend:DI (reg:SI 1 dx [777]))) "BLOSFC2.f":142 149 {*extendsidi2_rex64}
     (nil))
(insn 686 685 687 47 (parallel [
            (set (reg:DI 1 dx [orig:355 _269 ] [355])
                (plus:DI (reg:DI 1 dx [orig:354 _268 ] [354])
                    (reg:DI 2 cx [orig:353 _267 ] [353])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":142 222 {*adddi_1}
     (nil))
(insn 687 686 688 47 (parallel [
            (set (reg:DI 2 cx [orig:356 _270 ] [356])
                (plus:DI (reg:DI 1 dx [orig:355 _269 ] [355])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":142 222 {*adddi_1}
     (nil))
(insn 688 687 689 47 (set (reg:SF 21 xmm0 [orig:357 _271 ] [357])
        (plus:SF (reg:SF 21 xmm0 [orig:351 _265 ] [351])
            (reg:SF 22 xmm1 [orig:350 _264 ] [350]))) "BLOSFC2.f":142 838 {*fop_sf_comm}
     (nil))
(insn 689 688 690 47 (set (reg/f:DI 1 dx [778])
        (symbol_ref:DI ("iceb.4082") [flags 0x202]  <var_decl 0x7f0d481b06c0 iceb>)) "BLOSFC2.f":142 85 {*movdi_internal}
     (nil))
(insn 690 689 691 47 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:356 _270 ] [356])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [778])) [1 iceb S4 A32])
        (reg:SF 21 xmm0 [orig:357 _271 ] [357])) "BLOSFC2.f":142 131 {*movsf_internal}
     (nil))
;;  succ:       48 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

;; basic block 48, loop depth 0, maybe hot
;;  prev block 47, next block 99, flags: (RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;;              45
;;              46
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 691 690 692 48 31 (nil) [2 uses])
(note 692 691 693 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 693 692 1370 48 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":118 221 {*addsi_1}
     (nil))
(jump_insn 1370 693 1371 48 (set (pc)
        (label_ref 694)) "BLOSFC2.f":118 683 {jump}
     (nil)
 -> 694)
;;  succ:       35 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

(barrier 1371 1370 1429)
;; basic block 99, loop depth 0, maybe hot
;;  prev block 48, next block 49, flags: (RTL, MODIFIED)
;;  pred:       35
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1429 1371 1428 99 94 (nil) [1 uses])
(note 1428 1429 1430 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 1430 1428 697 99 (const_int 0 [0]) "BLOSFC2.f":137 718 {nop}
     (nil))
;;  succ:       49 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

;; basic block 49, loop depth 0, maybe hot
;;  prev block 99, next block 98, flags: (RTL, MODIFIED)
;;  pred:       99 [always]  (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 697 1430 698 49 22 (nil) [0 uses])
(note 698 697 699 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 699 698 1372 49 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":117 221 {*addsi_1}
     (nil))
(jump_insn 1372 699 1373 49 (set (pc)
        (label_ref 700)) "BLOSFC2.f":117 683 {jump}
     (nil)
 -> 700)
;;  succ:       33 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 581

(barrier 1373 1372 1426)
;; basic block 98, loop depth 0, maybe hot
;;  prev block 49, next block 50, flags: (RTL, MODIFIED)
;;  pred:       33
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1426 1373 1425 98 93 (nil) [1 uses])
(note 1425 1426 1427 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 1427 1425 703 98 (const_int 0 [0]) "BLOSFC2.f":118 718 {nop}
     (nil))
;;  succ:       50 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, maybe hot
;;  prev block 98, next block 97, flags: (RTL, MODIFIED)
;;  pred:       98 [always]  (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 703 1427 704 50 21 (nil) [0 uses])
(note 704 703 705 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 705 704 1374 50 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":116 221 {*addsi_1}
     (nil))
(jump_insn 1374 705 1375 50 (set (pc)
        (label_ref 706)) "BLOSFC2.f":116 683 {jump}
     (nil)
 -> 706)
;;  succ:       31 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1375 1374 1423)
;; basic block 97, loop depth 0, maybe hot
;;  prev block 50, next block 51, flags: (RTL, MODIFIED)
;;  pred:       31
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1423 1375 1422 97 92 (nil) [1 uses])
(note 1422 1423 1424 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1424 1422 709 97 (const_int 0 [0]) "BLOSFC2.f":117 718 {nop}
     (nil))
;;  succ:       51 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 51, loop depth 0, maybe hot
;;  prev block 97, next block 52, flags: (RTL, MODIFIED)
;;  pred:       97 [always]  (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 584 585
(code_label 709 1424 710 51 20 (nil) [0 uses])
(note 710 709 711 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 711 710 712 51 (set (reg:SI 1 dx [orig:584 _589 ] [584])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0d481aa750 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "BLOSFC2.f":148 86 {*movsi_internal}
     (nil))
(insn 712 711 713 51 (set (reg:SI 0 ax [orig:585 _590 ] [585])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0d481aa750 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "BLOSFC2.f":148 86 {*movsi_internal}
     (nil))
(insn 713 712 931 51 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:584 _589 ] [584])) "BLOSFC2.f":148 86 {*movsi_internal}
     (nil))
;;  succ:       52 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585

;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 53, flags: (RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;;              61 [always] 
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585
;; lr  def 	 17 [flags] 586 779
(code_label 931 713 714 52 44 (nil) [1 uses])
(note 714 931 715 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 715 714 716 52 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:585 _590 ] [585]))) "BLOSFC2.f":148 11 {*cmpsi_1}
     (nil))
(insn 716 715 717 52 (set (reg:QI 1 dx [779])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":148 678 {*setcc_qi}
     (nil))
(insn 717 716 718 52 (set (reg:SI 1 dx [orig:586 _592 ] [586])
        (zero_extend:SI (reg:QI 1 dx [779]))) "BLOSFC2.f":148 140 {*zero_extendqisi2}
     (nil))
(insn 718 717 719 52 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:586 _592 ] [586])
            (const_int 0 [0]))) "BLOSFC2.f":148 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 719 718 720 52 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1432)
            (pc))) "BLOSFC2.f":148 682 {*jcc}
     (nil)
 -> 1432)
;;  succ:       100
;;              53 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585

;; basic block 53, loop depth 0, maybe hot
;;  prev block 52, next block 54, flags: (RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 720 719 721 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 721 720 925 53 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "BLOSFC2.f":149 86 {*movsi_internal}
     (nil))
;;  succ:       54 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585

;; basic block 54, loop depth 0, maybe hot
;;  prev block 53, next block 55, flags: (RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;;              60 [always] 
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 587 780
(code_label 925 721 722 54 43 (nil) [1 uses])
(note 722 925 723 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 723 722 724 54 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "BLOSFC2.f":149 11 {*cmpsi_1}
     (nil))
(insn 724 723 725 54 (set (reg:QI 1 dx [780])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":149 678 {*setcc_qi}
     (nil))
(insn 725 724 726 54 (set (reg:SI 1 dx [orig:587 _594 ] [587])
        (zero_extend:SI (reg:QI 1 dx [780]))) "BLOSFC2.f":149 140 {*zero_extendqisi2}
     (nil))
(insn 726 725 727 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:587 _594 ] [587])
            (const_int 0 [0]))) "BLOSFC2.f":149 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 727 726 728 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1435)
            (pc))) "BLOSFC2.f":149 682 {*jcc}
     (nil)
 -> 1435)
;;  succ:       101
;;              55 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585

;; basic block 55, loop depth 0, maybe hot
;;  prev block 54, next block 56, flags: (RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 358 359 360 361 362 363 781 782 783 784
(note 728 727 729 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 729 728 730 55 (set (reg:SI 1 dx [781])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":150 86 {*movsi_internal}
     (nil))
(insn 730 729 731 55 (set (reg:DI 1 dx [orig:358 _272 ] [358])
        (sign_extend:DI (reg:SI 1 dx [781]))) "BLOSFC2.f":150 149 {*extendsidi2_rex64}
     (nil))
(insn 731 730 732 55 (parallel [
            (set (reg:DI 2 cx [orig:359 _273 ] [359])
                (mult:DI (reg:DI 1 dx [orig:358 _272 ] [358])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":150 349 {*muldi3_1}
     (nil))
(insn 732 731 733 55 (set (reg:SI 1 dx [782])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":150 86 {*movsi_internal}
     (nil))
(insn 733 732 734 55 (set (reg:DI 1 dx [orig:360 _274 ] [360])
        (sign_extend:DI (reg:SI 1 dx [782]))) "BLOSFC2.f":150 149 {*extendsidi2_rex64}
     (nil))
(insn 734 733 735 55 (parallel [
            (set (reg:DI 1 dx [orig:361 _275 ] [361])
                (plus:DI (reg:DI 1 dx [orig:360 _274 ] [360])
                    (reg:DI 2 cx [orig:359 _273 ] [359])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":150 222 {*adddi_1}
     (nil))
(insn 735 734 736 55 (parallel [
            (set (reg:DI 2 cx [orig:362 _276 ] [362])
                (plus:DI (reg:DI 1 dx [orig:361 _275 ] [361])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":150 222 {*adddi_1}
     (nil))
(insn 736 735 737 55 (set (reg/f:DI 1 dx [783])
        (symbol_ref:DI ("psum.4094") [flags 0x202]  <var_decl 0x7f0d481b0bd0 psum>)) "BLOSFC2.f":150 85 {*movdi_internal}
     (nil))
(insn 737 736 738 55 (set (reg:SF 21 xmm0 [orig:363 _277 ] [363])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:362 _276 ] [362])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [783])) [1 psum S4 A32])) "BLOSFC2.f":150 131 {*movsf_internal}
     (nil))
(insn 738 737 739 55 (set (reg:SF 22 xmm1 [784])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":150 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 739 738 740 55 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:363 _277 ] [363])
                    (reg:SF 22 xmm1 [784]))
            ] UNSPEC_NOTRAP)) "BLOSFC2.f":150 54 {*cmpiusf}
     (nil))
(jump_insn 740 739 1319 55 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1338)
            (pc))) "BLOSFC2.f":150 682 {*jcc}
     (nil)
 -> 1338)
;;  succ:       57
;;              56 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 363 585

;; basic block 56, loop depth 0, maybe hot
;;  prev block 55, next block 57, flags: (RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 363 585
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 363
;; lr  def 	 17 [flags] 785
(note 1319 740 741 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 741 1319 742 56 (set (reg:SF 22 xmm1 [785])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":150 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 742 741 743 56 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:363 _277 ] [363])
                    (reg:SF 22 xmm1 [785]))
            ] UNSPEC_NOTRAP)) "BLOSFC2.f":150 54 {*cmpiusf}
     (nil))
(jump_insn 743 742 1338 56 (set (pc)
        (if_then_else (uneq (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1376)
            (pc))) "BLOSFC2.f":150 682 {*jcc}
     (nil)
 -> 1376)
;;  succ:       57 (FALLTHRU)
;;              59
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585

;; basic block 57, loop depth 0, maybe hot
;;  prev block 56, next block 58, flags: (RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;;              55
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809 810 811 812
(code_label 1338 743 747 57 71 (nil) [1 uses])
(note 747 1338 748 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 748 747 749 57 (set (reg:SI 1 dx [786])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":151 86 {*movsi_internal}
     (nil))
(insn 749 748 750 57 (set (reg:DI 1 dx [orig:364 _278 ] [364])
        (sign_extend:DI (reg:SI 1 dx [786]))) "BLOSFC2.f":151 149 {*extendsidi2_rex64}
     (nil))
(insn 750 749 751 57 (parallel [
            (set (reg:DI 2 cx [orig:365 _279 ] [365])
                (mult:DI (reg:DI 1 dx [orig:364 _278 ] [364])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":151 349 {*muldi3_1}
     (nil))
(insn 751 750 752 57 (set (reg:SI 1 dx [787])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":151 86 {*movsi_internal}
     (nil))
(insn 752 751 753 57 (set (reg:DI 1 dx [orig:366 _280 ] [366])
        (sign_extend:DI (reg:SI 1 dx [787]))) "BLOSFC2.f":151 149 {*extendsidi2_rex64}
     (nil))
(insn 753 752 754 57 (parallel [
            (set (reg:DI 1 dx [orig:367 _281 ] [367])
                (plus:DI (reg:DI 1 dx [orig:366 _280 ] [366])
                    (reg:DI 2 cx [orig:365 _279 ] [365])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":151 222 {*adddi_1}
     (nil))
(insn 754 753 755 57 (parallel [
            (set (reg:DI 2 cx [orig:368 _282 ] [368])
                (plus:DI (reg:DI 1 dx [orig:367 _281 ] [367])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":151 222 {*adddi_1}
     (nil))
(insn 755 754 756 57 (set (reg/f:DI 1 dx [788])
        (symbol_ref:DI ("psum.4094") [flags 0x202]  <var_decl 0x7f0d481b0bd0 psum>)) "BLOSFC2.f":151 85 {*movdi_internal}
     (nil))
(insn 756 755 757 57 (set (reg:SF 22 xmm1 [orig:369 _283 ] [369])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:368 _282 ] [368])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [788])) [1 psum S4 A32])) "BLOSFC2.f":151 131 {*movsf_internal}
     (nil))
(insn 757 756 758 57 (set (reg:SF 21 xmm0 [790])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":151 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 758 757 759 57 (set (reg:SF 21 xmm0 [789])
        (div:SF (reg:SF 21 xmm0 [790])
            (reg:SF 22 xmm1 [orig:369 _283 ] [369]))) "BLOSFC2.f":151 841 {*fop_sf_1}
     (nil))
(insn 759 758 760 57 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 rpsum+0 S4 A32])
        (reg:SF 21 xmm0 [789])) "BLOSFC2.f":151 131 {*movsf_internal}
     (nil))
(insn 760 759 761 57 (set (reg:SI 1 dx [791])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":152 86 {*movsi_internal}
     (nil))
(insn 761 760 762 57 (set (reg:DI 1 dx [orig:370 _284 ] [370])
        (sign_extend:DI (reg:SI 1 dx [791]))) "BLOSFC2.f":152 149 {*extendsidi2_rex64}
     (nil))
(insn 762 761 763 57 (parallel [
            (set (reg:DI 2 cx [orig:371 _285 ] [371])
                (mult:DI (reg:DI 1 dx [orig:370 _284 ] [370])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":152 349 {*muldi3_1}
     (nil))
(insn 763 762 764 57 (set (reg:SI 1 dx [792])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":152 86 {*movsi_internal}
     (nil))
(insn 764 763 765 57 (set (reg:DI 1 dx [orig:372 _286 ] [372])
        (sign_extend:DI (reg:SI 1 dx [792]))) "BLOSFC2.f":152 149 {*extendsidi2_rex64}
     (nil))
(insn 765 764 766 57 (parallel [
            (set (reg:DI 1 dx [orig:373 _287 ] [373])
                (plus:DI (reg:DI 1 dx [orig:372 _286 ] [372])
                    (reg:DI 2 cx [orig:371 _285 ] [371])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":152 222 {*adddi_1}
     (nil))
(insn 766 765 767 57 (parallel [
            (set (reg:DI 2 cx [orig:374 _288 ] [374])
                (plus:DI (reg:DI 1 dx [orig:373 _287 ] [373])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":152 222 {*adddi_1}
     (nil))
(insn 767 766 768 57 (set (reg/f:DI 1 dx [793])
        (symbol_ref:DI ("tbnd.4107") [flags 0x202]  <var_decl 0x7f0d481b31b0 tbnd>)) "BLOSFC2.f":152 85 {*movdi_internal}
     (nil))
(insn 768 767 769 57 (set (reg:SF 21 xmm0 [orig:375 _289 ] [375])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:374 _288 ] [374])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [793])) [1 tbnd S4 A32])) "BLOSFC2.f":152 131 {*movsf_internal}
     (nil))
(insn 769 768 770 57 (set (reg:SI 1 dx [794])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":152 86 {*movsi_internal}
     (nil))
(insn 770 769 771 57 (set (reg:DI 1 dx [orig:376 _290 ] [376])
        (sign_extend:DI (reg:SI 1 dx [794]))) "BLOSFC2.f":152 149 {*extendsidi2_rex64}
     (nil))
(insn 771 770 772 57 (parallel [
            (set (reg:DI 2 cx [orig:377 _291 ] [377])
                (mult:DI (reg:DI 1 dx [orig:376 _290 ] [376])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":152 349 {*muldi3_1}
     (nil))
(insn 772 771 773 57 (set (reg:SI 1 dx [795])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":152 86 {*movsi_internal}
     (nil))
(insn 773 772 774 57 (set (reg:DI 1 dx [orig:378 _292 ] [378])
        (sign_extend:DI (reg:SI 1 dx [795]))) "BLOSFC2.f":152 149 {*extendsidi2_rex64}
     (nil))
(insn 774 773 775 57 (parallel [
            (set (reg:DI 1 dx [orig:379 _293 ] [379])
                (plus:DI (reg:DI 1 dx [orig:378 _292 ] [378])
                    (reg:DI 2 cx [orig:377 _291 ] [377])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":152 222 {*adddi_1}
     (nil))
(insn 775 774 776 57 (parallel [
            (set (reg:DI 2 cx [orig:380 _294 ] [380])
                (plus:DI (reg:DI 1 dx [orig:379 _293 ] [379])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":152 222 {*adddi_1}
     (nil))
(insn 776 775 777 57 (set (reg:SF 21 xmm0 [orig:381 _295 ] [381])
        (mult:SF (reg:SF 21 xmm0 [orig:375 _289 ] [375])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 rpsum+0 S4 A32]))) "BLOSFC2.f":152 838 {*fop_sf_comm}
     (nil))
(insn 777 776 778 57 (set (reg/f:DI 1 dx [796])
        (symbol_ref:DI ("tbnd.4107") [flags 0x202]  <var_decl 0x7f0d481b31b0 tbnd>)) "BLOSFC2.f":152 85 {*movdi_internal}
     (nil))
(insn 778 777 779 57 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:380 _294 ] [380])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [796])) [1 tbnd S4 A32])
        (reg:SF 21 xmm0 [orig:381 _295 ] [381])) "BLOSFC2.f":152 131 {*movsf_internal}
     (nil))
(insn 779 778 780 57 (set (reg:SI 1 dx [797])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":153 86 {*movsi_internal}
     (nil))
(insn 780 779 781 57 (set (reg:DI 1 dx [orig:382 _296 ] [382])
        (sign_extend:DI (reg:SI 1 dx [797]))) "BLOSFC2.f":153 149 {*extendsidi2_rex64}
     (nil))
(insn 781 780 782 57 (parallel [
            (set (reg:DI 2 cx [orig:383 _297 ] [383])
                (mult:DI (reg:DI 1 dx [orig:382 _296 ] [382])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":153 349 {*muldi3_1}
     (nil))
(insn 782 781 783 57 (set (reg:SI 1 dx [798])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":153 86 {*movsi_internal}
     (nil))
(insn 783 782 784 57 (set (reg:DI 1 dx [orig:384 _298 ] [384])
        (sign_extend:DI (reg:SI 1 dx [798]))) "BLOSFC2.f":153 149 {*extendsidi2_rex64}
     (nil))
(insn 784 783 785 57 (parallel [
            (set (reg:DI 1 dx [orig:385 _299 ] [385])
                (plus:DI (reg:DI 1 dx [orig:384 _298 ] [384])
                    (reg:DI 2 cx [orig:383 _297 ] [383])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":153 222 {*adddi_1}
     (nil))
(insn 785 784 786 57 (parallel [
            (set (reg:DI 2 cx [orig:386 _300 ] [386])
                (plus:DI (reg:DI 1 dx [orig:385 _299 ] [385])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":153 222 {*adddi_1}
     (nil))
(insn 786 785 787 57 (set (reg/f:DI 1 dx [799])
        (symbol_ref:DI ("qbnd.4097") [flags 0x202]  <var_decl 0x7f0d481b0cf0 qbnd>)) "BLOSFC2.f":153 85 {*movdi_internal}
     (nil))
(insn 787 786 788 57 (set (reg:SF 21 xmm0 [orig:387 _301 ] [387])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:386 _300 ] [386])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [799])) [1 qbnd S4 A32])) "BLOSFC2.f":153 131 {*movsf_internal}
     (nil))
(insn 788 787 789 57 (set (reg:SI 1 dx [800])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":153 86 {*movsi_internal}
     (nil))
(insn 789 788 790 57 (set (reg:DI 1 dx [orig:388 _302 ] [388])
        (sign_extend:DI (reg:SI 1 dx [800]))) "BLOSFC2.f":153 149 {*extendsidi2_rex64}
     (nil))
(insn 790 789 791 57 (parallel [
            (set (reg:DI 2 cx [orig:389 _303 ] [389])
                (mult:DI (reg:DI 1 dx [orig:388 _302 ] [388])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":153 349 {*muldi3_1}
     (nil))
(insn 791 790 792 57 (set (reg:SI 1 dx [801])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":153 86 {*movsi_internal}
     (nil))
(insn 792 791 793 57 (set (reg:DI 1 dx [orig:390 _304 ] [390])
        (sign_extend:DI (reg:SI 1 dx [801]))) "BLOSFC2.f":153 149 {*extendsidi2_rex64}
     (nil))
(insn 793 792 794 57 (parallel [
            (set (reg:DI 1 dx [orig:391 _305 ] [391])
                (plus:DI (reg:DI 1 dx [orig:390 _304 ] [390])
                    (reg:DI 2 cx [orig:389 _303 ] [389])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":153 222 {*adddi_1}
     (nil))
(insn 794 793 795 57 (parallel [
            (set (reg:DI 2 cx [orig:392 _306 ] [392])
                (plus:DI (reg:DI 1 dx [orig:391 _305 ] [391])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":153 222 {*adddi_1}
     (nil))
(insn 795 794 796 57 (set (reg:SF 21 xmm0 [orig:393 _307 ] [393])
        (mult:SF (reg:SF 21 xmm0 [orig:387 _301 ] [387])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 rpsum+0 S4 A32]))) "BLOSFC2.f":153 838 {*fop_sf_comm}
     (nil))
(insn 796 795 797 57 (set (reg/f:DI 1 dx [802])
        (symbol_ref:DI ("qbnd.4097") [flags 0x202]  <var_decl 0x7f0d481b0cf0 qbnd>)) "BLOSFC2.f":153 85 {*movdi_internal}
     (nil))
(insn 797 796 798 57 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:392 _306 ] [392])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [802])) [1 qbnd S4 A32])
        (reg:SF 21 xmm0 [orig:393 _307 ] [393])) "BLOSFC2.f":153 131 {*movsf_internal}
     (nil))
(insn 798 797 799 57 (set (reg:SI 1 dx [803])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":154 86 {*movsi_internal}
     (nil))
(insn 799 798 800 57 (set (reg:DI 1 dx [orig:394 _308 ] [394])
        (sign_extend:DI (reg:SI 1 dx [803]))) "BLOSFC2.f":154 149 {*extendsidi2_rex64}
     (nil))
(insn 800 799 801 57 (parallel [
            (set (reg:DI 2 cx [orig:395 _309 ] [395])
                (mult:DI (reg:DI 1 dx [orig:394 _308 ] [394])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":154 349 {*muldi3_1}
     (nil))
(insn 801 800 802 57 (set (reg:SI 1 dx [804])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":154 86 {*movsi_internal}
     (nil))
(insn 802 801 803 57 (set (reg:DI 1 dx [orig:396 _310 ] [396])
        (sign_extend:DI (reg:SI 1 dx [804]))) "BLOSFC2.f":154 149 {*extendsidi2_rex64}
     (nil))
(insn 803 802 804 57 (parallel [
            (set (reg:DI 1 dx [orig:397 _311 ] [397])
                (plus:DI (reg:DI 1 dx [orig:396 _310 ] [396])
                    (reg:DI 2 cx [orig:395 _309 ] [395])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":154 222 {*adddi_1}
     (nil))
(insn 804 803 805 57 (parallel [
            (set (reg:DI 2 cx [orig:398 _312 ] [398])
                (plus:DI (reg:DI 1 dx [orig:397 _311 ] [397])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":154 222 {*adddi_1}
     (nil))
(insn 805 804 806 57 (set (reg/f:DI 1 dx [805])
        (symbol_ref:DI ("iceb.4082") [flags 0x202]  <var_decl 0x7f0d481b06c0 iceb>)) "BLOSFC2.f":154 85 {*movdi_internal}
     (nil))
(insn 806 805 807 57 (set (reg:SF 21 xmm0 [orig:399 _313 ] [399])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:398 _312 ] [398])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [805])) [1 iceb S4 A32])) "BLOSFC2.f":154 131 {*movsf_internal}
     (nil))
(insn 807 806 808 57 (set (reg:SI 1 dx [806])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":154 86 {*movsi_internal}
     (nil))
(insn 808 807 809 57 (set (reg:DI 1 dx [orig:400 _314 ] [400])
        (sign_extend:DI (reg:SI 1 dx [806]))) "BLOSFC2.f":154 149 {*extendsidi2_rex64}
     (nil))
(insn 809 808 810 57 (parallel [
            (set (reg:DI 2 cx [orig:401 _315 ] [401])
                (mult:DI (reg:DI 1 dx [orig:400 _314 ] [400])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":154 349 {*muldi3_1}
     (nil))
(insn 810 809 811 57 (set (reg:SI 1 dx [807])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":154 86 {*movsi_internal}
     (nil))
(insn 811 810 812 57 (set (reg:DI 1 dx [orig:402 _316 ] [402])
        (sign_extend:DI (reg:SI 1 dx [807]))) "BLOSFC2.f":154 149 {*extendsidi2_rex64}
     (nil))
(insn 812 811 813 57 (parallel [
            (set (reg:DI 1 dx [orig:403 _317 ] [403])
                (plus:DI (reg:DI 1 dx [orig:402 _316 ] [402])
                    (reg:DI 2 cx [orig:401 _315 ] [401])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":154 222 {*adddi_1}
     (nil))
(insn 813 812 814 57 (parallel [
            (set (reg:DI 2 cx [orig:404 _318 ] [404])
                (plus:DI (reg:DI 1 dx [orig:403 _317 ] [403])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":154 222 {*adddi_1}
     (nil))
(insn 814 813 815 57 (set (reg:SF 21 xmm0 [orig:405 _319 ] [405])
        (mult:SF (reg:SF 21 xmm0 [orig:399 _313 ] [399])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [1 rpsum+0 S4 A32]))) "BLOSFC2.f":154 838 {*fop_sf_comm}
     (nil))
(insn 815 814 816 57 (set (reg/f:DI 1 dx [808])
        (symbol_ref:DI ("iceb.4082") [flags 0x202]  <var_decl 0x7f0d481b06c0 iceb>)) "BLOSFC2.f":154 85 {*movdi_internal}
     (nil))
(insn 816 815 817 57 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:404 _318 ] [404])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [808])) [1 iceb S4 A32])
        (reg:SF 21 xmm0 [orig:405 _319 ] [405])) "BLOSFC2.f":154 131 {*movsf_internal}
     (nil))
(insn 817 816 818 57 (set (reg:SI 1 dx [809])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":155 86 {*movsi_internal}
     (nil))
(insn 818 817 819 57 (set (reg:DI 1 dx [orig:406 _320 ] [406])
        (sign_extend:DI (reg:SI 1 dx [809]))) "BLOSFC2.f":155 149 {*extendsidi2_rex64}
     (nil))
(insn 819 818 820 57 (parallel [
            (set (reg:DI 2 cx [orig:407 _321 ] [407])
                (mult:DI (reg:DI 1 dx [orig:406 _320 ] [406])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":155 349 {*muldi3_1}
     (nil))
(insn 820 819 821 57 (set (reg:SI 1 dx [810])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":155 86 {*movsi_internal}
     (nil))
(insn 821 820 822 57 (set (reg:DI 1 dx [orig:408 _322 ] [408])
        (sign_extend:DI (reg:SI 1 dx [810]))) "BLOSFC2.f":155 149 {*extendsidi2_rex64}
     (nil))
(insn 822 821 823 57 (parallel [
            (set (reg:DI 1 dx [orig:409 _323 ] [409])
                (plus:DI (reg:DI 1 dx [orig:408 _322 ] [408])
                    (reg:DI 2 cx [orig:407 _321 ] [407])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":155 222 {*adddi_1}
     (nil))
(insn 823 822 824 57 (parallel [
            (set (reg:DI 2 cx [orig:410 _324 ] [410])
                (plus:DI (reg:DI 1 dx [orig:409 _323 ] [409])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":155 222 {*adddi_1}
     (nil))
(insn 824 823 825 57 (set (reg/f:DI 1 dx [811])
        (symbol_ref:DI ("iceb.4082") [flags 0x202]  <var_decl 0x7f0d481b06c0 iceb>)) "BLOSFC2.f":155 85 {*movdi_internal}
     (nil))
(insn 825 824 826 57 (set (reg:SF 22 xmm1 [orig:411 _325 ] [411])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:410 _324 ] [410])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [811])) [1 iceb S4 A32])) "BLOSFC2.f":155 131 {*movsf_internal}
     (nil))
(insn 826 825 827 57 (set (reg:SF 21 xmm0 [812])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":155 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 827 826 828 57 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [812])
            (reg:SF 22 xmm1 [orig:411 _325 ] [411]))) "BLOSFC2.f":155 53 {*cmpisf}
     (nil))
(jump_insn 828 827 832 57 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 922)
            (pc))) "BLOSFC2.f":155 682 {*jcc}
     (nil)
 -> 922)
;;  succ:       58 (FALLTHRU)
;;              60
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585

;; basic block 58, loop depth 0, maybe hot
;;  prev block 57, next block 59, flags: (RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 412 413 414 415 416 813 814 815 816
(note 832 828 833 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 833 832 834 58 (set (reg:SI 1 dx [813])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":155 86 {*movsi_internal}
     (nil))
(insn 834 833 835 58 (set (reg:DI 1 dx [orig:412 _326 ] [412])
        (sign_extend:DI (reg:SI 1 dx [813]))) "BLOSFC2.f":155 149 {*extendsidi2_rex64}
     (nil))
(insn 835 834 836 58 (parallel [
            (set (reg:DI 2 cx [orig:413 _327 ] [413])
                (mult:DI (reg:DI 1 dx [orig:412 _326 ] [412])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":155 349 {*muldi3_1}
     (nil))
(insn 836 835 837 58 (set (reg:SI 1 dx [814])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":155 86 {*movsi_internal}
     (nil))
(insn 837 836 838 58 (set (reg:DI 1 dx [orig:414 _328 ] [414])
        (sign_extend:DI (reg:SI 1 dx [814]))) "BLOSFC2.f":155 149 {*extendsidi2_rex64}
     (nil))
(insn 838 837 839 58 (parallel [
            (set (reg:DI 1 dx [orig:415 _329 ] [415])
                (plus:DI (reg:DI 1 dx [orig:414 _328 ] [414])
                    (reg:DI 2 cx [orig:413 _327 ] [413])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":155 222 {*adddi_1}
     (nil))
(insn 839 838 840 58 (parallel [
            (set (reg:DI 2 cx [orig:416 _330 ] [416])
                (plus:DI (reg:DI 1 dx [orig:415 _329 ] [415])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":155 222 {*adddi_1}
     (nil))
(insn 840 839 841 58 (set (reg/f:DI 1 dx [815])
        (symbol_ref:DI ("iceb.4082") [flags 0x202]  <var_decl 0x7f0d481b06c0 iceb>)) "BLOSFC2.f":155 85 {*movdi_internal}
     (nil))
(insn 841 840 842 58 (set (reg:SF 21 xmm0 [816])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":155 131 {*movsf_internal}
     (nil))
(insn 842 841 1377 58 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:416 _330 ] [416])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [815])) [1 iceb S4 A32])
        (reg:SF 21 xmm0 [816])) "BLOSFC2.f":155 131 {*movsf_internal}
     (nil))
(jump_insn 1377 842 1378 58 (set (pc)
        (label_ref 922)) 683 {jump}
     (nil)
 -> 922)
;;  succ:       60 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585

(barrier 1378 1377 1376)
;; basic block 59, loop depth 0, maybe hot
;;  prev block 58, next block 60, flags: (RTL, MODIFIED)
;;  pred:       56
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843
(code_label 1376 1378 846 59 80 (nil) [1 uses])
(note 846 1376 847 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 847 846 848 59 (set (reg:SI 1 dx [817])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":157 86 {*movsi_internal}
     (nil))
(insn 848 847 849 59 (set (reg:DI 1 dx [orig:417 _331 ] [417])
        (sign_extend:DI (reg:SI 1 dx [817]))) "BLOSFC2.f":157 149 {*extendsidi2_rex64}
     (nil))
(insn 849 848 850 59 (parallel [
            (set (reg:DI 2 cx [orig:418 _332 ] [418])
                (mult:DI (reg:DI 1 dx [orig:417 _331 ] [417])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":157 349 {*muldi3_1}
     (nil))
(insn 850 849 851 59 (set (reg:SI 1 dx [818])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":157 86 {*movsi_internal}
     (nil))
(insn 851 850 852 59 (set (reg:DI 1 dx [orig:419 _333 ] [419])
        (sign_extend:DI (reg:SI 1 dx [818]))) "BLOSFC2.f":157 149 {*extendsidi2_rex64}
     (nil))
(insn 852 851 853 59 (parallel [
            (set (reg:DI 1 dx [orig:420 _334 ] [420])
                (plus:DI (reg:DI 1 dx [orig:419 _333 ] [419])
                    (reg:DI 2 cx [orig:418 _332 ] [418])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":157 222 {*adddi_1}
     (nil))
(insn 853 852 854 59 (parallel [
            (set (reg:DI 2 cx [orig:421 _335 ] [421])
                (plus:DI (reg:DI 1 dx [orig:420 _334 ] [420])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":157 222 {*adddi_1}
     (nil))
(insn 854 853 855 59 (set (reg/f:DI 1 dx [819])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f0d481a4990 loops>)) "BLOSFC2.f":157 85 {*movdi_internal}
     (nil))
(insn 855 854 856 59 (parallel [
            (set (reg:DI 2 cx [820])
                (plus:DI (reg:DI 2 cx [orig:421 _335 ] [421])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":157 222 {*adddi_1}
     (nil))
(insn 856 855 857 59 (set (reg:SI 1 dx [821])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [820])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [819])) [2 loops.lmh S4 A32])) "BLOSFC2.f":157 86 {*movsi_internal}
     (nil))
(insn 857 856 858 59 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 llmh+0 S4 A32])
        (reg:SI 1 dx [821])) "BLOSFC2.f":157 86 {*movsi_internal}
     (nil))
(insn 858 857 859 59 (set (reg:SI 1 dx [822])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 llmh+0 S4 A32])) "BLOSFC2.f":158 86 {*movsi_internal}
     (nil))
(insn 859 858 860 59 (set (reg:DI 1 dx [orig:422 _336 ] [422])
        (sign_extend:DI (reg:SI 1 dx [822]))) "BLOSFC2.f":158 149 {*extendsidi2_rex64}
     (nil))
(insn 860 859 861 59 (parallel [
            (set (reg:DI 2 cx [orig:423 _337 ] [423])
                (mult:DI (reg:DI 1 dx [orig:422 _336 ] [422])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":158 349 {*muldi3_1}
     (nil))
(insn 861 860 862 59 (set (reg:SI 1 dx [823])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":158 86 {*movsi_internal}
     (nil))
(insn 862 861 863 59 (set (reg:DI 1 dx [orig:424 _338 ] [424])
        (sign_extend:DI (reg:SI 1 dx [823]))) "BLOSFC2.f":158 149 {*extendsidi2_rex64}
     (nil))
(insn 863 862 864 59 (parallel [
            (set (reg:DI 1 dx [orig:425 _339 ] [425])
                (mult:DI (reg:DI 1 dx [orig:424 _338 ] [424])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":158 349 {*muldi3_1}
     (nil))
(insn 864 863 865 59 (parallel [
            (set (reg:DI 2 cx [orig:426 _340 ] [426])
                (plus:DI (reg:DI 2 cx [orig:423 _337 ] [423])
                    (reg:DI 1 dx [orig:425 _339 ] [425])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":158 222 {*adddi_1}
     (nil))
(insn 865 864 866 59 (set (reg:SI 1 dx [824])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":158 86 {*movsi_internal}
     (nil))
(insn 866 865 867 59 (set (reg:DI 1 dx [orig:427 _341 ] [427])
        (sign_extend:DI (reg:SI 1 dx [824]))) "BLOSFC2.f":158 149 {*extendsidi2_rex64}
     (nil))
(insn 867 866 868 59 (parallel [
            (set (reg:DI 1 dx [orig:428 _342 ] [428])
                (plus:DI (reg:DI 1 dx [orig:427 _341 ] [427])
                    (reg:DI 2 cx [orig:426 _340 ] [426])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":158 222 {*adddi_1}
     (nil))
(insn 868 867 869 59 (parallel [
            (set (reg:DI 4 si [orig:429 _343 ] [429])
                (plus:DI (reg:DI 1 dx [orig:428 _342 ] [428])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":158 222 {*adddi_1}
     (nil))
(insn 869 868 870 59 (set (reg:SI 1 dx [825])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":158 86 {*movsi_internal}
     (nil))
(insn 870 869 871 59 (set (reg:DI 1 dx [orig:430 _344 ] [430])
        (sign_extend:DI (reg:SI 1 dx [825]))) "BLOSFC2.f":158 149 {*extendsidi2_rex64}
     (nil))
(insn 871 870 872 59 (parallel [
            (set (reg:DI 2 cx [orig:431 _345 ] [431])
                (mult:DI (reg:DI 1 dx [orig:430 _344 ] [430])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":158 349 {*muldi3_1}
     (nil))
(insn 872 871 873 59 (set (reg:SI 1 dx [826])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":158 86 {*movsi_internal}
     (nil))
(insn 873 872 874 59 (set (reg:DI 1 dx [orig:432 _346 ] [432])
        (sign_extend:DI (reg:SI 1 dx [826]))) "BLOSFC2.f":158 149 {*extendsidi2_rex64}
     (nil))
(insn 874 873 875 59 (parallel [
            (set (reg:DI 1 dx [orig:433 _347 ] [433])
                (plus:DI (reg:DI 1 dx [orig:432 _346 ] [432])
                    (reg:DI 2 cx [orig:431 _345 ] [431])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":158 222 {*adddi_1}
     (nil))
(insn 875 874 876 59 (parallel [
            (set (reg:DI 2 cx [orig:434 _348 ] [434])
                (plus:DI (reg:DI 1 dx [orig:433 _347 ] [433])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":158 222 {*adddi_1}
     (nil))
(insn 876 875 877 59 (set (reg/f:DI 1 dx [827])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":158 85 {*movdi_internal}
     (nil))
(insn 877 876 878 59 (parallel [
            (set (reg:DI 4 si [828])
                (plus:DI (reg:DI 4 si [orig:429 _343 ] [429])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":158 222 {*adddi_1}
     (nil))
(insn 878 877 879 59 (set (reg:SF 21 xmm0 [orig:435 _349 ] [435])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [828])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [827])) [1 vrbls.t S4 A32])) "BLOSFC2.f":158 131 {*movsf_internal}
     (nil))
(insn 879 878 880 59 (set (reg/f:DI 1 dx [829])
        (symbol_ref:DI ("tbnd.4107") [flags 0x202]  <var_decl 0x7f0d481b31b0 tbnd>)) "BLOSFC2.f":158 85 {*movdi_internal}
     (nil))
(insn 880 879 881 59 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:434 _348 ] [434])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [829])) [1 tbnd S4 A32])
        (reg:SF 21 xmm0 [orig:435 _349 ] [435])) "BLOSFC2.f":158 131 {*movsf_internal}
     (nil))
(insn 881 880 882 59 (set (reg:SI 1 dx [830])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 llmh+0 S4 A32])) "BLOSFC2.f":159 86 {*movsi_internal}
     (nil))
(insn 882 881 883 59 (set (reg:DI 1 dx [orig:436 _350 ] [436])
        (sign_extend:DI (reg:SI 1 dx [830]))) "BLOSFC2.f":159 149 {*extendsidi2_rex64}
     (nil))
(insn 883 882 884 59 (parallel [
            (set (reg:DI 2 cx [orig:437 _351 ] [437])
                (mult:DI (reg:DI 1 dx [orig:436 _350 ] [436])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":159 349 {*muldi3_1}
     (nil))
(insn 884 883 885 59 (set (reg:SI 1 dx [831])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":159 86 {*movsi_internal}
     (nil))
(insn 885 884 886 59 (set (reg:DI 1 dx [orig:438 _352 ] [438])
        (sign_extend:DI (reg:SI 1 dx [831]))) "BLOSFC2.f":159 149 {*extendsidi2_rex64}
     (nil))
(insn 886 885 887 59 (parallel [
            (set (reg:DI 1 dx [orig:439 _353 ] [439])
                (mult:DI (reg:DI 1 dx [orig:438 _352 ] [438])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":159 349 {*muldi3_1}
     (nil))
(insn 887 886 888 59 (parallel [
            (set (reg:DI 2 cx [orig:440 _354 ] [440])
                (plus:DI (reg:DI 2 cx [orig:437 _351 ] [437])
                    (reg:DI 1 dx [orig:439 _353 ] [439])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":159 222 {*adddi_1}
     (nil))
(insn 888 887 889 59 (set (reg:SI 1 dx [832])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":159 86 {*movsi_internal}
     (nil))
(insn 889 888 890 59 (set (reg:DI 1 dx [orig:441 _355 ] [441])
        (sign_extend:DI (reg:SI 1 dx [832]))) "BLOSFC2.f":159 149 {*extendsidi2_rex64}
     (nil))
(insn 890 889 891 59 (parallel [
            (set (reg:DI 1 dx [orig:442 _356 ] [442])
                (plus:DI (reg:DI 1 dx [orig:441 _355 ] [441])
                    (reg:DI 2 cx [orig:440 _354 ] [440])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":159 222 {*adddi_1}
     (nil))
(insn 891 890 892 59 (parallel [
            (set (reg:DI 4 si [orig:443 _357 ] [443])
                (plus:DI (reg:DI 1 dx [orig:442 _356 ] [442])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":159 222 {*adddi_1}
     (nil))
(insn 892 891 893 59 (set (reg:SI 1 dx [833])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":159 86 {*movsi_internal}
     (nil))
(insn 893 892 894 59 (set (reg:DI 1 dx [orig:444 _358 ] [444])
        (sign_extend:DI (reg:SI 1 dx [833]))) "BLOSFC2.f":159 149 {*extendsidi2_rex64}
     (nil))
(insn 894 893 895 59 (parallel [
            (set (reg:DI 2 cx [orig:445 _359 ] [445])
                (mult:DI (reg:DI 1 dx [orig:444 _358 ] [444])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":159 349 {*muldi3_1}
     (nil))
(insn 895 894 896 59 (set (reg:SI 1 dx [834])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":159 86 {*movsi_internal}
     (nil))
(insn 896 895 897 59 (set (reg:DI 1 dx [orig:446 _360 ] [446])
        (sign_extend:DI (reg:SI 1 dx [834]))) "BLOSFC2.f":159 149 {*extendsidi2_rex64}
     (nil))
(insn 897 896 898 59 (parallel [
            (set (reg:DI 1 dx [orig:447 _361 ] [447])
                (plus:DI (reg:DI 1 dx [orig:446 _360 ] [446])
                    (reg:DI 2 cx [orig:445 _359 ] [445])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":159 222 {*adddi_1}
     (nil))
(insn 898 897 899 59 (parallel [
            (set (reg:DI 2 cx [orig:448 _362 ] [448])
                (plus:DI (reg:DI 1 dx [orig:447 _361 ] [447])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":159 222 {*adddi_1}
     (nil))
(insn 899 898 900 59 (set (reg/f:DI 1 dx [835])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":159 85 {*movdi_internal}
     (nil))
(insn 900 899 901 59 (parallel [
            (set (reg:DI 4 si [836])
                (plus:DI (reg:DI 4 si [orig:443 _357 ] [443])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":159 222 {*adddi_1}
     (nil))
(insn 901 900 902 59 (set (reg:SF 21 xmm0 [orig:449 _363 ] [449])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [836])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [835])) [1 vrbls.q S4 A32])) "BLOSFC2.f":159 131 {*movsf_internal}
     (nil))
(insn 902 901 903 59 (set (reg/f:DI 1 dx [837])
        (symbol_ref:DI ("qbnd.4097") [flags 0x202]  <var_decl 0x7f0d481b0cf0 qbnd>)) "BLOSFC2.f":159 85 {*movdi_internal}
     (nil))
(insn 903 902 904 59 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:448 _362 ] [448])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [837])) [1 qbnd S4 A32])
        (reg:SF 21 xmm0 [orig:449 _363 ] [449])) "BLOSFC2.f":159 131 {*movsf_internal}
     (nil))
(insn 904 903 905 59 (set (reg:SI 1 dx [838])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":160 86 {*movsi_internal}
     (nil))
(insn 905 904 906 59 (set (reg:DI 1 dx [orig:450 _364 ] [450])
        (sign_extend:DI (reg:SI 1 dx [838]))) "BLOSFC2.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 906 905 907 59 (parallel [
            (set (reg:DI 2 cx [orig:451 _365 ] [451])
                (mult:DI (reg:DI 1 dx [orig:450 _364 ] [450])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":160 349 {*muldi3_1}
     (nil))
(insn 907 906 908 59 (set (reg:SI 1 dx [839])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":160 86 {*movsi_internal}
     (nil))
(insn 908 907 909 59 (set (reg:DI 1 dx [orig:452 _366 ] [452])
        (sign_extend:DI (reg:SI 1 dx [839]))) "BLOSFC2.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 909 908 910 59 (parallel [
            (set (reg:DI 1 dx [orig:453 _367 ] [453])
                (plus:DI (reg:DI 1 dx [orig:452 _366 ] [452])
                    (reg:DI 2 cx [orig:451 _365 ] [451])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":160 222 {*adddi_1}
     (nil))
(insn 910 909 911 59 (parallel [
            (set (reg:DI 4 si [orig:454 _368 ] [454])
                (plus:DI (reg:DI 1 dx [orig:453 _367 ] [453])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":160 222 {*adddi_1}
     (nil))
(insn 911 910 912 59 (set (reg:SI 1 dx [840])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":160 86 {*movsi_internal}
     (nil))
(insn 912 911 913 59 (set (reg:DI 1 dx [orig:455 _369 ] [455])
        (sign_extend:DI (reg:SI 1 dx [840]))) "BLOSFC2.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 913 912 914 59 (parallel [
            (set (reg:DI 2 cx [orig:456 _370 ] [456])
                (mult:DI (reg:DI 1 dx [orig:455 _369 ] [455])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":160 349 {*muldi3_1}
     (nil))
(insn 914 913 915 59 (set (reg:SI 1 dx [841])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":160 86 {*movsi_internal}
     (nil))
(insn 915 914 916 59 (set (reg:DI 1 dx [orig:457 _371 ] [457])
        (sign_extend:DI (reg:SI 1 dx [841]))) "BLOSFC2.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 916 915 917 59 (parallel [
            (set (reg:DI 1 dx [orig:458 _372 ] [458])
                (plus:DI (reg:DI 1 dx [orig:457 _371 ] [457])
                    (reg:DI 2 cx [orig:456 _370 ] [456])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":160 222 {*adddi_1}
     (nil))
(insn 917 916 918 59 (parallel [
            (set (reg:DI 2 cx [orig:459 _373 ] [459])
                (plus:DI (reg:DI 1 dx [orig:458 _372 ] [458])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":160 222 {*adddi_1}
     (nil))
(insn 918 917 919 59 (set (reg/f:DI 1 dx [842])
        (symbol_ref:DI ("iwm1.4084") [flags 0x202]  <var_decl 0x7f0d481b0750 iwm1>)) "BLOSFC2.f":160 85 {*movdi_internal}
     (nil))
(insn 919 918 920 59 (set (reg:SF 21 xmm0 [orig:460 _374 ] [460])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:454 _368 ] [454])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [842])) [1 iwm1 S4 A32])) "BLOSFC2.f":160 131 {*movsf_internal}
     (nil))
(insn 920 919 921 59 (set (reg/f:DI 1 dx [843])
        (symbol_ref:DI ("iceb.4082") [flags 0x202]  <var_decl 0x7f0d481b06c0 iceb>)) "BLOSFC2.f":160 85 {*movdi_internal}
     (nil))
(insn 921 920 922 59 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:459 _373 ] [459])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [843])) [1 iceb S4 A32])
        (reg:SF 21 xmm0 [orig:460 _374 ] [460])) "BLOSFC2.f":160 131 {*movsf_internal}
     (nil))
;;  succ:       60 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585

;; basic block 60, loop depth 0, maybe hot
;;  prev block 59, next block 101, flags: (RTL, MODIFIED)
;;  pred:       57
;;              59 (FALLTHRU)
;;              58 [always] 
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 922 921 923 60 41 (nil) [2 uses])
(note 923 922 924 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 924 923 1379 60 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":149 221 {*addsi_1}
     (nil))
(jump_insn 1379 924 1380 60 (set (pc)
        (label_ref 925)) "BLOSFC2.f":149 683 {jump}
     (nil)
 -> 925)
;;  succ:       54 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585

(barrier 1380 1379 1435)
;; basic block 101, loop depth 0, maybe hot
;;  prev block 60, next block 61, flags: (RTL, MODIFIED)
;;  pred:       54
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1435 1380 1434 101 96 (nil) [1 uses])
(note 1434 1435 1436 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 1436 1434 928 101 (const_int 0 [0]) "BLOSFC2.f":150 718 {nop}
     (nil))
;;  succ:       61 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585

;; basic block 61, loop depth 0, maybe hot
;;  prev block 101, next block 100, flags: (RTL, MODIFIED)
;;  pred:       101 [always]  (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 928 1436 929 61 38 (nil) [0 uses])
(note 929 928 930 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 930 929 1381 61 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":148 221 {*addsi_1}
     (nil))
(jump_insn 1381 930 1382 61 (set (pc)
        (label_ref 931)) "BLOSFC2.f":148 683 {jump}
     (nil)
 -> 931)
;;  succ:       52 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 585

(barrier 1382 1381 1432)
;; basic block 100, loop depth 0, maybe hot
;;  prev block 61, next block 62, flags: (RTL, MODIFIED)
;;  pred:       52
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1432 1382 1431 100 95 (nil) [1 uses])
(note 1431 1432 1433 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 1433 1431 934 100 (const_int 0 [0]) "BLOSFC2.f":149 718 {nop}
     (nil))
;;  succ:       62 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 62, loop depth 0, maybe hot
;;  prev block 100, next block 63, flags: (RTL, MODIFIED)
;;  pred:       100 [always]  (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 934 1433 935 62 37 (nil) [0 uses])
(note 935 934 936 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 936 935 937 62 (set (reg:DI 1 dx)
        (symbol_ref:DI ("pbnd.4090") [flags 0x202]  <var_decl 0x7f0d481b0a20 pbnd>)) "BLOSFC2.f":167 85 {*movdi_internal}
     (nil))
(insn 937 936 938 62 (set (reg:DI 4 si)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f0d481aa1b0 masks>)) "BLOSFC2.f":167 85 {*movdi_internal}
     (nil))
(insn 938 937 939 62 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f0d481bec60 *.LC7>)) "BLOSFC2.f":167 85 {*movdi_internal}
     (nil))
(insn 939 938 940 62 (set (reg:QI 0 ax)
        (const_int 0 [0])) "BLOSFC2.f":167 88 {*movqi_internal}
     (nil))
(call_insn 940 939 941 62 (call (mem:QI (symbol_ref:DI ("p2filt_") [flags 0x41]  <function_decl 0x7f0d48191700 p2filt>) [0 p2filt S1 A8])
        (const_int 0 [0])) "BLOSFC2.f":167 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 941 940 942 62 (set (reg:DI 1 dx)
        (symbol_ref:DI ("tbnd.4107") [flags 0x202]  <var_decl 0x7f0d481b31b0 tbnd>)) "BLOSFC2.f":168 85 {*movdi_internal}
     (nil))
(insn 942 941 943 62 (set (reg:DI 4 si)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f0d481aa1b0 masks>)) "BLOSFC2.f":168 85 {*movdi_internal}
     (nil))
(insn 943 942 944 62 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f0d481bec60 *.LC7>)) "BLOSFC2.f":168 85 {*movdi_internal}
     (nil))
(insn 944 943 945 62 (set (reg:QI 0 ax)
        (const_int 0 [0])) "BLOSFC2.f":168 88 {*movqi_internal}
     (nil))
(call_insn 945 944 946 62 (call (mem:QI (symbol_ref:DI ("p2filt_") [flags 0x41]  <function_decl 0x7f0d48191700 p2filt>) [0 p2filt S1 A8])
        (const_int 0 [0])) "BLOSFC2.f":168 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 946 945 947 62 (set (reg:DI 1 dx)
        (symbol_ref:DI ("qbnd.4097") [flags 0x202]  <var_decl 0x7f0d481b0cf0 qbnd>)) "BLOSFC2.f":169 85 {*movdi_internal}
     (nil))
(insn 947 946 948 62 (set (reg:DI 4 si)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f0d481aa1b0 masks>)) "BLOSFC2.f":169 85 {*movdi_internal}
     (nil))
(insn 948 947 949 62 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f0d481bec60 *.LC7>)) "BLOSFC2.f":169 85 {*movdi_internal}
     (nil))
(insn 949 948 950 62 (set (reg:QI 0 ax)
        (const_int 0 [0])) "BLOSFC2.f":169 88 {*movqi_internal}
     (nil))
(call_insn 950 949 951 62 (call (mem:QI (symbol_ref:DI ("p2filt_") [flags 0x41]  <function_decl 0x7f0d48191700 p2filt>) [0 p2filt S1 A8])
        (const_int 0 [0])) "BLOSFC2.f":169 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 951 950 952 62 (set (reg:DI 37 r8)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f0d481becf0 *.LC8>)) "BLOSFC2.f":170 85 {*movdi_internal}
     (nil))
(insn 952 951 953 62 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f0d481bed80 *.LC9>)) "BLOSFC2.f":170 85 {*movdi_internal}
     (nil))
(insn 953 952 954 62 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7f0d481bee10 *.LC10>)) "BLOSFC2.f":170 85 {*movdi_internal}
     (nil))
(insn 954 953 955 62 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7f0d481beea0 *.LC11>)) "BLOSFC2.f":170 85 {*movdi_internal}
     (nil))
(insn 955 954 956 62 (set (reg:DI 5 di)
        (symbol_ref:DI ("qbnd.4097") [flags 0x202]  <var_decl 0x7f0d481b0cf0 qbnd>)) "BLOSFC2.f":170 85 {*movdi_internal}
     (nil))
(insn 956 955 957 62 (set (reg:QI 0 ax)
        (const_int 0 [0])) "BLOSFC2.f":170 88 {*movqi_internal}
     (nil))
(call_insn 957 956 958 62 (call (mem:QI (symbol_ref:DI ("boundl_") [flags 0x41]  <function_decl 0x7f0d48191800 boundl>) [0 boundl S1 A8])
        (const_int 0 [0])) "BLOSFC2.f":170 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 958 957 959 62 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":171 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 959 958 960 62 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [11  S8 A64])
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7f0d481becf0 *.LC8>)) "BLOSFC2.f":171 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 960 959 961 62 (set (reg:DI 38 r9)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7f0d481bed80 *.LC9>)) "BLOSFC2.f":171 85 {*movdi_internal}
     (nil))
(insn 961 960 962 62 (set (reg:DI 37 r8)
        (symbol_ref:DI ("rhbnd.4103") [flags 0x202]  <var_decl 0x7f0d481b3000 rhbnd>)) "BLOSFC2.f":171 85 {*movdi_internal}
     (nil))
(insn 962 961 963 62 (set (reg:DI 2 cx)
        (symbol_ref:DI ("iceb.4082") [flags 0x202]  <var_decl 0x7f0d481b06c0 iceb>)) "BLOSFC2.f":171 85 {*movdi_internal}
     (nil))
(insn 963 962 964 62 (set (reg:DI 1 dx)
        (symbol_ref:DI ("qbnd.4097") [flags 0x202]  <var_decl 0x7f0d481b0cf0 qbnd>)) "BLOSFC2.f":171 85 {*movdi_internal}
     (nil))
(insn 964 963 965 62 (set (reg:DI 4 si)
        (symbol_ref:DI ("tbnd.4107") [flags 0x202]  <var_decl 0x7f0d481b31b0 tbnd>)) "BLOSFC2.f":171 85 {*movdi_internal}
     (nil))
(insn 965 964 966 62 (set (reg:DI 5 di)
        (symbol_ref:DI ("pbnd.4090") [flags 0x202]  <var_decl 0x7f0d481b0a20 pbnd>)) "BLOSFC2.f":171 85 {*movdi_internal}
     (nil))
(insn 966 965 967 62 (set (reg:QI 0 ax)
        (const_int 0 [0])) "BLOSFC2.f":171 88 {*movqi_internal}
     (nil))
(call_insn 967 966 968 62 (call (mem:QI (symbol_ref:DI ("calrh2_") [flags 0x41]  <function_decl 0x7f0d48191900 calrh2>) [0 calrh2 S1 A8])
        (const_int 16 [0x10])) "BLOSFC2.f":171 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 968 967 969 62 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":171 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 969 968 970 62 (set (reg:DI 1 dx)
        (symbol_ref:DI ("rhbnd.4103") [flags 0x202]  <var_decl 0x7f0d481b3000 rhbnd>)) "BLOSFC2.f":172 85 {*movdi_internal}
     (nil))
(insn 970 969 971 62 (set (reg:DI 4 si)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f0d481aa1b0 masks>)) "BLOSFC2.f":172 85 {*movdi_internal}
     (nil))
(insn 971 970 972 62 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7f0d481bec60 *.LC7>)) "BLOSFC2.f":172 85 {*movdi_internal}
     (nil))
(insn 972 971 973 62 (set (reg:QI 0 ax)
        (const_int 0 [0])) "BLOSFC2.f":172 88 {*movqi_internal}
     (nil))
(call_insn 973 972 974 62 (call (mem:QI (symbol_ref:DI ("p2filt_") [flags 0x41]  <function_decl 0x7f0d48191700 p2filt>) [0 p2filt S1 A8])
        (const_int 0 [0])) "BLOSFC2.f":172 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 974 973 1297 62 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
        (const_int 1 [0x1])) "BLOSFC2.f":177 86 {*movsi_internal}
     (nil))
;;  succ:       63 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 63, loop depth 0, maybe hot
;;  prev block 62, next block 64, flags: (RTL, MODIFIED)
;;  pred:       62 (FALLTHRU)
;;              87 [always] 
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 588 844
(code_label 1297 974 975 63 63 (nil) [1 uses])
(note 975 1297 976 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 976 975 977 63 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
            (const_int 38 [0x26]))) "BLOSFC2.f":177 11 {*cmpsi_1}
     (nil))
(insn 977 976 978 63 (set (reg:QI 0 ax [844])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":177 678 {*setcc_qi}
     (nil))
(insn 978 977 979 63 (set (reg:SI 0 ax [orig:588 _613 ] [588])
        (zero_extend:SI (reg:QI 0 ax [844]))) "BLOSFC2.f":177 140 {*zero_extendqisi2}
     (nil))
(insn 979 978 980 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:588 _613 ] [588])
            (const_int 0 [0]))) "BLOSFC2.f":177 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 980 979 981 63 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1438)
            (pc))) "BLOSFC2.f":177 682 {*jcc}
     (nil)
 -> 1438)
;;  succ:       102
;;              64 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 64, loop depth 0, maybe hot
;;  prev block 63, next block 65, flags: (RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 589 590
(note 981 980 982 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 982 981 983 64 (set (reg:SI 0 ax [orig:589 _614 ] [589])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0d481aa750 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "BLOSFC2.f":178 86 {*movsi_internal}
     (nil))
(insn 983 982 984 64 (set (reg:SI 3 bx [orig:590 _615 ] [590])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0d481aa750 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "BLOSFC2.f":178 86 {*movsi_internal}
     (nil))
(insn 984 983 1280 64 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
        (reg:SI 0 ax [orig:589 _614 ] [589])) "BLOSFC2.f":178 86 {*movsi_internal}
     (nil))
;;  succ:       65 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

;; basic block 65, loop depth 0, maybe hot
;;  prev block 64, next block 66, flags: (RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;;              86 [always] 
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  def 	 17 [flags] 591 845
(code_label 1280 984 985 65 62 (nil) [1 uses])
(note 985 1280 986 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 986 985 987 65 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
            (reg:SI 3 bx [orig:590 _615 ] [590]))) "BLOSFC2.f":178 11 {*cmpsi_1}
     (nil))
(insn 987 986 988 65 (set (reg:QI 0 ax [845])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":178 678 {*setcc_qi}
     (nil))
(insn 988 987 989 65 (set (reg:SI 0 ax [orig:591 _617 ] [591])
        (zero_extend:SI (reg:QI 0 ax [845]))) "BLOSFC2.f":178 140 {*zero_extendqisi2}
     (nil))
(insn 989 988 990 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:591 _617 ] [591])
            (const_int 0 [0]))) "BLOSFC2.f":178 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 990 989 991 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1441)
            (pc))) "BLOSFC2.f":178 682 {*jcc}
     (nil)
 -> 1441)
;;  succ:       103
;;              66 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

;; basic block 66, loop depth 0, maybe hot
;;  prev block 65, next block 67, flags: (RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 991 990 992 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 992 991 1274 66 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "BLOSFC2.f":179 86 {*movsi_internal}
     (nil))
;;  succ:       67 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

;; basic block 67, loop depth 0, maybe hot
;;  prev block 66, next block 68, flags: (RTL, MODIFIED)
;;  pred:       66 (FALLTHRU)
;;              85 [always] 
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 592 846
(code_label 1274 992 993 67 61 (nil) [1 uses])
(note 993 1274 994 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 994 993 995 67 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "BLOSFC2.f":179 11 {*cmpsi_1}
     (nil))
(insn 995 994 996 67 (set (reg:QI 0 ax [846])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":179 678 {*setcc_qi}
     (nil))
(insn 996 995 997 67 (set (reg:SI 0 ax [orig:592 _619 ] [592])
        (zero_extend:SI (reg:QI 0 ax [846]))) "BLOSFC2.f":179 140 {*zero_extendqisi2}
     (nil))
(insn 997 996 998 67 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:592 _619 ] [592])
            (const_int 0 [0]))) "BLOSFC2.f":179 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 998 997 999 67 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1444)
            (pc))) "BLOSFC2.f":179 682 {*jcc}
     (nil)
 -> 1444)
;;  succ:       104
;;              68 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

;; basic block 68, loop depth 0, maybe hot
;;  prev block 67, next block 69, flags: (RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 461 462 463 464 465 847 848 849 850 851 852
(note 999 998 1000 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 1000 999 1001 68 (set (reg:SI 0 ax [847])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":180 86 {*movsi_internal}
     (nil))
(insn 1001 1000 1002 68 (set (reg:DI 0 ax [orig:461 _375 ] [461])
        (sign_extend:DI (reg:SI 0 ax [847]))) "BLOSFC2.f":180 149 {*extendsidi2_rex64}
     (nil))
(insn 1002 1001 1003 68 (parallel [
            (set (reg:DI 1 dx [orig:462 _376 ] [462])
                (mult:DI (reg:DI 0 ax [orig:461 _375 ] [461])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":180 349 {*muldi3_1}
     (nil))
(insn 1003 1002 1004 68 (set (reg:SI 0 ax [848])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":180 86 {*movsi_internal}
     (nil))
(insn 1004 1003 1005 68 (set (reg:DI 0 ax [orig:463 _377 ] [463])
        (sign_extend:DI (reg:SI 0 ax [848]))) "BLOSFC2.f":180 149 {*extendsidi2_rex64}
     (nil))
(insn 1005 1004 1006 68 (parallel [
            (set (reg:DI 0 ax [orig:464 _378 ] [464])
                (plus:DI (reg:DI 0 ax [orig:463 _377 ] [463])
                    (reg:DI 1 dx [orig:462 _376 ] [462])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":180 222 {*adddi_1}
     (nil))
(insn 1006 1005 1007 68 (parallel [
            (set (reg:DI 1 dx [orig:465 _379 ] [465])
                (plus:DI (reg:DI 0 ax [orig:464 _378 ] [464])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":180 222 {*adddi_1}
     (nil))
(insn 1007 1006 1008 68 (set (reg/f:DI 0 ax [849])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f0d481a4990 loops>)) "BLOSFC2.f":180 85 {*movdi_internal}
     (nil))
(insn 1008 1007 1009 68 (parallel [
            (set (reg:DI 1 dx [850])
                (plus:DI (reg:DI 1 dx [orig:465 _379 ] [465])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":180 222 {*adddi_1}
     (nil))
(insn 1009 1008 1010 68 (set (reg:SI 0 ax [851])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [850])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [849])) [2 loops.lmh S4 A32])) "BLOSFC2.f":180 86 {*movsi_internal}
     (nil))
(insn 1010 1009 1011 68 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 llmh+0 S4 A32])
        (reg:SI 0 ax [851])) "BLOSFC2.f":180 86 {*movsi_internal}
     (nil))
(insn 1011 1010 1012 68 (set (reg:SI 0 ax [852])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":181 86 {*movsi_internal}
     (nil))
(insn 1012 1011 1013 68 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [852])
            (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [2 llmh+0 S4 A32]))) "BLOSFC2.f":181 11 {*cmpsi_1}
     (nil))
(jump_insn 1013 1012 1014 68 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1271)
            (pc))) "BLOSFC2.f":181 682 {*jcc}
     (nil)
 -> 1271)
;;  succ:       69 (FALLTHRU)
;;              85
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

;; basic block 69, loop depth 0, maybe hot
;;  prev block 68, next block 70, flags: (RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483 484 485 486 487 488 489 490 491 492 493 494 495 496 497 562 853 854 855 856 857 858 859 860 861 862 863 864 865 866 867 868 869 870 871 872 873
(note 1014 1013 1015 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 1015 1014 1016 69 (set (reg:SI 0 ax [853])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":182 86 {*movsi_internal}
     (nil))
(insn 1016 1015 1017 69 (set (reg:DI 0 ax [orig:466 _380 ] [466])
        (sign_extend:DI (reg:SI 0 ax [853]))) "BLOSFC2.f":182 149 {*extendsidi2_rex64}
     (nil))
(insn 1017 1016 1018 69 (parallel [
            (set (reg:DI 1 dx [orig:467 _381 ] [467])
                (mult:DI (reg:DI 0 ax [orig:466 _380 ] [466])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":182 349 {*muldi3_1}
     (nil))
(insn 1018 1017 1019 69 (set (reg:SI 0 ax [854])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":182 86 {*movsi_internal}
     (nil))
(insn 1019 1018 1020 69 (set (reg:DI 0 ax [orig:468 _382 ] [468])
        (sign_extend:DI (reg:SI 0 ax [854]))) "BLOSFC2.f":182 149 {*extendsidi2_rex64}
     (nil))
(insn 1020 1019 1021 69 (parallel [
            (set (reg:DI 0 ax [orig:469 _383 ] [469])
                (mult:DI (reg:DI 0 ax [orig:468 _382 ] [468])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":182 349 {*muldi3_1}
     (nil))
(insn 1021 1020 1022 69 (parallel [
            (set (reg:DI 1 dx [orig:470 _384 ] [470])
                (plus:DI (reg:DI 1 dx [orig:467 _381 ] [467])
                    (reg:DI 0 ax [orig:469 _383 ] [469])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":182 222 {*adddi_1}
     (nil))
(insn 1022 1021 1023 69 (set (reg:SI 0 ax [855])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":182 86 {*movsi_internal}
     (nil))
(insn 1023 1022 1024 69 (set (reg:DI 0 ax [orig:471 _385 ] [471])
        (sign_extend:DI (reg:SI 0 ax [855]))) "BLOSFC2.f":182 149 {*extendsidi2_rex64}
     (nil))
(insn 1024 1023 1025 69 (parallel [
            (set (reg:DI 0 ax [orig:472 _386 ] [472])
                (plus:DI (reg:DI 0 ax [orig:471 _385 ] [471])
                    (reg:DI 1 dx [orig:470 _384 ] [470])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":182 222 {*adddi_1}
     (nil))
(insn 1025 1024 1026 69 (parallel [
            (set (reg:DI 1 dx [orig:473 _387 ] [473])
                (plus:DI (reg:DI 0 ax [orig:472 _386 ] [472])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":182 222 {*adddi_1}
     (nil))
(insn 1026 1025 1027 69 (set (reg/f:DI 0 ax [856])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0d4819bbd0 extra>)) "BLOSFC2.f":182 85 {*movdi_internal}
     (nil))
(insn 1027 1026 1028 69 (set (reg:SF 22 xmm1 [orig:474 _388 ] [474])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:473 _387 ] [473])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [856])) [1 extra.pint S4 A32])) "BLOSFC2.f":182 131 {*movsf_internal}
     (nil))
(insn 1028 1027 1029 69 (set (reg:SI 0 ax [857])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":182 86 {*movsi_internal}
     (nil))
(insn 1029 1028 1030 69 (parallel [
            (set (reg:SI 0 ax [orig:475 _389 ] [475])
                (plus:SI (reg:SI 0 ax [857])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":182 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [2 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 1030 1029 1031 69 (set (reg:DI 0 ax [orig:476 _390 ] [476])
        (sign_extend:DI (reg:SI 0 ax [orig:475 _389 ] [475]))) "BLOSFC2.f":182 149 {*extendsidi2_rex64}
     (nil))
(insn 1031 1030 1032 69 (parallel [
            (set (reg:DI 1 dx [orig:477 _391 ] [477])
                (mult:DI (reg:DI 0 ax [orig:476 _390 ] [476])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":182 349 {*muldi3_1}
     (nil))
(insn 1032 1031 1033 69 (set (reg:SI 0 ax [858])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":182 86 {*movsi_internal}
     (nil))
(insn 1033 1032 1034 69 (set (reg:DI 0 ax [orig:478 _392 ] [478])
        (sign_extend:DI (reg:SI 0 ax [858]))) "BLOSFC2.f":182 149 {*extendsidi2_rex64}
     (nil))
(insn 1034 1033 1035 69 (parallel [
            (set (reg:DI 0 ax [orig:479 _393 ] [479])
                (mult:DI (reg:DI 0 ax [orig:478 _392 ] [478])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":182 349 {*muldi3_1}
     (nil))
(insn 1035 1034 1036 69 (parallel [
            (set (reg:DI 1 dx [orig:480 _394 ] [480])
                (plus:DI (reg:DI 1 dx [orig:477 _391 ] [477])
                    (reg:DI 0 ax [orig:479 _393 ] [479])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":182 222 {*adddi_1}
     (nil))
(insn 1036 1035 1037 69 (set (reg:SI 0 ax [859])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":182 86 {*movsi_internal}
     (nil))
(insn 1037 1036 1038 69 (set (reg:DI 0 ax [orig:481 _395 ] [481])
        (sign_extend:DI (reg:SI 0 ax [859]))) "BLOSFC2.f":182 149 {*extendsidi2_rex64}
     (nil))
(insn 1038 1037 1039 69 (parallel [
            (set (reg:DI 0 ax [orig:482 _396 ] [482])
                (plus:DI (reg:DI 0 ax [orig:481 _395 ] [481])
                    (reg:DI 1 dx [orig:480 _394 ] [480])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":182 222 {*adddi_1}
     (nil))
(insn 1039 1038 1040 69 (parallel [
            (set (reg:DI 1 dx [orig:483 _397 ] [483])
                (plus:DI (reg:DI 0 ax [orig:482 _396 ] [482])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":182 222 {*adddi_1}
     (nil))
(insn 1040 1039 1041 69 (set (reg/f:DI 0 ax [860])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0d4819bbd0 extra>)) "BLOSFC2.f":182 85 {*movdi_internal}
     (nil))
(insn 1041 1040 1042 69 (set (reg:SF 21 xmm0 [orig:484 _398 ] [484])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:483 _397 ] [483])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [860])) [1 extra.pint S4 A32])) "BLOSFC2.f":182 131 {*movsf_internal}
     (nil))
(insn 1042 1041 1043 69 (set (reg:SF 21 xmm0 [orig:485 _399 ] [485])
        (plus:SF (reg:SF 21 xmm0 [orig:484 _398 ] [484])
            (reg:SF 22 xmm1 [orig:474 _388 ] [474]))) "BLOSFC2.f":182 838 {*fop_sf_comm}
     (nil))
(insn 1043 1042 1044 69 (set (reg:SF 22 xmm1 [orig:486 _400 ] [486])
        (reg:SF 21 xmm0 [orig:485 _399 ] [485])) "BLOSFC2.f":182 131 {*movsf_internal}
     (nil))
(insn 1044 1043 1045 69 (set (reg:SF 21 xmm0 [862])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":182 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 1045 1044 1046 69 (set (reg:SF 21 xmm0 [861])
        (mult:SF (reg:SF 21 xmm0 [862])
            (reg:SF 22 xmm1 [orig:486 _400 ] [486]))) "BLOSFC2.f":182 838 {*fop_sf_comm}
     (nil))
(insn 1046 1045 1047 69 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pm+0 S4 A32])
        (reg:SF 21 xmm0 [861])) "BLOSFC2.f":182 131 {*movsf_internal}
     (nil))
(insn 1047 1046 1048 69 (set (reg:SI 0 ax [863])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":183 86 {*movsi_internal}
     (nil))
(insn 1048 1047 1049 69 (set (reg:DI 0 ax [orig:487 _401 ] [487])
        (sign_extend:DI (reg:SI 0 ax [863]))) "BLOSFC2.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 1049 1048 1050 69 (parallel [
            (set (reg:DI 1 dx [orig:488 _402 ] [488])
                (mult:DI (reg:DI 0 ax [orig:487 _401 ] [487])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":183 349 {*muldi3_1}
     (nil))
(insn 1050 1049 1051 69 (set (reg:SI 0 ax [864])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":183 86 {*movsi_internal}
     (nil))
(insn 1051 1050 1052 69 (set (reg:DI 0 ax [orig:489 _403 ] [489])
        (sign_extend:DI (reg:SI 0 ax [864]))) "BLOSFC2.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 1052 1051 1053 69 (parallel [
            (set (reg:DI 0 ax [orig:490 _404 ] [490])
                (mult:DI (reg:DI 0 ax [orig:489 _403 ] [489])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":183 349 {*muldi3_1}
     (nil))
(insn 1053 1052 1054 69 (parallel [
            (set (reg:DI 1 dx [orig:491 _405 ] [491])
                (plus:DI (reg:DI 1 dx [orig:488 _402 ] [488])
                    (reg:DI 0 ax [orig:490 _404 ] [490])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":183 222 {*adddi_1}
     (nil))
(insn 1054 1053 1055 69 (set (reg:SI 0 ax [865])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":183 86 {*movsi_internal}
     (nil))
(insn 1055 1054 1056 69 (set (reg:DI 0 ax [orig:492 _406 ] [492])
        (sign_extend:DI (reg:SI 0 ax [865]))) "BLOSFC2.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 1056 1055 1057 69 (parallel [
            (set (reg:DI 0 ax [orig:493 _407 ] [493])
                (plus:DI (reg:DI 0 ax [orig:492 _406 ] [492])
                    (reg:DI 1 dx [orig:491 _405 ] [491])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":183 222 {*adddi_1}
     (nil))
(insn 1057 1056 1058 69 (parallel [
            (set (reg:DI 1 dx [orig:494 _408 ] [494])
                (plus:DI (reg:DI 0 ax [orig:493 _407 ] [493])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":183 222 {*adddi_1}
     (nil))
(insn 1058 1057 1059 69 (set (reg/f:DI 0 ax [866])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":183 85 {*movdi_internal}
     (nil))
(insn 1059 1058 1060 69 (parallel [
            (set (reg:DI 1 dx [867])
                (plus:DI (reg:DI 1 dx [orig:494 _408 ] [494])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":183 222 {*adddi_1}
     (nil))
(insn 1060 1059 1061 69 (set (reg:SF 21 xmm0 [868])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [867])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [866])) [1 vrbls.t S4 A32])) "BLOSFC2.f":183 131 {*movsf_internal}
     (nil))
(insn 1061 1060 1062 69 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 tm+0 S4 A32])
        (reg:SF 21 xmm0 [868])) "BLOSFC2.f":183 131 {*movsf_internal}
     (nil))
(insn 1062 1061 1063 69 (set (reg:SF 21 xmm0 [870])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 tm+0 S4 A32])) "BLOSFC2.f":185 131 {*movsf_internal}
     (nil))
(insn 1063 1062 1064 69 (set (reg:SF 22 xmm1 [871])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":185 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73160003662109375e+2 [0x0.88947bp+9])
        (nil)))
(insn 1064 1063 1065 69 (set (reg:SF 21 xmm0 [869])
        (minus:SF (reg:SF 21 xmm0 [870])
            (reg:SF 22 xmm1 [871]))) "BLOSFC2.f":185 841 {*fop_sf_1}
     (nil))
(insn 1065 1064 1066 69 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32])
        (reg:SF 21 xmm0 [869])) "BLOSFC2.f":185 131 {*movsf_internal}
     (nil))
(insn 1066 1065 1067 69 (set (reg:SF 21 xmm0 [orig:562 M.0_495 ] [562])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32])) "BLOSFC2.f":186 131 {*movsf_internal}
     (nil))
(insn 1067 1066 1068 69 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:562 M.0_495 ] [562])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32]))) "BLOSFC2.f":186 53 {*cmpisf}
     (nil))
(insn 1068 1067 1069 69 (set (reg:QI 0 ax [872])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":186 678 {*setcc_qi}
     (nil))
(insn 1069 1068 1070 69 (set (reg:SI 1 dx [orig:495 _409 ] [495])
        (zero_extend:SI (reg:QI 0 ax [872]))) "BLOSFC2.f":186 140 {*zero_extendqisi2}
     (nil))
(insn 1070 1069 1071 69 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:562 M.0_495 ] [562])
                    (reg:SF 21 xmm0 [orig:562 M.0_495 ] [562]))
            ] UNSPEC_NOTRAP)) "BLOSFC2.f":186 54 {*cmpiusf}
     (nil))
(insn 1071 1070 1072 69 (set (reg:QI 0 ax [873])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":186 678 {*setcc_qi}
     (nil))
(insn 1072 1071 1073 69 (set (reg:SI 0 ax [orig:496 _410 ] [496])
        (zero_extend:SI (reg:QI 0 ax [873]))) "BLOSFC2.f":186 140 {*zero_extendqisi2}
     (nil))
(insn 1073 1072 1074 69 (parallel [
            (set (reg:SI 0 ax [orig:497 _411 ] [497])
                (ior:SI (reg:SI 0 ax [orig:496 _410 ] [496])
                    (reg:SI 1 dx [orig:495 _409 ] [495])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":186 450 {*iorsi_1}
     (nil))
(insn 1074 1073 1075 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:497 _411 ] [497])
            (const_int 0 [0]))) "BLOSFC2.f":186 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1075 1074 1076 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1078)
            (pc))) "BLOSFC2.f":186 682 {*jcc}
     (nil)
 -> 1078)
;;  succ:       70 (FALLTHRU)
;;              71
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 562 590

;; basic block 70, loop depth 0, maybe hot
;;  prev block 69, next block 71, flags: (RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 562
(note 1076 1075 1077 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 1077 1076 1078 70 (set (reg:SF 21 xmm0 [orig:562 M.0_495 ] [562])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":186 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -1.5e+1 [-0x0.fp+4])
        (nil)))
;;  succ:       71 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 562 590

;; basic block 71, loop depth 0, maybe hot
;;  prev block 70, next block 72, flags: (RTL, MODIFIED)
;;  pred:       69
;;              70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 562 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 562
;; lr  def 	 17 [flags] 874 875 876
(code_label 1078 1077 1079 71 49 (nil) [1 uses])
(note 1079 1078 1080 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 1080 1079 1081 71 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 tmt15+0 S4 A32])
        (reg:SF 21 xmm0 [orig:562 M.0_495 ] [562])) "BLOSFC2.f":186 131 {*movsf_internal}
     (nil))
(insn 1081 1080 1082 71 (set (reg:SF 21 xmm0 [874])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":187 131 {*movsf_internal}
     (nil))
(insn 1082 1081 1083 71 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 ai+0 S4 A32])
        (reg:SF 21 xmm0 [874])) "BLOSFC2.f":187 131 {*movsf_internal}
     (nil))
(insn 1083 1082 1084 71 (set (reg:SF 21 xmm0 [875])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":188 131 {*movsf_internal}
     (nil))
(insn 1084 1083 1085 71 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 bi+0 S4 A32])
        (reg:SF 21 xmm0 [875])) "BLOSFC2.f":188 131 {*movsf_internal}
     (nil))
(insn 1085 1084 1086 71 (set (reg:SF 21 xmm0 [876])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":189 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -2.0e+1 [-0x0.ap+5])
        (nil)))
(insn 1086 1085 1087 71 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [876])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32]))) "BLOSFC2.f":189 53 {*cmpisf}
     (nil))
(jump_insn 1087 1086 1091 71 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1096)
            (pc))) "BLOSFC2.f":189 682 {*jcc}
     (nil)
 -> 1096)
;;  succ:       72 (FALLTHRU)
;;              73
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

;; basic block 72, loop depth 0, maybe hot
;;  prev block 71, next block 73, flags: (RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 877 878
(note 1091 1087 1092 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 1092 1091 1093 72 (set (reg:SF 21 xmm0 [877])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":190 131 {*movsf_internal}
     (nil))
(insn 1093 1092 1094 72 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 ai+0 S4 A32])
        (reg:SF 21 xmm0 [877])) "BLOSFC2.f":190 131 {*movsf_internal}
     (nil))
(insn 1094 1093 1095 72 (set (reg:SF 21 xmm0 [878])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":191 131 {*movsf_internal}
     (nil))
(insn 1095 1094 1096 72 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 bi+0 S4 A32])
        (reg:SF 21 xmm0 [878])) "BLOSFC2.f":191 131 {*movsf_internal}
     (nil))
;;  succ:       73 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

;; basic block 73, loop depth 0, maybe hot
;;  prev block 72, next block 74, flags: (RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;;              71
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 498 499 500 501 502 503 504 505 506 507 508 563 879 880 881 882 883 884 885 886 887 888
(code_label 1096 1095 1097 73 50 (nil) [1 uses])
(note 1097 1096 1098 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1098 1097 1099 73 (set (reg:SF 21 xmm0 [879])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":193 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.799051513671875e+2 [0x0.bdf3dcp+9])
        (nil)))
(insn 1099 1098 1448 73 (set (reg:SF 21 xmm0 [879])
        (div:SF (reg:SF 21 xmm0 [879])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [1 pm+0 S4 A32]))) "BLOSFC2.f":193 841 {*fop_sf_1}
     (nil))
(insn 1448 1099 1452 73 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [12 %sfp+-84 S4 A32])
        (reg:SF 21 xmm0 [879])) "BLOSFC2.f":193 131 {*movsf_internal}
     (nil))
(note 1452 1448 1450 73 NOTE_INSN_DELETED)
(note 1450 1452 1100 73 NOTE_INSN_DELETED)
(insn 1100 1450 1101 73 (set (reg:SF 21 xmm0 [880])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 tm+0 S4 A32])) "BLOSFC2.f":193 131 {*movsf_internal}
     (nil))
(insn 1101 1100 1102 73 (set (reg:SF 22 xmm1 [881])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":193 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73160003662109375e+2 [0x0.88947bp+9])
        (nil)))
(insn 1102 1101 1103 73 (set (reg:SF 21 xmm0 [orig:499 _413 ] [499])
        (minus:SF (reg:SF 21 xmm0 [880])
            (reg:SF 22 xmm1 [881]))) "BLOSFC2.f":193 841 {*fop_sf_1}
     (nil))
(insn 1103 1102 1104 73 (set (reg:SF 22 xmm1 [orig:500 _414 ] [500])
        (reg:SF 21 xmm0 [orig:499 _413 ] [499])) "BLOSFC2.f":193 131 {*movsf_internal}
     (nil))
(insn 1104 1103 1105 73 (set (reg:SF 21 xmm0 [882])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":193 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.72693881988525390625e+1 [0x0.8a27b5p+5])
        (nil)))
(insn 1105 1104 1106 73 (set (reg:SF 21 xmm0 [orig:501 _415 ] [501])
        (mult:SF (reg:SF 21 xmm0 [882])
            (reg:SF 22 xmm1 [orig:500 _414 ] [500]))) "BLOSFC2.f":193 838 {*fop_sf_comm}
     (nil))
(insn 1106 1105 1107 73 (set (reg:SF 22 xmm1 [883])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 tm+0 S4 A32])) "BLOSFC2.f":193 131 {*movsf_internal}
     (nil))
(insn 1107 1106 1108 73 (set (reg:SF 23 xmm2 [884])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":193 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.58600006103515625e+1 [0x0.8f70a4p+6])
        (nil)))
(insn 1108 1107 1110 73 (set (reg:SF 22 xmm1 [orig:502 _416 ] [502])
        (minus:SF (reg:SF 22 xmm1 [883])
            (reg:SF 23 xmm2 [884]))) "BLOSFC2.f":193 841 {*fop_sf_1}
     (nil))
(insn 1110 1108 1112 73 (set (reg:SF 21 xmm0 [orig:504 _418 ] [504])
        (div:SF (reg:SF 21 xmm0 [orig:501 _415 ] [501])
            (reg:SF 22 xmm1 [orig:503 _417 ] [503]))) "BLOSFC2.f":193 841 {*fop_sf_1}
     (nil))
(call_insn/u 1112 1110 1449 73 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("expf") [flags 0x41]  <function_decl 0x7f0d48009300 __builtin_expf>) [0 __builtin_expf S1 A8])
            (const_int 0 [0]))) "BLOSFC2.f":193 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 1449 1112 1451 73 NOTE_INSN_DELETED)
(note 1451 1449 1114 73 NOTE_INSN_DELETED)
(insn 1114 1451 1115 73 (set (reg:SF 21 xmm0 [885])
        (mult:SF (reg:SF 21 xmm0 [orig:505 _419 ] [505])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -100 [0xffffffffffffff9c])) [12 %sfp+-84 S4 A32]))) "BLOSFC2.f":193 838 {*fop_sf_comm}
     (nil))
(insn 1115 1114 1116 73 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 qw+0 S4 A32])
        (reg:SF 21 xmm0 [885])) "BLOSFC2.f":193 131 {*movsf_internal}
     (nil))
(insn 1116 1115 1117 73 (set (reg:SF 21 xmm0 [orig:563 M.1_496 ] [563])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32])) "BLOSFC2.f":194 131 {*movsf_internal}
     (nil))
(insn 1117 1116 1118 73 (set (reg:SF 22 xmm1 [887])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":194 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1118 1117 1119 73 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:563 M.1_496 ] [563])
            (reg:SF 22 xmm1 [887]))) "BLOSFC2.f":194 53 {*cmpisf}
     (nil))
(insn 1119 1118 1120 73 (set (reg:QI 0 ax [886])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":194 678 {*setcc_qi}
     (nil))
(insn 1120 1119 1121 73 (set (reg:SI 1 dx [orig:506 _420 ] [506])
        (zero_extend:SI (reg:QI 0 ax [886]))) "BLOSFC2.f":194 140 {*zero_extendqisi2}
     (nil))
(insn 1121 1120 1122 73 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:563 M.1_496 ] [563])
                    (reg:SF 21 xmm0 [orig:563 M.1_496 ] [563]))
            ] UNSPEC_NOTRAP)) "BLOSFC2.f":194 54 {*cmpiusf}
     (nil))
(insn 1122 1121 1123 73 (set (reg:QI 0 ax [888])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":194 678 {*setcc_qi}
     (nil))
(insn 1123 1122 1124 73 (set (reg:SI 0 ax [orig:507 _421 ] [507])
        (zero_extend:SI (reg:QI 0 ax [888]))) "BLOSFC2.f":194 140 {*zero_extendqisi2}
     (nil))
(insn 1124 1123 1125 73 (parallel [
            (set (reg:SI 0 ax [orig:508 _422 ] [508])
                (ior:SI (reg:SI 0 ax [orig:507 _421 ] [507])
                    (reg:SI 1 dx [orig:506 _420 ] [506])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":194 450 {*iorsi_1}
     (nil))
(insn 1125 1124 1126 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:508 _422 ] [508])
            (const_int 0 [0]))) "BLOSFC2.f":194 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1126 1125 1127 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1129)
            (pc))) "BLOSFC2.f":194 682 {*jcc}
     (nil)
 -> 1129)
;;  succ:       74 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 563 590

;; basic block 74, loop depth 0, maybe hot
;;  prev block 73, next block 75, flags: (RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 563
(note 1127 1126 1128 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 1128 1127 1129 74 (set (reg:SF 21 xmm0 [orig:563 M.1_496 ] [563])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":194 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
;;  succ:       75 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 563 590

;; basic block 75, loop depth 0, maybe hot
;;  prev block 74, next block 76, flags: (RTL, MODIFIED)
;;  pred:       73
;;              74 (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 563 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 563
;; lr  def 	 17 [flags] 509 510 511 512 513 514 515 516 517 889 890 891 892 893 894 895 896 897 898
(code_label 1129 1128 1130 75 52 (nil) [1 uses])
(note 1130 1129 1131 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 1131 1130 1132 75 (set (reg:SF 21 xmm0 [orig:509 _423 ] [509])
        (mult:SF (reg:SF 21 xmm0 [orig:563 M.1_496 ] [563])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 ai+0 S4 A32]))) "BLOSFC2.f":194 838 {*fop_sf_comm}
     (nil))
(insn 1132 1131 1133 75 (set (reg:SF 21 xmm0 [orig:510 _424 ] [510])
        (plus:SF (reg:SF 21 xmm0 [orig:509 _423 ] [509])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 bi+0 S4 A32]))) "BLOSFC2.f":194 838 {*fop_sf_comm}
     (nil))
(insn 1133 1132 1134 75 (set (reg:SF 22 xmm1 [orig:511 _425 ] [511])
        (reg:SF 21 xmm0 [orig:510 _424 ] [510])) "BLOSFC2.f":194 131 {*movsf_internal}
     (nil))
(insn 1134 1133 1135 75 (set (reg:SF 21 xmm0 [890])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 qw+0 S4 A32])) "BLOSFC2.f":194 131 {*movsf_internal}
     (nil))
(insn 1135 1134 1136 75 (set (reg:SF 21 xmm0 [889])
        (mult:SF (reg:SF 21 xmm0 [890])
            (reg:SF 22 xmm1 [orig:511 _425 ] [511]))) "BLOSFC2.f":194 838 {*fop_sf_comm}
     (nil))
(insn 1136 1135 1137 75 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 qi+0 S4 A32])
        (reg:SF 21 xmm0 [889])) "BLOSFC2.f":194 131 {*movsf_internal}
     (nil))
(insn 1137 1136 1138 75 (set (reg:SF 22 xmm1 [891])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 tmt15+0 S4 A32])) "BLOSFC2.f":195 131 {*movsf_internal}
     (nil))
(insn 1138 1137 1139 75 (set (reg:SF 21 xmm0 [892])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC21") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":195 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.19999991916120052337646484375e-4 [0x0.a7c5acp-11])
        (nil)))
(insn 1139 1138 1140 75 (set (reg:SF 21 xmm0 [orig:512 _426 ] [512])
        (mult:SF (reg:SF 21 xmm0 [892])
            (reg:SF 22 xmm1 [891]))) "BLOSFC2.f":195 838 {*fop_sf_comm}
     (nil))
(insn 1140 1139 1141 75 (set (reg:SF 23 xmm2 [893])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 tmt15+0 S4 A32])) "BLOSFC2.f":195 131 {*movsf_internal}
     (nil))
(insn 1141 1140 1142 75 (set (reg:SF 22 xmm1 [894])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC22") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":195 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.5e+1 [0x0.fp+4])
        (nil)))
(insn 1142 1141 1144 75 (set (reg:SF 22 xmm1 [orig:513 _427 ] [513])
        (plus:SF (reg:SF 22 xmm1 [894])
            (reg:SF 23 xmm2 [893]))) "BLOSFC2.f":195 838 {*fop_sf_comm}
     (nil))
(insn 1144 1142 1145 75 (set (reg:SF 22 xmm1 [orig:515 _429 ] [515])
        (mult:SF (reg:SF 22 xmm1 [orig:514 _428 ] [514])
            (reg:SF 21 xmm0 [orig:512 _426 ] [512]))) "BLOSFC2.f":195 838 {*fop_sf_comm}
     (nil))
(insn 1145 1144 1146 75 (set (reg:SF 21 xmm0 [895])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":195 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1146 1145 1147 75 (set (reg:SF 21 xmm0 [orig:516 _430 ] [516])
        (minus:SF (reg:SF 21 xmm0 [895])
            (reg:SF 22 xmm1 [orig:515 _429 ] [515]))) "BLOSFC2.f":195 841 {*fop_sf_1}
     (nil))
(insn 1147 1146 1148 75 (set (reg:SF 22 xmm1 [orig:517 _431 ] [517])
        (reg:SF 21 xmm0 [orig:516 _430 ] [516])) "BLOSFC2.f":195 131 {*movsf_internal}
     (nil))
(insn 1148 1147 1149 75 (set (reg:SF 21 xmm0 [897])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 qw+0 S4 A32])) "BLOSFC2.f":195 131 {*movsf_internal}
     (nil))
(insn 1149 1148 1150 75 (set (reg:SF 21 xmm0 [896])
        (mult:SF (reg:SF 21 xmm0 [897])
            (reg:SF 22 xmm1 [orig:517 _431 ] [517]))) "BLOSFC2.f":195 838 {*fop_sf_comm}
     (nil))
(insn 1150 1149 1151 75 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 qint+0 S4 A32])
        (reg:SF 21 xmm0 [896])) "BLOSFC2.f":195 131 {*movsf_internal}
     (nil))
(insn 1151 1150 1152 75 (set (reg:SF 21 xmm0 [898])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":196 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -1.5e+1 [-0x0.fp+4])
        (nil)))
(insn 1152 1151 1153 75 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [898])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32]))) "BLOSFC2.f":196 53 {*cmpisf}
     (nil))
(jump_insn 1153 1152 1157 75 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1383)
            (pc))) "BLOSFC2.f":196 682 {*jcc}
     (nil)
 -> 1383)
;;  succ:       76 (FALLTHRU)
;;              77
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

;; basic block 76, loop depth 0, maybe hot
;;  prev block 75, next block 77, flags: (RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 899
(note 1157 1153 1158 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 1158 1157 1159 76 (set (reg:SF 21 xmm0 [899])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 qi+0 S4 A32])) "BLOSFC2.f":197 131 {*movsf_internal}
     (nil))
(insn 1159 1158 1384 76 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qs+0 S4 A32])
        (reg:SF 21 xmm0 [899])) "BLOSFC2.f":197 131 {*movsf_internal}
     (nil))
(jump_insn 1384 1159 1385 76 (set (pc)
        (label_ref 1202)) 683 {jump}
     (nil)
 -> 1202)
;;  succ:       82 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

(barrier 1385 1384 1383)
;; basic block 77, loop depth 0, maybe hot
;;  prev block 76, next block 78, flags: (RTL, MODIFIED)
;;  pred:       75
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 900 901
(code_label 1383 1385 1163 77 81 (nil) [1 uses])
(note 1163 1383 1164 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 1164 1163 1165 77 (set (reg:SF 21 xmm0 [900])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 tmt0+0 S4 A32])) "BLOSFC2.f":198 131 {*movsf_internal}
     (nil))
(insn 1165 1164 1166 77 (set (reg:SF 22 xmm1 [901])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":198 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1166 1165 1167 77 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [900])
            (reg:SF 22 xmm1 [901]))) "BLOSFC2.f":198 53 {*cmpisf}
     (nil))
(jump_insn 1167 1166 1171 77 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1386)
            (pc))) "BLOSFC2.f":198 682 {*jcc}
     (nil)
 -> 1386)
;;  succ:       78 (FALLTHRU)
;;              79
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

;; basic block 78, loop depth 0, maybe hot
;;  prev block 77, next block 79, flags: (RTL, MODIFIED)
;;  pred:       77 (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 902
(note 1171 1167 1172 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1172 1171 1173 78 (set (reg:SF 21 xmm0 [902])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 qint+0 S4 A32])) "BLOSFC2.f":199 131 {*movsf_internal}
     (nil))
(insn 1173 1172 1387 78 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qs+0 S4 A32])
        (reg:SF 21 xmm0 [902])) "BLOSFC2.f":199 131 {*movsf_internal}
     (nil))
(jump_insn 1387 1173 1388 78 (set (pc)
        (label_ref 1202)) 683 {jump}
     (nil)
 -> 1202)
;;  succ:       82 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

(barrier 1388 1387 1386)
;; basic block 79, loop depth 0, maybe hot
;;  prev block 78, next block 80, flags: (RTL, MODIFIED)
;;  pred:       77
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 518 519 520 521 522 523 903 904 905 906
(code_label 1386 1388 1177 79 82 (nil) [1 uses])
(note 1177 1386 1178 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 1178 1177 1179 79 (set (reg:SI 0 ax [903])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":201 86 {*movsi_internal}
     (nil))
(insn 1179 1178 1180 79 (set (reg:DI 0 ax [orig:518 _432 ] [518])
        (sign_extend:DI (reg:SI 0 ax [903]))) "BLOSFC2.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1180 1179 1181 79 (parallel [
            (set (reg:DI 1 dx [orig:519 _433 ] [519])
                (mult:DI (reg:DI 0 ax [orig:518 _432 ] [518])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":201 349 {*muldi3_1}
     (nil))
(insn 1181 1180 1182 79 (set (reg:SI 0 ax [904])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":201 86 {*movsi_internal}
     (nil))
(insn 1182 1181 1183 79 (set (reg:DI 0 ax [orig:520 _434 ] [520])
        (sign_extend:DI (reg:SI 0 ax [904]))) "BLOSFC2.f":201 149 {*extendsidi2_rex64}
     (nil))
(insn 1183 1182 1184 79 (parallel [
            (set (reg:DI 0 ax [orig:521 _435 ] [521])
                (plus:DI (reg:DI 0 ax [orig:520 _434 ] [520])
                    (reg:DI 1 dx [orig:519 _433 ] [519])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":201 222 {*adddi_1}
     (nil))
(insn 1184 1183 1185 79 (parallel [
            (set (reg:DI 1 dx [orig:522 _436 ] [522])
                (plus:DI (reg:DI 0 ax [orig:521 _435 ] [521])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":201 222 {*adddi_1}
     (nil))
(insn 1185 1184 1186 79 (set (reg/f:DI 0 ax [905])
        (symbol_ref:DI ("iceb.4082") [flags 0x202]  <var_decl 0x7f0d481b06c0 iceb>)) "BLOSFC2.f":201 85 {*movdi_internal}
     (nil))
(insn 1186 1185 1187 79 (set (reg:SF 21 xmm0 [orig:523 _437 ] [523])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:522 _436 ] [522])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [905])) [1 iceb S4 A32])) "BLOSFC2.f":201 131 {*movsf_internal}
     (nil))
(insn 1187 1186 1188 79 (set (reg:SF 22 xmm1 [906])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":201 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1188 1187 1189 79 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:523 _437 ] [523])
            (reg:SF 22 xmm1 [906]))) "BLOSFC2.f":201 53 {*cmpisf}
     (nil))
(jump_insn 1189 1188 1193 79 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1389)
            (pc))) "BLOSFC2.f":201 682 {*jcc}
     (nil)
 -> 1389)
;;  succ:       80 (FALLTHRU)
;;              81
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

;; basic block 80, loop depth 0, maybe hot
;;  prev block 79, next block 81, flags: (RTL, MODIFIED)
;;  pred:       79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 907
(note 1193 1189 1194 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1194 1193 1195 80 (set (reg:SF 21 xmm0 [907])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 qi+0 S4 A32])) "BLOSFC2.f":202 131 {*movsf_internal}
     (nil))
(insn 1195 1194 1390 80 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qs+0 S4 A32])
        (reg:SF 21 xmm0 [907])) "BLOSFC2.f":202 131 {*movsf_internal}
     (nil))
(jump_insn 1390 1195 1391 80 (set (pc)
        (label_ref 1202)) 683 {jump}
     (nil)
 -> 1202)
;;  succ:       82 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

(barrier 1391 1390 1389)
;; basic block 81, loop depth 0, maybe hot
;;  prev block 80, next block 82, flags: (RTL, MODIFIED)
;;  pred:       79
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 908
(code_label 1389 1391 1199 81 83 (nil) [1 uses])
(note 1199 1389 1200 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1200 1199 1201 81 (set (reg:SF 21 xmm0 [908])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 qint+0 S4 A32])) "BLOSFC2.f":204 131 {*movsf_internal}
     (nil))
(insn 1201 1200 1202 81 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qs+0 S4 A32])
        (reg:SF 21 xmm0 [908])) "BLOSFC2.f":204 131 {*movsf_internal}
     (nil))
;;  succ:       82 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

;; basic block 82, loop depth 0, maybe hot
;;  prev block 81, next block 83, flags: (RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
;;              76 [always] 
;;              78 [always] 
;;              80 [always] 
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 564 593 909 910 911 912 913 914 915 916 917 918 919 920 921 922 923 924
(code_label 1202 1201 1203 82 55 (nil) [3 uses])
(note 1203 1202 1204 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1204 1203 1205 82 (set (reg:SF 21 xmm0 [909])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 qw+0 S4 A32])) "BLOSFC2.f":209 131 {*movsf_internal}
     (nil))
(insn 1205 1204 1206 82 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 qs+0 S4 A32])
        (reg:SF 21 xmm0 [909])) "BLOSFC2.f":209 131 {*movsf_internal}
     (nil))
(insn 1206 1205 1207 82 (set (reg:SI 0 ax [910])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":213 86 {*movsi_internal}
     (nil))
(insn 1207 1206 1208 82 (set (reg:DI 0 ax [orig:524 _438 ] [524])
        (sign_extend:DI (reg:SI 0 ax [910]))) "BLOSFC2.f":213 149 {*extendsidi2_rex64}
     (nil))
(insn 1208 1207 1209 82 (parallel [
            (set (reg:DI 1 dx [orig:525 _439 ] [525])
                (mult:DI (reg:DI 0 ax [orig:524 _438 ] [524])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":213 349 {*muldi3_1}
     (nil))
(insn 1209 1208 1210 82 (set (reg:SI 0 ax [911])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":213 86 {*movsi_internal}
     (nil))
(insn 1210 1209 1211 82 (set (reg:DI 0 ax [orig:526 _440 ] [526])
        (sign_extend:DI (reg:SI 0 ax [911]))) "BLOSFC2.f":213 149 {*extendsidi2_rex64}
     (nil))
(insn 1211 1210 1212 82 (parallel [
            (set (reg:DI 0 ax [orig:527 _441 ] [527])
                (plus:DI (reg:DI 0 ax [orig:526 _440 ] [526])
                    (reg:DI 1 dx [orig:525 _439 ] [525])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":213 222 {*adddi_1}
     (nil))
(insn 1212 1211 1213 82 (parallel [
            (set (reg:DI 1 dx [orig:528 _442 ] [528])
                (plus:DI (reg:DI 0 ax [orig:527 _441 ] [527])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":213 222 {*adddi_1}
     (nil))
(insn 1213 1212 1214 82 (set (reg/f:DI 0 ax [912])
        (symbol_ref:DI ("rhbnd.4103") [flags 0x202]  <var_decl 0x7f0d481b3000 rhbnd>)) "BLOSFC2.f":213 85 {*movdi_internal}
     (nil))
(insn 1214 1213 1215 82 (set (reg:SF 21 xmm0 [orig:529 _443 ] [529])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:528 _442 ] [528])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [912])) [1 rhbnd S4 A32])) "BLOSFC2.f":213 131 {*movsf_internal}
     (nil))
(insn 1215 1214 1216 82 (set (reg:SI 0 ax [913])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":213 86 {*movsi_internal}
     (nil))
(insn 1216 1215 1217 82 (set (reg:DI 0 ax [orig:530 _444 ] [530])
        (sign_extend:DI (reg:SI 0 ax [913]))) "BLOSFC2.f":213 149 {*extendsidi2_rex64}
     (nil))
(insn 1217 1216 1218 82 (parallel [
            (set (reg:DI 1 dx [orig:531 _445 ] [531])
                (mult:DI (reg:DI 0 ax [orig:530 _444 ] [530])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":213 349 {*muldi3_1}
     (nil))
(insn 1218 1217 1219 82 (set (reg:SI 0 ax [914])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":213 86 {*movsi_internal}
     (nil))
(insn 1219 1218 1220 82 (set (reg:DI 0 ax [orig:532 _446 ] [532])
        (sign_extend:DI (reg:SI 0 ax [914]))) "BLOSFC2.f":213 149 {*extendsidi2_rex64}
     (nil))
(insn 1220 1219 1221 82 (parallel [
            (set (reg:DI 0 ax [orig:533 _447 ] [533])
                (mult:DI (reg:DI 0 ax [orig:532 _446 ] [532])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":213 349 {*muldi3_1}
     (nil))
(insn 1221 1220 1222 82 (parallel [
            (set (reg:DI 1 dx [orig:534 _448 ] [534])
                (plus:DI (reg:DI 1 dx [orig:531 _445 ] [531])
                    (reg:DI 0 ax [orig:533 _447 ] [533])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":213 222 {*adddi_1}
     (nil))
(insn 1222 1221 1223 82 (set (reg:SI 0 ax [915])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":213 86 {*movsi_internal}
     (nil))
(insn 1223 1222 1224 82 (set (reg:DI 0 ax [orig:535 _449 ] [535])
        (sign_extend:DI (reg:SI 0 ax [915]))) "BLOSFC2.f":213 149 {*extendsidi2_rex64}
     (nil))
(insn 1224 1223 1225 82 (parallel [
            (set (reg:DI 0 ax [orig:536 _450 ] [536])
                (plus:DI (reg:DI 0 ax [orig:535 _449 ] [535])
                    (reg:DI 1 dx [orig:534 _448 ] [534])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":213 222 {*adddi_1}
     (nil))
(insn 1225 1224 1226 82 (parallel [
            (set (reg:DI 1 dx [orig:537 _451 ] [537])
                (plus:DI (reg:DI 0 ax [orig:536 _450 ] [536])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":213 222 {*adddi_1}
     (nil))
(insn 1226 1225 1227 82 (set (reg:SF 21 xmm0 [orig:538 _452 ] [538])
        (mult:SF (reg:SF 21 xmm0 [orig:529 _443 ] [529])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -96 [0xffffffffffffffa0])) [1 qs+0 S4 A32]))) "BLOSFC2.f":213 838 {*fop_sf_comm}
     (nil))
(insn 1227 1226 1228 82 (set (reg/f:DI 0 ax [916])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":213 85 {*movdi_internal}
     (nil))
(insn 1228 1227 1229 82 (parallel [
            (set (reg:DI 1 dx [917])
                (plus:DI (reg:DI 1 dx [orig:537 _451 ] [537])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":213 222 {*adddi_1}
     (nil))
(insn 1229 1228 1230 82 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [917])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [916])) [1 vrbls.q S4 A32])
        (reg:SF 21 xmm0 [orig:538 _452 ] [538])) "BLOSFC2.f":213 131 {*movsf_internal}
     (nil))
(insn 1230 1229 1231 82 (set (reg:SF 21 xmm0 [orig:564 M.2_497 ] [564])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC23") [flags 0x2]) [0  S4 A32])) "BLOSFC2.f":214 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.999999960041972002500187954865396022796630859375e-13 [0x0.8cbcccp-39])
        (nil)))
(insn 1231 1230 1232 82 (set (reg:SI 0 ax [918])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":214 86 {*movsi_internal}
     (nil))
(insn 1232 1231 1233 82 (set (reg:DI 0 ax [orig:539 _453 ] [539])
        (sign_extend:DI (reg:SI 0 ax [918]))) "BLOSFC2.f":214 149 {*extendsidi2_rex64}
     (nil))
(insn 1233 1232 1234 82 (parallel [
            (set (reg:DI 1 dx [orig:540 _454 ] [540])
                (mult:DI (reg:DI 0 ax [orig:539 _453 ] [539])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":214 349 {*muldi3_1}
     (nil))
(insn 1234 1233 1235 82 (set (reg:SI 0 ax [919])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":214 86 {*movsi_internal}
     (nil))
(insn 1235 1234 1236 82 (set (reg:DI 0 ax [orig:541 _455 ] [541])
        (sign_extend:DI (reg:SI 0 ax [919]))) "BLOSFC2.f":214 149 {*extendsidi2_rex64}
     (nil))
(insn 1236 1235 1237 82 (parallel [
            (set (reg:DI 0 ax [orig:542 _456 ] [542])
                (mult:DI (reg:DI 0 ax [orig:541 _455 ] [541])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":214 349 {*muldi3_1}
     (nil))
(insn 1237 1236 1238 82 (parallel [
            (set (reg:DI 1 dx [orig:543 _457 ] [543])
                (plus:DI (reg:DI 1 dx [orig:540 _454 ] [540])
                    (reg:DI 0 ax [orig:542 _456 ] [542])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":214 222 {*adddi_1}
     (nil))
(insn 1238 1237 1239 82 (set (reg:SI 0 ax [920])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":214 86 {*movsi_internal}
     (nil))
(insn 1239 1238 1240 82 (set (reg:DI 0 ax [orig:544 _458 ] [544])
        (sign_extend:DI (reg:SI 0 ax [920]))) "BLOSFC2.f":214 149 {*extendsidi2_rex64}
     (nil))
(insn 1240 1239 1241 82 (parallel [
            (set (reg:DI 0 ax [orig:545 _459 ] [545])
                (plus:DI (reg:DI 0 ax [orig:544 _458 ] [544])
                    (reg:DI 1 dx [orig:543 _457 ] [543])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":214 222 {*adddi_1}
     (nil))
(insn 1241 1240 1242 82 (parallel [
            (set (reg:DI 1 dx [orig:546 _460 ] [546])
                (plus:DI (reg:DI 0 ax [orig:545 _459 ] [545])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":214 222 {*adddi_1}
     (nil))
(insn 1242 1241 1243 82 (set (reg/f:DI 0 ax [921])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":214 85 {*movdi_internal}
     (nil))
(insn 1243 1242 1244 82 (parallel [
            (set (reg:DI 1 dx [922])
                (plus:DI (reg:DI 1 dx [orig:546 _460 ] [546])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":214 222 {*adddi_1}
     (nil))
(insn 1244 1243 1245 82 (set (reg:SF 22 xmm1 [orig:593 _643 ] [593])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [922])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [921])) [1 vrbls.q S4 A32])) "BLOSFC2.f":214 131 {*movsf_internal}
     (nil))
(insn 1245 1244 1246 82 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 22 xmm1 [orig:593 _643 ] [593])
            (reg:SF 21 xmm0 [orig:564 M.2_497 ] [564]))) "BLOSFC2.f":214 53 {*cmpisf}
     (nil))
(insn 1246 1245 1247 82 (set (reg:QI 0 ax [923])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":214 678 {*setcc_qi}
     (nil))
(insn 1247 1246 1248 82 (set (reg:SI 1 dx [orig:547 _461 ] [547])
        (zero_extend:SI (reg:QI 0 ax [923]))) "BLOSFC2.f":214 140 {*zero_extendqisi2}
     (nil))
(insn 1248 1247 1249 82 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:564 M.2_497 ] [564])
                    (reg:SF 21 xmm0 [orig:564 M.2_497 ] [564]))
            ] UNSPEC_NOTRAP)) "BLOSFC2.f":214 54 {*cmpiusf}
     (nil))
(insn 1249 1248 1250 82 (set (reg:QI 0 ax [924])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "BLOSFC2.f":214 678 {*setcc_qi}
     (nil))
(insn 1250 1249 1251 82 (set (reg:SI 0 ax [orig:548 _462 ] [548])
        (zero_extend:SI (reg:QI 0 ax [924]))) "BLOSFC2.f":214 140 {*zero_extendqisi2}
     (nil))
(insn 1251 1250 1252 82 (parallel [
            (set (reg:SI 0 ax [orig:549 _463 ] [549])
                (ior:SI (reg:SI 0 ax [orig:548 _462 ] [548])
                    (reg:SI 1 dx [orig:547 _461 ] [547])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":214 450 {*iorsi_1}
     (nil))
(insn 1252 1251 1253 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:549 _463 ] [549])
            (const_int 0 [0]))) "BLOSFC2.f":214 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1253 1252 1254 82 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1255)
            (pc))) "BLOSFC2.f":214 682 {*jcc}
     (nil)
 -> 1255)
;;  succ:       83 (FALLTHRU)
;;              84
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 564 590 593

;; basic block 83, loop depth 0, maybe hot
;;  prev block 82, next block 84, flags: (RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590 593
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 593
;; lr  def 	 564
(note 1254 1253 3 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 3 1254 1255 83 (set (reg:SF 21 xmm0 [orig:564 M.2_497 ] [564])
        (reg:SF 22 xmm1 [orig:593 _643 ] [593])) "BLOSFC2.f":214 131 {*movsf_internal}
     (nil))
;;  succ:       84 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 564 590

;; basic block 84, loop depth 0, maybe hot
;;  prev block 83, next block 85, flags: (RTL, MODIFIED)
;;  pred:       82
;;              83 (FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 564 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 564
;; lr  def 	 17 [flags] 550 551 552 553 554 555 556 557 925 926 927 928 929
(code_label 1255 3 1256 84 60 (nil) [1 uses])
(note 1256 1255 1257 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 1257 1256 1258 84 (set (reg:SI 0 ax [925])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":214 86 {*movsi_internal}
     (nil))
(insn 1258 1257 1259 84 (set (reg:DI 0 ax [orig:550 _464 ] [550])
        (sign_extend:DI (reg:SI 0 ax [925]))) "BLOSFC2.f":214 149 {*extendsidi2_rex64}
     (nil))
(insn 1259 1258 1260 84 (parallel [
            (set (reg:DI 1 dx [orig:551 _465 ] [551])
                (mult:DI (reg:DI 0 ax [orig:550 _464 ] [550])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":214 349 {*muldi3_1}
     (nil))
(insn 1260 1259 1261 84 (set (reg:SI 0 ax [926])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])) "BLOSFC2.f":214 86 {*movsi_internal}
     (nil))
(insn 1261 1260 1262 84 (set (reg:DI 0 ax [orig:552 _466 ] [552])
        (sign_extend:DI (reg:SI 0 ax [926]))) "BLOSFC2.f":214 149 {*extendsidi2_rex64}
     (nil))
(insn 1262 1261 1263 84 (parallel [
            (set (reg:DI 0 ax [orig:553 _467 ] [553])
                (mult:DI (reg:DI 0 ax [orig:552 _466 ] [552])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":214 349 {*muldi3_1}
     (nil))
(insn 1263 1262 1264 84 (parallel [
            (set (reg:DI 1 dx [orig:554 _468 ] [554])
                (plus:DI (reg:DI 1 dx [orig:551 _465 ] [551])
                    (reg:DI 0 ax [orig:553 _467 ] [553])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":214 222 {*adddi_1}
     (nil))
(insn 1264 1263 1265 84 (set (reg:SI 0 ax [927])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])) "BLOSFC2.f":214 86 {*movsi_internal}
     (nil))
(insn 1265 1264 1266 84 (set (reg:DI 0 ax [orig:555 _469 ] [555])
        (sign_extend:DI (reg:SI 0 ax [927]))) "BLOSFC2.f":214 149 {*extendsidi2_rex64}
     (nil))
(insn 1266 1265 1267 84 (parallel [
            (set (reg:DI 0 ax [orig:556 _470 ] [556])
                (plus:DI (reg:DI 0 ax [orig:555 _469 ] [555])
                    (reg:DI 1 dx [orig:554 _468 ] [554])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":214 222 {*adddi_1}
     (nil))
(insn 1267 1266 1268 84 (parallel [
            (set (reg:DI 1 dx [orig:557 _471 ] [557])
                (plus:DI (reg:DI 0 ax [orig:556 _470 ] [556])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":214 222 {*adddi_1}
     (nil))
(insn 1268 1267 1269 84 (set (reg/f:DI 0 ax [928])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":214 85 {*movdi_internal}
     (nil))
(insn 1269 1268 1270 84 (parallel [
            (set (reg:DI 1 dx [929])
                (plus:DI (reg:DI 1 dx [orig:557 _471 ] [557])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":214 222 {*adddi_1}
     (nil))
(insn 1270 1269 1271 84 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [929])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [928])) [1 vrbls.q S4 A32])
        (reg:SF 21 xmm0 [orig:564 M.2_497 ] [564])) "BLOSFC2.f":214 131 {*movsf_internal}
     (nil))
;;  succ:       85 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

;; basic block 85, loop depth 0, maybe hot
;;  prev block 84, next block 104, flags: (RTL, MODIFIED)
;;  pred:       68
;;              84 (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1271 1270 1272 85 48 (nil) [1 uses])
(note 1272 1271 1273 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 1273 1272 1392 85 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":179 221 {*addsi_1}
     (nil))
(jump_insn 1392 1273 1393 85 (set (pc)
        (label_ref 1274)) "BLOSFC2.f":179 683 {jump}
     (nil)
 -> 1274)
;;  succ:       67 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

(barrier 1393 1392 1444)
;; basic block 104, loop depth 0, maybe hot
;;  prev block 85, next block 86, flags: (RTL, MODIFIED)
;;  pred:       67
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1444 1393 1443 104 99 (nil) [1 uses])
(note 1443 1444 1445 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 1445 1443 1277 104 (const_int 0 [0]) "BLOSFC2.f":181 718 {nop}
     (nil))
;;  succ:       86 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

;; basic block 86, loop depth 0, maybe hot
;;  prev block 104, next block 103, flags: (RTL, MODIFIED)
;;  pred:       104 [always]  (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1277 1445 1278 86 47 (nil) [0 uses])
(note 1278 1277 1279 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 1279 1278 1394 86 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":178 221 {*addsi_1}
     (nil))
(jump_insn 1394 1279 1395 86 (set (pc)
        (label_ref 1280)) "BLOSFC2.f":178 683 {jump}
     (nil)
 -> 1280)
;;  succ:       65 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 590

(barrier 1395 1394 1441)
;; basic block 103, loop depth 0, maybe hot
;;  prev block 86, next block 87, flags: (RTL, MODIFIED)
;;  pred:       65
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1441 1395 1440 103 98 (nil) [1 uses])
(note 1440 1441 1442 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 1442 1440 1283 103 (const_int 0 [0]) "BLOSFC2.f":179 718 {nop}
     (nil))
;;  succ:       87 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 87, loop depth 0, maybe hot
;;  prev block 103, next block 102, flags: (RTL, MODIFIED)
;;  pred:       103 [always]  (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 558 559 560 561 930 931 932 933
(code_label 1283 1442 1284 87 46 (nil) [0 uses])
(note 1284 1283 1285 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 1285 1284 1286 87 (set (reg:SI 0 ax [930])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])) "BLOSFC2.f":218 86 {*movsi_internal}
     (nil))
(insn 1286 1285 1287 87 (set (reg:DI 0 ax [orig:558 _472 ] [558])
        (sign_extend:DI (reg:SI 0 ax [930]))) "BLOSFC2.f":218 149 {*extendsidi2_rex64}
     (nil))
(insn 1287 1286 1288 87 (parallel [
            (set (reg:DI 0 ax [orig:559 _473 ] [559])
                (plus:DI (reg:DI 0 ax [orig:558 _472 ] [558])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":218 222 {*adddi_1}
     (nil))
(insn 1288 1287 1289 87 (parallel [
            (set (reg:DI 0 ax [orig:560 _474 ] [560])
                (mult:DI (reg:DI 0 ax [orig:559 _473 ] [559])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":218 349 {*muldi3_1}
     (nil))
(insn 1289 1288 1290 87 (parallel [
            (set (reg:DI 0 ax [931])
                (plus:DI (reg:DI 0 ax [orig:560 _474 ] [560])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":218 222 {*adddi_1}
     (nil))
(insn 1290 1289 1291 87 (parallel [
            (set (reg:DI 1 dx [932])
                (ashift:DI (reg:DI 0 ax [931])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":218 551 {*ashldi3_1}
     (nil))
(insn 1291 1290 1292 87 (set (reg:DI 0 ax [933])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0d481b0000 vrbls>)) "BLOSFC2.f":218 85 {*movdi_internal}
     (nil))
(insn 1292 1291 1293 87 (parallel [
            (set (reg/f:DI 0 ax [orig:561 _475 ] [561])
                (plus:DI (reg:DI 0 ax [933])
                    (reg:DI 1 dx [932])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":218 222 {*adddi_1}
     (nil))
(insn 1293 1292 1294 87 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:561 _475 ] [561])) "BLOSFC2.f":218 85 {*movdi_internal}
     (nil))
(insn 1294 1293 1295 87 (set (reg:QI 0 ax)
        (const_int 0 [0])) "BLOSFC2.f":218 88 {*movqi_internal}
     (nil))
(call_insn 1295 1294 1296 87 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7f0d48191600 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "BLOSFC2.f":218 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 1296 1295 1396 87 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "BLOSFC2.f":177 221 {*addsi_1}
     (nil))
(jump_insn 1396 1296 1397 87 (set (pc)
        (label_ref 1297)) "BLOSFC2.f":177 683 {jump}
     (nil)
 -> 1297)
;;  succ:       63 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1397 1396 1438)
;; basic block 102, loop depth 0, maybe hot
;;  prev block 87, next block 88, flags: (RTL, MODIFIED)
;;  pred:       63
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1438 1397 1437 102 97 (nil) [1 uses])
(note 1437 1438 1439 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 1439 1437 1300 102 (const_int 0 [0]) "BLOSFC2.f":218 718 {nop}
     (nil))
;;  succ:       88 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 88, loop depth 0, maybe hot
;;  prev block 102, next block 1, flags: (RTL, MODIFIED)
;;  pred:       102 [always]  (FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1300 1439 1301 88 45 (nil) [0 uses])
(note 1301 1300 1344 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 1344 1301 1446 88 (const_int 0 [0]) "BLOSFC2.f":223 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 1446 1344 0 NOTE_INSN_DELETED)
