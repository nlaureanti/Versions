
;; Function calcape (calcape_, funcdef_no=0, decl_uid=3774, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=240, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=208, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 14:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 19:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 22:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 32:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 34:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 35
	 Choosing alt 0 in insn 35:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 36:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 37:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 38:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 39:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 41:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 44:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 45
	 Choosing alt 0 in insn 45:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 46:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 47:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 48:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 49:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 52:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 54:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 55
	 Choosing alt 0 in insn 55:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 56:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 57:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 58:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 61:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 63:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 64
	 Choosing alt 0 in insn 64:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 65:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 66:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 67:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 68:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 70:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 71:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 73:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 74
	 Choosing alt 0 in insn 74:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 75:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 76:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 77:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 78:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 84:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 90:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 100:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 108:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 117:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 118:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 120:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 121:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 125
	 Choosing alt 0 in insn 125:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 126:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 127:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 128:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 129:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 130:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 136:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 142:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 148:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 153:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 155:  (0) r  (1) i {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 156:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 157:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 159:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 161:  (0) r  (1) i {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 162:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 163:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 165:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 167:  (0) r  (1) i {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 168:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 169:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 171:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 172:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 173:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 174:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 175:  (0) r  (1) Z {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 177:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) rBwBz {*call}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 181:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 185:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 189:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 200:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 208:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 210:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 211:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 213:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 218:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 221
	 Choosing alt 0 in insn 221:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 222:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 223:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 224:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 225:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 226:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 229:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 230:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 231:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 232:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 234:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 235:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 237:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 238
	 Choosing alt 0 in insn 238:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 239:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 240:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 241:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 242:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 243:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 244:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 245:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 246
	 Choosing alt 1 in insn 246:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 247:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 248:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 250:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 251:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 252:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 253:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 255:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 256:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 258:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 259
	 Choosing alt 0 in insn 259:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 260:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 261:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 262:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 263:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 264:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 265:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 266:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 267
	 Choosing alt 1 in insn 267:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 268:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 269:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) rm  (1) re {*cmpsi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 274:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 275:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 276:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 277:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 280:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 281:  (0) v  (1) vm {*cmpisf}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 285:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 286:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 290:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 291:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 292:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 295:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 296:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 299
	 Choosing alt 0 in insn 299:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 300:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 301:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 302:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 303:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 304:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 305:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 306:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 307:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 308:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 310:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 311:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 312:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 313:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 314
	 Choosing alt 0 in insn 314:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 315:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 316:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 317:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 318:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 319:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 320:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 321:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 322:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 325
	 Choosing alt 0 in insn 325:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 326:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 327:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 328:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 329:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 330:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 331:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 332:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 333:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 334:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 335:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 336:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 337:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 338:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 339
	 Choosing alt 1 in insn 339:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 341:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 342:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=616,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=625,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=621,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=630,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 344:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 346:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 347:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 348:  (0) ?m  (1) rF {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 353:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 354:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 355:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 356:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 357:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 358
	 Choosing alt 0 in insn 358:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 359:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 360:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 361:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 362:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 363:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 364:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 365:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 366:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 367:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 368
	 Choosing alt 0 in insn 368:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 369:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 370:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 371:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 372:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 373:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 374:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 375:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 376:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 377:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 378
	 Choosing alt 0 in insn 378:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 379:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 380:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 381:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 382:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 383:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 384:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=616,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=625,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=621,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=630,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 386:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 388:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 389:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 390:  (0) ?m  (1) rF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 393:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 394:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 395:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 396:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 397:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 398:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 399:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 401:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 402:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 403
	 Choosing alt 1 in insn 403:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 404:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 405:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 406:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 408:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 409:  (0) =v  (1) vm {*vec_extractv4sf_0}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 410:  (0) =x  (1) %0  (2) x {*andsf3}
      Creating newreg=1225 from oldreg=859, assigning class SSE_REGS to r1225
  410: r1225:SF=r1225:SF&r861:SF
    Inserting insn reload before:
 2057: r1225:SF=r858:SF
    Inserting insn reload after:
 2058: r859:SF=r1225:SF

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 411:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 413:  (0) =r  (1) v {fix_truncsfsi_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 414:  (0) v  (1) r {*floatsisf2_mixed}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 415:  (0) =x  (1) 0  (2) x {*andnotsf3}
      Creating newreg=1226 from oldreg=861, assigning class SSE_REGS to r1226
  415: r1226:SF=~r1226:SF&r856:SF
      REG_DEAD r861:SF
      REG_DEAD r856:SF
    Inserting insn reload before:
 2059: r1226:SF=r861:SF
    Inserting insn reload after:
 2060: r863:SF=r1226:SF

          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
	 Choosing alt 0 in insn 416:  (0) =x  (1) %0  (2) x {*iorsf3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 419:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 420:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 421:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 422:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 423:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 424
	 Choosing alt 0 in insn 424:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 425:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 426:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 427:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 428:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 429:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 430:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 431:  (0) =r  (1) v {fix_truncsfsi_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 432:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 433:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 434:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 437:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 438:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 439:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 440:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 441:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 442:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 443
	 Choosing alt 0 in insn 443:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 444:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 445:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 446:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 447:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 450:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 453:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 454:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 455:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 456:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 457:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 458:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 459
	 Choosing alt 0 in insn 459:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 460:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 461:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 462:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 463:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 466:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 467:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 468:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 469:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 470:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 471:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 472:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 473:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 474:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 475:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 476:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 477:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 478:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 479:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 480:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 481:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 482:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 483:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 484:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 485:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 486:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 487:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 488:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 489:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 490:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 491:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 492:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 493:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 494:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 495:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 496:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 497:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 499:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 500:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 501:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 502:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 503:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 504
	 Choosing alt 0 in insn 504:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 505:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 506:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 507:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 508
	 Choosing alt 1 in insn 508:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 509:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 510
	 Choosing alt 1 in insn 510:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 511:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 512:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 513:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 515:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 516:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 517:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 518:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 519:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 520
	 Choosing alt 0 in insn 520:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 521:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 522:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 523:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 524
	 Choosing alt 1 in insn 524:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 525:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 526
	 Choosing alt 1 in insn 526:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 527:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 528:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 529:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 531:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1227 from oldreg=249, assigning class SSE_REGS to r1227
  531: r1227:SF=r1227:SF/[frame:DI-0x70]
      REG_DEAD r249:SF
    Inserting insn reload before:
 2061: r1227:SF=r249:SF
    Inserting insn reload after:
 2062: r250:SF=r1227:SF

            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 532:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 533:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 534
	 Choosing alt 1 in insn 534:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 535:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 536:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 537:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 539:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 540:  (0) =v  (1) vm {*vec_extractv4sf_0}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 541:  (0) =x  (1) %0  (2) x {*andsf3}
      Creating newreg=1228 from oldreg=912, assigning class SSE_REGS to r1228
  541: r1228:SF=r1228:SF&r914:SF
    Inserting insn reload before:
 2063: r1228:SF=r911:SF
    Inserting insn reload after:
 2064: r912:SF=r1228:SF

          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 542:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 544:  (0) =r  (1) v {fix_truncsfsi_sse}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 545:  (0) v  (1) r {*floatsisf2_mixed}
          alt=0,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 546:  (0) =x  (1) 0  (2) x {*andnotsf3}
      Creating newreg=1229 from oldreg=914, assigning class SSE_REGS to r1229
  546: r1229:SF=~r1229:SF&r909:SF
      REG_DEAD r914:SF
      REG_DEAD r909:SF
    Inserting insn reload before:
 2065: r1229:SF=r914:SF
    Inserting insn reload after:
 2066: r916:SF=r1229:SF

          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
	 Choosing alt 0 in insn 547:  (0) =x  (1) %0  (2) x {*iorsf3}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 550:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 551:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 552:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 553:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 554:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 555
	 Choosing alt 0 in insn 555:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 556:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 557:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 558:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 559:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 560:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 561:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 562:  (0) =r  (1) v {fix_truncsfsi_sse}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 563:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 564:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 565:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 568:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 569:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 570:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 571:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 572:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 573:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 574
	 Choosing alt 0 in insn 574:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 575:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 576:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 577:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 578:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 581:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 584:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 585:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 586:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 587:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 588:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 589:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 590
	 Choosing alt 0 in insn 590:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 591:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 592:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 593:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 594:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 597:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 598:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 599:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 600:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 602:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 603:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 604:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 605:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 606:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 609:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 610:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 611
	 Choosing alt 0 in insn 611:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 612:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 613:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 614:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 615:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 616:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 617:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 618:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 620:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 621:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 622:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 623:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 624:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 627:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 628:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 629:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 630
	 Choosing alt 0 in insn 630:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 631:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 632:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 633:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 634:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 635:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 636:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 637:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 638:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 640:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 641:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 642:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 643:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 644:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 647:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 648:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 649
	 Choosing alt 0 in insn 649:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 650:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 651:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 652:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 653:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 654:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 655:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 656:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=15,losers=1,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 657:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 659:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 660:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 661:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 662:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 663:  (0) =rm  (1) 0  (2) cJ {*ashldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 666:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 667:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 668:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 669
	 Choosing alt 0 in insn 669:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 670:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 671:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 672:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 673:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 674:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 675:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 676:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 678:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 679:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 680:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 681:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 682:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 683
	 Choosing alt 0 in insn 683:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 684:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 685:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 686:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 687
	 Choosing alt 1 in insn 687:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 688:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1230 from oldreg=302, assigning class SSE_REGS to r1230
  688: r1230:SF=r1230:SF+[frame:DI-0x7c]
      REG_DEAD r302:SF
    Inserting insn reload before:
 2067: r1230:SF=r302:SF
    Inserting insn reload after:
 2068: r303:SF=r1230:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 689:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 690:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 692:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 693:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 694:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 695:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 696:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 697
	 Choosing alt 0 in insn 697:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 698:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 699:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 700:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 701
	 Choosing alt 1 in insn 701:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 702:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 703:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 704:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 705:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 706:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 708:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 709:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 710:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 711:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 712:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 713
	 Choosing alt 0 in insn 713:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 714:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 715:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 716:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 717:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 718:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 719:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 720:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 721:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 722:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 723
	 Choosing alt 0 in insn 723:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 724:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 725:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 726:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 727
	 Choosing alt 1 in insn 727:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 728
	 Choosing alt 1 in insn 728:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 729:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 730:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 731:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=616,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=625,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=621,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=630,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 733:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 735:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 736:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 737:  (0) ?m  (1) rF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 738:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 739:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 740
	 Choosing alt 1 in insn 740:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 741:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 742:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 744:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 746:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 747:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 748:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 749:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 750:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 751:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 752:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 753:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 754
	 Choosing alt 0 in insn 754:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 755:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 756:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 757:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 758:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 759:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 765:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 766:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 767:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 768:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 769:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 770
	 Choosing alt 0 in insn 770:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 771:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 772:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 773:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 774:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 775:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 776:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 777:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 778:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 779:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 780
	 Choosing alt 0 in insn 780:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 781:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 782:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 783:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 784:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 787:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 793:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 799:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 805:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 807:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 808:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 809:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 810:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 813:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 814:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 815:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 817:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 818:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 819:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 820:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 823:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 825:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 826:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 827:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 828:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 831:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 832:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 833:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 834:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 835:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 836:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 837:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 838:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 839:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 840:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 841:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 842
	 Choosing alt 0 in insn 842:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 843:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 844:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 845:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 846:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 847:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 848:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 849:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 850
	 Choosing alt 1 in insn 850:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 851:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 852:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 853:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 854:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 855:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 856:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 857
	 Choosing alt 0 in insn 857:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 858:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 859:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 860:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 861:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 867:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 868:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 869:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 870:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 871:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 872
	 Choosing alt 0 in insn 872:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 873:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 874:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 875:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 876:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 877:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 880:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 886:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 892:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 898:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 899:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 900:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 902:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 903:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 904:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 905:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 908:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 910:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 911:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 912:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 913:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 916:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 917:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 918:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 919:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 920:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 921
	 Choosing alt 0 in insn 921:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 922:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 923:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 924:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 925:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 926:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 927:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 928:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 929:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 930
	 Choosing alt 0 in insn 930:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 931:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 932:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 933:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 934:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 935:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 938:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 939:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 940:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 941:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 942:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 943
	 Choosing alt 0 in insn 943:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 944:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 945:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 946:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 947:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 948:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 949:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 950
	 Choosing alt 0 in insn 950:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 951:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 952:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 953:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 954:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 955:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 956:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 959:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 965:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 971:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 973:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 974:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 975:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 976:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 979:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 980:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 981:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 982:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 983:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 985:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 986:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 987:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 988:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 991:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 993:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 994:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 995:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 996:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 999:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1000:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1001:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1002:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1003:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1004
	 Choosing alt 0 in insn 1004:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1005:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1006:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1007:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1008:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1009:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1010:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1011:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1012:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1013
	 Choosing alt 0 in insn 1013:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1014:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1015:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1016:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1017:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1018:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1019:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1020:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1021:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1022:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1023:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1024:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1025:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1026:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1027:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1028
	 Choosing alt 0 in insn 1028:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1029:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1030:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1031:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1032:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1033:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1034:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1035:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1036
	 Choosing alt 1 in insn 1036:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1037:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1038:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1039:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1040:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1041:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1042:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1043
	 Choosing alt 0 in insn 1043:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1044:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1045:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1046:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1047:  (0) rm  (1) re {*cmpsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1050:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1051:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1052:  (0) v  (1) vm {*cmpisf}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1058:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1059:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1060:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1061:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1062:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1063:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1064
	 Choosing alt 0 in insn 1064:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1065:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1066:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1067:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1072:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1073:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1074:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1075:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1076:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1077:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1078
	 Choosing alt 0 in insn 1078:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1079:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1080:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1081:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1086:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1092:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1098:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1101:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1102:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1103:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1104:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1105:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1106:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1107:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1108:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1109:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1110:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1111:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1112:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1113:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1114:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1115:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1116:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1117:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1118:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1119:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1120:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1121:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1122
	 Choosing alt 0 in insn 1122:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1123:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1124:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
      Creating newreg=1231, assigning class GENERAL_REGS to r1231
 1124: [--sp:DI]=r1231:DI
      REG_ARGS_SIZE 0x10
    Inserting insn reload before:
 2069: r1231:DI=`ithtb.4159'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2069:  (0) r  (1) i {*movdi_internal} (sp_off=-8)
      Change to class INDEX_REGS for r1231
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1125:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-16)
      Creating newreg=1232, assigning class GENERAL_REGS to r1232
 1125: [--sp:DI]=r1232:DI
      REG_ARGS_SIZE 0x18
    Inserting insn reload before:
 2070: r1232:DI=`iptb.4155'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2070:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
      Change to class INDEX_REGS for r1232
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1126:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-24)
      Creating newreg=1233, assigning class GENERAL_REGS to r1233
 1126: [--sp:DI]=r1233:DI
      REG_ARGS_SIZE 0x20
    Inserting insn reload before:
 2071: r1233:DI=`thesp.4194'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2071:  (0) r  (1) i {*movdi_internal} (sp_off=-24)
      Change to class INDEX_REGS for r1233
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1127:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-32)
      Creating newreg=1234, assigning class GENERAL_REGS to r1234
 1127: [--sp:DI]=r1234:DI
      REG_ARGS_SIZE 0x28
    Inserting insn reload before:
 2072: r1234:DI=const(`phys_'+0x44)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2072:  (0) r  (1) i {*movdi_internal} (sp_off=-32)
      Change to class INDEX_REGS for r1234
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1128:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-40)
      Creating newreg=1235, assigning class GENERAL_REGS to r1235
 1128: [--sp:DI]=r1235:DI
      REG_ARGS_SIZE 0x30
    Inserting insn reload before:
 2073: r1235:DI=const(`phys_'+0x780)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2073:  (0) r  (1) i {*movdi_internal} (sp_off=-40)
      Change to class INDEX_REGS for r1235
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1129:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-48)
      Creating newreg=1236, assigning class GENERAL_REGS to r1236
 1129: [--sp:DI]=r1236:DI
      REG_ARGS_SIZE 0x38
    Inserting insn reload before:
 2074: r1236:DI=const(`phys_'+0x650)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2074:  (0) r  (1) i {*movdi_internal} (sp_off=-48)
      Change to class INDEX_REGS for r1236
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1130:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-56)
      Creating newreg=1237, assigning class GENERAL_REGS to r1237
 1130: [--sp:DI]=r1237:DI
      REG_ARGS_SIZE 0x40
    Inserting insn reload before:
 2075: r1237:DI=const(`phys_'+0x40)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2075:  (0) r  (1) i {*movdi_internal} (sp_off=-56)
      Change to class INDEX_REGS for r1237
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1131:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-64)
      Creating newreg=1238, assigning class GENERAL_REGS to r1238
 1131: [--sp:DI]=r1238:DI
      REG_ARGS_SIZE 0x48
    Inserting insn reload before:
 2076: r1238:DI=`pp.4181'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2076:  (0) r  (1) i {*movdi_internal} (sp_off=-64)
      Change to class INDEX_REGS for r1238
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1132:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-72)
      Creating newreg=1239, assigning class GENERAL_REGS to r1239
 1132: [--sp:DI]=r1239:DI
      REG_ARGS_SIZE 0x50
    Inserting insn reload before:
 2077: r1239:DI=`qq.4188'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2077:  (0) r  (1) i {*movdi_internal} (sp_off=-72)
      Change to class INDEX_REGS for r1239
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1133:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-80)
      Creating newreg=1240, assigning class GENERAL_REGS to r1240
 1133: [--sp:DI]=r1240:DI
      REG_ARGS_SIZE 0x58
    Inserting insn reload before:
 2078: r1240:DI=const(`phys_'+0x30)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2078:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
      Change to class INDEX_REGS for r1240
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1134:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-88)
      Creating newreg=1241, assigning class GENERAL_REGS to r1241
 1134: [--sp:DI]=r1241:DI
      REG_ARGS_SIZE 0x60
    Inserting insn reload before:
 2079: r1241:DI=const(`phys_'+0x4)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2079:  (0) r  (1) i {*movdi_internal} (sp_off=-88)
      Change to class INDEX_REGS for r1241
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1135:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-96)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1136:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-104)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1137:  (0) r  (1) i {*movdi_internal} (sp_off=-112)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1138:  (0) r  (1) i {*movdi_internal} (sp_off=-112)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1139:  (0) r  (1) Z {*movdi_internal} (sp_off=-112)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1140:  (0) r  (1) Z {*movdi_internal} (sp_off=-112)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1141:  (0) r  (1) i {*movdi_internal} (sp_off=-112)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1143:  (0) q  (1) n {*movqi_internal} (sp_off=-112)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1144:  (0) rBwBz {*call} (sp_off=-112)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1145:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-112)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1148:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1151:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1152:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1153:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1154:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1155:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1156:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1157:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1158:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1159:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1160:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1161:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1162:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1163:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1164:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1165:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1166:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1167:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1168:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1169:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1170:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1171:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1172
	 Choosing alt 0 in insn 1172:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1173:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1174:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
      Creating newreg=1242, assigning class GENERAL_REGS to r1242
 1174: [--sp:DI]=r1242:DI
      REG_ARGS_SIZE 0x10
    Inserting insn reload before:
 2080: r1242:DI=`ithtb.4159'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2080:  (0) r  (1) i {*movdi_internal} (sp_off=-8)
      Change to class INDEX_REGS for r1242
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1175:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-16)
      Creating newreg=1243, assigning class GENERAL_REGS to r1243
 1175: [--sp:DI]=r1243:DI
      REG_ARGS_SIZE 0x18
    Inserting insn reload before:
 2081: r1243:DI=`iptb.4155'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2081:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
      Change to class INDEX_REGS for r1243
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1176:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-24)
      Creating newreg=1244, assigning class GENERAL_REGS to r1244
 1176: [--sp:DI]=r1244:DI
      REG_ARGS_SIZE 0x20
    Inserting insn reload before:
 2082: r1244:DI=`thesp.4194'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2082:  (0) r  (1) i {*movdi_internal} (sp_off=-24)
      Change to class INDEX_REGS for r1244
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1177:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-32)
      Creating newreg=1245, assigning class GENERAL_REGS to r1245
 1177: [--sp:DI]=r1245:DI
      REG_ARGS_SIZE 0x28
    Inserting insn reload before:
 2083: r1245:DI=const(`phys_'+0x50)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2083:  (0) r  (1) i {*movdi_internal} (sp_off=-32)
      Change to class INDEX_REGS for r1245
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1178:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-40)
      Creating newreg=1246, assigning class GENERAL_REGS to r1246
 1178: [--sp:DI]=r1246:DI
      REG_ARGS_SIZE 0x30
    Inserting insn reload before:
 2084: r1246:DI=const(`phys_'+0xb10)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2084:  (0) r  (1) i {*movdi_internal} (sp_off=-40)
      Change to class INDEX_REGS for r1246
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1179:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-48)
      Creating newreg=1247, assigning class GENERAL_REGS to r1247
 1179: [--sp:DI]=r1247:DI
      REG_ARGS_SIZE 0x38
    Inserting insn reload before:
 2085: r1247:DI=const(`phys_'+0x8b0)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2085:  (0) r  (1) i {*movdi_internal} (sp_off=-48)
      Change to class INDEX_REGS for r1247
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1180:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-56)
      Creating newreg=1248, assigning class GENERAL_REGS to r1248
 1180: [--sp:DI]=r1248:DI
      REG_ARGS_SIZE 0x40
    Inserting insn reload before:
 2086: r1248:DI=const(`phys_'+0x4c)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2086:  (0) r  (1) i {*movdi_internal} (sp_off=-56)
      Change to class INDEX_REGS for r1248
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1181:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-64)
      Creating newreg=1249, assigning class GENERAL_REGS to r1249
 1181: [--sp:DI]=r1249:DI
      REG_ARGS_SIZE 0x48
    Inserting insn reload before:
 2087: r1249:DI=`pp.4181'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2087:  (0) r  (1) i {*movdi_internal} (sp_off=-64)
      Change to class INDEX_REGS for r1249
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1182:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-72)
      Creating newreg=1250, assigning class GENERAL_REGS to r1250
 1182: [--sp:DI]=r1250:DI
      REG_ARGS_SIZE 0x50
    Inserting insn reload before:
 2088: r1250:DI=`qq.4188'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2088:  (0) r  (1) i {*movdi_internal} (sp_off=-72)
      Change to class INDEX_REGS for r1250
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1183:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-80)
      Creating newreg=1251, assigning class GENERAL_REGS to r1251
 1183: [--sp:DI]=r1251:DI
      REG_ARGS_SIZE 0x58
    Inserting insn reload before:
 2089: r1251:DI=const(`phys_'+0x48)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2089:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
      Change to class INDEX_REGS for r1251
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 1184:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-88)
      Creating newreg=1252, assigning class GENERAL_REGS to r1252
 1184: [--sp:DI]=r1252:DI
      REG_ARGS_SIZE 0x60
    Inserting insn reload before:
 2090: r1252:DI=const(`phys_'+0x4)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 2090:  (0) r  (1) i {*movdi_internal} (sp_off=-88)
      Change to class INDEX_REGS for r1252
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1185:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-96)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1186:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-104)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1187:  (0) r  (1) i {*movdi_internal} (sp_off=-112)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1188:  (0) r  (1) i {*movdi_internal} (sp_off=-112)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1189:  (0) r  (1) Z {*movdi_internal} (sp_off=-112)
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1190:  (0) r  (1) Z {*movdi_internal} (sp_off=-112)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1191:  (0) r  (1) i {*movdi_internal} (sp_off=-112)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1193:  (0) q  (1) n {*movqi_internal} (sp_off=-112)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1194:  (0) rBwBz {*call} (sp_off=-112)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1195:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-112)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1198:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1199:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1200:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1202:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1203:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1204:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1205:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1208:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1210:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1211:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1212:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1213:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1216:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1217:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1218:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1219:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1220:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1221
	 Choosing alt 0 in insn 1221:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1222:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1223:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1224:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1225:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1228:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1229:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1230:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1231:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1232:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1233:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1234:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1235:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1236:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1237
	 Choosing alt 0 in insn 1237:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1238:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1239:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1240:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1241:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1242:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1243:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1244:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1245:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1246:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1247:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1248:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1249:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1250
	 Choosing alt 0 in insn 1250:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1251:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1252:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1253:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1254:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1255:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1261:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1262:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1263:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1264:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1265:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1266
	 Choosing alt 0 in insn 1266:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1267:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1268:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1269:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1270:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1273:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1279:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1285:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1286:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1287:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1289:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1290:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1291:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1292:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1295:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1297:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1298:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1299:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1300:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1303:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1304:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1305:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1306:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1307:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1308
	 Choosing alt 0 in insn 1308:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1309:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1310:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1311:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1312:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1315:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1316:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1317:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1318:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1319:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1320:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1321:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1322:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1323:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1324
	 Choosing alt 0 in insn 1324:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1325:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1326:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1327:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1328:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1329:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1330:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1331:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1332:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1333:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1334:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1335:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1336:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1337
	 Choosing alt 0 in insn 1337:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1338:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1339:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1340:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1341:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1342:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1348:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1349:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1350:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1351:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1352:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1353
	 Choosing alt 0 in insn 1353:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1354:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1355:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1356:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1357:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1360:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1366:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1372:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1378:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1379:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1380:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1381:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1382:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1384:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1385:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1386:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1387:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1390:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1392:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1393:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1394:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1395:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1398:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1399:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1400:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1401:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1402:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1403
	 Choosing alt 0 in insn 1403:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1404:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1405:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1406:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1407:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1410:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1413:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1414:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1415:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1416:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1417:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1418:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1419
	 Choosing alt 0 in insn 1419:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1420:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1421:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1422:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1423:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1426:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1429:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1430:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1436:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1442:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1443:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1444:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1446:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1447:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1448:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1449:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1452:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1453:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1454:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1456:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1457:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1458:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1459:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1462:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1464:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1465:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1466:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1467:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1470:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1471:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1472:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1473:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1474:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1475
	 Choosing alt 0 in insn 1475:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1476:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1477:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1478:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1479:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1480:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1481:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1482:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1483:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1484
	 Choosing alt 0 in insn 1484:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1485:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1486:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1487:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1488:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1491:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1492:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1493:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1494:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1495:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1496
	 Choosing alt 0 in insn 1496:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1497:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1498:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1499:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1500:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1503:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1504:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1505:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1506:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1507:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1508
	 Choosing alt 0 in insn 1508:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1509:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1510:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1511:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1514:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1520:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1526:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1527:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1528:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1530:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1531:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1532:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1533:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1536:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1538:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1539:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1540:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1541:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1544:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1545:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1546:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1547:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1548:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1549
	 Choosing alt 0 in insn 1549:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1550:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1551:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1552:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1553:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1556:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1557:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1558:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1559:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1560:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1561:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1562:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1563:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1564:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1565:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1566:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1567
	 Choosing alt 0 in insn 1567:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1568:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1569:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1570:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1571:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1572:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1573:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1574:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1575
	 Choosing alt 1 in insn 1575:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1576:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1577:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1578:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1579:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1580:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1581:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1582:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1583:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1584:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1585:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1586
	 Choosing alt 0 in insn 1586:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1587:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1588:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1589:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1590:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1591:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1592:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1593:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1594:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1595:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1596:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1597:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1598:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1599:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1600
	 Choosing alt 0 in insn 1600:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1601:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1602:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1603:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1604:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1605:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1606:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1607:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1608
	 Choosing alt 1 in insn 1608:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1610
	 Choosing alt 1 in insn 1610:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1611:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1612:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1613:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1614:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1615:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1616:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1617:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1618
	 Choosing alt 0 in insn 1618:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1619:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1620:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1621:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1622:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1623:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1624:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1625:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1626:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1627:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1628:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1629:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1630
	 Choosing alt 1 in insn 1630:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1631:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1632:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1633:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1634:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1636:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1637:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1638:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1639:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1640:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1641:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1642:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1643:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1644:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1645
	 Choosing alt 0 in insn 1645:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1646:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1647:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=611,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=616,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=9,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=10: Bad operand -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=12,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=1211,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=14,overall=1207,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=15: Bad operand -- refuse
	 Choosing alt 7 in insn 1648:  (0) v  (1) m {*movsf_internal}
      Creating newreg=1253 from oldreg=609, assigning class ALL_SSE_REGS to r1253
 1648: r1253:SF=[r608:DI*0x4+r1177:DI]
      REG_DEAD r1177:DI
      REG_DEAD r608:DI
    Inserting insn reload after:
 2091: r609:SF=r1253:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2091:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=616,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=625,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=621,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=630,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1649:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1651:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1653
	 Choosing alt 1 in insn 1653:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1254 from oldreg=609, assigning class SSE_REGS to r1254
      Making reload reg 1254 for reg 609 optional
 1653: r1178:SF=r610:SF*r1254:SF
      REG_DEAD r610:SF
      REG_DEAD r609:SF
    Inserting insn reload before:
 2092: r1254:SF=r609:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2092:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1654:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1655:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1656:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1658:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1659:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1660:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1661:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1662:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1663:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1664:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1665:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1666:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1667
	 Choosing alt 0 in insn 1667:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1668:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1669:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1670:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=611,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=616,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=9,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=10: Bad operand -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=12,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=1211,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=14,overall=1207,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=15: Bad operand -- refuse
	 Choosing alt 7 in insn 1671:  (0) v  (1) m {*movsf_internal}
      Creating newreg=1255 from oldreg=620, assigning class ALL_SSE_REGS to r1255
 1671: r1255:SF=[r1184:DI*0x4+r1183:DI]
      REG_DEAD r1184:DI
      REG_DEAD r1183:DI
    Inserting insn reload after:
 2093: r620:SF=r1255:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2093:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=616,losers=2,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=625,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=621,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non-pseudo reload: reject+=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=630,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1672:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1674:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1676
	 Choosing alt 1 in insn 1676:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1256 from oldreg=620, assigning class SSE_REGS to r1256
      Making reload reg 1256 for reg 620 optional
 1676: r1185:SF=r621:SF*r1256:SF
      REG_DEAD r621:SF
      REG_DEAD r620:SF
    Inserting insn reload before:
 2094: r1256:SF=r620:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2094:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1677:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1678:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1679:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1685:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1686:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1687:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1688:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1689:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1690
	 Choosing alt 0 in insn 1690:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1691:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1692:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=611,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=616,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=9,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=10: Bad operand -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=12,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=1211,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=14,overall=1207,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=15: Bad operand -- refuse
	 Choosing alt 7 in insn 1693:  (0) v  (1) m {*movsf_internal}
      Creating newreg=1257 from oldreg=627, assigning class ALL_SSE_REGS to r1257
 1693: r1257:SF=[r626:DI*0x4+r1189:DI]
      REG_DEAD r1189:DI
      REG_DEAD r626:DI
    Inserting insn reload after:
 2095: r627:SF=r1257:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2095:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1694:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1696:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1223,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            alt=3,overall=1221,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=4,overall=615,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1697:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1698:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1700:  (1) rBwBz {*call_value}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 1702:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1258 from oldreg=628, assigning class SSE_REGS to r1258
 1702: r1258:SF=r1258:SF-r629:SF
      REG_DEAD r629:SF
      REG_DEAD r628:SF
    Inserting insn reload before:
 2096: r1258:SF=r628:SF
    Inserting insn reload after:
 2097: r630:SF=r1258:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2096:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1704:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1705
	 Choosing alt 1 in insn 1705:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1706:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1707:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1708:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1709:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1710:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1711:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1712
	 Choosing alt 0 in insn 1712:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1713:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1714
	 Choosing alt 1 in insn 1714:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1259 from oldreg=627, assigning class SSE_REGS to r1259
      Making reload reg 1259 for reg 627 optional
 1714: r639:SF=r633:SF+r1259:SF
      REG_DEAD r633:SF
      REG_DEAD r627:SF
    Inserting insn reload before:
 2098: r1259:SF=r627:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2098:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1715:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1716:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1721:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1722:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1728:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1729:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1730:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1731:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1732:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1733
	 Choosing alt 0 in insn 1733:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1734:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1735:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=611,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=616,losers=1 -- refuse
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=6,overall=16,losers=2,rld_nregs=2
            0 Non input pseudo reload: reject++
          alt=7,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=8,overall=10,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=9,overall=613,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=10: Bad operand -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=11,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=12,overall=1208,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=13,overall=1211,losers=1 -- refuse
            Staticly defined alt reject+=600
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=14,overall=1207,losers=1 -- refuse
            Staticly defined alt reject+=600
            alt=15: Bad operand -- refuse
	 Choosing alt 7 in insn 1736:  (0) v  (1) m {*movsf_internal}
      Creating newreg=1260 from oldreg=645, assigning class ALL_SSE_REGS to r1260
 1736: r1260:SF=[r644:DI*0x4+r1199:DI]
      REG_DEAD r1199:DI
      REG_DEAD r644:DI
    Inserting insn reload after:
 2099: r645:SF=r1260:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2099:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1737:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1739:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1223,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=616,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            alt=3,overall=1221,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=4,overall=615,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=8,overall=1,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1740:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1741:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1743:  (1) rBwBz {*call_value}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 1745:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=1261 from oldreg=646, assigning class SSE_REGS to r1261
 1745: r1261:SF=r1261:SF-r647:SF
      REG_DEAD r647:SF
      REG_DEAD r646:SF
    Inserting insn reload before:
 2100: r1261:SF=r646:SF
    Inserting insn reload after:
 2101: r648:SF=r1261:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2100:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1747:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1748
	 Choosing alt 1 in insn 1748:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1749:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1750:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1751:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1752:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1753:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1754:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1755
	 Choosing alt 0 in insn 1755:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1756:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1757
	 Choosing alt 1 in insn 1757:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1262 from oldreg=645, assigning class SSE_REGS to r1262
      Making reload reg 1262 for reg 645 optional
 1757: r657:SF=r651:SF+r1262:SF
      REG_DEAD r651:SF
      REG_DEAD r645:SF
    Inserting insn reload before:
 2102: r1262:SF=r645:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2102:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1758:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1759:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1762:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1768:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1774:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1780:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1781:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1782:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1784:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1785:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1786:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1787:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1790:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1792:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1793:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1794:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1795:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1798:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1799:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1800:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1801:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1802:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1803:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1804
	 Choosing alt 0 in insn 1804:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1805:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1806:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1807:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1808:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1809:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1810:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1811:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1812:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1813:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1814
	 Choosing alt 0 in insn 1814:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1815:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1820:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1821:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1822:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1823:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1824:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1825
	 Choosing alt 0 in insn 1825:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1826:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1827:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1828:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1829:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1830:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1831:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1832:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1833:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1834
	 Choosing alt 0 in insn 1834:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1835:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1836:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1837:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1838:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1839:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1840:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1841:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1842:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1843:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1844:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1845
	 Choosing alt 0 in insn 1845:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1846:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1849:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1852:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1853:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1854:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1855:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1856:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1857
	 Choosing alt 0 in insn 1857:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1858:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1859:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1860:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1861:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1867:  (0) rm  (1) 0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 149
EBB 7
EBB 148
EBB 8
EBB 9 10
EBB 11 12
EBB 13 14
EBB 152
EBB 15
EBB 151
EBB 16
EBB 150
EBB 17 18
EBB 19
EBB 20 21 22
EBB 23
EBB 24 25
EBB 26 27 28 29
EBB 30 31
EBB 32
EBB 33 34
EBB 35 36
EBB 37 38
EBB 39 40
EBB 41 42
EBB 43 44
EBB 45 46
EBB 47
EBB 155
EBB 48
EBB 154
EBB 49
EBB 153
EBB 50
EBB 51 52
EBB 53 54
EBB 55 56 57
EBB 58
EBB 158
EBB 59
EBB 157
EBB 60
EBB 156
EBB 61
EBB 62 63
EBB 64 65 66
EBB 67
EBB 160
EBB 68
EBB 159
EBB 69
EBB 70 71
EBB 72 73
EBB 74 75 76 77
EBB 78
EBB 79
EBB 163
EBB 80
EBB 162
EBB 81 82
EBB 83 84
EBB 85
EBB 86 87
EBB 88 89 90 91
EBB 92
EBB 165
EBB 93
EBB 164
EBB 94
EBB 95 96
EBB 97 98 99 100
EBB 101
EBB 167
EBB 102
EBB 166
EBB 103
EBB 161
EBB 104
EBB 105 106
EBB 107 108 109
EBB 110 111
EBB 112
EBB 169
EBB 113
EBB 168
EBB 114
EBB 115 116
EBB 117 118
EBB 119 120 121 122
EBB 123
EBB 172
EBB 124
EBB 171
EBB 125
EBB 126 127
EBB 128 129 130 131
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1263 from oldreg=628, assigning class SSE_REGS to inheritance r1263
    Original reg change 628->1263 (bb131):
 1697: r1263:SF=xmm0:SF
      REG_DEAD xmm0:SF
    Add original<-inheritance after:
 2103: r628:SF=r1263:SF

    Inheritance reuse change 628->1263 (bb131):
 2096: r1258:SF=r1263:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=1264 from oldreg=627, assigning class ALL_SSE_REGS to inheritance r1264
    Original reg change 627->1264 (bb131):
 2095: r1264:SF=r1257:SF
    Add original<-inheritance after:
 2104: r627:SF=r1264:SF

    Inheritance reuse change 627->1264 (bb131):
 2098: r1259:SF=r1264:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=1265 from oldreg=620, assigning class ALL_SSE_REGS to inheritance r1265
    Original reg change 620->1265 (bb130):
 2093: r1265:SF=r1255:SF
    Add original<-inheritance after:
 2105: r620:SF=r1265:SF

    Inheritance reuse change 620->1265 (bb130):
 2094: r1256:SF=r1265:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=1266 from oldreg=609, assigning class ALL_SSE_REGS to inheritance r1266
    Original reg change 609->1266 (bb130):
 2091: r1266:SF=r1253:SF
    Add original<-inheritance after:
 2106: r609:SF=r1266:SF

    Inheritance reuse change 609->1266 (bb130):
 2092: r1254:SF=r1266:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  2103: r628:SF=r1263:SF
deleting insn with uid = 2103.
	    Removing dead insn:
  2104: r627:SF=r1264:SF
deleting insn with uid = 2104.
	    Removing dead insn:
  2105: r620:SF=r1265:SF
deleting insn with uid = 2105.
	    Removing dead insn:
  2106: r609:SF=r1266:SF
deleting insn with uid = 2106.
EBB 132 133
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1267 from oldreg=646, assigning class SSE_REGS to inheritance r1267
    Original reg change 646->1267 (bb133):
 1740: r1267:SF=xmm0:SF
      REG_DEAD xmm0:SF
    Add original<-inheritance after:
 2107: r646:SF=r1267:SF

    Inheritance reuse change 646->1267 (bb133):
 2100: r1261:SF=r1267:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=1268 from oldreg=645, assigning class ALL_SSE_REGS to inheritance r1268
    Original reg change 645->1268 (bb133):
 2099: r1268:SF=r1260:SF
    Add original<-inheritance after:
 2108: r645:SF=r1268:SF

    Inheritance reuse change 645->1268 (bb133):
 2102: r1262:SF=r1268:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  2107: r646:SF=r1267:SF
deleting insn with uid = 2107.
	    Removing dead insn:
  2108: r645:SF=r1268:SF
deleting insn with uid = 2108.
EBB 134
EBB 174
EBB 135
EBB 173
EBB 136
EBB 170
EBB 137
EBB 138 139
EBB 140 141 142
EBB 143 144
EBB 145
EBB 176
EBB 146
EBB 175
EBB 147

********** Pseudo live ranges #1: **********

  BB 147
   Insn 1902: point = 0, n_alt = -1
  BB 175
   Insn 2052: point = 0, n_alt = -1
  BB 138
   Insn 1788: point = 0, n_alt = -1
   Insn 1787: point = 0, n_alt = 0
   Insn 1786: point = 1, n_alt = 0
   Insn 1785: point = 3, n_alt = 0
   Insn 1784: point = 4, n_alt = 0
  BB 146
   Insn 1967: point = 5, n_alt = -1
   Insn 1867: point = 5, n_alt = 1
  BB 176
   Insn 2055: point = 6, n_alt = -1
  BB 140
   Insn 1796: point = 7, n_alt = -1
   Insn 1795: point = 7, n_alt = 0
   Insn 1794: point = 8, n_alt = 0
   Insn 1793: point = 10, n_alt = 0
   Insn 1792: point = 11, n_alt = 0
  BB 145
   Insn 1965: point = 12, n_alt = -1
   Insn 1861: point = 12, n_alt = 1
   Insn 1860: point = 12, n_alt = 8
   Insn 1859: point = 13, n_alt = 3
   Insn 1858: point = 14, n_alt = 3
   Insn 1857: point = 16, n_alt = 0
   Insn 1856: point = 18, n_alt = 1
   Insn 1855: point = 20, n_alt = 0
   Insn 1854: point = 21, n_alt = 0
   Insn 1853: point = 23, n_alt = 1
   Insn 1852: point = 25, n_alt = 0
  BB 144
   Insn 1849: point = 27, n_alt = 7
  BB 143
   Insn 1847: point = 29, n_alt = -1
   Insn 1846: point = 29, n_alt = 0
   Insn 1845: point = 30, n_alt = 0
   Insn 1844: point = 32, n_alt = 0
   Insn 1843: point = 34, n_alt = 0
   Insn 1842: point = 35, n_alt = 1
   Insn 1841: point = 35, n_alt = 0
   Insn 1840: point = 37, n_alt = 0
   Insn 1839: point = 38, n_alt = 1
   Insn 1838: point = 39, n_alt = 7
   Insn 1837: point = 40, n_alt = 7
   Insn 1836: point = 42, n_alt = 3
   Insn 1835: point = 43, n_alt = 3
   Insn 1834: point = 45, n_alt = 0
   Insn 1833: point = 47, n_alt = 1
   Insn 1832: point = 49, n_alt = 0
   Insn 1831: point = 50, n_alt = 0
   Insn 1830: point = 52, n_alt = 1
   Insn 1829: point = 54, n_alt = 0
   Insn 1828: point = 55, n_alt = 8
   Insn 1827: point = 56, n_alt = 3
   Insn 1826: point = 57, n_alt = 3
   Insn 1825: point = 59, n_alt = 0
   Insn 1824: point = 61, n_alt = 1
   Insn 1823: point = 63, n_alt = 0
   Insn 1822: point = 64, n_alt = 0
   Insn 1821: point = 66, n_alt = 1
   Insn 1820: point = 68, n_alt = 0
  BB 142
   Insn 9: point = 70, n_alt = -2
  BB 141
   Insn 1816: point = 73, n_alt = -1
   Insn 1815: point = 73, n_alt = 0
   Insn 1814: point = 74, n_alt = 0
   Insn 1813: point = 76, n_alt = 0
   Insn 1812: point = 78, n_alt = 0
   Insn 1811: point = 79, n_alt = 1
   Insn 1810: point = 79, n_alt = 0
   Insn 1809: point = 81, n_alt = 0
   Insn 1808: point = 82, n_alt = 1
   Insn 1807: point = 82, n_alt = 7
   Insn 1806: point = 84, n_alt = 3
   Insn 1805: point = 85, n_alt = 3
   Insn 1804: point = 87, n_alt = 0
   Insn 1803: point = 89, n_alt = 1
   Insn 1802: point = 91, n_alt = 0
   Insn 1801: point = 92, n_alt = 0
   Insn 1800: point = 94, n_alt = 1
   Insn 1799: point = 96, n_alt = 0
   Insn 1798: point = 97, n_alt = 7
  BB 139
   Insn 1790: point = 99, n_alt = 1
  BB 137
   Insn 1782: point = 100, n_alt = 1
   Insn 1781: point = 101, n_alt = 0
   Insn 1780: point = 102, n_alt = 0
  BB 170
   Insn 2037: point = 103, n_alt = -1
  BB 115
   Insn 1450: point = 103, n_alt = -1
   Insn 1449: point = 103, n_alt = 0
   Insn 1448: point = 104, n_alt = 0
   Insn 1447: point = 106, n_alt = 0
   Insn 1446: point = 107, n_alt = 0
  BB 136
   Insn 1963: point = 108, n_alt = -1
   Insn 1774: point = 108, n_alt = 1
  BB 173
   Insn 2046: point = 109, n_alt = -1
  BB 126
   Insn 1534: point = 110, n_alt = -1
   Insn 1533: point = 110, n_alt = 0
   Insn 1532: point = 111, n_alt = 0
   Insn 1531: point = 113, n_alt = 0
   Insn 1530: point = 114, n_alt = 0
  BB 135
   Insn 1961: point = 115, n_alt = -1
   Insn 1768: point = 115, n_alt = 1
  BB 174
   Insn 2049: point = 116, n_alt = -1
  BB 128
   Insn 1542: point = 117, n_alt = -1
   Insn 1541: point = 117, n_alt = 0
   Insn 1540: point = 118, n_alt = 0
   Insn 1539: point = 120, n_alt = 0
   Insn 1538: point = 121, n_alt = 0
  BB 134
   Insn 1959: point = 122, n_alt = -1
   Insn 1762: point = 122, n_alt = 1
  BB 131
   Insn 1957: point = 123, n_alt = -1
   Insn 1716: point = 123, n_alt = 8
   Insn 1715: point = 124, n_alt = 3
   Insn 1714: point = 125, n_alt = 1
   Insn 2098: point = 127, n_alt = 7
	   Creating copy r1259<-r1264@1000
   Insn 1713: point = 129, n_alt = 3
   Insn 1712: point = 131, n_alt = 0
   Insn 1711: point = 133, n_alt = 0
   Insn 1710: point = 135, n_alt = 0
   Insn 1709: point = 136, n_alt = 0
   Insn 1708: point = 138, n_alt = 0
   Insn 1707: point = 140, n_alt = 0
   Insn 1706: point = 141, n_alt = 1
   Insn 1705: point = 143, n_alt = 1
   Insn 1704: point = 145, n_alt = 7
   Insn 1703: point = 146, n_alt = -2
   Insn 2097: point = 148, n_alt = -2
	Hard reg 21 is preferable by r1258 with profit 1000
   Insn 1702: point = 150, n_alt = 2
   Insn 2096: point = 151, n_alt = 7
	   Creating copy r1258<-r1263@1000
   Insn 1701: point = 153, n_alt = -2
   Insn 1700: point = 154, n_alt = 0
   Insn 1699: point = 154, n_alt = -2
   Insn 1698: point = 155, n_alt = 7
   Insn 1697: point = 156, n_alt = 8
	Hard reg 21 is preferable by r1263 with profit 1000
   Insn 1696: point = 157, n_alt = 0
   Insn 1695: point = 157, n_alt = -2
   Insn 1694: point = 158, n_alt = 7
   Insn 2095: point = 159, n_alt = 8
	   Creating copy r1257->r1264@1000
   Insn 1693: point = 161, n_alt = 7
   Insn 1692: point = 163, n_alt = 3
   Insn 1691: point = 164, n_alt = 3
   Insn 1690: point = 166, n_alt = 0
   Insn 1689: point = 168, n_alt = 0
   Insn 1688: point = 170, n_alt = 0
   Insn 1687: point = 171, n_alt = 0
   Insn 1686: point = 173, n_alt = 0
   Insn 1685: point = 175, n_alt = 0
  BB 133
   Insn 1759: point = 177, n_alt = 8
   Insn 1758: point = 178, n_alt = 3
   Insn 1757: point = 179, n_alt = 1
   Insn 2102: point = 181, n_alt = 7
	   Creating copy r1262<-r1268@1000
   Insn 1756: point = 183, n_alt = 3
   Insn 1755: point = 185, n_alt = 0
   Insn 1754: point = 187, n_alt = 0
   Insn 1753: point = 189, n_alt = 0
   Insn 1752: point = 190, n_alt = 0
   Insn 1751: point = 192, n_alt = 0
   Insn 1750: point = 194, n_alt = 0
   Insn 1749: point = 195, n_alt = 1
   Insn 1748: point = 197, n_alt = 1
   Insn 1747: point = 199, n_alt = 7
   Insn 1746: point = 200, n_alt = -2
   Insn 2101: point = 202, n_alt = -2
	Hard reg 21 is preferable by r1261 with profit 1000
   Insn 1745: point = 204, n_alt = 2
   Insn 2100: point = 205, n_alt = 7
	   Creating copy r1261<-r1267@1000
   Insn 1744: point = 207, n_alt = -2
   Insn 1743: point = 208, n_alt = 0
   Insn 1742: point = 208, n_alt = -2
   Insn 1741: point = 209, n_alt = 7
   Insn 1740: point = 210, n_alt = 8
	Hard reg 21 is preferable by r1267 with profit 1000
   Insn 1739: point = 211, n_alt = 0
   Insn 1738: point = 211, n_alt = -2
   Insn 1737: point = 212, n_alt = 7
   Insn 2099: point = 213, n_alt = 8
	   Creating copy r1260->r1268@1000
   Insn 1736: point = 215, n_alt = 7
   Insn 1735: point = 217, n_alt = 3
   Insn 1734: point = 218, n_alt = 3
   Insn 1733: point = 220, n_alt = 0
   Insn 1732: point = 222, n_alt = 0
   Insn 1731: point = 224, n_alt = 0
   Insn 1730: point = 225, n_alt = 0
   Insn 1729: point = 227, n_alt = 0
   Insn 1728: point = 229, n_alt = 0
  BB 132
   Insn 1723: point = 231, n_alt = -1
   Insn 1722: point = 231, n_alt = 1
   Insn 1721: point = 232, n_alt = 7
  BB 130
   Insn 1680: point = 234, n_alt = -1
   Insn 1679: point = 234, n_alt = 1
   Insn 1678: point = 235, n_alt = 7
   Insn 1677: point = 236, n_alt = 8
   Insn 1676: point = 237, n_alt = 1
   Insn 2094: point = 239, n_alt = 7
	   Creating copy r1256<-r1265@1000
   Insn 1675: point = 241, n_alt = -2
   Insn 1674: point = 242, n_alt = 0
   Insn 1673: point = 242, n_alt = -2
   Insn 1672: point = 243, n_alt = 7
   Insn 2093: point = 243, n_alt = 8
	   Creating copy r1255->r1265@1000
   Insn 1671: point = 245, n_alt = 7
   Insn 1670: point = 247, n_alt = 0
   Insn 1669: point = 249, n_alt = 4
   Insn 1668: point = 250, n_alt = 3
   Insn 1667: point = 252, n_alt = 0
   Insn 1666: point = 254, n_alt = 0
   Insn 1665: point = 256, n_alt = 0
   Insn 1664: point = 257, n_alt = 0
   Insn 1663: point = 259, n_alt = 0
   Insn 1662: point = 261, n_alt = 0
   Insn 1661: point = 263, n_alt = 0
   Insn 1660: point = 264, n_alt = 1
   Insn 1659: point = 266, n_alt = 0
   Insn 1658: point = 268, n_alt = 0
   Insn 1657: point = 269, n_alt = -2
   Insn 1656: point = 271, n_alt = 2
   Insn 1655: point = 273, n_alt = 7
   Insn 1654: point = 274, n_alt = 8
   Insn 1653: point = 275, n_alt = 1
   Insn 2092: point = 277, n_alt = 7
	   Creating copy r1254<-r1266@1000
   Insn 1652: point = 279, n_alt = -2
   Insn 1651: point = 280, n_alt = 0
   Insn 1650: point = 280, n_alt = -2
   Insn 1649: point = 281, n_alt = 7
   Insn 2091: point = 281, n_alt = 8
	   Creating copy r1253->r1266@1000
   Insn 1648: point = 283, n_alt = 7
   Insn 1647: point = 285, n_alt = 4
   Insn 1646: point = 286, n_alt = 3
   Insn 1645: point = 288, n_alt = 0
   Insn 1644: point = 290, n_alt = 0
   Insn 1643: point = 292, n_alt = 0
   Insn 1642: point = 293, n_alt = 0
   Insn 1641: point = 295, n_alt = 0
   Insn 1640: point = 297, n_alt = 0
   Insn 1639: point = 299, n_alt = 0
   Insn 1638: point = 300, n_alt = 1
   Insn 1637: point = 302, n_alt = 0
   Insn 1636: point = 304, n_alt = 0
   Insn 1635: point = 305, n_alt = -2
   Insn 1634: point = 307, n_alt = 2
   Insn 1633: point = 309, n_alt = 7
   Insn 1632: point = 310, n_alt = 8
   Insn 1631: point = 311, n_alt = 2
   Insn 1630: point = 313, n_alt = 1
   Insn 1629: point = 315, n_alt = 7
   Insn 1628: point = 317, n_alt = 0
   Insn 1627: point = 319, n_alt = 4
   Insn 1626: point = 320, n_alt = 3
   Insn 1625: point = 322, n_alt = 0
   Insn 1624: point = 324, n_alt = 0
   Insn 1623: point = 325, n_alt = 1
   Insn 1622: point = 327, n_alt = 7
   Insn 1621: point = 329, n_alt = 0
   Insn 1620: point = 331, n_alt = 4
   Insn 1619: point = 332, n_alt = 3
   Insn 1618: point = 334, n_alt = 0
   Insn 1617: point = 336, n_alt = 0
   Insn 1616: point = 338, n_alt = 0
   Insn 1615: point = 339, n_alt = 0
   Insn 1614: point = 341, n_alt = 0
   Insn 1613: point = 343, n_alt = 0
   Insn 1612: point = 344, n_alt = 1
   Insn 1611: point = 346, n_alt = 7
   Insn 1610: point = 347, n_alt = 1
   Insn 1609: point = 349, n_alt = -2
   Insn 1608: point = 351, n_alt = 1
   Insn 1607: point = 353, n_alt = 7
   Insn 1606: point = 354, n_alt = 1
   Insn 1605: point = 356, n_alt = 7
   Insn 1604: point = 357, n_alt = 7
   Insn 1603: point = 359, n_alt = 0
   Insn 1602: point = 361, n_alt = 4
   Insn 1601: point = 362, n_alt = 3
   Insn 1600: point = 364, n_alt = 0
   Insn 1599: point = 366, n_alt = 0
   Insn 1598: point = 368, n_alt = 0
   Insn 1597: point = 369, n_alt = 0
   Insn 1596: point = 371, n_alt = 0
   Insn 1595: point = 373, n_alt = 0
   Insn 1594: point = 375, n_alt = 0
   Insn 1593: point = 376, n_alt = 1
   Insn 1592: point = 378, n_alt = 0
   Insn 1591: point = 380, n_alt = 0
   Insn 1590: point = 381, n_alt = 7
   Insn 1589: point = 383, n_alt = 0
   Insn 1588: point = 385, n_alt = 4
   Insn 1587: point = 386, n_alt = 3
   Insn 1586: point = 388, n_alt = 0
   Insn 1585: point = 390, n_alt = 0
   Insn 1584: point = 392, n_alt = 0
   Insn 1583: point = 393, n_alt = 0
   Insn 1582: point = 395, n_alt = 0
   Insn 1581: point = 397, n_alt = 0
   Insn 1580: point = 399, n_alt = 0
   Insn 1579: point = 400, n_alt = 1
   Insn 1578: point = 402, n_alt = 0
   Insn 1577: point = 404, n_alt = 0
   Insn 1576: point = 405, n_alt = 8
   Insn 1575: point = 406, n_alt = 1
   Insn 1574: point = 408, n_alt = 7
   Insn 1573: point = 410, n_alt = 4
   Insn 1572: point = 411, n_alt = 1
   Insn 1571: point = 413, n_alt = 7
   Insn 1570: point = 415, n_alt = 0
   Insn 1569: point = 417, n_alt = 4
   Insn 1568: point = 418, n_alt = 3
   Insn 1567: point = 420, n_alt = 0
   Insn 1566: point = 422, n_alt = 0
   Insn 1565: point = 424, n_alt = 0
   Insn 1564: point = 425, n_alt = 0
   Insn 1563: point = 427, n_alt = 0
   Insn 1562: point = 429, n_alt = 0
   Insn 1561: point = 430, n_alt = 7
   Insn 1560: point = 432, n_alt = 0
   Insn 1559: point = 434, n_alt = 4
   Insn 1558: point = 435, n_alt = 3
   Insn 1557: point = 437, n_alt = 0
   Insn 1556: point = 439, n_alt = 0
  BB 129
   Insn 1554: point = 441, n_alt = -1
   Insn 1553: point = 441, n_alt = 0
   Insn 1552: point = 442, n_alt = 0
   Insn 1551: point = 444, n_alt = 4
   Insn 1550: point = 445, n_alt = 3
   Insn 1549: point = 447, n_alt = 0
   Insn 1548: point = 449, n_alt = 0
   Insn 1547: point = 451, n_alt = 0
   Insn 1546: point = 452, n_alt = 0
   Insn 1545: point = 454, n_alt = 0
   Insn 1544: point = 456, n_alt = 0
  BB 127
   Insn 1536: point = 458, n_alt = 1
  BB 125
   Insn 1528: point = 459, n_alt = 1
   Insn 1527: point = 460, n_alt = 0
   Insn 1526: point = 461, n_alt = 0
  BB 171
   Insn 2040: point = 463, n_alt = -1
  BB 117
   Insn 1460: point = 464, n_alt = -1
   Insn 1459: point = 464, n_alt = 0
   Insn 1458: point = 465, n_alt = 0
   Insn 1457: point = 467, n_alt = 0
   Insn 1456: point = 468, n_alt = 0
  BB 124
   Insn 1954: point = 469, n_alt = -1
   Insn 1520: point = 469, n_alt = 1
  BB 172
   Insn 2043: point = 470, n_alt = -1
  BB 119
   Insn 1468: point = 471, n_alt = -1
   Insn 1467: point = 471, n_alt = 0
   Insn 1466: point = 472, n_alt = 0
   Insn 1465: point = 474, n_alt = 0
   Insn 1464: point = 475, n_alt = 0
  BB 123
   Insn 1952: point = 476, n_alt = -1
   Insn 1514: point = 476, n_alt = 1
  BB 122
   Insn 1511: point = 477, n_alt = 1
   Insn 1510: point = 478, n_alt = 4
   Insn 1509: point = 479, n_alt = 3
   Insn 1508: point = 481, n_alt = 0
   Insn 1507: point = 483, n_alt = 1
   Insn 1506: point = 485, n_alt = 0
   Insn 1505: point = 486, n_alt = 0
   Insn 1504: point = 488, n_alt = 1
   Insn 1503: point = 490, n_alt = 0
  BB 121
   Insn 1501: point = 492, n_alt = -1
   Insn 1500: point = 492, n_alt = 0
   Insn 1499: point = 493, n_alt = 0
   Insn 1498: point = 495, n_alt = 4
   Insn 1497: point = 496, n_alt = 3
   Insn 1496: point = 498, n_alt = 0
   Insn 1495: point = 500, n_alt = 1
   Insn 1494: point = 502, n_alt = 0
   Insn 1493: point = 503, n_alt = 0
   Insn 1492: point = 505, n_alt = 1
   Insn 1491: point = 507, n_alt = 0
  BB 120
   Insn 1489: point = 509, n_alt = -1
   Insn 1488: point = 509, n_alt = 0
   Insn 1487: point = 510, n_alt = 0
   Insn 1486: point = 512, n_alt = 4
   Insn 1485: point = 513, n_alt = 3
   Insn 1484: point = 515, n_alt = 0
   Insn 1483: point = 517, n_alt = 1
   Insn 1482: point = 519, n_alt = 0
   Insn 1481: point = 520, n_alt = 0
   Insn 1480: point = 522, n_alt = 1
   Insn 1479: point = 524, n_alt = 0
   Insn 1478: point = 525, n_alt = 1
   Insn 1477: point = 526, n_alt = 4
   Insn 1476: point = 527, n_alt = 3
   Insn 1475: point = 529, n_alt = 0
   Insn 1474: point = 531, n_alt = 1
   Insn 1473: point = 533, n_alt = 0
   Insn 1472: point = 534, n_alt = 0
   Insn 1471: point = 536, n_alt = 1
   Insn 1470: point = 538, n_alt = 0
  BB 118
   Insn 1462: point = 540, n_alt = 1
  BB 116
   Insn 1454: point = 541, n_alt = 1
   Insn 1453: point = 542, n_alt = 0
   Insn 1452: point = 543, n_alt = 0
  BB 114
   Insn 1444: point = 545, n_alt = 1
   Insn 1443: point = 546, n_alt = 0
   Insn 1442: point = 547, n_alt = 0
  BB 168
   Insn 2031: point = 548, n_alt = -1
  BB 105
   Insn 1388: point = 548, n_alt = -1
   Insn 1387: point = 548, n_alt = 0
   Insn 1386: point = 549, n_alt = 0
   Insn 1385: point = 551, n_alt = 0
   Insn 1384: point = 552, n_alt = 0
  BB 113
   Insn 1950: point = 553, n_alt = -1
   Insn 1436: point = 553, n_alt = 1
  BB 169
   Insn 2034: point = 554, n_alt = -1
  BB 107
   Insn 1396: point = 555, n_alt = -1
   Insn 1395: point = 555, n_alt = 0
   Insn 1394: point = 556, n_alt = 0
   Insn 1393: point = 558, n_alt = 0
   Insn 1392: point = 559, n_alt = 0
  BB 112
   Insn 1948: point = 560, n_alt = -1
   Insn 1430: point = 560, n_alt = 1
   Insn 1429: point = 560, n_alt = 1
  BB 111
   Insn 1426: point = 562, n_alt = 0
  BB 110
   Insn 1424: point = 564, n_alt = -1
   Insn 1423: point = 564, n_alt = 0
   Insn 1422: point = 564, n_alt = 0
   Insn 1421: point = 566, n_alt = 4
   Insn 1420: point = 567, n_alt = 3
   Insn 1419: point = 569, n_alt = 0
   Insn 1418: point = 571, n_alt = 0
   Insn 1417: point = 573, n_alt = 0
   Insn 1416: point = 574, n_alt = 0
   Insn 1415: point = 576, n_alt = 0
   Insn 1414: point = 578, n_alt = 0
   Insn 1413: point = 579, n_alt = 1
  BB 109
   Insn 1410: point = 581, n_alt = 0
  BB 108
   Insn 1408: point = 583, n_alt = -1
   Insn 1407: point = 583, n_alt = 0
   Insn 1406: point = 583, n_alt = 0
   Insn 1405: point = 585, n_alt = 4
   Insn 1404: point = 586, n_alt = 3
   Insn 1403: point = 588, n_alt = 0
   Insn 1402: point = 590, n_alt = 0
   Insn 1401: point = 592, n_alt = 0
   Insn 1400: point = 593, n_alt = 0
   Insn 1399: point = 595, n_alt = 0
   Insn 1398: point = 597, n_alt = 0
  BB 106
   Insn 1390: point = 599, n_alt = 1
  BB 104
   Insn 1382: point = 600, n_alt = 1
   Insn 1381: point = 601, n_alt = 0
   Insn 1380: point = 602, n_alt = 0
   Insn 1379: point = 603, n_alt = 1
   Insn 1378: point = 603, n_alt = 1
  BB 161
   Insn 2010: point = 603, n_alt = -1
  BB 70
   Insn 977: point = 603, n_alt = -1
   Insn 976: point = 603, n_alt = 0
   Insn 975: point = 604, n_alt = 0
   Insn 974: point = 606, n_alt = 0
   Insn 973: point = 607, n_alt = 1
  BB 103
   Insn 1946: point = 607, n_alt = -1
   Insn 1372: point = 607, n_alt = 1
  BB 166
   Insn 2025: point = 607, n_alt = -1
  BB 95
   Insn 1293: point = 607, n_alt = -1
   Insn 1292: point = 607, n_alt = 0
   Insn 1291: point = 608, n_alt = 0
   Insn 1290: point = 610, n_alt = 0
   Insn 1289: point = 611, n_alt = 0
  BB 102
   Insn 1944: point = 612, n_alt = -1
   Insn 1366: point = 612, n_alt = 1
  BB 167
   Insn 2028: point = 613, n_alt = -1
  BB 97
   Insn 1301: point = 614, n_alt = -1
   Insn 1300: point = 614, n_alt = 0
   Insn 1299: point = 615, n_alt = 0
   Insn 1298: point = 617, n_alt = 0
   Insn 1297: point = 618, n_alt = 0
  BB 101
   Insn 1942: point = 619, n_alt = -1
   Insn 1360: point = 619, n_alt = 1
  BB 100
   Insn 1357: point = 620, n_alt = 1
   Insn 1356: point = 621, n_alt = 0
   Insn 1355: point = 622, n_alt = 4
   Insn 1354: point = 623, n_alt = 3
   Insn 1353: point = 625, n_alt = 0
   Insn 1352: point = 627, n_alt = 1
   Insn 1351: point = 629, n_alt = 0
   Insn 1350: point = 630, n_alt = 0
   Insn 1349: point = 632, n_alt = 1
   Insn 1348: point = 634, n_alt = 0
  BB 99
   Insn 1343: point = 636, n_alt = -1
   Insn 1342: point = 636, n_alt = 1
   Insn 1341: point = 637, n_alt = 7
   Insn 1340: point = 639, n_alt = 0
   Insn 1339: point = 641, n_alt = 4
   Insn 1338: point = 642, n_alt = 3
   Insn 1337: point = 644, n_alt = 0
   Insn 1336: point = 646, n_alt = 1
   Insn 1335: point = 648, n_alt = 0
   Insn 1334: point = 649, n_alt = 0
   Insn 1333: point = 651, n_alt = 0
   Insn 1332: point = 653, n_alt = 1
   Insn 1331: point = 655, n_alt = 0
   Insn 1330: point = 656, n_alt = 1
   Insn 1329: point = 658, n_alt = 1
   Insn 1328: point = 660, n_alt = 0
   Insn 1327: point = 661, n_alt = 7
   Insn 1326: point = 663, n_alt = 4
   Insn 1325: point = 664, n_alt = 3
   Insn 1324: point = 666, n_alt = 0
   Insn 1323: point = 668, n_alt = 1
   Insn 1322: point = 670, n_alt = 0
   Insn 1321: point = 671, n_alt = 0
   Insn 1320: point = 673, n_alt = 0
   Insn 1319: point = 675, n_alt = 1
   Insn 1318: point = 677, n_alt = 0
   Insn 1317: point = 678, n_alt = 1
   Insn 1316: point = 680, n_alt = 1
   Insn 1315: point = 682, n_alt = 0
  BB 98
   Insn 1313: point = 684, n_alt = -1
   Insn 1312: point = 684, n_alt = 0
   Insn 1311: point = 685, n_alt = 0
   Insn 1310: point = 687, n_alt = 4
   Insn 1309: point = 688, n_alt = 3
   Insn 1308: point = 690, n_alt = 0
   Insn 1307: point = 692, n_alt = 1
   Insn 1306: point = 694, n_alt = 0
   Insn 1305: point = 695, n_alt = 0
   Insn 1304: point = 697, n_alt = 1
   Insn 1303: point = 699, n_alt = 0
  BB 96
   Insn 1295: point = 701, n_alt = 1
  BB 94
   Insn 1287: point = 702, n_alt = 1
   Insn 1286: point = 703, n_alt = 0
   Insn 1285: point = 704, n_alt = 0
  BB 164
   Insn 2019: point = 705, n_alt = -1
  BB 86
   Insn 1206: point = 705, n_alt = -1
   Insn 1205: point = 705, n_alt = 0
   Insn 1204: point = 706, n_alt = 0
   Insn 1203: point = 708, n_alt = 0
   Insn 1202: point = 709, n_alt = 0
  BB 93
   Insn 1940: point = 710, n_alt = -1
   Insn 1279: point = 710, n_alt = 1
  BB 165
   Insn 2022: point = 711, n_alt = -1
  BB 88
   Insn 1214: point = 712, n_alt = -1
   Insn 1213: point = 712, n_alt = 0
   Insn 1212: point = 713, n_alt = 0
   Insn 1211: point = 715, n_alt = 0
   Insn 1210: point = 716, n_alt = 0
  BB 92
   Insn 1938: point = 717, n_alt = -1
   Insn 1273: point = 717, n_alt = 1
  BB 91
   Insn 1270: point = 718, n_alt = 1
   Insn 1269: point = 719, n_alt = 0
   Insn 1268: point = 720, n_alt = 4
   Insn 1267: point = 721, n_alt = 3
   Insn 1266: point = 723, n_alt = 0
   Insn 1265: point = 725, n_alt = 1
   Insn 1264: point = 727, n_alt = 0
   Insn 1263: point = 728, n_alt = 0
   Insn 1262: point = 730, n_alt = 1
   Insn 1261: point = 732, n_alt = 0
  BB 90
   Insn 1256: point = 734, n_alt = -1
   Insn 1255: point = 734, n_alt = 1
   Insn 1254: point = 735, n_alt = 7
   Insn 1253: point = 737, n_alt = 0
   Insn 1252: point = 739, n_alt = 4
   Insn 1251: point = 740, n_alt = 3
   Insn 1250: point = 742, n_alt = 0
   Insn 1249: point = 744, n_alt = 1
   Insn 1248: point = 746, n_alt = 0
   Insn 1247: point = 747, n_alt = 0
   Insn 1246: point = 749, n_alt = 0
   Insn 1245: point = 751, n_alt = 1
   Insn 1244: point = 753, n_alt = 0
   Insn 1243: point = 754, n_alt = 1
   Insn 1242: point = 756, n_alt = 1
   Insn 1241: point = 758, n_alt = 0
   Insn 1240: point = 759, n_alt = 7
   Insn 1239: point = 761, n_alt = 4
   Insn 1238: point = 762, n_alt = 3
   Insn 1237: point = 764, n_alt = 0
   Insn 1236: point = 766, n_alt = 1
   Insn 1235: point = 768, n_alt = 0
   Insn 1234: point = 769, n_alt = 0
   Insn 1233: point = 771, n_alt = 0
   Insn 1232: point = 773, n_alt = 1
   Insn 1231: point = 775, n_alt = 0
   Insn 1230: point = 776, n_alt = 1
   Insn 1229: point = 778, n_alt = 1
   Insn 1228: point = 780, n_alt = 0
  BB 89
   Insn 1226: point = 782, n_alt = -1
   Insn 1225: point = 782, n_alt = 0
   Insn 1224: point = 783, n_alt = 0
   Insn 1223: point = 785, n_alt = 4
   Insn 1222: point = 786, n_alt = 3
   Insn 1221: point = 788, n_alt = 0
   Insn 1220: point = 790, n_alt = 1
   Insn 1219: point = 792, n_alt = 0
   Insn 1218: point = 793, n_alt = 0
   Insn 1217: point = 795, n_alt = 1
   Insn 1216: point = 797, n_alt = 0
  BB 87
   Insn 1208: point = 799, n_alt = 1
  BB 85
   Insn 1200: point = 800, n_alt = 1
   Insn 1199: point = 801, n_alt = 0
   Insn 1198: point = 802, n_alt = 0
  BB 84
   Insn 1195: point = 803, n_alt = 0
   Insn 1194: point = 803, n_alt = 0
   Insn 1193: point = 803, n_alt = 3
   Insn 1192: point = 803, n_alt = -2
   Insn 1191: point = 804, n_alt = 4
   Insn 1190: point = 804, n_alt = 2
   Insn 1189: point = 804, n_alt = 2
   Insn 1188: point = 804, n_alt = 4
   Insn 1187: point = 804, n_alt = 4
   Insn 1186: point = 804, n_alt = 0
   Insn 1185: point = 805, n_alt = 0
   Insn 1184: point = 806, n_alt = 0
   Insn 2090: point = 807, n_alt = 4
   Insn 1183: point = 808, n_alt = 0
   Insn 2089: point = 809, n_alt = 4
   Insn 1182: point = 810, n_alt = 0
   Insn 2088: point = 811, n_alt = 4
   Insn 1181: point = 812, n_alt = 0
   Insn 2087: point = 813, n_alt = 4
   Insn 1180: point = 814, n_alt = 0
   Insn 2086: point = 815, n_alt = 4
   Insn 1179: point = 816, n_alt = 0
   Insn 2085: point = 817, n_alt = 4
   Insn 1178: point = 818, n_alt = 0
   Insn 2084: point = 819, n_alt = 4
   Insn 1177: point = 820, n_alt = 0
   Insn 2083: point = 821, n_alt = 4
   Insn 1176: point = 822, n_alt = 0
   Insn 2082: point = 823, n_alt = 4
   Insn 1175: point = 824, n_alt = 0
   Insn 2081: point = 825, n_alt = 4
   Insn 1174: point = 826, n_alt = 0
   Insn 2080: point = 827, n_alt = 4
   Insn 1173: point = 828, n_alt = 0
   Insn 1172: point = 828, n_alt = 0
   Insn 1171: point = 830, n_alt = 4
   Insn 1170: point = 831, n_alt = 1
   Insn 1169: point = 833, n_alt = 1
   Insn 1168: point = 835, n_alt = 0
   Insn 1167: point = 837, n_alt = 0
   Insn 1166: point = 839, n_alt = 0
   Insn 1165: point = 840, n_alt = 0
   Insn 1164: point = 842, n_alt = 4
   Insn 1163: point = 843, n_alt = 1
   Insn 1162: point = 845, n_alt = 0
   Insn 1161: point = 847, n_alt = 0
   Insn 1160: point = 849, n_alt = 0
   Insn 1159: point = 851, n_alt = 0
   Insn 1158: point = 852, n_alt = 3
   Insn 1157: point = 854, n_alt = 4
   Insn 1156: point = 855, n_alt = 1
   Insn 1155: point = 857, n_alt = 0
   Insn 1154: point = 859, n_alt = 1
   Insn 1153: point = 861, n_alt = 0
   Insn 1152: point = 863, n_alt = 0
   Insn 1151: point = 865, n_alt = 0
  BB 83
   Insn 1149: point = 866, n_alt = -1
   Insn 1148: point = 866, n_alt = 1
  BB 82
   Insn 1145: point = 866, n_alt = 0
   Insn 1144: point = 866, n_alt = 0
   Insn 1143: point = 866, n_alt = 3
   Insn 1142: point = 866, n_alt = -2
   Insn 1141: point = 867, n_alt = 4
   Insn 1140: point = 867, n_alt = 2
   Insn 1139: point = 867, n_alt = 2
   Insn 1138: point = 867, n_alt = 4
   Insn 1137: point = 867, n_alt = 4
   Insn 1136: point = 867, n_alt = 0
   Insn 1135: point = 868, n_alt = 0
   Insn 1134: point = 869, n_alt = 0
   Insn 2079: point = 870, n_alt = 4
   Insn 1133: point = 871, n_alt = 0
   Insn 2078: point = 872, n_alt = 4
   Insn 1132: point = 873, n_alt = 0
   Insn 2077: point = 874, n_alt = 4
   Insn 1131: point = 875, n_alt = 0
   Insn 2076: point = 876, n_alt = 4
   Insn 1130: point = 877, n_alt = 0
   Insn 2075: point = 878, n_alt = 4
   Insn 1129: point = 879, n_alt = 0
   Insn 2074: point = 880, n_alt = 4
   Insn 1128: point = 881, n_alt = 0
   Insn 2073: point = 882, n_alt = 4
   Insn 1127: point = 883, n_alt = 0
   Insn 2072: point = 884, n_alt = 4
   Insn 1126: point = 885, n_alt = 0
   Insn 2071: point = 886, n_alt = 4
   Insn 1125: point = 887, n_alt = 0
   Insn 2070: point = 888, n_alt = 4
   Insn 1124: point = 889, n_alt = 0
   Insn 2069: point = 890, n_alt = 4
   Insn 1123: point = 891, n_alt = 0
   Insn 1122: point = 891, n_alt = 0
   Insn 1121: point = 893, n_alt = 4
   Insn 1120: point = 894, n_alt = 1
   Insn 1119: point = 896, n_alt = 1
   Insn 1118: point = 898, n_alt = 0
   Insn 1117: point = 900, n_alt = 0
   Insn 1116: point = 902, n_alt = 0
   Insn 1115: point = 903, n_alt = 0
   Insn 1114: point = 905, n_alt = 4
   Insn 1113: point = 906, n_alt = 1
   Insn 1112: point = 908, n_alt = 0
   Insn 1111: point = 910, n_alt = 0
   Insn 1110: point = 912, n_alt = 0
   Insn 1109: point = 914, n_alt = 0
   Insn 1108: point = 915, n_alt = 3
   Insn 1107: point = 917, n_alt = 4
   Insn 1106: point = 918, n_alt = 1
   Insn 1105: point = 920, n_alt = 0
   Insn 1104: point = 922, n_alt = 1
   Insn 1103: point = 924, n_alt = 0
   Insn 1102: point = 926, n_alt = 0
   Insn 1101: point = 928, n_alt = 0
  BB 81
   Insn 1099: point = 929, n_alt = -1
   Insn 1098: point = 929, n_alt = 1
  BB 162
   Insn 2013: point = 929, n_alt = -1
  BB 72
   Insn 989: point = 929, n_alt = -1
   Insn 988: point = 929, n_alt = 0
   Insn 987: point = 930, n_alt = 0
   Insn 986: point = 932, n_alt = 0
   Insn 985: point = 933, n_alt = 0
  BB 80
   Insn 1936: point = 934, n_alt = -1
   Insn 1092: point = 934, n_alt = 1
  BB 163
   Insn 2016: point = 935, n_alt = -1
  BB 74
   Insn 997: point = 936, n_alt = -1
   Insn 996: point = 936, n_alt = 0
   Insn 995: point = 937, n_alt = 0
   Insn 994: point = 939, n_alt = 0
   Insn 993: point = 940, n_alt = 0
  BB 79
   Insn 1934: point = 941, n_alt = -1
   Insn 1086: point = 941, n_alt = 1
  BB 77
   Insn 1932: point = 942, n_alt = -1
   Insn 1067: point = 942, n_alt = 1
   Insn 1066: point = 943, n_alt = 4
   Insn 1065: point = 944, n_alt = 3
   Insn 1064: point = 946, n_alt = 0
   Insn 1063: point = 948, n_alt = 1
   Insn 1062: point = 950, n_alt = 0
   Insn 1061: point = 951, n_alt = 0
   Insn 1060: point = 953, n_alt = 1
   Insn 1059: point = 955, n_alt = 0
   Insn 1058: point = 956, n_alt = 1
  BB 78
   Insn 1081: point = 957, n_alt = 1
   Insn 1080: point = 958, n_alt = 4
   Insn 1079: point = 959, n_alt = 3
   Insn 1078: point = 961, n_alt = 0
   Insn 1077: point = 963, n_alt = 1
   Insn 1076: point = 965, n_alt = 0
   Insn 1075: point = 966, n_alt = 0
   Insn 1074: point = 968, n_alt = 1
   Insn 1073: point = 970, n_alt = 0
   Insn 1072: point = 971, n_alt = 1
  BB 76
   Insn 1053: point = 972, n_alt = -1
   Insn 1052: point = 972, n_alt = 1
   Insn 1051: point = 973, n_alt = 7
   Insn 1050: point = 975, n_alt = 4
  BB 75
   Insn 1048: point = 977, n_alt = -1
   Insn 1047: point = 977, n_alt = 0
   Insn 1046: point = 978, n_alt = 0
   Insn 1045: point = 980, n_alt = 4
   Insn 1044: point = 981, n_alt = 3
   Insn 1043: point = 983, n_alt = 0
   Insn 1042: point = 985, n_alt = 1
   Insn 1041: point = 987, n_alt = 0
   Insn 1040: point = 988, n_alt = 0
   Insn 1039: point = 990, n_alt = 1
   Insn 1038: point = 992, n_alt = 0
   Insn 1037: point = 993, n_alt = 8
   Insn 1036: point = 994, n_alt = 1
   Insn 1035: point = 996, n_alt = 7
   Insn 1034: point = 998, n_alt = 4
   Insn 1033: point = 999, n_alt = 1
   Insn 1032: point = 1001, n_alt = 7
   Insn 1031: point = 1003, n_alt = 0
   Insn 1030: point = 1005, n_alt = 4
   Insn 1029: point = 1006, n_alt = 3
   Insn 1028: point = 1008, n_alt = 0
   Insn 1027: point = 1010, n_alt = 1
   Insn 1026: point = 1012, n_alt = 0
   Insn 1025: point = 1013, n_alt = 0
   Insn 1024: point = 1015, n_alt = 1
   Insn 1023: point = 1017, n_alt = 0
   Insn 1022: point = 1018, n_alt = 7
   Insn 1021: point = 1020, n_alt = 0
   Insn 1020: point = 1022, n_alt = 4
   Insn 1019: point = 1023, n_alt = 3
   Insn 1018: point = 1025, n_alt = 1
   Insn 1017: point = 1027, n_alt = 0
   Insn 1016: point = 1028, n_alt = 1
   Insn 1015: point = 1029, n_alt = 4
   Insn 1014: point = 1030, n_alt = 3
   Insn 1013: point = 1032, n_alt = 0
   Insn 1012: point = 1034, n_alt = 1
   Insn 1011: point = 1036, n_alt = 0
   Insn 1010: point = 1037, n_alt = 0
   Insn 1009: point = 1039, n_alt = 1
   Insn 1008: point = 1041, n_alt = 0
   Insn 1007: point = 1042, n_alt = 1
   Insn 1006: point = 1043, n_alt = 4
   Insn 1005: point = 1044, n_alt = 3
   Insn 1004: point = 1046, n_alt = 0
   Insn 1003: point = 1048, n_alt = 1
   Insn 1002: point = 1050, n_alt = 0
   Insn 1001: point = 1051, n_alt = 0
   Insn 1000: point = 1053, n_alt = 1
   Insn 999: point = 1055, n_alt = 0
  BB 73
   Insn 991: point = 1057, n_alt = 1
  BB 71
   Insn 983: point = 1058, n_alt = 1
   Insn 982: point = 1059, n_alt = 0
   Insn 981: point = 1060, n_alt = 0
   Insn 980: point = 1061, n_alt = 1
   Insn 979: point = 1061, n_alt = 1
  BB 69
   Insn 971: point = 1061, n_alt = 1
  BB 159
   Insn 2004: point = 1061, n_alt = -1
  BB 62
   Insn 906: point = 1061, n_alt = -1
   Insn 905: point = 1061, n_alt = 0
   Insn 904: point = 1062, n_alt = 0
   Insn 903: point = 1064, n_alt = 0
   Insn 902: point = 1065, n_alt = 0
  BB 68
   Insn 1929: point = 1066, n_alt = -1
   Insn 965: point = 1066, n_alt = 1
  BB 160
   Insn 2007: point = 1067, n_alt = -1
  BB 64
   Insn 914: point = 1068, n_alt = -1
   Insn 913: point = 1068, n_alt = 0
   Insn 912: point = 1069, n_alt = 0
   Insn 911: point = 1071, n_alt = 0
   Insn 910: point = 1072, n_alt = 0
  BB 67
   Insn 1927: point = 1073, n_alt = -1
   Insn 959: point = 1073, n_alt = 1
  BB 66
   Insn 956: point = 1074, n_alt = 1
   Insn 955: point = 1075, n_alt = 4
   Insn 954: point = 1076, n_alt = 0
   Insn 953: point = 1078, n_alt = 3
   Insn 952: point = 1080, n_alt = 4
   Insn 951: point = 1081, n_alt = 3
   Insn 950: point = 1083, n_alt = 0
   Insn 949: point = 1085, n_alt = 1
   Insn 948: point = 1087, n_alt = 0
   Insn 947: point = 1088, n_alt = 0
   Insn 946: point = 1090, n_alt = 1
   Insn 945: point = 1092, n_alt = 0
   Insn 944: point = 1093, n_alt = 3
   Insn 943: point = 1095, n_alt = 0
   Insn 942: point = 1097, n_alt = 1
   Insn 941: point = 1099, n_alt = 0
   Insn 940: point = 1100, n_alt = 0
   Insn 939: point = 1102, n_alt = 1
   Insn 938: point = 1104, n_alt = 0
  BB 65
   Insn 936: point = 1106, n_alt = -1
   Insn 935: point = 1106, n_alt = 0
   Insn 934: point = 1107, n_alt = 0
   Insn 933: point = 1109, n_alt = 0
   Insn 932: point = 1111, n_alt = 4
   Insn 931: point = 1112, n_alt = 3
   Insn 930: point = 1114, n_alt = 0
   Insn 929: point = 1116, n_alt = 1
   Insn 928: point = 1118, n_alt = 0
   Insn 927: point = 1119, n_alt = 0
   Insn 926: point = 1121, n_alt = 1
   Insn 925: point = 1123, n_alt = 0
   Insn 924: point = 1124, n_alt = 0
   Insn 923: point = 1126, n_alt = 4
   Insn 922: point = 1127, n_alt = 3
   Insn 921: point = 1129, n_alt = 0
   Insn 920: point = 1131, n_alt = 1
   Insn 919: point = 1133, n_alt = 0
   Insn 918: point = 1134, n_alt = 0
   Insn 917: point = 1136, n_alt = 1
   Insn 916: point = 1138, n_alt = 0
  BB 63
   Insn 908: point = 1140, n_alt = 1
  BB 61
   Insn 900: point = 1141, n_alt = 1
   Insn 899: point = 1142, n_alt = 0
   Insn 898: point = 1143, n_alt = 0
  BB 156
   Insn 1995: point = 1144, n_alt = -1
  BB 51
   Insn 811: point = 1144, n_alt = -1
   Insn 810: point = 1144, n_alt = 0
   Insn 809: point = 1145, n_alt = 0
   Insn 808: point = 1147, n_alt = 0
   Insn 807: point = 1148, n_alt = 0
  BB 60
   Insn 1925: point = 1148, n_alt = -1
   Insn 892: point = 1148, n_alt = 1
  BB 157
   Insn 1998: point = 1148, n_alt = -1
  BB 53
   Insn 821: point = 1148, n_alt = -1
   Insn 820: point = 1148, n_alt = 0
   Insn 819: point = 1149, n_alt = 0
   Insn 818: point = 1151, n_alt = 0
   Insn 817: point = 1152, n_alt = 0
  BB 59
   Insn 1923: point = 1153, n_alt = -1
   Insn 886: point = 1153, n_alt = 1
  BB 158
   Insn 2001: point = 1154, n_alt = -1
  BB 55
   Insn 829: point = 1155, n_alt = -1
   Insn 828: point = 1155, n_alt = 0
   Insn 827: point = 1156, n_alt = 0
   Insn 826: point = 1158, n_alt = 0
   Insn 825: point = 1159, n_alt = 0
  BB 58
   Insn 1921: point = 1160, n_alt = -1
   Insn 880: point = 1160, n_alt = 1
  BB 57
   Insn 877: point = 1161, n_alt = 1
   Insn 876: point = 1162, n_alt = 4
   Insn 875: point = 1163, n_alt = 3
   Insn 874: point = 1165, n_alt = 0
   Insn 873: point = 1166, n_alt = 3
   Insn 872: point = 1168, n_alt = 0
   Insn 871: point = 1170, n_alt = 1
   Insn 870: point = 1172, n_alt = 0
   Insn 869: point = 1173, n_alt = 0
   Insn 868: point = 1175, n_alt = 1
   Insn 867: point = 1177, n_alt = 0
  BB 56
   Insn 862: point = 1179, n_alt = -1
   Insn 861: point = 1179, n_alt = 1
   Insn 860: point = 1180, n_alt = 7
   Insn 859: point = 1182, n_alt = 4
   Insn 858: point = 1183, n_alt = 3
   Insn 857: point = 1185, n_alt = 0
   Insn 856: point = 1187, n_alt = 1
   Insn 855: point = 1189, n_alt = 0
   Insn 854: point = 1190, n_alt = 0
   Insn 853: point = 1192, n_alt = 1
   Insn 852: point = 1194, n_alt = 0
   Insn 851: point = 1195, n_alt = 8
   Insn 850: point = 1196, n_alt = 1
   Insn 849: point = 1198, n_alt = 7
   Insn 848: point = 1200, n_alt = 4
   Insn 847: point = 1201, n_alt = 1
   Insn 846: point = 1203, n_alt = 7
   Insn 845: point = 1205, n_alt = 0
   Insn 844: point = 1207, n_alt = 4
   Insn 843: point = 1208, n_alt = 3
   Insn 842: point = 1210, n_alt = 0
   Insn 841: point = 1212, n_alt = 1
   Insn 840: point = 1214, n_alt = 0
   Insn 839: point = 1215, n_alt = 0
   Insn 838: point = 1217, n_alt = 1
   Insn 837: point = 1219, n_alt = 0
   Insn 836: point = 1220, n_alt = 7
   Insn 835: point = 1222, n_alt = 0
   Insn 834: point = 1224, n_alt = 4
   Insn 833: point = 1225, n_alt = 3
   Insn 832: point = 1227, n_alt = 1
   Insn 831: point = 1229, n_alt = 0
  BB 54
   Insn 823: point = 1231, n_alt = 1
  BB 52
   Insn 815: point = 1232, n_alt = 1
   Insn 814: point = 1233, n_alt = 0
   Insn 813: point = 1234, n_alt = 0
  BB 50
   Insn 805: point = 1235, n_alt = 1
  BB 153
   Insn 1986: point = 1235, n_alt = -1
  BB 20
   Insn 187: point = 1235, n_alt = -1
   Insn 186: point = 1235, n_alt = 0
   Insn 185: point = 1236, n_alt = 0
   Insn 184: point = 1238, n_alt = 0
   Insn 183: point = 1239, n_alt = 0
  BB 49
   Insn 1919: point = 1239, n_alt = -1
   Insn 799: point = 1239, n_alt = 1
  BB 154
   Insn 1989: point = 1239, n_alt = -1
  BB 24
   Insn 206: point = 1239, n_alt = -1
   Insn 205: point = 1239, n_alt = 0
   Insn 204: point = 1240, n_alt = 0
   Insn 203: point = 1242, n_alt = 0
   Insn 202: point = 1243, n_alt = 0
  BB 48
   Insn 1917: point = 1244, n_alt = -1
   Insn 793: point = 1244, n_alt = 1
  BB 155
   Insn 1992: point = 1245, n_alt = -1
  BB 26
   Insn 214: point = 1246, n_alt = -1
   Insn 213: point = 1246, n_alt = 0
   Insn 212: point = 1247, n_alt = 0
   Insn 211: point = 1249, n_alt = 0
   Insn 210: point = 1250, n_alt = 0
  BB 47
   Insn 1915: point = 1251, n_alt = -1
   Insn 787: point = 1251, n_alt = 1
  BB 46
   Insn 784: point = 1252, n_alt = 8
   Insn 783: point = 1253, n_alt = 7
   Insn 782: point = 1254, n_alt = 4
   Insn 781: point = 1255, n_alt = 3
   Insn 780: point = 1257, n_alt = 0
   Insn 779: point = 1259, n_alt = 0
   Insn 778: point = 1261, n_alt = 0
   Insn 777: point = 1262, n_alt = 0
   Insn 776: point = 1264, n_alt = 0
   Insn 775: point = 1266, n_alt = 0
   Insn 774: point = 1267, n_alt = 8
   Insn 773: point = 1268, n_alt = 7
   Insn 772: point = 1269, n_alt = 4
   Insn 771: point = 1270, n_alt = 3
   Insn 770: point = 1272, n_alt = 0
   Insn 769: point = 1274, n_alt = 0
   Insn 768: point = 1276, n_alt = 0
   Insn 767: point = 1277, n_alt = 0
   Insn 766: point = 1279, n_alt = 0
   Insn 765: point = 1281, n_alt = 0
  BB 45
   Insn 760: point = 1283, n_alt = -1
   Insn 759: point = 1283, n_alt = 1
   Insn 758: point = 1284, n_alt = 7
   Insn 757: point = 1285, n_alt = 7
   Insn 756: point = 1287, n_alt = 4
   Insn 755: point = 1288, n_alt = 3
   Insn 754: point = 1290, n_alt = 0
   Insn 753: point = 1292, n_alt = 0
   Insn 752: point = 1294, n_alt = 0
   Insn 751: point = 1295, n_alt = 0
   Insn 750: point = 1297, n_alt = 0
   Insn 749: point = 1299, n_alt = 0
   Insn 748: point = 1300, n_alt = 8
   Insn 747: point = 1301, n_alt = 1
   Insn 746: point = 1303, n_alt = 7
   Insn 745: point = 1304, n_alt = -2
   Insn 744: point = 1305, n_alt = 0
   Insn 743: point = 1305, n_alt = -2
   Insn 742: point = 1306, n_alt = 2
   Insn 741: point = 1308, n_alt = 1
   Insn 740: point = 1310, n_alt = 1
   Insn 739: point = 1312, n_alt = 7
   Insn 738: point = 1313, n_alt = 7
   Insn 737: point = 1314, n_alt = 4
   Insn 736: point = 1315, n_alt = 9
   Insn 735: point = 1316, n_alt = 0
   Insn 734: point = 1316, n_alt = -2
   Insn 733: point = 1317, n_alt = 7
   Insn 732: point = 1317, n_alt = -2
   Insn 731: point = 1319, n_alt = 2
   Insn 730: point = 1321, n_alt = 7
   Insn 729: point = 1322, n_alt = 8
   Insn 728: point = 1323, n_alt = 1
   Insn 727: point = 1325, n_alt = 1
   Insn 726: point = 1327, n_alt = 7
   Insn 725: point = 1329, n_alt = 4
   Insn 724: point = 1330, n_alt = 3
   Insn 723: point = 1332, n_alt = 0
   Insn 722: point = 1334, n_alt = 0
   Insn 721: point = 1336, n_alt = 0
   Insn 720: point = 1337, n_alt = 0
   Insn 719: point = 1339, n_alt = 0
   Insn 718: point = 1341, n_alt = 0
   Insn 717: point = 1342, n_alt = 1
   Insn 716: point = 1344, n_alt = 7
   Insn 715: point = 1346, n_alt = 4
   Insn 714: point = 1347, n_alt = 3
   Insn 713: point = 1349, n_alt = 0
   Insn 712: point = 1351, n_alt = 0
   Insn 711: point = 1353, n_alt = 0
   Insn 710: point = 1354, n_alt = 0
   Insn 709: point = 1356, n_alt = 0
   Insn 708: point = 1358, n_alt = 0
   Insn 707: point = 1359, n_alt = -2
   Insn 706: point = 1361, n_alt = 1
   Insn 705: point = 1363, n_alt = 2
   Insn 704: point = 1365, n_alt = 2
   Insn 703: point = 1367, n_alt = 7
   Insn 702: point = 1368, n_alt = 1
   Insn 701: point = 1370, n_alt = 1
   Insn 700: point = 1372, n_alt = 7
   Insn 699: point = 1374, n_alt = 4
   Insn 698: point = 1375, n_alt = 3
   Insn 697: point = 1377, n_alt = 0
   Insn 696: point = 1379, n_alt = 0
   Insn 695: point = 1381, n_alt = 0
   Insn 694: point = 1382, n_alt = 0
   Insn 693: point = 1384, n_alt = 0
   Insn 692: point = 1386, n_alt = 0
   Insn 691: point = 1387, n_alt = -2
   Insn 690: point = 1389, n_alt = 2
   Insn 689: point = 1391, n_alt = 7
   Insn 2068: point = 1392, n_alt = -2
	Hard reg 22 is preferable by r1230 with profit 1000
   Insn 688: point = 1394, n_alt = 1
   Insn 2067: point = 1394, n_alt = -2
	Hard reg 22 is preferable by r1230 with profit 1000
	Hard reg 21 is preferable by r1230 with profit 1000
   Insn 687: point = 1396, n_alt = 1
   Insn 686: point = 1398, n_alt = 7
   Insn 685: point = 1400, n_alt = 4
   Insn 684: point = 1401, n_alt = 3
   Insn 683: point = 1403, n_alt = 0
   Insn 682: point = 1405, n_alt = 0
   Insn 681: point = 1407, n_alt = 0
   Insn 680: point = 1408, n_alt = 0
   Insn 679: point = 1410, n_alt = 0
   Insn 678: point = 1412, n_alt = 0
   Insn 677: point = 1413, n_alt = -2
   Insn 676: point = 1415, n_alt = 2
   Insn 675: point = 1417, n_alt = 7
   Insn 674: point = 1418, n_alt = 8
   Insn 673: point = 1419, n_alt = 7
   Insn 672: point = 1421, n_alt = 0
   Insn 671: point = 1423, n_alt = 4
   Insn 670: point = 1424, n_alt = 3
   Insn 669: point = 1426, n_alt = 0
   Insn 668: point = 1428, n_alt = 0
   Insn 667: point = 1430, n_alt = 0
   Insn 666: point = 1432, n_alt = 0
   Insn 665: point = 1433, n_alt = -2
   Insn 664: point = 1435, n_alt = -2
   Insn 663: point = 1437, n_alt = 0
   Insn 662: point = 1439, n_alt = 0
   Insn 661: point = 1440, n_alt = 0
   Insn 660: point = 1440, n_alt = 0
   Insn 659: point = 1440, n_alt = 0
   Insn 658: point = 1440, n_alt = -2
   Insn 657: point = 1441, n_alt = 1
   Insn 656: point = 1443, n_alt = 0
   Insn 655: point = 1445, n_alt = 0
   Insn 654: point = 1446, n_alt = 8
   Insn 653: point = 1447, n_alt = 7
   Insn 652: point = 1449, n_alt = 0
   Insn 651: point = 1451, n_alt = 4
   Insn 650: point = 1452, n_alt = 3
   Insn 649: point = 1454, n_alt = 0
   Insn 648: point = 1456, n_alt = 0
   Insn 647: point = 1458, n_alt = 0
   Insn 646: point = 1459, n_alt = -2
   Insn 645: point = 1461, n_alt = -2
   Insn 644: point = 1463, n_alt = 0
   Insn 643: point = 1465, n_alt = 0
   Insn 642: point = 1466, n_alt = 0
   Insn 641: point = 1466, n_alt = 0
   Insn 640: point = 1466, n_alt = 0
   Insn 639: point = 1466, n_alt = -2
   Insn 638: point = 1467, n_alt = 1
   Insn 637: point = 1469, n_alt = 0
   Insn 636: point = 1471, n_alt = 0
   Insn 635: point = 1472, n_alt = 8
   Insn 634: point = 1473, n_alt = 7
   Insn 633: point = 1475, n_alt = 0
   Insn 632: point = 1477, n_alt = 4
   Insn 631: point = 1478, n_alt = 3
   Insn 630: point = 1480, n_alt = 0
   Insn 629: point = 1482, n_alt = 0
   Insn 628: point = 1484, n_alt = 0
   Insn 627: point = 1486, n_alt = 0
   Insn 626: point = 1487, n_alt = -2
   Insn 625: point = 1489, n_alt = -2
   Insn 624: point = 1491, n_alt = 0
   Insn 623: point = 1493, n_alt = 0
   Insn 622: point = 1494, n_alt = 0
   Insn 621: point = 1494, n_alt = 0
   Insn 620: point = 1494, n_alt = 0
   Insn 619: point = 1494, n_alt = -2
   Insn 618: point = 1495, n_alt = 1
   Insn 617: point = 1497, n_alt = 0
   Insn 616: point = 1498, n_alt = 8
   Insn 615: point = 1499, n_alt = 7
   Insn 614: point = 1501, n_alt = 0
   Insn 613: point = 1503, n_alt = 4
   Insn 612: point = 1504, n_alt = 3
   Insn 611: point = 1506, n_alt = 0
   Insn 610: point = 1508, n_alt = 0
   Insn 609: point = 1510, n_alt = 0
   Insn 608: point = 1511, n_alt = -2
   Insn 607: point = 1513, n_alt = -2
   Insn 606: point = 1515, n_alt = 0
   Insn 605: point = 1517, n_alt = 0
   Insn 604: point = 1518, n_alt = 0
   Insn 603: point = 1518, n_alt = 0
   Insn 602: point = 1518, n_alt = 0
   Insn 601: point = 1518, n_alt = -2
   Insn 600: point = 1519, n_alt = 1
   Insn 599: point = 1521, n_alt = 0
   Insn 598: point = 1522, n_alt = 1
   Insn 597: point = 1523, n_alt = 0
  BB 44
   Insn 594: point = 1525, n_alt = 8
   Insn 593: point = 1526, n_alt = 7
   Insn 592: point = 1527, n_alt = 4
   Insn 591: point = 1528, n_alt = 3
   Insn 590: point = 1530, n_alt = 0
   Insn 589: point = 1532, n_alt = 0
   Insn 588: point = 1534, n_alt = 0
   Insn 587: point = 1535, n_alt = 0
   Insn 586: point = 1537, n_alt = 0
   Insn 585: point = 1539, n_alt = 0
   Insn 584: point = 1540, n_alt = 1
  BB 43
   Insn 582: point = 1541, n_alt = -1
   Insn 581: point = 1541, n_alt = 0
  BB 42
   Insn 578: point = 1542, n_alt = 8
   Insn 577: point = 1543, n_alt = 7
   Insn 576: point = 1544, n_alt = 4
   Insn 575: point = 1545, n_alt = 3
   Insn 574: point = 1547, n_alt = 0
   Insn 573: point = 1549, n_alt = 0
   Insn 572: point = 1551, n_alt = 0
   Insn 571: point = 1552, n_alt = 0
   Insn 570: point = 1554, n_alt = 0
   Insn 569: point = 1556, n_alt = 0
   Insn 568: point = 1557, n_alt = 1
  BB 41
   Insn 566: point = 1558, n_alt = -1
   Insn 565: point = 1558, n_alt = 1
   Insn 564: point = 1558, n_alt = 1
   Insn 563: point = 1559, n_alt = 0
   Insn 562: point = 1561, n_alt = 0
   Insn 561: point = 1563, n_alt = 7
   Insn 560: point = 1564, n_alt = 8
   Insn 559: point = 1565, n_alt = 4
   Insn 558: point = 1566, n_alt = 2
   Insn 557: point = 1568, n_alt = 7
   Insn 556: point = 1569, n_alt = 3
   Insn 555: point = 1571, n_alt = 0
   Insn 554: point = 1573, n_alt = 0
   Insn 553: point = 1575, n_alt = 0
   Insn 552: point = 1576, n_alt = 0
   Insn 551: point = 1578, n_alt = 0
   Insn 550: point = 1580, n_alt = 0
   Insn 549: point = 1581, n_alt = -2
  BB 40
   Insn 547: point = 1584, n_alt = 0
   Insn 2066: point = 1585, n_alt = -2
	Hard reg 22 is preferable by r1229 with profit 1000
   Insn 546: point = 1587, n_alt = 0
   Insn 2065: point = 1588, n_alt = -2
	Hard reg 22 is preferable by r1229 with profit 1000
	Hard reg 23 is preferable by r1229 with profit 1000
   Insn 545: point = 1590, n_alt = 1
   Insn 544: point = 1592, n_alt = 0
  BB 39
   Insn 543: point = 1595, n_alt = -1
   Insn 542: point = 1595, n_alt = 1
   Insn 2064: point = 1596, n_alt = -2
	Hard reg 25 is preferable by r1228 with profit 1000
   Insn 541: point = 1598, n_alt = 0
   Insn 2063: point = 1598, n_alt = -2
   Insn 540: point = 1599, n_alt = 0
   Insn 539: point = 1601, n_alt = 2
   Insn 538: point = 1602, n_alt = -2
   Insn 537: point = 1603, n_alt = 7
   Insn 536: point = 1604, n_alt = 7
   Insn 535: point = 1605, n_alt = 8
   Insn 534: point = 1606, n_alt = 1
   Insn 533: point = 1608, n_alt = 7
   Insn 532: point = 1610, n_alt = 4
   Insn 2062: point = 1611, n_alt = -2
	Hard reg 22 is preferable by r1227 with profit 1000
   Insn 531: point = 1613, n_alt = 2
   Insn 2061: point = 1613, n_alt = -2
	Hard reg 22 is preferable by r1227 with profit 1000
	Hard reg 21 is preferable by r1227 with profit 1000
   Insn 530: point = 1615, n_alt = -2
   Insn 529: point = 1617, n_alt = 2
   Insn 528: point = 1619, n_alt = 7
   Insn 527: point = 1620, n_alt = 8
   Insn 526: point = 1621, n_alt = 1
   Insn 525: point = 1623, n_alt = 7
   Insn 524: point = 1624, n_alt = 1
   Insn 523: point = 1626, n_alt = 7
   Insn 522: point = 1628, n_alt = 4
   Insn 521: point = 1629, n_alt = 3
   Insn 520: point = 1631, n_alt = 0
   Insn 519: point = 1633, n_alt = 0
   Insn 518: point = 1635, n_alt = 0
   Insn 517: point = 1636, n_alt = 0
   Insn 516: point = 1638, n_alt = 0
   Insn 515: point = 1640, n_alt = 0
   Insn 514: point = 1641, n_alt = -2
   Insn 513: point = 1643, n_alt = 2
   Insn 512: point = 1645, n_alt = 7
   Insn 511: point = 1646, n_alt = 8
   Insn 510: point = 1647, n_alt = 1
   Insn 509: point = 1649, n_alt = 7
   Insn 508: point = 1650, n_alt = 1
   Insn 507: point = 1652, n_alt = 7
   Insn 506: point = 1654, n_alt = 4
   Insn 505: point = 1655, n_alt = 3
   Insn 504: point = 1657, n_alt = 0
   Insn 503: point = 1659, n_alt = 0
   Insn 502: point = 1661, n_alt = 0
   Insn 501: point = 1662, n_alt = 0
   Insn 500: point = 1664, n_alt = 0
   Insn 499: point = 1666, n_alt = 0
   Insn 498: point = 1667, n_alt = -2
   Insn 497: point = 1669, n_alt = 2
   Insn 496: point = 1671, n_alt = 7
   Insn 495: point = 1672, n_alt = 8
   Insn 494: point = 1673, n_alt = 7
   Insn 493: point = 1675, n_alt = 0
   Insn 492: point = 1677, n_alt = 4
   Insn 491: point = 1678, n_alt = 3
   Insn 490: point = 1680, n_alt = 0
   Insn 489: point = 1682, n_alt = 0
   Insn 488: point = 1684, n_alt = 0
   Insn 487: point = 1685, n_alt = 8
   Insn 486: point = 1686, n_alt = 7
   Insn 485: point = 1688, n_alt = 0
   Insn 484: point = 1690, n_alt = 4
   Insn 483: point = 1691, n_alt = 3
   Insn 482: point = 1693, n_alt = 0
   Insn 481: point = 1695, n_alt = 0
   Insn 480: point = 1697, n_alt = 0
   Insn 479: point = 1698, n_alt = 8
   Insn 478: point = 1699, n_alt = 7
   Insn 477: point = 1701, n_alt = 0
   Insn 476: point = 1703, n_alt = 4
   Insn 475: point = 1704, n_alt = 3
   Insn 474: point = 1706, n_alt = 0
   Insn 473: point = 1708, n_alt = 0
   Insn 472: point = 1709, n_alt = 8
   Insn 471: point = 1710, n_alt = 7
   Insn 470: point = 1712, n_alt = 0
   Insn 469: point = 1714, n_alt = 4
   Insn 468: point = 1715, n_alt = 3
   Insn 467: point = 1717, n_alt = 0
   Insn 466: point = 1719, n_alt = 0
  BB 38
   Insn 463: point = 1721, n_alt = 8
   Insn 462: point = 1722, n_alt = 7
   Insn 461: point = 1723, n_alt = 4
   Insn 460: point = 1724, n_alt = 3
   Insn 459: point = 1726, n_alt = 0
   Insn 458: point = 1728, n_alt = 0
   Insn 457: point = 1730, n_alt = 0
   Insn 456: point = 1731, n_alt = 0
   Insn 455: point = 1733, n_alt = 0
   Insn 454: point = 1735, n_alt = 0
   Insn 453: point = 1736, n_alt = 1
  BB 37
   Insn 451: point = 1737, n_alt = -1
   Insn 450: point = 1737, n_alt = 0
  BB 36
   Insn 447: point = 1738, n_alt = 8
   Insn 446: point = 1739, n_alt = 7
   Insn 445: point = 1740, n_alt = 4
   Insn 444: point = 1741, n_alt = 3
   Insn 443: point = 1743, n_alt = 0
   Insn 442: point = 1745, n_alt = 0
   Insn 441: point = 1747, n_alt = 0
   Insn 440: point = 1748, n_alt = 0
   Insn 439: point = 1750, n_alt = 0
   Insn 438: point = 1752, n_alt = 0
   Insn 437: point = 1753, n_alt = 1
  BB 35
   Insn 435: point = 1754, n_alt = -1
   Insn 434: point = 1754, n_alt = 1
   Insn 433: point = 1754, n_alt = 1
   Insn 432: point = 1755, n_alt = 0
   Insn 431: point = 1757, n_alt = 0
   Insn 430: point = 1759, n_alt = 7
   Insn 429: point = 1760, n_alt = 8
   Insn 428: point = 1761, n_alt = 4
   Insn 427: point = 1762, n_alt = 2
   Insn 426: point = 1764, n_alt = 7
   Insn 425: point = 1765, n_alt = 3
   Insn 424: point = 1767, n_alt = 0
   Insn 423: point = 1769, n_alt = 0
   Insn 422: point = 1771, n_alt = 0
   Insn 421: point = 1772, n_alt = 0
   Insn 420: point = 1774, n_alt = 0
   Insn 419: point = 1776, n_alt = 0
   Insn 418: point = 1777, n_alt = -2
  BB 34
   Insn 416: point = 1780, n_alt = 0
   Insn 2060: point = 1781, n_alt = -2
	Hard reg 22 is preferable by r1226 with profit 1000
   Insn 415: point = 1783, n_alt = 0
   Insn 2059: point = 1784, n_alt = -2
	Hard reg 22 is preferable by r1226 with profit 1000
	Hard reg 23 is preferable by r1226 with profit 1000
   Insn 414: point = 1786, n_alt = 1
   Insn 413: point = 1788, n_alt = 0
  BB 33
   Insn 412: point = 1791, n_alt = -1
   Insn 411: point = 1791, n_alt = 1
   Insn 2058: point = 1792, n_alt = -2
	Hard reg 25 is preferable by r1225 with profit 1000
   Insn 410: point = 1794, n_alt = 0
   Insn 2057: point = 1794, n_alt = -2
   Insn 409: point = 1795, n_alt = 0
   Insn 408: point = 1797, n_alt = 2
   Insn 407: point = 1798, n_alt = -2
   Insn 406: point = 1799, n_alt = 7
   Insn 405: point = 1800, n_alt = 7
   Insn 404: point = 1801, n_alt = 8
   Insn 403: point = 1802, n_alt = 1
   Insn 402: point = 1804, n_alt = 7
   Insn 401: point = 1806, n_alt = 4
   Insn 400: point = 1807, n_alt = -2
   Insn 399: point = 1809, n_alt = 2
   Insn 398: point = 1811, n_alt = 7
   Insn 397: point = 1812, n_alt = 7
   Insn 396: point = 1814, n_alt = 4
   Insn 395: point = 1815, n_alt = 8
   Insn 394: point = 1816, n_alt = 1
   Insn 393: point = 1818, n_alt = 7
  BB 31
   Insn 1913: point = 1820, n_alt = -1
   Insn 348: point = 1820, n_alt = 4
   Insn 347: point = 1821, n_alt = 9
   Insn 346: point = 1822, n_alt = 0
   Insn 345: point = 1822, n_alt = -2
   Insn 344: point = 1823, n_alt = 7
   Insn 343: point = 1823, n_alt = -2
   Insn 342: point = 1825, n_alt = 2
   Insn 341: point = 1827, n_alt = 7
   Insn 340: point = 1828, n_alt = -2
   Insn 339: point = 1830, n_alt = 1
   Insn 338: point = 1832, n_alt = 7
   Insn 337: point = 1834, n_alt = 4
   Insn 336: point = 1835, n_alt = 1
   Insn 335: point = 1837, n_alt = 7
   Insn 334: point = 1839, n_alt = 0
   Insn 333: point = 1841, n_alt = 4
   Insn 332: point = 1842, n_alt = 3
   Insn 331: point = 1844, n_alt = 0
   Insn 330: point = 1846, n_alt = 0
   Insn 329: point = 1847, n_alt = 7
   Insn 328: point = 1849, n_alt = 0
   Insn 327: point = 1851, n_alt = 4
   Insn 326: point = 1852, n_alt = 3
   Insn 325: point = 1854, n_alt = 0
   Insn 324: point = 1856, n_alt = 0
   Insn 323: point = 1858, n_alt = 0
   Insn 322: point = 1859, n_alt = 0
   Insn 321: point = 1861, n_alt = 0
   Insn 320: point = 1863, n_alt = 0
   Insn 319: point = 1864, n_alt = 8
   Insn 318: point = 1865, n_alt = 7
   Insn 317: point = 1867, n_alt = 0
   Insn 316: point = 1869, n_alt = 4
   Insn 315: point = 1870, n_alt = 3
   Insn 314: point = 1872, n_alt = 0
   Insn 313: point = 1874, n_alt = 0
   Insn 312: point = 1876, n_alt = 0
   Insn 311: point = 1877, n_alt = 0
   Insn 310: point = 1879, n_alt = 0
   Insn 309: point = 1881, n_alt = 0
   Insn 308: point = 1883, n_alt = 0
   Insn 307: point = 1884, n_alt = 1
   Insn 306: point = 1886, n_alt = 0
   Insn 305: point = 1888, n_alt = 0
   Insn 304: point = 1889, n_alt = 8
   Insn 303: point = 1890, n_alt = 7
   Insn 302: point = 1892, n_alt = 0
   Insn 301: point = 1894, n_alt = 4
   Insn 300: point = 1895, n_alt = 3
   Insn 299: point = 1897, n_alt = 0
   Insn 298: point = 1899, n_alt = 0
   Insn 297: point = 1901, n_alt = 0
   Insn 296: point = 1902, n_alt = 0
   Insn 295: point = 1904, n_alt = 0
   Insn 294: point = 1906, n_alt = 0
   Insn 293: point = 1908, n_alt = 0
   Insn 292: point = 1909, n_alt = 1
   Insn 291: point = 1911, n_alt = 0
   Insn 290: point = 1913, n_alt = 0
  BB 32
   Insn 390: point = 1915, n_alt = 4
   Insn 389: point = 1916, n_alt = 9
   Insn 388: point = 1917, n_alt = 0
   Insn 387: point = 1917, n_alt = -2
   Insn 386: point = 1918, n_alt = 7
   Insn 385: point = 1918, n_alt = -2
   Insn 384: point = 1920, n_alt = 2
   Insn 383: point = 1922, n_alt = 7
   Insn 382: point = 1923, n_alt = 8
   Insn 381: point = 1924, n_alt = 7
   Insn 380: point = 1926, n_alt = 3
   Insn 379: point = 1927, n_alt = 3
   Insn 378: point = 1929, n_alt = 0
   Insn 377: point = 1931, n_alt = 0
   Insn 376: point = 1933, n_alt = 0
   Insn 375: point = 1934, n_alt = 0
   Insn 374: point = 1936, n_alt = 0
   Insn 373: point = 1938, n_alt = 0
   Insn 372: point = 1939, n_alt = 8
   Insn 371: point = 1940, n_alt = 7
   Insn 370: point = 1942, n_alt = 3
   Insn 369: point = 1943, n_alt = 3
   Insn 368: point = 1945, n_alt = 0
   Insn 367: point = 1947, n_alt = 0
   Insn 366: point = 1949, n_alt = 0
   Insn 365: point = 1950, n_alt = 0
   Insn 364: point = 1952, n_alt = 0
   Insn 363: point = 1954, n_alt = 0
   Insn 362: point = 1955, n_alt = 8
   Insn 361: point = 1956, n_alt = 7
   Insn 360: point = 1958, n_alt = 3
   Insn 359: point = 1959, n_alt = 3
   Insn 358: point = 1961, n_alt = 0
   Insn 357: point = 1963, n_alt = 0
   Insn 356: point = 1965, n_alt = 0
   Insn 355: point = 1966, n_alt = 0
   Insn 354: point = 1968, n_alt = 0
   Insn 353: point = 1970, n_alt = 0
  BB 30
   Insn 288: point = 1972, n_alt = -1
   Insn 287: point = 1972, n_alt = 0
   Insn 286: point = 1973, n_alt = 0
   Insn 285: point = 1975, n_alt = 3
  BB 29
   Insn 282: point = 1977, n_alt = -1
   Insn 281: point = 1977, n_alt = 1
   Insn 280: point = 1978, n_alt = 7
  BB 28
   Insn 278: point = 1980, n_alt = -1
   Insn 277: point = 1980, n_alt = 1
   Insn 276: point = 1981, n_alt = 2
   Insn 275: point = 1983, n_alt = 7
   Insn 274: point = 1984, n_alt = 7
  BB 27
   Insn 272: point = 1986, n_alt = -1
   Insn 271: point = 1986, n_alt = 0
   Insn 270: point = 1987, n_alt = 0
   Insn 269: point = 1989, n_alt = 3
   Insn 268: point = 1990, n_alt = 8
   Insn 267: point = 1991, n_alt = 1
   Insn 266: point = 1993, n_alt = 7
   Insn 265: point = 1995, n_alt = 4
   Insn 264: point = 1996, n_alt = 1
   Insn 263: point = 1998, n_alt = 7
   Insn 262: point = 2000, n_alt = 0
   Insn 261: point = 2002, n_alt = 4
   Insn 260: point = 2003, n_alt = 3
   Insn 259: point = 2005, n_alt = 0
   Insn 258: point = 2007, n_alt = 0
   Insn 257: point = 2009, n_alt = 0
   Insn 256: point = 2010, n_alt = 0
   Insn 255: point = 2012, n_alt = 0
   Insn 254: point = 2014, n_alt = 0
   Insn 253: point = 2015, n_alt = 7
   Insn 252: point = 2017, n_alt = 0
   Insn 251: point = 2019, n_alt = 4
   Insn 250: point = 2020, n_alt = 3
   Insn 249: point = 2022, n_alt = 0
   Insn 248: point = 2024, n_alt = 0
   Insn 247: point = 2025, n_alt = 8
   Insn 246: point = 2026, n_alt = 1
   Insn 245: point = 2028, n_alt = 7
   Insn 244: point = 2030, n_alt = 4
   Insn 243: point = 2031, n_alt = 1
   Insn 242: point = 2033, n_alt = 7
   Insn 241: point = 2035, n_alt = 0
   Insn 240: point = 2037, n_alt = 4
   Insn 239: point = 2038, n_alt = 3
   Insn 238: point = 2040, n_alt = 0
   Insn 237: point = 2042, n_alt = 0
   Insn 236: point = 2044, n_alt = 0
   Insn 235: point = 2045, n_alt = 0
   Insn 234: point = 2047, n_alt = 0
   Insn 233: point = 2049, n_alt = 0
   Insn 232: point = 2050, n_alt = 7
   Insn 231: point = 2052, n_alt = 0
   Insn 230: point = 2054, n_alt = 4
   Insn 229: point = 2055, n_alt = 3
   Insn 228: point = 2057, n_alt = 0
   Insn 227: point = 2059, n_alt = 0
   Insn 226: point = 2060, n_alt = 1
   Insn 225: point = 2061, n_alt = 0
   Insn 224: point = 2063, n_alt = 0
   Insn 223: point = 2065, n_alt = 4
   Insn 222: point = 2066, n_alt = 3
   Insn 221: point = 2068, n_alt = 0
   Insn 220: point = 2070, n_alt = 0
   Insn 219: point = 2072, n_alt = 0
   Insn 218: point = 2073, n_alt = 0
   Insn 217: point = 2075, n_alt = 0
   Insn 216: point = 2077, n_alt = 0
  BB 25
   Insn 208: point = 2079, n_alt = 1
  BB 23
   Insn 200: point = 2080, n_alt = 1
   Insn 199: point = 2081, n_alt = 0
   Insn 198: point = 2082, n_alt = 0
  BB 22
   Insn 195: point = 2083, n_alt = -1
   Insn 194: point = 2083, n_alt = 0
  BB 21
   Insn 192: point = 2083, n_alt = -1
   Insn 191: point = 2083, n_alt = 0
   Insn 190: point = 2084, n_alt = 0
   Insn 189: point = 2086, n_alt = 3
  BB 19
   Insn 181: point = 2087, n_alt = 1
  BB 18
   Insn 178: point = 2087, n_alt = 0
   Insn 177: point = 2087, n_alt = 3
   Insn 176: point = 2087, n_alt = -2
   Insn 175: point = 2088, n_alt = 2
   Insn 174: point = 2088, n_alt = 2
   Insn 173: point = 2088, n_alt = 2
   Insn 172: point = 2088, n_alt = 2
   Insn 171: point = 2088, n_alt = 3
   Insn 170: point = 2089, n_alt = 0
   Insn 169: point = 2089, n_alt = 3
   Insn 168: point = 2089, n_alt = 2
   Insn 167: point = 2089, n_alt = 4
   Insn 166: point = 2089, n_alt = -2
   Insn 165: point = 2090, n_alt = 3
   Insn 164: point = 2091, n_alt = 0
   Insn 163: point = 2091, n_alt = 3
   Insn 162: point = 2091, n_alt = 2
   Insn 161: point = 2091, n_alt = 4
   Insn 160: point = 2091, n_alt = -2
   Insn 159: point = 2092, n_alt = 3
   Insn 158: point = 2093, n_alt = 0
   Insn 157: point = 2093, n_alt = 3
   Insn 156: point = 2093, n_alt = 2
   Insn 155: point = 2093, n_alt = 4
   Insn 154: point = 2093, n_alt = -2
   Insn 153: point = 2094, n_alt = 3
  BB 17
   Insn 151: point = 2095, n_alt = -1
   Insn 150: point = 2095, n_alt = 0
   Insn 149: point = 2096, n_alt = 0
   Insn 148: point = 2098, n_alt = 3
  BB 150
   Insn 1977: point = 2099, n_alt = -1
  BB 9
   Insn 96: point = 2099, n_alt = -1
   Insn 95: point = 2099, n_alt = 0
   Insn 94: point = 2100, n_alt = 0
   Insn 93: point = 2102, n_alt = 0
   Insn 92: point = 2103, n_alt = 0
  BB 16
   Insn 1911: point = 2103, n_alt = -1
   Insn 142: point = 2103, n_alt = 1
  BB 151
   Insn 1980: point = 2103, n_alt = -1
  BB 11
   Insn 106: point = 2103, n_alt = -1
   Insn 105: point = 2103, n_alt = 0
   Insn 104: point = 2104, n_alt = 0
   Insn 103: point = 2106, n_alt = 0
   Insn 102: point = 2107, n_alt = 0
  BB 15
   Insn 1909: point = 2108, n_alt = -1
   Insn 136: point = 2108, n_alt = 1
  BB 152
   Insn 1983: point = 2109, n_alt = -1
  BB 13
   Insn 114: point = 2110, n_alt = -1
   Insn 113: point = 2110, n_alt = 0
   Insn 112: point = 2111, n_alt = 0
   Insn 111: point = 2113, n_alt = 0
   Insn 110: point = 2114, n_alt = 0
  BB 14
   Insn 1907: point = 2115, n_alt = -1
   Insn 130: point = 2115, n_alt = 1
   Insn 129: point = 2115, n_alt = 8
   Insn 128: point = 2116, n_alt = 7
   Insn 127: point = 2117, n_alt = 4
   Insn 126: point = 2118, n_alt = 3
   Insn 125: point = 2120, n_alt = 0
   Insn 124: point = 2122, n_alt = 1
   Insn 123: point = 2124, n_alt = 0
   Insn 122: point = 2125, n_alt = 0
   Insn 121: point = 2127, n_alt = 0
   Insn 120: point = 2129, n_alt = 1
   Insn 119: point = 2131, n_alt = 0
   Insn 118: point = 2132, n_alt = 1
   Insn 117: point = 2134, n_alt = 1
   Insn 116: point = 2136, n_alt = 0
  BB 12
   Insn 108: point = 2138, n_alt = 1
  BB 10
   Insn 100: point = 2139, n_alt = 1
   Insn 99: point = 2140, n_alt = 0
   Insn 98: point = 2141, n_alt = 0
  BB 8
   Insn 90: point = 2142, n_alt = 1
  BB 148
   Insn 1971: point = 2142, n_alt = -1
  BB 3
   Insn 20: point = 2142, n_alt = -1
   Insn 19: point = 2142, n_alt = 0
   Insn 18: point = 2143, n_alt = 0
   Insn 17: point = 2145, n_alt = 0
   Insn 16: point = 2146, n_alt = 0
  BB 7
   Insn 1905: point = 2147, n_alt = -1
   Insn 84: point = 2147, n_alt = 1
  BB 149
   Insn 1974: point = 2148, n_alt = -1
  BB 5
   Insn 28: point = 2149, n_alt = -1
   Insn 27: point = 2149, n_alt = 0
   Insn 26: point = 2150, n_alt = 0
   Insn 25: point = 2152, n_alt = 0
   Insn 24: point = 2153, n_alt = 0
  BB 6
   Insn 1903: point = 2154, n_alt = -1
   Insn 78: point = 2154, n_alt = 1
   Insn 77: point = 2154, n_alt = 1
   Insn 76: point = 2155, n_alt = 4
   Insn 75: point = 2156, n_alt = 3
   Insn 74: point = 2158, n_alt = 0
   Insn 73: point = 2160, n_alt = 1
   Insn 72: point = 2162, n_alt = 0
   Insn 71: point = 2163, n_alt = 0
   Insn 70: point = 2165, n_alt = 1
   Insn 69: point = 2167, n_alt = 0
   Insn 68: point = 2168, n_alt = 8
   Insn 67: point = 2169, n_alt = 7
   Insn 66: point = 2170, n_alt = 4
   Insn 65: point = 2171, n_alt = 3
   Insn 64: point = 2173, n_alt = 0
   Insn 63: point = 2175, n_alt = 1
   Insn 62: point = 2177, n_alt = 0
   Insn 61: point = 2178, n_alt = 0
   Insn 60: point = 2180, n_alt = 1
   Insn 59: point = 2182, n_alt = 0
   Insn 58: point = 2183, n_alt = 1
   Insn 57: point = 2184, n_alt = 4
   Insn 56: point = 2185, n_alt = 3
   Insn 55: point = 2187, n_alt = 0
   Insn 54: point = 2189, n_alt = 1
   Insn 53: point = 2191, n_alt = 0
   Insn 52: point = 2192, n_alt = 0
   Insn 51: point = 2194, n_alt = 1
   Insn 50: point = 2196, n_alt = 0
   Insn 49: point = 2197, n_alt = 8
   Insn 48: point = 2198, n_alt = 7
   Insn 47: point = 2199, n_alt = 3
   Insn 46: point = 2200, n_alt = 3
   Insn 45: point = 2202, n_alt = 0
   Insn 44: point = 2204, n_alt = 1
   Insn 43: point = 2206, n_alt = 0
   Insn 42: point = 2207, n_alt = 0
   Insn 41: point = 2209, n_alt = 1
   Insn 40: point = 2211, n_alt = 0
   Insn 39: point = 2212, n_alt = 8
   Insn 38: point = 2213, n_alt = 7
   Insn 37: point = 2214, n_alt = 3
   Insn 36: point = 2215, n_alt = 3
   Insn 35: point = 2217, n_alt = 0
   Insn 34: point = 2219, n_alt = 1
   Insn 33: point = 2221, n_alt = 0
   Insn 32: point = 2222, n_alt = 0
   Insn 31: point = 2224, n_alt = 1
   Insn 30: point = 2226, n_alt = 0
  BB 4
   Insn 22: point = 2228, n_alt = 1
  BB 2
   Insn 14: point = 2229, n_alt = 1
   Insn 13: point = 2230, n_alt = 0
   Insn 12: point = 2231, n_alt = 0
   Insn 7: point = 2232, n_alt = 5
   Insn 6: point = 2232, n_alt = 5
   Insn 5: point = 2232, n_alt = 5
   Insn 4: point = 2232, n_alt = 5
   Insn 3: point = 2232, n_alt = 5
   Insn 2: point = 2232, n_alt = 5
 r87: [2223..2224]
 r88: [2218..2222]
 r89: [2218..2219]
 r90: [2216..2217]
 r91: [2212..2215]
 r92: [2208..2209]
 r93: [2203..2207]
 r94: [2203..2204]
 r95: [2201..2202]
 r96: [2197..2200]
 r97: [2193..2194]
 r98: [2188..2192]
 r99: [2188..2189]
 r100: [2186..2187]
 r101: [2183..2185]
 r102: [2179..2180]
 r103: [2174..2178]
 r104: [2174..2175]
 r105: [2172..2173]
 r106: [2168..2171]
 r107: [2164..2165]
 r108: [2159..2163]
 r109: [2159..2160]
 r110: [2157..2158]
 r111: [2154..2156]
 r112: [2133..2134]
 r113: [2126..2132]
 r114: [2128..2129]
 r115: [2126..2127]
 r116: [2121..2125]
 r117: [2121..2122]
 r118: [2119..2120]
 r119: [2115..2118]
 r120: [2095..2096]
 r121: [2083..2084]
 r122: [2074..2075]
 r123: [2069..2073]
 r124: [2069..2070]
 r125: [2067..2068]
 r126: [2064..2066]
 r127: [2056..2057]
 r128: [2053..2055]
 r129: [2032..2050]
 r130: [2046..2047]
 r131: [2041..2045]
 r132: [2041..2042]
 r133: [2039..2040]
 r134: [2036..2038]
 r135: [2032..2033]
 r136: [2027..2031]
 r137: [2027..2028]
 r138: [2021..2022]
 r139: [2018..2020]
 r140: [1997..2015]
 r141: [2011..2012]
 r142: [2006..2010]
 r143: [2006..2007]
 r144: [2004..2005]
 r145: [2001..2003]
 r146: [1997..1998]
 r147: [1992..1996]
 r148: [1992..1993]
 r149: [1986..1987]
 r150: [1980..1981]
 r151: [1972..1973]
 r152: [1910..1911]
 r153: [1903..1909]
 r154: [1905..1906]
 r155: [1903..1904]
 r156: [1898..1902]
 r157: [1898..1899]
 r158: [1896..1897]
 r159: [1893..1895]
 r160: [1885..1886]
 r161: [1878..1884]
 r162: [1880..1881]
 r163: [1878..1879]
 r164: [1873..1877]
 r165: [1873..1874]
 r166: [1871..1872]
 r167: [1868..1870]
 r168: [1860..1861]
 r169: [1855..1859]
 r170: [1855..1856]
 r171: [1853..1854]
 r172: [1850..1852]
 r173: [1836..1847]
 r174: [1843..1844]
 r175: [1840..1842]
 r176: [1836..1837]
 r177: [1831..1835]
 r178: [1831..1832]
 r179: [1829..1830]
 r180: [1826..1828]
 r181: [1824..1825]
 r182: [1967..1968]
 r183: [1962..1966]
 r184: [1962..1963]
 r185: [1960..1961]
 r186: [1957..1959]
 r187: [1951..1952]
 r188: [1946..1950]
 r189: [1946..1947]
 r190: [1944..1945]
 r191: [1941..1943]
 r192: [1935..1936]
 r193: [1930..1934]
 r194: [1930..1931]
 r195: [1928..1929]
 r196: [1925..1927]
 r197: [1919..1920]
 r198: [1810..1812]
 r199: [1808..1809]
 r200: [1803..1807]
 r201: [1803..1804]
 r202: [1763..1777]
 r203: [1773..1774]
 r204: [1768..1772]
 r205: [1768..1769]
 r206: [1766..1767]
 r207: [1760..1765]
 r208: [1760..1762]
 r209: [1756..1757]
 r210: [1749..1750]
 r211: [1744..1748]
 r212: [1744..1745]
 r213: [1742..1743]
 r214: [1738..1741]
 r215: [1732..1733]
 r216: [1727..1731]
 r217: [1727..1728]
 r218: [1725..1726]
 r219: [1721..1724]
 r220: [1716..1717]
 r221: [1713..1715]
 r222: [1705..1706]
 r223: [1702..1704]
 r224: [1694..1695]
 r225: [1692..1693]
 r226: [1689..1691]
 r227: [1681..1682]
 r228: [1679..1680]
 r229: [1676..1678]
 r230: [1668..1669]
 r231: [1651..1667]
 r232: [1663..1664]
 r233: [1658..1662]
 r234: [1658..1659]
 r235: [1656..1657]
 r236: [1653..1655]
 r237: [1651..1652]
 r238: [1648..1650]
 r239: [1642..1643]
 r240: [1625..1641]
 r241: [1637..1638]
 r242: [1632..1636]
 r243: [1632..1633]
 r244: [1630..1631]
 r245: [1627..1629]
 r246: [1625..1626]
 r247: [1622..1624]
 r248: [1616..1617]
 r249: [1614..1615]
 r250: [1607..1611]
 r251: [1607..1608]
 r252: [1567..1581]
 r253: [1577..1578]
 r254: [1572..1576]
 r255: [1572..1573]
 r256: [1570..1571]
 r257: [1564..1569]
 r258: [1564..1566]
 r259: [1560..1561]
 r260: [1553..1554]
 r261: [1548..1552]
 r262: [1548..1549]
 r263: [1546..1547]
 r264: [1542..1545]
 r265: [1536..1537]
 r266: [1531..1535]
 r267: [1531..1532]
 r268: [1529..1530]
 r269: [1525..1528]
 r270: [1517..1519]
 r271: [1507..1511]
 r272: [1507..1508]
 r273: [1505..1506]
 r274: [1502..1504]
 r275: [1493..1495]
 r276: [1481..1487]
 r277: [1483..1484]
 r278: [1481..1482]
 r279: [1479..1480]
 r280: [1476..1478]
 r281: [1468..1469]
 r282: [1465..1467]
 r283: [1455..1459]
 r284: [1455..1456]
 r285: [1453..1454]
 r286: [1450..1452]
 r287: [1442..1443]
 r288: [1439..1441]
 r289: [1427..1433]
 r290: [1429..1430]
 r291: [1427..1428]
 r292: [1425..1426]
 r293: [1422..1424]
 r294: [1414..1415]
 r295: [1397..1413]
 r296: [1409..1410]
 r297: [1404..1408]
 r298: [1404..1405]
 r299: [1402..1403]
 r300: [1399..1401]
 r301: [1397..1398]
 r302: [1395..1396]
 r303: [1369..1392]
 r304: [1388..1389]
 r305: [1371..1387]
 r306: [1383..1384]
 r307: [1378..1382]
 r308: [1378..1379]
 r309: [1376..1377]
 r310: [1373..1375]
 r311: [1371..1372]
 r312: [1369..1370]
 r313: [1324..1368]
 r314: [1364..1365]
 r315: [1362..1363]
 r316: [1360..1361]
 r317: [1343..1359]
 r318: [1355..1356]
 r319: [1350..1354]
 r320: [1350..1351]
 r321: [1348..1349]
 r322: [1345..1347]
 r323: [1343..1344]
 r324: [1326..1342]
 r325: [1338..1339]
 r326: [1333..1337]
 r327: [1333..1334]
 r328: [1331..1332]
 r329: [1328..1330]
 r330: [1326..1327]
 r331: [1324..1325]
 r332: [1318..1319]
 r333: [1309..1310]
 r334: [1307..1308]
 r335: [1305..1306]
 r336: [1302..1304]
 r337: [1296..1297]
 r338: [1291..1295]
 r339: [1291..1292]
 r340: [1289..1290]
 r341: [1286..1288]
 r342: [1283..1285]
 r343: [1278..1279]
 r344: [1273..1277]
 r345: [1273..1274]
 r346: [1271..1272]
 r347: [1267..1270]
 r348: [1263..1264]
 r349: [1258..1262]
 r350: [1258..1259]
 r351: [1256..1257]
 r352: [1252..1255]
 r353: [1226..1227]
 r354: [1223..1225]
 r355: [1202..1220]
 r356: [1216..1217]
 r357: [1211..1215]
 r358: [1211..1212]
 r359: [1209..1210]
 r360: [1206..1208]
 r361: [1202..1203]
 r362: [1197..1201]
 r363: [1197..1198]
 r364: [1191..1192]
 r365: [1186..1190]
 r366: [1186..1187]
 r367: [1184..1185]
 r368: [1181..1183]
 r369: [1179..1180]
 r370: [1174..1175]
 r371: [1169..1173]
 r372: [1169..1170]
 r373: [1167..1168]
 r374: [1161..1166]
 r375: [1161..1163]
 r376: [1135..1136]
 r377: [1130..1134]
 r378: [1130..1131]
 r379: [1128..1129]
 r380: [1125..1127]
 r381: [1106..1124]
 r382: [1120..1121]
 r383: [1115..1119]
 r384: [1115..1116]
 r385: [1113..1114]
 r386: [1110..1112]
 r387: [1106..1107]
 r388: [1101..1102]
 r389: [1096..1100]
 r390: [1096..1097]
 r391: [1094..1095]
 r392: [1079..1093]
 r393: [1089..1090]
 r394: [1084..1088]
 r395: [1084..1085]
 r396: [1082..1083]
 r397: [1074..1081]
 r398: [1074..1076]
 r399: [1052..1053]
 r400: [1047..1051]
 r401: [1047..1048]
 r402: [1045..1046]
 r403: [1042..1044]
 r404: [1038..1039]
 r405: [1033..1037]
 r406: [1033..1034]
 r407: [1031..1032]
 r408: [1028..1030]
 r409: [1024..1025]
 r410: [1021..1023]
 r411: [1000..1018]
 r412: [1014..1015]
 r413: [1009..1013]
 r414: [1009..1010]
 r415: [1007..1008]
 r416: [1004..1006]
 r417: [1000..1001]
 r418: [995..999]
 r419: [995..996]
 r420: [989..990]
 r421: [984..988]
 r422: [984..985]
 r423: [982..983]
 r424: [979..981]
 r425: [977..978]
 r426: [972..973]
 r427: [952..953]
 r428: [947..951]
 r429: [947..948]
 r430: [945..946]
 r431: [942..944]
 r432: [967..968]
 r433: [962..966]
 r434: [962..963]
 r435: [960..961]
 r436: [957..959]
 r437: [925..926]
 r438: [923..924]
 r439: [921..922]
 r440: [868..915]
 r441: [911..912]
 r442: [909..910]
 r443: [867..903]
 r444: [899..900]
 r445: [897..898]
 r446: [895..896]
 r447: [866..891]
 r448: [862..863]
 r449: [860..861]
 r450: [858..859]
 r451: [805..852]
 r452: [848..849]
 r453: [846..847]
 r454: [804..840]
 r455: [836..837]
 r456: [834..835]
 r457: [832..833]
 r458: [803..828]
 r459: [794..795]
 r460: [789..793]
 r461: [789..790]
 r462: [787..788]
 r463: [784..786]
 r464: [782..783]
 r465: [777..778]
 r466: [770..776]
 r467: [772..773]
 r468: [770..771]
 r469: [765..769]
 r470: [765..766]
 r471: [763..764]
 r472: [760..762]
 r473: [734..759]
 r474: [755..756]
 r475: [748..754]
 r476: [750..751]
 r477: [748..749]
 r478: [743..747]
 r479: [743..744]
 r480: [741..742]
 r481: [738..740]
 r482: [734..735]
 r483: [729..730]
 r484: [724..728]
 r485: [724..725]
 r486: [722..723]
 r487: [718..721]
 r488: [696..697]
 r489: [691..695]
 r490: [691..692]
 r491: [689..690]
 r492: [686..688]
 r493: [684..685]
 r494: [679..680]
 r495: [672..678]
 r496: [674..675]
 r497: [672..673]
 r498: [667..671]
 r499: [667..668]
 r500: [665..666]
 r501: [662..664]
 r502: [636..661]
 r503: [657..658]
 r504: [650..656]
 r505: [652..653]
 r506: [650..651]
 r507: [645..649]
 r508: [645..646]
 r509: [643..644]
 r510: [640..642]
 r511: [636..637]
 r512: [631..632]
 r513: [626..630]
 r514: [626..627]
 r515: [624..625]
 r516: [620..623]
 r517: [594..595]
 r518: [589..593]
 r519: [589..590]
 r520: [587..588]
 r521: [584..586]
 r522: [575..576]
 r523: [570..574]
 r524: [570..571]
 r525: [568..569]
 r526: [565..567]
 r527: [535..536]
 r528: [530..534]
 r529: [530..531]
 r530: [528..529]
 r531: [525..527]
 r532: [521..522]
 r533: [516..520]
 r534: [516..517]
 r535: [514..515]
 r536: [511..513]
 r537: [509..510]
 r538: [504..505]
 r539: [499..503]
 r540: [499..500]
 r541: [497..498]
 r542: [494..496]
 r543: [492..493]
 r544: [487..488]
 r545: [482..486]
 r546: [482..483]
 r547: [480..481]
 r548: [477..479]
 r549: [453..454]
 r550: [448..452]
 r551: [448..449]
 r552: [446..447]
 r553: [443..445]
 r554: [441..442]
 r555: [436..437]
 r556: [433..435]
 r557: [412..430]
 r558: [426..427]
 r559: [421..425]
 r560: [421..422]
 r561: [419..420]
 r562: [416..418]
 r563: [412..413]
 r564: [407..411]
 r565: [407..408]
 r566: [401..402]
 r567: [394..400]
 r568: [396..397]
 r569: [394..395]
 r570: [389..393]
 r571: [389..390]
 r572: [387..388]
 r573: [384..386]
 r574: [348..381]
 r575: [377..378]
 r576: [370..376]
 r577: [372..373]
 r578: [370..371]
 r579: [365..369]
 r580: [365..366]
 r581: [363..364]
 r582: [360..362]
 r583: [355..357]
 r584: [352..354]
 r585: [350..351]
 r586: [348..349]
 r587: [345..347]
 r588: [326..344]
 r589: [340..341]
 r590: [335..339]
 r591: [335..336]
 r592: [333..334]
 r593: [330..332]
 r594: [326..327]
 r595: [314..325]
 r596: [321..322]
 r597: [318..320]
 r598: [314..315]
 r599: [312..313]
 r600: [306..307]
 r601: [301..302]
 r602: [294..300]
 r603: [296..297]
 r604: [294..295]
 r605: [289..293]
 r606: [289..290]
 r607: [287..288]
 r608: [284..286]
 r610: [276..279]
 r611: [270..271]
 r612: [265..266]
 r613: [258..264]
 r614: [260..261]
 r615: [258..259]
 r616: [253..257]
 r617: [253..254]
 r618: [251..252]
 r619: [248..250]
 r621: [238..241]
 r622: [172..173]
 r623: [167..171]
 r624: [167..168]
 r625: [165..166]
 r626: [162..164]
 r629: [150..153]
 r630: [147..148]
 r631: [144..146]
 r632: [142..143]
 r633: [126..141]
 r634: [137..138]
 r635: [132..136]
 r636: [132..133]
 r637: [130..131]
 r638: [123..129]
 r639: [123..125]
 r640: [226..227]
 r641: [221..225]
 r642: [221..222]
 r643: [219..220]
 r644: [216..218]
 r647: [204..207]
 r648: [201..202]
 r649: [198..200]
 r650: [196..197]
 r651: [180..195]
 r652: [191..192]
 r653: [186..190]
 r654: [186..187]
 r655: [184..185]
 r656: [177..183]
 r657: [177..179]
 r658: [93..94]
 r659: [88..92]
 r660: [88..89]
 r661: [86..87]
 r662: [83..85]
 r663: [75..79]
 r664: [75..76]
 r665: [73..74]
 r666: [65..66]
 r667: [60..64]
 r668: [60..61]
 r669: [58..59]
 r670: [55..57]
 r671: [51..52]
 r672: [46..50]
 r673: [46..47]
 r674: [44..45]
 r675: [41..43]
 r676: [31..35]
 r677: [31..32]
 r678: [29..30]
 r679: [22..23]
 r680: [17..21]
 r681: [17..18]
 r682: [15..16]
 r683: [12..14]
 r684: [583..583] [579..581]
 r685: [564..564] [560..562]
 r686: [73..97] [55..70]
 r687: [29..40] [12..27]
 r688: [2229..2231]
 r689: [2142..2230]
 r690: [2142..2143]
 r691: [2149..2150]
 r692: [2099..2100]
 r693: [2139..2141]
 r694: [2103..2140]
 r695: [2103..2104]
 r696: [2110..2111]
 r697: [1235..1236]
 r698: [2080..2082]
 r699: [1239..2081]
 r700: [1239..1240]
 r701: [1246..1247]
 r702: [1822..1823]
 r703: [1917..1918]
 r704: [1316..1317]
 r705: [1144..1145]
 r706: [1232..1234]
 r707: [1148..1233]
 r708: [1148..1149]
 r709: [1155..1156]
 r710: [1141..1143]
 r711: [1061..1142]
 r712: [1061..1062]
 r713: [1068..1069]
 r714: [603..604]
 r715: [1058..1060]
 r716: [929..1059]
 r717: [929..930]
 r718: [936..937]
 r719: [800..802]
 r720: [705..801]
 r721: [705..706]
 r722: [712..713]
 r723: [702..704]
 r724: [607..703]
 r725: [607..608]
 r726: [614..615]
 r727: [600..602]
 r728: [548..601]
 r729: [548..549]
 r730: [555..556]
 r731: [545..547]
 r732: [103..546]
 r733: [103..104]
 r734: [541..543]
 r735: [464..542]
 r736: [464..465]
 r737: [471..472]
 r738: [459..461]
 r739: [110..460]
 r740: [110..111]
 r741: [117..118]
 r742: [280..305]
 r743: [242..269]
 r744: [100..102]
 r745: [0..101]
 r746: [0..1]
 r747: [7..8]
 r748: [71..82]
 r749: [2144..2145]
 r750: [2151..2152]
 r751: [2225..2226]
 r752: [2220..2221]
 r753: [2212..2214]
 r754: [2212..2213]
 r755: [2210..2211]
 r756: [2205..2206]
 r757: [2197..2199]
 r758: [2197..2198]
 r759: [2195..2196]
 r760: [2190..2191]
 r761: [2183..2184]
 r762: [2181..2182]
 r763: [2176..2177]
 r764: [2168..2170]
 r765: [2168..2169]
 r766: [2166..2167]
 r767: [2161..2162]
 r768: [2154..2155]
 r769: [2101..2102]
 r770: [2105..2106]
 r771: [2112..2113]
 r772: [2135..2136]
 r773: [2130..2131]
 r774: [2123..2124]
 r775: [2115..2117]
 r776: [2115..2116]
 r777: [2097..2098]
 r778: [2093..2094]
 r779: [2091..2092]
 r780: [2089..2090]
 r781: [2087..2088]
 r782: [1237..1238]
 r783: [2085..2086]
 r784: [1241..1242]
 r785: [1248..1249]
 r786: [2076..2077]
 r787: [2071..2072]
 r788: [2062..2065]
 r789: [2062..2063]
 r790: [2060..2061]
 r791: [2058..2059]
 r792: [2051..2054]
 r793: [2051..2052]
 r794: [2048..2049]
 r795: [2043..2044]
 r796: [2034..2037]
 r797: [2034..2035]
 r798: [2029..2030]
 r799: [2025..2026]
 r800: [2023..2024]
 r801: [2016..2019]
 r802: [2016..2017]
 r803: [2013..2014]
 r804: [2008..2009]
 r805: [1999..2002]
 r806: [1999..2000]
 r807: [1994..1995]
 r808: [1990..1991]
 r809: [1988..1989]
 r810: [1982..1984]
 r811: [1982..1983]
 r812: [1977..1978]
 r813: [1974..1975]
 r814: [1912..1913]
 r815: [1907..1908]
 r816: [1900..1901]
 r817: [1891..1894]
 r818: [1891..1892]
 r819: [1889..1890]
 r820: [1887..1888]
 r821: [1882..1883]
 r822: [1875..1876]
 r823: [1866..1869]
 r824: [1866..1867]
 r825: [1864..1865]
 r826: [1862..1863]
 r827: [1857..1858]
 r828: [1848..1851]
 r829: [1848..1849]
 r830: [1845..1846]
 r831: [1838..1841]
 r832: [1838..1839]
 r833: [1833..1834]
 r834: [1826..1827]
 r835: [1820..1821]
 r836: [1969..1970]
 r837: [1964..1965]
 r838: [1957..1958]
 r839: [1955..1956]
 r840: [1953..1954]
 r841: [1948..1949]
 r842: [1941..1942]
 r843: [1939..1940]
 r844: [1937..1938]
 r845: [1932..1933]
 r846: [1925..1926]
 r847: [1923..1924]
 r848: [1921..1922]
 r849: [1915..1916]
 r850: [1815..1816]
 r851: [1817..1818]
 r852: [1813..1814]
 r853: [1810..1811]
 r854: [1805..1806]
 r855: [1801..1802]
 r856: [1783..1800]
 r857: [1791..1799]
 r858: [1789..1798] [1778..1786]
 r859: [1791..1792]
 r860: [1796..1797]
 r861: [1785..1795]
 r862: [1787..1788]
 r863: [1780..1781]
 r864: [1775..1776]
 r865: [1770..1771]
 r866: [1763..1764]
 r867: [1760..1761]
 r868: [1758..1759]
 r869: [1754..1755]
 r870: [1751..1752]
 r871: [1746..1747]
 r872: [1738..1740]
 r873: [1738..1739]
 r874: [1734..1735]
 r875: [1729..1730]
 r876: [1721..1723]
 r877: [1721..1722]
 r878: [1718..1719]
 r879: [1711..1714]
 r880: [1711..1712]
 r881: [1709..1710]
 r882: [1707..1708]
 r883: [1700..1703]
 r884: [1700..1701]
 r885: [1698..1699]
 r886: [1696..1697]
 r887: [1687..1690]
 r888: [1687..1688]
 r889: [1685..1686]
 r890: [1683..1684]
 r891: [1674..1677]
 r892: [1674..1675]
 r893: [1672..1673]
 r894: [1670..1671]
 r895: [1665..1666]
 r896: [1660..1661]
 r897: [1653..1654]
 r898: [1646..1647]
 r899: [1648..1649]
 r900: [1644..1645]
 r901: [1639..1640]
 r902: [1634..1635]
 r903: [1627..1628]
 r904: [1620..1621]
 r905: [1622..1623]
 r906: [1618..1619]
 r907: [1609..1610]
 r908: [1605..1606]
 r909: [1587..1604]
 r910: [1595..1603]
 r911: [1593..1602] [1582..1590]
 r912: [1595..1596]
 r913: [1600..1601]
 r914: [1589..1599]
 r915: [1591..1592]
 r916: [1584..1585]
 r917: [1579..1580]
 r918: [1574..1575]
 r919: [1567..1568]
 r920: [1564..1565]
 r921: [1562..1563]
 r922: [1558..1559]
 r923: [1555..1556]
 r924: [1550..1551]
 r925: [1542..1544]
 r926: [1542..1543]
 r927: [1538..1539]
 r928: [1533..1534]
 r929: [1525..1527]
 r930: [1525..1526]
 r931: [1522..1523]
 r932: [1520..1521]
 r933: [1516..1518] [1512..1513]
 r934: [1514..1515]
 r935: [1509..1510]
 r936: [1500..1503]
 r937: [1500..1501]
 r938: [1498..1499]
 r939: [1496..1497]
 r940: [1492..1494] [1488..1489]
 r941: [1490..1491]
 r942: [1485..1486]
 r943: [1474..1477]
 r944: [1474..1475]
 r945: [1472..1473]
 r946: [1470..1471]
 r947: [1464..1466] [1460..1461]
 r948: [1462..1463]
 r949: [1457..1458]
 r950: [1448..1451]
 r951: [1448..1449]
 r952: [1446..1447]
 r953: [1444..1445]
 r954: [1438..1440] [1434..1435]
 r955: [1436..1437]
 r956: [1431..1432]
 r957: [1420..1423]
 r958: [1420..1421]
 r959: [1418..1419]
 r960: [1416..1417]
 r961: [1411..1412]
 r962: [1406..1407]
 r963: [1399..1400]
 r964: [1390..1391]
 r965: [1385..1386]
 r966: [1380..1381]
 r967: [1373..1374]
 r968: [1366..1367]
 r969: [1357..1358]
 r970: [1352..1353]
 r971: [1345..1346]
 r972: [1340..1341]
 r973: [1335..1336]
 r974: [1328..1329]
 r975: [1322..1323]
 r976: [1320..1321]
 r977: [1314..1315]
 r978: [1311..1313]
 r979: [1311..1312]
 r980: [1300..1301]
 r981: [1302..1303]
 r982: [1298..1299]
 r983: [1293..1294]
 r984: [1286..1287]
 r985: [1283..1284]
 r986: [1280..1281]
 r987: [1275..1276]
 r988: [1267..1269]
 r989: [1267..1268]
 r990: [1265..1266]
 r991: [1260..1261]
 r992: [1252..1254]
 r993: [1252..1253]
 r994: [1146..1147]
 r995: [1150..1151]
 r996: [1157..1158]
 r997: [1228..1229]
 r998: [1221..1224]
 r999: [1221..1222]
 r1000: [1218..1219]
 r1001: [1213..1214]
 r1002: [1204..1207]
 r1003: [1204..1205]
 r1004: [1199..1200]
 r1005: [1195..1196]
 r1006: [1193..1194]
 r1007: [1188..1189]
 r1008: [1181..1182]
 r1009: [1176..1177]
 r1010: [1171..1172]
 r1011: [1164..1165]
 r1012: [1161..1162]
 r1013: [1063..1064]
 r1014: [1070..1071]
 r1015: [1137..1138]
 r1016: [1132..1133]
 r1017: [1125..1126]
 r1018: [1122..1123]
 r1019: [1117..1118]
 r1020: [1108..1111]
 r1021: [1108..1109]
 r1022: [1103..1104]
 r1023: [1098..1099]
 r1024: [1091..1092]
 r1025: [1086..1087]
 r1026: [1077..1080]
 r1027: [1077..1078]
 r1028: [1074..1075]
 r1029: [605..606]
 r1030: [931..932]
 r1031: [938..939]
 r1032: [1054..1055]
 r1033: [1049..1050]
 r1034: [1042..1043]
 r1035: [1040..1041]
 r1036: [1035..1036]
 r1037: [1028..1029]
 r1038: [1026..1027]
 r1039: [1019..1022]
 r1040: [1019..1020]
 r1041: [1016..1017]
 r1042: [1011..1012]
 r1043: [1002..1005]
 r1044: [1002..1003]
 r1045: [997..998]
 r1046: [993..994]
 r1047: [991..992]
 r1048: [986..987]
 r1049: [979..980]
 r1050: [974..975]
 r1051: [954..955]
 r1052: [949..950]
 r1053: [942..943]
 r1054: [969..970]
 r1055: [964..965]
 r1056: [957..958]
 r1057: [927..928]
 r1058: [919..920]
 r1059: [916..918]
 r1060: [916..917]
 r1061: [913..914]
 r1062: [907..908]
 r1063: [904..906]
 r1064: [904..905]
 r1065: [901..902]
 r1066: [892..894]
 r1067: [892..893]
 r1068: [864..865]
 r1069: [856..857]
 r1070: [853..855]
 r1071: [853..854]
 r1072: [850..851]
 r1073: [844..845]
 r1074: [841..843]
 r1075: [841..842]
 r1076: [838..839]
 r1077: [829..831]
 r1078: [829..830]
 r1079: [707..708]
 r1080: [714..715]
 r1081: [796..797]
 r1082: [791..792]
 r1083: [784..785]
 r1084: [779..780]
 r1085: [774..775]
 r1086: [767..768]
 r1087: [760..761]
 r1088: [757..758]
 r1089: [752..753]
 r1090: [745..746]
 r1091: [736..739]
 r1092: [736..737]
 r1093: [731..732]
 r1094: [726..727]
 r1095: [718..720]
 r1096: [718..719]
 r1097: [609..610]
 r1098: [616..617]
 r1099: [698..699]
 r1100: [693..694]
 r1101: [686..687]
 r1102: [681..682]
 r1103: [676..677]
 r1104: [669..670]
 r1105: [662..663]
 r1106: [659..660]
 r1107: [654..655]
 r1108: [647..648]
 r1109: [638..641]
 r1110: [638..639]
 r1111: [633..634]
 r1112: [628..629]
 r1113: [620..622]
 r1114: [620..621]
 r1115: [550..551]
 r1116: [557..558]
 r1117: [596..597]
 r1118: [591..592]
 r1119: [584..585]
 r1120: [577..578]
 r1121: [572..573]
 r1122: [565..566]
 r1123: [105..106]
 r1124: [466..467]
 r1125: [473..474]
 r1126: [537..538]
 r1127: [532..533]
 r1128: [525..526]
 r1129: [523..524]
 r1130: [518..519]
 r1131: [511..512]
 r1132: [506..507]
 r1133: [501..502]
 r1134: [494..495]
 r1135: [489..490]
 r1136: [484..485]
 r1137: [477..478]
 r1138: [112..113]
 r1139: [119..120]
 r1140: [455..456]
 r1141: [450..451]
 r1142: [443..444]
 r1143: [438..439]
 r1144: [431..434]
 r1145: [431..432]
 r1146: [428..429]
 r1147: [423..424]
 r1148: [414..417]
 r1149: [414..415]
 r1150: [409..410]
 r1151: [405..406]
 r1152: [403..404]
 r1153: [398..399]
 r1154: [391..392]
 r1155: [382..385]
 r1156: [382..383]
 r1157: [379..380]
 r1158: [374..375]
 r1159: [367..368]
 r1160: [358..361]
 r1161: [358..359]
 r1162: [355..356]
 r1163: [352..353]
 r1164: [345..346]
 r1165: [342..343]
 r1166: [337..338]
 r1167: [328..331]
 r1168: [328..329]
 r1169: [323..324]
 r1170: [316..319]
 r1171: [316..317]
 r1172: [310..311]
 r1173: [308..309]
 r1174: [303..304]
 r1175: [298..299]
 r1176: [291..292]
 r1177: [284..285]
 r1178: [274..275]
 r1179: [272..273]
 r1180: [267..268]
 r1181: [262..263]
 r1182: [255..256]
 r1183: [246..249]
 r1184: [246..247]
 r1185: [236..237]
 r1186: [234..235]
 r1187: [174..175]
 r1188: [169..170]
 r1189: [162..163]
 r1190: [157..158]
 r1191: [154..155]
 r1192: [144..145]
 r1193: [139..140]
 r1194: [134..135]
 r1195: [123..124]
 r1196: [231..232]
 r1197: [228..229]
 r1198: [223..224]
 r1199: [216..217]
 r1200: [211..212]
 r1201: [208..209]
 r1202: [198..199]
 r1203: [193..194]
 r1204: [188..189]
 r1205: [177..178]
 r1206: [2..3]
 r1207: [9..10]
 r1208: [95..96]
 r1209: [90..91]
 r1210: [83..84]
 r1211: [80..81]
 r1212: [77..78]
 r1213: [67..68]
 r1214: [62..63]
 r1215: [55..56]
 r1216: [53..54]
 r1217: [48..49]
 r1218: [41..42]
 r1219: [36..37]
 r1220: [38..39]
 r1221: [33..34]
 r1222: [24..25]
 r1223: [19..20]
 r1224: [12..13]
 r1225: [1793..1794]
 r1226: [1782..1784]
 r1227: [1612..1613]
 r1228: [1597..1598]
 r1229: [1586..1588]
 r1230: [1393..1394]
 r1231: [889..890]
 r1232: [887..888]
 r1233: [885..886]
 r1234: [883..884]
 r1235: [881..882]
 r1236: [879..880]
 r1237: [877..878]
 r1238: [875..876]
 r1239: [873..874]
 r1240: [871..872]
 r1241: [869..870]
 r1242: [826..827]
 r1243: [824..825]
 r1244: [822..823]
 r1245: [820..821]
 r1246: [818..819]
 r1247: [816..817]
 r1248: [814..815]
 r1249: [812..813]
 r1250: [810..811]
 r1251: [808..809]
 r1252: [806..807]
 r1253: [282..283]
 r1254: [276..277]
 r1255: [244..245]
 r1256: [238..239]
 r1257: [160..161]
 r1258: [149..151]
 r1259: [126..127]
 r1260: [214..215]
 r1261: [203..205]
 r1262: [180..181]
 r1263: [152..156]
 r1264: [128..159]
 r1265: [240..243]
 r1266: [278..281]
 r1267: [206..210]
 r1268: [182..213]
Compressing live ranges: from 2232 to 1800 - 80%
Ranges after the compression:
 r87: [1794..1795]
 r88: [1790..1793]
 r89: [1790..1791]
 r90: [1788..1789]
 r91: [1786..1787]
 r92: [1782..1783]
 r93: [1778..1781]
 r94: [1778..1779]
 r95: [1776..1777]
 r96: [1774..1775]
 r97: [1770..1771]
 r98: [1766..1769]
 r99: [1766..1767]
 r100: [1764..1765]
 r101: [1762..1763]
 r102: [1758..1759]
 r103: [1754..1757]
 r104: [1754..1755]
 r105: [1752..1753]
 r106: [1750..1751]
 r107: [1746..1747]
 r108: [1742..1745]
 r109: [1742..1743]
 r110: [1740..1741]
 r111: [1738..1739]
 r112: [1724..1725]
 r113: [1718..1723]
 r114: [1720..1721]
 r115: [1718..1719]
 r116: [1714..1717]
 r117: [1714..1715]
 r118: [1712..1713]
 r119: [1710..1711]
 r120: [1694..1695]
 r121: [1682..1683]
 r122: [1676..1677]
 r123: [1672..1675]
 r124: [1672..1673]
 r125: [1670..1671]
 r126: [1668..1669]
 r127: [1660..1661]
 r128: [1658..1659]
 r129: [1640..1655]
 r130: [1652..1653]
 r131: [1648..1651]
 r132: [1648..1649]
 r133: [1646..1647]
 r134: [1644..1645]
 r135: [1640..1641]
 r136: [1636..1639]
 r137: [1636..1637]
 r138: [1630..1631]
 r139: [1628..1629]
 r140: [1610..1625]
 r141: [1622..1623]
 r142: [1618..1621]
 r143: [1618..1619]
 r144: [1616..1617]
 r145: [1614..1615]
 r146: [1610..1611]
 r147: [1606..1609]
 r148: [1606..1607]
 r149: [1600..1601]
 r150: [1596..1597]
 r151: [1590..1591]
 r152: [1536..1537]
 r153: [1530..1535]
 r154: [1532..1533]
 r155: [1530..1531]
 r156: [1526..1529]
 r157: [1526..1527]
 r158: [1524..1525]
 r159: [1522..1523]
 r160: [1514..1515]
 r161: [1508..1513]
 r162: [1510..1511]
 r163: [1508..1509]
 r164: [1504..1507]
 r165: [1504..1505]
 r166: [1502..1503]
 r167: [1500..1501]
 r168: [1492..1493]
 r169: [1488..1491]
 r170: [1488..1489]
 r171: [1486..1487]
 r172: [1484..1485]
 r173: [1472..1481]
 r174: [1478..1479]
 r175: [1476..1477]
 r176: [1472..1473]
 r177: [1468..1471]
 r178: [1468..1469]
 r179: [1466..1467]
 r180: [1464..1465]
 r181: [1462..1463]
 r182: [1586..1587]
 r183: [1582..1585]
 r184: [1582..1583]
 r185: [1580..1581]
 r186: [1578..1579]
 r187: [1572..1573]
 r188: [1568..1571]
 r189: [1568..1569]
 r190: [1566..1567]
 r191: [1564..1565]
 r192: [1558..1559]
 r193: [1554..1557]
 r194: [1554..1555]
 r195: [1552..1553]
 r196: [1550..1551]
 r197: [1544..1545]
 r198: [1450..1451]
 r199: [1448..1449]
 r200: [1444..1447]
 r201: [1444..1445]
 r202: [1416..1427]
 r203: [1424..1425]
 r204: [1420..1423]
 r205: [1420..1421]
 r206: [1418..1419]
 r207: [1414..1417]
 r208: [1414..1415]
 r209: [1410..1411]
 r210: [1404..1405]
 r211: [1400..1403]
 r212: [1400..1401]
 r213: [1398..1399]
 r214: [1396..1397]
 r215: [1392..1393]
 r216: [1388..1391]
 r217: [1388..1389]
 r218: [1386..1387]
 r219: [1384..1385]
 r220: [1380..1381]
 r221: [1378..1379]
 r222: [1370..1371]
 r223: [1368..1369]
 r224: [1360..1361]
 r225: [1358..1359]
 r226: [1356..1357]
 r227: [1348..1349]
 r228: [1346..1347]
 r229: [1344..1345]
 r230: [1336..1337]
 r231: [1322..1335]
 r232: [1332..1333]
 r233: [1328..1331]
 r234: [1328..1329]
 r235: [1326..1327]
 r236: [1324..1325]
 r237: [1322..1323]
 r238: [1320..1321]
 r239: [1314..1315]
 r240: [1300..1313]
 r241: [1310..1311]
 r242: [1306..1309]
 r243: [1306..1307]
 r244: [1304..1305]
 r245: [1302..1303]
 r246: [1300..1301]
 r247: [1298..1299]
 r248: [1292..1293]
 r249: [1290..1291]
 r250: [1284..1287]
 r251: [1284..1285]
 r252: [1256..1267]
 r253: [1264..1265]
 r254: [1260..1263]
 r255: [1260..1261]
 r256: [1258..1259]
 r257: [1254..1257]
 r258: [1254..1255]
 r259: [1250..1251]
 r260: [1244..1245]
 r261: [1240..1243]
 r262: [1240..1241]
 r263: [1238..1239]
 r264: [1236..1237]
 r265: [1232..1233]
 r266: [1228..1231]
 r267: [1228..1229]
 r268: [1226..1227]
 r269: [1224..1225]
 r270: [1218..1219]
 r271: [1210..1213]
 r272: [1210..1211]
 r273: [1208..1209]
 r274: [1206..1207]
 r275: [1198..1199]
 r276: [1188..1193]
 r277: [1190..1191]
 r278: [1188..1189]
 r279: [1186..1187]
 r280: [1184..1185]
 r281: [1176..1177]
 r282: [1174..1175]
 r283: [1166..1169]
 r284: [1166..1167]
 r285: [1164..1165]
 r286: [1162..1163]
 r287: [1154..1155]
 r288: [1152..1153]
 r289: [1142..1147]
 r290: [1144..1145]
 r291: [1142..1143]
 r292: [1140..1141]
 r293: [1138..1139]
 r294: [1130..1131]
 r295: [1116..1129]
 r296: [1126..1127]
 r297: [1122..1125]
 r298: [1122..1123]
 r299: [1120..1121]
 r300: [1118..1119]
 r301: [1116..1117]
 r302: [1114..1115]
 r303: [1092..1111]
 r304: [1108..1109]
 r305: [1094..1107]
 r306: [1104..1105]
 r307: [1100..1103]
 r308: [1100..1101]
 r309: [1098..1099]
 r310: [1096..1097]
 r311: [1094..1095]
 r312: [1092..1093]
 r313: [1054..1091]
 r314: [1088..1089]
 r315: [1086..1087]
 r316: [1084..1085]
 r317: [1070..1083]
 r318: [1080..1081]
 r319: [1076..1079]
 r320: [1076..1077]
 r321: [1074..1075]
 r322: [1072..1073]
 r323: [1070..1071]
 r324: [1056..1069]
 r325: [1066..1067]
 r326: [1062..1065]
 r327: [1062..1063]
 r328: [1060..1061]
 r329: [1058..1059]
 r330: [1056..1057]
 r331: [1054..1055]
 r332: [1048..1049]
 r333: [1040..1041]
 r334: [1038..1039]
 r335: [1036..1037]
 r336: [1034..1035]
 r337: [1028..1029]
 r338: [1024..1027]
 r339: [1024..1025]
 r340: [1022..1023]
 r341: [1020..1021]
 r342: [1018..1019]
 r343: [1014..1015]
 r344: [1010..1013]
 r345: [1010..1011]
 r346: [1008..1009]
 r347: [1006..1007]
 r348: [1002..1003]
 r349: [998..1001]
 r350: [998..999]
 r351: [996..997]
 r352: [994..995]
 r353: [976..977]
 r354: [974..975]
 r355: [956..971]
 r356: [968..969]
 r357: [964..967]
 r358: [964..965]
 r359: [962..963]
 r360: [960..961]
 r361: [956..957]
 r362: [952..955]
 r363: [952..953]
 r364: [946..947]
 r365: [942..945]
 r366: [942..943]
 r367: [940..941]
 r368: [938..939]
 r369: [936..937]
 r370: [932..933]
 r371: [928..931]
 r372: [928..929]
 r373: [926..927]
 r374: [922..925]
 r375: [922..923]
 r376: [904..905]
 r377: [900..903]
 r378: [900..901]
 r379: [898..899]
 r380: [896..897]
 r381: [880..895]
 r382: [892..893]
 r383: [888..891]
 r384: [888..889]
 r385: [886..887]
 r386: [884..885]
 r387: [880..881]
 r388: [876..877]
 r389: [872..875]
 r390: [872..873]
 r391: [870..871]
 r392: [858..869]
 r393: [866..867]
 r394: [862..865]
 r395: [862..863]
 r396: [860..861]
 r397: [854..859]
 r398: [854..855]
 r399: [840..841]
 r400: [836..839]
 r401: [836..837]
 r402: [834..835]
 r403: [832..833]
 r404: [828..829]
 r405: [824..827]
 r406: [824..825]
 r407: [822..823]
 r408: [820..821]
 r409: [816..817]
 r410: [814..815]
 r411: [796..811]
 r412: [808..809]
 r413: [804..807]
 r414: [804..805]
 r415: [802..803]
 r416: [800..801]
 r417: [796..797]
 r418: [792..795]
 r419: [792..793]
 r420: [786..787]
 r421: [782..785]
 r422: [782..783]
 r423: [780..781]
 r424: [778..779]
 r425: [776..777]
 r426: [772..773]
 r427: [756..757]
 r428: [752..755]
 r429: [752..753]
 r430: [750..751]
 r431: [748..749]
 r432: [768..769]
 r433: [764..767]
 r434: [764..765]
 r435: [762..763]
 r436: [760..761]
 r437: [736..737]
 r438: [734..735]
 r439: [732..733]
 r440: [686..727]
 r441: [724..725]
 r442: [722..723]
 r443: [686..717]
 r444: [714..715]
 r445: [712..713]
 r446: [710..711]
 r447: [686..707]
 r448: [682..683]
 r449: [680..681]
 r450: [678..679]
 r451: [632..673]
 r452: [670..671]
 r453: [668..669]
 r454: [632..663]
 r455: [660..661]
 r456: [658..659]
 r457: [656..657]
 r458: [632..653]
 r459: [626..627]
 r460: [622..625]
 r461: [622..623]
 r462: [620..621]
 r463: [618..619]
 r464: [616..617]
 r465: [612..613]
 r466: [606..611]
 r467: [608..609]
 r468: [606..607]
 r469: [602..605]
 r470: [602..603]
 r471: [600..601]
 r472: [598..599]
 r473: [576..597]
 r474: [594..595]
 r475: [588..593]
 r476: [590..591]
 r477: [588..589]
 r478: [584..587]
 r479: [584..585]
 r480: [582..583]
 r481: [580..581]
 r482: [576..577]
 r483: [572..573]
 r484: [568..571]
 r485: [568..569]
 r486: [566..567]
 r487: [564..565]
 r488: [550..551]
 r489: [546..549]
 r490: [546..547]
 r491: [544..545]
 r492: [542..543]
 r493: [540..541]
 r494: [536..537]
 r495: [530..535]
 r496: [532..533]
 r497: [530..531]
 r498: [526..529]
 r499: [526..527]
 r500: [524..525]
 r501: [522..523]
 r502: [500..521]
 r503: [518..519]
 r504: [512..517]
 r505: [514..515]
 r506: [512..513]
 r507: [508..511]
 r508: [508..509]
 r509: [506..507]
 r510: [504..505]
 r511: [500..501]
 r512: [496..497]
 r513: [492..495]
 r514: [492..493]
 r515: [490..491]
 r516: [488..489]
 r517: [470..471]
 r518: [466..469]
 r519: [466..467]
 r520: [464..465]
 r521: [462..463]
 r522: [455..456]
 r523: [451..454]
 r524: [451..452]
 r525: [449..450]
 r526: [447..448]
 r527: [428..429]
 r528: [424..427]
 r529: [424..425]
 r530: [422..423]
 r531: [420..421]
 r532: [416..417]
 r533: [412..415]
 r534: [412..413]
 r535: [410..411]
 r536: [408..409]
 r537: [406..407]
 r538: [402..403]
 r539: [398..401]
 r540: [398..399]
 r541: [396..397]
 r542: [394..395]
 r543: [392..393]
 r544: [388..389]
 r545: [384..387]
 r546: [384..385]
 r547: [382..383]
 r548: [380..381]
 r549: [366..367]
 r550: [362..365]
 r551: [362..363]
 r552: [360..361]
 r553: [358..359]
 r554: [356..357]
 r555: [352..353]
 r556: [350..351]
 r557: [332..347]
 r558: [344..345]
 r559: [340..343]
 r560: [340..341]
 r561: [338..339]
 r562: [336..337]
 r563: [332..333]
 r564: [328..331]
 r565: [328..329]
 r566: [322..323]
 r567: [316..321]
 r568: [318..319]
 r569: [316..317]
 r570: [312..315]
 r571: [312..313]
 r572: [310..311]
 r573: [308..309]
 r574: [278..305]
 r575: [302..303]
 r576: [296..301]
 r577: [298..299]
 r578: [296..297]
 r579: [292..295]
 r580: [292..293]
 r581: [290..291]
 r582: [288..289]
 r583: [284..285]
 r584: [282..283]
 r585: [280..281]
 r586: [278..279]
 r587: [276..277]
 r588: [260..275]
 r589: [272..273]
 r590: [268..271]
 r591: [268..269]
 r592: [266..267]
 r593: [264..265]
 r594: [260..261]
 r595: [250..259]
 r596: [256..257]
 r597: [254..255]
 r598: [250..251]
 r599: [248..249]
 r600: [242..243]
 r601: [238..239]
 r602: [232..237]
 r603: [234..235]
 r604: [232..233]
 r605: [228..231]
 r606: [228..229]
 r607: [226..227]
 r608: [224..225]
 r610: [216..219]
 r611: [210..211]
 r612: [206..207]
 r613: [200..205]
 r614: [202..203]
 r615: [200..201]
 r616: [196..199]
 r617: [196..197]
 r618: [194..195]
 r619: [192..193]
 r621: [182..185]
 r622: [128..129]
 r623: [124..127]
 r624: [124..125]
 r625: [122..123]
 r626: [120..121]
 r629: [110..113]
 r630: [108..109]
 r631: [106..107]
 r632: [104..105]
 r633: [90..103]
 r634: [100..101]
 r635: [96..99]
 r636: [96..97]
 r637: [94..95]
 r638: [88..93]
 r639: [88..89]
 r640: [172..173]
 r641: [168..171]
 r642: [168..169]
 r643: [166..167]
 r644: [164..165]
 r647: [154..157]
 r648: [152..153]
 r649: [150..151]
 r650: [148..149]
 r651: [134..147]
 r652: [144..145]
 r653: [140..143]
 r654: [140..141]
 r655: [138..139]
 r656: [132..137]
 r657: [132..133]
 r658: [70..71]
 r659: [66..69]
 r660: [66..67]
 r661: [64..65]
 r662: [62..63]
 r663: [56..59]
 r664: [56..57]
 r665: [54..55]
 r666: [50..51]
 r667: [46..49]
 r668: [46..47]
 r669: [44..45]
 r670: [42..43]
 r671: [38..39]
 r672: [34..37]
 r673: [34..35]
 r674: [32..33]
 r675: [30..31]
 r676: [22..25]
 r677: [22..23]
 r678: [20..21]
 r679: [16..17]
 r680: [12..15]
 r681: [12..13]
 r682: [10..11]
 r683: [8..9]
 r684: [459..461]
 r685: [444..446]
 r686: [42..73]
 r687: [8..29]
 r688: [1798..1799]
 r689: [1730..1799]
 r690: [1730..1731]
 r691: [1734..1735]
 r692: [1698..1699]
 r693: [1728..1729]
 r694: [1702..1729]
 r695: [1702..1703]
 r696: [1706..1707]
 r697: [982..983]
 r698: [1680..1681]
 r699: [986..1681]
 r700: [986..987]
 r701: [990..991]
 r702: [1460..1461]
 r703: [1542..1543]
 r704: [1046..1047]
 r705: [910..911]
 r706: [980..981]
 r707: [914..981]
 r708: [914..915]
 r709: [918..919]
 r710: [908..909]
 r711: [846..909]
 r712: [846..847]
 r713: [850..851]
 r714: [476..477]
 r715: [844..845]
 r716: [740..845]
 r717: [740..741]
 r718: [744..745]
 r719: [630..631]
 r720: [556..631]
 r721: [556..557]
 r722: [560..561]
 r723: [554..555]
 r724: [480..555]
 r725: [480..481]
 r726: [484..485]
 r727: [474..475]
 r728: [436..475]
 r729: [436..437]
 r730: [440..441]
 r731: [434..435]
 r732: [76..435]
 r733: [76..77]
 r734: [432..433]
 r735: [372..433]
 r736: [372..373]
 r737: [376..377]
 r738: [370..371]
 r739: [80..371]
 r740: [80..81]
 r741: [84..85]
 r742: [220..241]
 r743: [186..209]
 r744: [74..75]
 r745: [0..75]
 r746: [0..1]
 r747: [4..5]
 r748: [54..61]
 r749: [1732..1733]
 r750: [1736..1737]
 r751: [1796..1797]
 r752: [1792..1793]
 r753: [1786..1787]
 r754: [1786..1787]
 r755: [1784..1785]
 r756: [1780..1781]
 r757: [1774..1775]
 r758: [1774..1775]
 r759: [1772..1773]
 r760: [1768..1769]
 r761: [1762..1763]
 r762: [1760..1761]
 r763: [1756..1757]
 r764: [1750..1751]
 r765: [1750..1751]
 r766: [1748..1749]
 r767: [1744..1745]
 r768: [1738..1739]
 r769: [1700..1701]
 r770: [1704..1705]
 r771: [1708..1709]
 r772: [1726..1727]
 r773: [1722..1723]
 r774: [1716..1717]
 r775: [1710..1711]
 r776: [1710..1711]
 r777: [1696..1697]
 r778: [1692..1693]
 r779: [1690..1691]
 r780: [1688..1689]
 r781: [1686..1687]
 r782: [984..985]
 r783: [1684..1685]
 r784: [988..989]
 r785: [992..993]
 r786: [1678..1679]
 r787: [1674..1675]
 r788: [1666..1669]
 r789: [1666..1667]
 r790: [1664..1665]
 r791: [1662..1663]
 r792: [1656..1659]
 r793: [1656..1657]
 r794: [1654..1655]
 r795: [1650..1651]
 r796: [1642..1645]
 r797: [1642..1643]
 r798: [1638..1639]
 r799: [1634..1635]
 r800: [1632..1633]
 r801: [1626..1629]
 r802: [1626..1627]
 r803: [1624..1625]
 r804: [1620..1621]
 r805: [1612..1615]
 r806: [1612..1613]
 r807: [1608..1609]
 r808: [1604..1605]
 r809: [1602..1603]
 r810: [1598..1599]
 r811: [1598..1599]
 r812: [1594..1595]
 r813: [1592..1593]
 r814: [1538..1539]
 r815: [1534..1535]
 r816: [1528..1529]
 r817: [1520..1523]
 r818: [1520..1521]
 r819: [1518..1519]
 r820: [1516..1517]
 r821: [1512..1513]
 r822: [1506..1507]
 r823: [1498..1501]
 r824: [1498..1499]
 r825: [1496..1497]
 r826: [1494..1495]
 r827: [1490..1491]
 r828: [1482..1485]
 r829: [1482..1483]
 r830: [1480..1481]
 r831: [1474..1477]
 r832: [1474..1475]
 r833: [1470..1471]
 r834: [1464..1465]
 r835: [1458..1459]
 r836: [1588..1589]
 r837: [1584..1585]
 r838: [1578..1579]
 r839: [1576..1577]
 r840: [1574..1575]
 r841: [1570..1571]
 r842: [1564..1565]
 r843: [1562..1563]
 r844: [1560..1561]
 r845: [1556..1557]
 r846: [1550..1551]
 r847: [1548..1549]
 r848: [1546..1547]
 r849: [1540..1541]
 r850: [1454..1455]
 r851: [1456..1457]
 r852: [1452..1453]
 r853: [1450..1451]
 r854: [1446..1447]
 r855: [1442..1443]
 r856: [1430..1441]
 r857: [1436..1441]
 r858: [1436..1441] [1428..1433]
 r859: [1436..1437]
 r860: [1440..1441]
 r861: [1432..1439]
 r862: [1434..1435]
 r863: [1428..1429]
 r864: [1426..1427]
 r865: [1422..1423]
 r866: [1416..1417]
 r867: [1414..1415]
 r868: [1412..1413]
 r869: [1408..1409]
 r870: [1406..1407]
 r871: [1402..1403]
 r872: [1396..1397]
 r873: [1396..1397]
 r874: [1394..1395]
 r875: [1390..1391]
 r876: [1384..1385]
 r877: [1384..1385]
 r878: [1382..1383]
 r879: [1376..1379]
 r880: [1376..1377]
 r881: [1374..1375]
 r882: [1372..1373]
 r883: [1366..1369]
 r884: [1366..1367]
 r885: [1364..1365]
 r886: [1362..1363]
 r887: [1354..1357]
 r888: [1354..1355]
 r889: [1352..1353]
 r890: [1350..1351]
 r891: [1342..1345]
 r892: [1342..1343]
 r893: [1340..1341]
 r894: [1338..1339]
 r895: [1334..1335]
 r896: [1330..1331]
 r897: [1324..1325]
 r898: [1318..1319]
 r899: [1320..1321]
 r900: [1316..1317]
 r901: [1312..1313]
 r902: [1308..1309]
 r903: [1302..1303]
 r904: [1296..1297]
 r905: [1298..1299]
 r906: [1294..1295]
 r907: [1286..1287]
 r908: [1282..1283]
 r909: [1270..1281]
 r910: [1276..1281]
 r911: [1276..1281] [1268..1273]
 r912: [1276..1277]
 r913: [1280..1281]
 r914: [1272..1279]
 r915: [1274..1275]
 r916: [1268..1269]
 r917: [1266..1267]
 r918: [1262..1263]
 r919: [1256..1257]
 r920: [1254..1255]
 r921: [1252..1253]
 r922: [1248..1249]
 r923: [1246..1247]
 r924: [1242..1243]
 r925: [1236..1237]
 r926: [1236..1237]
 r927: [1234..1235]
 r928: [1230..1231]
 r929: [1224..1225]
 r930: [1224..1225]
 r931: [1222..1223]
 r932: [1220..1221]
 r933: [1218..1219] [1214..1215]
 r934: [1216..1217]
 r935: [1212..1213]
 r936: [1204..1207]
 r937: [1204..1205]
 r938: [1202..1203]
 r939: [1200..1201]
 r940: [1198..1199] [1194..1195]
 r941: [1196..1197]
 r942: [1192..1193]
 r943: [1182..1185]
 r944: [1182..1183]
 r945: [1180..1181]
 r946: [1178..1179]
 r947: [1174..1175] [1170..1171]
 r948: [1172..1173]
 r949: [1168..1169]
 r950: [1160..1163]
 r951: [1160..1161]
 r952: [1158..1159]
 r953: [1156..1157]
 r954: [1152..1153] [1148..1149]
 r955: [1150..1151]
 r956: [1146..1147]
 r957: [1136..1139]
 r958: [1136..1137]
 r959: [1134..1135]
 r960: [1132..1133]
 r961: [1128..1129]
 r962: [1124..1125]
 r963: [1118..1119]
 r964: [1110..1111]
 r965: [1106..1107]
 r966: [1102..1103]
 r967: [1096..1097]
 r968: [1090..1091]
 r969: [1082..1083]
 r970: [1078..1079]
 r971: [1072..1073]
 r972: [1068..1069]
 r973: [1064..1065]
 r974: [1058..1059]
 r975: [1052..1053]
 r976: [1050..1051]
 r977: [1044..1045]
 r978: [1042..1043]
 r979: [1042..1043]
 r980: [1032..1033]
 r981: [1034..1035]
 r982: [1030..1031]
 r983: [1026..1027]
 r984: [1020..1021]
 r985: [1018..1019]
 r986: [1016..1017]
 r987: [1012..1013]
 r988: [1006..1007]
 r989: [1006..1007]
 r990: [1004..1005]
 r991: [1000..1001]
 r992: [994..995]
 r993: [994..995]
 r994: [912..913]
 r995: [916..917]
 r996: [920..921]
 r997: [978..979]
 r998: [972..975]
 r999: [972..973]
 r1000: [970..971]
 r1001: [966..967]
 r1002: [958..961]
 r1003: [958..959]
 r1004: [954..955]
 r1005: [950..951]
 r1006: [948..949]
 r1007: [944..945]
 r1008: [938..939]
 r1009: [934..935]
 r1010: [930..931]
 r1011: [924..925]
 r1012: [922..923]
 r1013: [848..849]
 r1014: [852..853]
 r1015: [906..907]
 r1016: [902..903]
 r1017: [896..897]
 r1018: [894..895]
 r1019: [890..891]
 r1020: [882..885]
 r1021: [882..883]
 r1022: [878..879]
 r1023: [874..875]
 r1024: [868..869]
 r1025: [864..865]
 r1026: [856..859]
 r1027: [856..857]
 r1028: [854..855]
 r1029: [478..479]
 r1030: [742..743]
 r1031: [746..747]
 r1032: [842..843]
 r1033: [838..839]
 r1034: [832..833]
 r1035: [830..831]
 r1036: [826..827]
 r1037: [820..821]
 r1038: [818..819]
 r1039: [812..815]
 r1040: [812..813]
 r1041: [810..811]
 r1042: [806..807]
 r1043: [798..801]
 r1044: [798..799]
 r1045: [794..795]
 r1046: [790..791]
 r1047: [788..789]
 r1048: [784..785]
 r1049: [778..779]
 r1050: [774..775]
 r1051: [758..759]
 r1052: [754..755]
 r1053: [748..749]
 r1054: [770..771]
 r1055: [766..767]
 r1056: [760..761]
 r1057: [738..739]
 r1058: [730..731]
 r1059: [728..729]
 r1060: [728..729]
 r1061: [726..727]
 r1062: [720..721]
 r1063: [718..719]
 r1064: [718..719]
 r1065: [716..717]
 r1066: [708..709]
 r1067: [708..709]
 r1068: [684..685]
 r1069: [676..677]
 r1070: [674..675]
 r1071: [674..675]
 r1072: [672..673]
 r1073: [666..667]
 r1074: [664..665]
 r1075: [664..665]
 r1076: [662..663]
 r1077: [654..655]
 r1078: [654..655]
 r1079: [558..559]
 r1080: [562..563]
 r1081: [628..629]
 r1082: [624..625]
 r1083: [618..619]
 r1084: [614..615]
 r1085: [610..611]
 r1086: [604..605]
 r1087: [598..599]
 r1088: [596..597]
 r1089: [592..593]
 r1090: [586..587]
 r1091: [578..581]
 r1092: [578..579]
 r1093: [574..575]
 r1094: [570..571]
 r1095: [564..565]
 r1096: [564..565]
 r1097: [482..483]
 r1098: [486..487]
 r1099: [552..553]
 r1100: [548..549]
 r1101: [542..543]
 r1102: [538..539]
 r1103: [534..535]
 r1104: [528..529]
 r1105: [522..523]
 r1106: [520..521]
 r1107: [516..517]
 r1108: [510..511]
 r1109: [502..505]
 r1110: [502..503]
 r1111: [498..499]
 r1112: [494..495]
 r1113: [488..489]
 r1114: [488..489]
 r1115: [438..439]
 r1116: [442..443]
 r1117: [472..473]
 r1118: [468..469]
 r1119: [462..463]
 r1120: [457..458]
 r1121: [453..454]
 r1122: [447..448]
 r1123: [78..79]
 r1124: [374..375]
 r1125: [378..379]
 r1126: [430..431]
 r1127: [426..427]
 r1128: [420..421]
 r1129: [418..419]
 r1130: [414..415]
 r1131: [408..409]
 r1132: [404..405]
 r1133: [400..401]
 r1134: [394..395]
 r1135: [390..391]
 r1136: [386..387]
 r1137: [380..381]
 r1138: [82..83]
 r1139: [86..87]
 r1140: [368..369]
 r1141: [364..365]
 r1142: [358..359]
 r1143: [354..355]
 r1144: [348..351]
 r1145: [348..349]
 r1146: [346..347]
 r1147: [342..343]
 r1148: [334..337]
 r1149: [334..335]
 r1150: [330..331]
 r1151: [326..327]
 r1152: [324..325]
 r1153: [320..321]
 r1154: [314..315]
 r1155: [306..309]
 r1156: [306..307]
 r1157: [304..305]
 r1158: [300..301]
 r1159: [294..295]
 r1160: [286..289]
 r1161: [286..287]
 r1162: [284..285]
 r1163: [282..283]
 r1164: [276..277]
 r1165: [274..275]
 r1166: [270..271]
 r1167: [262..265]
 r1168: [262..263]
 r1169: [258..259]
 r1170: [252..255]
 r1171: [252..253]
 r1172: [246..247]
 r1173: [244..245]
 r1174: [240..241]
 r1175: [236..237]
 r1176: [230..231]
 r1177: [224..225]
 r1178: [214..215]
 r1179: [212..213]
 r1180: [208..209]
 r1181: [204..205]
 r1182: [198..199]
 r1183: [190..193]
 r1184: [190..191]
 r1185: [180..181]
 r1186: [178..179]
 r1187: [130..131]
 r1188: [126..127]
 r1189: [120..121]
 r1190: [116..117]
 r1191: [114..115]
 r1192: [106..107]
 r1193: [102..103]
 r1194: [98..99]
 r1195: [88..89]
 r1196: [176..177]
 r1197: [174..175]
 r1198: [170..171]
 r1199: [164..165]
 r1200: [160..161]
 r1201: [158..159]
 r1202: [150..151]
 r1203: [146..147]
 r1204: [142..143]
 r1205: [132..133]
 r1206: [2..3]
 r1207: [6..7]
 r1208: [72..73]
 r1209: [68..69]
 r1210: [62..63]
 r1211: [60..61]
 r1212: [58..59]
 r1213: [52..53]
 r1214: [48..49]
 r1215: [42..43]
 r1216: [40..41]
 r1217: [36..37]
 r1218: [30..31]
 r1219: [26..27]
 r1220: [28..29]
 r1221: [24..25]
 r1222: [18..19]
 r1223: [14..15]
 r1224: [8..9]
 r1225: [1438..1439]
 r1226: [1430..1431]
 r1227: [1288..1289]
 r1228: [1278..1279]
 r1229: [1270..1271]
 r1230: [1112..1113]
 r1231: [706..707]
 r1232: [704..705]
 r1233: [702..703]
 r1234: [700..701]
 r1235: [698..699]
 r1236: [696..697]
 r1237: [694..695]
 r1238: [692..693]
 r1239: [690..691]
 r1240: [688..689]
 r1241: [686..687]
 r1242: [652..653]
 r1243: [650..651]
 r1244: [648..649]
 r1245: [646..647]
 r1246: [644..645]
 r1247: [642..643]
 r1248: [640..641]
 r1249: [638..639]
 r1250: [636..637]
 r1251: [634..635]
 r1252: [632..633]
 r1253: [222..223]
 r1254: [216..217]
 r1255: [188..189]
 r1256: [182..183]
 r1257: [118..119]
 r1258: [110..111]
 r1259: [90..91]
 r1260: [162..163]
 r1261: [154..155]
 r1262: [134..135]
 r1263: [112..115]
 r1264: [92..117]
 r1265: [184..187]
 r1266: [218..221]
 r1267: [156..159]
 r1268: [136..161]

********** Assignment #1: **********

	 Assigning to 1231 (cl=INDEX_REGS, orig=1231, freq=2000, tfirst=1231, tfreq=2000)...
	   Assign 3 to reload r1231 (freq=2000)
	 Assigning to 1232 (cl=INDEX_REGS, orig=1232, freq=2000, tfirst=1232, tfreq=2000)...
	   Assign 3 to reload r1232 (freq=2000)
	 Assigning to 1233 (cl=INDEX_REGS, orig=1233, freq=2000, tfirst=1233, tfreq=2000)...
	   Assign 3 to reload r1233 (freq=2000)
	 Assigning to 1234 (cl=INDEX_REGS, orig=1234, freq=2000, tfirst=1234, tfreq=2000)...
	   Assign 5 to reload r1234 (freq=2000)
	 Assigning to 1235 (cl=INDEX_REGS, orig=1235, freq=2000, tfirst=1235, tfreq=2000)...
	   Assign 3 to reload r1235 (freq=2000)
	 Assigning to 1236 (cl=INDEX_REGS, orig=1236, freq=2000, tfirst=1236, tfreq=2000)...
	   Assign 5 to reload r1236 (freq=2000)
	 Assigning to 1237 (cl=INDEX_REGS, orig=1237, freq=2000, tfirst=1237, tfreq=2000)...
	   Assign 3 to reload r1237 (freq=2000)
	 Assigning to 1238 (cl=INDEX_REGS, orig=1238, freq=2000, tfirst=1238, tfreq=2000)...
	   Assign 5 to reload r1238 (freq=2000)
	 Assigning to 1239 (cl=INDEX_REGS, orig=1239, freq=2000, tfirst=1239, tfreq=2000)...
	   Assign 3 to reload r1239 (freq=2000)
	 Assigning to 1240 (cl=INDEX_REGS, orig=1240, freq=2000, tfirst=1240, tfreq=2000)...
	   Assign 5 to reload r1240 (freq=2000)
	 Assigning to 1241 (cl=INDEX_REGS, orig=1241, freq=2000, tfirst=1241, tfreq=2000)...
	   Assign 3 to reload r1241 (freq=2000)
	 Assigning to 1242 (cl=INDEX_REGS, orig=1242, freq=2000, tfirst=1242, tfreq=2000)...
	   Assign 5 to reload r1242 (freq=2000)
	 Assigning to 1243 (cl=INDEX_REGS, orig=1243, freq=2000, tfirst=1243, tfreq=2000)...
	   Assign 3 to reload r1243 (freq=2000)
	 Assigning to 1244 (cl=INDEX_REGS, orig=1244, freq=2000, tfirst=1244, tfreq=2000)...
	   Assign 5 to reload r1244 (freq=2000)
	 Assigning to 1245 (cl=INDEX_REGS, orig=1245, freq=2000, tfirst=1245, tfreq=2000)...
	   Assign 3 to reload r1245 (freq=2000)
	 Assigning to 1246 (cl=INDEX_REGS, orig=1246, freq=2000, tfirst=1246, tfreq=2000)...
	   Assign 5 to reload r1246 (freq=2000)
	 Assigning to 1247 (cl=INDEX_REGS, orig=1247, freq=2000, tfirst=1247, tfreq=2000)...
	   Assign 3 to reload r1247 (freq=2000)
	 Assigning to 1248 (cl=INDEX_REGS, orig=1248, freq=2000, tfirst=1248, tfreq=2000)...
	   Assign 5 to reload r1248 (freq=2000)
	 Assigning to 1249 (cl=INDEX_REGS, orig=1249, freq=2000, tfirst=1249, tfreq=2000)...
	   Assign 3 to reload r1249 (freq=2000)
	 Assigning to 1250 (cl=INDEX_REGS, orig=1250, freq=2000, tfirst=1250, tfreq=2000)...
	   Assign 4 to reload r1250 (freq=2000)
	 Assigning to 1251 (cl=INDEX_REGS, orig=1251, freq=2000, tfirst=1251, tfreq=2000)...
	   Assign 5 to reload r1251 (freq=2000)
	 Assigning to 1252 (cl=INDEX_REGS, orig=1252, freq=2000, tfirst=1252, tfreq=2000)...
	   Assign 3 to reload r1252 (freq=2000)
	 Assigning to 1225 (cl=SSE_REGS, orig=859, freq=3000, tfirst=1225, tfreq=3000)...
	   Assign 25 to reload r1225 (freq=3000)
	 Assigning to 1226 (cl=SSE_REGS, orig=861, freq=3000, tfirst=1226, tfreq=3000)...
	   Assign 23 to reload r1226 (freq=3000)
	 Assigning to 1227 (cl=SSE_REGS, orig=249, freq=3000, tfirst=1227, tfreq=3000)...
	   Assign 22 to reload r1227 (freq=3000)
	 Assigning to 1228 (cl=SSE_REGS, orig=912, freq=3000, tfirst=1228, tfreq=3000)...
	   Assign 25 to reload r1228 (freq=3000)
	 Assigning to 1229 (cl=SSE_REGS, orig=914, freq=3000, tfirst=1229, tfreq=3000)...
	   Assign 23 to reload r1229 (freq=3000)
	 Assigning to 1230 (cl=SSE_REGS, orig=302, freq=3000, tfirst=1230, tfreq=3000)...
	   Assign 22 to reload r1230 (freq=3000)
	 Assigning to 1263 (cl=SSE_REGS, orig=628, freq=2000, tfirst=1258, tfreq=3000)...
	 Assigning to 1258 (cl=SSE_REGS, orig=628, freq=3000, tfirst=1258, tfreq=3000)...
	   Assign 26 to reload r1258 (freq=3000)
	Hard reg 21 is preferable by r1263 with profit 1000
	Hard reg 26 is preferable by r1263 with profit 1000
	 Assigning to 1267 (cl=SSE_REGS, orig=646, freq=2000, tfirst=1261, tfreq=3000)...
	 Assigning to 1261 (cl=SSE_REGS, orig=646, freq=3000, tfirst=1261, tfreq=3000)...
	   Assign 27 to reload r1261 (freq=3000)
	Hard reg 21 is preferable by r1267 with profit 1000
	Hard reg 27 is preferable by r1267 with profit 1000
	 Assigning to 1266 (cl=ALL_SSE_REGS, orig=609, freq=2000, tfirst=1253, tfreq=2000)...
	 Assigning to 1253 (cl=ALL_SSE_REGS, orig=609, freq=2000, tfirst=1253, tfreq=2000)...
	   Assign 28 to reload r1253 (freq=2000)
	Hard reg 28 is preferable by r1266 with profit 1000
	Hard reg 28 is preferable by r1254 with profit 500
	 Assigning to 1254 (cl=SSE_REGS, orig=609, freq=2000, tfirst=1253, tfreq=2000)...
	   Assign 28 to optional reload r1254 (freq=2000)
	Hard reg 28 is preferable by r1266 with profit 2000
	 Assigning to 1265 (cl=ALL_SSE_REGS, orig=620, freq=2000, tfirst=1255, tfreq=2000)...
	 Assigning to 1255 (cl=ALL_SSE_REGS, orig=620, freq=2000, tfirst=1255, tfreq=2000)...
	   Assign 26 to reload r1255 (freq=2000)
	Hard reg 26 is preferable by r1265 with profit 1000
	Hard reg 26 is preferable by r1256 with profit 500
	 Assigning to 1256 (cl=SSE_REGS, orig=620, freq=2000, tfirst=1255, tfreq=2000)...
	   Assign 26 to optional reload r1256 (freq=2000)
	Hard reg 26 is preferable by r1265 with profit 2000
	 Assigning to 1264 (cl=ALL_SSE_REGS, orig=627, freq=2000, tfirst=1257, tfreq=2000)...
	 Assigning to 1257 (cl=ALL_SSE_REGS, orig=627, freq=2000, tfirst=1257, tfreq=2000)...
	   Assign 27 to reload r1257 (freq=2000)
	Hard reg 27 is preferable by r1264 with profit 1000
	Hard reg 27 is preferable by r1259 with profit 500
	 Assigning to 1259 (cl=SSE_REGS, orig=627, freq=2000, tfirst=1257, tfreq=2000)...
	   Assign 27 to optional reload r1259 (freq=2000)
	Hard reg 27 is preferable by r1264 with profit 2000
	 Assigning to 1268 (cl=ALL_SSE_REGS, orig=645, freq=2000, tfirst=1260, tfreq=2000)...
	 Assigning to 1260 (cl=ALL_SSE_REGS, orig=645, freq=2000, tfirst=1260, tfreq=2000)...
	   Assign 24 to reload r1260 (freq=2000)
	Hard reg 24 is preferable by r1268 with profit 1000
	Hard reg 24 is preferable by r1262 with profit 500
	 Assigning to 1262 (cl=SSE_REGS, orig=645, freq=2000, tfirst=1260, tfreq=2000)...
	   Assign 24 to optional reload r1262 (freq=2000)
	Hard reg 24 is preferable by r1268 with profit 2000
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 0 out of 6 (0.00%)
   Insn after restoring regs:
 2094: r1256:SF=r620:SF
      REG_DEAD r620:SF
   Insn after restoring regs:
 2093: r620:SF=r1255:SF
      REG_DEAD r1255:SF
   Insn after restoring regs:
 2092: r1254:SF=r609:SF
      REG_DEAD r609:SF
   Insn after restoring regs:
 2091: r609:SF=r1253:SF
      REG_DEAD r1253:SF
   Insn after restoring regs:
 2098: r1259:SF=r627:SF
      REG_DEAD r627:SF
   Insn after restoring regs:
 2096: r1258:SF=r628:SF
      REG_DEAD r628:SF
   Insn after restoring regs:
 1697: r628:SF=xmm0:SF
      REG_DEAD xmm0:SF
   Insn after restoring regs:
 2095: r627:SF=r1257:SF
      REG_DEAD r1257:SF
   Insn after restoring regs:
 2102: r1262:SF=r645:SF
      REG_DEAD r645:SF
   Insn after restoring regs:
 2100: r1261:SF=r646:SF
      REG_DEAD r646:SF
   Insn after restoring regs:
 1740: r646:SF=xmm0:SF
      REG_DEAD xmm0:SF
   Insn after restoring regs:
 2099: r645:SF=r1260:SF
      REG_DEAD r1260:SF
Remove optional reload reg 1254
  Restoring original insn:
 1653: r1178:SF=r610:SF*r609:SF
      REG_DEAD r609:SF
      REG_DEAD r610:SF
  Deleting move 2092
 2092: r1254:SF=r609:SF
      REG_DEAD r609:SF
deleting insn with uid = 2092.
Remove optional reload reg 1256
  Restoring original insn:
 1676: r1185:SF=r621:SF*r620:SF
      REG_DEAD r620:SF
      REG_DEAD r621:SF
  Deleting move 2094
 2094: r1256:SF=r620:SF
      REG_DEAD r620:SF
deleting insn with uid = 2094.
Remove optional reload reg 1259
  Restoring original insn:
 1714: r639:SF=r633:SF+r627:SF
      REG_DEAD r627:SF
      REG_DEAD r633:SF
  Deleting move 2098
 2098: r1259:SF=r627:SF
      REG_DEAD r627:SF
deleting insn with uid = 2098.
Remove optional reload reg 1262
  Restoring original insn:
 1757: r657:SF=r651:SF+r645:SF
      REG_DEAD r645:SF
      REG_DEAD r651:SF
  Deleting move 2102
 2102: r1262:SF=r645:SF
      REG_DEAD r645:SF
deleting insn with uid = 2102.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1757:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1269 from oldreg=645, assigning class SSE_REGS to r1269
      Making reload reg 1269 for reg 645 optional
 1757: r657:SF=r651:SF+r1269:SF
      REG_DEAD r645:SF
      REG_DEAD r651:SF
    Inserting insn reload before:
 2109: r1269:SF=r645:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2109:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1714:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1270 from oldreg=627, assigning class SSE_REGS to r1270
      Making reload reg 1270 for reg 627 optional
 1714: r639:SF=r633:SF+r1270:SF
      REG_DEAD r627:SF
      REG_DEAD r633:SF
    Inserting insn reload before:
 2110: r1270:SF=r627:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2110:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1676:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1271 from oldreg=620, assigning class SSE_REGS to r1271
      Making reload reg 1271 for reg 620 optional
 1676: r1185:SF=r621:SF*r1271:SF
      REG_DEAD r620:SF
      REG_DEAD r621:SF
    Inserting insn reload before:
 2111: r1271:SF=r620:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2111:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1653:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1272 from oldreg=609, assigning class SSE_REGS to r1272
      Making reload reg 1272 for reg 609 optional
 1653: r1178:SF=r610:SF*r1272:SF
      REG_DEAD r609:SF
      REG_DEAD r610:SF
    Inserting insn reload before:
 2112: r1272:SF=r609:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2112:  (0) v  (1) m {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 149
EBB 7
EBB 148
EBB 8
EBB 9 10
EBB 11 12
EBB 13 14
EBB 152
EBB 15
EBB 151
EBB 16
EBB 150
EBB 17 18
EBB 19
EBB 20 21 22
EBB 23
EBB 24 25
EBB 26 27 28 29
EBB 30 31
EBB 32
EBB 33 34
EBB 35 36
EBB 37 38
EBB 39 40
EBB 41 42
EBB 43 44
EBB 45 46
EBB 47
EBB 155
EBB 48
EBB 154
EBB 49
EBB 153
EBB 50
EBB 51 52
EBB 53 54
EBB 55 56 57
EBB 58
EBB 158
EBB 59
EBB 157
EBB 60
EBB 156
EBB 61
EBB 62 63
EBB 64 65 66
EBB 67
EBB 160
EBB 68
EBB 159
EBB 69
EBB 70 71
EBB 72 73
EBB 74 75 76 77
EBB 78
EBB 79
EBB 163
EBB 80
EBB 162
EBB 81 82
EBB 83 84
EBB 85
EBB 86 87
EBB 88 89 90 91
EBB 92
EBB 165
EBB 93
EBB 164
EBB 94
EBB 95 96
EBB 97 98 99 100
EBB 101
EBB 167
EBB 102
EBB 166
EBB 103
EBB 161
EBB 104
EBB 105 106
EBB 107 108 109
EBB 110 111
EBB 112
EBB 169
EBB 113
EBB 168
EBB 114
EBB 115 116
EBB 117 118
EBB 119 120 121 122
EBB 123
EBB 172
EBB 124
EBB 171
EBB 125
EBB 126 127
EBB 128 129 130 131
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1273 from oldreg=628, assigning class SSE_REGS to inheritance r1273
    Original reg change 628->1273 (bb131):
 1697: r1273:SF=xmm0:SF
      REG_DEAD xmm0:SF
    Add original<-inheritance after:
 2113: r628:SF=r1273:SF

    Inheritance reuse change 628->1273 (bb131):
 2096: r1258:SF=r1273:SF
      REG_DEAD r1273:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=1274 from oldreg=627, assigning class ALL_SSE_REGS to inheritance r1274
    Original reg change 627->1274 (bb131):
 2095: r1274:SF=r1257:SF
      REG_DEAD r1257:SF
    Add original<-inheritance after:
 2114: r627:SF=r1274:SF

    Inheritance reuse change 627->1274 (bb131):
 2110: r1270:SF=r1274:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=1275 from oldreg=620, assigning class ALL_SSE_REGS to inheritance r1275
    Original reg change 620->1275 (bb130):
 2093: r1275:SF=r1255:SF
      REG_DEAD r1255:SF
    Add original<-inheritance after:
 2115: r620:SF=r1275:SF

    Inheritance reuse change 620->1275 (bb130):
 2111: r1271:SF=r1275:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=1276 from oldreg=609, assigning class ALL_SSE_REGS to inheritance r1276
    Original reg change 609->1276 (bb130):
 2091: r1276:SF=r1253:SF
      REG_DEAD r1253:SF
    Add original<-inheritance after:
 2116: r609:SF=r1276:SF

    Inheritance reuse change 609->1276 (bb130):
 2112: r1272:SF=r1276:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  2113: r628:SF=r1273:SF
deleting insn with uid = 2113.
	    Removing dead insn:
  2114: r627:SF=r1274:SF
deleting insn with uid = 2114.
	    Removing dead insn:
  2115: r620:SF=r1275:SF
deleting insn with uid = 2115.
	    Removing dead insn:
  2116: r609:SF=r1276:SF
deleting insn with uid = 2116.
EBB 132 133
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1277 from oldreg=646, assigning class SSE_REGS to inheritance r1277
    Original reg change 646->1277 (bb133):
 1740: r1277:SF=xmm0:SF
      REG_DEAD xmm0:SF
    Add original<-inheritance after:
 2117: r646:SF=r1277:SF

    Inheritance reuse change 646->1277 (bb133):
 2100: r1261:SF=r1277:SF
      REG_DEAD r1277:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
    Use smallest class of ALL_SSE_REGS and SSE_REGS
      Creating newreg=1278 from oldreg=645, assigning class ALL_SSE_REGS to inheritance r1278
    Original reg change 645->1278 (bb133):
 2099: r1278:SF=r1260:SF
      REG_DEAD r1260:SF
    Add original<-inheritance after:
 2118: r645:SF=r1278:SF

    Inheritance reuse change 645->1278 (bb133):
 2109: r1269:SF=r1278:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  2117: r646:SF=r1277:SF
deleting insn with uid = 2117.
	    Removing dead insn:
  2118: r645:SF=r1278:SF
deleting insn with uid = 2118.
EBB 134
EBB 174
EBB 135
EBB 173
EBB 136
EBB 170
EBB 137
EBB 138 139
EBB 140 141 142
EBB 143 144
EBB 145
EBB 176
EBB 146
EBB 175
EBB 147

********** Pseudo live ranges #2: **********

  BB 147
   Insn 1902: point = 0, n_alt = -1
  BB 175
   Insn 2052: point = 0, n_alt = -1
  BB 138
   Insn 1788: point = 0, n_alt = -1
   Insn 1787: point = 0, n_alt = 0
   Insn 1786: point = 1, n_alt = 0
   Insn 1785: point = 3, n_alt = 0
   Insn 1784: point = 4, n_alt = 0
  BB 146
   Insn 1967: point = 5, n_alt = -1
   Insn 1867: point = 5, n_alt = 1
  BB 176
   Insn 2055: point = 6, n_alt = -1
  BB 140
   Insn 1796: point = 7, n_alt = -1
   Insn 1795: point = 7, n_alt = 0
   Insn 1794: point = 8, n_alt = 0
   Insn 1793: point = 10, n_alt = 0
   Insn 1792: point = 11, n_alt = 0
  BB 145
   Insn 1965: point = 12, n_alt = -1
   Insn 1861: point = 12, n_alt = 1
   Insn 1860: point = 12, n_alt = 8
   Insn 1859: point = 13, n_alt = 3
   Insn 1858: point = 14, n_alt = 3
   Insn 1857: point = 16, n_alt = 0
   Insn 1856: point = 18, n_alt = 1
   Insn 1855: point = 20, n_alt = 0
   Insn 1854: point = 21, n_alt = 0
   Insn 1853: point = 23, n_alt = 1
   Insn 1852: point = 25, n_alt = 0
  BB 144
   Insn 1849: point = 27, n_alt = 7
  BB 143
   Insn 1847: point = 29, n_alt = -1
   Insn 1846: point = 29, n_alt = 0
   Insn 1845: point = 30, n_alt = 0
   Insn 1844: point = 32, n_alt = 0
   Insn 1843: point = 34, n_alt = 0
   Insn 1842: point = 35, n_alt = 1
   Insn 1841: point = 35, n_alt = 0
   Insn 1840: point = 37, n_alt = 0
   Insn 1839: point = 38, n_alt = 1
   Insn 1838: point = 39, n_alt = 7
   Insn 1837: point = 40, n_alt = 7
   Insn 1836: point = 42, n_alt = 3
   Insn 1835: point = 43, n_alt = 3
   Insn 1834: point = 45, n_alt = 0
   Insn 1833: point = 47, n_alt = 1
   Insn 1832: point = 49, n_alt = 0
   Insn 1831: point = 50, n_alt = 0
   Insn 1830: point = 52, n_alt = 1
   Insn 1829: point = 54, n_alt = 0
   Insn 1828: point = 55, n_alt = 8
   Insn 1827: point = 56, n_alt = 3
   Insn 1826: point = 57, n_alt = 3
   Insn 1825: point = 59, n_alt = 0
   Insn 1824: point = 61, n_alt = 1
   Insn 1823: point = 63, n_alt = 0
   Insn 1822: point = 64, n_alt = 0
   Insn 1821: point = 66, n_alt = 1
   Insn 1820: point = 68, n_alt = 0
  BB 142
   Insn 9: point = 70, n_alt = -2
  BB 141
   Insn 1816: point = 73, n_alt = -1
   Insn 1815: point = 73, n_alt = 0
   Insn 1814: point = 74, n_alt = 0
   Insn 1813: point = 76, n_alt = 0
   Insn 1812: point = 78, n_alt = 0
   Insn 1811: point = 79, n_alt = 1
   Insn 1810: point = 79, n_alt = 0
   Insn 1809: point = 81, n_alt = 0
   Insn 1808: point = 82, n_alt = 1
   Insn 1807: point = 82, n_alt = 7
   Insn 1806: point = 84, n_alt = 3
   Insn 1805: point = 85, n_alt = 3
   Insn 1804: point = 87, n_alt = 0
   Insn 1803: point = 89, n_alt = 1
   Insn 1802: point = 91, n_alt = 0
   Insn 1801: point = 92, n_alt = 0
   Insn 1800: point = 94, n_alt = 1
   Insn 1799: point = 96, n_alt = 0
   Insn 1798: point = 97, n_alt = 7
  BB 139
   Insn 1790: point = 99, n_alt = 1
  BB 137
   Insn 1782: point = 100, n_alt = 1
   Insn 1781: point = 101, n_alt = 0
   Insn 1780: point = 102, n_alt = 0
  BB 170
   Insn 2037: point = 103, n_alt = -1
  BB 115
   Insn 1450: point = 103, n_alt = -1
   Insn 1449: point = 103, n_alt = 0
   Insn 1448: point = 104, n_alt = 0
   Insn 1447: point = 106, n_alt = 0
   Insn 1446: point = 107, n_alt = 0
  BB 136
   Insn 1963: point = 108, n_alt = -1
   Insn 1774: point = 108, n_alt = 1
  BB 173
   Insn 2046: point = 109, n_alt = -1
  BB 126
   Insn 1534: point = 110, n_alt = -1
   Insn 1533: point = 110, n_alt = 0
   Insn 1532: point = 111, n_alt = 0
   Insn 1531: point = 113, n_alt = 0
   Insn 1530: point = 114, n_alt = 0
  BB 135
   Insn 1961: point = 115, n_alt = -1
   Insn 1768: point = 115, n_alt = 1
  BB 174
   Insn 2049: point = 116, n_alt = -1
  BB 128
   Insn 1542: point = 117, n_alt = -1
   Insn 1541: point = 117, n_alt = 0
   Insn 1540: point = 118, n_alt = 0
   Insn 1539: point = 120, n_alt = 0
   Insn 1538: point = 121, n_alt = 0
  BB 134
   Insn 1959: point = 122, n_alt = -1
   Insn 1762: point = 122, n_alt = 1
  BB 131
   Insn 1957: point = 123, n_alt = -1
   Insn 1716: point = 123, n_alt = 8
   Insn 1715: point = 124, n_alt = 3
   Insn 1714: point = 125, n_alt = 1
   Insn 2110: point = 127, n_alt = 7
	   Creating copy r1270<-r1274@1000
   Insn 1713: point = 129, n_alt = 3
   Insn 1712: point = 131, n_alt = 0
   Insn 1711: point = 133, n_alt = 0
   Insn 1710: point = 135, n_alt = 0
   Insn 1709: point = 136, n_alt = 0
   Insn 1708: point = 138, n_alt = 0
   Insn 1707: point = 140, n_alt = 0
   Insn 1706: point = 141, n_alt = 1
   Insn 1705: point = 143, n_alt = 1
   Insn 1704: point = 145, n_alt = 7
   Insn 1703: point = 146, n_alt = -2
   Insn 2097: point = 148, n_alt = -2
	Hard reg 21 is preferable by r1258 with profit 1000
   Insn 1702: point = 150, n_alt = 2
   Insn 2096: point = 151, n_alt = 7
	   Creating copy r1258<-r1273@1000
   Insn 1701: point = 153, n_alt = -2
   Insn 1700: point = 154, n_alt = 0
   Insn 1699: point = 154, n_alt = -2
   Insn 1698: point = 155, n_alt = 7
   Insn 1697: point = 156, n_alt = 8
	Hard reg 21 is preferable by r1273 with profit 1000
   Insn 1696: point = 157, n_alt = 0
   Insn 1695: point = 157, n_alt = -2
   Insn 1694: point = 158, n_alt = 7
   Insn 2095: point = 159, n_alt = 8
	   Creating copy r1257->r1274@1000
   Insn 1693: point = 161, n_alt = 7
   Insn 1692: point = 163, n_alt = 3
   Insn 1691: point = 164, n_alt = 3
   Insn 1690: point = 166, n_alt = 0
   Insn 1689: point = 168, n_alt = 0
   Insn 1688: point = 170, n_alt = 0
   Insn 1687: point = 171, n_alt = 0
   Insn 1686: point = 173, n_alt = 0
   Insn 1685: point = 175, n_alt = 0
  BB 133
   Insn 1759: point = 177, n_alt = 8
   Insn 1758: point = 178, n_alt = 3
   Insn 1757: point = 179, n_alt = 1
   Insn 2109: point = 181, n_alt = 7
	   Creating copy r1269<-r1278@1000
   Insn 1756: point = 183, n_alt = 3
   Insn 1755: point = 185, n_alt = 0
   Insn 1754: point = 187, n_alt = 0
   Insn 1753: point = 189, n_alt = 0
   Insn 1752: point = 190, n_alt = 0
   Insn 1751: point = 192, n_alt = 0
   Insn 1750: point = 194, n_alt = 0
   Insn 1749: point = 195, n_alt = 1
   Insn 1748: point = 197, n_alt = 1
   Insn 1747: point = 199, n_alt = 7
   Insn 1746: point = 200, n_alt = -2
   Insn 2101: point = 202, n_alt = -2
	Hard reg 21 is preferable by r1261 with profit 1000
   Insn 1745: point = 204, n_alt = 2
   Insn 2100: point = 205, n_alt = 7
	   Creating copy r1261<-r1277@1000
   Insn 1744: point = 207, n_alt = -2
   Insn 1743: point = 208, n_alt = 0
   Insn 1742: point = 208, n_alt = -2
   Insn 1741: point = 209, n_alt = 7
   Insn 1740: point = 210, n_alt = 8
	Hard reg 21 is preferable by r1277 with profit 1000
   Insn 1739: point = 211, n_alt = 0
   Insn 1738: point = 211, n_alt = -2
   Insn 1737: point = 212, n_alt = 7
   Insn 2099: point = 213, n_alt = 8
	   Creating copy r1260->r1278@1000
   Insn 1736: point = 215, n_alt = 7
   Insn 1735: point = 217, n_alt = 3
   Insn 1734: point = 218, n_alt = 3
   Insn 1733: point = 220, n_alt = 0
   Insn 1732: point = 222, n_alt = 0
   Insn 1731: point = 224, n_alt = 0
   Insn 1730: point = 225, n_alt = 0
   Insn 1729: point = 227, n_alt = 0
   Insn 1728: point = 229, n_alt = 0
  BB 132
   Insn 1723: point = 231, n_alt = -1
   Insn 1722: point = 231, n_alt = 1
   Insn 1721: point = 232, n_alt = 7
  BB 130
   Insn 1680: point = 234, n_alt = -1
   Insn 1679: point = 234, n_alt = 1
   Insn 1678: point = 235, n_alt = 7
   Insn 1677: point = 236, n_alt = 8
   Insn 1676: point = 237, n_alt = 1
   Insn 2111: point = 239, n_alt = 7
	   Creating copy r1271<-r1275@1000
   Insn 1675: point = 241, n_alt = -2
   Insn 1674: point = 242, n_alt = 0
   Insn 1673: point = 242, n_alt = -2
   Insn 1672: point = 243, n_alt = 7
   Insn 2093: point = 243, n_alt = 8
	   Creating copy r1255->r1275@1000
   Insn 1671: point = 245, n_alt = 7
   Insn 1670: point = 247, n_alt = 0
   Insn 1669: point = 249, n_alt = 4
   Insn 1668: point = 250, n_alt = 3
   Insn 1667: point = 252, n_alt = 0
   Insn 1666: point = 254, n_alt = 0
   Insn 1665: point = 256, n_alt = 0
   Insn 1664: point = 257, n_alt = 0
   Insn 1663: point = 259, n_alt = 0
   Insn 1662: point = 261, n_alt = 0
   Insn 1661: point = 263, n_alt = 0
   Insn 1660: point = 264, n_alt = 1
   Insn 1659: point = 266, n_alt = 0
   Insn 1658: point = 268, n_alt = 0
   Insn 1657: point = 269, n_alt = -2
   Insn 1656: point = 271, n_alt = 2
   Insn 1655: point = 273, n_alt = 7
   Insn 1654: point = 274, n_alt = 8
   Insn 1653: point = 275, n_alt = 1
   Insn 2112: point = 277, n_alt = 7
	   Creating copy r1272<-r1276@1000
   Insn 1652: point = 279, n_alt = -2
   Insn 1651: point = 280, n_alt = 0
   Insn 1650: point = 280, n_alt = -2
   Insn 1649: point = 281, n_alt = 7
   Insn 2091: point = 281, n_alt = 8
	   Creating copy r1253->r1276@1000
   Insn 1648: point = 283, n_alt = 7
   Insn 1647: point = 285, n_alt = 4
   Insn 1646: point = 286, n_alt = 3
   Insn 1645: point = 288, n_alt = 0
   Insn 1644: point = 290, n_alt = 0
   Insn 1643: point = 292, n_alt = 0
   Insn 1642: point = 293, n_alt = 0
   Insn 1641: point = 295, n_alt = 0
   Insn 1640: point = 297, n_alt = 0
   Insn 1639: point = 299, n_alt = 0
   Insn 1638: point = 300, n_alt = 1
   Insn 1637: point = 302, n_alt = 0
   Insn 1636: point = 304, n_alt = 0
   Insn 1635: point = 305, n_alt = -2
   Insn 1634: point = 307, n_alt = 2
   Insn 1633: point = 309, n_alt = 7
   Insn 1632: point = 310, n_alt = 8
   Insn 1631: point = 311, n_alt = 2
   Insn 1630: point = 313, n_alt = 1
   Insn 1629: point = 315, n_alt = 7
   Insn 1628: point = 317, n_alt = 0
   Insn 1627: point = 319, n_alt = 4
   Insn 1626: point = 320, n_alt = 3
   Insn 1625: point = 322, n_alt = 0
   Insn 1624: point = 324, n_alt = 0
   Insn 1623: point = 325, n_alt = 1
   Insn 1622: point = 327, n_alt = 7
   Insn 1621: point = 329, n_alt = 0
   Insn 1620: point = 331, n_alt = 4
   Insn 1619: point = 332, n_alt = 3
   Insn 1618: point = 334, n_alt = 0
   Insn 1617: point = 336, n_alt = 0
   Insn 1616: point = 338, n_alt = 0
   Insn 1615: point = 339, n_alt = 0
   Insn 1614: point = 341, n_alt = 0
   Insn 1613: point = 343, n_alt = 0
   Insn 1612: point = 344, n_alt = 1
   Insn 1611: point = 346, n_alt = 7
   Insn 1610: point = 347, n_alt = 1
   Insn 1609: point = 349, n_alt = -2
   Insn 1608: point = 351, n_alt = 1
   Insn 1607: point = 353, n_alt = 7
   Insn 1606: point = 354, n_alt = 1
   Insn 1605: point = 356, n_alt = 7
   Insn 1604: point = 357, n_alt = 7
   Insn 1603: point = 359, n_alt = 0
   Insn 1602: point = 361, n_alt = 4
   Insn 1601: point = 362, n_alt = 3
   Insn 1600: point = 364, n_alt = 0
   Insn 1599: point = 366, n_alt = 0
   Insn 1598: point = 368, n_alt = 0
   Insn 1597: point = 369, n_alt = 0
   Insn 1596: point = 371, n_alt = 0
   Insn 1595: point = 373, n_alt = 0
   Insn 1594: point = 375, n_alt = 0
   Insn 1593: point = 376, n_alt = 1
   Insn 1592: point = 378, n_alt = 0
   Insn 1591: point = 380, n_alt = 0
   Insn 1590: point = 381, n_alt = 7
   Insn 1589: point = 383, n_alt = 0
   Insn 1588: point = 385, n_alt = 4
   Insn 1587: point = 386, n_alt = 3
   Insn 1586: point = 388, n_alt = 0
   Insn 1585: point = 390, n_alt = 0
   Insn 1584: point = 392, n_alt = 0
   Insn 1583: point = 393, n_alt = 0
   Insn 1582: point = 395, n_alt = 0
   Insn 1581: point = 397, n_alt = 0
   Insn 1580: point = 399, n_alt = 0
   Insn 1579: point = 400, n_alt = 1
   Insn 1578: point = 402, n_alt = 0
   Insn 1577: point = 404, n_alt = 0
   Insn 1576: point = 405, n_alt = 8
   Insn 1575: point = 406, n_alt = 1
   Insn 1574: point = 408, n_alt = 7
   Insn 1573: point = 410, n_alt = 4
   Insn 1572: point = 411, n_alt = 1
   Insn 1571: point = 413, n_alt = 7
   Insn 1570: point = 415, n_alt = 0
   Insn 1569: point = 417, n_alt = 4
   Insn 1568: point = 418, n_alt = 3
   Insn 1567: point = 420, n_alt = 0
   Insn 1566: point = 422, n_alt = 0
   Insn 1565: point = 424, n_alt = 0
   Insn 1564: point = 425, n_alt = 0
   Insn 1563: point = 427, n_alt = 0
   Insn 1562: point = 429, n_alt = 0
   Insn 1561: point = 430, n_alt = 7
   Insn 1560: point = 432, n_alt = 0
   Insn 1559: point = 434, n_alt = 4
   Insn 1558: point = 435, n_alt = 3
   Insn 1557: point = 437, n_alt = 0
   Insn 1556: point = 439, n_alt = 0
  BB 129
   Insn 1554: point = 441, n_alt = -1
   Insn 1553: point = 441, n_alt = 0
   Insn 1552: point = 442, n_alt = 0
   Insn 1551: point = 444, n_alt = 4
   Insn 1550: point = 445, n_alt = 3
   Insn 1549: point = 447, n_alt = 0
   Insn 1548: point = 449, n_alt = 0
   Insn 1547: point = 451, n_alt = 0
   Insn 1546: point = 452, n_alt = 0
   Insn 1545: point = 454, n_alt = 0
   Insn 1544: point = 456, n_alt = 0
  BB 127
   Insn 1536: point = 458, n_alt = 1
  BB 125
   Insn 1528: point = 459, n_alt = 1
   Insn 1527: point = 460, n_alt = 0
   Insn 1526: point = 461, n_alt = 0
  BB 171
   Insn 2040: point = 463, n_alt = -1
  BB 117
   Insn 1460: point = 464, n_alt = -1
   Insn 1459: point = 464, n_alt = 0
   Insn 1458: point = 465, n_alt = 0
   Insn 1457: point = 467, n_alt = 0
   Insn 1456: point = 468, n_alt = 0
  BB 124
   Insn 1954: point = 469, n_alt = -1
   Insn 1520: point = 469, n_alt = 1
  BB 172
   Insn 2043: point = 470, n_alt = -1
  BB 119
   Insn 1468: point = 471, n_alt = -1
   Insn 1467: point = 471, n_alt = 0
   Insn 1466: point = 472, n_alt = 0
   Insn 1465: point = 474, n_alt = 0
   Insn 1464: point = 475, n_alt = 0
  BB 123
   Insn 1952: point = 476, n_alt = -1
   Insn 1514: point = 476, n_alt = 1
  BB 122
   Insn 1511: point = 477, n_alt = 1
   Insn 1510: point = 478, n_alt = 4
   Insn 1509: point = 479, n_alt = 3
   Insn 1508: point = 481, n_alt = 0
   Insn 1507: point = 483, n_alt = 1
   Insn 1506: point = 485, n_alt = 0
   Insn 1505: point = 486, n_alt = 0
   Insn 1504: point = 488, n_alt = 1
   Insn 1503: point = 490, n_alt = 0
  BB 121
   Insn 1501: point = 492, n_alt = -1
   Insn 1500: point = 492, n_alt = 0
   Insn 1499: point = 493, n_alt = 0
   Insn 1498: point = 495, n_alt = 4
   Insn 1497: point = 496, n_alt = 3
   Insn 1496: point = 498, n_alt = 0
   Insn 1495: point = 500, n_alt = 1
   Insn 1494: point = 502, n_alt = 0
   Insn 1493: point = 503, n_alt = 0
   Insn 1492: point = 505, n_alt = 1
   Insn 1491: point = 507, n_alt = 0
  BB 120
   Insn 1489: point = 509, n_alt = -1
   Insn 1488: point = 509, n_alt = 0
   Insn 1487: point = 510, n_alt = 0
   Insn 1486: point = 512, n_alt = 4
   Insn 1485: point = 513, n_alt = 3
   Insn 1484: point = 515, n_alt = 0
   Insn 1483: point = 517, n_alt = 1
   Insn 1482: point = 519, n_alt = 0
   Insn 1481: point = 520, n_alt = 0
   Insn 1480: point = 522, n_alt = 1
   Insn 1479: point = 524, n_alt = 0
   Insn 1478: point = 525, n_alt = 1
   Insn 1477: point = 526, n_alt = 4
   Insn 1476: point = 527, n_alt = 3
   Insn 1475: point = 529, n_alt = 0
   Insn 1474: point = 531, n_alt = 1
   Insn 1473: point = 533, n_alt = 0
   Insn 1472: point = 534, n_alt = 0
   Insn 1471: point = 536, n_alt = 1
   Insn 1470: point = 538, n_alt = 0
  BB 118
   Insn 1462: point = 540, n_alt = 1
  BB 116
   Insn 1454: point = 541, n_alt = 1
   Insn 1453: point = 542, n_alt = 0
   Insn 1452: point = 543, n_alt = 0
  BB 114
   Insn 1444: point = 545, n_alt = 1
   Insn 1443: point = 546, n_alt = 0
   Insn 1442: point = 547, n_alt = 0
  BB 168
   Insn 2031: point = 548, n_alt = -1
  BB 105
   Insn 1388: point = 548, n_alt = -1
   Insn 1387: point = 548, n_alt = 0
   Insn 1386: point = 549, n_alt = 0
   Insn 1385: point = 551, n_alt = 0
   Insn 1384: point = 552, n_alt = 0
  BB 113
   Insn 1950: point = 553, n_alt = -1
   Insn 1436: point = 553, n_alt = 1
  BB 169
   Insn 2034: point = 554, n_alt = -1
  BB 107
   Insn 1396: point = 555, n_alt = -1
   Insn 1395: point = 555, n_alt = 0
   Insn 1394: point = 556, n_alt = 0
   Insn 1393: point = 558, n_alt = 0
   Insn 1392: point = 559, n_alt = 0
  BB 112
   Insn 1948: point = 560, n_alt = -1
   Insn 1430: point = 560, n_alt = 1
   Insn 1429: point = 560, n_alt = 1
  BB 111
   Insn 1426: point = 562, n_alt = 0
  BB 110
   Insn 1424: point = 564, n_alt = -1
   Insn 1423: point = 564, n_alt = 0
   Insn 1422: point = 564, n_alt = 0
   Insn 1421: point = 566, n_alt = 4
   Insn 1420: point = 567, n_alt = 3
   Insn 1419: point = 569, n_alt = 0
   Insn 1418: point = 571, n_alt = 0
   Insn 1417: point = 573, n_alt = 0
   Insn 1416: point = 574, n_alt = 0
   Insn 1415: point = 576, n_alt = 0
   Insn 1414: point = 578, n_alt = 0
   Insn 1413: point = 579, n_alt = 1
  BB 109
   Insn 1410: point = 581, n_alt = 0
  BB 108
   Insn 1408: point = 583, n_alt = -1
   Insn 1407: point = 583, n_alt = 0
   Insn 1406: point = 583, n_alt = 0
   Insn 1405: point = 585, n_alt = 4
   Insn 1404: point = 586, n_alt = 3
   Insn 1403: point = 588, n_alt = 0
   Insn 1402: point = 590, n_alt = 0
   Insn 1401: point = 592, n_alt = 0
   Insn 1400: point = 593, n_alt = 0
   Insn 1399: point = 595, n_alt = 0
   Insn 1398: point = 597, n_alt = 0
  BB 106
   Insn 1390: point = 599, n_alt = 1
  BB 104
   Insn 1382: point = 600, n_alt = 1
   Insn 1381: point = 601, n_alt = 0
   Insn 1380: point = 602, n_alt = 0
   Insn 1379: point = 603, n_alt = 1
   Insn 1378: point = 603, n_alt = 1
  BB 161
   Insn 2010: point = 603, n_alt = -1
  BB 70
   Insn 977: point = 603, n_alt = -1
   Insn 976: point = 603, n_alt = 0
   Insn 975: point = 604, n_alt = 0
   Insn 974: point = 606, n_alt = 0
   Insn 973: point = 607, n_alt = 1
  BB 103
   Insn 1946: point = 607, n_alt = -1
   Insn 1372: point = 607, n_alt = 1
  BB 166
   Insn 2025: point = 607, n_alt = -1
  BB 95
   Insn 1293: point = 607, n_alt = -1
   Insn 1292: point = 607, n_alt = 0
   Insn 1291: point = 608, n_alt = 0
   Insn 1290: point = 610, n_alt = 0
   Insn 1289: point = 611, n_alt = 0
  BB 102
   Insn 1944: point = 612, n_alt = -1
   Insn 1366: point = 612, n_alt = 1
  BB 167
   Insn 2028: point = 613, n_alt = -1
  BB 97
   Insn 1301: point = 614, n_alt = -1
   Insn 1300: point = 614, n_alt = 0
   Insn 1299: point = 615, n_alt = 0
   Insn 1298: point = 617, n_alt = 0
   Insn 1297: point = 618, n_alt = 0
  BB 101
   Insn 1942: point = 619, n_alt = -1
   Insn 1360: point = 619, n_alt = 1
  BB 100
   Insn 1357: point = 620, n_alt = 1
   Insn 1356: point = 621, n_alt = 0
   Insn 1355: point = 622, n_alt = 4
   Insn 1354: point = 623, n_alt = 3
   Insn 1353: point = 625, n_alt = 0
   Insn 1352: point = 627, n_alt = 1
   Insn 1351: point = 629, n_alt = 0
   Insn 1350: point = 630, n_alt = 0
   Insn 1349: point = 632, n_alt = 1
   Insn 1348: point = 634, n_alt = 0
  BB 99
   Insn 1343: point = 636, n_alt = -1
   Insn 1342: point = 636, n_alt = 1
   Insn 1341: point = 637, n_alt = 7
   Insn 1340: point = 639, n_alt = 0
   Insn 1339: point = 641, n_alt = 4
   Insn 1338: point = 642, n_alt = 3
   Insn 1337: point = 644, n_alt = 0
   Insn 1336: point = 646, n_alt = 1
   Insn 1335: point = 648, n_alt = 0
   Insn 1334: point = 649, n_alt = 0
   Insn 1333: point = 651, n_alt = 0
   Insn 1332: point = 653, n_alt = 1
   Insn 1331: point = 655, n_alt = 0
   Insn 1330: point = 656, n_alt = 1
   Insn 1329: point = 658, n_alt = 1
   Insn 1328: point = 660, n_alt = 0
   Insn 1327: point = 661, n_alt = 7
   Insn 1326: point = 663, n_alt = 4
   Insn 1325: point = 664, n_alt = 3
   Insn 1324: point = 666, n_alt = 0
   Insn 1323: point = 668, n_alt = 1
   Insn 1322: point = 670, n_alt = 0
   Insn 1321: point = 671, n_alt = 0
   Insn 1320: point = 673, n_alt = 0
   Insn 1319: point = 675, n_alt = 1
   Insn 1318: point = 677, n_alt = 0
   Insn 1317: point = 678, n_alt = 1
   Insn 1316: point = 680, n_alt = 1
   Insn 1315: point = 682, n_alt = 0
  BB 98
   Insn 1313: point = 684, n_alt = -1
   Insn 1312: point = 684, n_alt = 0
   Insn 1311: point = 685, n_alt = 0
   Insn 1310: point = 687, n_alt = 4
   Insn 1309: point = 688, n_alt = 3
   Insn 1308: point = 690, n_alt = 0
   Insn 1307: point = 692, n_alt = 1
   Insn 1306: point = 694, n_alt = 0
   Insn 1305: point = 695, n_alt = 0
   Insn 1304: point = 697, n_alt = 1
   Insn 1303: point = 699, n_alt = 0
  BB 96
   Insn 1295: point = 701, n_alt = 1
  BB 94
   Insn 1287: point = 702, n_alt = 1
   Insn 1286: point = 703, n_alt = 0
   Insn 1285: point = 704, n_alt = 0
  BB 164
   Insn 2019: point = 705, n_alt = -1
  BB 86
   Insn 1206: point = 705, n_alt = -1
   Insn 1205: point = 705, n_alt = 0
   Insn 1204: point = 706, n_alt = 0
   Insn 1203: point = 708, n_alt = 0
   Insn 1202: point = 709, n_alt = 0
  BB 93
   Insn 1940: point = 710, n_alt = -1
   Insn 1279: point = 710, n_alt = 1
  BB 165
   Insn 2022: point = 711, n_alt = -1
  BB 88
   Insn 1214: point = 712, n_alt = -1
   Insn 1213: point = 712, n_alt = 0
   Insn 1212: point = 713, n_alt = 0
   Insn 1211: point = 715, n_alt = 0
   Insn 1210: point = 716, n_alt = 0
  BB 92
   Insn 1938: point = 717, n_alt = -1
   Insn 1273: point = 717, n_alt = 1
  BB 91
   Insn 1270: point = 718, n_alt = 1
   Insn 1269: point = 719, n_alt = 0
   Insn 1268: point = 720, n_alt = 4
   Insn 1267: point = 721, n_alt = 3
   Insn 1266: point = 723, n_alt = 0
   Insn 1265: point = 725, n_alt = 1
   Insn 1264: point = 727, n_alt = 0
   Insn 1263: point = 728, n_alt = 0
   Insn 1262: point = 730, n_alt = 1
   Insn 1261: point = 732, n_alt = 0
  BB 90
   Insn 1256: point = 734, n_alt = -1
   Insn 1255: point = 734, n_alt = 1
   Insn 1254: point = 735, n_alt = 7
   Insn 1253: point = 737, n_alt = 0
   Insn 1252: point = 739, n_alt = 4
   Insn 1251: point = 740, n_alt = 3
   Insn 1250: point = 742, n_alt = 0
   Insn 1249: point = 744, n_alt = 1
   Insn 1248: point = 746, n_alt = 0
   Insn 1247: point = 747, n_alt = 0
   Insn 1246: point = 749, n_alt = 0
   Insn 1245: point = 751, n_alt = 1
   Insn 1244: point = 753, n_alt = 0
   Insn 1243: point = 754, n_alt = 1
   Insn 1242: point = 756, n_alt = 1
   Insn 1241: point = 758, n_alt = 0
   Insn 1240: point = 759, n_alt = 7
   Insn 1239: point = 761, n_alt = 4
   Insn 1238: point = 762, n_alt = 3
   Insn 1237: point = 764, n_alt = 0
   Insn 1236: point = 766, n_alt = 1
   Insn 1235: point = 768, n_alt = 0
   Insn 1234: point = 769, n_alt = 0
   Insn 1233: point = 771, n_alt = 0
   Insn 1232: point = 773, n_alt = 1
   Insn 1231: point = 775, n_alt = 0
   Insn 1230: point = 776, n_alt = 1
   Insn 1229: point = 778, n_alt = 1
   Insn 1228: point = 780, n_alt = 0
  BB 89
   Insn 1226: point = 782, n_alt = -1
   Insn 1225: point = 782, n_alt = 0
   Insn 1224: point = 783, n_alt = 0
   Insn 1223: point = 785, n_alt = 4
   Insn 1222: point = 786, n_alt = 3
   Insn 1221: point = 788, n_alt = 0
   Insn 1220: point = 790, n_alt = 1
   Insn 1219: point = 792, n_alt = 0
   Insn 1218: point = 793, n_alt = 0
   Insn 1217: point = 795, n_alt = 1
   Insn 1216: point = 797, n_alt = 0
  BB 87
   Insn 1208: point = 799, n_alt = 1
  BB 85
   Insn 1200: point = 800, n_alt = 1
   Insn 1199: point = 801, n_alt = 0
   Insn 1198: point = 802, n_alt = 0
  BB 84
   Insn 1195: point = 803, n_alt = 0
   Insn 1194: point = 803, n_alt = 0
   Insn 1193: point = 803, n_alt = 3
   Insn 1192: point = 803, n_alt = -2
   Insn 1191: point = 804, n_alt = 4
   Insn 1190: point = 804, n_alt = 2
   Insn 1189: point = 804, n_alt = 2
   Insn 1188: point = 804, n_alt = 4
   Insn 1187: point = 804, n_alt = 4
   Insn 1186: point = 804, n_alt = 0
   Insn 1185: point = 805, n_alt = 0
   Insn 1184: point = 806, n_alt = 0
   Insn 2090: point = 807, n_alt = 4
   Insn 1183: point = 808, n_alt = 0
   Insn 2089: point = 809, n_alt = 4
   Insn 1182: point = 810, n_alt = 0
   Insn 2088: point = 811, n_alt = 4
   Insn 1181: point = 812, n_alt = 0
   Insn 2087: point = 813, n_alt = 4
   Insn 1180: point = 814, n_alt = 0
   Insn 2086: point = 815, n_alt = 4
   Insn 1179: point = 816, n_alt = 0
   Insn 2085: point = 817, n_alt = 4
   Insn 1178: point = 818, n_alt = 0
   Insn 2084: point = 819, n_alt = 4
   Insn 1177: point = 820, n_alt = 0
   Insn 2083: point = 821, n_alt = 4
   Insn 1176: point = 822, n_alt = 0
   Insn 2082: point = 823, n_alt = 4
   Insn 1175: point = 824, n_alt = 0
   Insn 2081: point = 825, n_alt = 4
   Insn 1174: point = 826, n_alt = 0
   Insn 2080: point = 827, n_alt = 4
   Insn 1173: point = 828, n_alt = 0
   Insn 1172: point = 828, n_alt = 0
   Insn 1171: point = 830, n_alt = 4
   Insn 1170: point = 831, n_alt = 1
   Insn 1169: point = 833, n_alt = 1
   Insn 1168: point = 835, n_alt = 0
   Insn 1167: point = 837, n_alt = 0
   Insn 1166: point = 839, n_alt = 0
   Insn 1165: point = 840, n_alt = 0
   Insn 1164: point = 842, n_alt = 4
   Insn 1163: point = 843, n_alt = 1
   Insn 1162: point = 845, n_alt = 0
   Insn 1161: point = 847, n_alt = 0
   Insn 1160: point = 849, n_alt = 0
   Insn 1159: point = 851, n_alt = 0
   Insn 1158: point = 852, n_alt = 3
   Insn 1157: point = 854, n_alt = 4
   Insn 1156: point = 855, n_alt = 1
   Insn 1155: point = 857, n_alt = 0
   Insn 1154: point = 859, n_alt = 1
   Insn 1153: point = 861, n_alt = 0
   Insn 1152: point = 863, n_alt = 0
   Insn 1151: point = 865, n_alt = 0
  BB 83
   Insn 1149: point = 866, n_alt = -1
   Insn 1148: point = 866, n_alt = 1
  BB 82
   Insn 1145: point = 866, n_alt = 0
   Insn 1144: point = 866, n_alt = 0
   Insn 1143: point = 866, n_alt = 3
   Insn 1142: point = 866, n_alt = -2
   Insn 1141: point = 867, n_alt = 4
   Insn 1140: point = 867, n_alt = 2
   Insn 1139: point = 867, n_alt = 2
   Insn 1138: point = 867, n_alt = 4
   Insn 1137: point = 867, n_alt = 4
   Insn 1136: point = 867, n_alt = 0
   Insn 1135: point = 868, n_alt = 0
   Insn 1134: point = 869, n_alt = 0
   Insn 2079: point = 870, n_alt = 4
   Insn 1133: point = 871, n_alt = 0
   Insn 2078: point = 872, n_alt = 4
   Insn 1132: point = 873, n_alt = 0
   Insn 2077: point = 874, n_alt = 4
   Insn 1131: point = 875, n_alt = 0
   Insn 2076: point = 876, n_alt = 4
   Insn 1130: point = 877, n_alt = 0
   Insn 2075: point = 878, n_alt = 4
   Insn 1129: point = 879, n_alt = 0
   Insn 2074: point = 880, n_alt = 4
   Insn 1128: point = 881, n_alt = 0
   Insn 2073: point = 882, n_alt = 4
   Insn 1127: point = 883, n_alt = 0
   Insn 2072: point = 884, n_alt = 4
   Insn 1126: point = 885, n_alt = 0
   Insn 2071: point = 886, n_alt = 4
   Insn 1125: point = 887, n_alt = 0
   Insn 2070: point = 888, n_alt = 4
   Insn 1124: point = 889, n_alt = 0
   Insn 2069: point = 890, n_alt = 4
   Insn 1123: point = 891, n_alt = 0
   Insn 1122: point = 891, n_alt = 0
   Insn 1121: point = 893, n_alt = 4
   Insn 1120: point = 894, n_alt = 1
   Insn 1119: point = 896, n_alt = 1
   Insn 1118: point = 898, n_alt = 0
   Insn 1117: point = 900, n_alt = 0
   Insn 1116: point = 902, n_alt = 0
   Insn 1115: point = 903, n_alt = 0
   Insn 1114: point = 905, n_alt = 4
   Insn 1113: point = 906, n_alt = 1
   Insn 1112: point = 908, n_alt = 0
   Insn 1111: point = 910, n_alt = 0
   Insn 1110: point = 912, n_alt = 0
   Insn 1109: point = 914, n_alt = 0
   Insn 1108: point = 915, n_alt = 3
   Insn 1107: point = 917, n_alt = 4
   Insn 1106: point = 918, n_alt = 1
   Insn 1105: point = 920, n_alt = 0
   Insn 1104: point = 922, n_alt = 1
   Insn 1103: point = 924, n_alt = 0
   Insn 1102: point = 926, n_alt = 0
   Insn 1101: point = 928, n_alt = 0
  BB 81
   Insn 1099: point = 929, n_alt = -1
   Insn 1098: point = 929, n_alt = 1
  BB 162
   Insn 2013: point = 929, n_alt = -1
  BB 72
   Insn 989: point = 929, n_alt = -1
   Insn 988: point = 929, n_alt = 0
   Insn 987: point = 930, n_alt = 0
   Insn 986: point = 932, n_alt = 0
   Insn 985: point = 933, n_alt = 0
  BB 80
   Insn 1936: point = 934, n_alt = -1
   Insn 1092: point = 934, n_alt = 1
  BB 163
   Insn 2016: point = 935, n_alt = -1
  BB 74
   Insn 997: point = 936, n_alt = -1
   Insn 996: point = 936, n_alt = 0
   Insn 995: point = 937, n_alt = 0
   Insn 994: point = 939, n_alt = 0
   Insn 993: point = 940, n_alt = 0
  BB 79
   Insn 1934: point = 941, n_alt = -1
   Insn 1086: point = 941, n_alt = 1
  BB 77
   Insn 1932: point = 942, n_alt = -1
   Insn 1067: point = 942, n_alt = 1
   Insn 1066: point = 943, n_alt = 4
   Insn 1065: point = 944, n_alt = 3
   Insn 1064: point = 946, n_alt = 0
   Insn 1063: point = 948, n_alt = 1
   Insn 1062: point = 950, n_alt = 0
   Insn 1061: point = 951, n_alt = 0
   Insn 1060: point = 953, n_alt = 1
   Insn 1059: point = 955, n_alt = 0
   Insn 1058: point = 956, n_alt = 1
  BB 78
   Insn 1081: point = 957, n_alt = 1
   Insn 1080: point = 958, n_alt = 4
   Insn 1079: point = 959, n_alt = 3
   Insn 1078: point = 961, n_alt = 0
   Insn 1077: point = 963, n_alt = 1
   Insn 1076: point = 965, n_alt = 0
   Insn 1075: point = 966, n_alt = 0
   Insn 1074: point = 968, n_alt = 1
   Insn 1073: point = 970, n_alt = 0
   Insn 1072: point = 971, n_alt = 1
  BB 76
   Insn 1053: point = 972, n_alt = -1
   Insn 1052: point = 972, n_alt = 1
   Insn 1051: point = 973, n_alt = 7
   Insn 1050: point = 975, n_alt = 4
  BB 75
   Insn 1048: point = 977, n_alt = -1
   Insn 1047: point = 977, n_alt = 0
   Insn 1046: point = 978, n_alt = 0
   Insn 1045: point = 980, n_alt = 4
   Insn 1044: point = 981, n_alt = 3
   Insn 1043: point = 983, n_alt = 0
   Insn 1042: point = 985, n_alt = 1
   Insn 1041: point = 987, n_alt = 0
   Insn 1040: point = 988, n_alt = 0
   Insn 1039: point = 990, n_alt = 1
   Insn 1038: point = 992, n_alt = 0
   Insn 1037: point = 993, n_alt = 8
   Insn 1036: point = 994, n_alt = 1
   Insn 1035: point = 996, n_alt = 7
   Insn 1034: point = 998, n_alt = 4
   Insn 1033: point = 999, n_alt = 1
   Insn 1032: point = 1001, n_alt = 7
   Insn 1031: point = 1003, n_alt = 0
   Insn 1030: point = 1005, n_alt = 4
   Insn 1029: point = 1006, n_alt = 3
   Insn 1028: point = 1008, n_alt = 0
   Insn 1027: point = 1010, n_alt = 1
   Insn 1026: point = 1012, n_alt = 0
   Insn 1025: point = 1013, n_alt = 0
   Insn 1024: point = 1015, n_alt = 1
   Insn 1023: point = 1017, n_alt = 0
   Insn 1022: point = 1018, n_alt = 7
   Insn 1021: point = 1020, n_alt = 0
   Insn 1020: point = 1022, n_alt = 4
   Insn 1019: point = 1023, n_alt = 3
   Insn 1018: point = 1025, n_alt = 1
   Insn 1017: point = 1027, n_alt = 0
   Insn 1016: point = 1028, n_alt = 1
   Insn 1015: point = 1029, n_alt = 4
   Insn 1014: point = 1030, n_alt = 3
   Insn 1013: point = 1032, n_alt = 0
   Insn 1012: point = 1034, n_alt = 1
   Insn 1011: point = 1036, n_alt = 0
   Insn 1010: point = 1037, n_alt = 0
   Insn 1009: point = 1039, n_alt = 1
   Insn 1008: point = 1041, n_alt = 0
   Insn 1007: point = 1042, n_alt = 1
   Insn 1006: point = 1043, n_alt = 4
   Insn 1005: point = 1044, n_alt = 3
   Insn 1004: point = 1046, n_alt = 0
   Insn 1003: point = 1048, n_alt = 1
   Insn 1002: point = 1050, n_alt = 0
   Insn 1001: point = 1051, n_alt = 0
   Insn 1000: point = 1053, n_alt = 1
   Insn 999: point = 1055, n_alt = 0
  BB 73
   Insn 991: point = 1057, n_alt = 1
  BB 71
   Insn 983: point = 1058, n_alt = 1
   Insn 982: point = 1059, n_alt = 0
   Insn 981: point = 1060, n_alt = 0
   Insn 980: point = 1061, n_alt = 1
   Insn 979: point = 1061, n_alt = 1
  BB 69
   Insn 971: point = 1061, n_alt = 1
  BB 159
   Insn 2004: point = 1061, n_alt = -1
  BB 62
   Insn 906: point = 1061, n_alt = -1
   Insn 905: point = 1061, n_alt = 0
   Insn 904: point = 1062, n_alt = 0
   Insn 903: point = 1064, n_alt = 0
   Insn 902: point = 1065, n_alt = 0
  BB 68
   Insn 1929: point = 1066, n_alt = -1
   Insn 965: point = 1066, n_alt = 1
  BB 160
   Insn 2007: point = 1067, n_alt = -1
  BB 64
   Insn 914: point = 1068, n_alt = -1
   Insn 913: point = 1068, n_alt = 0
   Insn 912: point = 1069, n_alt = 0
   Insn 911: point = 1071, n_alt = 0
   Insn 910: point = 1072, n_alt = 0
  BB 67
   Insn 1927: point = 1073, n_alt = -1
   Insn 959: point = 1073, n_alt = 1
  BB 66
   Insn 956: point = 1074, n_alt = 1
   Insn 955: point = 1075, n_alt = 4
   Insn 954: point = 1076, n_alt = 0
   Insn 953: point = 1078, n_alt = 3
   Insn 952: point = 1080, n_alt = 4
   Insn 951: point = 1081, n_alt = 3
   Insn 950: point = 1083, n_alt = 0
   Insn 949: point = 1085, n_alt = 1
   Insn 948: point = 1087, n_alt = 0
   Insn 947: point = 1088, n_alt = 0
   Insn 946: point = 1090, n_alt = 1
   Insn 945: point = 1092, n_alt = 0
   Insn 944: point = 1093, n_alt = 3
   Insn 943: point = 1095, n_alt = 0
   Insn 942: point = 1097, n_alt = 1
   Insn 941: point = 1099, n_alt = 0
   Insn 940: point = 1100, n_alt = 0
   Insn 939: point = 1102, n_alt = 1
   Insn 938: point = 1104, n_alt = 0
  BB 65
   Insn 936: point = 1106, n_alt = -1
   Insn 935: point = 1106, n_alt = 0
   Insn 934: point = 1107, n_alt = 0
   Insn 933: point = 1109, n_alt = 0
   Insn 932: point = 1111, n_alt = 4
   Insn 931: point = 1112, n_alt = 3
   Insn 930: point = 1114, n_alt = 0
   Insn 929: point = 1116, n_alt = 1
   Insn 928: point = 1118, n_alt = 0
   Insn 927: point = 1119, n_alt = 0
   Insn 926: point = 1121, n_alt = 1
   Insn 925: point = 1123, n_alt = 0
   Insn 924: point = 1124, n_alt = 0
   Insn 923: point = 1126, n_alt = 4
   Insn 922: point = 1127, n_alt = 3
   Insn 921: point = 1129, n_alt = 0
   Insn 920: point = 1131, n_alt = 1
   Insn 919: point = 1133, n_alt = 0
   Insn 918: point = 1134, n_alt = 0
   Insn 917: point = 1136, n_alt = 1
   Insn 916: point = 1138, n_alt = 0
  BB 63
   Insn 908: point = 1140, n_alt = 1
  BB 61
   Insn 900: point = 1141, n_alt = 1
   Insn 899: point = 1142, n_alt = 0
   Insn 898: point = 1143, n_alt = 0
  BB 156
   Insn 1995: point = 1144, n_alt = -1
  BB 51
   Insn 811: point = 1144, n_alt = -1
   Insn 810: point = 1144, n_alt = 0
   Insn 809: point = 1145, n_alt = 0
   Insn 808: point = 1147, n_alt = 0
   Insn 807: point = 1148, n_alt = 0
  BB 60
   Insn 1925: point = 1148, n_alt = -1
   Insn 892: point = 1148, n_alt = 1
  BB 157
   Insn 1998: point = 1148, n_alt = -1
  BB 53
   Insn 821: point = 1148, n_alt = -1
   Insn 820: point = 1148, n_alt = 0
   Insn 819: point = 1149, n_alt = 0
   Insn 818: point = 1151, n_alt = 0
   Insn 817: point = 1152, n_alt = 0
  BB 59
   Insn 1923: point = 1153, n_alt = -1
   Insn 886: point = 1153, n_alt = 1
  BB 158
   Insn 2001: point = 1154, n_alt = -1
  BB 55
   Insn 829: point = 1155, n_alt = -1
   Insn 828: point = 1155, n_alt = 0
   Insn 827: point = 1156, n_alt = 0
   Insn 826: point = 1158, n_alt = 0
   Insn 825: point = 1159, n_alt = 0
  BB 58
   Insn 1921: point = 1160, n_alt = -1
   Insn 880: point = 1160, n_alt = 1
  BB 57
   Insn 877: point = 1161, n_alt = 1
   Insn 876: point = 1162, n_alt = 4
   Insn 875: point = 1163, n_alt = 3
   Insn 874: point = 1165, n_alt = 0
   Insn 873: point = 1166, n_alt = 3
   Insn 872: point = 1168, n_alt = 0
   Insn 871: point = 1170, n_alt = 1
   Insn 870: point = 1172, n_alt = 0
   Insn 869: point = 1173, n_alt = 0
   Insn 868: point = 1175, n_alt = 1
   Insn 867: point = 1177, n_alt = 0
  BB 56
   Insn 862: point = 1179, n_alt = -1
   Insn 861: point = 1179, n_alt = 1
   Insn 860: point = 1180, n_alt = 7
   Insn 859: point = 1182, n_alt = 4
   Insn 858: point = 1183, n_alt = 3
   Insn 857: point = 1185, n_alt = 0
   Insn 856: point = 1187, n_alt = 1
   Insn 855: point = 1189, n_alt = 0
   Insn 854: point = 1190, n_alt = 0
   Insn 853: point = 1192, n_alt = 1
   Insn 852: point = 1194, n_alt = 0
   Insn 851: point = 1195, n_alt = 8
   Insn 850: point = 1196, n_alt = 1
   Insn 849: point = 1198, n_alt = 7
   Insn 848: point = 1200, n_alt = 4
   Insn 847: point = 1201, n_alt = 1
   Insn 846: point = 1203, n_alt = 7
   Insn 845: point = 1205, n_alt = 0
   Insn 844: point = 1207, n_alt = 4
   Insn 843: point = 1208, n_alt = 3
   Insn 842: point = 1210, n_alt = 0
   Insn 841: point = 1212, n_alt = 1
   Insn 840: point = 1214, n_alt = 0
   Insn 839: point = 1215, n_alt = 0
   Insn 838: point = 1217, n_alt = 1
   Insn 837: point = 1219, n_alt = 0
   Insn 836: point = 1220, n_alt = 7
   Insn 835: point = 1222, n_alt = 0
   Insn 834: point = 1224, n_alt = 4
   Insn 833: point = 1225, n_alt = 3
   Insn 832: point = 1227, n_alt = 1
   Insn 831: point = 1229, n_alt = 0
  BB 54
   Insn 823: point = 1231, n_alt = 1
  BB 52
   Insn 815: point = 1232, n_alt = 1
   Insn 814: point = 1233, n_alt = 0
   Insn 813: point = 1234, n_alt = 0
  BB 50
   Insn 805: point = 1235, n_alt = 1
  BB 153
   Insn 1986: point = 1235, n_alt = -1
  BB 20
   Insn 187: point = 1235, n_alt = -1
   Insn 186: point = 1235, n_alt = 0
   Insn 185: point = 1236, n_alt = 0
   Insn 184: point = 1238, n_alt = 0
   Insn 183: point = 1239, n_alt = 0
  BB 49
   Insn 1919: point = 1239, n_alt = -1
   Insn 799: point = 1239, n_alt = 1
  BB 154
   Insn 1989: point = 1239, n_alt = -1
  BB 24
   Insn 206: point = 1239, n_alt = -1
   Insn 205: point = 1239, n_alt = 0
   Insn 204: point = 1240, n_alt = 0
   Insn 203: point = 1242, n_alt = 0
   Insn 202: point = 1243, n_alt = 0
  BB 48
   Insn 1917: point = 1244, n_alt = -1
   Insn 793: point = 1244, n_alt = 1
  BB 155
   Insn 1992: point = 1245, n_alt = -1
  BB 26
   Insn 214: point = 1246, n_alt = -1
   Insn 213: point = 1246, n_alt = 0
   Insn 212: point = 1247, n_alt = 0
   Insn 211: point = 1249, n_alt = 0
   Insn 210: point = 1250, n_alt = 0
  BB 47
   Insn 1915: point = 1251, n_alt = -1
   Insn 787: point = 1251, n_alt = 1
  BB 46
   Insn 784: point = 1252, n_alt = 8
   Insn 783: point = 1253, n_alt = 7
   Insn 782: point = 1254, n_alt = 4
   Insn 781: point = 1255, n_alt = 3
   Insn 780: point = 1257, n_alt = 0
   Insn 779: point = 1259, n_alt = 0
   Insn 778: point = 1261, n_alt = 0
   Insn 777: point = 1262, n_alt = 0
   Insn 776: point = 1264, n_alt = 0
   Insn 775: point = 1266, n_alt = 0
   Insn 774: point = 1267, n_alt = 8
   Insn 773: point = 1268, n_alt = 7
   Insn 772: point = 1269, n_alt = 4
   Insn 771: point = 1270, n_alt = 3
   Insn 770: point = 1272, n_alt = 0
   Insn 769: point = 1274, n_alt = 0
   Insn 768: point = 1276, n_alt = 0
   Insn 767: point = 1277, n_alt = 0
   Insn 766: point = 1279, n_alt = 0
   Insn 765: point = 1281, n_alt = 0
  BB 45
   Insn 760: point = 1283, n_alt = -1
   Insn 759: point = 1283, n_alt = 1
   Insn 758: point = 1284, n_alt = 7
   Insn 757: point = 1285, n_alt = 7
   Insn 756: point = 1287, n_alt = 4
   Insn 755: point = 1288, n_alt = 3
   Insn 754: point = 1290, n_alt = 0
   Insn 753: point = 1292, n_alt = 0
   Insn 752: point = 1294, n_alt = 0
   Insn 751: point = 1295, n_alt = 0
   Insn 750: point = 1297, n_alt = 0
   Insn 749: point = 1299, n_alt = 0
   Insn 748: point = 1300, n_alt = 8
   Insn 747: point = 1301, n_alt = 1
   Insn 746: point = 1303, n_alt = 7
   Insn 745: point = 1304, n_alt = -2
   Insn 744: point = 1305, n_alt = 0
   Insn 743: point = 1305, n_alt = -2
   Insn 742: point = 1306, n_alt = 2
   Insn 741: point = 1308, n_alt = 1
   Insn 740: point = 1310, n_alt = 1
   Insn 739: point = 1312, n_alt = 7
   Insn 738: point = 1313, n_alt = 7
   Insn 737: point = 1314, n_alt = 4
   Insn 736: point = 1315, n_alt = 9
   Insn 735: point = 1316, n_alt = 0
   Insn 734: point = 1316, n_alt = -2
   Insn 733: point = 1317, n_alt = 7
   Insn 732: point = 1317, n_alt = -2
   Insn 731: point = 1319, n_alt = 2
   Insn 730: point = 1321, n_alt = 7
   Insn 729: point = 1322, n_alt = 8
   Insn 728: point = 1323, n_alt = 1
   Insn 727: point = 1325, n_alt = 1
   Insn 726: point = 1327, n_alt = 7
   Insn 725: point = 1329, n_alt = 4
   Insn 724: point = 1330, n_alt = 3
   Insn 723: point = 1332, n_alt = 0
   Insn 722: point = 1334, n_alt = 0
   Insn 721: point = 1336, n_alt = 0
   Insn 720: point = 1337, n_alt = 0
   Insn 719: point = 1339, n_alt = 0
   Insn 718: point = 1341, n_alt = 0
   Insn 717: point = 1342, n_alt = 1
   Insn 716: point = 1344, n_alt = 7
   Insn 715: point = 1346, n_alt = 4
   Insn 714: point = 1347, n_alt = 3
   Insn 713: point = 1349, n_alt = 0
   Insn 712: point = 1351, n_alt = 0
   Insn 711: point = 1353, n_alt = 0
   Insn 710: point = 1354, n_alt = 0
   Insn 709: point = 1356, n_alt = 0
   Insn 708: point = 1358, n_alt = 0
   Insn 707: point = 1359, n_alt = -2
   Insn 706: point = 1361, n_alt = 1
   Insn 705: point = 1363, n_alt = 2
   Insn 704: point = 1365, n_alt = 2
   Insn 703: point = 1367, n_alt = 7
   Insn 702: point = 1368, n_alt = 1
   Insn 701: point = 1370, n_alt = 1
   Insn 700: point = 1372, n_alt = 7
   Insn 699: point = 1374, n_alt = 4
   Insn 698: point = 1375, n_alt = 3
   Insn 697: point = 1377, n_alt = 0
   Insn 696: point = 1379, n_alt = 0
   Insn 695: point = 1381, n_alt = 0
   Insn 694: point = 1382, n_alt = 0
   Insn 693: point = 1384, n_alt = 0
   Insn 692: point = 1386, n_alt = 0
   Insn 691: point = 1387, n_alt = -2
   Insn 690: point = 1389, n_alt = 2
   Insn 689: point = 1391, n_alt = 7
   Insn 2068: point = 1392, n_alt = -2
	Hard reg 22 is preferable by r1230 with profit 1000
   Insn 688: point = 1394, n_alt = 1
   Insn 2067: point = 1394, n_alt = -2
	Hard reg 22 is preferable by r1230 with profit 1000
	Hard reg 21 is preferable by r1230 with profit 1000
   Insn 687: point = 1396, n_alt = 1
   Insn 686: point = 1398, n_alt = 7
   Insn 685: point = 1400, n_alt = 4
   Insn 684: point = 1401, n_alt = 3
   Insn 683: point = 1403, n_alt = 0
   Insn 682: point = 1405, n_alt = 0
   Insn 681: point = 1407, n_alt = 0
   Insn 680: point = 1408, n_alt = 0
   Insn 679: point = 1410, n_alt = 0
   Insn 678: point = 1412, n_alt = 0
   Insn 677: point = 1413, n_alt = -2
   Insn 676: point = 1415, n_alt = 2
   Insn 675: point = 1417, n_alt = 7
   Insn 674: point = 1418, n_alt = 8
   Insn 673: point = 1419, n_alt = 7
   Insn 672: point = 1421, n_alt = 0
   Insn 671: point = 1423, n_alt = 4
   Insn 670: point = 1424, n_alt = 3
   Insn 669: point = 1426, n_alt = 0
   Insn 668: point = 1428, n_alt = 0
   Insn 667: point = 1430, n_alt = 0
   Insn 666: point = 1432, n_alt = 0
   Insn 665: point = 1433, n_alt = -2
   Insn 664: point = 1435, n_alt = -2
   Insn 663: point = 1437, n_alt = 0
   Insn 662: point = 1439, n_alt = 0
   Insn 661: point = 1440, n_alt = 0
   Insn 660: point = 1440, n_alt = 0
   Insn 659: point = 1440, n_alt = 0
   Insn 658: point = 1440, n_alt = -2
   Insn 657: point = 1441, n_alt = 1
   Insn 656: point = 1443, n_alt = 0
   Insn 655: point = 1445, n_alt = 0
   Insn 654: point = 1446, n_alt = 8
   Insn 653: point = 1447, n_alt = 7
   Insn 652: point = 1449, n_alt = 0
   Insn 651: point = 1451, n_alt = 4
   Insn 650: point = 1452, n_alt = 3
   Insn 649: point = 1454, n_alt = 0
   Insn 648: point = 1456, n_alt = 0
   Insn 647: point = 1458, n_alt = 0
   Insn 646: point = 1459, n_alt = -2
   Insn 645: point = 1461, n_alt = -2
   Insn 644: point = 1463, n_alt = 0
   Insn 643: point = 1465, n_alt = 0
   Insn 642: point = 1466, n_alt = 0
   Insn 641: point = 1466, n_alt = 0
   Insn 640: point = 1466, n_alt = 0
   Insn 639: point = 1466, n_alt = -2
   Insn 638: point = 1467, n_alt = 1
   Insn 637: point = 1469, n_alt = 0
   Insn 636: point = 1471, n_alt = 0
   Insn 635: point = 1472, n_alt = 8
   Insn 634: point = 1473, n_alt = 7
   Insn 633: point = 1475, n_alt = 0
   Insn 632: point = 1477, n_alt = 4
   Insn 631: point = 1478, n_alt = 3
   Insn 630: point = 1480, n_alt = 0
   Insn 629: point = 1482, n_alt = 0
   Insn 628: point = 1484, n_alt = 0
   Insn 627: point = 1486, n_alt = 0
   Insn 626: point = 1487, n_alt = -2
   Insn 625: point = 1489, n_alt = -2
   Insn 624: point = 1491, n_alt = 0
   Insn 623: point = 1493, n_alt = 0
   Insn 622: point = 1494, n_alt = 0
   Insn 621: point = 1494, n_alt = 0
   Insn 620: point = 1494, n_alt = 0
   Insn 619: point = 1494, n_alt = -2
   Insn 618: point = 1495, n_alt = 1
   Insn 617: point = 1497, n_alt = 0
   Insn 616: point = 1498, n_alt = 8
   Insn 615: point = 1499, n_alt = 7
   Insn 614: point = 1501, n_alt = 0
   Insn 613: point = 1503, n_alt = 4
   Insn 612: point = 1504, n_alt = 3
   Insn 611: point = 1506, n_alt = 0
   Insn 610: point = 1508, n_alt = 0
   Insn 609: point = 1510, n_alt = 0
   Insn 608: point = 1511, n_alt = -2
   Insn 607: point = 1513, n_alt = -2
   Insn 606: point = 1515, n_alt = 0
   Insn 605: point = 1517, n_alt = 0
   Insn 604: point = 1518, n_alt = 0
   Insn 603: point = 1518, n_alt = 0
   Insn 602: point = 1518, n_alt = 0
   Insn 601: point = 1518, n_alt = -2
   Insn 600: point = 1519, n_alt = 1
   Insn 599: point = 1521, n_alt = 0
   Insn 598: point = 1522, n_alt = 1
   Insn 597: point = 1523, n_alt = 0
  BB 44
   Insn 594: point = 1525, n_alt = 8
   Insn 593: point = 1526, n_alt = 7
   Insn 592: point = 1527, n_alt = 4
   Insn 591: point = 1528, n_alt = 3
   Insn 590: point = 1530, n_alt = 0
   Insn 589: point = 1532, n_alt = 0
   Insn 588: point = 1534, n_alt = 0
   Insn 587: point = 1535, n_alt = 0
   Insn 586: point = 1537, n_alt = 0
   Insn 585: point = 1539, n_alt = 0
   Insn 584: point = 1540, n_alt = 1
  BB 43
   Insn 582: point = 1541, n_alt = -1
   Insn 581: point = 1541, n_alt = 0
  BB 42
   Insn 578: point = 1542, n_alt = 8
   Insn 577: point = 1543, n_alt = 7
   Insn 576: point = 1544, n_alt = 4
   Insn 575: point = 1545, n_alt = 3
   Insn 574: point = 1547, n_alt = 0
   Insn 573: point = 1549, n_alt = 0
   Insn 572: point = 1551, n_alt = 0
   Insn 571: point = 1552, n_alt = 0
   Insn 570: point = 1554, n_alt = 0
   Insn 569: point = 1556, n_alt = 0
   Insn 568: point = 1557, n_alt = 1
  BB 41
   Insn 566: point = 1558, n_alt = -1
   Insn 565: point = 1558, n_alt = 1
   Insn 564: point = 1558, n_alt = 1
   Insn 563: point = 1559, n_alt = 0
   Insn 562: point = 1561, n_alt = 0
   Insn 561: point = 1563, n_alt = 7
   Insn 560: point = 1564, n_alt = 8
   Insn 559: point = 1565, n_alt = 4
   Insn 558: point = 1566, n_alt = 2
   Insn 557: point = 1568, n_alt = 7
   Insn 556: point = 1569, n_alt = 3
   Insn 555: point = 1571, n_alt = 0
   Insn 554: point = 1573, n_alt = 0
   Insn 553: point = 1575, n_alt = 0
   Insn 552: point = 1576, n_alt = 0
   Insn 551: point = 1578, n_alt = 0
   Insn 550: point = 1580, n_alt = 0
   Insn 549: point = 1581, n_alt = -2
  BB 40
   Insn 547: point = 1584, n_alt = 0
   Insn 2066: point = 1585, n_alt = -2
	Hard reg 22 is preferable by r1229 with profit 1000
   Insn 546: point = 1587, n_alt = 0
   Insn 2065: point = 1588, n_alt = -2
	Hard reg 22 is preferable by r1229 with profit 1000
	Hard reg 23 is preferable by r1229 with profit 1000
   Insn 545: point = 1590, n_alt = 1
   Insn 544: point = 1592, n_alt = 0
  BB 39
   Insn 543: point = 1595, n_alt = -1
   Insn 542: point = 1595, n_alt = 1
   Insn 2064: point = 1596, n_alt = -2
	Hard reg 25 is preferable by r1228 with profit 1000
   Insn 541: point = 1598, n_alt = 0
   Insn 2063: point = 1598, n_alt = -2
   Insn 540: point = 1599, n_alt = 0
   Insn 539: point = 1601, n_alt = 2
   Insn 538: point = 1602, n_alt = -2
   Insn 537: point = 1603, n_alt = 7
   Insn 536: point = 1604, n_alt = 7
   Insn 535: point = 1605, n_alt = 8
   Insn 534: point = 1606, n_alt = 1
   Insn 533: point = 1608, n_alt = 7
   Insn 532: point = 1610, n_alt = 4
   Insn 2062: point = 1611, n_alt = -2
	Hard reg 22 is preferable by r1227 with profit 1000
   Insn 531: point = 1613, n_alt = 2
   Insn 2061: point = 1613, n_alt = -2
	Hard reg 22 is preferable by r1227 with profit 1000
	Hard reg 21 is preferable by r1227 with profit 1000
   Insn 530: point = 1615, n_alt = -2
   Insn 529: point = 1617, n_alt = 2
   Insn 528: point = 1619, n_alt = 7
   Insn 527: point = 1620, n_alt = 8
   Insn 526: point = 1621, n_alt = 1
   Insn 525: point = 1623, n_alt = 7
   Insn 524: point = 1624, n_alt = 1
   Insn 523: point = 1626, n_alt = 7
   Insn 522: point = 1628, n_alt = 4
   Insn 521: point = 1629, n_alt = 3
   Insn 520: point = 1631, n_alt = 0
   Insn 519: point = 1633, n_alt = 0
   Insn 518: point = 1635, n_alt = 0
   Insn 517: point = 1636, n_alt = 0
   Insn 516: point = 1638, n_alt = 0
   Insn 515: point = 1640, n_alt = 0
   Insn 514: point = 1641, n_alt = -2
   Insn 513: point = 1643, n_alt = 2
   Insn 512: point = 1645, n_alt = 7
   Insn 511: point = 1646, n_alt = 8
   Insn 510: point = 1647, n_alt = 1
   Insn 509: point = 1649, n_alt = 7
   Insn 508: point = 1650, n_alt = 1
   Insn 507: point = 1652, n_alt = 7
   Insn 506: point = 1654, n_alt = 4
   Insn 505: point = 1655, n_alt = 3
   Insn 504: point = 1657, n_alt = 0
   Insn 503: point = 1659, n_alt = 0
   Insn 502: point = 1661, n_alt = 0
   Insn 501: point = 1662, n_alt = 0
   Insn 500: point = 1664, n_alt = 0
   Insn 499: point = 1666, n_alt = 0
   Insn 498: point = 1667, n_alt = -2
   Insn 497: point = 1669, n_alt = 2
   Insn 496: point = 1671, n_alt = 7
   Insn 495: point = 1672, n_alt = 8
   Insn 494: point = 1673, n_alt = 7
   Insn 493: point = 1675, n_alt = 0
   Insn 492: point = 1677, n_alt = 4
   Insn 491: point = 1678, n_alt = 3
   Insn 490: point = 1680, n_alt = 0
   Insn 489: point = 1682, n_alt = 0
   Insn 488: point = 1684, n_alt = 0
   Insn 487: point = 1685, n_alt = 8
   Insn 486: point = 1686, n_alt = 7
   Insn 485: point = 1688, n_alt = 0
   Insn 484: point = 1690, n_alt = 4
   Insn 483: point = 1691, n_alt = 3
   Insn 482: point = 1693, n_alt = 0
   Insn 481: point = 1695, n_alt = 0
   Insn 480: point = 1697, n_alt = 0
   Insn 479: point = 1698, n_alt = 8
   Insn 478: point = 1699, n_alt = 7
   Insn 477: point = 1701, n_alt = 0
   Insn 476: point = 1703, n_alt = 4
   Insn 475: point = 1704, n_alt = 3
   Insn 474: point = 1706, n_alt = 0
   Insn 473: point = 1708, n_alt = 0
   Insn 472: point = 1709, n_alt = 8
   Insn 471: point = 1710, n_alt = 7
   Insn 470: point = 1712, n_alt = 0
   Insn 469: point = 1714, n_alt = 4
   Insn 468: point = 1715, n_alt = 3
   Insn 467: point = 1717, n_alt = 0
   Insn 466: point = 1719, n_alt = 0
  BB 38
   Insn 463: point = 1721, n_alt = 8
   Insn 462: point = 1722, n_alt = 7
   Insn 461: point = 1723, n_alt = 4
   Insn 460: point = 1724, n_alt = 3
   Insn 459: point = 1726, n_alt = 0
   Insn 458: point = 1728, n_alt = 0
   Insn 457: point = 1730, n_alt = 0
   Insn 456: point = 1731, n_alt = 0
   Insn 455: point = 1733, n_alt = 0
   Insn 454: point = 1735, n_alt = 0
   Insn 453: point = 1736, n_alt = 1
  BB 37
   Insn 451: point = 1737, n_alt = -1
   Insn 450: point = 1737, n_alt = 0
  BB 36
   Insn 447: point = 1738, n_alt = 8
   Insn 446: point = 1739, n_alt = 7
   Insn 445: point = 1740, n_alt = 4
   Insn 444: point = 1741, n_alt = 3
   Insn 443: point = 1743, n_alt = 0
   Insn 442: point = 1745, n_alt = 0
   Insn 441: point = 1747, n_alt = 0
   Insn 440: point = 1748, n_alt = 0
   Insn 439: point = 1750, n_alt = 0
   Insn 438: point = 1752, n_alt = 0
   Insn 437: point = 1753, n_alt = 1
  BB 35
   Insn 435: point = 1754, n_alt = -1
   Insn 434: point = 1754, n_alt = 1
   Insn 433: point = 1754, n_alt = 1
   Insn 432: point = 1755, n_alt = 0
   Insn 431: point = 1757, n_alt = 0
   Insn 430: point = 1759, n_alt = 7
   Insn 429: point = 1760, n_alt = 8
   Insn 428: point = 1761, n_alt = 4
   Insn 427: point = 1762, n_alt = 2
   Insn 426: point = 1764, n_alt = 7
   Insn 425: point = 1765, n_alt = 3
   Insn 424: point = 1767, n_alt = 0
   Insn 423: point = 1769, n_alt = 0
   Insn 422: point = 1771, n_alt = 0
   Insn 421: point = 1772, n_alt = 0
   Insn 420: point = 1774, n_alt = 0
   Insn 419: point = 1776, n_alt = 0
   Insn 418: point = 1777, n_alt = -2
  BB 34
   Insn 416: point = 1780, n_alt = 0
   Insn 2060: point = 1781, n_alt = -2
	Hard reg 22 is preferable by r1226 with profit 1000
   Insn 415: point = 1783, n_alt = 0
   Insn 2059: point = 1784, n_alt = -2
	Hard reg 22 is preferable by r1226 with profit 1000
	Hard reg 23 is preferable by r1226 with profit 1000
   Insn 414: point = 1786, n_alt = 1
   Insn 413: point = 1788, n_alt = 0
  BB 33
   Insn 412: point = 1791, n_alt = -1
   Insn 411: point = 1791, n_alt = 1
   Insn 2058: point = 1792, n_alt = -2
	Hard reg 25 is preferable by r1225 with profit 1000
   Insn 410: point = 1794, n_alt = 0
   Insn 2057: point = 1794, n_alt = -2
   Insn 409: point = 1795, n_alt = 0
   Insn 408: point = 1797, n_alt = 2
   Insn 407: point = 1798, n_alt = -2
   Insn 406: point = 1799, n_alt = 7
   Insn 405: point = 1800, n_alt = 7
   Insn 404: point = 1801, n_alt = 8
   Insn 403: point = 1802, n_alt = 1
   Insn 402: point = 1804, n_alt = 7
   Insn 401: point = 1806, n_alt = 4
   Insn 400: point = 1807, n_alt = -2
   Insn 399: point = 1809, n_alt = 2
   Insn 398: point = 1811, n_alt = 7
   Insn 397: point = 1812, n_alt = 7
   Insn 396: point = 1814, n_alt = 4
   Insn 395: point = 1815, n_alt = 8
   Insn 394: point = 1816, n_alt = 1
   Insn 393: point = 1818, n_alt = 7
  BB 31
   Insn 1913: point = 1820, n_alt = -1
   Insn 348: point = 1820, n_alt = 4
   Insn 347: point = 1821, n_alt = 9
   Insn 346: point = 1822, n_alt = 0
   Insn 345: point = 1822, n_alt = -2
   Insn 344: point = 1823, n_alt = 7
   Insn 343: point = 1823, n_alt = -2
   Insn 342: point = 1825, n_alt = 2
   Insn 341: point = 1827, n_alt = 7
   Insn 340: point = 1828, n_alt = -2
   Insn 339: point = 1830, n_alt = 1
   Insn 338: point = 1832, n_alt = 7
   Insn 337: point = 1834, n_alt = 4
   Insn 336: point = 1835, n_alt = 1
   Insn 335: point = 1837, n_alt = 7
   Insn 334: point = 1839, n_alt = 0
   Insn 333: point = 1841, n_alt = 4
   Insn 332: point = 1842, n_alt = 3
   Insn 331: point = 1844, n_alt = 0
   Insn 330: point = 1846, n_alt = 0
   Insn 329: point = 1847, n_alt = 7
   Insn 328: point = 1849, n_alt = 0
   Insn 327: point = 1851, n_alt = 4
   Insn 326: point = 1852, n_alt = 3
   Insn 325: point = 1854, n_alt = 0
   Insn 324: point = 1856, n_alt = 0
   Insn 323: point = 1858, n_alt = 0
   Insn 322: point = 1859, n_alt = 0
   Insn 321: point = 1861, n_alt = 0
   Insn 320: point = 1863, n_alt = 0
   Insn 319: point = 1864, n_alt = 8
   Insn 318: point = 1865, n_alt = 7
   Insn 317: point = 1867, n_alt = 0
   Insn 316: point = 1869, n_alt = 4
   Insn 315: point = 1870, n_alt = 3
   Insn 314: point = 1872, n_alt = 0
   Insn 313: point = 1874, n_alt = 0
   Insn 312: point = 1876, n_alt = 0
   Insn 311: point = 1877, n_alt = 0
   Insn 310: point = 1879, n_alt = 0
   Insn 309: point = 1881, n_alt = 0
   Insn 308: point = 1883, n_alt = 0
   Insn 307: point = 1884, n_alt = 1
   Insn 306: point = 1886, n_alt = 0
   Insn 305: point = 1888, n_alt = 0
   Insn 304: point = 1889, n_alt = 8
   Insn 303: point = 1890, n_alt = 7
   Insn 302: point = 1892, n_alt = 0
   Insn 301: point = 1894, n_alt = 4
   Insn 300: point = 1895, n_alt = 3
   Insn 299: point = 1897, n_alt = 0
   Insn 298: point = 1899, n_alt = 0
   Insn 297: point = 1901, n_alt = 0
   Insn 296: point = 1902, n_alt = 0
   Insn 295: point = 1904, n_alt = 0
   Insn 294: point = 1906, n_alt = 0
   Insn 293: point = 1908, n_alt = 0
   Insn 292: point = 1909, n_alt = 1
   Insn 291: point = 1911, n_alt = 0
   Insn 290: point = 1913, n_alt = 0
  BB 32
   Insn 390: point = 1915, n_alt = 4
   Insn 389: point = 1916, n_alt = 9
   Insn 388: point = 1917, n_alt = 0
   Insn 387: point = 1917, n_alt = -2
   Insn 386: point = 1918, n_alt = 7
   Insn 385: point = 1918, n_alt = -2
   Insn 384: point = 1920, n_alt = 2
   Insn 383: point = 1922, n_alt = 7
   Insn 382: point = 1923, n_alt = 8
   Insn 381: point = 1924, n_alt = 7
   Insn 380: point = 1926, n_alt = 3
   Insn 379: point = 1927, n_alt = 3
   Insn 378: point = 1929, n_alt = 0
   Insn 377: point = 1931, n_alt = 0
   Insn 376: point = 1933, n_alt = 0
   Insn 375: point = 1934, n_alt = 0
   Insn 374: point = 1936, n_alt = 0
   Insn 373: point = 1938, n_alt = 0
   Insn 372: point = 1939, n_alt = 8
   Insn 371: point = 1940, n_alt = 7
   Insn 370: point = 1942, n_alt = 3
   Insn 369: point = 1943, n_alt = 3
   Insn 368: point = 1945, n_alt = 0
   Insn 367: point = 1947, n_alt = 0
   Insn 366: point = 1949, n_alt = 0
   Insn 365: point = 1950, n_alt = 0
   Insn 364: point = 1952, n_alt = 0
   Insn 363: point = 1954, n_alt = 0
   Insn 362: point = 1955, n_alt = 8
   Insn 361: point = 1956, n_alt = 7
   Insn 360: point = 1958, n_alt = 3
   Insn 359: point = 1959, n_alt = 3
   Insn 358: point = 1961, n_alt = 0
   Insn 357: point = 1963, n_alt = 0
   Insn 356: point = 1965, n_alt = 0
   Insn 355: point = 1966, n_alt = 0
   Insn 354: point = 1968, n_alt = 0
   Insn 353: point = 1970, n_alt = 0
  BB 30
   Insn 288: point = 1972, n_alt = -1
   Insn 287: point = 1972, n_alt = 0
   Insn 286: point = 1973, n_alt = 0
   Insn 285: point = 1975, n_alt = 3
  BB 29
   Insn 282: point = 1977, n_alt = -1
   Insn 281: point = 1977, n_alt = 1
   Insn 280: point = 1978, n_alt = 7
  BB 28
   Insn 278: point = 1980, n_alt = -1
   Insn 277: point = 1980, n_alt = 1
   Insn 276: point = 1981, n_alt = 2
   Insn 275: point = 1983, n_alt = 7
   Insn 274: point = 1984, n_alt = 7
  BB 27
   Insn 272: point = 1986, n_alt = -1
   Insn 271: point = 1986, n_alt = 0
   Insn 270: point = 1987, n_alt = 0
   Insn 269: point = 1989, n_alt = 3
   Insn 268: point = 1990, n_alt = 8
   Insn 267: point = 1991, n_alt = 1
   Insn 266: point = 1993, n_alt = 7
   Insn 265: point = 1995, n_alt = 4
   Insn 264: point = 1996, n_alt = 1
   Insn 263: point = 1998, n_alt = 7
   Insn 262: point = 2000, n_alt = 0
   Insn 261: point = 2002, n_alt = 4
   Insn 260: point = 2003, n_alt = 3
   Insn 259: point = 2005, n_alt = 0
   Insn 258: point = 2007, n_alt = 0
   Insn 257: point = 2009, n_alt = 0
   Insn 256: point = 2010, n_alt = 0
   Insn 255: point = 2012, n_alt = 0
   Insn 254: point = 2014, n_alt = 0
   Insn 253: point = 2015, n_alt = 7
   Insn 252: point = 2017, n_alt = 0
   Insn 251: point = 2019, n_alt = 4
   Insn 250: point = 2020, n_alt = 3
   Insn 249: point = 2022, n_alt = 0
   Insn 248: point = 2024, n_alt = 0
   Insn 247: point = 2025, n_alt = 8
   Insn 246: point = 2026, n_alt = 1
   Insn 245: point = 2028, n_alt = 7
   Insn 244: point = 2030, n_alt = 4
   Insn 243: point = 2031, n_alt = 1
   Insn 242: point = 2033, n_alt = 7
   Insn 241: point = 2035, n_alt = 0
   Insn 240: point = 2037, n_alt = 4
   Insn 239: point = 2038, n_alt = 3
   Insn 238: point = 2040, n_alt = 0
   Insn 237: point = 2042, n_alt = 0
   Insn 236: point = 2044, n_alt = 0
   Insn 235: point = 2045, n_alt = 0
   Insn 234: point = 2047, n_alt = 0
   Insn 233: point = 2049, n_alt = 0
   Insn 232: point = 2050, n_alt = 7
   Insn 231: point = 2052, n_alt = 0
   Insn 230: point = 2054, n_alt = 4
   Insn 229: point = 2055, n_alt = 3
   Insn 228: point = 2057, n_alt = 0
   Insn 227: point = 2059, n_alt = 0
   Insn 226: point = 2060, n_alt = 1
   Insn 225: point = 2061, n_alt = 0
   Insn 224: point = 2063, n_alt = 0
   Insn 223: point = 2065, n_alt = 4
   Insn 222: point = 2066, n_alt = 3
   Insn 221: point = 2068, n_alt = 0
   Insn 220: point = 2070, n_alt = 0
   Insn 219: point = 2072, n_alt = 0
   Insn 218: point = 2073, n_alt = 0
   Insn 217: point = 2075, n_alt = 0
   Insn 216: point = 2077, n_alt = 0
  BB 25
   Insn 208: point = 2079, n_alt = 1
  BB 23
   Insn 200: point = 2080, n_alt = 1
   Insn 199: point = 2081, n_alt = 0
   Insn 198: point = 2082, n_alt = 0
  BB 22
   Insn 195: point = 2083, n_alt = -1
   Insn 194: point = 2083, n_alt = 0
  BB 21
   Insn 192: point = 2083, n_alt = -1
   Insn 191: point = 2083, n_alt = 0
   Insn 190: point = 2084, n_alt = 0
   Insn 189: point = 2086, n_alt = 3
  BB 19
   Insn 181: point = 2087, n_alt = 1
  BB 18
   Insn 178: point = 2087, n_alt = 0
   Insn 177: point = 2087, n_alt = 3
   Insn 176: point = 2087, n_alt = -2
   Insn 175: point = 2088, n_alt = 2
   Insn 174: point = 2088, n_alt = 2
   Insn 173: point = 2088, n_alt = 2
   Insn 172: point = 2088, n_alt = 2
   Insn 171: point = 2088, n_alt = 3
   Insn 170: point = 2089, n_alt = 0
   Insn 169: point = 2089, n_alt = 3
   Insn 168: point = 2089, n_alt = 2
   Insn 167: point = 2089, n_alt = 4
   Insn 166: point = 2089, n_alt = -2
   Insn 165: point = 2090, n_alt = 3
   Insn 164: point = 2091, n_alt = 0
   Insn 163: point = 2091, n_alt = 3
   Insn 162: point = 2091, n_alt = 2
   Insn 161: point = 2091, n_alt = 4
   Insn 160: point = 2091, n_alt = -2
   Insn 159: point = 2092, n_alt = 3
   Insn 158: point = 2093, n_alt = 0
   Insn 157: point = 2093, n_alt = 3
   Insn 156: point = 2093, n_alt = 2
   Insn 155: point = 2093, n_alt = 4
   Insn 154: point = 2093, n_alt = -2
   Insn 153: point = 2094, n_alt = 3
  BB 17
   Insn 151: point = 2095, n_alt = -1
   Insn 150: point = 2095, n_alt = 0
   Insn 149: point = 2096, n_alt = 0
   Insn 148: point = 2098, n_alt = 3
  BB 150
   Insn 1977: point = 2099, n_alt = -1
  BB 9
   Insn 96: point = 2099, n_alt = -1
   Insn 95: point = 2099, n_alt = 0
   Insn 94: point = 2100, n_alt = 0
   Insn 93: point = 2102, n_alt = 0
   Insn 92: point = 2103, n_alt = 0
  BB 16
   Insn 1911: point = 2103, n_alt = -1
   Insn 142: point = 2103, n_alt = 1
  BB 151
   Insn 1980: point = 2103, n_alt = -1
  BB 11
   Insn 106: point = 2103, n_alt = -1
   Insn 105: point = 2103, n_alt = 0
   Insn 104: point = 2104, n_alt = 0
   Insn 103: point = 2106, n_alt = 0
   Insn 102: point = 2107, n_alt = 0
  BB 15
   Insn 1909: point = 2108, n_alt = -1
   Insn 136: point = 2108, n_alt = 1
  BB 152
   Insn 1983: point = 2109, n_alt = -1
  BB 13
   Insn 114: point = 2110, n_alt = -1
   Insn 113: point = 2110, n_alt = 0
   Insn 112: point = 2111, n_alt = 0
   Insn 111: point = 2113, n_alt = 0
   Insn 110: point = 2114, n_alt = 0
  BB 14
   Insn 1907: point = 2115, n_alt = -1
   Insn 130: point = 2115, n_alt = 1
   Insn 129: point = 2115, n_alt = 8
   Insn 128: point = 2116, n_alt = 7
   Insn 127: point = 2117, n_alt = 4
   Insn 126: point = 2118, n_alt = 3
   Insn 125: point = 2120, n_alt = 0
   Insn 124: point = 2122, n_alt = 1
   Insn 123: point = 2124, n_alt = 0
   Insn 122: point = 2125, n_alt = 0
   Insn 121: point = 2127, n_alt = 0
   Insn 120: point = 2129, n_alt = 1
   Insn 119: point = 2131, n_alt = 0
   Insn 118: point = 2132, n_alt = 1
   Insn 117: point = 2134, n_alt = 1
   Insn 116: point = 2136, n_alt = 0
  BB 12
   Insn 108: point = 2138, n_alt = 1
  BB 10
   Insn 100: point = 2139, n_alt = 1
   Insn 99: point = 2140, n_alt = 0
   Insn 98: point = 2141, n_alt = 0
  BB 8
   Insn 90: point = 2142, n_alt = 1
  BB 148
   Insn 1971: point = 2142, n_alt = -1
  BB 3
   Insn 20: point = 2142, n_alt = -1
   Insn 19: point = 2142, n_alt = 0
   Insn 18: point = 2143, n_alt = 0
   Insn 17: point = 2145, n_alt = 0
   Insn 16: point = 2146, n_alt = 0
  BB 7
   Insn 1905: point = 2147, n_alt = -1
   Insn 84: point = 2147, n_alt = 1
  BB 149
   Insn 1974: point = 2148, n_alt = -1
  BB 5
   Insn 28: point = 2149, n_alt = -1
   Insn 27: point = 2149, n_alt = 0
   Insn 26: point = 2150, n_alt = 0
   Insn 25: point = 2152, n_alt = 0
   Insn 24: point = 2153, n_alt = 0
  BB 6
   Insn 1903: point = 2154, n_alt = -1
   Insn 78: point = 2154, n_alt = 1
   Insn 77: point = 2154, n_alt = 1
   Insn 76: point = 2155, n_alt = 4
   Insn 75: point = 2156, n_alt = 3
   Insn 74: point = 2158, n_alt = 0
   Insn 73: point = 2160, n_alt = 1
   Insn 72: point = 2162, n_alt = 0
   Insn 71: point = 2163, n_alt = 0
   Insn 70: point = 2165, n_alt = 1
   Insn 69: point = 2167, n_alt = 0
   Insn 68: point = 2168, n_alt = 8
   Insn 67: point = 2169, n_alt = 7
   Insn 66: point = 2170, n_alt = 4
   Insn 65: point = 2171, n_alt = 3
   Insn 64: point = 2173, n_alt = 0
   Insn 63: point = 2175, n_alt = 1
   Insn 62: point = 2177, n_alt = 0
   Insn 61: point = 2178, n_alt = 0
   Insn 60: point = 2180, n_alt = 1
   Insn 59: point = 2182, n_alt = 0
   Insn 58: point = 2183, n_alt = 1
   Insn 57: point = 2184, n_alt = 4
   Insn 56: point = 2185, n_alt = 3
   Insn 55: point = 2187, n_alt = 0
   Insn 54: point = 2189, n_alt = 1
   Insn 53: point = 2191, n_alt = 0
   Insn 52: point = 2192, n_alt = 0
   Insn 51: point = 2194, n_alt = 1
   Insn 50: point = 2196, n_alt = 0
   Insn 49: point = 2197, n_alt = 8
   Insn 48: point = 2198, n_alt = 7
   Insn 47: point = 2199, n_alt = 3
   Insn 46: point = 2200, n_alt = 3
   Insn 45: point = 2202, n_alt = 0
   Insn 44: point = 2204, n_alt = 1
   Insn 43: point = 2206, n_alt = 0
   Insn 42: point = 2207, n_alt = 0
   Insn 41: point = 2209, n_alt = 1
   Insn 40: point = 2211, n_alt = 0
   Insn 39: point = 2212, n_alt = 8
   Insn 38: point = 2213, n_alt = 7
   Insn 37: point = 2214, n_alt = 3
   Insn 36: point = 2215, n_alt = 3
   Insn 35: point = 2217, n_alt = 0
   Insn 34: point = 2219, n_alt = 1
   Insn 33: point = 2221, n_alt = 0
   Insn 32: point = 2222, n_alt = 0
   Insn 31: point = 2224, n_alt = 1
   Insn 30: point = 2226, n_alt = 0
  BB 4
   Insn 22: point = 2228, n_alt = 1
  BB 2
   Insn 14: point = 2229, n_alt = 1
   Insn 13: point = 2230, n_alt = 0
   Insn 12: point = 2231, n_alt = 0
   Insn 7: point = 2232, n_alt = 5
   Insn 6: point = 2232, n_alt = 5
   Insn 5: point = 2232, n_alt = 5
   Insn 4: point = 2232, n_alt = 5
   Insn 3: point = 2232, n_alt = 5
   Insn 2: point = 2232, n_alt = 5
 r87: [2223..2224]
 r88: [2218..2222]
 r89: [2218..2219]
 r90: [2216..2217]
 r91: [2212..2215]
 r92: [2208..2209]
 r93: [2203..2207]
 r94: [2203..2204]
 r95: [2201..2202]
 r96: [2197..2200]
 r97: [2193..2194]
 r98: [2188..2192]
 r99: [2188..2189]
 r100: [2186..2187]
 r101: [2183..2185]
 r102: [2179..2180]
 r103: [2174..2178]
 r104: [2174..2175]
 r105: [2172..2173]
 r106: [2168..2171]
 r107: [2164..2165]
 r108: [2159..2163]
 r109: [2159..2160]
 r110: [2157..2158]
 r111: [2154..2156]
 r112: [2133..2134]
 r113: [2126..2132]
 r114: [2128..2129]
 r115: [2126..2127]
 r116: [2121..2125]
 r117: [2121..2122]
 r118: [2119..2120]
 r119: [2115..2118]
 r120: [2095..2096]
 r121: [2083..2084]
 r122: [2074..2075]
 r123: [2069..2073]
 r124: [2069..2070]
 r125: [2067..2068]
 r126: [2064..2066]
 r127: [2056..2057]
 r128: [2053..2055]
 r129: [2032..2050]
 r130: [2046..2047]
 r131: [2041..2045]
 r132: [2041..2042]
 r133: [2039..2040]
 r134: [2036..2038]
 r135: [2032..2033]
 r136: [2027..2031]
 r137: [2027..2028]
 r138: [2021..2022]
 r139: [2018..2020]
 r140: [1997..2015]
 r141: [2011..2012]
 r142: [2006..2010]
 r143: [2006..2007]
 r144: [2004..2005]
 r145: [2001..2003]
 r146: [1997..1998]
 r147: [1992..1996]
 r148: [1992..1993]
 r149: [1986..1987]
 r150: [1980..1981]
 r151: [1972..1973]
 r152: [1910..1911]
 r153: [1903..1909]
 r154: [1905..1906]
 r155: [1903..1904]
 r156: [1898..1902]
 r157: [1898..1899]
 r158: [1896..1897]
 r159: [1893..1895]
 r160: [1885..1886]
 r161: [1878..1884]
 r162: [1880..1881]
 r163: [1878..1879]
 r164: [1873..1877]
 r165: [1873..1874]
 r166: [1871..1872]
 r167: [1868..1870]
 r168: [1860..1861]
 r169: [1855..1859]
 r170: [1855..1856]
 r171: [1853..1854]
 r172: [1850..1852]
 r173: [1836..1847]
 r174: [1843..1844]
 r175: [1840..1842]
 r176: [1836..1837]
 r177: [1831..1835]
 r178: [1831..1832]
 r179: [1829..1830]
 r180: [1826..1828]
 r181: [1824..1825]
 r182: [1967..1968]
 r183: [1962..1966]
 r184: [1962..1963]
 r185: [1960..1961]
 r186: [1957..1959]
 r187: [1951..1952]
 r188: [1946..1950]
 r189: [1946..1947]
 r190: [1944..1945]
 r191: [1941..1943]
 r192: [1935..1936]
 r193: [1930..1934]
 r194: [1930..1931]
 r195: [1928..1929]
 r196: [1925..1927]
 r197: [1919..1920]
 r198: [1810..1812]
 r199: [1808..1809]
 r200: [1803..1807]
 r201: [1803..1804]
 r202: [1763..1777]
 r203: [1773..1774]
 r204: [1768..1772]
 r205: [1768..1769]
 r206: [1766..1767]
 r207: [1760..1765]
 r208: [1760..1762]
 r209: [1756..1757]
 r210: [1749..1750]
 r211: [1744..1748]
 r212: [1744..1745]
 r213: [1742..1743]
 r214: [1738..1741]
 r215: [1732..1733]
 r216: [1727..1731]
 r217: [1727..1728]
 r218: [1725..1726]
 r219: [1721..1724]
 r220: [1716..1717]
 r221: [1713..1715]
 r222: [1705..1706]
 r223: [1702..1704]
 r224: [1694..1695]
 r225: [1692..1693]
 r226: [1689..1691]
 r227: [1681..1682]
 r228: [1679..1680]
 r229: [1676..1678]
 r230: [1668..1669]
 r231: [1651..1667]
 r232: [1663..1664]
 r233: [1658..1662]
 r234: [1658..1659]
 r235: [1656..1657]
 r236: [1653..1655]
 r237: [1651..1652]
 r238: [1648..1650]
 r239: [1642..1643]
 r240: [1625..1641]
 r241: [1637..1638]
 r242: [1632..1636]
 r243: [1632..1633]
 r244: [1630..1631]
 r245: [1627..1629]
 r246: [1625..1626]
 r247: [1622..1624]
 r248: [1616..1617]
 r249: [1614..1615]
 r250: [1607..1611]
 r251: [1607..1608]
 r252: [1567..1581]
 r253: [1577..1578]
 r254: [1572..1576]
 r255: [1572..1573]
 r256: [1570..1571]
 r257: [1564..1569]
 r258: [1564..1566]
 r259: [1560..1561]
 r260: [1553..1554]
 r261: [1548..1552]
 r262: [1548..1549]
 r263: [1546..1547]
 r264: [1542..1545]
 r265: [1536..1537]
 r266: [1531..1535]
 r267: [1531..1532]
 r268: [1529..1530]
 r269: [1525..1528]
 r270: [1517..1519]
 r271: [1507..1511]
 r272: [1507..1508]
 r273: [1505..1506]
 r274: [1502..1504]
 r275: [1493..1495]
 r276: [1481..1487]
 r277: [1483..1484]
 r278: [1481..1482]
 r279: [1479..1480]
 r280: [1476..1478]
 r281: [1468..1469]
 r282: [1465..1467]
 r283: [1455..1459]
 r284: [1455..1456]
 r285: [1453..1454]
 r286: [1450..1452]
 r287: [1442..1443]
 r288: [1439..1441]
 r289: [1427..1433]
 r290: [1429..1430]
 r291: [1427..1428]
 r292: [1425..1426]
 r293: [1422..1424]
 r294: [1414..1415]
 r295: [1397..1413]
 r296: [1409..1410]
 r297: [1404..1408]
 r298: [1404..1405]
 r299: [1402..1403]
 r300: [1399..1401]
 r301: [1397..1398]
 r302: [1395..1396]
 r303: [1369..1392]
 r304: [1388..1389]
 r305: [1371..1387]
 r306: [1383..1384]
 r307: [1378..1382]
 r308: [1378..1379]
 r309: [1376..1377]
 r310: [1373..1375]
 r311: [1371..1372]
 r312: [1369..1370]
 r313: [1324..1368]
 r314: [1364..1365]
 r315: [1362..1363]
 r316: [1360..1361]
 r317: [1343..1359]
 r318: [1355..1356]
 r319: [1350..1354]
 r320: [1350..1351]
 r321: [1348..1349]
 r322: [1345..1347]
 r323: [1343..1344]
 r324: [1326..1342]
 r325: [1338..1339]
 r326: [1333..1337]
 r327: [1333..1334]
 r328: [1331..1332]
 r329: [1328..1330]
 r330: [1326..1327]
 r331: [1324..1325]
 r332: [1318..1319]
 r333: [1309..1310]
 r334: [1307..1308]
 r335: [1305..1306]
 r336: [1302..1304]
 r337: [1296..1297]
 r338: [1291..1295]
 r339: [1291..1292]
 r340: [1289..1290]
 r341: [1286..1288]
 r342: [1283..1285]
 r343: [1278..1279]
 r344: [1273..1277]
 r345: [1273..1274]
 r346: [1271..1272]
 r347: [1267..1270]
 r348: [1263..1264]
 r349: [1258..1262]
 r350: [1258..1259]
 r351: [1256..1257]
 r352: [1252..1255]
 r353: [1226..1227]
 r354: [1223..1225]
 r355: [1202..1220]
 r356: [1216..1217]
 r357: [1211..1215]
 r358: [1211..1212]
 r359: [1209..1210]
 r360: [1206..1208]
 r361: [1202..1203]
 r362: [1197..1201]
 r363: [1197..1198]
 r364: [1191..1192]
 r365: [1186..1190]
 r366: [1186..1187]
 r367: [1184..1185]
 r368: [1181..1183]
 r369: [1179..1180]
 r370: [1174..1175]
 r371: [1169..1173]
 r372: [1169..1170]
 r373: [1167..1168]
 r374: [1161..1166]
 r375: [1161..1163]
 r376: [1135..1136]
 r377: [1130..1134]
 r378: [1130..1131]
 r379: [1128..1129]
 r380: [1125..1127]
 r381: [1106..1124]
 r382: [1120..1121]
 r383: [1115..1119]
 r384: [1115..1116]
 r385: [1113..1114]
 r386: [1110..1112]
 r387: [1106..1107]
 r388: [1101..1102]
 r389: [1096..1100]
 r390: [1096..1097]
 r391: [1094..1095]
 r392: [1079..1093]
 r393: [1089..1090]
 r394: [1084..1088]
 r395: [1084..1085]
 r396: [1082..1083]
 r397: [1074..1081]
 r398: [1074..1076]
 r399: [1052..1053]
 r400: [1047..1051]
 r401: [1047..1048]
 r402: [1045..1046]
 r403: [1042..1044]
 r404: [1038..1039]
 r405: [1033..1037]
 r406: [1033..1034]
 r407: [1031..1032]
 r408: [1028..1030]
 r409: [1024..1025]
 r410: [1021..1023]
 r411: [1000..1018]
 r412: [1014..1015]
 r413: [1009..1013]
 r414: [1009..1010]
 r415: [1007..1008]
 r416: [1004..1006]
 r417: [1000..1001]
 r418: [995..999]
 r419: [995..996]
 r420: [989..990]
 r421: [984..988]
 r422: [984..985]
 r423: [982..983]
 r424: [979..981]
 r425: [977..978]
 r426: [972..973]
 r427: [952..953]
 r428: [947..951]
 r429: [947..948]
 r430: [945..946]
 r431: [942..944]
 r432: [967..968]
 r433: [962..966]
 r434: [962..963]
 r435: [960..961]
 r436: [957..959]
 r437: [925..926]
 r438: [923..924]
 r439: [921..922]
 r440: [868..915]
 r441: [911..912]
 r442: [909..910]
 r443: [867..903]
 r444: [899..900]
 r445: [897..898]
 r446: [895..896]
 r447: [866..891]
 r448: [862..863]
 r449: [860..861]
 r450: [858..859]
 r451: [805..852]
 r452: [848..849]
 r453: [846..847]
 r454: [804..840]
 r455: [836..837]
 r456: [834..835]
 r457: [832..833]
 r458: [803..828]
 r459: [794..795]
 r460: [789..793]
 r461: [789..790]
 r462: [787..788]
 r463: [784..786]
 r464: [782..783]
 r465: [777..778]
 r466: [770..776]
 r467: [772..773]
 r468: [770..771]
 r469: [765..769]
 r470: [765..766]
 r471: [763..764]
 r472: [760..762]
 r473: [734..759]
 r474: [755..756]
 r475: [748..754]
 r476: [750..751]
 r477: [748..749]
 r478: [743..747]
 r479: [743..744]
 r480: [741..742]
 r481: [738..740]
 r482: [734..735]
 r483: [729..730]
 r484: [724..728]
 r485: [724..725]
 r486: [722..723]
 r487: [718..721]
 r488: [696..697]
 r489: [691..695]
 r490: [691..692]
 r491: [689..690]
 r492: [686..688]
 r493: [684..685]
 r494: [679..680]
 r495: [672..678]
 r496: [674..675]
 r497: [672..673]
 r498: [667..671]
 r499: [667..668]
 r500: [665..666]
 r501: [662..664]
 r502: [636..661]
 r503: [657..658]
 r504: [650..656]
 r505: [652..653]
 r506: [650..651]
 r507: [645..649]
 r508: [645..646]
 r509: [643..644]
 r510: [640..642]
 r511: [636..637]
 r512: [631..632]
 r513: [626..630]
 r514: [626..627]
 r515: [624..625]
 r516: [620..623]
 r517: [594..595]
 r518: [589..593]
 r519: [589..590]
 r520: [587..588]
 r521: [584..586]
 r522: [575..576]
 r523: [570..574]
 r524: [570..571]
 r525: [568..569]
 r526: [565..567]
 r527: [535..536]
 r528: [530..534]
 r529: [530..531]
 r530: [528..529]
 r531: [525..527]
 r532: [521..522]
 r533: [516..520]
 r534: [516..517]
 r535: [514..515]
 r536: [511..513]
 r537: [509..510]
 r538: [504..505]
 r539: [499..503]
 r540: [499..500]
 r541: [497..498]
 r542: [494..496]
 r543: [492..493]
 r544: [487..488]
 r545: [482..486]
 r546: [482..483]
 r547: [480..481]
 r548: [477..479]
 r549: [453..454]
 r550: [448..452]
 r551: [448..449]
 r552: [446..447]
 r553: [443..445]
 r554: [441..442]
 r555: [436..437]
 r556: [433..435]
 r557: [412..430]
 r558: [426..427]
 r559: [421..425]
 r560: [421..422]
 r561: [419..420]
 r562: [416..418]
 r563: [412..413]
 r564: [407..411]
 r565: [407..408]
 r566: [401..402]
 r567: [394..400]
 r568: [396..397]
 r569: [394..395]
 r570: [389..393]
 r571: [389..390]
 r572: [387..388]
 r573: [384..386]
 r574: [348..381]
 r575: [377..378]
 r576: [370..376]
 r577: [372..373]
 r578: [370..371]
 r579: [365..369]
 r580: [365..366]
 r581: [363..364]
 r582: [360..362]
 r583: [355..357]
 r584: [352..354]
 r585: [350..351]
 r586: [348..349]
 r587: [345..347]
 r588: [326..344]
 r589: [340..341]
 r590: [335..339]
 r591: [335..336]
 r592: [333..334]
 r593: [330..332]
 r594: [326..327]
 r595: [314..325]
 r596: [321..322]
 r597: [318..320]
 r598: [314..315]
 r599: [312..313]
 r600: [306..307]
 r601: [301..302]
 r602: [294..300]
 r603: [296..297]
 r604: [294..295]
 r605: [289..293]
 r606: [289..290]
 r607: [287..288]
 r608: [284..286]
 r610: [276..279]
 r611: [270..271]
 r612: [265..266]
 r613: [258..264]
 r614: [260..261]
 r615: [258..259]
 r616: [253..257]
 r617: [253..254]
 r618: [251..252]
 r619: [248..250]
 r621: [238..241]
 r622: [172..173]
 r623: [167..171]
 r624: [167..168]
 r625: [165..166]
 r626: [162..164]
 r629: [150..153]
 r630: [147..148]
 r631: [144..146]
 r632: [142..143]
 r633: [126..141]
 r634: [137..138]
 r635: [132..136]
 r636: [132..133]
 r637: [130..131]
 r638: [123..129]
 r639: [123..125]
 r640: [226..227]
 r641: [221..225]
 r642: [221..222]
 r643: [219..220]
 r644: [216..218]
 r647: [204..207]
 r648: [201..202]
 r649: [198..200]
 r650: [196..197]
 r651: [180..195]
 r652: [191..192]
 r653: [186..190]
 r654: [186..187]
 r655: [184..185]
 r656: [177..183]
 r657: [177..179]
 r658: [93..94]
 r659: [88..92]
 r660: [88..89]
 r661: [86..87]
 r662: [83..85]
 r663: [75..79]
 r664: [75..76]
 r665: [73..74]
 r666: [65..66]
 r667: [60..64]
 r668: [60..61]
 r669: [58..59]
 r670: [55..57]
 r671: [51..52]
 r672: [46..50]
 r673: [46..47]
 r674: [44..45]
 r675: [41..43]
 r676: [31..35]
 r677: [31..32]
 r678: [29..30]
 r679: [22..23]
 r680: [17..21]
 r681: [17..18]
 r682: [15..16]
 r683: [12..14]
 r684: [583..583] [579..581]
 r685: [564..564] [560..562]
 r686: [73..97] [55..70]
 r687: [29..40] [12..27]
 r688: [2229..2231]
 r689: [2142..2230]
 r690: [2142..2143]
 r691: [2149..2150]
 r692: [2099..2100]
 r693: [2139..2141]
 r694: [2103..2140]
 r695: [2103..2104]
 r696: [2110..2111]
 r697: [1235..1236]
 r698: [2080..2082]
 r699: [1239..2081]
 r700: [1239..1240]
 r701: [1246..1247]
 r702: [1822..1823]
 r703: [1917..1918]
 r704: [1316..1317]
 r705: [1144..1145]
 r706: [1232..1234]
 r707: [1148..1233]
 r708: [1148..1149]
 r709: [1155..1156]
 r710: [1141..1143]
 r711: [1061..1142]
 r712: [1061..1062]
 r713: [1068..1069]
 r714: [603..604]
 r715: [1058..1060]
 r716: [929..1059]
 r717: [929..930]
 r718: [936..937]
 r719: [800..802]
 r720: [705..801]
 r721: [705..706]
 r722: [712..713]
 r723: [702..704]
 r724: [607..703]
 r725: [607..608]
 r726: [614..615]
 r727: [600..602]
 r728: [548..601]
 r729: [548..549]
 r730: [555..556]
 r731: [545..547]
 r732: [103..546]
 r733: [103..104]
 r734: [541..543]
 r735: [464..542]
 r736: [464..465]
 r737: [471..472]
 r738: [459..461]
 r739: [110..460]
 r740: [110..111]
 r741: [117..118]
 r742: [280..305]
 r743: [242..269]
 r744: [100..102]
 r745: [0..101]
 r746: [0..1]
 r747: [7..8]
 r748: [71..82]
 r749: [2144..2145]
 r750: [2151..2152]
 r751: [2225..2226]
 r752: [2220..2221]
 r753: [2212..2214]
 r754: [2212..2213]
 r755: [2210..2211]
 r756: [2205..2206]
 r757: [2197..2199]
 r758: [2197..2198]
 r759: [2195..2196]
 r760: [2190..2191]
 r761: [2183..2184]
 r762: [2181..2182]
 r763: [2176..2177]
 r764: [2168..2170]
 r765: [2168..2169]
 r766: [2166..2167]
 r767: [2161..2162]
 r768: [2154..2155]
 r769: [2101..2102]
 r770: [2105..2106]
 r771: [2112..2113]
 r772: [2135..2136]
 r773: [2130..2131]
 r774: [2123..2124]
 r775: [2115..2117]
 r776: [2115..2116]
 r777: [2097..2098]
 r778: [2093..2094]
 r779: [2091..2092]
 r780: [2089..2090]
 r781: [2087..2088]
 r782: [1237..1238]
 r783: [2085..2086]
 r784: [1241..1242]
 r785: [1248..1249]
 r786: [2076..2077]
 r787: [2071..2072]
 r788: [2062..2065]
 r789: [2062..2063]
 r790: [2060..2061]
 r791: [2058..2059]
 r792: [2051..2054]
 r793: [2051..2052]
 r794: [2048..2049]
 r795: [2043..2044]
 r796: [2034..2037]
 r797: [2034..2035]
 r798: [2029..2030]
 r799: [2025..2026]
 r800: [2023..2024]
 r801: [2016..2019]
 r802: [2016..2017]
 r803: [2013..2014]
 r804: [2008..2009]
 r805: [1999..2002]
 r806: [1999..2000]
 r807: [1994..1995]
 r808: [1990..1991]
 r809: [1988..1989]
 r810: [1982..1984]
 r811: [1982..1983]
 r812: [1977..1978]
 r813: [1974..1975]
 r814: [1912..1913]
 r815: [1907..1908]
 r816: [1900..1901]
 r817: [1891..1894]
 r818: [1891..1892]
 r819: [1889..1890]
 r820: [1887..1888]
 r821: [1882..1883]
 r822: [1875..1876]
 r823: [1866..1869]
 r824: [1866..1867]
 r825: [1864..1865]
 r826: [1862..1863]
 r827: [1857..1858]
 r828: [1848..1851]
 r829: [1848..1849]
 r830: [1845..1846]
 r831: [1838..1841]
 r832: [1838..1839]
 r833: [1833..1834]
 r834: [1826..1827]
 r835: [1820..1821]
 r836: [1969..1970]
 r837: [1964..1965]
 r838: [1957..1958]
 r839: [1955..1956]
 r840: [1953..1954]
 r841: [1948..1949]
 r842: [1941..1942]
 r843: [1939..1940]
 r844: [1937..1938]
 r845: [1932..1933]
 r846: [1925..1926]
 r847: [1923..1924]
 r848: [1921..1922]
 r849: [1915..1916]
 r850: [1815..1816]
 r851: [1817..1818]
 r852: [1813..1814]
 r853: [1810..1811]
 r854: [1805..1806]
 r855: [1801..1802]
 r856: [1783..1800]
 r857: [1791..1799]
 r858: [1789..1798] [1778..1786]
 r859: [1791..1792]
 r860: [1796..1797]
 r861: [1785..1795]
 r862: [1787..1788]
 r863: [1780..1781]
 r864: [1775..1776]
 r865: [1770..1771]
 r866: [1763..1764]
 r867: [1760..1761]
 r868: [1758..1759]
 r869: [1754..1755]
 r870: [1751..1752]
 r871: [1746..1747]
 r872: [1738..1740]
 r873: [1738..1739]
 r874: [1734..1735]
 r875: [1729..1730]
 r876: [1721..1723]
 r877: [1721..1722]
 r878: [1718..1719]
 r879: [1711..1714]
 r880: [1711..1712]
 r881: [1709..1710]
 r882: [1707..1708]
 r883: [1700..1703]
 r884: [1700..1701]
 r885: [1698..1699]
 r886: [1696..1697]
 r887: [1687..1690]
 r888: [1687..1688]
 r889: [1685..1686]
 r890: [1683..1684]
 r891: [1674..1677]
 r892: [1674..1675]
 r893: [1672..1673]
 r894: [1670..1671]
 r895: [1665..1666]
 r896: [1660..1661]
 r897: [1653..1654]
 r898: [1646..1647]
 r899: [1648..1649]
 r900: [1644..1645]
 r901: [1639..1640]
 r902: [1634..1635]
 r903: [1627..1628]
 r904: [1620..1621]
 r905: [1622..1623]
 r906: [1618..1619]
 r907: [1609..1610]
 r908: [1605..1606]
 r909: [1587..1604]
 r910: [1595..1603]
 r911: [1593..1602] [1582..1590]
 r912: [1595..1596]
 r913: [1600..1601]
 r914: [1589..1599]
 r915: [1591..1592]
 r916: [1584..1585]
 r917: [1579..1580]
 r918: [1574..1575]
 r919: [1567..1568]
 r920: [1564..1565]
 r921: [1562..1563]
 r922: [1558..1559]
 r923: [1555..1556]
 r924: [1550..1551]
 r925: [1542..1544]
 r926: [1542..1543]
 r927: [1538..1539]
 r928: [1533..1534]
 r929: [1525..1527]
 r930: [1525..1526]
 r931: [1522..1523]
 r932: [1520..1521]
 r933: [1516..1518] [1512..1513]
 r934: [1514..1515]
 r935: [1509..1510]
 r936: [1500..1503]
 r937: [1500..1501]
 r938: [1498..1499]
 r939: [1496..1497]
 r940: [1492..1494] [1488..1489]
 r941: [1490..1491]
 r942: [1485..1486]
 r943: [1474..1477]
 r944: [1474..1475]
 r945: [1472..1473]
 r946: [1470..1471]
 r947: [1464..1466] [1460..1461]
 r948: [1462..1463]
 r949: [1457..1458]
 r950: [1448..1451]
 r951: [1448..1449]
 r952: [1446..1447]
 r953: [1444..1445]
 r954: [1438..1440] [1434..1435]
 r955: [1436..1437]
 r956: [1431..1432]
 r957: [1420..1423]
 r958: [1420..1421]
 r959: [1418..1419]
 r960: [1416..1417]
 r961: [1411..1412]
 r962: [1406..1407]
 r963: [1399..1400]
 r964: [1390..1391]
 r965: [1385..1386]
 r966: [1380..1381]
 r967: [1373..1374]
 r968: [1366..1367]
 r969: [1357..1358]
 r970: [1352..1353]
 r971: [1345..1346]
 r972: [1340..1341]
 r973: [1335..1336]
 r974: [1328..1329]
 r975: [1322..1323]
 r976: [1320..1321]
 r977: [1314..1315]
 r978: [1311..1313]
 r979: [1311..1312]
 r980: [1300..1301]
 r981: [1302..1303]
 r982: [1298..1299]
 r983: [1293..1294]
 r984: [1286..1287]
 r985: [1283..1284]
 r986: [1280..1281]
 r987: [1275..1276]
 r988: [1267..1269]
 r989: [1267..1268]
 r990: [1265..1266]
 r991: [1260..1261]
 r992: [1252..1254]
 r993: [1252..1253]
 r994: [1146..1147]
 r995: [1150..1151]
 r996: [1157..1158]
 r997: [1228..1229]
 r998: [1221..1224]
 r999: [1221..1222]
 r1000: [1218..1219]
 r1001: [1213..1214]
 r1002: [1204..1207]
 r1003: [1204..1205]
 r1004: [1199..1200]
 r1005: [1195..1196]
 r1006: [1193..1194]
 r1007: [1188..1189]
 r1008: [1181..1182]
 r1009: [1176..1177]
 r1010: [1171..1172]
 r1011: [1164..1165]
 r1012: [1161..1162]
 r1013: [1063..1064]
 r1014: [1070..1071]
 r1015: [1137..1138]
 r1016: [1132..1133]
 r1017: [1125..1126]
 r1018: [1122..1123]
 r1019: [1117..1118]
 r1020: [1108..1111]
 r1021: [1108..1109]
 r1022: [1103..1104]
 r1023: [1098..1099]
 r1024: [1091..1092]
 r1025: [1086..1087]
 r1026: [1077..1080]
 r1027: [1077..1078]
 r1028: [1074..1075]
 r1029: [605..606]
 r1030: [931..932]
 r1031: [938..939]
 r1032: [1054..1055]
 r1033: [1049..1050]
 r1034: [1042..1043]
 r1035: [1040..1041]
 r1036: [1035..1036]
 r1037: [1028..1029]
 r1038: [1026..1027]
 r1039: [1019..1022]
 r1040: [1019..1020]
 r1041: [1016..1017]
 r1042: [1011..1012]
 r1043: [1002..1005]
 r1044: [1002..1003]
 r1045: [997..998]
 r1046: [993..994]
 r1047: [991..992]
 r1048: [986..987]
 r1049: [979..980]
 r1050: [974..975]
 r1051: [954..955]
 r1052: [949..950]
 r1053: [942..943]
 r1054: [969..970]
 r1055: [964..965]
 r1056: [957..958]
 r1057: [927..928]
 r1058: [919..920]
 r1059: [916..918]
 r1060: [916..917]
 r1061: [913..914]
 r1062: [907..908]
 r1063: [904..906]
 r1064: [904..905]
 r1065: [901..902]
 r1066: [892..894]
 r1067: [892..893]
 r1068: [864..865]
 r1069: [856..857]
 r1070: [853..855]
 r1071: [853..854]
 r1072: [850..851]
 r1073: [844..845]
 r1074: [841..843]
 r1075: [841..842]
 r1076: [838..839]
 r1077: [829..831]
 r1078: [829..830]
 r1079: [707..708]
 r1080: [714..715]
 r1081: [796..797]
 r1082: [791..792]
 r1083: [784..785]
 r1084: [779..780]
 r1085: [774..775]
 r1086: [767..768]
 r1087: [760..761]
 r1088: [757..758]
 r1089: [752..753]
 r1090: [745..746]
 r1091: [736..739]
 r1092: [736..737]
 r1093: [731..732]
 r1094: [726..727]
 r1095: [718..720]
 r1096: [718..719]
 r1097: [609..610]
 r1098: [616..617]
 r1099: [698..699]
 r1100: [693..694]
 r1101: [686..687]
 r1102: [681..682]
 r1103: [676..677]
 r1104: [669..670]
 r1105: [662..663]
 r1106: [659..660]
 r1107: [654..655]
 r1108: [647..648]
 r1109: [638..641]
 r1110: [638..639]
 r1111: [633..634]
 r1112: [628..629]
 r1113: [620..622]
 r1114: [620..621]
 r1115: [550..551]
 r1116: [557..558]
 r1117: [596..597]
 r1118: [591..592]
 r1119: [584..585]
 r1120: [577..578]
 r1121: [572..573]
 r1122: [565..566]
 r1123: [105..106]
 r1124: [466..467]
 r1125: [473..474]
 r1126: [537..538]
 r1127: [532..533]
 r1128: [525..526]
 r1129: [523..524]
 r1130: [518..519]
 r1131: [511..512]
 r1132: [506..507]
 r1133: [501..502]
 r1134: [494..495]
 r1135: [489..490]
 r1136: [484..485]
 r1137: [477..478]
 r1138: [112..113]
 r1139: [119..120]
 r1140: [455..456]
 r1141: [450..451]
 r1142: [443..444]
 r1143: [438..439]
 r1144: [431..434]
 r1145: [431..432]
 r1146: [428..429]
 r1147: [423..424]
 r1148: [414..417]
 r1149: [414..415]
 r1150: [409..410]
 r1151: [405..406]
 r1152: [403..404]
 r1153: [398..399]
 r1154: [391..392]
 r1155: [382..385]
 r1156: [382..383]
 r1157: [379..380]
 r1158: [374..375]
 r1159: [367..368]
 r1160: [358..361]
 r1161: [358..359]
 r1162: [355..356]
 r1163: [352..353]
 r1164: [345..346]
 r1165: [342..343]
 r1166: [337..338]
 r1167: [328..331]
 r1168: [328..329]
 r1169: [323..324]
 r1170: [316..319]
 r1171: [316..317]
 r1172: [310..311]
 r1173: [308..309]
 r1174: [303..304]
 r1175: [298..299]
 r1176: [291..292]
 r1177: [284..285]
 r1178: [274..275]
 r1179: [272..273]
 r1180: [267..268]
 r1181: [262..263]
 r1182: [255..256]
 r1183: [246..249]
 r1184: [246..247]
 r1185: [236..237]
 r1186: [234..235]
 r1187: [174..175]
 r1188: [169..170]
 r1189: [162..163]
 r1190: [157..158]
 r1191: [154..155]
 r1192: [144..145]
 r1193: [139..140]
 r1194: [134..135]
 r1195: [123..124]
 r1196: [231..232]
 r1197: [228..229]
 r1198: [223..224]
 r1199: [216..217]
 r1200: [211..212]
 r1201: [208..209]
 r1202: [198..199]
 r1203: [193..194]
 r1204: [188..189]
 r1205: [177..178]
 r1206: [2..3]
 r1207: [9..10]
 r1208: [95..96]
 r1209: [90..91]
 r1210: [83..84]
 r1211: [80..81]
 r1212: [77..78]
 r1213: [67..68]
 r1214: [62..63]
 r1215: [55..56]
 r1216: [53..54]
 r1217: [48..49]
 r1218: [41..42]
 r1219: [36..37]
 r1220: [38..39]
 r1221: [33..34]
 r1222: [24..25]
 r1223: [19..20]
 r1224: [12..13]
 r1225: [1793..1794]
 r1226: [1782..1784]
 r1227: [1612..1613]
 r1228: [1597..1598]
 r1229: [1586..1588]
 r1230: [1393..1394]
 r1231: [889..890]
 r1232: [887..888]
 r1233: [885..886]
 r1234: [883..884]
 r1235: [881..882]
 r1236: [879..880]
 r1237: [877..878]
 r1238: [875..876]
 r1239: [873..874]
 r1240: [871..872]
 r1241: [869..870]
 r1242: [826..827]
 r1243: [824..825]
 r1244: [822..823]
 r1245: [820..821]
 r1246: [818..819]
 r1247: [816..817]
 r1248: [814..815]
 r1249: [812..813]
 r1250: [810..811]
 r1251: [808..809]
 r1252: [806..807]
 r1253: [282..283]
 r1255: [244..245]
 r1257: [160..161]
 r1258: [149..151]
 r1260: [214..215]
 r1261: [203..205]
 r1269: [180..181]
 r1270: [126..127]
 r1271: [238..239]
 r1272: [276..277]
 r1273: [152..156]
 r1274: [128..159]
 r1275: [240..243]
 r1276: [278..281]
 r1277: [206..210]
 r1278: [182..213]
Compressing live ranges: from 2232 to 1800 - 80%
Ranges after the compression:
 r87: [1794..1795]
 r88: [1790..1793]
 r89: [1790..1791]
 r90: [1788..1789]
 r91: [1786..1787]
 r92: [1782..1783]
 r93: [1778..1781]
 r94: [1778..1779]
 r95: [1776..1777]
 r96: [1774..1775]
 r97: [1770..1771]
 r98: [1766..1769]
 r99: [1766..1767]
 r100: [1764..1765]
 r101: [1762..1763]
 r102: [1758..1759]
 r103: [1754..1757]
 r104: [1754..1755]
 r105: [1752..1753]
 r106: [1750..1751]
 r107: [1746..1747]
 r108: [1742..1745]
 r109: [1742..1743]
 r110: [1740..1741]
 r111: [1738..1739]
 r112: [1724..1725]
 r113: [1718..1723]
 r114: [1720..1721]
 r115: [1718..1719]
 r116: [1714..1717]
 r117: [1714..1715]
 r118: [1712..1713]
 r119: [1710..1711]
 r120: [1694..1695]
 r121: [1682..1683]
 r122: [1676..1677]
 r123: [1672..1675]
 r124: [1672..1673]
 r125: [1670..1671]
 r126: [1668..1669]
 r127: [1660..1661]
 r128: [1658..1659]
 r129: [1640..1655]
 r130: [1652..1653]
 r131: [1648..1651]
 r132: [1648..1649]
 r133: [1646..1647]
 r134: [1644..1645]
 r135: [1640..1641]
 r136: [1636..1639]
 r137: [1636..1637]
 r138: [1630..1631]
 r139: [1628..1629]
 r140: [1610..1625]
 r141: [1622..1623]
 r142: [1618..1621]
 r143: [1618..1619]
 r144: [1616..1617]
 r145: [1614..1615]
 r146: [1610..1611]
 r147: [1606..1609]
 r148: [1606..1607]
 r149: [1600..1601]
 r150: [1596..1597]
 r151: [1590..1591]
 r152: [1536..1537]
 r153: [1530..1535]
 r154: [1532..1533]
 r155: [1530..1531]
 r156: [1526..1529]
 r157: [1526..1527]
 r158: [1524..1525]
 r159: [1522..1523]
 r160: [1514..1515]
 r161: [1508..1513]
 r162: [1510..1511]
 r163: [1508..1509]
 r164: [1504..1507]
 r165: [1504..1505]
 r166: [1502..1503]
 r167: [1500..1501]
 r168: [1492..1493]
 r169: [1488..1491]
 r170: [1488..1489]
 r171: [1486..1487]
 r172: [1484..1485]
 r173: [1472..1481]
 r174: [1478..1479]
 r175: [1476..1477]
 r176: [1472..1473]
 r177: [1468..1471]
 r178: [1468..1469]
 r179: [1466..1467]
 r180: [1464..1465]
 r181: [1462..1463]
 r182: [1586..1587]
 r183: [1582..1585]
 r184: [1582..1583]
 r185: [1580..1581]
 r186: [1578..1579]
 r187: [1572..1573]
 r188: [1568..1571]
 r189: [1568..1569]
 r190: [1566..1567]
 r191: [1564..1565]
 r192: [1558..1559]
 r193: [1554..1557]
 r194: [1554..1555]
 r195: [1552..1553]
 r196: [1550..1551]
 r197: [1544..1545]
 r198: [1450..1451]
 r199: [1448..1449]
 r200: [1444..1447]
 r201: [1444..1445]
 r202: [1416..1427]
 r203: [1424..1425]
 r204: [1420..1423]
 r205: [1420..1421]
 r206: [1418..1419]
 r207: [1414..1417]
 r208: [1414..1415]
 r209: [1410..1411]
 r210: [1404..1405]
 r211: [1400..1403]
 r212: [1400..1401]
 r213: [1398..1399]
 r214: [1396..1397]
 r215: [1392..1393]
 r216: [1388..1391]
 r217: [1388..1389]
 r218: [1386..1387]
 r219: [1384..1385]
 r220: [1380..1381]
 r221: [1378..1379]
 r222: [1370..1371]
 r223: [1368..1369]
 r224: [1360..1361]
 r225: [1358..1359]
 r226: [1356..1357]
 r227: [1348..1349]
 r228: [1346..1347]
 r229: [1344..1345]
 r230: [1336..1337]
 r231: [1322..1335]
 r232: [1332..1333]
 r233: [1328..1331]
 r234: [1328..1329]
 r235: [1326..1327]
 r236: [1324..1325]
 r237: [1322..1323]
 r238: [1320..1321]
 r239: [1314..1315]
 r240: [1300..1313]
 r241: [1310..1311]
 r242: [1306..1309]
 r243: [1306..1307]
 r244: [1304..1305]
 r245: [1302..1303]
 r246: [1300..1301]
 r247: [1298..1299]
 r248: [1292..1293]
 r249: [1290..1291]
 r250: [1284..1287]
 r251: [1284..1285]
 r252: [1256..1267]
 r253: [1264..1265]
 r254: [1260..1263]
 r255: [1260..1261]
 r256: [1258..1259]
 r257: [1254..1257]
 r258: [1254..1255]
 r259: [1250..1251]
 r260: [1244..1245]
 r261: [1240..1243]
 r262: [1240..1241]
 r263: [1238..1239]
 r264: [1236..1237]
 r265: [1232..1233]
 r266: [1228..1231]
 r267: [1228..1229]
 r268: [1226..1227]
 r269: [1224..1225]
 r270: [1218..1219]
 r271: [1210..1213]
 r272: [1210..1211]
 r273: [1208..1209]
 r274: [1206..1207]
 r275: [1198..1199]
 r276: [1188..1193]
 r277: [1190..1191]
 r278: [1188..1189]
 r279: [1186..1187]
 r280: [1184..1185]
 r281: [1176..1177]
 r282: [1174..1175]
 r283: [1166..1169]
 r284: [1166..1167]
 r285: [1164..1165]
 r286: [1162..1163]
 r287: [1154..1155]
 r288: [1152..1153]
 r289: [1142..1147]
 r290: [1144..1145]
 r291: [1142..1143]
 r292: [1140..1141]
 r293: [1138..1139]
 r294: [1130..1131]
 r295: [1116..1129]
 r296: [1126..1127]
 r297: [1122..1125]
 r298: [1122..1123]
 r299: [1120..1121]
 r300: [1118..1119]
 r301: [1116..1117]
 r302: [1114..1115]
 r303: [1092..1111]
 r304: [1108..1109]
 r305: [1094..1107]
 r306: [1104..1105]
 r307: [1100..1103]
 r308: [1100..1101]
 r309: [1098..1099]
 r310: [1096..1097]
 r311: [1094..1095]
 r312: [1092..1093]
 r313: [1054..1091]
 r314: [1088..1089]
 r315: [1086..1087]
 r316: [1084..1085]
 r317: [1070..1083]
 r318: [1080..1081]
 r319: [1076..1079]
 r320: [1076..1077]
 r321: [1074..1075]
 r322: [1072..1073]
 r323: [1070..1071]
 r324: [1056..1069]
 r325: [1066..1067]
 r326: [1062..1065]
 r327: [1062..1063]
 r328: [1060..1061]
 r329: [1058..1059]
 r330: [1056..1057]
 r331: [1054..1055]
 r332: [1048..1049]
 r333: [1040..1041]
 r334: [1038..1039]
 r335: [1036..1037]
 r336: [1034..1035]
 r337: [1028..1029]
 r338: [1024..1027]
 r339: [1024..1025]
 r340: [1022..1023]
 r341: [1020..1021]
 r342: [1018..1019]
 r343: [1014..1015]
 r344: [1010..1013]
 r345: [1010..1011]
 r346: [1008..1009]
 r347: [1006..1007]
 r348: [1002..1003]
 r349: [998..1001]
 r350: [998..999]
 r351: [996..997]
 r352: [994..995]
 r353: [976..977]
 r354: [974..975]
 r355: [956..971]
 r356: [968..969]
 r357: [964..967]
 r358: [964..965]
 r359: [962..963]
 r360: [960..961]
 r361: [956..957]
 r362: [952..955]
 r363: [952..953]
 r364: [946..947]
 r365: [942..945]
 r366: [942..943]
 r367: [940..941]
 r368: [938..939]
 r369: [936..937]
 r370: [932..933]
 r371: [928..931]
 r372: [928..929]
 r373: [926..927]
 r374: [922..925]
 r375: [922..923]
 r376: [904..905]
 r377: [900..903]
 r378: [900..901]
 r379: [898..899]
 r380: [896..897]
 r381: [880..895]
 r382: [892..893]
 r383: [888..891]
 r384: [888..889]
 r385: [886..887]
 r386: [884..885]
 r387: [880..881]
 r388: [876..877]
 r389: [872..875]
 r390: [872..873]
 r391: [870..871]
 r392: [858..869]
 r393: [866..867]
 r394: [862..865]
 r395: [862..863]
 r396: [860..861]
 r397: [854..859]
 r398: [854..855]
 r399: [840..841]
 r400: [836..839]
 r401: [836..837]
 r402: [834..835]
 r403: [832..833]
 r404: [828..829]
 r405: [824..827]
 r406: [824..825]
 r407: [822..823]
 r408: [820..821]
 r409: [816..817]
 r410: [814..815]
 r411: [796..811]
 r412: [808..809]
 r413: [804..807]
 r414: [804..805]
 r415: [802..803]
 r416: [800..801]
 r417: [796..797]
 r418: [792..795]
 r419: [792..793]
 r420: [786..787]
 r421: [782..785]
 r422: [782..783]
 r423: [780..781]
 r424: [778..779]
 r425: [776..777]
 r426: [772..773]
 r427: [756..757]
 r428: [752..755]
 r429: [752..753]
 r430: [750..751]
 r431: [748..749]
 r432: [768..769]
 r433: [764..767]
 r434: [764..765]
 r435: [762..763]
 r436: [760..761]
 r437: [736..737]
 r438: [734..735]
 r439: [732..733]
 r440: [686..727]
 r441: [724..725]
 r442: [722..723]
 r443: [686..717]
 r444: [714..715]
 r445: [712..713]
 r446: [710..711]
 r447: [686..707]
 r448: [682..683]
 r449: [680..681]
 r450: [678..679]
 r451: [632..673]
 r452: [670..671]
 r453: [668..669]
 r454: [632..663]
 r455: [660..661]
 r456: [658..659]
 r457: [656..657]
 r458: [632..653]
 r459: [626..627]
 r460: [622..625]
 r461: [622..623]
 r462: [620..621]
 r463: [618..619]
 r464: [616..617]
 r465: [612..613]
 r466: [606..611]
 r467: [608..609]
 r468: [606..607]
 r469: [602..605]
 r470: [602..603]
 r471: [600..601]
 r472: [598..599]
 r473: [576..597]
 r474: [594..595]
 r475: [588..593]
 r476: [590..591]
 r477: [588..589]
 r478: [584..587]
 r479: [584..585]
 r480: [582..583]
 r481: [580..581]
 r482: [576..577]
 r483: [572..573]
 r484: [568..571]
 r485: [568..569]
 r486: [566..567]
 r487: [564..565]
 r488: [550..551]
 r489: [546..549]
 r490: [546..547]
 r491: [544..545]
 r492: [542..543]
 r493: [540..541]
 r494: [536..537]
 r495: [530..535]
 r496: [532..533]
 r497: [530..531]
 r498: [526..529]
 r499: [526..527]
 r500: [524..525]
 r501: [522..523]
 r502: [500..521]
 r503: [518..519]
 r504: [512..517]
 r505: [514..515]
 r506: [512..513]
 r507: [508..511]
 r508: [508..509]
 r509: [506..507]
 r510: [504..505]
 r511: [500..501]
 r512: [496..497]
 r513: [492..495]
 r514: [492..493]
 r515: [490..491]
 r516: [488..489]
 r517: [470..471]
 r518: [466..469]
 r519: [466..467]
 r520: [464..465]
 r521: [462..463]
 r522: [455..456]
 r523: [451..454]
 r524: [451..452]
 r525: [449..450]
 r526: [447..448]
 r527: [428..429]
 r528: [424..427]
 r529: [424..425]
 r530: [422..423]
 r531: [420..421]
 r532: [416..417]
 r533: [412..415]
 r534: [412..413]
 r535: [410..411]
 r536: [408..409]
 r537: [406..407]
 r538: [402..403]
 r539: [398..401]
 r540: [398..399]
 r541: [396..397]
 r542: [394..395]
 r543: [392..393]
 r544: [388..389]
 r545: [384..387]
 r546: [384..385]
 r547: [382..383]
 r548: [380..381]
 r549: [366..367]
 r550: [362..365]
 r551: [362..363]
 r552: [360..361]
 r553: [358..359]
 r554: [356..357]
 r555: [352..353]
 r556: [350..351]
 r557: [332..347]
 r558: [344..345]
 r559: [340..343]
 r560: [340..341]
 r561: [338..339]
 r562: [336..337]
 r563: [332..333]
 r564: [328..331]
 r565: [328..329]
 r566: [322..323]
 r567: [316..321]
 r568: [318..319]
 r569: [316..317]
 r570: [312..315]
 r571: [312..313]
 r572: [310..311]
 r573: [308..309]
 r574: [278..305]
 r575: [302..303]
 r576: [296..301]
 r577: [298..299]
 r578: [296..297]
 r579: [292..295]
 r580: [292..293]
 r581: [290..291]
 r582: [288..289]
 r583: [284..285]
 r584: [282..283]
 r585: [280..281]
 r586: [278..279]
 r587: [276..277]
 r588: [260..275]
 r589: [272..273]
 r590: [268..271]
 r591: [268..269]
 r592: [266..267]
 r593: [264..265]
 r594: [260..261]
 r595: [250..259]
 r596: [256..257]
 r597: [254..255]
 r598: [250..251]
 r599: [248..249]
 r600: [242..243]
 r601: [238..239]
 r602: [232..237]
 r603: [234..235]
 r604: [232..233]
 r605: [228..231]
 r606: [228..229]
 r607: [226..227]
 r608: [224..225]
 r610: [216..219]
 r611: [210..211]
 r612: [206..207]
 r613: [200..205]
 r614: [202..203]
 r615: [200..201]
 r616: [196..199]
 r617: [196..197]
 r618: [194..195]
 r619: [192..193]
 r621: [182..185]
 r622: [128..129]
 r623: [124..127]
 r624: [124..125]
 r625: [122..123]
 r626: [120..121]
 r629: [110..113]
 r630: [108..109]
 r631: [106..107]
 r632: [104..105]
 r633: [90..103]
 r634: [100..101]
 r635: [96..99]
 r636: [96..97]
 r637: [94..95]
 r638: [88..93]
 r639: [88..89]
 r640: [172..173]
 r641: [168..171]
 r642: [168..169]
 r643: [166..167]
 r644: [164..165]
 r647: [154..157]
 r648: [152..153]
 r649: [150..151]
 r650: [148..149]
 r651: [134..147]
 r652: [144..145]
 r653: [140..143]
 r654: [140..141]
 r655: [138..139]
 r656: [132..137]
 r657: [132..133]
 r658: [70..71]
 r659: [66..69]
 r660: [66..67]
 r661: [64..65]
 r662: [62..63]
 r663: [56..59]
 r664: [56..57]
 r665: [54..55]
 r666: [50..51]
 r667: [46..49]
 r668: [46..47]
 r669: [44..45]
 r670: [42..43]
 r671: [38..39]
 r672: [34..37]
 r673: [34..35]
 r674: [32..33]
 r675: [30..31]
 r676: [22..25]
 r677: [22..23]
 r678: [20..21]
 r679: [16..17]
 r680: [12..15]
 r681: [12..13]
 r682: [10..11]
 r683: [8..9]
 r684: [459..461]
 r685: [444..446]
 r686: [42..73]
 r687: [8..29]
 r688: [1798..1799]
 r689: [1730..1799]
 r690: [1730..1731]
 r691: [1734..1735]
 r692: [1698..1699]
 r693: [1728..1729]
 r694: [1702..1729]
 r695: [1702..1703]
 r696: [1706..1707]
 r697: [982..983]
 r698: [1680..1681]
 r699: [986..1681]
 r700: [986..987]
 r701: [990..991]
 r702: [1460..1461]
 r703: [1542..1543]
 r704: [1046..1047]
 r705: [910..911]
 r706: [980..981]
 r707: [914..981]
 r708: [914..915]
 r709: [918..919]
 r710: [908..909]
 r711: [846..909]
 r712: [846..847]
 r713: [850..851]
 r714: [476..477]
 r715: [844..845]
 r716: [740..845]
 r717: [740..741]
 r718: [744..745]
 r719: [630..631]
 r720: [556..631]
 r721: [556..557]
 r722: [560..561]
 r723: [554..555]
 r724: [480..555]
 r725: [480..481]
 r726: [484..485]
 r727: [474..475]
 r728: [436..475]
 r729: [436..437]
 r730: [440..441]
 r731: [434..435]
 r732: [76..435]
 r733: [76..77]
 r734: [432..433]
 r735: [372..433]
 r736: [372..373]
 r737: [376..377]
 r738: [370..371]
 r739: [80..371]
 r740: [80..81]
 r741: [84..85]
 r742: [220..241]
 r743: [186..209]
 r744: [74..75]
 r745: [0..75]
 r746: [0..1]
 r747: [4..5]
 r748: [54..61]
 r749: [1732..1733]
 r750: [1736..1737]
 r751: [1796..1797]
 r752: [1792..1793]
 r753: [1786..1787]
 r754: [1786..1787]
 r755: [1784..1785]
 r756: [1780..1781]
 r757: [1774..1775]
 r758: [1774..1775]
 r759: [1772..1773]
 r760: [1768..1769]
 r761: [1762..1763]
 r762: [1760..1761]
 r763: [1756..1757]
 r764: [1750..1751]
 r765: [1750..1751]
 r766: [1748..1749]
 r767: [1744..1745]
 r768: [1738..1739]
 r769: [1700..1701]
 r770: [1704..1705]
 r771: [1708..1709]
 r772: [1726..1727]
 r773: [1722..1723]
 r774: [1716..1717]
 r775: [1710..1711]
 r776: [1710..1711]
 r777: [1696..1697]
 r778: [1692..1693]
 r779: [1690..1691]
 r780: [1688..1689]
 r781: [1686..1687]
 r782: [984..985]
 r783: [1684..1685]
 r784: [988..989]
 r785: [992..993]
 r786: [1678..1679]
 r787: [1674..1675]
 r788: [1666..1669]
 r789: [1666..1667]
 r790: [1664..1665]
 r791: [1662..1663]
 r792: [1656..1659]
 r793: [1656..1657]
 r794: [1654..1655]
 r795: [1650..1651]
 r796: [1642..1645]
 r797: [1642..1643]
 r798: [1638..1639]
 r799: [1634..1635]
 r800: [1632..1633]
 r801: [1626..1629]
 r802: [1626..1627]
 r803: [1624..1625]
 r804: [1620..1621]
 r805: [1612..1615]
 r806: [1612..1613]
 r807: [1608..1609]
 r808: [1604..1605]
 r809: [1602..1603]
 r810: [1598..1599]
 r811: [1598..1599]
 r812: [1594..1595]
 r813: [1592..1593]
 r814: [1538..1539]
 r815: [1534..1535]
 r816: [1528..1529]
 r817: [1520..1523]
 r818: [1520..1521]
 r819: [1518..1519]
 r820: [1516..1517]
 r821: [1512..1513]
 r822: [1506..1507]
 r823: [1498..1501]
 r824: [1498..1499]
 r825: [1496..1497]
 r826: [1494..1495]
 r827: [1490..1491]
 r828: [1482..1485]
 r829: [1482..1483]
 r830: [1480..1481]
 r831: [1474..1477]
 r832: [1474..1475]
 r833: [1470..1471]
 r834: [1464..1465]
 r835: [1458..1459]
 r836: [1588..1589]
 r837: [1584..1585]
 r838: [1578..1579]
 r839: [1576..1577]
 r840: [1574..1575]
 r841: [1570..1571]
 r842: [1564..1565]
 r843: [1562..1563]
 r844: [1560..1561]
 r845: [1556..1557]
 r846: [1550..1551]
 r847: [1548..1549]
 r848: [1546..1547]
 r849: [1540..1541]
 r850: [1454..1455]
 r851: [1456..1457]
 r852: [1452..1453]
 r853: [1450..1451]
 r854: [1446..1447]
 r855: [1442..1443]
 r856: [1430..1441]
 r857: [1436..1441]
 r858: [1436..1441] [1428..1433]
 r859: [1436..1437]
 r860: [1440..1441]
 r861: [1432..1439]
 r862: [1434..1435]
 r863: [1428..1429]
 r864: [1426..1427]
 r865: [1422..1423]
 r866: [1416..1417]
 r867: [1414..1415]
 r868: [1412..1413]
 r869: [1408..1409]
 r870: [1406..1407]
 r871: [1402..1403]
 r872: [1396..1397]
 r873: [1396..1397]
 r874: [1394..1395]
 r875: [1390..1391]
 r876: [1384..1385]
 r877: [1384..1385]
 r878: [1382..1383]
 r879: [1376..1379]
 r880: [1376..1377]
 r881: [1374..1375]
 r882: [1372..1373]
 r883: [1366..1369]
 r884: [1366..1367]
 r885: [1364..1365]
 r886: [1362..1363]
 r887: [1354..1357]
 r888: [1354..1355]
 r889: [1352..1353]
 r890: [1350..1351]
 r891: [1342..1345]
 r892: [1342..1343]
 r893: [1340..1341]
 r894: [1338..1339]
 r895: [1334..1335]
 r896: [1330..1331]
 r897: [1324..1325]
 r898: [1318..1319]
 r899: [1320..1321]
 r900: [1316..1317]
 r901: [1312..1313]
 r902: [1308..1309]
 r903: [1302..1303]
 r904: [1296..1297]
 r905: [1298..1299]
 r906: [1294..1295]
 r907: [1286..1287]
 r908: [1282..1283]
 r909: [1270..1281]
 r910: [1276..1281]
 r911: [1276..1281] [1268..1273]
 r912: [1276..1277]
 r913: [1280..1281]
 r914: [1272..1279]
 r915: [1274..1275]
 r916: [1268..1269]
 r917: [1266..1267]
 r918: [1262..1263]
 r919: [1256..1257]
 r920: [1254..1255]
 r921: [1252..1253]
 r922: [1248..1249]
 r923: [1246..1247]
 r924: [1242..1243]
 r925: [1236..1237]
 r926: [1236..1237]
 r927: [1234..1235]
 r928: [1230..1231]
 r929: [1224..1225]
 r930: [1224..1225]
 r931: [1222..1223]
 r932: [1220..1221]
 r933: [1218..1219] [1214..1215]
 r934: [1216..1217]
 r935: [1212..1213]
 r936: [1204..1207]
 r937: [1204..1205]
 r938: [1202..1203]
 r939: [1200..1201]
 r940: [1198..1199] [1194..1195]
 r941: [1196..1197]
 r942: [1192..1193]
 r943: [1182..1185]
 r944: [1182..1183]
 r945: [1180..1181]
 r946: [1178..1179]
 r947: [1174..1175] [1170..1171]
 r948: [1172..1173]
 r949: [1168..1169]
 r950: [1160..1163]
 r951: [1160..1161]
 r952: [1158..1159]
 r953: [1156..1157]
 r954: [1152..1153] [1148..1149]
 r955: [1150..1151]
 r956: [1146..1147]
 r957: [1136..1139]
 r958: [1136..1137]
 r959: [1134..1135]
 r960: [1132..1133]
 r961: [1128..1129]
 r962: [1124..1125]
 r963: [1118..1119]
 r964: [1110..1111]
 r965: [1106..1107]
 r966: [1102..1103]
 r967: [1096..1097]
 r968: [1090..1091]
 r969: [1082..1083]
 r970: [1078..1079]
 r971: [1072..1073]
 r972: [1068..1069]
 r973: [1064..1065]
 r974: [1058..1059]
 r975: [1052..1053]
 r976: [1050..1051]
 r977: [1044..1045]
 r978: [1042..1043]
 r979: [1042..1043]
 r980: [1032..1033]
 r981: [1034..1035]
 r982: [1030..1031]
 r983: [1026..1027]
 r984: [1020..1021]
 r985: [1018..1019]
 r986: [1016..1017]
 r987: [1012..1013]
 r988: [1006..1007]
 r989: [1006..1007]
 r990: [1004..1005]
 r991: [1000..1001]
 r992: [994..995]
 r993: [994..995]
 r994: [912..913]
 r995: [916..917]
 r996: [920..921]
 r997: [978..979]
 r998: [972..975]
 r999: [972..973]
 r1000: [970..971]
 r1001: [966..967]
 r1002: [958..961]
 r1003: [958..959]
 r1004: [954..955]
 r1005: [950..951]
 r1006: [948..949]
 r1007: [944..945]
 r1008: [938..939]
 r1009: [934..935]
 r1010: [930..931]
 r1011: [924..925]
 r1012: [922..923]
 r1013: [848..849]
 r1014: [852..853]
 r1015: [906..907]
 r1016: [902..903]
 r1017: [896..897]
 r1018: [894..895]
 r1019: [890..891]
 r1020: [882..885]
 r1021: [882..883]
 r1022: [878..879]
 r1023: [874..875]
 r1024: [868..869]
 r1025: [864..865]
 r1026: [856..859]
 r1027: [856..857]
 r1028: [854..855]
 r1029: [478..479]
 r1030: [742..743]
 r1031: [746..747]
 r1032: [842..843]
 r1033: [838..839]
 r1034: [832..833]
 r1035: [830..831]
 r1036: [826..827]
 r1037: [820..821]
 r1038: [818..819]
 r1039: [812..815]
 r1040: [812..813]
 r1041: [810..811]
 r1042: [806..807]
 r1043: [798..801]
 r1044: [798..799]
 r1045: [794..795]
 r1046: [790..791]
 r1047: [788..789]
 r1048: [784..785]
 r1049: [778..779]
 r1050: [774..775]
 r1051: [758..759]
 r1052: [754..755]
 r1053: [748..749]
 r1054: [770..771]
 r1055: [766..767]
 r1056: [760..761]
 r1057: [738..739]
 r1058: [730..731]
 r1059: [728..729]
 r1060: [728..729]
 r1061: [726..727]
 r1062: [720..721]
 r1063: [718..719]
 r1064: [718..719]
 r1065: [716..717]
 r1066: [708..709]
 r1067: [708..709]
 r1068: [684..685]
 r1069: [676..677]
 r1070: [674..675]
 r1071: [674..675]
 r1072: [672..673]
 r1073: [666..667]
 r1074: [664..665]
 r1075: [664..665]
 r1076: [662..663]
 r1077: [654..655]
 r1078: [654..655]
 r1079: [558..559]
 r1080: [562..563]
 r1081: [628..629]
 r1082: [624..625]
 r1083: [618..619]
 r1084: [614..615]
 r1085: [610..611]
 r1086: [604..605]
 r1087: [598..599]
 r1088: [596..597]
 r1089: [592..593]
 r1090: [586..587]
 r1091: [578..581]
 r1092: [578..579]
 r1093: [574..575]
 r1094: [570..571]
 r1095: [564..565]
 r1096: [564..565]
 r1097: [482..483]
 r1098: [486..487]
 r1099: [552..553]
 r1100: [548..549]
 r1101: [542..543]
 r1102: [538..539]
 r1103: [534..535]
 r1104: [528..529]
 r1105: [522..523]
 r1106: [520..521]
 r1107: [516..517]
 r1108: [510..511]
 r1109: [502..505]
 r1110: [502..503]
 r1111: [498..499]
 r1112: [494..495]
 r1113: [488..489]
 r1114: [488..489]
 r1115: [438..439]
 r1116: [442..443]
 r1117: [472..473]
 r1118: [468..469]
 r1119: [462..463]
 r1120: [457..458]
 r1121: [453..454]
 r1122: [447..448]
 r1123: [78..79]
 r1124: [374..375]
 r1125: [378..379]
 r1126: [430..431]
 r1127: [426..427]
 r1128: [420..421]
 r1129: [418..419]
 r1130: [414..415]
 r1131: [408..409]
 r1132: [404..405]
 r1133: [400..401]
 r1134: [394..395]
 r1135: [390..391]
 r1136: [386..387]
 r1137: [380..381]
 r1138: [82..83]
 r1139: [86..87]
 r1140: [368..369]
 r1141: [364..365]
 r1142: [358..359]
 r1143: [354..355]
 r1144: [348..351]
 r1145: [348..349]
 r1146: [346..347]
 r1147: [342..343]
 r1148: [334..337]
 r1149: [334..335]
 r1150: [330..331]
 r1151: [326..327]
 r1152: [324..325]
 r1153: [320..321]
 r1154: [314..315]
 r1155: [306..309]
 r1156: [306..307]
 r1157: [304..305]
 r1158: [300..301]
 r1159: [294..295]
 r1160: [286..289]
 r1161: [286..287]
 r1162: [284..285]
 r1163: [282..283]
 r1164: [276..277]
 r1165: [274..275]
 r1166: [270..271]
 r1167: [262..265]
 r1168: [262..263]
 r1169: [258..259]
 r1170: [252..255]
 r1171: [252..253]
 r1172: [246..247]
 r1173: [244..245]
 r1174: [240..241]
 r1175: [236..237]
 r1176: [230..231]
 r1177: [224..225]
 r1178: [214..215]
 r1179: [212..213]
 r1180: [208..209]
 r1181: [204..205]
 r1182: [198..199]
 r1183: [190..193]
 r1184: [190..191]
 r1185: [180..181]
 r1186: [178..179]
 r1187: [130..131]
 r1188: [126..127]
 r1189: [120..121]
 r1190: [116..117]
 r1191: [114..115]
 r1192: [106..107]
 r1193: [102..103]
 r1194: [98..99]
 r1195: [88..89]
 r1196: [176..177]
 r1197: [174..175]
 r1198: [170..171]
 r1199: [164..165]
 r1200: [160..161]
 r1201: [158..159]
 r1202: [150..151]
 r1203: [146..147]
 r1204: [142..143]
 r1205: [132..133]
 r1206: [2..3]
 r1207: [6..7]
 r1208: [72..73]
 r1209: [68..69]
 r1210: [62..63]
 r1211: [60..61]
 r1212: [58..59]
 r1213: [52..53]
 r1214: [48..49]
 r1215: [42..43]
 r1216: [40..41]
 r1217: [36..37]
 r1218: [30..31]
 r1219: [26..27]
 r1220: [28..29]
 r1221: [24..25]
 r1222: [18..19]
 r1223: [14..15]
 r1224: [8..9]
 r1225: [1438..1439]
 r1226: [1430..1431]
 r1227: [1288..1289]
 r1228: [1278..1279]
 r1229: [1270..1271]
 r1230: [1112..1113]
 r1231: [706..707]
 r1232: [704..705]
 r1233: [702..703]
 r1234: [700..701]
 r1235: [698..699]
 r1236: [696..697]
 r1237: [694..695]
 r1238: [692..693]
 r1239: [690..691]
 r1240: [688..689]
 r1241: [686..687]
 r1242: [652..653]
 r1243: [650..651]
 r1244: [648..649]
 r1245: [646..647]
 r1246: [644..645]
 r1247: [642..643]
 r1248: [640..641]
 r1249: [638..639]
 r1250: [636..637]
 r1251: [634..635]
 r1252: [632..633]
 r1253: [222..223]
 r1255: [188..189]
 r1257: [118..119]
 r1258: [110..111]
 r1260: [162..163]
 r1261: [154..155]
 r1269: [134..135]
 r1270: [90..91]
 r1271: [182..183]
 r1272: [216..217]
 r1273: [112..115]
 r1274: [92..117]
 r1275: [184..187]
 r1276: [218..221]
 r1277: [156..159]
 r1278: [136..161]

********** Assignment #2: **********

	 Assigning to 1278 (cl=ALL_SSE_REGS, orig=645, freq=2000, tfirst=1269, tfreq=2000)...
	 Assigning to 1269 (cl=SSE_REGS, orig=645, freq=2000, tfirst=1269, tfreq=2000)...
	   Assign 28 to optional reload r1269 (freq=2000)
	Hard reg 28 is preferable by r1278 with profit 1000
	 Assigning to 1274 (cl=ALL_SSE_REGS, orig=627, freq=2000, tfirst=1270, tfreq=2000)...
	 Assigning to 1270 (cl=SSE_REGS, orig=627, freq=2000, tfirst=1270, tfreq=2000)...
	   Assign 28 to optional reload r1270 (freq=2000)
	Hard reg 28 is preferable by r1274 with profit 1000
	 Assigning to 1275 (cl=ALL_SSE_REGS, orig=620, freq=2000, tfirst=1271, tfreq=2000)...
	 Assigning to 1271 (cl=SSE_REGS, orig=620, freq=2000, tfirst=1271, tfreq=2000)...
	   Assign 26 to optional reload r1271 (freq=2000)
	Hard reg 26 is preferable by r1275 with profit 1000
	 Assigning to 1276 (cl=ALL_SSE_REGS, orig=609, freq=2000, tfirst=1272, tfreq=2000)...
	 Assigning to 1272 (cl=SSE_REGS, orig=609, freq=2000, tfirst=1272, tfreq=2000)...
	   Assign 27 to optional reload r1272 (freq=2000)
	Hard reg 27 is preferable by r1276 with profit 1000
	 Assigning to 1273 (cl=SSE_REGS, orig=628, freq=2000, tfirst=1273, tfreq=2000)...
	 Assigning to 1277 (cl=SSE_REGS, orig=646, freq=2000, tfirst=1277, tfreq=2000)...
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Inherit 0 out of 6 (0.00%)
   Insn after restoring regs:
 2111: r1271:SF=r620:SF
      REG_DEAD r620:SF
   Insn after restoring regs:
 2093: r620:SF=r1255:SF
      REG_DEAD r1255:SF
   Insn after restoring regs:
 2112: r1272:SF=r609:SF
      REG_DEAD r609:SF
   Insn after restoring regs:
 2091: r609:SF=r1253:SF
      REG_DEAD r1253:SF
   Insn after restoring regs:
 2110: r1270:SF=r627:SF
      REG_DEAD r627:SF
   Insn after restoring regs:
 2096: r1258:SF=r628:SF
      REG_DEAD r628:SF
   Insn after restoring regs:
 1697: r628:SF=xmm0:SF
      REG_DEAD xmm0:SF
   Insn after restoring regs:
 2095: r627:SF=r1257:SF
      REG_DEAD r1257:SF
   Insn after restoring regs:
 2109: r1269:SF=r645:SF
      REG_DEAD r645:SF
   Insn after restoring regs:
 2100: r1261:SF=r646:SF
      REG_DEAD r646:SF
   Insn after restoring regs:
 1740: r646:SF=xmm0:SF
      REG_DEAD xmm0:SF
   Insn after restoring regs:
 2099: r645:SF=r1260:SF
      REG_DEAD r1260:SF
Keep optional reload reg 1254
Keep optional reload reg 1256
Keep optional reload reg 1259
Keep optional reload reg 1262
Remove optional reload reg 1269
  Restoring original insn:
 1757: r657:SF=r651:SF+r645:SF
      REG_DEAD r645:SF
      REG_DEAD r651:SF
  Deleting move 2109
 2109: r1269:SF=r645:SF
      REG_DEAD r645:SF
deleting insn with uid = 2109.
Remove optional reload reg 1270
  Restoring original insn:
 1714: r639:SF=r633:SF+r627:SF
      REG_DEAD r627:SF
      REG_DEAD r633:SF
  Deleting move 2110
 2110: r1270:SF=r627:SF
      REG_DEAD r627:SF
deleting insn with uid = 2110.
Remove optional reload reg 1271
  Restoring original insn:
 1676: r1185:SF=r621:SF*r620:SF
      REG_DEAD r620:SF
      REG_DEAD r621:SF
  Deleting move 2111
 2111: r1271:SF=r620:SF
      REG_DEAD r620:SF
deleting insn with uid = 2111.
Remove optional reload reg 1272
  Restoring original insn:
 1653: r1178:SF=r610:SF*r609:SF
      REG_DEAD r609:SF
      REG_DEAD r610:SF
  Deleting move 2112
 2112: r1272:SF=r609:SF
      REG_DEAD r609:SF
deleting insn with uid = 2112.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1757:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1714:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1676:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1653:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 147
   Insn 1902: point = 0, n_alt = -1
  BB 175
   Insn 2052: point = 0, n_alt = -1
  BB 138
   Insn 1788: point = 0, n_alt = -1
   Insn 1787: point = 0, n_alt = 0
   Insn 1786: point = 1, n_alt = 0
   Insn 1785: point = 3, n_alt = 0
   Insn 1784: point = 4, n_alt = 0
  BB 146
   Insn 1967: point = 5, n_alt = -1
   Insn 1867: point = 5, n_alt = 1
  BB 176
   Insn 2055: point = 6, n_alt = -1
  BB 140
   Insn 1796: point = 7, n_alt = -1
   Insn 1795: point = 7, n_alt = 0
   Insn 1794: point = 8, n_alt = 0
   Insn 1793: point = 10, n_alt = 0
   Insn 1792: point = 11, n_alt = 0
  BB 145
   Insn 1965: point = 12, n_alt = -1
   Insn 1861: point = 12, n_alt = 1
   Insn 1860: point = 12, n_alt = 8
   Insn 1859: point = 13, n_alt = 3
   Insn 1858: point = 14, n_alt = 3
   Insn 1857: point = 16, n_alt = 0
   Insn 1856: point = 18, n_alt = 1
   Insn 1855: point = 20, n_alt = 0
   Insn 1854: point = 21, n_alt = 0
   Insn 1853: point = 23, n_alt = 1
   Insn 1852: point = 25, n_alt = 0
  BB 144
   Insn 1849: point = 27, n_alt = 7
  BB 143
   Insn 1847: point = 29, n_alt = -1
   Insn 1846: point = 29, n_alt = 0
   Insn 1845: point = 30, n_alt = 0
   Insn 1844: point = 32, n_alt = 0
   Insn 1843: point = 34, n_alt = 0
   Insn 1842: point = 35, n_alt = 1
   Insn 1841: point = 35, n_alt = 0
   Insn 1840: point = 37, n_alt = 0
   Insn 1839: point = 38, n_alt = 1
   Insn 1838: point = 39, n_alt = 7
   Insn 1837: point = 40, n_alt = 7
   Insn 1836: point = 42, n_alt = 3
   Insn 1835: point = 43, n_alt = 3
   Insn 1834: point = 45, n_alt = 0
   Insn 1833: point = 47, n_alt = 1
   Insn 1832: point = 49, n_alt = 0
   Insn 1831: point = 50, n_alt = 0
   Insn 1830: point = 52, n_alt = 1
   Insn 1829: point = 54, n_alt = 0
   Insn 1828: point = 55, n_alt = 8
   Insn 1827: point = 56, n_alt = 3
   Insn 1826: point = 57, n_alt = 3
   Insn 1825: point = 59, n_alt = 0
   Insn 1824: point = 61, n_alt = 1
   Insn 1823: point = 63, n_alt = 0
   Insn 1822: point = 64, n_alt = 0
   Insn 1821: point = 66, n_alt = 1
   Insn 1820: point = 68, n_alt = 0
  BB 142
   Insn 9: point = 70, n_alt = -2
  BB 141
   Insn 1816: point = 73, n_alt = -1
   Insn 1815: point = 73, n_alt = 0
   Insn 1814: point = 74, n_alt = 0
   Insn 1813: point = 76, n_alt = 0
   Insn 1812: point = 78, n_alt = 0
   Insn 1811: point = 79, n_alt = 1
   Insn 1810: point = 79, n_alt = 0
   Insn 1809: point = 81, n_alt = 0
   Insn 1808: point = 82, n_alt = 1
   Insn 1807: point = 82, n_alt = 7
   Insn 1806: point = 84, n_alt = 3
   Insn 1805: point = 85, n_alt = 3
   Insn 1804: point = 87, n_alt = 0
   Insn 1803: point = 89, n_alt = 1
   Insn 1802: point = 91, n_alt = 0
   Insn 1801: point = 92, n_alt = 0
   Insn 1800: point = 94, n_alt = 1
   Insn 1799: point = 96, n_alt = 0
   Insn 1798: point = 97, n_alt = 7
  BB 139
   Insn 1790: point = 99, n_alt = 1
  BB 137
   Insn 1782: point = 100, n_alt = 1
   Insn 1781: point = 101, n_alt = 0
   Insn 1780: point = 102, n_alt = 0
  BB 170
   Insn 2037: point = 103, n_alt = -1
  BB 115
   Insn 1450: point = 103, n_alt = -1
   Insn 1449: point = 103, n_alt = 0
   Insn 1448: point = 104, n_alt = 0
   Insn 1447: point = 106, n_alt = 0
   Insn 1446: point = 107, n_alt = 0
  BB 136
   Insn 1963: point = 108, n_alt = -1
   Insn 1774: point = 108, n_alt = 1
  BB 173
   Insn 2046: point = 109, n_alt = -1
  BB 126
   Insn 1534: point = 110, n_alt = -1
   Insn 1533: point = 110, n_alt = 0
   Insn 1532: point = 111, n_alt = 0
   Insn 1531: point = 113, n_alt = 0
   Insn 1530: point = 114, n_alt = 0
  BB 135
   Insn 1961: point = 115, n_alt = -1
   Insn 1768: point = 115, n_alt = 1
  BB 174
   Insn 2049: point = 116, n_alt = -1
  BB 128
   Insn 1542: point = 117, n_alt = -1
   Insn 1541: point = 117, n_alt = 0
   Insn 1540: point = 118, n_alt = 0
   Insn 1539: point = 120, n_alt = 0
   Insn 1538: point = 121, n_alt = 0
  BB 134
   Insn 1959: point = 122, n_alt = -1
   Insn 1762: point = 122, n_alt = 1
  BB 131
   Insn 1957: point = 123, n_alt = -1
   Insn 1716: point = 123, n_alt = 8
   Insn 1715: point = 124, n_alt = 3
   Insn 1714: point = 125, n_alt = 1
   Insn 1713: point = 127, n_alt = 3
   Insn 1712: point = 129, n_alt = 0
   Insn 1711: point = 131, n_alt = 0
   Insn 1710: point = 133, n_alt = 0
   Insn 1709: point = 134, n_alt = 0
   Insn 1708: point = 136, n_alt = 0
   Insn 1707: point = 138, n_alt = 0
   Insn 1706: point = 139, n_alt = 1
   Insn 1705: point = 141, n_alt = 1
   Insn 1704: point = 143, n_alt = 7
   Insn 1703: point = 144, n_alt = -2
   Insn 2097: point = 146, n_alt = -2
   Insn 1702: point = 148, n_alt = 2
   Insn 2096: point = 149, n_alt = 7
   Insn 1701: point = 151, n_alt = -2
   Insn 1700: point = 152, n_alt = 0
   Insn 1699: point = 152, n_alt = -2
   Insn 1698: point = 153, n_alt = 7
   Insn 1697: point = 154, n_alt = 8
   Insn 1696: point = 155, n_alt = 0
   Insn 1695: point = 155, n_alt = -2
   Insn 1694: point = 156, n_alt = 7
   Insn 2095: point = 157, n_alt = 8
   Insn 1693: point = 159, n_alt = 7
   Insn 1692: point = 161, n_alt = 3
   Insn 1691: point = 162, n_alt = 3
   Insn 1690: point = 164, n_alt = 0
   Insn 1689: point = 166, n_alt = 0
   Insn 1688: point = 168, n_alt = 0
   Insn 1687: point = 169, n_alt = 0
   Insn 1686: point = 171, n_alt = 0
   Insn 1685: point = 173, n_alt = 0
  BB 133
   Insn 1759: point = 175, n_alt = 8
   Insn 1758: point = 176, n_alt = 3
   Insn 1757: point = 177, n_alt = 1
   Insn 1756: point = 179, n_alt = 3
   Insn 1755: point = 181, n_alt = 0
   Insn 1754: point = 183, n_alt = 0
   Insn 1753: point = 185, n_alt = 0
   Insn 1752: point = 186, n_alt = 0
   Insn 1751: point = 188, n_alt = 0
   Insn 1750: point = 190, n_alt = 0
   Insn 1749: point = 191, n_alt = 1
   Insn 1748: point = 193, n_alt = 1
   Insn 1747: point = 195, n_alt = 7
   Insn 1746: point = 196, n_alt = -2
   Insn 2101: point = 198, n_alt = -2
   Insn 1745: point = 200, n_alt = 2
   Insn 2100: point = 201, n_alt = 7
   Insn 1744: point = 203, n_alt = -2
   Insn 1743: point = 204, n_alt = 0
   Insn 1742: point = 204, n_alt = -2
   Insn 1741: point = 205, n_alt = 7
   Insn 1740: point = 206, n_alt = 8
   Insn 1739: point = 207, n_alt = 0
   Insn 1738: point = 207, n_alt = -2
   Insn 1737: point = 208, n_alt = 7
   Insn 2099: point = 209, n_alt = 8
   Insn 1736: point = 211, n_alt = 7
   Insn 1735: point = 213, n_alt = 3
   Insn 1734: point = 214, n_alt = 3
   Insn 1733: point = 216, n_alt = 0
   Insn 1732: point = 218, n_alt = 0
   Insn 1731: point = 220, n_alt = 0
   Insn 1730: point = 221, n_alt = 0
   Insn 1729: point = 223, n_alt = 0
   Insn 1728: point = 225, n_alt = 0
  BB 132
   Insn 1723: point = 227, n_alt = -1
   Insn 1722: point = 227, n_alt = 1
   Insn 1721: point = 228, n_alt = 7
  BB 130
   Insn 1680: point = 230, n_alt = -1
   Insn 1679: point = 230, n_alt = 1
   Insn 1678: point = 231, n_alt = 7
   Insn 1677: point = 232, n_alt = 8
   Insn 1676: point = 233, n_alt = 1
   Insn 1675: point = 235, n_alt = -2
   Insn 1674: point = 236, n_alt = 0
   Insn 1673: point = 236, n_alt = -2
   Insn 1672: point = 237, n_alt = 7
   Insn 2093: point = 237, n_alt = 8
   Insn 1671: point = 239, n_alt = 7
   Insn 1670: point = 241, n_alt = 0
   Insn 1669: point = 243, n_alt = 4
   Insn 1668: point = 244, n_alt = 3
   Insn 1667: point = 246, n_alt = 0
   Insn 1666: point = 248, n_alt = 0
   Insn 1665: point = 250, n_alt = 0
   Insn 1664: point = 251, n_alt = 0
   Insn 1663: point = 253, n_alt = 0
   Insn 1662: point = 255, n_alt = 0
   Insn 1661: point = 257, n_alt = 0
   Insn 1660: point = 258, n_alt = 1
   Insn 1659: point = 260, n_alt = 0
   Insn 1658: point = 262, n_alt = 0
   Insn 1657: point = 263, n_alt = -2
   Insn 1656: point = 265, n_alt = 2
   Insn 1655: point = 267, n_alt = 7
   Insn 1654: point = 268, n_alt = 8
   Insn 1653: point = 269, n_alt = 1
   Insn 1652: point = 271, n_alt = -2
   Insn 1651: point = 272, n_alt = 0
   Insn 1650: point = 272, n_alt = -2
   Insn 1649: point = 273, n_alt = 7
   Insn 2091: point = 273, n_alt = 8
   Insn 1648: point = 275, n_alt = 7
   Insn 1647: point = 277, n_alt = 4
   Insn 1646: point = 278, n_alt = 3
   Insn 1645: point = 280, n_alt = 0
   Insn 1644: point = 282, n_alt = 0
   Insn 1643: point = 284, n_alt = 0
   Insn 1642: point = 285, n_alt = 0
   Insn 1641: point = 287, n_alt = 0
   Insn 1640: point = 289, n_alt = 0
   Insn 1639: point = 291, n_alt = 0
   Insn 1638: point = 292, n_alt = 1
   Insn 1637: point = 294, n_alt = 0
   Insn 1636: point = 296, n_alt = 0
   Insn 1635: point = 297, n_alt = -2
   Insn 1634: point = 299, n_alt = 2
   Insn 1633: point = 301, n_alt = 7
   Insn 1632: point = 302, n_alt = 8
   Insn 1631: point = 303, n_alt = 2
   Insn 1630: point = 305, n_alt = 1
   Insn 1629: point = 307, n_alt = 7
   Insn 1628: point = 309, n_alt = 0
   Insn 1627: point = 311, n_alt = 4
   Insn 1626: point = 312, n_alt = 3
   Insn 1625: point = 314, n_alt = 0
   Insn 1624: point = 316, n_alt = 0
   Insn 1623: point = 317, n_alt = 1
   Insn 1622: point = 319, n_alt = 7
   Insn 1621: point = 321, n_alt = 0
   Insn 1620: point = 323, n_alt = 4
   Insn 1619: point = 324, n_alt = 3
   Insn 1618: point = 326, n_alt = 0
   Insn 1617: point = 328, n_alt = 0
   Insn 1616: point = 330, n_alt = 0
   Insn 1615: point = 331, n_alt = 0
   Insn 1614: point = 333, n_alt = 0
   Insn 1613: point = 335, n_alt = 0
   Insn 1612: point = 336, n_alt = 1
   Insn 1611: point = 338, n_alt = 7
   Insn 1610: point = 339, n_alt = 1
   Insn 1609: point = 341, n_alt = -2
   Insn 1608: point = 343, n_alt = 1
   Insn 1607: point = 345, n_alt = 7
   Insn 1606: point = 346, n_alt = 1
   Insn 1605: point = 348, n_alt = 7
   Insn 1604: point = 349, n_alt = 7
   Insn 1603: point = 351, n_alt = 0
   Insn 1602: point = 353, n_alt = 4
   Insn 1601: point = 354, n_alt = 3
   Insn 1600: point = 356, n_alt = 0
   Insn 1599: point = 358, n_alt = 0
   Insn 1598: point = 360, n_alt = 0
   Insn 1597: point = 361, n_alt = 0
   Insn 1596: point = 363, n_alt = 0
   Insn 1595: point = 365, n_alt = 0
   Insn 1594: point = 367, n_alt = 0
   Insn 1593: point = 368, n_alt = 1
   Insn 1592: point = 370, n_alt = 0
   Insn 1591: point = 372, n_alt = 0
   Insn 1590: point = 373, n_alt = 7
   Insn 1589: point = 375, n_alt = 0
   Insn 1588: point = 377, n_alt = 4
   Insn 1587: point = 378, n_alt = 3
   Insn 1586: point = 380, n_alt = 0
   Insn 1585: point = 382, n_alt = 0
   Insn 1584: point = 384, n_alt = 0
   Insn 1583: point = 385, n_alt = 0
   Insn 1582: point = 387, n_alt = 0
   Insn 1581: point = 389, n_alt = 0
   Insn 1580: point = 391, n_alt = 0
   Insn 1579: point = 392, n_alt = 1
   Insn 1578: point = 394, n_alt = 0
   Insn 1577: point = 396, n_alt = 0
   Insn 1576: point = 397, n_alt = 8
   Insn 1575: point = 398, n_alt = 1
   Insn 1574: point = 400, n_alt = 7
   Insn 1573: point = 402, n_alt = 4
   Insn 1572: point = 403, n_alt = 1
   Insn 1571: point = 405, n_alt = 7
   Insn 1570: point = 407, n_alt = 0
   Insn 1569: point = 409, n_alt = 4
   Insn 1568: point = 410, n_alt = 3
   Insn 1567: point = 412, n_alt = 0
   Insn 1566: point = 414, n_alt = 0
   Insn 1565: point = 416, n_alt = 0
   Insn 1564: point = 417, n_alt = 0
   Insn 1563: point = 419, n_alt = 0
   Insn 1562: point = 421, n_alt = 0
   Insn 1561: point = 422, n_alt = 7
   Insn 1560: point = 424, n_alt = 0
   Insn 1559: point = 426, n_alt = 4
   Insn 1558: point = 427, n_alt = 3
   Insn 1557: point = 429, n_alt = 0
   Insn 1556: point = 431, n_alt = 0
  BB 129
   Insn 1554: point = 433, n_alt = -1
   Insn 1553: point = 433, n_alt = 0
   Insn 1552: point = 434, n_alt = 0
   Insn 1551: point = 436, n_alt = 4
   Insn 1550: point = 437, n_alt = 3
   Insn 1549: point = 439, n_alt = 0
   Insn 1548: point = 441, n_alt = 0
   Insn 1547: point = 443, n_alt = 0
   Insn 1546: point = 444, n_alt = 0
   Insn 1545: point = 446, n_alt = 0
   Insn 1544: point = 448, n_alt = 0
  BB 127
   Insn 1536: point = 450, n_alt = 1
  BB 125
   Insn 1528: point = 451, n_alt = 1
   Insn 1527: point = 452, n_alt = 0
   Insn 1526: point = 453, n_alt = 0
  BB 171
   Insn 2040: point = 455, n_alt = -1
  BB 117
   Insn 1460: point = 456, n_alt = -1
   Insn 1459: point = 456, n_alt = 0
   Insn 1458: point = 457, n_alt = 0
   Insn 1457: point = 459, n_alt = 0
   Insn 1456: point = 460, n_alt = 0
  BB 124
   Insn 1954: point = 461, n_alt = -1
   Insn 1520: point = 461, n_alt = 1
  BB 172
   Insn 2043: point = 462, n_alt = -1
  BB 119
   Insn 1468: point = 463, n_alt = -1
   Insn 1467: point = 463, n_alt = 0
   Insn 1466: point = 464, n_alt = 0
   Insn 1465: point = 466, n_alt = 0
   Insn 1464: point = 467, n_alt = 0
  BB 123
   Insn 1952: point = 468, n_alt = -1
   Insn 1514: point = 468, n_alt = 1
  BB 122
   Insn 1511: point = 469, n_alt = 1
   Insn 1510: point = 470, n_alt = 4
   Insn 1509: point = 471, n_alt = 3
   Insn 1508: point = 473, n_alt = 0
   Insn 1507: point = 475, n_alt = 1
   Insn 1506: point = 477, n_alt = 0
   Insn 1505: point = 478, n_alt = 0
   Insn 1504: point = 480, n_alt = 1
   Insn 1503: point = 482, n_alt = 0
  BB 121
   Insn 1501: point = 484, n_alt = -1
   Insn 1500: point = 484, n_alt = 0
   Insn 1499: point = 485, n_alt = 0
   Insn 1498: point = 487, n_alt = 4
   Insn 1497: point = 488, n_alt = 3
   Insn 1496: point = 490, n_alt = 0
   Insn 1495: point = 492, n_alt = 1
   Insn 1494: point = 494, n_alt = 0
   Insn 1493: point = 495, n_alt = 0
   Insn 1492: point = 497, n_alt = 1
   Insn 1491: point = 499, n_alt = 0
  BB 120
   Insn 1489: point = 501, n_alt = -1
   Insn 1488: point = 501, n_alt = 0
   Insn 1487: point = 502, n_alt = 0
   Insn 1486: point = 504, n_alt = 4
   Insn 1485: point = 505, n_alt = 3
   Insn 1484: point = 507, n_alt = 0
   Insn 1483: point = 509, n_alt = 1
   Insn 1482: point = 511, n_alt = 0
   Insn 1481: point = 512, n_alt = 0
   Insn 1480: point = 514, n_alt = 1
   Insn 1479: point = 516, n_alt = 0
   Insn 1478: point = 517, n_alt = 1
   Insn 1477: point = 518, n_alt = 4
   Insn 1476: point = 519, n_alt = 3
   Insn 1475: point = 521, n_alt = 0
   Insn 1474: point = 523, n_alt = 1
   Insn 1473: point = 525, n_alt = 0
   Insn 1472: point = 526, n_alt = 0
   Insn 1471: point = 528, n_alt = 1
   Insn 1470: point = 530, n_alt = 0
  BB 118
   Insn 1462: point = 532, n_alt = 1
  BB 116
   Insn 1454: point = 533, n_alt = 1
   Insn 1453: point = 534, n_alt = 0
   Insn 1452: point = 535, n_alt = 0
  BB 114
   Insn 1444: point = 537, n_alt = 1
   Insn 1443: point = 538, n_alt = 0
   Insn 1442: point = 539, n_alt = 0
  BB 168
   Insn 2031: point = 540, n_alt = -1
  BB 105
   Insn 1388: point = 540, n_alt = -1
   Insn 1387: point = 540, n_alt = 0
   Insn 1386: point = 541, n_alt = 0
   Insn 1385: point = 543, n_alt = 0
   Insn 1384: point = 544, n_alt = 0
  BB 113
   Insn 1950: point = 545, n_alt = -1
   Insn 1436: point = 545, n_alt = 1
  BB 169
   Insn 2034: point = 546, n_alt = -1
  BB 107
   Insn 1396: point = 547, n_alt = -1
   Insn 1395: point = 547, n_alt = 0
   Insn 1394: point = 548, n_alt = 0
   Insn 1393: point = 550, n_alt = 0
   Insn 1392: point = 551, n_alt = 0
  BB 112
   Insn 1948: point = 552, n_alt = -1
   Insn 1430: point = 552, n_alt = 1
   Insn 1429: point = 552, n_alt = 1
  BB 111
   Insn 1426: point = 554, n_alt = 0
  BB 110
   Insn 1424: point = 556, n_alt = -1
   Insn 1423: point = 556, n_alt = 0
   Insn 1422: point = 556, n_alt = 0
   Insn 1421: point = 558, n_alt = 4
   Insn 1420: point = 559, n_alt = 3
   Insn 1419: point = 561, n_alt = 0
   Insn 1418: point = 563, n_alt = 0
   Insn 1417: point = 565, n_alt = 0
   Insn 1416: point = 566, n_alt = 0
   Insn 1415: point = 568, n_alt = 0
   Insn 1414: point = 570, n_alt = 0
   Insn 1413: point = 571, n_alt = 1
  BB 109
   Insn 1410: point = 573, n_alt = 0
  BB 108
   Insn 1408: point = 575, n_alt = -1
   Insn 1407: point = 575, n_alt = 0
   Insn 1406: point = 575, n_alt = 0
   Insn 1405: point = 577, n_alt = 4
   Insn 1404: point = 578, n_alt = 3
   Insn 1403: point = 580, n_alt = 0
   Insn 1402: point = 582, n_alt = 0
   Insn 1401: point = 584, n_alt = 0
   Insn 1400: point = 585, n_alt = 0
   Insn 1399: point = 587, n_alt = 0
   Insn 1398: point = 589, n_alt = 0
  BB 106
   Insn 1390: point = 591, n_alt = 1
  BB 104
   Insn 1382: point = 592, n_alt = 1
   Insn 1381: point = 593, n_alt = 0
   Insn 1380: point = 594, n_alt = 0
   Insn 1379: point = 595, n_alt = 1
   Insn 1378: point = 595, n_alt = 1
  BB 161
   Insn 2010: point = 595, n_alt = -1
  BB 70
   Insn 977: point = 595, n_alt = -1
   Insn 976: point = 595, n_alt = 0
   Insn 975: point = 596, n_alt = 0
   Insn 974: point = 598, n_alt = 0
   Insn 973: point = 599, n_alt = 1
  BB 103
   Insn 1946: point = 599, n_alt = -1
   Insn 1372: point = 599, n_alt = 1
  BB 166
   Insn 2025: point = 599, n_alt = -1
  BB 95
   Insn 1293: point = 599, n_alt = -1
   Insn 1292: point = 599, n_alt = 0
   Insn 1291: point = 600, n_alt = 0
   Insn 1290: point = 602, n_alt = 0
   Insn 1289: point = 603, n_alt = 0
  BB 102
   Insn 1944: point = 604, n_alt = -1
   Insn 1366: point = 604, n_alt = 1
  BB 167
   Insn 2028: point = 605, n_alt = -1
  BB 97
   Insn 1301: point = 606, n_alt = -1
   Insn 1300: point = 606, n_alt = 0
   Insn 1299: point = 607, n_alt = 0
   Insn 1298: point = 609, n_alt = 0
   Insn 1297: point = 610, n_alt = 0
  BB 101
   Insn 1942: point = 611, n_alt = -1
   Insn 1360: point = 611, n_alt = 1
  BB 100
   Insn 1357: point = 612, n_alt = 1
   Insn 1356: point = 613, n_alt = 0
   Insn 1355: point = 614, n_alt = 4
   Insn 1354: point = 615, n_alt = 3
   Insn 1353: point = 617, n_alt = 0
   Insn 1352: point = 619, n_alt = 1
   Insn 1351: point = 621, n_alt = 0
   Insn 1350: point = 622, n_alt = 0
   Insn 1349: point = 624, n_alt = 1
   Insn 1348: point = 626, n_alt = 0
  BB 99
   Insn 1343: point = 628, n_alt = -1
   Insn 1342: point = 628, n_alt = 1
   Insn 1341: point = 629, n_alt = 7
   Insn 1340: point = 631, n_alt = 0
   Insn 1339: point = 633, n_alt = 4
   Insn 1338: point = 634, n_alt = 3
   Insn 1337: point = 636, n_alt = 0
   Insn 1336: point = 638, n_alt = 1
   Insn 1335: point = 640, n_alt = 0
   Insn 1334: point = 641, n_alt = 0
   Insn 1333: point = 643, n_alt = 0
   Insn 1332: point = 645, n_alt = 1
   Insn 1331: point = 647, n_alt = 0
   Insn 1330: point = 648, n_alt = 1
   Insn 1329: point = 650, n_alt = 1
   Insn 1328: point = 652, n_alt = 0
   Insn 1327: point = 653, n_alt = 7
   Insn 1326: point = 655, n_alt = 4
   Insn 1325: point = 656, n_alt = 3
   Insn 1324: point = 658, n_alt = 0
   Insn 1323: point = 660, n_alt = 1
   Insn 1322: point = 662, n_alt = 0
   Insn 1321: point = 663, n_alt = 0
   Insn 1320: point = 665, n_alt = 0
   Insn 1319: point = 667, n_alt = 1
   Insn 1318: point = 669, n_alt = 0
   Insn 1317: point = 670, n_alt = 1
   Insn 1316: point = 672, n_alt = 1
   Insn 1315: point = 674, n_alt = 0
  BB 98
   Insn 1313: point = 676, n_alt = -1
   Insn 1312: point = 676, n_alt = 0
   Insn 1311: point = 677, n_alt = 0
   Insn 1310: point = 679, n_alt = 4
   Insn 1309: point = 680, n_alt = 3
   Insn 1308: point = 682, n_alt = 0
   Insn 1307: point = 684, n_alt = 1
   Insn 1306: point = 686, n_alt = 0
   Insn 1305: point = 687, n_alt = 0
   Insn 1304: point = 689, n_alt = 1
   Insn 1303: point = 691, n_alt = 0
  BB 96
   Insn 1295: point = 693, n_alt = 1
  BB 94
   Insn 1287: point = 694, n_alt = 1
   Insn 1286: point = 695, n_alt = 0
   Insn 1285: point = 696, n_alt = 0
  BB 164
   Insn 2019: point = 697, n_alt = -1
  BB 86
   Insn 1206: point = 697, n_alt = -1
   Insn 1205: point = 697, n_alt = 0
   Insn 1204: point = 698, n_alt = 0
   Insn 1203: point = 700, n_alt = 0
   Insn 1202: point = 701, n_alt = 0
  BB 93
   Insn 1940: point = 702, n_alt = -1
   Insn 1279: point = 702, n_alt = 1
  BB 165
   Insn 2022: point = 703, n_alt = -1
  BB 88
   Insn 1214: point = 704, n_alt = -1
   Insn 1213: point = 704, n_alt = 0
   Insn 1212: point = 705, n_alt = 0
   Insn 1211: point = 707, n_alt = 0
   Insn 1210: point = 708, n_alt = 0
  BB 92
   Insn 1938: point = 709, n_alt = -1
   Insn 1273: point = 709, n_alt = 1
  BB 91
   Insn 1270: point = 710, n_alt = 1
   Insn 1269: point = 711, n_alt = 0
   Insn 1268: point = 712, n_alt = 4
   Insn 1267: point = 713, n_alt = 3
   Insn 1266: point = 715, n_alt = 0
   Insn 1265: point = 717, n_alt = 1
   Insn 1264: point = 719, n_alt = 0
   Insn 1263: point = 720, n_alt = 0
   Insn 1262: point = 722, n_alt = 1
   Insn 1261: point = 724, n_alt = 0
  BB 90
   Insn 1256: point = 726, n_alt = -1
   Insn 1255: point = 726, n_alt = 1
   Insn 1254: point = 727, n_alt = 7
   Insn 1253: point = 729, n_alt = 0
   Insn 1252: point = 731, n_alt = 4
   Insn 1251: point = 732, n_alt = 3
   Insn 1250: point = 734, n_alt = 0
   Insn 1249: point = 736, n_alt = 1
   Insn 1248: point = 738, n_alt = 0
   Insn 1247: point = 739, n_alt = 0
   Insn 1246: point = 741, n_alt = 0
   Insn 1245: point = 743, n_alt = 1
   Insn 1244: point = 745, n_alt = 0
   Insn 1243: point = 746, n_alt = 1
   Insn 1242: point = 748, n_alt = 1
   Insn 1241: point = 750, n_alt = 0
   Insn 1240: point = 751, n_alt = 7
   Insn 1239: point = 753, n_alt = 4
   Insn 1238: point = 754, n_alt = 3
   Insn 1237: point = 756, n_alt = 0
   Insn 1236: point = 758, n_alt = 1
   Insn 1235: point = 760, n_alt = 0
   Insn 1234: point = 761, n_alt = 0
   Insn 1233: point = 763, n_alt = 0
   Insn 1232: point = 765, n_alt = 1
   Insn 1231: point = 767, n_alt = 0
   Insn 1230: point = 768, n_alt = 1
   Insn 1229: point = 770, n_alt = 1
   Insn 1228: point = 772, n_alt = 0
  BB 89
   Insn 1226: point = 774, n_alt = -1
   Insn 1225: point = 774, n_alt = 0
   Insn 1224: point = 775, n_alt = 0
   Insn 1223: point = 777, n_alt = 4
   Insn 1222: point = 778, n_alt = 3
   Insn 1221: point = 780, n_alt = 0
   Insn 1220: point = 782, n_alt = 1
   Insn 1219: point = 784, n_alt = 0
   Insn 1218: point = 785, n_alt = 0
   Insn 1217: point = 787, n_alt = 1
   Insn 1216: point = 789, n_alt = 0
  BB 87
   Insn 1208: point = 791, n_alt = 1
  BB 85
   Insn 1200: point = 792, n_alt = 1
   Insn 1199: point = 793, n_alt = 0
   Insn 1198: point = 794, n_alt = 0
  BB 84
   Insn 1195: point = 795, n_alt = 0
   Insn 1194: point = 795, n_alt = 0
   Insn 1193: point = 795, n_alt = 3
   Insn 1192: point = 795, n_alt = -2
   Insn 1191: point = 796, n_alt = 4
   Insn 1190: point = 796, n_alt = 2
   Insn 1189: point = 796, n_alt = 2
   Insn 1188: point = 796, n_alt = 4
   Insn 1187: point = 796, n_alt = 4
   Insn 1186: point = 796, n_alt = 0
   Insn 1185: point = 797, n_alt = 0
   Insn 1184: point = 798, n_alt = 0
   Insn 2090: point = 799, n_alt = 4
   Insn 1183: point = 800, n_alt = 0
   Insn 2089: point = 801, n_alt = 4
   Insn 1182: point = 802, n_alt = 0
   Insn 2088: point = 803, n_alt = 4
   Insn 1181: point = 804, n_alt = 0
   Insn 2087: point = 805, n_alt = 4
   Insn 1180: point = 806, n_alt = 0
   Insn 2086: point = 807, n_alt = 4
   Insn 1179: point = 808, n_alt = 0
   Insn 2085: point = 809, n_alt = 4
   Insn 1178: point = 810, n_alt = 0
   Insn 2084: point = 811, n_alt = 4
   Insn 1177: point = 812, n_alt = 0
   Insn 2083: point = 813, n_alt = 4
   Insn 1176: point = 814, n_alt = 0
   Insn 2082: point = 815, n_alt = 4
   Insn 1175: point = 816, n_alt = 0
   Insn 2081: point = 817, n_alt = 4
   Insn 1174: point = 818, n_alt = 0
   Insn 2080: point = 819, n_alt = 4
   Insn 1173: point = 820, n_alt = 0
   Insn 1172: point = 820, n_alt = 0
   Insn 1171: point = 822, n_alt = 4
   Insn 1170: point = 823, n_alt = 1
   Insn 1169: point = 825, n_alt = 1
   Insn 1168: point = 827, n_alt = 0
   Insn 1167: point = 829, n_alt = 0
   Insn 1166: point = 831, n_alt = 0
   Insn 1165: point = 832, n_alt = 0
   Insn 1164: point = 834, n_alt = 4
   Insn 1163: point = 835, n_alt = 1
   Insn 1162: point = 837, n_alt = 0
   Insn 1161: point = 839, n_alt = 0
   Insn 1160: point = 841, n_alt = 0
   Insn 1159: point = 843, n_alt = 0
   Insn 1158: point = 844, n_alt = 3
   Insn 1157: point = 846, n_alt = 4
   Insn 1156: point = 847, n_alt = 1
   Insn 1155: point = 849, n_alt = 0
   Insn 1154: point = 851, n_alt = 1
   Insn 1153: point = 853, n_alt = 0
   Insn 1152: point = 855, n_alt = 0
   Insn 1151: point = 857, n_alt = 0
  BB 83
   Insn 1149: point = 858, n_alt = -1
   Insn 1148: point = 858, n_alt = 1
  BB 82
   Insn 1145: point = 858, n_alt = 0
   Insn 1144: point = 858, n_alt = 0
   Insn 1143: point = 858, n_alt = 3
   Insn 1142: point = 858, n_alt = -2
   Insn 1141: point = 859, n_alt = 4
   Insn 1140: point = 859, n_alt = 2
   Insn 1139: point = 859, n_alt = 2
   Insn 1138: point = 859, n_alt = 4
   Insn 1137: point = 859, n_alt = 4
   Insn 1136: point = 859, n_alt = 0
   Insn 1135: point = 860, n_alt = 0
   Insn 1134: point = 861, n_alt = 0
   Insn 2079: point = 862, n_alt = 4
   Insn 1133: point = 863, n_alt = 0
   Insn 2078: point = 864, n_alt = 4
   Insn 1132: point = 865, n_alt = 0
   Insn 2077: point = 866, n_alt = 4
   Insn 1131: point = 867, n_alt = 0
   Insn 2076: point = 868, n_alt = 4
   Insn 1130: point = 869, n_alt = 0
   Insn 2075: point = 870, n_alt = 4
   Insn 1129: point = 871, n_alt = 0
   Insn 2074: point = 872, n_alt = 4
   Insn 1128: point = 873, n_alt = 0
   Insn 2073: point = 874, n_alt = 4
   Insn 1127: point = 875, n_alt = 0
   Insn 2072: point = 876, n_alt = 4
   Insn 1126: point = 877, n_alt = 0
   Insn 2071: point = 878, n_alt = 4
   Insn 1125: point = 879, n_alt = 0
   Insn 2070: point = 880, n_alt = 4
   Insn 1124: point = 881, n_alt = 0
   Insn 2069: point = 882, n_alt = 4
   Insn 1123: point = 883, n_alt = 0
   Insn 1122: point = 883, n_alt = 0
   Insn 1121: point = 885, n_alt = 4
   Insn 1120: point = 886, n_alt = 1
   Insn 1119: point = 888, n_alt = 1
   Insn 1118: point = 890, n_alt = 0
   Insn 1117: point = 892, n_alt = 0
   Insn 1116: point = 894, n_alt = 0
   Insn 1115: point = 895, n_alt = 0
   Insn 1114: point = 897, n_alt = 4
   Insn 1113: point = 898, n_alt = 1
   Insn 1112: point = 900, n_alt = 0
   Insn 1111: point = 902, n_alt = 0
   Insn 1110: point = 904, n_alt = 0
   Insn 1109: point = 906, n_alt = 0
   Insn 1108: point = 907, n_alt = 3
   Insn 1107: point = 909, n_alt = 4
   Insn 1106: point = 910, n_alt = 1
   Insn 1105: point = 912, n_alt = 0
   Insn 1104: point = 914, n_alt = 1
   Insn 1103: point = 916, n_alt = 0
   Insn 1102: point = 918, n_alt = 0
   Insn 1101: point = 920, n_alt = 0
  BB 81
   Insn 1099: point = 921, n_alt = -1
   Insn 1098: point = 921, n_alt = 1
  BB 162
   Insn 2013: point = 921, n_alt = -1
  BB 72
   Insn 989: point = 921, n_alt = -1
   Insn 988: point = 921, n_alt = 0
   Insn 987: point = 922, n_alt = 0
   Insn 986: point = 924, n_alt = 0
   Insn 985: point = 925, n_alt = 0
  BB 80
   Insn 1936: point = 926, n_alt = -1
   Insn 1092: point = 926, n_alt = 1
  BB 163
   Insn 2016: point = 927, n_alt = -1
  BB 74
   Insn 997: point = 928, n_alt = -1
   Insn 996: point = 928, n_alt = 0
   Insn 995: point = 929, n_alt = 0
   Insn 994: point = 931, n_alt = 0
   Insn 993: point = 932, n_alt = 0
  BB 79
   Insn 1934: point = 933, n_alt = -1
   Insn 1086: point = 933, n_alt = 1
  BB 77
   Insn 1932: point = 934, n_alt = -1
   Insn 1067: point = 934, n_alt = 1
   Insn 1066: point = 935, n_alt = 4
   Insn 1065: point = 936, n_alt = 3
   Insn 1064: point = 938, n_alt = 0
   Insn 1063: point = 940, n_alt = 1
   Insn 1062: point = 942, n_alt = 0
   Insn 1061: point = 943, n_alt = 0
   Insn 1060: point = 945, n_alt = 1
   Insn 1059: point = 947, n_alt = 0
   Insn 1058: point = 948, n_alt = 1
  BB 78
   Insn 1081: point = 949, n_alt = 1
   Insn 1080: point = 950, n_alt = 4
   Insn 1079: point = 951, n_alt = 3
   Insn 1078: point = 953, n_alt = 0
   Insn 1077: point = 955, n_alt = 1
   Insn 1076: point = 957, n_alt = 0
   Insn 1075: point = 958, n_alt = 0
   Insn 1074: point = 960, n_alt = 1
   Insn 1073: point = 962, n_alt = 0
   Insn 1072: point = 963, n_alt = 1
  BB 76
   Insn 1053: point = 964, n_alt = -1
   Insn 1052: point = 964, n_alt = 1
   Insn 1051: point = 965, n_alt = 7
   Insn 1050: point = 967, n_alt = 4
  BB 75
   Insn 1048: point = 969, n_alt = -1
   Insn 1047: point = 969, n_alt = 0
   Insn 1046: point = 970, n_alt = 0
   Insn 1045: point = 972, n_alt = 4
   Insn 1044: point = 973, n_alt = 3
   Insn 1043: point = 975, n_alt = 0
   Insn 1042: point = 977, n_alt = 1
   Insn 1041: point = 979, n_alt = 0
   Insn 1040: point = 980, n_alt = 0
   Insn 1039: point = 982, n_alt = 1
   Insn 1038: point = 984, n_alt = 0
   Insn 1037: point = 985, n_alt = 8
   Insn 1036: point = 986, n_alt = 1
   Insn 1035: point = 988, n_alt = 7
   Insn 1034: point = 990, n_alt = 4
   Insn 1033: point = 991, n_alt = 1
   Insn 1032: point = 993, n_alt = 7
   Insn 1031: point = 995, n_alt = 0
   Insn 1030: point = 997, n_alt = 4
   Insn 1029: point = 998, n_alt = 3
   Insn 1028: point = 1000, n_alt = 0
   Insn 1027: point = 1002, n_alt = 1
   Insn 1026: point = 1004, n_alt = 0
   Insn 1025: point = 1005, n_alt = 0
   Insn 1024: point = 1007, n_alt = 1
   Insn 1023: point = 1009, n_alt = 0
   Insn 1022: point = 1010, n_alt = 7
   Insn 1021: point = 1012, n_alt = 0
   Insn 1020: point = 1014, n_alt = 4
   Insn 1019: point = 1015, n_alt = 3
   Insn 1018: point = 1017, n_alt = 1
   Insn 1017: point = 1019, n_alt = 0
   Insn 1016: point = 1020, n_alt = 1
   Insn 1015: point = 1021, n_alt = 4
   Insn 1014: point = 1022, n_alt = 3
   Insn 1013: point = 1024, n_alt = 0
   Insn 1012: point = 1026, n_alt = 1
   Insn 1011: point = 1028, n_alt = 0
   Insn 1010: point = 1029, n_alt = 0
   Insn 1009: point = 1031, n_alt = 1
   Insn 1008: point = 1033, n_alt = 0
   Insn 1007: point = 1034, n_alt = 1
   Insn 1006: point = 1035, n_alt = 4
   Insn 1005: point = 1036, n_alt = 3
   Insn 1004: point = 1038, n_alt = 0
   Insn 1003: point = 1040, n_alt = 1
   Insn 1002: point = 1042, n_alt = 0
   Insn 1001: point = 1043, n_alt = 0
   Insn 1000: point = 1045, n_alt = 1
   Insn 999: point = 1047, n_alt = 0
  BB 73
   Insn 991: point = 1049, n_alt = 1
  BB 71
   Insn 983: point = 1050, n_alt = 1
   Insn 982: point = 1051, n_alt = 0
   Insn 981: point = 1052, n_alt = 0
   Insn 980: point = 1053, n_alt = 1
   Insn 979: point = 1053, n_alt = 1
  BB 69
   Insn 971: point = 1053, n_alt = 1
  BB 159
   Insn 2004: point = 1053, n_alt = -1
  BB 62
   Insn 906: point = 1053, n_alt = -1
   Insn 905: point = 1053, n_alt = 0
   Insn 904: point = 1054, n_alt = 0
   Insn 903: point = 1056, n_alt = 0
   Insn 902: point = 1057, n_alt = 0
  BB 68
   Insn 1929: point = 1058, n_alt = -1
   Insn 965: point = 1058, n_alt = 1
  BB 160
   Insn 2007: point = 1059, n_alt = -1
  BB 64
   Insn 914: point = 1060, n_alt = -1
   Insn 913: point = 1060, n_alt = 0
   Insn 912: point = 1061, n_alt = 0
   Insn 911: point = 1063, n_alt = 0
   Insn 910: point = 1064, n_alt = 0
  BB 67
   Insn 1927: point = 1065, n_alt = -1
   Insn 959: point = 1065, n_alt = 1
  BB 66
   Insn 956: point = 1066, n_alt = 1
   Insn 955: point = 1067, n_alt = 4
   Insn 954: point = 1068, n_alt = 0
   Insn 953: point = 1070, n_alt = 3
   Insn 952: point = 1072, n_alt = 4
   Insn 951: point = 1073, n_alt = 3
   Insn 950: point = 1075, n_alt = 0
   Insn 949: point = 1077, n_alt = 1
   Insn 948: point = 1079, n_alt = 0
   Insn 947: point = 1080, n_alt = 0
   Insn 946: point = 1082, n_alt = 1
   Insn 945: point = 1084, n_alt = 0
   Insn 944: point = 1085, n_alt = 3
   Insn 943: point = 1087, n_alt = 0
   Insn 942: point = 1089, n_alt = 1
   Insn 941: point = 1091, n_alt = 0
   Insn 940: point = 1092, n_alt = 0
   Insn 939: point = 1094, n_alt = 1
   Insn 938: point = 1096, n_alt = 0
  BB 65
   Insn 936: point = 1098, n_alt = -1
   Insn 935: point = 1098, n_alt = 0
   Insn 934: point = 1099, n_alt = 0
   Insn 933: point = 1101, n_alt = 0
   Insn 932: point = 1103, n_alt = 4
   Insn 931: point = 1104, n_alt = 3
   Insn 930: point = 1106, n_alt = 0
   Insn 929: point = 1108, n_alt = 1
   Insn 928: point = 1110, n_alt = 0
   Insn 927: point = 1111, n_alt = 0
   Insn 926: point = 1113, n_alt = 1
   Insn 925: point = 1115, n_alt = 0
   Insn 924: point = 1116, n_alt = 0
   Insn 923: point = 1118, n_alt = 4
   Insn 922: point = 1119, n_alt = 3
   Insn 921: point = 1121, n_alt = 0
   Insn 920: point = 1123, n_alt = 1
   Insn 919: point = 1125, n_alt = 0
   Insn 918: point = 1126, n_alt = 0
   Insn 917: point = 1128, n_alt = 1
   Insn 916: point = 1130, n_alt = 0
  BB 63
   Insn 908: point = 1132, n_alt = 1
  BB 61
   Insn 900: point = 1133, n_alt = 1
   Insn 899: point = 1134, n_alt = 0
   Insn 898: point = 1135, n_alt = 0
  BB 156
   Insn 1995: point = 1136, n_alt = -1
  BB 51
   Insn 811: point = 1136, n_alt = -1
   Insn 810: point = 1136, n_alt = 0
   Insn 809: point = 1137, n_alt = 0
   Insn 808: point = 1139, n_alt = 0
   Insn 807: point = 1140, n_alt = 0
  BB 60
   Insn 1925: point = 1140, n_alt = -1
   Insn 892: point = 1140, n_alt = 1
  BB 157
   Insn 1998: point = 1140, n_alt = -1
  BB 53
   Insn 821: point = 1140, n_alt = -1
   Insn 820: point = 1140, n_alt = 0
   Insn 819: point = 1141, n_alt = 0
   Insn 818: point = 1143, n_alt = 0
   Insn 817: point = 1144, n_alt = 0
  BB 59
   Insn 1923: point = 1145, n_alt = -1
   Insn 886: point = 1145, n_alt = 1
  BB 158
   Insn 2001: point = 1146, n_alt = -1
  BB 55
   Insn 829: point = 1147, n_alt = -1
   Insn 828: point = 1147, n_alt = 0
   Insn 827: point = 1148, n_alt = 0
   Insn 826: point = 1150, n_alt = 0
   Insn 825: point = 1151, n_alt = 0
  BB 58
   Insn 1921: point = 1152, n_alt = -1
   Insn 880: point = 1152, n_alt = 1
  BB 57
   Insn 877: point = 1153, n_alt = 1
   Insn 876: point = 1154, n_alt = 4
   Insn 875: point = 1155, n_alt = 3
   Insn 874: point = 1157, n_alt = 0
   Insn 873: point = 1158, n_alt = 3
   Insn 872: point = 1160, n_alt = 0
   Insn 871: point = 1162, n_alt = 1
   Insn 870: point = 1164, n_alt = 0
   Insn 869: point = 1165, n_alt = 0
   Insn 868: point = 1167, n_alt = 1
   Insn 867: point = 1169, n_alt = 0
  BB 56
   Insn 862: point = 1171, n_alt = -1
   Insn 861: point = 1171, n_alt = 1
   Insn 860: point = 1172, n_alt = 7
   Insn 859: point = 1174, n_alt = 4
   Insn 858: point = 1175, n_alt = 3
   Insn 857: point = 1177, n_alt = 0
   Insn 856: point = 1179, n_alt = 1
   Insn 855: point = 1181, n_alt = 0
   Insn 854: point = 1182, n_alt = 0
   Insn 853: point = 1184, n_alt = 1
   Insn 852: point = 1186, n_alt = 0
   Insn 851: point = 1187, n_alt = 8
   Insn 850: point = 1188, n_alt = 1
   Insn 849: point = 1190, n_alt = 7
   Insn 848: point = 1192, n_alt = 4
   Insn 847: point = 1193, n_alt = 1
   Insn 846: point = 1195, n_alt = 7
   Insn 845: point = 1197, n_alt = 0
   Insn 844: point = 1199, n_alt = 4
   Insn 843: point = 1200, n_alt = 3
   Insn 842: point = 1202, n_alt = 0
   Insn 841: point = 1204, n_alt = 1
   Insn 840: point = 1206, n_alt = 0
   Insn 839: point = 1207, n_alt = 0
   Insn 838: point = 1209, n_alt = 1
   Insn 837: point = 1211, n_alt = 0
   Insn 836: point = 1212, n_alt = 7
   Insn 835: point = 1214, n_alt = 0
   Insn 834: point = 1216, n_alt = 4
   Insn 833: point = 1217, n_alt = 3
   Insn 832: point = 1219, n_alt = 1
   Insn 831: point = 1221, n_alt = 0
  BB 54
   Insn 823: point = 1223, n_alt = 1
  BB 52
   Insn 815: point = 1224, n_alt = 1
   Insn 814: point = 1225, n_alt = 0
   Insn 813: point = 1226, n_alt = 0
  BB 50
   Insn 805: point = 1227, n_alt = 1
  BB 153
   Insn 1986: point = 1227, n_alt = -1
  BB 20
   Insn 187: point = 1227, n_alt = -1
   Insn 186: point = 1227, n_alt = 0
   Insn 185: point = 1228, n_alt = 0
   Insn 184: point = 1230, n_alt = 0
   Insn 183: point = 1231, n_alt = 0
  BB 49
   Insn 1919: point = 1231, n_alt = -1
   Insn 799: point = 1231, n_alt = 1
  BB 154
   Insn 1989: point = 1231, n_alt = -1
  BB 24
   Insn 206: point = 1231, n_alt = -1
   Insn 205: point = 1231, n_alt = 0
   Insn 204: point = 1232, n_alt = 0
   Insn 203: point = 1234, n_alt = 0
   Insn 202: point = 1235, n_alt = 0
  BB 48
   Insn 1917: point = 1236, n_alt = -1
   Insn 793: point = 1236, n_alt = 1
  BB 155
   Insn 1992: point = 1237, n_alt = -1
  BB 26
   Insn 214: point = 1238, n_alt = -1
   Insn 213: point = 1238, n_alt = 0
   Insn 212: point = 1239, n_alt = 0
   Insn 211: point = 1241, n_alt = 0
   Insn 210: point = 1242, n_alt = 0
  BB 47
   Insn 1915: point = 1243, n_alt = -1
   Insn 787: point = 1243, n_alt = 1
  BB 46
   Insn 784: point = 1244, n_alt = 8
   Insn 783: point = 1245, n_alt = 7
   Insn 782: point = 1246, n_alt = 4
   Insn 781: point = 1247, n_alt = 3
   Insn 780: point = 1249, n_alt = 0
   Insn 779: point = 1251, n_alt = 0
   Insn 778: point = 1253, n_alt = 0
   Insn 777: point = 1254, n_alt = 0
   Insn 776: point = 1256, n_alt = 0
   Insn 775: point = 1258, n_alt = 0
   Insn 774: point = 1259, n_alt = 8
   Insn 773: point = 1260, n_alt = 7
   Insn 772: point = 1261, n_alt = 4
   Insn 771: point = 1262, n_alt = 3
   Insn 770: point = 1264, n_alt = 0
   Insn 769: point = 1266, n_alt = 0
   Insn 768: point = 1268, n_alt = 0
   Insn 767: point = 1269, n_alt = 0
   Insn 766: point = 1271, n_alt = 0
   Insn 765: point = 1273, n_alt = 0
  BB 45
   Insn 760: point = 1275, n_alt = -1
   Insn 759: point = 1275, n_alt = 1
   Insn 758: point = 1276, n_alt = 7
   Insn 757: point = 1277, n_alt = 7
   Insn 756: point = 1279, n_alt = 4
   Insn 755: point = 1280, n_alt = 3
   Insn 754: point = 1282, n_alt = 0
   Insn 753: point = 1284, n_alt = 0
   Insn 752: point = 1286, n_alt = 0
   Insn 751: point = 1287, n_alt = 0
   Insn 750: point = 1289, n_alt = 0
   Insn 749: point = 1291, n_alt = 0
   Insn 748: point = 1292, n_alt = 8
   Insn 747: point = 1293, n_alt = 1
   Insn 746: point = 1295, n_alt = 7
   Insn 745: point = 1296, n_alt = -2
   Insn 744: point = 1297, n_alt = 0
   Insn 743: point = 1297, n_alt = -2
   Insn 742: point = 1298, n_alt = 2
   Insn 741: point = 1300, n_alt = 1
   Insn 740: point = 1302, n_alt = 1
   Insn 739: point = 1304, n_alt = 7
   Insn 738: point = 1305, n_alt = 7
   Insn 737: point = 1306, n_alt = 4
   Insn 736: point = 1307, n_alt = 9
   Insn 735: point = 1308, n_alt = 0
   Insn 734: point = 1308, n_alt = -2
   Insn 733: point = 1309, n_alt = 7
   Insn 732: point = 1309, n_alt = -2
   Insn 731: point = 1311, n_alt = 2
   Insn 730: point = 1313, n_alt = 7
   Insn 729: point = 1314, n_alt = 8
   Insn 728: point = 1315, n_alt = 1
   Insn 727: point = 1317, n_alt = 1
   Insn 726: point = 1319, n_alt = 7
   Insn 725: point = 1321, n_alt = 4
   Insn 724: point = 1322, n_alt = 3
   Insn 723: point = 1324, n_alt = 0
   Insn 722: point = 1326, n_alt = 0
   Insn 721: point = 1328, n_alt = 0
   Insn 720: point = 1329, n_alt = 0
   Insn 719: point = 1331, n_alt = 0
   Insn 718: point = 1333, n_alt = 0
   Insn 717: point = 1334, n_alt = 1
   Insn 716: point = 1336, n_alt = 7
   Insn 715: point = 1338, n_alt = 4
   Insn 714: point = 1339, n_alt = 3
   Insn 713: point = 1341, n_alt = 0
   Insn 712: point = 1343, n_alt = 0
   Insn 711: point = 1345, n_alt = 0
   Insn 710: point = 1346, n_alt = 0
   Insn 709: point = 1348, n_alt = 0
   Insn 708: point = 1350, n_alt = 0
   Insn 707: point = 1351, n_alt = -2
   Insn 706: point = 1353, n_alt = 1
   Insn 705: point = 1355, n_alt = 2
   Insn 704: point = 1357, n_alt = 2
   Insn 703: point = 1359, n_alt = 7
   Insn 702: point = 1360, n_alt = 1
   Insn 701: point = 1362, n_alt = 1
   Insn 700: point = 1364, n_alt = 7
   Insn 699: point = 1366, n_alt = 4
   Insn 698: point = 1367, n_alt = 3
   Insn 697: point = 1369, n_alt = 0
   Insn 696: point = 1371, n_alt = 0
   Insn 695: point = 1373, n_alt = 0
   Insn 694: point = 1374, n_alt = 0
   Insn 693: point = 1376, n_alt = 0
   Insn 692: point = 1378, n_alt = 0
   Insn 691: point = 1379, n_alt = -2
   Insn 690: point = 1381, n_alt = 2
   Insn 689: point = 1383, n_alt = 7
   Insn 2068: point = 1384, n_alt = -2
   Insn 688: point = 1386, n_alt = 1
   Insn 2067: point = 1386, n_alt = -2
   Insn 687: point = 1388, n_alt = 1
   Insn 686: point = 1390, n_alt = 7
   Insn 685: point = 1392, n_alt = 4
   Insn 684: point = 1393, n_alt = 3
   Insn 683: point = 1395, n_alt = 0
   Insn 682: point = 1397, n_alt = 0
   Insn 681: point = 1399, n_alt = 0
   Insn 680: point = 1400, n_alt = 0
   Insn 679: point = 1402, n_alt = 0
   Insn 678: point = 1404, n_alt = 0
   Insn 677: point = 1405, n_alt = -2
   Insn 676: point = 1407, n_alt = 2
   Insn 675: point = 1409, n_alt = 7
   Insn 674: point = 1410, n_alt = 8
   Insn 673: point = 1411, n_alt = 7
   Insn 672: point = 1413, n_alt = 0
   Insn 671: point = 1415, n_alt = 4
   Insn 670: point = 1416, n_alt = 3
   Insn 669: point = 1418, n_alt = 0
   Insn 668: point = 1420, n_alt = 0
   Insn 667: point = 1422, n_alt = 0
   Insn 666: point = 1424, n_alt = 0
   Insn 665: point = 1425, n_alt = -2
   Insn 664: point = 1427, n_alt = -2
   Insn 663: point = 1429, n_alt = 0
   Insn 662: point = 1431, n_alt = 0
   Insn 661: point = 1432, n_alt = 0
   Insn 660: point = 1432, n_alt = 0
   Insn 659: point = 1432, n_alt = 0
   Insn 658: point = 1432, n_alt = -2
   Insn 657: point = 1433, n_alt = 1
   Insn 656: point = 1435, n_alt = 0
   Insn 655: point = 1437, n_alt = 0
   Insn 654: point = 1438, n_alt = 8
   Insn 653: point = 1439, n_alt = 7
   Insn 652: point = 1441, n_alt = 0
   Insn 651: point = 1443, n_alt = 4
   Insn 650: point = 1444, n_alt = 3
   Insn 649: point = 1446, n_alt = 0
   Insn 648: point = 1448, n_alt = 0
   Insn 647: point = 1450, n_alt = 0
   Insn 646: point = 1451, n_alt = -2
   Insn 645: point = 1453, n_alt = -2
   Insn 644: point = 1455, n_alt = 0
   Insn 643: point = 1457, n_alt = 0
   Insn 642: point = 1458, n_alt = 0
   Insn 641: point = 1458, n_alt = 0
   Insn 640: point = 1458, n_alt = 0
   Insn 639: point = 1458, n_alt = -2
   Insn 638: point = 1459, n_alt = 1
   Insn 637: point = 1461, n_alt = 0
   Insn 636: point = 1463, n_alt = 0
   Insn 635: point = 1464, n_alt = 8
   Insn 634: point = 1465, n_alt = 7
   Insn 633: point = 1467, n_alt = 0
   Insn 632: point = 1469, n_alt = 4
   Insn 631: point = 1470, n_alt = 3
   Insn 630: point = 1472, n_alt = 0
   Insn 629: point = 1474, n_alt = 0
   Insn 628: point = 1476, n_alt = 0
   Insn 627: point = 1478, n_alt = 0
   Insn 626: point = 1479, n_alt = -2
   Insn 625: point = 1481, n_alt = -2
   Insn 624: point = 1483, n_alt = 0
   Insn 623: point = 1485, n_alt = 0
   Insn 622: point = 1486, n_alt = 0
   Insn 621: point = 1486, n_alt = 0
   Insn 620: point = 1486, n_alt = 0
   Insn 619: point = 1486, n_alt = -2
   Insn 618: point = 1487, n_alt = 1
   Insn 617: point = 1489, n_alt = 0
   Insn 616: point = 1490, n_alt = 8
   Insn 615: point = 1491, n_alt = 7
   Insn 614: point = 1493, n_alt = 0
   Insn 613: point = 1495, n_alt = 4
   Insn 612: point = 1496, n_alt = 3
   Insn 611: point = 1498, n_alt = 0
   Insn 610: point = 1500, n_alt = 0
   Insn 609: point = 1502, n_alt = 0
   Insn 608: point = 1503, n_alt = -2
   Insn 607: point = 1505, n_alt = -2
   Insn 606: point = 1507, n_alt = 0
   Insn 605: point = 1509, n_alt = 0
   Insn 604: point = 1510, n_alt = 0
   Insn 603: point = 1510, n_alt = 0
   Insn 602: point = 1510, n_alt = 0
   Insn 601: point = 1510, n_alt = -2
   Insn 600: point = 1511, n_alt = 1
   Insn 599: point = 1513, n_alt = 0
   Insn 598: point = 1514, n_alt = 1
   Insn 597: point = 1515, n_alt = 0
  BB 44
   Insn 594: point = 1517, n_alt = 8
   Insn 593: point = 1518, n_alt = 7
   Insn 592: point = 1519, n_alt = 4
   Insn 591: point = 1520, n_alt = 3
   Insn 590: point = 1522, n_alt = 0
   Insn 589: point = 1524, n_alt = 0
   Insn 588: point = 1526, n_alt = 0
   Insn 587: point = 1527, n_alt = 0
   Insn 586: point = 1529, n_alt = 0
   Insn 585: point = 1531, n_alt = 0
   Insn 584: point = 1532, n_alt = 1
  BB 43
   Insn 582: point = 1533, n_alt = -1
   Insn 581: point = 1533, n_alt = 0
  BB 42
   Insn 578: point = 1534, n_alt = 8
   Insn 577: point = 1535, n_alt = 7
   Insn 576: point = 1536, n_alt = 4
   Insn 575: point = 1537, n_alt = 3
   Insn 574: point = 1539, n_alt = 0
   Insn 573: point = 1541, n_alt = 0
   Insn 572: point = 1543, n_alt = 0
   Insn 571: point = 1544, n_alt = 0
   Insn 570: point = 1546, n_alt = 0
   Insn 569: point = 1548, n_alt = 0
   Insn 568: point = 1549, n_alt = 1
  BB 41
   Insn 566: point = 1550, n_alt = -1
   Insn 565: point = 1550, n_alt = 1
   Insn 564: point = 1550, n_alt = 1
   Insn 563: point = 1551, n_alt = 0
   Insn 562: point = 1553, n_alt = 0
   Insn 561: point = 1555, n_alt = 7
   Insn 560: point = 1556, n_alt = 8
   Insn 559: point = 1557, n_alt = 4
   Insn 558: point = 1558, n_alt = 2
   Insn 557: point = 1560, n_alt = 7
   Insn 556: point = 1561, n_alt = 3
   Insn 555: point = 1563, n_alt = 0
   Insn 554: point = 1565, n_alt = 0
   Insn 553: point = 1567, n_alt = 0
   Insn 552: point = 1568, n_alt = 0
   Insn 551: point = 1570, n_alt = 0
   Insn 550: point = 1572, n_alt = 0
   Insn 549: point = 1573, n_alt = -2
  BB 40
   Insn 547: point = 1576, n_alt = 0
   Insn 2066: point = 1577, n_alt = -2
   Insn 546: point = 1579, n_alt = 0
   Insn 2065: point = 1580, n_alt = -2
   Insn 545: point = 1582, n_alt = 1
   Insn 544: point = 1584, n_alt = 0
  BB 39
   Insn 543: point = 1587, n_alt = -1
   Insn 542: point = 1587, n_alt = 1
   Insn 2064: point = 1588, n_alt = -2
   Insn 541: point = 1590, n_alt = 0
   Insn 2063: point = 1590, n_alt = -2
   Insn 540: point = 1591, n_alt = 0
   Insn 539: point = 1593, n_alt = 2
   Insn 538: point = 1594, n_alt = -2
   Insn 537: point = 1595, n_alt = 7
   Insn 536: point = 1596, n_alt = 7
   Insn 535: point = 1597, n_alt = 8
   Insn 534: point = 1598, n_alt = 1
   Insn 533: point = 1600, n_alt = 7
   Insn 532: point = 1602, n_alt = 4
   Insn 2062: point = 1603, n_alt = -2
   Insn 531: point = 1605, n_alt = 2
   Insn 2061: point = 1605, n_alt = -2
   Insn 530: point = 1607, n_alt = -2
   Insn 529: point = 1609, n_alt = 2
   Insn 528: point = 1611, n_alt = 7
   Insn 527: point = 1612, n_alt = 8
   Insn 526: point = 1613, n_alt = 1
   Insn 525: point = 1615, n_alt = 7
   Insn 524: point = 1616, n_alt = 1
   Insn 523: point = 1618, n_alt = 7
   Insn 522: point = 1620, n_alt = 4
   Insn 521: point = 1621, n_alt = 3
   Insn 520: point = 1623, n_alt = 0
   Insn 519: point = 1625, n_alt = 0
   Insn 518: point = 1627, n_alt = 0
   Insn 517: point = 1628, n_alt = 0
   Insn 516: point = 1630, n_alt = 0
   Insn 515: point = 1632, n_alt = 0
   Insn 514: point = 1633, n_alt = -2
   Insn 513: point = 1635, n_alt = 2
   Insn 512: point = 1637, n_alt = 7
   Insn 511: point = 1638, n_alt = 8
   Insn 510: point = 1639, n_alt = 1
   Insn 509: point = 1641, n_alt = 7
   Insn 508: point = 1642, n_alt = 1
   Insn 507: point = 1644, n_alt = 7
   Insn 506: point = 1646, n_alt = 4
   Insn 505: point = 1647, n_alt = 3
   Insn 504: point = 1649, n_alt = 0
   Insn 503: point = 1651, n_alt = 0
   Insn 502: point = 1653, n_alt = 0
   Insn 501: point = 1654, n_alt = 0
   Insn 500: point = 1656, n_alt = 0
   Insn 499: point = 1658, n_alt = 0
   Insn 498: point = 1659, n_alt = -2
   Insn 497: point = 1661, n_alt = 2
   Insn 496: point = 1663, n_alt = 7
   Insn 495: point = 1664, n_alt = 8
   Insn 494: point = 1665, n_alt = 7
   Insn 493: point = 1667, n_alt = 0
   Insn 492: point = 1669, n_alt = 4
   Insn 491: point = 1670, n_alt = 3
   Insn 490: point = 1672, n_alt = 0
   Insn 489: point = 1674, n_alt = 0
   Insn 488: point = 1676, n_alt = 0
   Insn 487: point = 1677, n_alt = 8
   Insn 486: point = 1678, n_alt = 7
   Insn 485: point = 1680, n_alt = 0
   Insn 484: point = 1682, n_alt = 4
   Insn 483: point = 1683, n_alt = 3
   Insn 482: point = 1685, n_alt = 0
   Insn 481: point = 1687, n_alt = 0
   Insn 480: point = 1689, n_alt = 0
   Insn 479: point = 1690, n_alt = 8
   Insn 478: point = 1691, n_alt = 7
   Insn 477: point = 1693, n_alt = 0
   Insn 476: point = 1695, n_alt = 4
   Insn 475: point = 1696, n_alt = 3
   Insn 474: point = 1698, n_alt = 0
   Insn 473: point = 1700, n_alt = 0
   Insn 472: point = 1701, n_alt = 8
   Insn 471: point = 1702, n_alt = 7
   Insn 470: point = 1704, n_alt = 0
   Insn 469: point = 1706, n_alt = 4
   Insn 468: point = 1707, n_alt = 3
   Insn 467: point = 1709, n_alt = 0
   Insn 466: point = 1711, n_alt = 0
  BB 38
   Insn 463: point = 1713, n_alt = 8
   Insn 462: point = 1714, n_alt = 7
   Insn 461: point = 1715, n_alt = 4
   Insn 460: point = 1716, n_alt = 3
   Insn 459: point = 1718, n_alt = 0
   Insn 458: point = 1720, n_alt = 0
   Insn 457: point = 1722, n_alt = 0
   Insn 456: point = 1723, n_alt = 0
   Insn 455: point = 1725, n_alt = 0
   Insn 454: point = 1727, n_alt = 0
   Insn 453: point = 1728, n_alt = 1
  BB 37
   Insn 451: point = 1729, n_alt = -1
   Insn 450: point = 1729, n_alt = 0
  BB 36
   Insn 447: point = 1730, n_alt = 8
   Insn 446: point = 1731, n_alt = 7
   Insn 445: point = 1732, n_alt = 4
   Insn 444: point = 1733, n_alt = 3
   Insn 443: point = 1735, n_alt = 0
   Insn 442: point = 1737, n_alt = 0
   Insn 441: point = 1739, n_alt = 0
   Insn 440: point = 1740, n_alt = 0
   Insn 439: point = 1742, n_alt = 0
   Insn 438: point = 1744, n_alt = 0
   Insn 437: point = 1745, n_alt = 1
  BB 35
   Insn 435: point = 1746, n_alt = -1
   Insn 434: point = 1746, n_alt = 1
   Insn 433: point = 1746, n_alt = 1
   Insn 432: point = 1747, n_alt = 0
   Insn 431: point = 1749, n_alt = 0
   Insn 430: point = 1751, n_alt = 7
   Insn 429: point = 1752, n_alt = 8
   Insn 428: point = 1753, n_alt = 4
   Insn 427: point = 1754, n_alt = 2
   Insn 426: point = 1756, n_alt = 7
   Insn 425: point = 1757, n_alt = 3
   Insn 424: point = 1759, n_alt = 0
   Insn 423: point = 1761, n_alt = 0
   Insn 422: point = 1763, n_alt = 0
   Insn 421: point = 1764, n_alt = 0
   Insn 420: point = 1766, n_alt = 0
   Insn 419: point = 1768, n_alt = 0
   Insn 418: point = 1769, n_alt = -2
  BB 34
   Insn 416: point = 1772, n_alt = 0
   Insn 2060: point = 1773, n_alt = -2
   Insn 415: point = 1775, n_alt = 0
   Insn 2059: point = 1776, n_alt = -2
   Insn 414: point = 1778, n_alt = 1
   Insn 413: point = 1780, n_alt = 0
  BB 33
   Insn 412: point = 1783, n_alt = -1
   Insn 411: point = 1783, n_alt = 1
   Insn 2058: point = 1784, n_alt = -2
   Insn 410: point = 1786, n_alt = 0
   Insn 2057: point = 1786, n_alt = -2
   Insn 409: point = 1787, n_alt = 0
   Insn 408: point = 1789, n_alt = 2
   Insn 407: point = 1790, n_alt = -2
   Insn 406: point = 1791, n_alt = 7
   Insn 405: point = 1792, n_alt = 7
   Insn 404: point = 1793, n_alt = 8
   Insn 403: point = 1794, n_alt = 1
   Insn 402: point = 1796, n_alt = 7
   Insn 401: point = 1798, n_alt = 4
   Insn 400: point = 1799, n_alt = -2
   Insn 399: point = 1801, n_alt = 2
   Insn 398: point = 1803, n_alt = 7
   Insn 397: point = 1804, n_alt = 7
   Insn 396: point = 1806, n_alt = 4
   Insn 395: point = 1807, n_alt = 8
   Insn 394: point = 1808, n_alt = 1
   Insn 393: point = 1810, n_alt = 7
  BB 31
   Insn 1913: point = 1812, n_alt = -1
   Insn 348: point = 1812, n_alt = 4
   Insn 347: point = 1813, n_alt = 9
   Insn 346: point = 1814, n_alt = 0
   Insn 345: point = 1814, n_alt = -2
   Insn 344: point = 1815, n_alt = 7
   Insn 343: point = 1815, n_alt = -2
   Insn 342: point = 1817, n_alt = 2
   Insn 341: point = 1819, n_alt = 7
   Insn 340: point = 1820, n_alt = -2
   Insn 339: point = 1822, n_alt = 1
   Insn 338: point = 1824, n_alt = 7
   Insn 337: point = 1826, n_alt = 4
   Insn 336: point = 1827, n_alt = 1
   Insn 335: point = 1829, n_alt = 7
   Insn 334: point = 1831, n_alt = 0
   Insn 333: point = 1833, n_alt = 4
   Insn 332: point = 1834, n_alt = 3
   Insn 331: point = 1836, n_alt = 0
   Insn 330: point = 1838, n_alt = 0
   Insn 329: point = 1839, n_alt = 7
   Insn 328: point = 1841, n_alt = 0
   Insn 327: point = 1843, n_alt = 4
   Insn 326: point = 1844, n_alt = 3
   Insn 325: point = 1846, n_alt = 0
   Insn 324: point = 1848, n_alt = 0
   Insn 323: point = 1850, n_alt = 0
   Insn 322: point = 1851, n_alt = 0
   Insn 321: point = 1853, n_alt = 0
   Insn 320: point = 1855, n_alt = 0
   Insn 319: point = 1856, n_alt = 8
   Insn 318: point = 1857, n_alt = 7
   Insn 317: point = 1859, n_alt = 0
   Insn 316: point = 1861, n_alt = 4
   Insn 315: point = 1862, n_alt = 3
   Insn 314: point = 1864, n_alt = 0
   Insn 313: point = 1866, n_alt = 0
   Insn 312: point = 1868, n_alt = 0
   Insn 311: point = 1869, n_alt = 0
   Insn 310: point = 1871, n_alt = 0
   Insn 309: point = 1873, n_alt = 0
   Insn 308: point = 1875, n_alt = 0
   Insn 307: point = 1876, n_alt = 1
   Insn 306: point = 1878, n_alt = 0
   Insn 305: point = 1880, n_alt = 0
   Insn 304: point = 1881, n_alt = 8
   Insn 303: point = 1882, n_alt = 7
   Insn 302: point = 1884, n_alt = 0
   Insn 301: point = 1886, n_alt = 4
   Insn 300: point = 1887, n_alt = 3
   Insn 299: point = 1889, n_alt = 0
   Insn 298: point = 1891, n_alt = 0
   Insn 297: point = 1893, n_alt = 0
   Insn 296: point = 1894, n_alt = 0
   Insn 295: point = 1896, n_alt = 0
   Insn 294: point = 1898, n_alt = 0
   Insn 293: point = 1900, n_alt = 0
   Insn 292: point = 1901, n_alt = 1
   Insn 291: point = 1903, n_alt = 0
   Insn 290: point = 1905, n_alt = 0
  BB 32
   Insn 390: point = 1907, n_alt = 4
   Insn 389: point = 1908, n_alt = 9
   Insn 388: point = 1909, n_alt = 0
   Insn 387: point = 1909, n_alt = -2
   Insn 386: point = 1910, n_alt = 7
   Insn 385: point = 1910, n_alt = -2
   Insn 384: point = 1912, n_alt = 2
   Insn 383: point = 1914, n_alt = 7
   Insn 382: point = 1915, n_alt = 8
   Insn 381: point = 1916, n_alt = 7
   Insn 380: point = 1918, n_alt = 3
   Insn 379: point = 1919, n_alt = 3
   Insn 378: point = 1921, n_alt = 0
   Insn 377: point = 1923, n_alt = 0
   Insn 376: point = 1925, n_alt = 0
   Insn 375: point = 1926, n_alt = 0
   Insn 374: point = 1928, n_alt = 0
   Insn 373: point = 1930, n_alt = 0
   Insn 372: point = 1931, n_alt = 8
   Insn 371: point = 1932, n_alt = 7
   Insn 370: point = 1934, n_alt = 3
   Insn 369: point = 1935, n_alt = 3
   Insn 368: point = 1937, n_alt = 0
   Insn 367: point = 1939, n_alt = 0
   Insn 366: point = 1941, n_alt = 0
   Insn 365: point = 1942, n_alt = 0
   Insn 364: point = 1944, n_alt = 0
   Insn 363: point = 1946, n_alt = 0
   Insn 362: point = 1947, n_alt = 8
   Insn 361: point = 1948, n_alt = 7
   Insn 360: point = 1950, n_alt = 3
   Insn 359: point = 1951, n_alt = 3
   Insn 358: point = 1953, n_alt = 0
   Insn 357: point = 1955, n_alt = 0
   Insn 356: point = 1957, n_alt = 0
   Insn 355: point = 1958, n_alt = 0
   Insn 354: point = 1960, n_alt = 0
   Insn 353: point = 1962, n_alt = 0
  BB 30
   Insn 288: point = 1964, n_alt = -1
   Insn 287: point = 1964, n_alt = 0
   Insn 286: point = 1965, n_alt = 0
   Insn 285: point = 1967, n_alt = 3
  BB 29
   Insn 282: point = 1969, n_alt = -1
   Insn 281: point = 1969, n_alt = 1
   Insn 280: point = 1970, n_alt = 7
  BB 28
   Insn 278: point = 1972, n_alt = -1
   Insn 277: point = 1972, n_alt = 1
   Insn 276: point = 1973, n_alt = 2
   Insn 275: point = 1975, n_alt = 7
   Insn 274: point = 1976, n_alt = 7
  BB 27
   Insn 272: point = 1978, n_alt = -1
   Insn 271: point = 1978, n_alt = 0
   Insn 270: point = 1979, n_alt = 0
   Insn 269: point = 1981, n_alt = 3
   Insn 268: point = 1982, n_alt = 8
   Insn 267: point = 1983, n_alt = 1
   Insn 266: point = 1985, n_alt = 7
   Insn 265: point = 1987, n_alt = 4
   Insn 264: point = 1988, n_alt = 1
   Insn 263: point = 1990, n_alt = 7
   Insn 262: point = 1992, n_alt = 0
   Insn 261: point = 1994, n_alt = 4
   Insn 260: point = 1995, n_alt = 3
   Insn 259: point = 1997, n_alt = 0
   Insn 258: point = 1999, n_alt = 0
   Insn 257: point = 2001, n_alt = 0
   Insn 256: point = 2002, n_alt = 0
   Insn 255: point = 2004, n_alt = 0
   Insn 254: point = 2006, n_alt = 0
   Insn 253: point = 2007, n_alt = 7
   Insn 252: point = 2009, n_alt = 0
   Insn 251: point = 2011, n_alt = 4
   Insn 250: point = 2012, n_alt = 3
   Insn 249: point = 2014, n_alt = 0
   Insn 248: point = 2016, n_alt = 0
   Insn 247: point = 2017, n_alt = 8
   Insn 246: point = 2018, n_alt = 1
   Insn 245: point = 2020, n_alt = 7
   Insn 244: point = 2022, n_alt = 4
   Insn 243: point = 2023, n_alt = 1
   Insn 242: point = 2025, n_alt = 7
   Insn 241: point = 2027, n_alt = 0
   Insn 240: point = 2029, n_alt = 4
   Insn 239: point = 2030, n_alt = 3
   Insn 238: point = 2032, n_alt = 0
   Insn 237: point = 2034, n_alt = 0
   Insn 236: point = 2036, n_alt = 0
   Insn 235: point = 2037, n_alt = 0
   Insn 234: point = 2039, n_alt = 0
   Insn 233: point = 2041, n_alt = 0
   Insn 232: point = 2042, n_alt = 7
   Insn 231: point = 2044, n_alt = 0
   Insn 230: point = 2046, n_alt = 4
   Insn 229: point = 2047, n_alt = 3
   Insn 228: point = 2049, n_alt = 0
   Insn 227: point = 2051, n_alt = 0
   Insn 226: point = 2052, n_alt = 1
   Insn 225: point = 2053, n_alt = 0
   Insn 224: point = 2055, n_alt = 0
   Insn 223: point = 2057, n_alt = 4
   Insn 222: point = 2058, n_alt = 3
   Insn 221: point = 2060, n_alt = 0
   Insn 220: point = 2062, n_alt = 0
   Insn 219: point = 2064, n_alt = 0
   Insn 218: point = 2065, n_alt = 0
   Insn 217: point = 2067, n_alt = 0
   Insn 216: point = 2069, n_alt = 0
  BB 25
   Insn 208: point = 2071, n_alt = 1
  BB 23
   Insn 200: point = 2072, n_alt = 1
   Insn 199: point = 2073, n_alt = 0
   Insn 198: point = 2074, n_alt = 0
  BB 22
   Insn 195: point = 2075, n_alt = -1
   Insn 194: point = 2075, n_alt = 0
  BB 21
   Insn 192: point = 2075, n_alt = -1
   Insn 191: point = 2075, n_alt = 0
   Insn 190: point = 2076, n_alt = 0
   Insn 189: point = 2078, n_alt = 3
  BB 19
   Insn 181: point = 2079, n_alt = 1
  BB 18
   Insn 178: point = 2079, n_alt = 0
   Insn 177: point = 2079, n_alt = 3
   Insn 176: point = 2079, n_alt = -2
   Insn 175: point = 2080, n_alt = 2
   Insn 174: point = 2080, n_alt = 2
   Insn 173: point = 2080, n_alt = 2
   Insn 172: point = 2080, n_alt = 2
   Insn 171: point = 2080, n_alt = 3
   Insn 170: point = 2081, n_alt = 0
   Insn 169: point = 2081, n_alt = 3
   Insn 168: point = 2081, n_alt = 2
   Insn 167: point = 2081, n_alt = 4
   Insn 166: point = 2081, n_alt = -2
   Insn 165: point = 2082, n_alt = 3
   Insn 164: point = 2083, n_alt = 0
   Insn 163: point = 2083, n_alt = 3
   Insn 162: point = 2083, n_alt = 2
   Insn 161: point = 2083, n_alt = 4
   Insn 160: point = 2083, n_alt = -2
   Insn 159: point = 2084, n_alt = 3
   Insn 158: point = 2085, n_alt = 0
   Insn 157: point = 2085, n_alt = 3
   Insn 156: point = 2085, n_alt = 2
   Insn 155: point = 2085, n_alt = 4
   Insn 154: point = 2085, n_alt = -2
   Insn 153: point = 2086, n_alt = 3
  BB 17
   Insn 151: point = 2087, n_alt = -1
   Insn 150: point = 2087, n_alt = 0
   Insn 149: point = 2088, n_alt = 0
   Insn 148: point = 2090, n_alt = 3
  BB 150
   Insn 1977: point = 2091, n_alt = -1
  BB 9
   Insn 96: point = 2091, n_alt = -1
   Insn 95: point = 2091, n_alt = 0
   Insn 94: point = 2092, n_alt = 0
   Insn 93: point = 2094, n_alt = 0
   Insn 92: point = 2095, n_alt = 0
  BB 16
   Insn 1911: point = 2095, n_alt = -1
   Insn 142: point = 2095, n_alt = 1
  BB 151
   Insn 1980: point = 2095, n_alt = -1
  BB 11
   Insn 106: point = 2095, n_alt = -1
   Insn 105: point = 2095, n_alt = 0
   Insn 104: point = 2096, n_alt = 0
   Insn 103: point = 2098, n_alt = 0
   Insn 102: point = 2099, n_alt = 0
  BB 15
   Insn 1909: point = 2100, n_alt = -1
   Insn 136: point = 2100, n_alt = 1
  BB 152
   Insn 1983: point = 2101, n_alt = -1
  BB 13
   Insn 114: point = 2102, n_alt = -1
   Insn 113: point = 2102, n_alt = 0
   Insn 112: point = 2103, n_alt = 0
   Insn 111: point = 2105, n_alt = 0
   Insn 110: point = 2106, n_alt = 0
  BB 14
   Insn 1907: point = 2107, n_alt = -1
   Insn 130: point = 2107, n_alt = 1
   Insn 129: point = 2107, n_alt = 8
   Insn 128: point = 2108, n_alt = 7
   Insn 127: point = 2109, n_alt = 4
   Insn 126: point = 2110, n_alt = 3
   Insn 125: point = 2112, n_alt = 0
   Insn 124: point = 2114, n_alt = 1
   Insn 123: point = 2116, n_alt = 0
   Insn 122: point = 2117, n_alt = 0
   Insn 121: point = 2119, n_alt = 0
   Insn 120: point = 2121, n_alt = 1
   Insn 119: point = 2123, n_alt = 0
   Insn 118: point = 2124, n_alt = 1
   Insn 117: point = 2126, n_alt = 1
   Insn 116: point = 2128, n_alt = 0
  BB 12
   Insn 108: point = 2130, n_alt = 1
  BB 10
   Insn 100: point = 2131, n_alt = 1
   Insn 99: point = 2132, n_alt = 0
   Insn 98: point = 2133, n_alt = 0
  BB 8
   Insn 90: point = 2134, n_alt = 1
  BB 148
   Insn 1971: point = 2134, n_alt = -1
  BB 3
   Insn 20: point = 2134, n_alt = -1
   Insn 19: point = 2134, n_alt = 0
   Insn 18: point = 2135, n_alt = 0
   Insn 17: point = 2137, n_alt = 0
   Insn 16: point = 2138, n_alt = 0
  BB 7
   Insn 1905: point = 2139, n_alt = -1
   Insn 84: point = 2139, n_alt = 1
  BB 149
   Insn 1974: point = 2140, n_alt = -1
  BB 5
   Insn 28: point = 2141, n_alt = -1
   Insn 27: point = 2141, n_alt = 0
   Insn 26: point = 2142, n_alt = 0
   Insn 25: point = 2144, n_alt = 0
   Insn 24: point = 2145, n_alt = 0
  BB 6
   Insn 1903: point = 2146, n_alt = -1
   Insn 78: point = 2146, n_alt = 1
   Insn 77: point = 2146, n_alt = 1
   Insn 76: point = 2147, n_alt = 4
   Insn 75: point = 2148, n_alt = 3
   Insn 74: point = 2150, n_alt = 0
   Insn 73: point = 2152, n_alt = 1
   Insn 72: point = 2154, n_alt = 0
   Insn 71: point = 2155, n_alt = 0
   Insn 70: point = 2157, n_alt = 1
   Insn 69: point = 2159, n_alt = 0
   Insn 68: point = 2160, n_alt = 8
   Insn 67: point = 2161, n_alt = 7
   Insn 66: point = 2162, n_alt = 4
   Insn 65: point = 2163, n_alt = 3
   Insn 64: point = 2165, n_alt = 0
   Insn 63: point = 2167, n_alt = 1
   Insn 62: point = 2169, n_alt = 0
   Insn 61: point = 2170, n_alt = 0
   Insn 60: point = 2172, n_alt = 1
   Insn 59: point = 2174, n_alt = 0
   Insn 58: point = 2175, n_alt = 1
   Insn 57: point = 2176, n_alt = 4
   Insn 56: point = 2177, n_alt = 3
   Insn 55: point = 2179, n_alt = 0
   Insn 54: point = 2181, n_alt = 1
   Insn 53: point = 2183, n_alt = 0
   Insn 52: point = 2184, n_alt = 0
   Insn 51: point = 2186, n_alt = 1
   Insn 50: point = 2188, n_alt = 0
   Insn 49: point = 2189, n_alt = 8
   Insn 48: point = 2190, n_alt = 7
   Insn 47: point = 2191, n_alt = 3
   Insn 46: point = 2192, n_alt = 3
   Insn 45: point = 2194, n_alt = 0
   Insn 44: point = 2196, n_alt = 1
   Insn 43: point = 2198, n_alt = 0
   Insn 42: point = 2199, n_alt = 0
   Insn 41: point = 2201, n_alt = 1
   Insn 40: point = 2203, n_alt = 0
   Insn 39: point = 2204, n_alt = 8
   Insn 38: point = 2205, n_alt = 7
   Insn 37: point = 2206, n_alt = 3
   Insn 36: point = 2207, n_alt = 3
   Insn 35: point = 2209, n_alt = 0
   Insn 34: point = 2211, n_alt = 1
   Insn 33: point = 2213, n_alt = 0
   Insn 32: point = 2214, n_alt = 0
   Insn 31: point = 2216, n_alt = 1
   Insn 30: point = 2218, n_alt = 0
  BB 4
   Insn 22: point = 2220, n_alt = 1
  BB 2
   Insn 14: point = 2221, n_alt = 1
   Insn 13: point = 2222, n_alt = 0
   Insn 12: point = 2223, n_alt = 0
   Insn 7: point = 2224, n_alt = 5
   Insn 6: point = 2224, n_alt = 5
   Insn 5: point = 2224, n_alt = 5
   Insn 4: point = 2224, n_alt = 5
   Insn 3: point = 2224, n_alt = 5
   Insn 2: point = 2224, n_alt = 5
 r609: [270..273]
 r620: [234..237]
 r627: [126..157]
 r628: [150..154]
 r645: [178..209]
 r646: [202..206]
Compressing live ranges: from 2224 to 8 - 0%
Ranges after the compression:
 r609: [6..7]
 r620: [4..5]
 r627: [0..1]
 r628: [0..1]
 r645: [2..3]
 r646: [2..3]
  Slot 0 regnos (width = 0):	 609	 645	 627	 620
  Slot 1 regnos (width = 0):	 628	 646
Changing spilled pseudos to memory in insn #2091
Changing spilled pseudos to memory in insn #1653
Changing spilled pseudos to memory in insn #2093
Changing spilled pseudos to memory in insn #1676
Changing spilled pseudos to memory in insn #2095
Changing spilled pseudos to memory in insn #1697
Changing spilled pseudos to memory in insn #2096
Changing spilled pseudos to memory in insn #1714
Changing spilled pseudos to memory in insn #2099
Changing spilled pseudos to memory in insn #1740
Changing spilled pseudos to memory in insn #2100
Changing spilled pseudos to memory in insn #1757
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 1 for insn #1757
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1757:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 7 for insn #2100
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2100:  (0) v  (1) m {*movsf_internal}
Reusing alternative 8 for insn #1740
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1740:  (0) m  (1) v {*movsf_internal}
Reusing alternative 8 for insn #2099
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2099:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #1714
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1714:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 7 for insn #2096
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 2096:  (0) v  (1) m {*movsf_internal}
Reusing alternative 8 for insn #1697
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1697:  (0) m  (1) v {*movsf_internal}
Reusing alternative 8 for insn #2095
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2095:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #1676
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1676:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #2093
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2093:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #1653
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1653:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #2091
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 2091:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=256, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=224, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 31
changing reg in insn 32
changing reg in insn 32
changing reg in insn 34
changing reg in insn 35
changing reg in insn 36
changing reg in insn 36
changing reg in insn 39
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 46
changing reg in insn 49
changing reg in insn 51
changing reg in insn 52
changing reg in insn 52
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 56
changing reg in insn 58
changing reg in insn 60
changing reg in insn 61
changing reg in insn 61
changing reg in insn 63
changing reg in insn 64
changing reg in insn 65
changing reg in insn 65
changing reg in insn 68
changing reg in insn 70
changing reg in insn 71
changing reg in insn 71
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 75
changing reg in insn 77
changing reg in insn 117
changing reg in insn 118
changing reg in insn 118
changing reg in insn 122
changing reg in insn 120
changing reg in insn 121
changing reg in insn 121
changing reg in insn 122
changing reg in insn 122
changing reg in insn 124
changing reg in insn 125
changing reg in insn 126
changing reg in insn 126
changing reg in insn 129
changing reg in insn 149
changing reg in insn 150
changing reg in insn 190
changing reg in insn 191
changing reg in insn 217
changing reg in insn 218
changing reg in insn 218
changing reg in insn 220
changing reg in insn 221
changing reg in insn 222
changing reg in insn 222
changing reg in insn 224
changing reg in insn 228
changing reg in insn 229
changing reg in insn 229
changing reg in insn 231
changing reg in insn 232
changing reg in insn 243
changing reg in insn 234
changing reg in insn 235
changing reg in insn 235
changing reg in insn 237
changing reg in insn 238
changing reg in insn 239
changing reg in insn 239
changing reg in insn 241
changing reg in insn 242
changing reg in insn 243
changing reg in insn 243
changing reg in insn 245
changing reg in insn 249
changing reg in insn 250
changing reg in insn 250
changing reg in insn 252
changing reg in insn 253
changing reg in insn 264
changing reg in insn 255
changing reg in insn 256
changing reg in insn 256
changing reg in insn 258
changing reg in insn 259
changing reg in insn 260
changing reg in insn 260
changing reg in insn 262
changing reg in insn 263
changing reg in insn 264
changing reg in insn 264
changing reg in insn 266
changing reg in insn 270
changing reg in insn 271
changing reg in insn 276
changing reg in insn 277
changing reg in insn 286
changing reg in insn 287
changing reg in insn 291
changing reg in insn 292
changing reg in insn 292
changing reg in insn 296
changing reg in insn 294
changing reg in insn 295
changing reg in insn 295
changing reg in insn 296
changing reg in insn 296
changing reg in insn 298
changing reg in insn 299
changing reg in insn 300
changing reg in insn 300
changing reg in insn 302
changing reg in insn 306
changing reg in insn 307
changing reg in insn 307
changing reg in insn 311
changing reg in insn 309
changing reg in insn 310
changing reg in insn 310
changing reg in insn 311
changing reg in insn 311
changing reg in insn 313
changing reg in insn 314
changing reg in insn 315
changing reg in insn 315
changing reg in insn 317
changing reg in insn 321
changing reg in insn 322
changing reg in insn 322
changing reg in insn 324
changing reg in insn 325
changing reg in insn 326
changing reg in insn 326
changing reg in insn 328
changing reg in insn 329
changing reg in insn 336
changing reg in insn 331
changing reg in insn 332
changing reg in insn 332
changing reg in insn 334
changing reg in insn 335
changing reg in insn 336
changing reg in insn 336
changing reg in insn 338
changing reg in insn 339
changing reg in insn 340
changing reg in insn 340
changing reg in insn 342
changing reg in insn 342
changing reg in insn 343
changing reg in insn 354
changing reg in insn 355
changing reg in insn 355
changing reg in insn 357
changing reg in insn 358
changing reg in insn 359
changing reg in insn 359
changing reg in insn 361
changing reg in insn 364
changing reg in insn 365
changing reg in insn 365
changing reg in insn 367
changing reg in insn 368
changing reg in insn 369
changing reg in insn 369
changing reg in insn 371
changing reg in insn 374
changing reg in insn 375
changing reg in insn 375
changing reg in insn 377
changing reg in insn 378
changing reg in insn 379
changing reg in insn 379
changing reg in insn 381
changing reg in insn 384
changing reg in insn 385
changing reg in insn 397
changing reg in insn 399
changing reg in insn 399
changing reg in insn 400
changing reg in insn 400
changing reg in insn 402
changing reg in insn 418
changing reg in insn 427
changing reg in insn 420
changing reg in insn 421
changing reg in insn 421
changing reg in insn 423
changing reg in insn 424
changing reg in insn 425
changing reg in insn 425
changing reg in insn 429
changing reg in insn 427
changing reg in insn 429
changing reg in insn 431
changing reg in insn 432
changing reg in insn 439
changing reg in insn 440
changing reg in insn 440
changing reg in insn 442
changing reg in insn 443
changing reg in insn 444
changing reg in insn 444
changing reg in insn 447
changing reg in insn 455
changing reg in insn 456
changing reg in insn 456
changing reg in insn 458
changing reg in insn 459
changing reg in insn 460
changing reg in insn 460
changing reg in insn 463
changing reg in insn 467
changing reg in insn 468
changing reg in insn 468
changing reg in insn 470
changing reg in insn 474
changing reg in insn 475
changing reg in insn 475
changing reg in insn 477
changing reg in insn 481
changing reg in insn 482
changing reg in insn 482
changing reg in insn 483
changing reg in insn 483
changing reg in insn 485
changing reg in insn 489
changing reg in insn 490
changing reg in insn 490
changing reg in insn 491
changing reg in insn 491
changing reg in insn 493
changing reg in insn 497
changing reg in insn 498
changing reg in insn 498
changing reg in insn 500
changing reg in insn 501
changing reg in insn 501
changing reg in insn 503
changing reg in insn 504
changing reg in insn 505
changing reg in insn 505
changing reg in insn 507
changing reg in insn 507
changing reg in insn 508
changing reg in insn 513
changing reg in insn 514
changing reg in insn 514
changing reg in insn 516
changing reg in insn 517
changing reg in insn 517
changing reg in insn 519
changing reg in insn 520
changing reg in insn 521
changing reg in insn 521
changing reg in insn 523
changing reg in insn 523
changing reg in insn 524
changing reg in insn 529
changing reg in insn 530
changing reg in insn 530
changing reg in insn 533
changing reg in insn 549
changing reg in insn 558
changing reg in insn 551
changing reg in insn 552
changing reg in insn 552
changing reg in insn 554
changing reg in insn 555
changing reg in insn 556
changing reg in insn 556
changing reg in insn 560
changing reg in insn 558
changing reg in insn 560
changing reg in insn 562
changing reg in insn 563
changing reg in insn 570
changing reg in insn 571
changing reg in insn 571
changing reg in insn 573
changing reg in insn 574
changing reg in insn 575
changing reg in insn 575
changing reg in insn 578
changing reg in insn 586
changing reg in insn 587
changing reg in insn 587
changing reg in insn 589
changing reg in insn 590
changing reg in insn 591
changing reg in insn 591
changing reg in insn 594
changing reg in insn 600
changing reg in insn 605
changing reg in insn 603
changing reg in insn 601
changing reg in insn 605
changing reg in insn 603
changing reg in insn 608
changing reg in insn 610
changing reg in insn 611
changing reg in insn 612
changing reg in insn 612
changing reg in insn 614
changing reg in insn 618
changing reg in insn 623
changing reg in insn 621
changing reg in insn 619
changing reg in insn 623
changing reg in insn 621
changing reg in insn 626
changing reg in insn 628
changing reg in insn 629
changing reg in insn 629
changing reg in insn 630
changing reg in insn 631
changing reg in insn 631
changing reg in insn 633
changing reg in insn 637
changing reg in insn 638
changing reg in insn 638
changing reg in insn 643
changing reg in insn 641
changing reg in insn 639
changing reg in insn 643
changing reg in insn 641
changing reg in insn 646
changing reg in insn 648
changing reg in insn 649
changing reg in insn 650
changing reg in insn 650
changing reg in insn 652
changing reg in insn 656
changing reg in insn 657
changing reg in insn 657
changing reg in insn 662
changing reg in insn 660
changing reg in insn 658
changing reg in insn 662
changing reg in insn 660
changing reg in insn 665
changing reg in insn 667
changing reg in insn 668
changing reg in insn 668
changing reg in insn 669
changing reg in insn 670
changing reg in insn 670
changing reg in insn 672
changing reg in insn 676
changing reg in insn 677
changing reg in insn 677
changing reg in insn 679
changing reg in insn 680
changing reg in insn 680
changing reg in insn 682
changing reg in insn 683
changing reg in insn 684
changing reg in insn 684
changing reg in insn 686
changing reg in insn 686
changing reg in insn 687
changing reg in insn 702
changing reg in insn 690
changing reg in insn 691
changing reg in insn 691
changing reg in insn 693
changing reg in insn 694
changing reg in insn 694
changing reg in insn 696
changing reg in insn 697
changing reg in insn 698
changing reg in insn 698
changing reg in insn 700
changing reg in insn 700
changing reg in insn 701
changing reg in insn 702
changing reg in insn 702
changing reg in insn 704
changing reg in insn 705
changing reg in insn 705
changing reg in insn 706
changing reg in insn 706
changing reg in insn 707
changing reg in insn 707
changing reg in insn 717
changing reg in insn 709
changing reg in insn 710
changing reg in insn 710
changing reg in insn 712
changing reg in insn 713
changing reg in insn 714
changing reg in insn 714
changing reg in insn 716
changing reg in insn 716
changing reg in insn 717
changing reg in insn 717
changing reg in insn 719
changing reg in insn 720
changing reg in insn 720
changing reg in insn 722
changing reg in insn 723
changing reg in insn 724
changing reg in insn 724
changing reg in insn 726
changing reg in insn 726
changing reg in insn 727
changing reg in insn 731
changing reg in insn 732
changing reg in insn 740
changing reg in insn 741
changing reg in insn 741
changing reg in insn 742
changing reg in insn 742
changing reg in insn 743
changing reg in insn 745
changing reg in insn 747
changing reg in insn 750
changing reg in insn 751
changing reg in insn 751
changing reg in insn 753
changing reg in insn 754
changing reg in insn 755
changing reg in insn 755
changing reg in insn 757
changing reg in insn 757
changing reg in insn 759
changing reg in insn 766
changing reg in insn 767
changing reg in insn 767
changing reg in insn 769
changing reg in insn 770
changing reg in insn 771
changing reg in insn 771
changing reg in insn 774
changing reg in insn 776
changing reg in insn 777
changing reg in insn 777
changing reg in insn 779
changing reg in insn 780
changing reg in insn 781
changing reg in insn 781
changing reg in insn 784
changing reg in insn 832
changing reg in insn 833
changing reg in insn 833
changing reg in insn 835
changing reg in insn 836
changing reg in insn 847
changing reg in insn 838
changing reg in insn 839
changing reg in insn 839
changing reg in insn 841
changing reg in insn 842
changing reg in insn 843
changing reg in insn 843
changing reg in insn 845
changing reg in insn 846
changing reg in insn 847
changing reg in insn 847
changing reg in insn 849
changing reg in insn 853
changing reg in insn 854
changing reg in insn 854
changing reg in insn 856
changing reg in insn 857
changing reg in insn 858
changing reg in insn 858
changing reg in insn 860
changing reg in insn 860
changing reg in insn 861
changing reg in insn 868
changing reg in insn 869
changing reg in insn 869
changing reg in insn 871
changing reg in insn 872
changing reg in insn 873
changing reg in insn 873
changing reg in insn 877
changing reg in insn 875
changing reg in insn 877
changing reg in insn 917
changing reg in insn 918
changing reg in insn 918
changing reg in insn 920
changing reg in insn 921
changing reg in insn 922
changing reg in insn 922
changing reg in insn 924
changing reg in insn 924
changing reg in insn 935
changing reg in insn 926
changing reg in insn 927
changing reg in insn 927
changing reg in insn 929
changing reg in insn 930
changing reg in insn 931
changing reg in insn 931
changing reg in insn 933
changing reg in insn 934
changing reg in insn 935
changing reg in insn 939
changing reg in insn 940
changing reg in insn 940
changing reg in insn 942
changing reg in insn 943
changing reg in insn 944
changing reg in insn 944
changing reg in insn 953
changing reg in insn 946
changing reg in insn 947
changing reg in insn 947
changing reg in insn 949
changing reg in insn 950
changing reg in insn 951
changing reg in insn 951
changing reg in insn 956
changing reg in insn 954
changing reg in insn 956
changing reg in insn 1000
changing reg in insn 1001
changing reg in insn 1001
changing reg in insn 1003
changing reg in insn 1004
changing reg in insn 1005
changing reg in insn 1005
changing reg in insn 1007
changing reg in insn 1009
changing reg in insn 1010
changing reg in insn 1010
changing reg in insn 1012
changing reg in insn 1013
changing reg in insn 1014
changing reg in insn 1014
changing reg in insn 1016
changing reg in insn 1018
changing reg in insn 1019
changing reg in insn 1019
changing reg in insn 1021
changing reg in insn 1022
changing reg in insn 1033
changing reg in insn 1024
changing reg in insn 1025
changing reg in insn 1025
changing reg in insn 1027
changing reg in insn 1028
changing reg in insn 1029
changing reg in insn 1029
changing reg in insn 1031
changing reg in insn 1032
changing reg in insn 1033
changing reg in insn 1033
changing reg in insn 1035
changing reg in insn 1039
changing reg in insn 1040
changing reg in insn 1040
changing reg in insn 1042
changing reg in insn 1043
changing reg in insn 1044
changing reg in insn 1044
changing reg in insn 1046
changing reg in insn 1046
changing reg in insn 1047
changing reg in insn 1051
changing reg in insn 1052
changing reg in insn 1060
changing reg in insn 1061
changing reg in insn 1061
changing reg in insn 1063
changing reg in insn 1064
changing reg in insn 1065
changing reg in insn 1065
changing reg in insn 1067
changing reg in insn 1074
changing reg in insn 1075
changing reg in insn 1075
changing reg in insn 1077
changing reg in insn 1078
changing reg in insn 1079
changing reg in insn 1079
changing reg in insn 1081
changing reg in insn 1102
changing reg in insn 1103
changing reg in insn 1103
changing reg in insn 1104
changing reg in insn 1104
changing reg in insn 1105
changing reg in insn 1108
changing reg in insn 1135
changing reg in insn 1110
changing reg in insn 1111
changing reg in insn 1111
changing reg in insn 1112
changing reg in insn 1115
changing reg in insn 1136
changing reg in insn 1117
changing reg in insn 1118
changing reg in insn 1118
changing reg in insn 1119
changing reg in insn 1119
changing reg in insn 1120
changing reg in insn 1122
changing reg in insn 1142
changing reg in insn 1152
changing reg in insn 1153
changing reg in insn 1153
changing reg in insn 1154
changing reg in insn 1154
changing reg in insn 1155
changing reg in insn 1158
changing reg in insn 1185
changing reg in insn 1160
changing reg in insn 1161
changing reg in insn 1161
changing reg in insn 1162
changing reg in insn 1165
changing reg in insn 1186
changing reg in insn 1167
changing reg in insn 1168
changing reg in insn 1168
changing reg in insn 1169
changing reg in insn 1169
changing reg in insn 1170
changing reg in insn 1172
changing reg in insn 1192
changing reg in insn 1217
changing reg in insn 1218
changing reg in insn 1218
changing reg in insn 1220
changing reg in insn 1221
changing reg in insn 1222
changing reg in insn 1222
changing reg in insn 1224
changing reg in insn 1224
changing reg in insn 1225
changing reg in insn 1229
changing reg in insn 1230
changing reg in insn 1230
changing reg in insn 1234
changing reg in insn 1232
changing reg in insn 1233
changing reg in insn 1233
changing reg in insn 1234
changing reg in insn 1234
changing reg in insn 1236
changing reg in insn 1237
changing reg in insn 1238
changing reg in insn 1238
changing reg in insn 1240
changing reg in insn 1240
changing reg in insn 1255
changing reg in insn 1242
changing reg in insn 1243
changing reg in insn 1243
changing reg in insn 1247
changing reg in insn 1245
changing reg in insn 1246
changing reg in insn 1246
changing reg in insn 1247
changing reg in insn 1247
changing reg in insn 1249
changing reg in insn 1250
changing reg in insn 1251
changing reg in insn 1251
changing reg in insn 1253
changing reg in insn 1254
changing reg in insn 1255
changing reg in insn 1262
changing reg in insn 1263
changing reg in insn 1263
changing reg in insn 1265
changing reg in insn 1266
changing reg in insn 1267
changing reg in insn 1267
changing reg in insn 1270
changing reg in insn 1304
changing reg in insn 1305
changing reg in insn 1305
changing reg in insn 1307
changing reg in insn 1308
changing reg in insn 1309
changing reg in insn 1309
changing reg in insn 1311
changing reg in insn 1311
changing reg in insn 1312
changing reg in insn 1316
changing reg in insn 1317
changing reg in insn 1317
changing reg in insn 1321
changing reg in insn 1319
changing reg in insn 1320
changing reg in insn 1320
changing reg in insn 1321
changing reg in insn 1321
changing reg in insn 1323
changing reg in insn 1324
changing reg in insn 1325
changing reg in insn 1325
changing reg in insn 1327
changing reg in insn 1327
changing reg in insn 1342
changing reg in insn 1329
changing reg in insn 1330
changing reg in insn 1330
changing reg in insn 1334
changing reg in insn 1332
changing reg in insn 1333
changing reg in insn 1333
changing reg in insn 1334
changing reg in insn 1334
changing reg in insn 1336
changing reg in insn 1337
changing reg in insn 1338
changing reg in insn 1338
changing reg in insn 1340
changing reg in insn 1341
changing reg in insn 1342
changing reg in insn 1349
changing reg in insn 1350
changing reg in insn 1350
changing reg in insn 1352
changing reg in insn 1353
changing reg in insn 1354
changing reg in insn 1354
changing reg in insn 1357
changing reg in insn 1399
changing reg in insn 1400
changing reg in insn 1400
changing reg in insn 1402
changing reg in insn 1403
changing reg in insn 1404
changing reg in insn 1404
changing reg in insn 1406
changing reg in insn 1415
changing reg in insn 1416
changing reg in insn 1416
changing reg in insn 1418
changing reg in insn 1419
changing reg in insn 1420
changing reg in insn 1420
changing reg in insn 1422
changing reg in insn 1471
changing reg in insn 1472
changing reg in insn 1472
changing reg in insn 1474
changing reg in insn 1475
changing reg in insn 1476
changing reg in insn 1476
changing reg in insn 1478
changing reg in insn 1480
changing reg in insn 1481
changing reg in insn 1481
changing reg in insn 1483
changing reg in insn 1484
changing reg in insn 1485
changing reg in insn 1485
changing reg in insn 1487
changing reg in insn 1487
changing reg in insn 1488
changing reg in insn 1492
changing reg in insn 1493
changing reg in insn 1493
changing reg in insn 1495
changing reg in insn 1496
changing reg in insn 1497
changing reg in insn 1497
changing reg in insn 1499
changing reg in insn 1499
changing reg in insn 1500
changing reg in insn 1504
changing reg in insn 1505
changing reg in insn 1505
changing reg in insn 1507
changing reg in insn 1508
changing reg in insn 1509
changing reg in insn 1509
changing reg in insn 1511
changing reg in insn 1545
changing reg in insn 1546
changing reg in insn 1546
changing reg in insn 1548
changing reg in insn 1549
changing reg in insn 1550
changing reg in insn 1550
changing reg in insn 1552
changing reg in insn 1552
changing reg in insn 1553
changing reg in insn 1557
changing reg in insn 1558
changing reg in insn 1558
changing reg in insn 1560
changing reg in insn 1561
changing reg in insn 1572
changing reg in insn 1563
changing reg in insn 1564
changing reg in insn 1564
changing reg in insn 1566
changing reg in insn 1567
changing reg in insn 1568
changing reg in insn 1568
changing reg in insn 1570
changing reg in insn 1571
changing reg in insn 1572
changing reg in insn 1572
changing reg in insn 1574
changing reg in insn 1578
changing reg in insn 1579
changing reg in insn 1579
changing reg in insn 1583
changing reg in insn 1581
changing reg in insn 1582
changing reg in insn 1582
changing reg in insn 1583
changing reg in insn 1583
changing reg in insn 1585
changing reg in insn 1586
changing reg in insn 1587
changing reg in insn 1587
changing reg in insn 1589
changing reg in insn 1590
changing reg in insn 1592
changing reg in insn 1593
changing reg in insn 1593
changing reg in insn 1597
changing reg in insn 1595
changing reg in insn 1596
changing reg in insn 1596
changing reg in insn 1597
changing reg in insn 1597
changing reg in insn 1599
changing reg in insn 1600
changing reg in insn 1601
changing reg in insn 1601
changing reg in insn 1603
changing reg in insn 1604
changing reg in insn 1606
changing reg in insn 1606
changing reg in insn 1608
changing reg in insn 1609
changing reg in insn 1609
changing reg in insn 1610
changing reg in insn 1612
changing reg in insn 1612
changing reg in insn 1623
changing reg in insn 1614
changing reg in insn 1615
changing reg in insn 1615
changing reg in insn 1617
changing reg in insn 1618
changing reg in insn 1619
changing reg in insn 1619
changing reg in insn 1621
changing reg in insn 1622
changing reg in insn 1623
changing reg in insn 1623
changing reg in insn 1625
changing reg in insn 1626
changing reg in insn 1626
changing reg in insn 1628
changing reg in insn 1629
changing reg in insn 1630
changing reg in insn 1631
changing reg in insn 1634
changing reg in insn 1635
changing reg in insn 1637
changing reg in insn 1638
changing reg in insn 1638
changing reg in insn 1642
changing reg in insn 1640
changing reg in insn 1641
changing reg in insn 1641
changing reg in insn 1642
changing reg in insn 1642
changing reg in insn 1644
changing reg in insn 1645
changing reg in insn 1646
changing reg in insn 1646
changing reg in insn 1648
changing reg in insn 1652
changing reg in insn 1656
changing reg in insn 1657
changing reg in insn 1659
changing reg in insn 1660
changing reg in insn 1660
changing reg in insn 1664
changing reg in insn 1662
changing reg in insn 1663
changing reg in insn 1663
changing reg in insn 1664
changing reg in insn 1664
changing reg in insn 1666
changing reg in insn 1667
changing reg in insn 1668
changing reg in insn 1668
changing reg in insn 1670
changing reg in insn 1675
changing reg in insn 1686
changing reg in insn 1687
changing reg in insn 1687
changing reg in insn 1689
changing reg in insn 1690
changing reg in insn 1691
changing reg in insn 1691
changing reg in insn 1693
changing reg in insn 1701
changing reg in insn 1702
changing reg in insn 1703
changing reg in insn 1703
changing reg in insn 1705
changing reg in insn 1706
changing reg in insn 1706
changing reg in insn 1708
changing reg in insn 1709
changing reg in insn 1709
changing reg in insn 1711
changing reg in insn 1712
changing reg in insn 1713
changing reg in insn 1713
changing reg in insn 1716
changing reg in insn 1714
changing reg in insn 1716
changing reg in insn 1729
changing reg in insn 1730
changing reg in insn 1730
changing reg in insn 1732
changing reg in insn 1733
changing reg in insn 1734
changing reg in insn 1734
changing reg in insn 1736
changing reg in insn 1744
changing reg in insn 1745
changing reg in insn 1746
changing reg in insn 1746
changing reg in insn 1748
changing reg in insn 1749
changing reg in insn 1749
changing reg in insn 1751
changing reg in insn 1752
changing reg in insn 1752
changing reg in insn 1754
changing reg in insn 1755
changing reg in insn 1756
changing reg in insn 1756
changing reg in insn 1759
changing reg in insn 1757
changing reg in insn 1759
changing reg in insn 1800
changing reg in insn 1801
changing reg in insn 1801
changing reg in insn 1803
changing reg in insn 1804
changing reg in insn 1805
changing reg in insn 1805
changing reg in insn 1807
changing reg in insn 1810
changing reg in insn 1813
changing reg in insn 1814
changing reg in insn 1815
changing reg in insn 1821
changing reg in insn 1822
changing reg in insn 1822
changing reg in insn 1824
changing reg in insn 1825
changing reg in insn 1826
changing reg in insn 1826
changing reg in insn 1828
changing reg in insn 1830
changing reg in insn 1831
changing reg in insn 1831
changing reg in insn 1833
changing reg in insn 1834
changing reg in insn 1835
changing reg in insn 1835
changing reg in insn 1837
changing reg in insn 1841
changing reg in insn 1844
changing reg in insn 1845
changing reg in insn 1846
changing reg in insn 1853
changing reg in insn 1854
changing reg in insn 1854
changing reg in insn 1856
changing reg in insn 1857
changing reg in insn 1858
changing reg in insn 1858
changing reg in insn 1860
changing reg in insn 1410
changing reg in insn 1406
changing reg in insn 1413
changing reg in insn 1407
changing reg in insn 1426
changing reg in insn 1422
changing reg in insn 1429
changing reg in insn 1423
changing reg in insn 9
changing reg in insn 1798
changing reg in insn 1828
changing reg in insn 1811
changing reg in insn 1811
changing reg in insn 1808
changing reg in insn 1849
changing reg in insn 1837
changing reg in insn 1860
changing reg in insn 1842
changing reg in insn 1842
changing reg in insn 1839
changing reg in insn 12
changing reg in insn 14
changing reg in insn 13
changing reg in insn 16
changing reg in insn 18
changing reg in insn 19
changing reg in insn 26
changing reg in insn 27
changing reg in insn 94
changing reg in insn 95
changing reg in insn 98
changing reg in insn 100
changing reg in insn 99
changing reg in insn 102
changing reg in insn 104
changing reg in insn 105
changing reg in insn 112
changing reg in insn 113
changing reg in insn 185
changing reg in insn 186
changing reg in insn 198
changing reg in insn 200
changing reg in insn 199
changing reg in insn 202
changing reg in insn 204
changing reg in insn 205
changing reg in insn 212
changing reg in insn 213
changing reg in insn 343
changing reg in insn 345
changing reg in insn 385
changing reg in insn 387
changing reg in insn 732
changing reg in insn 734
changing reg in insn 809
changing reg in insn 810
changing reg in insn 813
changing reg in insn 815
changing reg in insn 814
changing reg in insn 817
changing reg in insn 819
changing reg in insn 820
changing reg in insn 827
changing reg in insn 828
changing reg in insn 898
changing reg in insn 900
changing reg in insn 899
changing reg in insn 902
changing reg in insn 904
changing reg in insn 905
changing reg in insn 912
changing reg in insn 913
changing reg in insn 975
changing reg in insn 976
changing reg in insn 981
changing reg in insn 983
changing reg in insn 982
changing reg in insn 985
changing reg in insn 987
changing reg in insn 988
changing reg in insn 995
changing reg in insn 996
changing reg in insn 1198
changing reg in insn 1200
changing reg in insn 1199
changing reg in insn 1202
changing reg in insn 1204
changing reg in insn 1205
changing reg in insn 1212
changing reg in insn 1213
changing reg in insn 1285
changing reg in insn 1287
changing reg in insn 1286
changing reg in insn 1289
changing reg in insn 1291
changing reg in insn 1292
changing reg in insn 1299
changing reg in insn 1300
changing reg in insn 1380
changing reg in insn 1382
changing reg in insn 1381
changing reg in insn 1384
changing reg in insn 1386
changing reg in insn 1387
changing reg in insn 1394
changing reg in insn 1395
changing reg in insn 1442
changing reg in insn 1444
changing reg in insn 1443
changing reg in insn 1446
changing reg in insn 1448
changing reg in insn 1449
changing reg in insn 1452
changing reg in insn 1454
changing reg in insn 1453
changing reg in insn 1456
changing reg in insn 1458
changing reg in insn 1459
changing reg in insn 1466
changing reg in insn 1467
changing reg in insn 1526
changing reg in insn 1528
changing reg in insn 1527
changing reg in insn 1530
changing reg in insn 1532
changing reg in insn 1533
changing reg in insn 1540
changing reg in insn 1541
changing reg in insn 1635
changing reg in insn 1650
changing reg in insn 1657
changing reg in insn 1673
changing reg in insn 1780
changing reg in insn 1782
changing reg in insn 1781
changing reg in insn 1784
changing reg in insn 1786
changing reg in insn 1787
changing reg in insn 1794
changing reg in insn 1795
changing reg in insn 1807
changing reg in insn 9
changing reg in insn 1808
changing reg in insn 17
changing reg in insn 18
changing reg in insn 25
changing reg in insn 26
changing reg in insn 30
changing reg in insn 31
changing reg in insn 33
changing reg in insn 34
changing reg in insn 37
changing reg in insn 39
changing reg in insn 38
changing reg in insn 39
changing reg in insn 40
changing reg in insn 41
changing reg in insn 43
changing reg in insn 44
changing reg in insn 47
changing reg in insn 49
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 51
changing reg in insn 53
changing reg in insn 54
changing reg in insn 57
changing reg in insn 58
changing reg in insn 59
changing reg in insn 60
changing reg in insn 62
changing reg in insn 63
changing reg in insn 66
changing reg in insn 68
changing reg in insn 67
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 72
changing reg in insn 73
changing reg in insn 76
changing reg in insn 77
changing reg in insn 93
changing reg in insn 94
changing reg in insn 103
changing reg in insn 104
changing reg in insn 111
changing reg in insn 112
changing reg in insn 116
changing reg in insn 117
changing reg in insn 119
changing reg in insn 120
changing reg in insn 123
changing reg in insn 124
changing reg in insn 127
changing reg in insn 129
changing reg in insn 128
changing reg in insn 129
changing reg in insn 148
changing reg in insn 149
changing reg in insn 153
changing reg in insn 154
changing reg in insn 159
changing reg in insn 160
changing reg in insn 165
changing reg in insn 166
changing reg in insn 171
changing reg in insn 176
changing reg in insn 184
changing reg in insn 185
changing reg in insn 189
changing reg in insn 190
changing reg in insn 203
changing reg in insn 204
changing reg in insn 211
changing reg in insn 212
changing reg in insn 216
changing reg in insn 217
changing reg in insn 219
changing reg in insn 220
changing reg in insn 223
changing reg in insn 225
changing reg in insn 224
changing reg in insn 225
changing reg in insn 225
changing reg in insn 226
changing reg in insn 227
changing reg in insn 228
changing reg in insn 230
changing reg in insn 232
changing reg in insn 231
changing reg in insn 232
changing reg in insn 233
changing reg in insn 234
changing reg in insn 236
changing reg in insn 237
changing reg in insn 240
changing reg in insn 242
changing reg in insn 241
changing reg in insn 242
changing reg in insn 244
changing reg in insn 245
changing reg in insn 246
changing reg in insn 247
changing reg in insn 248
changing reg in insn 249
changing reg in insn 251
changing reg in insn 253
changing reg in insn 252
changing reg in insn 253
changing reg in insn 254
changing reg in insn 255
changing reg in insn 257
changing reg in insn 258
changing reg in insn 261
changing reg in insn 263
changing reg in insn 262
changing reg in insn 263
changing reg in insn 265
changing reg in insn 266
changing reg in insn 267
changing reg in insn 268
changing reg in insn 269
changing reg in insn 270
changing reg in insn 274
changing reg in insn 276
changing reg in insn 275
changing reg in insn 276
changing reg in insn 280
changing reg in insn 281
changing reg in insn 285
changing reg in insn 286
changing reg in insn 290
changing reg in insn 291
changing reg in insn 293
changing reg in insn 294
changing reg in insn 297
changing reg in insn 298
changing reg in insn 301
changing reg in insn 303
changing reg in insn 302
changing reg in insn 303
changing reg in insn 303
changing reg in insn 304
changing reg in insn 305
changing reg in insn 306
changing reg in insn 308
changing reg in insn 309
changing reg in insn 312
changing reg in insn 313
changing reg in insn 316
changing reg in insn 318
changing reg in insn 317
changing reg in insn 318
changing reg in insn 318
changing reg in insn 319
changing reg in insn 320
changing reg in insn 321
changing reg in insn 323
changing reg in insn 324
changing reg in insn 327
changing reg in insn 329
changing reg in insn 328
changing reg in insn 329
changing reg in insn 330
changing reg in insn 331
changing reg in insn 333
changing reg in insn 335
changing reg in insn 334
changing reg in insn 335
changing reg in insn 337
changing reg in insn 338
changing reg in insn 341
changing reg in insn 342
changing reg in insn 347
changing reg in insn 348
changing reg in insn 353
changing reg in insn 354
changing reg in insn 356
changing reg in insn 357
changing reg in insn 360
changing reg in insn 361
changing reg in insn 361
changing reg in insn 362
changing reg in insn 363
changing reg in insn 364
changing reg in insn 366
changing reg in insn 367
changing reg in insn 370
changing reg in insn 371
changing reg in insn 371
changing reg in insn 372
changing reg in insn 373
changing reg in insn 374
changing reg in insn 376
changing reg in insn 377
changing reg in insn 380
changing reg in insn 381
changing reg in insn 381
changing reg in insn 382
changing reg in insn 383
changing reg in insn 384
changing reg in insn 389
changing reg in insn 390
changing reg in insn 394
changing reg in insn 395
changing reg in insn 393
changing reg in insn 394
changing reg in insn 396
changing reg in insn 397
changing reg in insn 398
changing reg in insn 399
changing reg in insn 401
changing reg in insn 402
changing reg in insn 403
changing reg in insn 404
changing reg in insn 405
changing reg in insn 415
changing reg in insn 407
changing reg in insn 406
changing reg in insn 411
changing reg in insn 416
changing reg in insn 414
changing reg in insn 407
changing reg in insn 418
changing reg in insn 416
changing reg in insn 413
changing reg in insn 411
changing reg in insn 408
changing reg in insn 409
changing reg in insn 409
changing reg in insn 410
changing reg in insn 413
changing reg in insn 414
changing reg in insn 416
changing reg in insn 419
changing reg in insn 420
changing reg in insn 422
changing reg in insn 423
changing reg in insn 426
changing reg in insn 427
changing reg in insn 428
changing reg in insn 429
changing reg in insn 430
changing reg in insn 431
changing reg in insn 432
changing reg in insn 433
changing reg in insn 438
changing reg in insn 439
changing reg in insn 441
changing reg in insn 442
changing reg in insn 445
changing reg in insn 447
changing reg in insn 446
changing reg in insn 447
changing reg in insn 454
changing reg in insn 455
changing reg in insn 457
changing reg in insn 458
changing reg in insn 461
changing reg in insn 463
changing reg in insn 462
changing reg in insn 463
changing reg in insn 466
changing reg in insn 467
changing reg in insn 469
changing reg in insn 471
changing reg in insn 470
changing reg in insn 471
changing reg in insn 471
changing reg in insn 472
changing reg in insn 473
changing reg in insn 474
changing reg in insn 476
changing reg in insn 478
changing reg in insn 477
changing reg in insn 478
changing reg in insn 478
changing reg in insn 479
changing reg in insn 480
changing reg in insn 481
changing reg in insn 484
changing reg in insn 486
changing reg in insn 485
changing reg in insn 486
changing reg in insn 486
changing reg in insn 487
changing reg in insn 488
changing reg in insn 489
changing reg in insn 492
changing reg in insn 494
changing reg in insn 493
changing reg in insn 494
changing reg in insn 494
changing reg in insn 495
changing reg in insn 496
changing reg in insn 497
changing reg in insn 499
changing reg in insn 500
changing reg in insn 502
changing reg in insn 503
changing reg in insn 506
changing reg in insn 507
changing reg in insn 510
changing reg in insn 511
changing reg in insn 509
changing reg in insn 512
changing reg in insn 513
changing reg in insn 515
changing reg in insn 516
changing reg in insn 518
changing reg in insn 519
changing reg in insn 522
changing reg in insn 523
changing reg in insn 526
changing reg in insn 527
changing reg in insn 525
changing reg in insn 528
changing reg in insn 529
changing reg in insn 532
changing reg in insn 533
changing reg in insn 534
changing reg in insn 535
changing reg in insn 536
changing reg in insn 546
changing reg in insn 538
changing reg in insn 537
changing reg in insn 542
changing reg in insn 547
changing reg in insn 545
changing reg in insn 538
changing reg in insn 549
changing reg in insn 547
changing reg in insn 544
changing reg in insn 542
changing reg in insn 539
changing reg in insn 540
changing reg in insn 540
changing reg in insn 541
changing reg in insn 544
changing reg in insn 545
changing reg in insn 547
changing reg in insn 550
changing reg in insn 551
changing reg in insn 553
changing reg in insn 554
changing reg in insn 557
changing reg in insn 558
changing reg in insn 559
changing reg in insn 560
changing reg in insn 561
changing reg in insn 562
changing reg in insn 563
changing reg in insn 564
changing reg in insn 569
changing reg in insn 570
changing reg in insn 572
changing reg in insn 573
changing reg in insn 576
changing reg in insn 578
changing reg in insn 577
changing reg in insn 578
changing reg in insn 585
changing reg in insn 586
changing reg in insn 588
changing reg in insn 589
changing reg in insn 592
changing reg in insn 594
changing reg in insn 593
changing reg in insn 594
changing reg in insn 597
changing reg in insn 598
changing reg in insn 599
changing reg in insn 600
changing reg in insn 607
changing reg in insn 605
changing reg in insn 604
changing reg in insn 603
changing reg in insn 602
changing reg in insn 601
changing reg in insn 608
changing reg in insn 606
changing reg in insn 605
changing reg in insn 604
changing reg in insn 603
changing reg in insn 602
changing reg in insn 606
changing reg in insn 607
changing reg in insn 609
changing reg in insn 610
changing reg in insn 613
changing reg in insn 615
changing reg in insn 614
changing reg in insn 615
changing reg in insn 615
changing reg in insn 616
changing reg in insn 617
changing reg in insn 618
changing reg in insn 625
changing reg in insn 623
changing reg in insn 622
changing reg in insn 621
changing reg in insn 620
changing reg in insn 619
changing reg in insn 626
changing reg in insn 624
changing reg in insn 623
changing reg in insn 622
changing reg in insn 621
changing reg in insn 620
changing reg in insn 624
changing reg in insn 625
changing reg in insn 627
changing reg in insn 628
changing reg in insn 632
changing reg in insn 634
changing reg in insn 633
changing reg in insn 634
changing reg in insn 634
changing reg in insn 635
changing reg in insn 636
changing reg in insn 637
changing reg in insn 645
changing reg in insn 643
changing reg in insn 642
changing reg in insn 641
changing reg in insn 640
changing reg in insn 639
changing reg in insn 646
changing reg in insn 644
changing reg in insn 643
changing reg in insn 642
changing reg in insn 641
changing reg in insn 640
changing reg in insn 644
changing reg in insn 645
changing reg in insn 647
changing reg in insn 648
changing reg in insn 651
changing reg in insn 653
changing reg in insn 652
changing reg in insn 653
changing reg in insn 653
changing reg in insn 654
changing reg in insn 655
changing reg in insn 656
changing reg in insn 664
changing reg in insn 662
changing reg in insn 661
changing reg in insn 660
changing reg in insn 659
changing reg in insn 658
changing reg in insn 665
changing reg in insn 663
changing reg in insn 662
changing reg in insn 661
changing reg in insn 660
changing reg in insn 659
changing reg in insn 663
changing reg in insn 664
changing reg in insn 666
changing reg in insn 667
changing reg in insn 671
changing reg in insn 673
changing reg in insn 672
changing reg in insn 673
changing reg in insn 673
changing reg in insn 674
changing reg in insn 675
changing reg in insn 676
changing reg in insn 678
changing reg in insn 679
changing reg in insn 681
changing reg in insn 682
changing reg in insn 685
changing reg in insn 686
changing reg in insn 689
changing reg in insn 690
changing reg in insn 692
changing reg in insn 693
changing reg in insn 695
changing reg in insn 696
changing reg in insn 699
changing reg in insn 700
changing reg in insn 703
changing reg in insn 704
changing reg in insn 708
changing reg in insn 709
changing reg in insn 711
changing reg in insn 712
changing reg in insn 715
changing reg in insn 716
changing reg in insn 718
changing reg in insn 719
changing reg in insn 721
changing reg in insn 722
changing reg in insn 725
changing reg in insn 726
changing reg in insn 728
changing reg in insn 729
changing reg in insn 730
changing reg in insn 731
changing reg in insn 736
changing reg in insn 737
changing reg in insn 738
changing reg in insn 739
changing reg in insn 747
changing reg in insn 748
changing reg in insn 746
changing reg in insn 747
changing reg in insn 749
changing reg in insn 750
changing reg in insn 752
changing reg in insn 753
changing reg in insn 756
changing reg in insn 757
changing reg in insn 758
changing reg in insn 759
changing reg in insn 765
changing reg in insn 766
changing reg in insn 768
changing reg in insn 769
changing reg in insn 772
changing reg in insn 774
changing reg in insn 773
changing reg in insn 774
changing reg in insn 775
changing reg in insn 776
changing reg in insn 778
changing reg in insn 779
changing reg in insn 782
changing reg in insn 784
changing reg in insn 783
changing reg in insn 784
changing reg in insn 808
changing reg in insn 809
changing reg in insn 818
changing reg in insn 819
changing reg in insn 826
changing reg in insn 827
changing reg in insn 831
changing reg in insn 832
changing reg in insn 834
changing reg in insn 836
changing reg in insn 835
changing reg in insn 836
changing reg in insn 837
changing reg in insn 838
changing reg in insn 840
changing reg in insn 841
changing reg in insn 844
changing reg in insn 846
changing reg in insn 845
changing reg in insn 846
changing reg in insn 848
changing reg in insn 849
changing reg in insn 850
changing reg in insn 851
changing reg in insn 852
changing reg in insn 853
changing reg in insn 855
changing reg in insn 856
changing reg in insn 859
changing reg in insn 860
changing reg in insn 867
changing reg in insn 868
changing reg in insn 870
changing reg in insn 871
changing reg in insn 874
changing reg in insn 875
changing reg in insn 876
changing reg in insn 877
changing reg in insn 903
changing reg in insn 904
changing reg in insn 911
changing reg in insn 912
changing reg in insn 916
changing reg in insn 917
changing reg in insn 919
changing reg in insn 920
changing reg in insn 923
changing reg in insn 924
changing reg in insn 925
changing reg in insn 926
changing reg in insn 928
changing reg in insn 929
changing reg in insn 932
changing reg in insn 934
changing reg in insn 933
changing reg in insn 934
changing reg in insn 938
changing reg in insn 939
changing reg in insn 941
changing reg in insn 942
changing reg in insn 945
changing reg in insn 946
changing reg in insn 948
changing reg in insn 949
changing reg in insn 952
changing reg in insn 954
changing reg in insn 953
changing reg in insn 954
changing reg in insn 955
changing reg in insn 956
changing reg in insn 974
changing reg in insn 975
changing reg in insn 986
changing reg in insn 987
changing reg in insn 994
changing reg in insn 995
changing reg in insn 999
changing reg in insn 1000
changing reg in insn 1002
changing reg in insn 1003
changing reg in insn 1006
changing reg in insn 1007
changing reg in insn 1008
changing reg in insn 1009
changing reg in insn 1011
changing reg in insn 1012
changing reg in insn 1015
changing reg in insn 1016
changing reg in insn 1017
changing reg in insn 1018
changing reg in insn 1020
changing reg in insn 1022
changing reg in insn 1021
changing reg in insn 1022
changing reg in insn 1023
changing reg in insn 1024
changing reg in insn 1026
changing reg in insn 1027
changing reg in insn 1030
changing reg in insn 1032
changing reg in insn 1031
changing reg in insn 1032
changing reg in insn 1034
changing reg in insn 1035
changing reg in insn 1036
changing reg in insn 1037
changing reg in insn 1038
changing reg in insn 1039
changing reg in insn 1041
changing reg in insn 1042
changing reg in insn 1045
changing reg in insn 1046
changing reg in insn 1050
changing reg in insn 1051
changing reg in insn 1059
changing reg in insn 1060
changing reg in insn 1062
changing reg in insn 1063
changing reg in insn 1066
changing reg in insn 1067
changing reg in insn 1073
changing reg in insn 1074
changing reg in insn 1076
changing reg in insn 1077
changing reg in insn 1080
changing reg in insn 1081
changing reg in insn 1101
changing reg in insn 1102
changing reg in insn 1105
changing reg in insn 1106
changing reg in insn 1106
changing reg in insn 1108
changing reg in insn 1107
changing reg in insn 1108
changing reg in insn 1109
changing reg in insn 1110
changing reg in insn 1112
changing reg in insn 1113
changing reg in insn 1113
changing reg in insn 1115
changing reg in insn 1114
changing reg in insn 1115
changing reg in insn 1116
changing reg in insn 1117
changing reg in insn 1120
changing reg in insn 1121
changing reg in insn 1151
changing reg in insn 1152
changing reg in insn 1155
changing reg in insn 1156
changing reg in insn 1156
changing reg in insn 1158
changing reg in insn 1157
changing reg in insn 1158
changing reg in insn 1159
changing reg in insn 1160
changing reg in insn 1162
changing reg in insn 1163
changing reg in insn 1163
changing reg in insn 1165
changing reg in insn 1164
changing reg in insn 1165
changing reg in insn 1166
changing reg in insn 1167
changing reg in insn 1170
changing reg in insn 1171
changing reg in insn 1203
changing reg in insn 1204
changing reg in insn 1211
changing reg in insn 1212
changing reg in insn 1216
changing reg in insn 1217
changing reg in insn 1219
changing reg in insn 1220
changing reg in insn 1223
changing reg in insn 1224
changing reg in insn 1228
changing reg in insn 1229
changing reg in insn 1231
changing reg in insn 1232
changing reg in insn 1235
changing reg in insn 1236
changing reg in insn 1239
changing reg in insn 1240
changing reg in insn 1241
changing reg in insn 1242
changing reg in insn 1244
changing reg in insn 1245
changing reg in insn 1248
changing reg in insn 1249
changing reg in insn 1252
changing reg in insn 1254
changing reg in insn 1253
changing reg in insn 1254
changing reg in insn 1261
changing reg in insn 1262
changing reg in insn 1264
changing reg in insn 1265
changing reg in insn 1268
changing reg in insn 1270
changing reg in insn 1269
changing reg in insn 1270
changing reg in insn 1290
changing reg in insn 1291
changing reg in insn 1298
changing reg in insn 1299
changing reg in insn 1303
changing reg in insn 1304
changing reg in insn 1306
changing reg in insn 1307
changing reg in insn 1310
changing reg in insn 1311
changing reg in insn 1315
changing reg in insn 1316
changing reg in insn 1318
changing reg in insn 1319
changing reg in insn 1322
changing reg in insn 1323
changing reg in insn 1326
changing reg in insn 1327
changing reg in insn 1328
changing reg in insn 1329
changing reg in insn 1331
changing reg in insn 1332
changing reg in insn 1335
changing reg in insn 1336
changing reg in insn 1339
changing reg in insn 1341
changing reg in insn 1340
changing reg in insn 1341
changing reg in insn 1348
changing reg in insn 1349
changing reg in insn 1351
changing reg in insn 1352
changing reg in insn 1355
changing reg in insn 1357
changing reg in insn 1356
changing reg in insn 1357
changing reg in insn 1385
changing reg in insn 1386
changing reg in insn 1393
changing reg in insn 1394
changing reg in insn 1398
changing reg in insn 1399
changing reg in insn 1401
changing reg in insn 1402
changing reg in insn 1405
changing reg in insn 1406
changing reg in insn 1414
changing reg in insn 1415
changing reg in insn 1417
changing reg in insn 1418
changing reg in insn 1421
changing reg in insn 1422
changing reg in insn 1447
changing reg in insn 1448
changing reg in insn 1457
changing reg in insn 1458
changing reg in insn 1465
changing reg in insn 1466
changing reg in insn 1470
changing reg in insn 1471
changing reg in insn 1473
changing reg in insn 1474
changing reg in insn 1477
changing reg in insn 1478
changing reg in insn 1479
changing reg in insn 1480
changing reg in insn 1482
changing reg in insn 1483
changing reg in insn 1486
changing reg in insn 1487
changing reg in insn 1491
changing reg in insn 1492
changing reg in insn 1494
changing reg in insn 1495
changing reg in insn 1498
changing reg in insn 1499
changing reg in insn 1503
changing reg in insn 1504
changing reg in insn 1506
changing reg in insn 1507
changing reg in insn 1510
changing reg in insn 1511
changing reg in insn 1531
changing reg in insn 1532
changing reg in insn 1539
changing reg in insn 1540
changing reg in insn 1544
changing reg in insn 1545
changing reg in insn 1547
changing reg in insn 1548
changing reg in insn 1551
changing reg in insn 1552
changing reg in insn 1556
changing reg in insn 1557
changing reg in insn 1559
changing reg in insn 1561
changing reg in insn 1560
changing reg in insn 1561
changing reg in insn 1562
changing reg in insn 1563
changing reg in insn 1565
changing reg in insn 1566
changing reg in insn 1569
changing reg in insn 1571
changing reg in insn 1570
changing reg in insn 1571
changing reg in insn 1573
changing reg in insn 1574
changing reg in insn 1575
changing reg in insn 1576
changing reg in insn 1577
changing reg in insn 1578
changing reg in insn 1580
changing reg in insn 1581
changing reg in insn 1584
changing reg in insn 1585
changing reg in insn 1588
changing reg in insn 1590
changing reg in insn 1589
changing reg in insn 1590
changing reg in insn 1591
changing reg in insn 1592
changing reg in insn 1594
changing reg in insn 1595
changing reg in insn 1598
changing reg in insn 1599
changing reg in insn 1602
changing reg in insn 1604
changing reg in insn 1603
changing reg in insn 1604
changing reg in insn 1605
changing reg in insn 1606
changing reg in insn 1607
changing reg in insn 1611
changing reg in insn 1612
changing reg in insn 1613
changing reg in insn 1614
changing reg in insn 1616
changing reg in insn 1617
changing reg in insn 1620
changing reg in insn 1622
changing reg in insn 1621
changing reg in insn 1622
changing reg in insn 1624
changing reg in insn 1625
changing reg in insn 1627
changing reg in insn 1629
changing reg in insn 1628
changing reg in insn 1629
changing reg in insn 1631
changing reg in insn 1632
changing reg in insn 1633
changing reg in insn 1634
changing reg in insn 1636
changing reg in insn 1637
changing reg in insn 1639
changing reg in insn 1640
changing reg in insn 1643
changing reg in insn 1644
changing reg in insn 1647
changing reg in insn 1648
changing reg in insn 1653
changing reg in insn 1654
changing reg in insn 1655
changing reg in insn 1656
changing reg in insn 1658
changing reg in insn 1659
changing reg in insn 1661
changing reg in insn 1662
changing reg in insn 1665
changing reg in insn 1666
changing reg in insn 1669
changing reg in insn 1671
changing reg in insn 1670
changing reg in insn 1671
changing reg in insn 1676
changing reg in insn 1677
changing reg in insn 1678
changing reg in insn 1679
changing reg in insn 1685
changing reg in insn 1686
changing reg in insn 1688
changing reg in insn 1689
changing reg in insn 1692
changing reg in insn 1693
changing reg in insn 1694
changing reg in insn 1695
changing reg in insn 1698
changing reg in insn 1699
changing reg in insn 1704
changing reg in insn 1707
changing reg in insn 1708
changing reg in insn 1710
changing reg in insn 1711
changing reg in insn 1715
changing reg in insn 1716
changing reg in insn 1721
changing reg in insn 1722
changing reg in insn 1728
changing reg in insn 1729
changing reg in insn 1731
changing reg in insn 1732
changing reg in insn 1735
changing reg in insn 1736
changing reg in insn 1737
changing reg in insn 1738
changing reg in insn 1741
changing reg in insn 1742
changing reg in insn 1747
changing reg in insn 1750
changing reg in insn 1751
changing reg in insn 1753
changing reg in insn 1754
changing reg in insn 1758
changing reg in insn 1759
changing reg in insn 1785
changing reg in insn 1786
changing reg in insn 1793
changing reg in insn 1794
changing reg in insn 1799
changing reg in insn 1800
changing reg in insn 1802
changing reg in insn 1803
changing reg in insn 1806
changing reg in insn 1807
changing reg in insn 1809
changing reg in insn 1810
changing reg in insn 1812
changing reg in insn 1813
changing reg in insn 1820
changing reg in insn 1821
changing reg in insn 1823
changing reg in insn 1824
changing reg in insn 1827
changing reg in insn 1828
changing reg in insn 1829
changing reg in insn 1830
changing reg in insn 1832
changing reg in insn 1833
changing reg in insn 1836
changing reg in insn 1837
changing reg in insn 1840
changing reg in insn 1841
changing reg in insn 1838
changing reg in insn 1839
changing reg in insn 1843
changing reg in insn 1844
changing reg in insn 1852
changing reg in insn 1853
changing reg in insn 1855
changing reg in insn 1856
changing reg in insn 1859
changing reg in insn 1860
deleting insn with uid = 343.
deleting insn with uid = 345.
deleting insn with uid = 385.
deleting insn with uid = 387.
deleting insn with uid = 2058.
deleting insn with uid = 2059.
deleting insn with uid = 530.
deleting insn with uid = 2062.
deleting insn with uid = 2064.
deleting insn with uid = 2065.
deleting insn with uid = 607.
deleting insn with uid = 625.
deleting insn with uid = 645.
deleting insn with uid = 664.
deleting insn with uid = 2068.
deleting insn with uid = 732.
deleting insn with uid = 734.
deleting insn with uid = 743.
deleting insn with uid = 1609.
deleting insn with uid = 1635.
deleting insn with uid = 1650.
deleting insn with uid = 1652.
deleting insn with uid = 1657.
deleting insn with uid = 1673.
deleting insn with uid = 1675.
deleting insn with uid = 1695.
deleting insn with uid = 1699.
deleting insn with uid = 1701.
deleting insn with uid = 1738.
deleting insn with uid = 1742.
deleting insn with uid = 1744.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 158.
verify found no changes in insn with uid = 164.
verify found no changes in insn with uid = 170.
verify found no changes in insn with uid = 178.
verify found no changes in insn with uid = 346.
verify found no changes in insn with uid = 388.
verify found no changes in insn with uid = 735.
verify found no changes in insn with uid = 744.
verify found no changes in insn with uid = 1144.
verify found no changes in insn with uid = 1194.
verify found no changes in insn with uid = 1651.
verify found no changes in insn with uid = 1674.
verify found no changes in insn with uid = 1696.
verify found no changes in insn with uid = 1700.
verify found no changes in insn with uid = 1739.
verify found no changes in insn with uid = 1743.


calcape

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12]
;;  ref usage 	r0={444d,427u} r1={445d,437u,8e} r2={110d,94u} r3={14d,14u} r4={33d,17u} r5={33d,17u} r6={1d,635u} r7={31d,226u} r8={16d} r9={16d} r10={16d} r11={16d} r12={16d} r13={16d} r14={16d} r15={16d} r17={492d,95u} r18={16d} r19={16d} r20={1d,1u,7e} r21={158d,157u} r22={69d,55u} r23={28d,13u} r24={20d,3u} r25={21d,4u} r26={20d,3u} r27={20d,3u} r28={18d,1u} r29={16d} r30={16d} r31={16d} r32={16d} r33={16d} r34={16d} r35={16d} r36={16d} r37={20d,4u} r38={19d,3u} r39={16d} r40={16d} r41={1d,1u} r45={16d} r46={16d} r47={16d} r48={16d} r49={16d} r50={16d} r51={16d} r52={16d} r53={16d} r54={16d} r55={16d} r56={16d} r57={16d} r58={16d} r59={16d} r60={16d} r61={16d} r62={16d} r63={16d} r64={16d} r65={16d} r66={16d} r67={16d} r68={16d} r69={16d} r70={16d} r71={16d} r72={16d} r73={16d} r74={16d} r75={16d} r76={16d} r77={16d} r78={16d} r79={16d} r80={16d} 
;;    total ref usage 5119{2894d,2210u,15e} in 1628{1612 regular + 16 call} insns.
(note 1 0 10 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 688 689
(note 10 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 10 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 itype+0 S8 A64])
        (reg:DI 5 di [ itype ])) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [4 p1d+0 S8 A64])
        (reg:DI 4 si [ p1d ])) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [4 t1d+0 S8 A64])
        (reg:DI 1 dx [ t1d ])) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [4 q1d+0 S8 A64])
        (reg:DI 2 cx [ q1d ])) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -216 [0xffffffffffffff28])) [5 l1d+0 S8 A64])
        (reg:DI 37 r8 [ l1d ])) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [4 cape+0 S8 A64])
        (reg:DI 38 r9 [ cape ])) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(note 8 7 12 2 NOTE_INSN_FUNCTION_BEG)
(insn 12 8 13 2 (set (reg:SI 1 dx [orig:688 _695 ] [688])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CALCAPE.f":169 86 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:SI 0 ax [orig:689 _696 ] [689])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CALCAPE.f":169 86 {*movsi_internal}
     (nil))
(insn 14 13 85 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:688 _695 ] [688])) "CALCAPE.f":169 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 689

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 689
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 689
;; lr  def 	 17 [flags] 690 749
(code_label 85 14 15 3 5 (nil) [1 uses])
(note 15 85 16 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 16 15 17 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:689 _696 ] [689]))) "CALCAPE.f":169 11 {*cmpsi_1}
     (nil))
(insn 17 16 18 3 (set (reg:QI 1 dx [749])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":169 678 {*setcc_qi}
     (nil))
(insn 18 17 19 3 (set (reg:SI 1 dx [orig:690 _698 ] [690])
        (zero_extend:SI (reg:QI 1 dx [749]))) "CALCAPE.f":169 140 {*zero_extendqisi2}
     (nil))
(insn 19 18 20 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:690 _698 ] [690])
            (const_int 0 [0]))) "CALCAPE.f":169 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 20 19 21 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1970)
            (pc))) "CALCAPE.f":169 682 {*jcc}
     (nil)
 -> 1970)
;;  succ:       148
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 689

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 689
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 21 20 22 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 79 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CALCAPE.f":170 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 689

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 689
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 691 750
(code_label 79 22 23 5 4 (nil) [1 uses])
(note 23 79 24 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALCAPE.f":170 11 {*cmpsi_1}
     (nil))
(insn 25 24 26 5 (set (reg:QI 1 dx [750])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":170 678 {*setcc_qi}
     (nil))
(insn 26 25 27 5 (set (reg:SI 1 dx [orig:691 _700 ] [691])
        (zero_extend:SI (reg:QI 1 dx [750]))) "CALCAPE.f":170 140 {*zero_extendqisi2}
     (nil))
(insn 27 26 28 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:691 _700 ] [691])
            (const_int 0 [0]))) "CALCAPE.f":170 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 28 27 29 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1973)
            (pc))) "CALCAPE.f":170 682 {*jcc}
     (nil)
 -> 1973)
;;  succ:       149
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 689

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 149, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 689
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 751 752 753 754 755 756 757 758 759 760 761 762 763 764 765 766 767 768
(note 29 28 30 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 31 6 (set (reg:SI 1 dx [751])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":171 86 {*movsi_internal}
     (nil))
(insn 31 30 32 6 (set (reg:DI 1 dx [orig:87 _1 ] [87])
        (sign_extend:DI (reg:SI 1 dx [751]))) "CALCAPE.f":171 149 {*extendsidi2_rex64}
     (nil))
(insn 32 31 33 6 (parallel [
            (set (reg:DI 2 cx [orig:88 _2 ] [88])
                (mult:DI (reg:DI 1 dx [orig:87 _1 ] [87])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":171 349 {*muldi3_1}
     (nil))
(insn 33 32 34 6 (set (reg:SI 1 dx [752])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":171 86 {*movsi_internal}
     (nil))
(insn 34 33 35 6 (set (reg:DI 1 dx [orig:89 _3 ] [89])
        (sign_extend:DI (reg:SI 1 dx [752]))) "CALCAPE.f":171 149 {*extendsidi2_rex64}
     (nil))
(insn 35 34 36 6 (parallel [
            (set (reg:DI 1 dx [orig:90 _4 ] [90])
                (plus:DI (reg:DI 1 dx [orig:89 _3 ] [89])
                    (reg:DI 2 cx [orig:88 _2 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":171 222 {*adddi_1}
     (nil))
(insn 36 35 37 6 (parallel [
            (set (reg:DI 2 cx [orig:91 _5 ] [91])
                (plus:DI (reg:DI 1 dx [orig:90 _4 ] [90])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":171 222 {*adddi_1}
     (nil))
(insn 37 36 38 6 (set (reg/f:DI 1 dx [753])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [4 cape+0 S8 A64])) "CALCAPE.f":171 85 {*movdi_internal}
     (nil))
(insn 38 37 39 6 (set (reg:SF 21 xmm0 [754])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":171 131 {*movsf_internal}
     (nil))
(insn 39 38 40 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:91 _5 ] [91])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [753])) [1 *cape_701(D) S4 A32])
        (reg:SF 21 xmm0 [754])) "CALCAPE.f":171 131 {*movsf_internal}
     (nil))
(insn 40 39 41 6 (set (reg:SI 1 dx [755])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":172 86 {*movsi_internal}
     (nil))
(insn 41 40 42 6 (set (reg:DI 1 dx [orig:92 _6 ] [92])
        (sign_extend:DI (reg:SI 1 dx [755]))) "CALCAPE.f":172 149 {*extendsidi2_rex64}
     (nil))
(insn 42 41 43 6 (parallel [
            (set (reg:DI 2 cx [orig:93 _7 ] [93])
                (mult:DI (reg:DI 1 dx [orig:92 _6 ] [92])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":172 349 {*muldi3_1}
     (nil))
(insn 43 42 44 6 (set (reg:SI 1 dx [756])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":172 86 {*movsi_internal}
     (nil))
(insn 44 43 45 6 (set (reg:DI 1 dx [orig:94 _8 ] [94])
        (sign_extend:DI (reg:SI 1 dx [756]))) "CALCAPE.f":172 149 {*extendsidi2_rex64}
     (nil))
(insn 45 44 46 6 (parallel [
            (set (reg:DI 1 dx [orig:95 _9 ] [95])
                (plus:DI (reg:DI 1 dx [orig:94 _8 ] [94])
                    (reg:DI 2 cx [orig:93 _7 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":172 222 {*adddi_1}
     (nil))
(insn 46 45 47 6 (parallel [
            (set (reg:DI 2 cx [orig:96 _10 ] [96])
                (plus:DI (reg:DI 1 dx [orig:95 _9 ] [95])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":172 222 {*adddi_1}
     (nil))
(insn 47 46 48 6 (set (reg/f:DI 1 dx [757])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [4 cins+0 S8 A64])) "CALCAPE.f":172 85 {*movdi_internal}
     (nil))
(insn 48 47 49 6 (set (reg:SF 21 xmm0 [758])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":172 131 {*movsf_internal}
     (nil))
(insn 49 48 50 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:96 _10 ] [96])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [757])) [1 *cins_703(D) S4 A32])
        (reg:SF 21 xmm0 [758])) "CALCAPE.f":172 131 {*movsf_internal}
     (nil))
(insn 50 49 51 6 (set (reg:SI 1 dx [759])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":173 86 {*movsi_internal}
     (nil))
(insn 51 50 52 6 (set (reg:DI 1 dx [orig:97 _11 ] [97])
        (sign_extend:DI (reg:SI 1 dx [759]))) "CALCAPE.f":173 149 {*extendsidi2_rex64}
     (nil))
(insn 52 51 53 6 (parallel [
            (set (reg:DI 2 cx [orig:98 _12 ] [98])
                (mult:DI (reg:DI 1 dx [orig:97 _11 ] [97])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":173 349 {*muldi3_1}
     (nil))
(insn 53 52 54 6 (set (reg:SI 1 dx [760])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":173 86 {*movsi_internal}
     (nil))
(insn 54 53 55 6 (set (reg:DI 1 dx [orig:99 _13 ] [99])
        (sign_extend:DI (reg:SI 1 dx [760]))) "CALCAPE.f":173 149 {*extendsidi2_rex64}
     (nil))
(insn 55 54 56 6 (parallel [
            (set (reg:DI 1 dx [orig:100 _14 ] [100])
                (plus:DI (reg:DI 1 dx [orig:99 _13 ] [99])
                    (reg:DI 2 cx [orig:98 _12 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":173 222 {*adddi_1}
     (nil))
(insn 56 55 57 6 (parallel [
            (set (reg:DI 2 cx [orig:101 _15 ] [101])
                (plus:DI (reg:DI 1 dx [orig:100 _14 ] [100])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":173 222 {*adddi_1}
     (nil))
(insn 57 56 58 6 (set (reg/f:DI 1 dx [761])
        (symbol_ref:DI ("lcl.4172") [flags 0x202]  <var_decl 0x7f0daa8aaab0 lcl>)) "CALCAPE.f":173 85 {*movdi_internal}
     (nil))
(insn 58 57 59 6 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:101 _15 ] [101])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [761])) [2 lcl S4 A32])
        (const_int 0 [0])) "CALCAPE.f":173 86 {*movsi_internal}
     (nil))
(insn 59 58 60 6 (set (reg:SI 1 dx [762])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":174 86 {*movsi_internal}
     (nil))
(insn 60 59 61 6 (set (reg:DI 1 dx [orig:102 _16 ] [102])
        (sign_extend:DI (reg:SI 1 dx [762]))) "CALCAPE.f":174 149 {*extendsidi2_rex64}
     (nil))
(insn 61 60 62 6 (parallel [
            (set (reg:DI 2 cx [orig:103 _17 ] [103])
                (mult:DI (reg:DI 1 dx [orig:102 _16 ] [102])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":174 349 {*muldi3_1}
     (nil))
(insn 62 61 63 6 (set (reg:SI 1 dx [763])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":174 86 {*movsi_internal}
     (nil))
(insn 63 62 64 6 (set (reg:DI 1 dx [orig:104 _18 ] [104])
        (sign_extend:DI (reg:SI 1 dx [763]))) "CALCAPE.f":174 149 {*extendsidi2_rex64}
     (nil))
(insn 64 63 65 6 (parallel [
            (set (reg:DI 1 dx [orig:105 _19 ] [105])
                (plus:DI (reg:DI 1 dx [orig:104 _18 ] [104])
                    (reg:DI 2 cx [orig:103 _17 ] [103])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":174 222 {*adddi_1}
     (nil))
(insn 65 64 66 6 (parallel [
            (set (reg:DI 2 cx [orig:106 _20 ] [106])
                (plus:DI (reg:DI 1 dx [orig:105 _19 ] [105])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":174 222 {*adddi_1}
     (nil))
(insn 66 65 67 6 (set (reg/f:DI 1 dx [764])
        (symbol_ref:DI ("thesp.4194") [flags 0x202]  <var_decl 0x7f0daa8ac510 thesp>)) "CALCAPE.f":174 85 {*movdi_internal}
     (nil))
(insn 67 66 68 6 (set (reg:SF 21 xmm0 [765])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":174 131 {*movsf_internal}
     (nil))
(insn 68 67 69 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:106 _20 ] [106])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [764])) [1 thesp S4 A32])
        (reg:SF 21 xmm0 [765])) "CALCAPE.f":174 131 {*movsf_internal}
     (nil))
(insn 69 68 70 6 (set (reg:SI 1 dx [766])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":175 86 {*movsi_internal}
     (nil))
(insn 70 69 71 6 (set (reg:DI 1 dx [orig:107 _21 ] [107])
        (sign_extend:DI (reg:SI 1 dx [766]))) "CALCAPE.f":175 149 {*extendsidi2_rex64}
     (nil))
(insn 71 70 72 6 (parallel [
            (set (reg:DI 2 cx [orig:108 _22 ] [108])
                (mult:DI (reg:DI 1 dx [orig:107 _21 ] [107])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":175 349 {*muldi3_1}
     (nil))
(insn 72 71 73 6 (set (reg:SI 1 dx [767])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":175 86 {*movsi_internal}
     (nil))
(insn 73 72 74 6 (set (reg:DI 1 dx [orig:109 _23 ] [109])
        (sign_extend:DI (reg:SI 1 dx [767]))) "CALCAPE.f":175 149 {*extendsidi2_rex64}
     (nil))
(insn 74 73 75 6 (parallel [
            (set (reg:DI 1 dx [orig:110 _24 ] [110])
                (plus:DI (reg:DI 1 dx [orig:109 _23 ] [109])
                    (reg:DI 2 cx [orig:108 _22 ] [108])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":175 222 {*adddi_1}
     (nil))
(insn 75 74 76 6 (parallel [
            (set (reg:DI 2 cx [orig:111 _25 ] [111])
                (plus:DI (reg:DI 1 dx [orig:110 _24 ] [110])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":175 222 {*adddi_1}
     (nil))
(insn 76 75 77 6 (set (reg/f:DI 1 dx [768])
        (symbol_ref:DI ("ieql.4153") [flags 0x202]  <var_decl 0x7f0daa8aa2d0 ieql>)) "CALCAPE.f":175 85 {*movdi_internal}
     (nil))
(insn 77 76 78 6 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:111 _25 ] [111])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [768])) [2 ieql S4 A32])
        (const_int 39 [0x27])) "CALCAPE.f":175 86 {*movsi_internal}
     (nil))
(insn 78 77 1903 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":170 221 {*addsi_1}
     (nil))
(jump_insn 1903 78 1904 6 (set (pc)
        (label_ref 79)) "CALCAPE.f":170 683 {jump}
     (nil)
 -> 79)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 689

(barrier 1904 1903 1973)
;; basic block 149, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 689
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1973 1904 1972 149 106 (nil) [1 uses])
(note 1972 1973 1974 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 1974 1972 82 149 (const_int 0 [0]) "CALCAPE.f":175 718 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 689

;; basic block 7, loop depth 0, maybe hot
;;  prev block 149, next block 148, flags: (RTL, MODIFIED)
;;  pred:       149 [always]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 689
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 82 1974 83 7 3 (nil) [0 uses])
(note 83 82 84 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 1905 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":169 221 {*addsi_1}
     (nil))
(jump_insn 1905 84 1906 7 (set (pc)
        (label_ref 85)) "CALCAPE.f":169 683 {jump}
     (nil)
 -> 85)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 689

(barrier 1906 1905 1970)
;; basic block 148, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1970 1906 1969 148 105 (nil) [1 uses])
(note 1969 1970 1971 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 1971 1969 88 148 (const_int 0 [0]) "CALCAPE.f":170 718 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 148, next block 9, flags: (RTL, MODIFIED)
;;  pred:       148 [always]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 88 1971 89 8 2 (nil) [0 uses])
(note 89 88 90 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 143 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
        (const_int 1 [0x1])) "CALCAPE.f":180 86 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              16 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 692 769
(code_label 143 90 91 9 11 (nil) [1 uses])
(note 91 143 92 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
            (const_int 38 [0x26]))) "CALCAPE.f":180 11 {*cmpsi_1}
     (nil))
(insn 93 92 94 9 (set (reg:QI 0 ax [769])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":180 678 {*setcc_qi}
     (nil))
(insn 94 93 95 9 (set (reg:SI 0 ax [orig:692 _711 ] [692])
        (zero_extend:SI (reg:QI 0 ax [769]))) "CALCAPE.f":180 140 {*zero_extendqisi2}
     (nil))
(insn 95 94 96 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:692 _711 ] [692])
            (const_int 0 [0]))) "CALCAPE.f":180 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 96 95 97 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1976)
            (pc))) "CALCAPE.f":180 682 {*jcc}
     (nil)
 -> 1976)
;;  succ:       150
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 693 694
(note 97 96 98 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 98 97 99 10 (set (reg:SI 1 dx [orig:693 _712 ] [693])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CALCAPE.f":181 86 {*movsi_internal}
     (nil))
(insn 99 98 100 10 (set (reg:SI 0 ax [orig:694 _713 ] [694])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CALCAPE.f":181 86 {*movsi_internal}
     (nil))
(insn 100 99 137 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:693 _712 ] [693])) "CALCAPE.f":181 86 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 694

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              15 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 694
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 694
;; lr  def 	 17 [flags] 695 770
(code_label 137 100 101 11 10 (nil) [1 uses])
(note 101 137 102 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:694 _713 ] [694]))) "CALCAPE.f":181 11 {*cmpsi_1}
     (nil))
(insn 103 102 104 11 (set (reg:QI 1 dx [770])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":181 678 {*setcc_qi}
     (nil))
(insn 104 103 105 11 (set (reg:SI 1 dx [orig:695 _715 ] [695])
        (zero_extend:SI (reg:QI 1 dx [770]))) "CALCAPE.f":181 140 {*zero_extendqisi2}
     (nil))
(insn 105 104 106 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:695 _715 ] [695])
            (const_int 0 [0]))) "CALCAPE.f":181 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 106 105 107 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1979)
            (pc))) "CALCAPE.f":181 682 {*jcc}
     (nil)
 -> 1979)
;;  succ:       151
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 694

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 694
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 107 106 108 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 108 107 131 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CALCAPE.f":182 86 {*movsi_internal}
     (nil))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 694

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;;              14 [always] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 694
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 696 771
(code_label 131 108 109 13 9 (nil) [1 uses])
(note 109 131 110 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 110 109 111 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALCAPE.f":182 11 {*cmpsi_1}
     (nil))
(insn 111 110 112 13 (set (reg:QI 1 dx [771])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":182 678 {*setcc_qi}
     (nil))
(insn 112 111 113 13 (set (reg:SI 1 dx [orig:696 _717 ] [696])
        (zero_extend:SI (reg:QI 1 dx [771]))) "CALCAPE.f":182 140 {*zero_extendqisi2}
     (nil))
(insn 113 112 114 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:696 _717 ] [696])
            (const_int 0 [0]))) "CALCAPE.f":182 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 114 113 115 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1982)
            (pc))) "CALCAPE.f":182 682 {*jcc}
     (nil)
 -> 1982)
;;  succ:       152
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 694

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 152, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 694
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 112 113 114 115 116 117 118 119 772 773 774 775 776
(note 115 114 116 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 116 115 117 14 (set (reg:SI 1 dx [772])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":183 86 {*movsi_internal}
     (nil))
(insn 117 116 118 14 (set (reg:DI 1 dx [orig:112 _26 ] [112])
        (sign_extend:DI (reg:SI 1 dx [772]))) "CALCAPE.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 118 117 119 14 (parallel [
            (set (reg:DI 2 cx [orig:113 _27 ] [113])
                (mult:DI (reg:DI 1 dx [orig:112 _26 ] [112])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":183 349 {*muldi3_1}
     (nil))
(insn 119 118 120 14 (set (reg:SI 1 dx [773])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":183 86 {*movsi_internal}
     (nil))
(insn 120 119 121 14 (set (reg:DI 1 dx [orig:114 _28 ] [114])
        (sign_extend:DI (reg:SI 1 dx [773]))) "CALCAPE.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 121 120 122 14 (parallel [
            (set (reg:DI 1 dx [orig:115 _29 ] [115])
                (mult:DI (reg:DI 1 dx [orig:114 _28 ] [114])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":183 349 {*muldi3_1}
     (nil))
(insn 122 121 123 14 (parallel [
            (set (reg:DI 2 cx [orig:116 _30 ] [116])
                (plus:DI (reg:DI 2 cx [orig:113 _27 ] [113])
                    (reg:DI 1 dx [orig:115 _29 ] [115])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":183 222 {*adddi_1}
     (nil))
(insn 123 122 124 14 (set (reg:SI 1 dx [774])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":183 86 {*movsi_internal}
     (nil))
(insn 124 123 125 14 (set (reg:DI 1 dx [orig:117 _31 ] [117])
        (sign_extend:DI (reg:SI 1 dx [774]))) "CALCAPE.f":183 149 {*extendsidi2_rex64}
     (nil))
(insn 125 124 126 14 (parallel [
            (set (reg:DI 1 dx [orig:118 _32 ] [118])
                (plus:DI (reg:DI 1 dx [orig:117 _31 ] [117])
                    (reg:DI 2 cx [orig:116 _30 ] [116])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":183 222 {*adddi_1}
     (nil))
(insn 126 125 127 14 (parallel [
            (set (reg:DI 2 cx [orig:119 _33 ] [119])
                (plus:DI (reg:DI 1 dx [orig:118 _32 ] [118])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":183 222 {*adddi_1}
     (nil))
(insn 127 126 128 14 (set (reg/f:DI 1 dx [775])
        (symbol_ref:DI ("tpar.4198") [flags 0x202]  <var_decl 0x7f0daa8ac6c0 tpar>)) "CALCAPE.f":183 85 {*movdi_internal}
     (nil))
(insn 128 127 129 14 (set (reg:SF 21 xmm0 [776])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":183 131 {*movsf_internal}
     (nil))
(insn 129 128 130 14 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:119 _33 ] [119])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [775])) [1 tpar S4 A32])
        (reg:SF 21 xmm0 [776])) "CALCAPE.f":183 131 {*movsf_internal}
     (nil))
(insn 130 129 1907 14 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":182 221 {*addsi_1}
     (nil))
(jump_insn 1907 130 1908 14 (set (pc)
        (label_ref 131)) "CALCAPE.f":182 683 {jump}
     (nil)
 -> 131)
;;  succ:       13 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 694

(barrier 1908 1907 1982)
;; basic block 152, loop depth 0, maybe hot
;;  prev block 14, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 694
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1982 1908 1981 152 109 (nil) [1 uses])
(note 1981 1982 1983 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 1983 1981 134 152 (const_int 0 [0]) "CALCAPE.f":183 718 {nop}
     (nil))
;;  succ:       15 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 694

;; basic block 15, loop depth 0, maybe hot
;;  prev block 152, next block 151, flags: (RTL, MODIFIED)
;;  pred:       152 [always]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 694
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 134 1983 135 15 8 (nil) [0 uses])
(note 135 134 136 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 136 135 1909 15 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":181 221 {*addsi_1}
     (nil))
(jump_insn 1909 136 1910 15 (set (pc)
        (label_ref 137)) "CALCAPE.f":181 683 {jump}
     (nil)
 -> 137)
;;  succ:       11 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 694

(barrier 1910 1909 1979)
;; basic block 151, loop depth 0, maybe hot
;;  prev block 15, next block 16, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1979 1910 1978 151 108 (nil) [1 uses])
(note 1978 1979 1980 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 1980 1978 140 151 (const_int 0 [0]) "CALCAPE.f":182 718 {nop}
     (nil))
;;  succ:       16 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 151, next block 150, flags: (RTL, MODIFIED)
;;  pred:       151 [always]  (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 140 1980 141 16 7 (nil) [0 uses])
(note 141 140 142 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 142 141 1911 16 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":180 221 {*addsi_1}
     (nil))
(jump_insn 1911 142 1912 16 (set (pc)
        (label_ref 143)) "CALCAPE.f":180 683 {jump}
     (nil)
 -> 143)
;;  succ:       9 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1912 1911 1976)
;; basic block 150, loop depth 0, maybe hot
;;  prev block 16, next block 17, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1976 1912 1975 150 107 (nil) [1 uses])
(note 1975 1976 1977 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 1977 1975 146 150 (const_int 0 [0]) "CALCAPE.f":181 718 {nop}
     (nil))
;;  succ:       17 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 150, next block 18, flags: (RTL, MODIFIED)
;;  pred:       150 [always]  (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 120 777
(code_label 146 1977 147 17 6 (nil) [0 uses])
(note 147 146 148 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 148 147 149 17 (set (reg/f:DI 0 ax [777])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 itype+0 S8 A64])) "CALCAPE.f":192 85 {*movdi_internal}
     (nil))
(insn 149 148 150 17 (set (reg:SI 0 ax [orig:120 _34 ] [120])
        (mem:SI (reg/f:DI 0 ax [777]) [2 *itype_722(D)+0 S4 A32])) "CALCAPE.f":192 86 {*movsi_internal}
     (nil))
(insn 150 149 151 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:120 _34 ] [120])
            (const_int 2 [0x2]))) "CALCAPE.f":192 11 {*cmpsi_1}
     (nil))
(jump_insn 151 150 152 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 179)
            (pc))) "CALCAPE.f":192 682 {*jcc}
     (nil)
 -> 179)
;;  succ:       18 (FALLTHRU)
;;              19
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 778 779 780 781
(note 152 151 153 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 153 152 154 18 (set (reg:DI 0 ax [778])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [4 p1d+0 S8 A64])) "CALCAPE.f":193 85 {*movdi_internal}
     (nil))
(insn 154 153 155 18 (set (reg:DI 1 dx)
        (reg:DI 0 ax [778])) "CALCAPE.f":193 85 {*movdi_internal}
     (nil))
(insn 155 154 156 18 (set (reg:DI 4 si)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f0daa894e10 masks>)) "CALCAPE.f":193 85 {*movdi_internal}
     (nil))
(insn 156 155 157 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f0daa4ccab0 *.LC1>)) "CALCAPE.f":193 85 {*movdi_internal}
     (nil))
(insn 157 156 158 18 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALCAPE.f":193 88 {*movqi_internal}
     (nil))
(call_insn 158 157 159 18 (call (mem:QI (symbol_ref:DI ("p2filt_") [flags 0x41]  <function_decl 0x7f0daa881600 p2filt>) [0 p2filt S1 A8])
        (const_int 0 [0])) "CALCAPE.f":193 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 159 158 160 18 (set (reg:DI 0 ax [779])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [4 t1d+0 S8 A64])) "CALCAPE.f":194 85 {*movdi_internal}
     (nil))
(insn 160 159 161 18 (set (reg:DI 1 dx)
        (reg:DI 0 ax [779])) "CALCAPE.f":194 85 {*movdi_internal}
     (nil))
(insn 161 160 162 18 (set (reg:DI 4 si)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f0daa894e10 masks>)) "CALCAPE.f":194 85 {*movdi_internal}
     (nil))
(insn 162 161 163 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f0daa4ccab0 *.LC1>)) "CALCAPE.f":194 85 {*movdi_internal}
     (nil))
(insn 163 162 164 18 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALCAPE.f":194 88 {*movqi_internal}
     (nil))
(call_insn 164 163 165 18 (call (mem:QI (symbol_ref:DI ("p2filt_") [flags 0x41]  <function_decl 0x7f0daa881600 p2filt>) [0 p2filt S1 A8])
        (const_int 0 [0])) "CALCAPE.f":194 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 165 164 166 18 (set (reg:DI 0 ax [780])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [4 q1d+0 S8 A64])) "CALCAPE.f":195 85 {*movdi_internal}
     (nil))
(insn 166 165 167 18 (set (reg:DI 1 dx)
        (reg:DI 0 ax [780])) "CALCAPE.f":195 85 {*movdi_internal}
     (nil))
(insn 167 166 168 18 (set (reg:DI 4 si)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f0daa894e10 masks>)) "CALCAPE.f":195 85 {*movdi_internal}
     (nil))
(insn 168 167 169 18 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f0daa4ccab0 *.LC1>)) "CALCAPE.f":195 85 {*movdi_internal}
     (nil))
(insn 169 168 170 18 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALCAPE.f":195 88 {*movqi_internal}
     (nil))
(call_insn 170 169 171 18 (call (mem:QI (symbol_ref:DI ("p2filt_") [flags 0x41]  <function_decl 0x7f0daa881600 p2filt>) [0 p2filt S1 A8])
        (const_int 0 [0])) "CALCAPE.f":195 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 171 170 172 18 (set (reg:DI 0 ax [781])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [4 q1d+0 S8 A64])) "CALCAPE.f":196 85 {*movdi_internal}
     (nil))
(insn 172 171 173 18 (set (reg:DI 37 r8)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f0daa4ccb40 *.LC2>)) "CALCAPE.f":196 85 {*movdi_internal}
     (nil))
(insn 173 172 174 18 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f0daa4ccbd0 *.LC3>)) "CALCAPE.f":196 85 {*movdi_internal}
     (nil))
(insn 174 173 175 18 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7f0daa4ccc60 *.LC4>)) "CALCAPE.f":196 85 {*movdi_internal}
     (nil))
(insn 175 174 176 18 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC5") [flags 0x2]  <var_decl 0x7f0daa4cccf0 *.LC5>)) "CALCAPE.f":196 85 {*movdi_internal}
     (nil))
(insn 176 175 177 18 (set (reg:DI 5 di)
        (reg:DI 0 ax [781])) "CALCAPE.f":196 85 {*movdi_internal}
     (nil))
(insn 177 176 178 18 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALCAPE.f":196 88 {*movqi_internal}
     (nil))
(call_insn 178 177 179 18 (call (mem:QI (symbol_ref:DI ("boundl_") [flags 0x41]  <function_decl 0x7f0daa881700 boundl>) [0 boundl S1 A8])
        (const_int 0 [0])) "CALCAPE.f":196 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       17
;;              18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 179 178 180 19 12 (nil) [1 uses])
(note 180 179 181 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 181 180 800 19 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 kb+0 S4 A32])
        (const_int 1 [0x1])) "CALCAPE.f":203 86 {*movsi_internal}
     (nil))
;;  succ:       20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;;              49 [always] 
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 697 782
(code_label 800 181 182 20 30 (nil) [1 uses])
(note 182 800 183 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 183 182 184 20 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [2 kb+0 S4 A32])
            (const_int 38 [0x26]))) "CALCAPE.f":203 11 {*cmpsi_1}
     (nil))
(insn 184 183 185 20 (set (reg:QI 0 ax [782])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":203 678 {*setcc_qi}
     (nil))
(insn 185 184 186 20 (set (reg:SI 0 ax [orig:697 _731 ] [697])
        (zero_extend:SI (reg:QI 0 ax [782]))) "CALCAPE.f":203 140 {*zero_extendqisi2}
     (nil))
(insn 186 185 187 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:697 _731 ] [697])
            (const_int 0 [0]))) "CALCAPE.f":203 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 187 186 188 20 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1985)
            (pc))) "CALCAPE.f":203 682 {*jcc}
     (nil)
 -> 1985)
;;  succ:       153
;;              21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 121 783
(note 188 187 189 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 189 188 190 21 (set (reg/f:DI 0 ax [783])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 itype+0 S8 A64])) "CALCAPE.f":204 85 {*movdi_internal}
     (nil))
(insn 190 189 191 21 (set (reg:SI 0 ax [orig:121 _35 ] [121])
        (mem:SI (reg/f:DI 0 ax [783]) [2 *itype_722(D)+0 S4 A32])) "CALCAPE.f":204 86 {*movsi_internal}
     (nil))
(insn 191 190 192 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:121 _35 ] [121])
            (const_int 2 [0x2]))) "CALCAPE.f":204 11 {*cmpsi_1}
     (nil))
(jump_insn 192 191 193 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 196)
            (pc))) "CALCAPE.f":204 682 {*jcc}
     (nil)
 -> 196)
;;  succ:       22 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 193 192 194 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 195 22 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [2 kb+0 S4 A32])
            (const_int 1 [0x1]))) "CALCAPE.f":204 11 {*cmpsi_1}
     (nil))
(jump_insn 195 194 196 22 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1988)
            (pc))) "CALCAPE.f":204 682 {*jcc}
     (nil)
 -> 1988)
;;  succ:       154
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       21
;;              22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 698 699
(code_label 196 195 197 23 14 (nil) [1 uses])
(note 197 196 198 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 23 (set (reg:SI 0 ax [orig:698 _732 ] [698])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 16 [0x10]))) [2 parallel.jsta_m+0 S4 A128])) "CALCAPE.f":205 86 {*movsi_internal}
     (nil))
(insn 199 198 200 23 (set (reg:SI 3 bx [orig:699 _733 ] [699])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 20 [0x14]))) [2 parallel.jend_m+0 S4 A32])) "CALCAPE.f":205 86 {*movsi_internal}
     (nil))
(insn 200 199 794 23 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
        (reg:SI 0 ax [orig:698 _732 ] [698])) "CALCAPE.f":205 86 {*movsi_internal}
     (nil))
;;  succ:       24 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;;              48 [always] 
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  def 	 17 [flags] 700 784
(code_label 794 200 201 24 29 (nil) [1 uses])
(note 201 794 202 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 24 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
            (reg:SI 3 bx [orig:699 _733 ] [699]))) "CALCAPE.f":205 11 {*cmpsi_1}
     (nil))
(insn 203 202 204 24 (set (reg:QI 0 ax [784])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":205 678 {*setcc_qi}
     (nil))
(insn 204 203 205 24 (set (reg:SI 0 ax [orig:700 _735 ] [700])
        (zero_extend:SI (reg:QI 0 ax [784]))) "CALCAPE.f":205 140 {*zero_extendqisi2}
     (nil))
(insn 205 204 206 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:700 _735 ] [700])
            (const_int 0 [0]))) "CALCAPE.f":205 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 206 205 207 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1988)
            (pc))) "CALCAPE.f":205 682 {*jcc}
     (nil)
 -> 1988)
;;  succ:       154
;;              25 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 207 206 208 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 208 207 788 25 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "CALCAPE.f":206 86 {*movsi_internal}
     (nil))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;;              47 [always] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 701 785
(code_label 788 208 209 26 28 (nil) [1 uses])
(note 209 788 210 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 210 209 211 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALCAPE.f":206 11 {*cmpsi_1}
     (nil))
(insn 211 210 212 26 (set (reg:QI 0 ax [785])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":206 678 {*setcc_qi}
     (nil))
(insn 212 211 213 26 (set (reg:SI 0 ax [orig:701 _737 ] [701])
        (zero_extend:SI (reg:QI 0 ax [785]))) "CALCAPE.f":206 140 {*zero_extendqisi2}
     (nil))
(insn 213 212 214 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:701 _737 ] [701])
            (const_int 0 [0]))) "CALCAPE.f":206 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 214 213 215 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1991)
            (pc))) "CALCAPE.f":206 682 {*jcc}
     (nil)
 -> 1991)
;;  succ:       155
;;              27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 786 787 788 789 790 791 792 793 794 795 796 797 798 799 800 801 802 803 804 805 806 807 808 809
(note 215 214 216 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 216 215 217 27 (set (reg:SI 0 ax [786])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":207 86 {*movsi_internal}
     (nil))
(insn 217 216 218 27 (set (reg:DI 0 ax [orig:122 _36 ] [122])
        (sign_extend:DI (reg:SI 0 ax [786]))) "CALCAPE.f":207 149 {*extendsidi2_rex64}
     (nil))
(insn 218 217 219 27 (parallel [
            (set (reg:DI 1 dx [orig:123 _37 ] [123])
                (mult:DI (reg:DI 0 ax [orig:122 _36 ] [122])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":207 349 {*muldi3_1}
     (nil))
(insn 219 218 220 27 (set (reg:SI 0 ax [787])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":207 86 {*movsi_internal}
     (nil))
(insn 220 219 221 27 (set (reg:DI 0 ax [orig:124 _38 ] [124])
        (sign_extend:DI (reg:SI 0 ax [787]))) "CALCAPE.f":207 149 {*extendsidi2_rex64}
     (nil))
(insn 221 220 222 27 (parallel [
            (set (reg:DI 0 ax [orig:125 _39 ] [125])
                (plus:DI (reg:DI 0 ax [orig:124 _38 ] [124])
                    (reg:DI 1 dx [orig:123 _37 ] [123])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":207 222 {*adddi_1}
     (nil))
(insn 222 221 223 27 (parallel [
            (set (reg:DI 1 dx [orig:126 _40 ] [126])
                (plus:DI (reg:DI 0 ax [orig:125 _39 ] [125])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":207 222 {*adddi_1}
     (nil))
(insn 223 222 224 27 (set (reg/f:DI 0 ax [788])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f0daa894990 loops>)) "CALCAPE.f":207 85 {*movdi_internal}
     (nil))
(insn 224 223 225 27 (parallel [
            (set (reg:DI 1 dx [789])
                (plus:DI (reg:DI 1 dx [orig:126 _40 ] [126])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":207 222 {*adddi_1}
     (nil))
(insn 225 224 226 27 (set (reg:SI 0 ax [790])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [789])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [788])) [2 loops.lmh S4 A32])) "CALCAPE.f":207 86 {*movsi_internal}
     (nil))
(insn 226 225 227 27 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 lmhk+0 S4 A32])
        (reg:SI 0 ax [790])) "CALCAPE.f":207 86 {*movsi_internal}
     (nil))
(insn 227 226 228 27 (set (reg:SI 0 ax [791])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 lmhk+0 S4 A32])) "CALCAPE.f":208 86 {*movsi_internal}
     (nil))
(insn 228 227 229 27 (set (reg:DI 0 ax [orig:127 _41 ] [127])
        (sign_extend:DI (reg:SI 0 ax [791]))) "CALCAPE.f":208 149 {*extendsidi2_rex64}
     (nil))
(insn 229 228 230 27 (parallel [
            (set (reg:DI 1 dx [orig:128 _42 ] [128])
                (plus:DI (reg:DI 0 ax [orig:127 _41 ] [127])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":208 222 {*adddi_1}
     (nil))
(insn 230 229 231 27 (set (reg/f:DI 0 ax [792])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":208 85 {*movdi_internal}
     (nil))
(insn 231 230 232 27 (parallel [
            (set (reg:DI 1 dx [793])
                (plus:DI (reg:DI 1 dx [orig:128 _42 ] [128])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":208 222 {*adddi_1}
     (nil))
(insn 232 231 233 27 (set (reg:SF 22 xmm1 [orig:129 _43 ] [129])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [793])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [792])) [1 phys.aeta S4 A32])) "CALCAPE.f":208 131 {*movsf_internal}
     (nil))
(insn 233 232 234 27 (set (reg:SI 0 ax [794])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":208 86 {*movsi_internal}
     (nil))
(insn 234 233 235 27 (set (reg:DI 0 ax [orig:130 _44 ] [130])
        (sign_extend:DI (reg:SI 0 ax [794]))) "CALCAPE.f":208 149 {*extendsidi2_rex64}
     (nil))
(insn 235 234 236 27 (parallel [
            (set (reg:DI 1 dx [orig:131 _45 ] [131])
                (mult:DI (reg:DI 0 ax [orig:130 _44 ] [130])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":208 349 {*muldi3_1}
     (nil))
(insn 236 235 237 27 (set (reg:SI 0 ax [795])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":208 86 {*movsi_internal}
     (nil))
(insn 237 236 238 27 (set (reg:DI 0 ax [orig:132 _46 ] [132])
        (sign_extend:DI (reg:SI 0 ax [795]))) "CALCAPE.f":208 149 {*extendsidi2_rex64}
     (nil))
(insn 238 237 239 27 (parallel [
            (set (reg:DI 0 ax [orig:133 _47 ] [133])
                (plus:DI (reg:DI 0 ax [orig:132 _46 ] [132])
                    (reg:DI 1 dx [orig:131 _45 ] [131])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":208 222 {*adddi_1}
     (nil))
(insn 239 238 240 27 (parallel [
            (set (reg:DI 1 dx [orig:134 _48 ] [134])
                (plus:DI (reg:DI 0 ax [orig:133 _47 ] [133])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":208 222 {*adddi_1}
     (nil))
(insn 240 239 241 27 (set (reg/f:DI 0 ax [796])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0daa88c870 extra>)) "CALCAPE.f":208 85 {*movdi_internal}
     (nil))
(insn 241 240 242 27 (parallel [
            (set (reg:DI 1 dx [797])
                (plus:DI (reg:DI 1 dx [orig:134 _48 ] [134])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":208 222 {*adddi_1}
     (nil))
(insn 242 241 243 27 (set (reg:SF 21 xmm0 [orig:135 _49 ] [135])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [797])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [796])) [1 extra.pdsl S4 A32])) "CALCAPE.f":208 131 {*movsf_internal}
     (nil))
(insn 243 242 244 27 (set (reg:SF 22 xmm1 [orig:136 _50 ] [136])
        (mult:SF (reg:SF 22 xmm1 [orig:129 _43 ] [129])
            (reg:SF 21 xmm0 [orig:135 _49 ] [135]))) "CALCAPE.f":208 838 {*fop_sf_comm}
     (nil))
(insn 244 243 245 27 (set (reg/f:DI 0 ax [798])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(insn 245 244 246 27 (set (reg:SF 21 xmm0 [orig:137 _51 ] [137])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [798])
                (const_int 4 [0x4])) [1 phys.pt+0 S4 A32])) "CALCAPE.f":1 131 {*movsf_internal}
     (nil))
(insn 246 245 247 27 (set (reg:SF 21 xmm0 [799])
        (plus:SF (reg:SF 21 xmm0 [orig:137 _51 ] [137])
            (reg:SF 22 xmm1 [orig:136 _50 ] [136]))) "CALCAPE.f":208 838 {*fop_sf_comm}
     (nil))
(insn 247 246 248 27 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 psfck+0 S4 A32])
        (reg:SF 21 xmm0 [799])) "CALCAPE.f":208 131 {*movsf_internal}
     (nil))
(insn 248 247 249 27 (set (reg:SI 0 ax [800])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 kb+0 S4 A32])) "CALCAPE.f":209 86 {*movsi_internal}
     (nil))
(insn 249 248 250 27 (set (reg:DI 0 ax [orig:138 _52 ] [138])
        (sign_extend:DI (reg:SI 0 ax [800]))) "CALCAPE.f":209 149 {*extendsidi2_rex64}
     (nil))
(insn 250 249 251 27 (parallel [
            (set (reg:DI 1 dx [orig:139 _53 ] [139])
                (plus:DI (reg:DI 0 ax [orig:138 _52 ] [138])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":209 222 {*adddi_1}
     (nil))
(insn 251 250 252 27 (set (reg/f:DI 0 ax [801])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":209 85 {*movdi_internal}
     (nil))
(insn 252 251 253 27 (parallel [
            (set (reg:DI 1 dx [802])
                (plus:DI (reg:DI 1 dx [orig:139 _53 ] [139])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":209 222 {*adddi_1}
     (nil))
(insn 253 252 254 27 (set (reg:SF 22 xmm1 [orig:140 _54 ] [140])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [802])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [801])) [1 phys.aeta S4 A32])) "CALCAPE.f":209 131 {*movsf_internal}
     (nil))
(insn 254 253 255 27 (set (reg:SI 0 ax [803])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":209 86 {*movsi_internal}
     (nil))
(insn 255 254 256 27 (set (reg:DI 0 ax [orig:141 _55 ] [141])
        (sign_extend:DI (reg:SI 0 ax [803]))) "CALCAPE.f":209 149 {*extendsidi2_rex64}
     (nil))
(insn 256 255 257 27 (parallel [
            (set (reg:DI 1 dx [orig:142 _56 ] [142])
                (mult:DI (reg:DI 0 ax [orig:141 _55 ] [141])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":209 349 {*muldi3_1}
     (nil))
(insn 257 256 258 27 (set (reg:SI 0 ax [804])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":209 86 {*movsi_internal}
     (nil))
(insn 258 257 259 27 (set (reg:DI 0 ax [orig:143 _57 ] [143])
        (sign_extend:DI (reg:SI 0 ax [804]))) "CALCAPE.f":209 149 {*extendsidi2_rex64}
     (nil))
(insn 259 258 260 27 (parallel [
            (set (reg:DI 0 ax [orig:144 _58 ] [144])
                (plus:DI (reg:DI 0 ax [orig:143 _57 ] [143])
                    (reg:DI 1 dx [orig:142 _56 ] [142])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":209 222 {*adddi_1}
     (nil))
(insn 260 259 261 27 (parallel [
            (set (reg:DI 1 dx [orig:145 _59 ] [145])
                (plus:DI (reg:DI 0 ax [orig:144 _58 ] [144])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":209 222 {*adddi_1}
     (nil))
(insn 261 260 262 27 (set (reg/f:DI 0 ax [805])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0daa88c870 extra>)) "CALCAPE.f":209 85 {*movdi_internal}
     (nil))
(insn 262 261 263 27 (parallel [
            (set (reg:DI 1 dx [806])
                (plus:DI (reg:DI 1 dx [orig:145 _59 ] [145])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":209 222 {*adddi_1}
     (nil))
(insn 263 262 264 27 (set (reg:SF 21 xmm0 [orig:146 _60 ] [146])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [806])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [805])) [1 extra.pdsl S4 A32])) "CALCAPE.f":209 131 {*movsf_internal}
     (nil))
(insn 264 263 265 27 (set (reg:SF 22 xmm1 [orig:147 _61 ] [147])
        (mult:SF (reg:SF 22 xmm1 [orig:140 _54 ] [140])
            (reg:SF 21 xmm0 [orig:146 _60 ] [146]))) "CALCAPE.f":209 838 {*fop_sf_comm}
     (nil))
(insn 265 264 266 27 (set (reg/f:DI 0 ax [807])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(insn 266 265 267 27 (set (reg:SF 21 xmm0 [orig:148 _62 ] [148])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [807])
                (const_int 4 [0x4])) [1 phys.pt+0 S4 A32])) "CALCAPE.f":1 131 {*movsf_internal}
     (nil))
(insn 267 266 268 27 (set (reg:SF 21 xmm0 [808])
        (plus:SF (reg:SF 21 xmm0 [orig:148 _62 ] [148])
            (reg:SF 22 xmm1 [orig:147 _61 ] [147]))) "CALCAPE.f":209 838 {*fop_sf_comm}
     (nil))
(insn 268 267 269 27 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 pkl+0 S4 A32])
        (reg:SF 21 xmm0 [808])) "CALCAPE.f":209 131 {*movsf_internal}
     (nil))
(insn 269 268 270 27 (set (reg/f:DI 0 ax [809])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 itype+0 S8 A64])) "CALCAPE.f":210 85 {*movdi_internal}
     (nil))
(insn 270 269 271 27 (set (reg:SI 0 ax [orig:149 _63 ] [149])
        (mem:SI (reg/f:DI 0 ax [809]) [2 *itype_722(D)+0 S4 A32])) "CALCAPE.f":210 86 {*movsi_internal}
     (nil))
(insn 271 270 272 27 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:149 _63 ] [149])
            (const_int 1 [0x1]))) "CALCAPE.f":210 11 {*cmpsi_1}
     (nil))
(jump_insn 272 271 273 27 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 283)
            (pc))) "CALCAPE.f":210 682 {*jcc}
     (nil)
 -> 283)
;;  succ:       28 (FALLTHRU)
;;              30
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 150 810 811
(note 273 272 274 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 274 273 275 28 (set (reg:SF 21 xmm0 [810])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 psfck+0 S4 A32])) "CALCAPE.f":210 131 {*movsf_internal}
     (nil))
(insn 275 274 276 28 (set (reg:SF 22 xmm1 [811])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":210 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 7.0e+3 [0x0.dacp+13])
        (nil)))
(insn 276 275 277 28 (set (reg:SF 21 xmm0 [orig:150 _64 ] [150])
        (minus:SF (reg:SF 21 xmm0 [810])
            (reg:SF 22 xmm1 [811]))) "CALCAPE.f":210 841 {*fop_sf_1}
     (nil))
(insn 277 276 278 28 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:150 _64 ] [150])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [1 pkl+0 S4 A32]))) "CALCAPE.f":210 53 {*cmpisf}
     (nil))
(jump_insn 278 277 279 28 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 785)
            (pc))) "CALCAPE.f":210 682 {*jcc}
     (nil)
 -> 785)
;;  succ:       47
;;              29 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 812
(note 279 278 280 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 280 279 281 29 (set (reg:SF 21 xmm0 [812])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 pkl+0 S4 A32])) "CALCAPE.f":210 131 {*movsf_internal}
     (nil))
(insn 281 280 282 29 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [812])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [1 psfck+0 S4 A32]))) "CALCAPE.f":210 53 {*cmpisf}
     (nil))
(jump_insn 282 281 283 29 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 785)
            (pc))) "CALCAPE.f":210 682 {*jcc}
     (nil)
 -> 785)
;;  succ:       47
;;              30 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       27
;;              29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 151 813
(code_label 283 282 284 30 17 (nil) [1 uses])
(note 284 283 285 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 285 284 286 30 (set (reg/f:DI 0 ax [813])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -184 [0xffffffffffffff48])) [3 itype+0 S8 A64])) "CALCAPE.f":212 85 {*movdi_internal}
     (nil))
(insn 286 285 287 30 (set (reg:SI 0 ax [orig:151 _65 ] [151])
        (mem:SI (reg/f:DI 0 ax [813]) [2 *itype_722(D)+0 S4 A32])) "CALCAPE.f":212 86 {*movsi_internal}
     (nil))
(insn 287 286 288 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:151 _65 ] [151])
            (const_int 1 [0x1]))) "CALCAPE.f":212 11 {*cmpsi_1}
     (nil))
(jump_insn 288 287 289 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 351)
            (pc))) "CALCAPE.f":212 682 {*jcc}
     (nil)
 -> 351)
;;  succ:       31 (FALLTHRU)
;;              32
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 702 814 815 816 817 818 819 820 821 822 823 824 825 826 827 828 829 830 831 832 833 834 835
(note 289 288 290 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 290 289 291 31 (set (reg:SI 0 ax [814])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 kb+0 S4 A32])) "CALCAPE.f":213 86 {*movsi_internal}
     (nil))
(insn 291 290 292 31 (set (reg:DI 0 ax [orig:152 _66 ] [152])
        (sign_extend:DI (reg:SI 0 ax [814]))) "CALCAPE.f":213 149 {*extendsidi2_rex64}
     (nil))
(insn 292 291 293 31 (parallel [
            (set (reg:DI 1 dx [orig:153 _67 ] [153])
                (mult:DI (reg:DI 0 ax [orig:152 _66 ] [152])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":213 349 {*muldi3_1}
     (nil))
(insn 293 292 294 31 (set (reg:SI 0 ax [815])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":213 86 {*movsi_internal}
     (nil))
(insn 294 293 295 31 (set (reg:DI 0 ax [orig:154 _68 ] [154])
        (sign_extend:DI (reg:SI 0 ax [815]))) "CALCAPE.f":213 149 {*extendsidi2_rex64}
     (nil))
(insn 295 294 296 31 (parallel [
            (set (reg:DI 0 ax [orig:155 _69 ] [155])
                (mult:DI (reg:DI 0 ax [orig:154 _68 ] [154])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":213 349 {*muldi3_1}
     (nil))
(insn 296 295 297 31 (parallel [
            (set (reg:DI 1 dx [orig:156 _70 ] [156])
                (plus:DI (reg:DI 1 dx [orig:153 _67 ] [153])
                    (reg:DI 0 ax [orig:155 _69 ] [155])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":213 222 {*adddi_1}
     (nil))
(insn 297 296 298 31 (set (reg:SI 0 ax [816])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":213 86 {*movsi_internal}
     (nil))
(insn 298 297 299 31 (set (reg:DI 0 ax [orig:157 _71 ] [157])
        (sign_extend:DI (reg:SI 0 ax [816]))) "CALCAPE.f":213 149 {*extendsidi2_rex64}
     (nil))
(insn 299 298 300 31 (parallel [
            (set (reg:DI 0 ax [orig:158 _72 ] [158])
                (plus:DI (reg:DI 0 ax [orig:157 _71 ] [157])
                    (reg:DI 1 dx [orig:156 _70 ] [156])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":213 222 {*adddi_1}
     (nil))
(insn 300 299 301 31 (parallel [
            (set (reg:DI 1 dx [orig:159 _73 ] [159])
                (plus:DI (reg:DI 0 ax [orig:158 _72 ] [158])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":213 222 {*adddi_1}
     (nil))
(insn 301 300 302 31 (set (reg/f:DI 0 ax [817])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0daa8a8990 vrbls>)) "CALCAPE.f":213 85 {*movdi_internal}
     (nil))
(insn 302 301 303 31 (parallel [
            (set (reg:DI 1 dx [818])
                (plus:DI (reg:DI 1 dx [orig:159 _73 ] [159])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":213 222 {*adddi_1}
     (nil))
(insn 303 302 304 31 (set (reg:SF 21 xmm0 [819])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [818])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [817])) [1 vrbls.t S4 A32])) "CALCAPE.f":213 131 {*movsf_internal}
     (nil))
(insn 304 303 305 31 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 tbtk+0 S4 A32])
        (reg:SF 21 xmm0 [819])) "CALCAPE.f":213 131 {*movsf_internal}
     (nil))
(insn 305 304 306 31 (set (reg:SI 0 ax [820])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 kb+0 S4 A32])) "CALCAPE.f":214 86 {*movsi_internal}
     (nil))
(insn 306 305 307 31 (set (reg:DI 0 ax [orig:160 _74 ] [160])
        (sign_extend:DI (reg:SI 0 ax [820]))) "CALCAPE.f":214 149 {*extendsidi2_rex64}
     (nil))
(insn 307 306 308 31 (parallel [
            (set (reg:DI 1 dx [orig:161 _75 ] [161])
                (mult:DI (reg:DI 0 ax [orig:160 _74 ] [160])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":214 349 {*muldi3_1}
     (nil))
(insn 308 307 309 31 (set (reg:SI 0 ax [821])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":214 86 {*movsi_internal}
     (nil))
(insn 309 308 310 31 (set (reg:DI 0 ax [orig:162 _76 ] [162])
        (sign_extend:DI (reg:SI 0 ax [821]))) "CALCAPE.f":214 149 {*extendsidi2_rex64}
     (nil))
(insn 310 309 311 31 (parallel [
            (set (reg:DI 0 ax [orig:163 _77 ] [163])
                (mult:DI (reg:DI 0 ax [orig:162 _76 ] [162])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":214 349 {*muldi3_1}
     (nil))
(insn 311 310 312 31 (parallel [
            (set (reg:DI 1 dx [orig:164 _78 ] [164])
                (plus:DI (reg:DI 1 dx [orig:161 _75 ] [161])
                    (reg:DI 0 ax [orig:163 _77 ] [163])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":214 222 {*adddi_1}
     (nil))
(insn 312 311 313 31 (set (reg:SI 0 ax [822])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":214 86 {*movsi_internal}
     (nil))
(insn 313 312 314 31 (set (reg:DI 0 ax [orig:165 _79 ] [165])
        (sign_extend:DI (reg:SI 0 ax [822]))) "CALCAPE.f":214 149 {*extendsidi2_rex64}
     (nil))
(insn 314 313 315 31 (parallel [
            (set (reg:DI 0 ax [orig:166 _80 ] [166])
                (plus:DI (reg:DI 0 ax [orig:165 _79 ] [165])
                    (reg:DI 1 dx [orig:164 _78 ] [164])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":214 222 {*adddi_1}
     (nil))
(insn 315 314 316 31 (parallel [
            (set (reg:DI 1 dx [orig:167 _81 ] [167])
                (plus:DI (reg:DI 0 ax [orig:166 _80 ] [166])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":214 222 {*adddi_1}
     (nil))
(insn 316 315 317 31 (set (reg/f:DI 0 ax [823])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0daa8a8990 vrbls>)) "CALCAPE.f":214 85 {*movdi_internal}
     (nil))
(insn 317 316 318 31 (parallel [
            (set (reg:DI 1 dx [824])
                (plus:DI (reg:DI 1 dx [orig:167 _81 ] [167])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":214 222 {*adddi_1}
     (nil))
(insn 318 317 319 31 (set (reg:SF 21 xmm0 [825])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [824])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [823])) [1 vrbls.q S4 A32])) "CALCAPE.f":214 131 {*movsf_internal}
     (nil))
(insn 319 318 320 31 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 qbtk+0 S4 A32])
        (reg:SF 21 xmm0 [825])) "CALCAPE.f":214 131 {*movsf_internal}
     (nil))
(insn 320 319 321 31 (set (reg:SI 0 ax [826])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":215 86 {*movsi_internal}
     (nil))
(insn 321 320 322 31 (set (reg:DI 0 ax [orig:168 _82 ] [168])
        (sign_extend:DI (reg:SI 0 ax [826]))) "CALCAPE.f":215 149 {*extendsidi2_rex64}
     (nil))
(insn 322 321 323 31 (parallel [
            (set (reg:DI 1 dx [orig:169 _83 ] [169])
                (mult:DI (reg:DI 0 ax [orig:168 _82 ] [168])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":215 349 {*muldi3_1}
     (nil))
(insn 323 322 324 31 (set (reg:SI 0 ax [827])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":215 86 {*movsi_internal}
     (nil))
(insn 324 323 325 31 (set (reg:DI 0 ax [orig:170 _84 ] [170])
        (sign_extend:DI (reg:SI 0 ax [827]))) "CALCAPE.f":215 149 {*extendsidi2_rex64}
     (nil))
(insn 325 324 326 31 (parallel [
            (set (reg:DI 0 ax [orig:171 _85 ] [171])
                (plus:DI (reg:DI 0 ax [orig:170 _84 ] [170])
                    (reg:DI 1 dx [orig:169 _83 ] [169])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":215 222 {*adddi_1}
     (nil))
(insn 326 325 327 31 (parallel [
            (set (reg:DI 1 dx [orig:172 _86 ] [172])
                (plus:DI (reg:DI 0 ax [orig:171 _85 ] [171])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":215 222 {*adddi_1}
     (nil))
(insn 327 326 328 31 (set (reg/f:DI 0 ax [828])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0daa88c870 extra>)) "CALCAPE.f":215 85 {*movdi_internal}
     (nil))
(insn 328 327 329 31 (parallel [
            (set (reg:DI 1 dx [829])
                (plus:DI (reg:DI 1 dx [orig:172 _86 ] [172])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":215 222 {*adddi_1}
     (nil))
(insn 329 328 330 31 (set (reg:SF 22 xmm1 [orig:173 _87 ] [173])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [829])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [828])) [1 extra.pdsl S4 A32])) "CALCAPE.f":215 131 {*movsf_internal}
     (nil))
(insn 330 329 331 31 (set (reg:SI 0 ax [830])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 kb+0 S4 A32])) "CALCAPE.f":215 86 {*movsi_internal}
     (nil))
(insn 331 330 332 31 (set (reg:DI 0 ax [orig:174 _88 ] [174])
        (sign_extend:DI (reg:SI 0 ax [830]))) "CALCAPE.f":215 149 {*extendsidi2_rex64}
     (nil))
(insn 332 331 333 31 (parallel [
            (set (reg:DI 1 dx [orig:175 _89 ] [175])
                (plus:DI (reg:DI 0 ax [orig:174 _88 ] [174])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":215 222 {*adddi_1}
     (nil))
(insn 333 332 334 31 (set (reg/f:DI 0 ax [831])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":215 85 {*movdi_internal}
     (nil))
(insn 334 333 335 31 (parallel [
            (set (reg:DI 1 dx [832])
                (plus:DI (reg:DI 1 dx [orig:175 _89 ] [175])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":215 222 {*adddi_1}
     (nil))
(insn 335 334 336 31 (set (reg:SF 21 xmm0 [orig:176 _90 ] [176])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [832])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [831])) [1 phys.aeta S4 A32])) "CALCAPE.f":215 131 {*movsf_internal}
     (nil))
(insn 336 335 337 31 (set (reg:SF 22 xmm1 [orig:177 _91 ] [177])
        (mult:SF (reg:SF 22 xmm1 [orig:173 _87 ] [173])
            (reg:SF 21 xmm0 [orig:176 _90 ] [176]))) "CALCAPE.f":215 838 {*fop_sf_comm}
     (nil))
(insn 337 336 338 31 (set (reg/f:DI 0 ax [833])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(insn 338 337 339 31 (set (reg:SF 21 xmm0 [orig:178 _92 ] [178])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [833])
                (const_int 4 [0x4])) [1 phys.pt+0 S4 A32])) "CALCAPE.f":1 131 {*movsf_internal}
     (nil))
(insn 339 338 340 31 (set (reg:SF 21 xmm0 [orig:179 _93 ] [179])
        (plus:SF (reg:SF 21 xmm0 [orig:178 _92 ] [178])
            (reg:SF 22 xmm1 [orig:177 _91 ] [177]))) "CALCAPE.f":215 838 {*fop_sf_comm}
     (nil))
(insn 340 339 341 31 (set (reg:SF 22 xmm1 [orig:180 _94 ] [180])
        (reg:SF 21 xmm0 [orig:179 _93 ] [179])) "CALCAPE.f":215 131 {*movsf_internal}
     (nil))
(insn 341 340 342 31 (set (reg:SF 21 xmm0 [834])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":215 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+5 [0x0.c35p+17])
        (nil)))
(insn 342 341 344 31 (set (reg:SF 21 xmm0 [orig:181 _95 ] [181])
        (div:SF (reg:SF 21 xmm0 [834])
            (reg:SF 22 xmm1 [orig:180 _94 ] [180]))) "CALCAPE.f":215 841 {*fop_sf_1}
     (nil))
(insn 344 342 346 31 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":215 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.8589642047882080078125e-1 [0x0.926104p-1])
        (nil)))
(call_insn/u 346 344 347 31 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0daa706100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALCAPE.f":215 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 347 346 348 31 (set (reg:SF 0 ax [835])
        (reg:SF 21 xmm0)) "CALCAPE.f":215 131 {*movsf_internal}
     (nil))
(insn 348 347 1913 31 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 apebtk+0 S4 A32])
        (reg:SF 0 ax [835])) "CALCAPE.f":215 131 {*movsf_internal}
     (nil))
(jump_insn 1913 348 1914 31 (set (pc)
        (label_ref 391)) 683 {jump}
     (nil)
 -> 391)
;;  succ:       33 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

(barrier 1914 1913 351)
;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       30
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 703 836 837 838 839 840 841 842 843 844 845 846 847 848 849
(code_label 351 1914 352 32 19 (nil) [1 uses])
(note 352 351 353 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 353 352 354 32 (set (reg:SI 0 ax [836])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":217 86 {*movsi_internal}
     (nil))
(insn 354 353 355 32 (set (reg:DI 0 ax [orig:182 _96 ] [182])
        (sign_extend:DI (reg:SI 0 ax [836]))) "CALCAPE.f":217 149 {*extendsidi2_rex64}
     (nil))
(insn 355 354 356 32 (parallel [
            (set (reg:DI 1 dx [orig:183 _97 ] [183])
                (mult:DI (reg:DI 0 ax [orig:182 _96 ] [182])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":217 349 {*muldi3_1}
     (nil))
(insn 356 355 357 32 (set (reg:SI 0 ax [837])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":217 86 {*movsi_internal}
     (nil))
(insn 357 356 358 32 (set (reg:DI 0 ax [orig:184 _98 ] [184])
        (sign_extend:DI (reg:SI 0 ax [837]))) "CALCAPE.f":217 149 {*extendsidi2_rex64}
     (nil))
(insn 358 357 359 32 (parallel [
            (set (reg:DI 0 ax [orig:185 _99 ] [185])
                (plus:DI (reg:DI 0 ax [orig:184 _98 ] [184])
                    (reg:DI 1 dx [orig:183 _97 ] [183])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":217 222 {*adddi_1}
     (nil))
(insn 359 358 360 32 (parallel [
            (set (reg:DI 1 dx [orig:186 _100 ] [186])
                (plus:DI (reg:DI 0 ax [orig:185 _99 ] [185])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":217 222 {*adddi_1}
     (nil))
(insn 360 359 361 32 (set (reg/f:DI 0 ax [838])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -192 [0xffffffffffffff40])) [4 p1d+0 S8 A64])) "CALCAPE.f":217 85 {*movdi_internal}
     (nil))
(insn 361 360 362 32 (set (reg:SF 21 xmm0 [839])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:186 _100 ] [186])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [838])) [1 *p1d_723(D) S4 A32])) "CALCAPE.f":217 131 {*movsf_internal}
     (nil))
(insn 362 361 363 32 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 pkl+0 S4 A32])
        (reg:SF 21 xmm0 [839])) "CALCAPE.f":217 131 {*movsf_internal}
     (nil))
(insn 363 362 364 32 (set (reg:SI 0 ax [840])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":218 86 {*movsi_internal}
     (nil))
(insn 364 363 365 32 (set (reg:DI 0 ax [orig:187 _101 ] [187])
        (sign_extend:DI (reg:SI 0 ax [840]))) "CALCAPE.f":218 149 {*extendsidi2_rex64}
     (nil))
(insn 365 364 366 32 (parallel [
            (set (reg:DI 1 dx [orig:188 _102 ] [188])
                (mult:DI (reg:DI 0 ax [orig:187 _101 ] [187])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":218 349 {*muldi3_1}
     (nil))
(insn 366 365 367 32 (set (reg:SI 0 ax [841])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":218 86 {*movsi_internal}
     (nil))
(insn 367 366 368 32 (set (reg:DI 0 ax [orig:189 _103 ] [189])
        (sign_extend:DI (reg:SI 0 ax [841]))) "CALCAPE.f":218 149 {*extendsidi2_rex64}
     (nil))
(insn 368 367 369 32 (parallel [
            (set (reg:DI 0 ax [orig:190 _104 ] [190])
                (plus:DI (reg:DI 0 ax [orig:189 _103 ] [189])
                    (reg:DI 1 dx [orig:188 _102 ] [188])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":218 222 {*adddi_1}
     (nil))
(insn 369 368 370 32 (parallel [
            (set (reg:DI 1 dx [orig:191 _105 ] [191])
                (plus:DI (reg:DI 0 ax [orig:190 _104 ] [190])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":218 222 {*adddi_1}
     (nil))
(insn 370 369 371 32 (set (reg/f:DI 0 ax [842])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -200 [0xffffffffffffff38])) [4 t1d+0 S8 A64])) "CALCAPE.f":218 85 {*movdi_internal}
     (nil))
(insn 371 370 372 32 (set (reg:SF 21 xmm0 [843])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:191 _105 ] [191])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [842])) [1 *t1d_725(D) S4 A32])) "CALCAPE.f":218 131 {*movsf_internal}
     (nil))
(insn 372 371 373 32 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 tbtk+0 S4 A32])
        (reg:SF 21 xmm0 [843])) "CALCAPE.f":218 131 {*movsf_internal}
     (nil))
(insn 373 372 374 32 (set (reg:SI 0 ax [844])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":219 86 {*movsi_internal}
     (nil))
(insn 374 373 375 32 (set (reg:DI 0 ax [orig:192 _106 ] [192])
        (sign_extend:DI (reg:SI 0 ax [844]))) "CALCAPE.f":219 149 {*extendsidi2_rex64}
     (nil))
(insn 375 374 376 32 (parallel [
            (set (reg:DI 1 dx [orig:193 _107 ] [193])
                (mult:DI (reg:DI 0 ax [orig:192 _106 ] [192])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":219 349 {*muldi3_1}
     (nil))
(insn 376 375 377 32 (set (reg:SI 0 ax [845])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":219 86 {*movsi_internal}
     (nil))
(insn 377 376 378 32 (set (reg:DI 0 ax [orig:194 _108 ] [194])
        (sign_extend:DI (reg:SI 0 ax [845]))) "CALCAPE.f":219 149 {*extendsidi2_rex64}
     (nil))
(insn 378 377 379 32 (parallel [
            (set (reg:DI 0 ax [orig:195 _109 ] [195])
                (plus:DI (reg:DI 0 ax [orig:194 _108 ] [194])
                    (reg:DI 1 dx [orig:193 _107 ] [193])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":219 222 {*adddi_1}
     (nil))
(insn 379 378 380 32 (parallel [
            (set (reg:DI 1 dx [orig:196 _110 ] [196])
                (plus:DI (reg:DI 0 ax [orig:195 _109 ] [195])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":219 222 {*adddi_1}
     (nil))
(insn 380 379 381 32 (set (reg/f:DI 0 ax [846])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -208 [0xffffffffffffff30])) [4 q1d+0 S8 A64])) "CALCAPE.f":219 85 {*movdi_internal}
     (nil))
(insn 381 380 382 32 (set (reg:SF 21 xmm0 [847])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:196 _110 ] [196])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [846])) [1 *q1d_727(D) S4 A32])) "CALCAPE.f":219 131 {*movsf_internal}
     (nil))
(insn 382 381 383 32 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 qbtk+0 S4 A32])
        (reg:SF 21 xmm0 [847])) "CALCAPE.f":219 131 {*movsf_internal}
     (nil))
(insn 383 382 384 32 (set (reg:SF 21 xmm0 [848])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":220 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+5 [0x0.c35p+17])
        (nil)))
(insn 384 383 386 32 (set (reg:SF 21 xmm0 [orig:197 _111 ] [197])
        (div:SF (reg:SF 21 xmm0 [848])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [1 pkl+0 S4 A32]))) "CALCAPE.f":220 841 {*fop_sf_1}
     (nil))
(insn 386 384 388 32 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":220 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.8589642047882080078125e-1 [0x0.926104p-1])
        (nil)))
(call_insn/u 388 386 389 32 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0daa706100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALCAPE.f":220 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 389 388 390 32 (set (reg:SF 0 ax [849])
        (reg:SF 21 xmm0)) "CALCAPE.f":220 131 {*movsf_internal}
     (nil))
(insn 390 389 391 32 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 apebtk+0 S4 A32])
        (reg:SF 0 ax [849])) "CALCAPE.f":220 131 {*movsf_internal}
     (nil))
;;  succ:       33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;;              31 [always] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 198 199 200 201 850 851 852 853 854 855 856 857 858 859 860 861
(code_label 391 390 392 33 20 (nil) [1 uses])
(note 392 391 393 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 393 392 394 33 (set (reg:SF 21 xmm0 [851])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [1 tbtk+0 S4 A32])) "CALCAPE.f":223 131 {*movsf_internal}
     (nil))
(insn 394 393 395 33 (set (reg:SF 21 xmm0 [850])
        (mult:SF (reg:SF 21 xmm0 [851])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 apebtk+0 S4 A32]))) "CALCAPE.f":223 838 {*fop_sf_comm}
     (nil))
(insn 395 394 396 33 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 tthbtk+0 S4 A32])
        (reg:SF 21 xmm0 [850])) "CALCAPE.f":223 131 {*movsf_internal}
     (nil))
(insn 396 395 397 33 (set (reg/f:DI 0 ax [852])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(insn 397 396 398 33 (set (reg:SF 22 xmm1 [orig:198 _112 ] [198])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [852])
                (const_int 52 [0x34])) [1 phys.thl+0 S4 A32])) "CALCAPE.f":1 131 {*movsf_internal}
     (nil))
(insn 398 397 399 33 (set (reg:SF 21 xmm0 [853])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 tthbtk+0 S4 A32])) "CALCAPE.f":224 131 {*movsf_internal}
     (nil))
(insn 399 398 400 33 (set (reg:SF 21 xmm0 [orig:199 _113 ] [199])
        (minus:SF (reg:SF 21 xmm0 [853])
            (reg:SF 22 xmm1 [orig:198 _112 ] [198]))) "CALCAPE.f":224 841 {*fop_sf_1}
     (nil))
(insn 400 399 401 33 (set (reg:SF 22 xmm1 [orig:200 _114 ] [200])
        (reg:SF 21 xmm0 [orig:199 _113 ] [199])) "CALCAPE.f":224 131 {*movsf_internal}
     (nil))
(insn 401 400 402 33 (set (reg/f:DI 0 ax [854])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(insn 402 401 403 33 (set (reg:SF 21 xmm0 [orig:201 _115 ] [201])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [854])
                (const_int 60 [0x3c])) [1 phys.rdth+0 S4 A32])) "CALCAPE.f":1 131 {*movsf_internal}
     (nil))
(insn 403 402 404 33 (set (reg:SF 21 xmm0 [855])
        (mult:SF (reg:SF 21 xmm0 [orig:201 _115 ] [201])
            (reg:SF 22 xmm1 [orig:200 _114 ] [200]))) "CALCAPE.f":224 838 {*fop_sf_comm}
     (nil))
(insn 404 403 405 33 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 tthk+0 S4 A32])
        (reg:SF 21 xmm0 [855])) "CALCAPE.f":224 131 {*movsf_internal}
     (nil))
(insn 405 404 406 33 (set (reg:SF 22 xmm1 [856])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 tthk+0 S4 A32])) "CALCAPE.f":225 131 {*movsf_internal}
     (nil))
(insn 406 405 407 33 (set (reg:SF 24 xmm3 [857])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":225 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 8.388608e+6 [0x0.8p+24])
        (nil)))
(insn 407 406 408 33 (set (reg:SF 21 xmm0 [858])
        (reg:SF 22 xmm1 [856])) "CALCAPE.f":225 131 {*movsf_internal}
     (nil))
(insn 408 407 409 33 (set (reg:V4SF 23 xmm2 [860])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S16 A128])) "CALCAPE.f":225 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 409 408 2057 33 (set (reg:SF 23 xmm2 [861])
        (vec_select:SF (reg:V4SF 23 xmm2 [860])
            (parallel [
                    (const_int 0 [0])
                ]))) "CALCAPE.f":225 2527 {*vec_extractv4sf_0}
     (nil))
(insn 2057 409 410 33 (set (reg:SF 25 xmm4 [859])
        (reg:SF 21 xmm0 [858])) "CALCAPE.f":225 131 {*movsf_internal}
     (nil))
(insn 410 2057 411 33 (set (reg:SF 25 xmm4 [859])
        (and:SF (reg:SF 25 xmm4 [859])
            (reg:SF 23 xmm2 [861]))) "CALCAPE.f":225 1849 {*andsf3}
     (nil))
(insn 411 410 412 33 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 24 xmm3 [857])
                    (reg:SF 25 xmm4 [859]))
            ] UNSPEC_NOTRAP)) "CALCAPE.f":225 54 {*cmpiusf}
     (nil))
(jump_insn 412 411 1877 33 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 417)
            (pc))) "CALCAPE.f":225 682 {*jcc}
     (nil)
 -> 417)
;;  succ:       35
;;              34 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699 856 858 861

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699 856 858 861
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 856 858 861
;; lr  def 	 858 862 863
(note 1877 412 413 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 413 1877 414 34 (set (reg:SI 0 ax [862])
        (fix:SI (reg:SF 21 xmm0 [858]))) "CALCAPE.f":225 174 {fix_truncsfsi_sse}
     (nil))
(insn 414 413 415 34 (set (reg:SF 21 xmm0 [858])
        (float:SF (reg:SI 0 ax [862]))) "CALCAPE.f":225 203 {*floatsisf2_mixed}
     (nil))
(insn 415 414 2060 34 (set (reg:SF 23 xmm2 [861])
        (and:SF (not:SF (reg:SF 23 xmm2 [861]))
            (reg:SF 22 xmm1 [856]))) "CALCAPE.f":225 1846 {*andnotsf3}
     (nil))
(insn 2060 415 416 34 (set (reg:SF 22 xmm1 [863])
        (reg:SF 23 xmm2 [861])) "CALCAPE.f":225 131 {*movsf_internal}
     (nil))
(insn 416 2060 417 34 (set (reg:SF 21 xmm0 [858])
        (ior:SF (reg:SF 21 xmm0 [858])
            (reg:SF 22 xmm1 [863]))) "CALCAPE.f":225 1850 {*iorsf3}
     (nil))
;;  succ:       35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699 858

;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL, MODIFIED)
;;  pred:       33
;;              34 (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699 858
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 858
;; lr  def 	 17 [flags] 202 203 204 205 206 207 208 209 864 865 866 867 868 869
(code_label 417 416 1878 35 21 (nil) [1 uses])
(note 1878 417 418 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 418 1878 419 35 (set (reg:SF 22 xmm1 [orig:202 _116 ] [202])
        (reg:SF 21 xmm0 [858])) "CALCAPE.f":225 131 {*movsf_internal}
     (nil))
(insn 419 418 420 35 (set (reg:SI 0 ax [864])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":225 86 {*movsi_internal}
     (nil))
(insn 420 419 421 35 (set (reg:DI 0 ax [orig:203 _117 ] [203])
        (sign_extend:DI (reg:SI 0 ax [864]))) "CALCAPE.f":225 149 {*extendsidi2_rex64}
     (nil))
(insn 421 420 422 35 (parallel [
            (set (reg:DI 1 dx [orig:204 _118 ] [204])
                (mult:DI (reg:DI 0 ax [orig:203 _117 ] [203])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":225 349 {*muldi3_1}
     (nil))
(insn 422 421 423 35 (set (reg:SI 0 ax [865])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":225 86 {*movsi_internal}
     (nil))
(insn 423 422 424 35 (set (reg:DI 0 ax [orig:205 _119 ] [205])
        (sign_extend:DI (reg:SI 0 ax [865]))) "CALCAPE.f":225 149 {*extendsidi2_rex64}
     (nil))
(insn 424 423 425 35 (parallel [
            (set (reg:DI 0 ax [orig:206 _120 ] [206])
                (plus:DI (reg:DI 0 ax [orig:205 _119 ] [205])
                    (reg:DI 1 dx [orig:204 _118 ] [204])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":225 222 {*adddi_1}
     (nil))
(insn 425 424 426 35 (parallel [
            (set (reg:DI 1 dx [orig:207 _121 ] [207])
                (plus:DI (reg:DI 0 ax [orig:206 _120 ] [206])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":225 222 {*adddi_1}
     (nil))
(insn 426 425 427 35 (set (reg:SF 21 xmm0 [866])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 tthk+0 S4 A32])) "CALCAPE.f":225 131 {*movsf_internal}
     (nil))
(insn 427 426 428 35 (set (reg:SF 21 xmm0 [orig:208 _122 ] [208])
        (minus:SF (reg:SF 21 xmm0 [866])
            (reg:SF 22 xmm1 [orig:202 _116 ] [202]))) "CALCAPE.f":225 841 {*fop_sf_1}
     (nil))
(insn 428 427 429 35 (set (reg/f:DI 0 ax [867])
        (symbol_ref:DI ("qq.4188") [flags 0x202]  <var_decl 0x7f0daa8ac240 qq>)) "CALCAPE.f":225 85 {*movdi_internal}
     (nil))
(insn 429 428 430 35 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:207 _121 ] [207])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [867])) [1 qq S4 A32])
        (reg:SF 21 xmm0 [orig:208 _122 ] [208])) "CALCAPE.f":225 131 {*movsf_internal}
     (nil))
(insn 430 429 431 35 (set (reg:SF 21 xmm0 [868])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 tthk+0 S4 A32])) "CALCAPE.f":226 131 {*movsf_internal}
     (nil))
(insn 431 430 432 35 (set (reg:SI 0 ax [orig:209 _123 ] [209])
        (fix:SI (reg:SF 21 xmm0 [868]))) "CALCAPE.f":226 174 {fix_truncsfsi_sse}
     (nil))
(insn 432 431 433 35 (parallel [
            (set (reg:SI 0 ax [869])
                (plus:SI (reg:SI 0 ax [orig:209 _123 ] [209])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":226 221 {*addsi_1}
     (nil))
(insn 433 432 434 35 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 ittbk+0 S4 A32])
        (reg:SI 0 ax [869])) "CALCAPE.f":226 86 {*movsi_internal}
     (nil))
(insn 434 433 435 35 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 ittbk+0 S4 A32])
            (const_int 0 [0]))) "CALCAPE.f":228 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 435 434 436 35 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 448)
            (pc))) "CALCAPE.f":228 682 {*jcc}
     (nil)
 -> 448)
;;  succ:       36 (FALLTHRU)
;;              37
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 37, flags: (RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 210 211 212 213 214 870 871 872 873
(note 436 435 437 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 437 436 438 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 ittbk+0 S4 A32])
        (const_int 1 [0x1])) "CALCAPE.f":229 86 {*movsi_internal}
     (nil))
(insn 438 437 439 36 (set (reg:SI 0 ax [870])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":230 86 {*movsi_internal}
     (nil))
(insn 439 438 440 36 (set (reg:DI 0 ax [orig:210 _124 ] [210])
        (sign_extend:DI (reg:SI 0 ax [870]))) "CALCAPE.f":230 149 {*extendsidi2_rex64}
     (nil))
(insn 440 439 441 36 (parallel [
            (set (reg:DI 1 dx [orig:211 _125 ] [211])
                (mult:DI (reg:DI 0 ax [orig:210 _124 ] [210])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":230 349 {*muldi3_1}
     (nil))
(insn 441 440 442 36 (set (reg:SI 0 ax [871])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":230 86 {*movsi_internal}
     (nil))
(insn 442 441 443 36 (set (reg:DI 0 ax [orig:212 _126 ] [212])
        (sign_extend:DI (reg:SI 0 ax [871]))) "CALCAPE.f":230 149 {*extendsidi2_rex64}
     (nil))
(insn 443 442 444 36 (parallel [
            (set (reg:DI 0 ax [orig:213 _127 ] [213])
                (plus:DI (reg:DI 0 ax [orig:212 _126 ] [212])
                    (reg:DI 1 dx [orig:211 _125 ] [211])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":230 222 {*adddi_1}
     (nil))
(insn 444 443 445 36 (parallel [
            (set (reg:DI 1 dx [orig:214 _128 ] [214])
                (plus:DI (reg:DI 0 ax [orig:213 _127 ] [213])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":230 222 {*adddi_1}
     (nil))
(insn 445 444 446 36 (set (reg/f:DI 0 ax [872])
        (symbol_ref:DI ("qq.4188") [flags 0x202]  <var_decl 0x7f0daa8ac240 qq>)) "CALCAPE.f":230 85 {*movdi_internal}
     (nil))
(insn 446 445 447 36 (set (reg:SF 21 xmm0 [873])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":230 131 {*movsf_internal}
     (nil))
(insn 447 446 448 36 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:214 _128 ] [214])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [872])) [1 qq S4 A32])
        (reg:SF 21 xmm0 [873])) "CALCAPE.f":230 131 {*movsf_internal}
     (nil))
;;  succ:       37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL, MODIFIED)
;;  pred:       35
;;              36 (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 448 447 449 37 22 (nil) [1 uses])
(note 449 448 450 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 450 449 451 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 ittbk+0 S4 A32])
            (const_int 133 [0x85]))) "CALCAPE.f":232 11 {*cmpsi_1}
     (nil))
(jump_insn 451 450 452 37 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 464)
            (pc))) "CALCAPE.f":232 682 {*jcc}
     (nil)
 -> 464)
;;  succ:       38 (FALLTHRU)
;;              39
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 215 216 217 218 219 874 875 876 877
(note 452 451 453 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 453 452 454 38 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 ittbk+0 S4 A32])
        (const_int 133 [0x85])) "CALCAPE.f":233 86 {*movsi_internal}
     (nil))
(insn 454 453 455 38 (set (reg:SI 0 ax [874])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":234 86 {*movsi_internal}
     (nil))
(insn 455 454 456 38 (set (reg:DI 0 ax [orig:215 _129 ] [215])
        (sign_extend:DI (reg:SI 0 ax [874]))) "CALCAPE.f":234 149 {*extendsidi2_rex64}
     (nil))
(insn 456 455 457 38 (parallel [
            (set (reg:DI 1 dx [orig:216 _130 ] [216])
                (mult:DI (reg:DI 0 ax [orig:215 _129 ] [215])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":234 349 {*muldi3_1}
     (nil))
(insn 457 456 458 38 (set (reg:SI 0 ax [875])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":234 86 {*movsi_internal}
     (nil))
(insn 458 457 459 38 (set (reg:DI 0 ax [orig:217 _131 ] [217])
        (sign_extend:DI (reg:SI 0 ax [875]))) "CALCAPE.f":234 149 {*extendsidi2_rex64}
     (nil))
(insn 459 458 460 38 (parallel [
            (set (reg:DI 0 ax [orig:218 _132 ] [218])
                (plus:DI (reg:DI 0 ax [orig:217 _131 ] [217])
                    (reg:DI 1 dx [orig:216 _130 ] [216])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":234 222 {*adddi_1}
     (nil))
(insn 460 459 461 38 (parallel [
            (set (reg:DI 1 dx [orig:219 _133 ] [219])
                (plus:DI (reg:DI 0 ax [orig:218 _132 ] [218])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":234 222 {*adddi_1}
     (nil))
(insn 461 460 462 38 (set (reg/f:DI 0 ax [876])
        (symbol_ref:DI ("qq.4188") [flags 0x202]  <var_decl 0x7f0daa8ac240 qq>)) "CALCAPE.f":234 85 {*movdi_internal}
     (nil))
(insn 462 461 463 38 (set (reg:SF 21 xmm0 [877])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":234 131 {*movsf_internal}
     (nil))
(insn 463 462 464 38 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:219 _133 ] [219])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [876])) [1 qq S4 A32])
        (reg:SF 21 xmm0 [877])) "CALCAPE.f":234 131 {*movsf_internal}
     (nil))
;;  succ:       39 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       37
;;              38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 878 879 880 881 882 883 884 885 886 887 888 889 890 891 892 893 894 895 896 897 898 899 900 901 902 903 904 905 906 907 908 909 910 911 912 913 914
(code_label 464 463 465 39 23 (nil) [1 uses])
(note 465 464 466 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 466 465 467 39 (set (reg:SI 0 ax [878])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 ittbk+0 S4 A32])) "CALCAPE.f":237 86 {*movsi_internal}
     (nil))
(insn 467 466 468 39 (set (reg:DI 0 ax [orig:220 _134 ] [220])
        (sign_extend:DI (reg:SI 0 ax [878]))) "CALCAPE.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 468 467 469 39 (parallel [
            (set (reg:DI 1 dx [orig:221 _135 ] [221])
                (plus:DI (reg:DI 0 ax [orig:220 _134 ] [220])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":237 222 {*adddi_1}
     (nil))
(insn 469 468 470 39 (set (reg/f:DI 0 ax [879])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":237 85 {*movdi_internal}
     (nil))
(insn 470 469 471 39 (parallel [
            (set (reg:DI 1 dx [880])
                (plus:DI (reg:DI 1 dx [orig:221 _135 ] [221])
                    (const_int 136 [0x88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":237 222 {*adddi_1}
     (nil))
(insn 471 470 472 39 (set (reg:SF 21 xmm0 [881])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [880])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [879])) [1 phys.qs0 S4 A32])) "CALCAPE.f":237 131 {*movsf_internal}
     (nil))
(insn 472 471 473 39 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 bqs00k+0 S4 A32])
        (reg:SF 21 xmm0 [881])) "CALCAPE.f":237 131 {*movsf_internal}
     (nil))
(insn 473 472 474 39 (set (reg:SI 0 ax [882])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 ittbk+0 S4 A32])) "CALCAPE.f":238 86 {*movsi_internal}
     (nil))
(insn 474 473 475 39 (set (reg:DI 0 ax [orig:222 _136 ] [222])
        (sign_extend:DI (reg:SI 0 ax [882]))) "CALCAPE.f":238 149 {*extendsidi2_rex64}
     (nil))
(insn 475 474 476 39 (parallel [
            (set (reg:DI 1 dx [orig:223 _137 ] [223])
                (plus:DI (reg:DI 0 ax [orig:222 _136 ] [222])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":238 222 {*adddi_1}
     (nil))
(insn 476 475 477 39 (set (reg/f:DI 0 ax [883])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":238 85 {*movdi_internal}
     (nil))
(insn 477 476 478 39 (parallel [
            (set (reg:DI 1 dx [884])
                (plus:DI (reg:DI 1 dx [orig:223 _137 ] [223])
                    (const_int 270 [0x10e])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":238 222 {*adddi_1}
     (nil))
(insn 478 477 479 39 (set (reg:SF 21 xmm0 [885])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [884])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [883])) [1 phys.sqs S4 A32])) "CALCAPE.f":238 131 {*movsf_internal}
     (nil))
(insn 479 478 480 39 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 sqs00k+0 S4 A32])
        (reg:SF 21 xmm0 [885])) "CALCAPE.f":238 131 {*movsf_internal}
     (nil))
(insn 480 479 481 39 (set (reg:SI 0 ax [886])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 ittbk+0 S4 A32])) "CALCAPE.f":239 86 {*movsi_internal}
     (nil))
(insn 481 480 482 39 (parallel [
            (set (reg:SI 0 ax [orig:224 _138 ] [224])
                (plus:SI (reg:SI 0 ax [886])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":239 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 ittbk+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 482 481 483 39 (set (reg:DI 0 ax [orig:225 _139 ] [225])
        (sign_extend:DI (reg:SI 0 ax [orig:224 _138 ] [224]))) "CALCAPE.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 483 482 484 39 (parallel [
            (set (reg:DI 1 dx [orig:226 _140 ] [226])
                (plus:DI (reg:DI 0 ax [orig:225 _139 ] [225])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":239 222 {*adddi_1}
     (nil))
(insn 484 483 485 39 (set (reg/f:DI 0 ax [887])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":239 85 {*movdi_internal}
     (nil))
(insn 485 484 486 39 (parallel [
            (set (reg:DI 1 dx [888])
                (plus:DI (reg:DI 1 dx [orig:226 _140 ] [226])
                    (const_int 136 [0x88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":239 222 {*adddi_1}
     (nil))
(insn 486 485 487 39 (set (reg:SF 21 xmm0 [889])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [888])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [887])) [1 phys.qs0 S4 A32])) "CALCAPE.f":239 131 {*movsf_internal}
     (nil))
(insn 487 486 488 39 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [1 bqs10k+0 S4 A32])
        (reg:SF 21 xmm0 [889])) "CALCAPE.f":239 131 {*movsf_internal}
     (nil))
(insn 488 487 489 39 (set (reg:SI 0 ax [890])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 ittbk+0 S4 A32])) "CALCAPE.f":240 86 {*movsi_internal}
     (nil))
(insn 489 488 490 39 (parallel [
            (set (reg:SI 0 ax [orig:227 _141 ] [227])
                (plus:SI (reg:SI 0 ax [890])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":240 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [2 ittbk+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 490 489 491 39 (set (reg:DI 0 ax [orig:228 _142 ] [228])
        (sign_extend:DI (reg:SI 0 ax [orig:227 _141 ] [227]))) "CALCAPE.f":240 149 {*extendsidi2_rex64}
     (nil))
(insn 491 490 492 39 (parallel [
            (set (reg:DI 1 dx [orig:229 _143 ] [229])
                (plus:DI (reg:DI 0 ax [orig:228 _142 ] [228])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":240 222 {*adddi_1}
     (nil))
(insn 492 491 493 39 (set (reg/f:DI 0 ax [891])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":240 85 {*movdi_internal}
     (nil))
(insn 493 492 494 39 (parallel [
            (set (reg:DI 1 dx [892])
                (plus:DI (reg:DI 1 dx [orig:229 _143 ] [229])
                    (const_int 270 [0x10e])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":240 222 {*adddi_1}
     (nil))
(insn 494 493 495 39 (set (reg:SF 21 xmm0 [893])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [892])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [891])) [1 phys.sqs S4 A32])) "CALCAPE.f":240 131 {*movsf_internal}
     (nil))
(insn 495 494 496 39 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [1 sqs10k+0 S4 A32])
        (reg:SF 21 xmm0 [893])) "CALCAPE.f":240 131 {*movsf_internal}
     (nil))
(insn 496 495 497 39 (set (reg:SF 21 xmm0 [894])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [1 bqs10k+0 S4 A32])) "CALCAPE.f":242 131 {*movsf_internal}
     (nil))
(insn 497 496 498 39 (set (reg:SF 21 xmm0 [orig:230 _144 ] [230])
        (minus:SF (reg:SF 21 xmm0 [894])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -92 [0xffffffffffffffa4])) [1 bqs00k+0 S4 A32]))) "CALCAPE.f":242 841 {*fop_sf_1}
     (nil))
(insn 498 497 499 39 (set (reg:SF 22 xmm1 [orig:231 _145 ] [231])
        (reg:SF 21 xmm0 [orig:230 _144 ] [230])) "CALCAPE.f":242 131 {*movsf_internal}
     (nil))
(insn 499 498 500 39 (set (reg:SI 0 ax [895])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":242 86 {*movsi_internal}
     (nil))
(insn 500 499 501 39 (set (reg:DI 0 ax [orig:232 _146 ] [232])
        (sign_extend:DI (reg:SI 0 ax [895]))) "CALCAPE.f":242 149 {*extendsidi2_rex64}
     (nil))
(insn 501 500 502 39 (parallel [
            (set (reg:DI 1 dx [orig:233 _147 ] [233])
                (mult:DI (reg:DI 0 ax [orig:232 _146 ] [232])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":242 349 {*muldi3_1}
     (nil))
(insn 502 501 503 39 (set (reg:SI 0 ax [896])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":242 86 {*movsi_internal}
     (nil))
(insn 503 502 504 39 (set (reg:DI 0 ax [orig:234 _148 ] [234])
        (sign_extend:DI (reg:SI 0 ax [896]))) "CALCAPE.f":242 149 {*extendsidi2_rex64}
     (nil))
(insn 504 503 505 39 (parallel [
            (set (reg:DI 0 ax [orig:235 _149 ] [235])
                (plus:DI (reg:DI 0 ax [orig:234 _148 ] [234])
                    (reg:DI 1 dx [orig:233 _147 ] [233])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":242 222 {*adddi_1}
     (nil))
(insn 505 504 506 39 (parallel [
            (set (reg:DI 1 dx [orig:236 _150 ] [236])
                (plus:DI (reg:DI 0 ax [orig:235 _149 ] [235])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":242 222 {*adddi_1}
     (nil))
(insn 506 505 507 39 (set (reg/f:DI 0 ax [897])
        (symbol_ref:DI ("qq.4188") [flags 0x202]  <var_decl 0x7f0daa8ac240 qq>)) "CALCAPE.f":242 85 {*movdi_internal}
     (nil))
(insn 507 506 508 39 (set (reg:SF 21 xmm0 [orig:237 _151 ] [237])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:236 _150 ] [236])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [897])) [1 qq S4 A32])) "CALCAPE.f":242 131 {*movsf_internal}
     (nil))
(insn 508 507 509 39 (set (reg:SF 21 xmm0 [orig:238 _152 ] [238])
        (mult:SF (reg:SF 21 xmm0 [orig:237 _151 ] [237])
            (reg:SF 22 xmm1 [orig:231 _145 ] [231]))) "CALCAPE.f":242 838 {*fop_sf_comm}
     (nil))
(insn 509 508 510 39 (set (reg:SF 22 xmm1 [899])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 bqs00k+0 S4 A32])) "CALCAPE.f":242 131 {*movsf_internal}
     (nil))
(insn 510 509 511 39 (set (reg:SF 21 xmm0 [898])
        (plus:SF (reg:SF 21 xmm0 [orig:238 _152 ] [238])
            (reg:SF 22 xmm1 [899]))) "CALCAPE.f":242 838 {*fop_sf_comm}
     (nil))
(insn 511 510 512 39 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [1 bqk+0 S4 A32])
        (reg:SF 21 xmm0 [898])) "CALCAPE.f":242 131 {*movsf_internal}
     (nil))
(insn 512 511 513 39 (set (reg:SF 21 xmm0 [900])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [1 sqs10k+0 S4 A32])) "CALCAPE.f":243 131 {*movsf_internal}
     (nil))
(insn 513 512 514 39 (set (reg:SF 21 xmm0 [orig:239 _153 ] [239])
        (minus:SF (reg:SF 21 xmm0 [900])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -96 [0xffffffffffffffa0])) [1 sqs00k+0 S4 A32]))) "CALCAPE.f":243 841 {*fop_sf_1}
     (nil))
(insn 514 513 515 39 (set (reg:SF 22 xmm1 [orig:240 _154 ] [240])
        (reg:SF 21 xmm0 [orig:239 _153 ] [239])) "CALCAPE.f":243 131 {*movsf_internal}
     (nil))
(insn 515 514 516 39 (set (reg:SI 0 ax [901])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":243 86 {*movsi_internal}
     (nil))
(insn 516 515 517 39 (set (reg:DI 0 ax [orig:241 _155 ] [241])
        (sign_extend:DI (reg:SI 0 ax [901]))) "CALCAPE.f":243 149 {*extendsidi2_rex64}
     (nil))
(insn 517 516 518 39 (parallel [
            (set (reg:DI 1 dx [orig:242 _156 ] [242])
                (mult:DI (reg:DI 0 ax [orig:241 _155 ] [241])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":243 349 {*muldi3_1}
     (nil))
(insn 518 517 519 39 (set (reg:SI 0 ax [902])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":243 86 {*movsi_internal}
     (nil))
(insn 519 518 520 39 (set (reg:DI 0 ax [orig:243 _157 ] [243])
        (sign_extend:DI (reg:SI 0 ax [902]))) "CALCAPE.f":243 149 {*extendsidi2_rex64}
     (nil))
(insn 520 519 521 39 (parallel [
            (set (reg:DI 0 ax [orig:244 _158 ] [244])
                (plus:DI (reg:DI 0 ax [orig:243 _157 ] [243])
                    (reg:DI 1 dx [orig:242 _156 ] [242])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":243 222 {*adddi_1}
     (nil))
(insn 521 520 522 39 (parallel [
            (set (reg:DI 1 dx [orig:245 _159 ] [245])
                (plus:DI (reg:DI 0 ax [orig:244 _158 ] [244])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":243 222 {*adddi_1}
     (nil))
(insn 522 521 523 39 (set (reg/f:DI 0 ax [903])
        (symbol_ref:DI ("qq.4188") [flags 0x202]  <var_decl 0x7f0daa8ac240 qq>)) "CALCAPE.f":243 85 {*movdi_internal}
     (nil))
(insn 523 522 524 39 (set (reg:SF 21 xmm0 [orig:246 _160 ] [246])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:245 _159 ] [245])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [903])) [1 qq S4 A32])) "CALCAPE.f":243 131 {*movsf_internal}
     (nil))
(insn 524 523 525 39 (set (reg:SF 21 xmm0 [orig:247 _161 ] [247])
        (mult:SF (reg:SF 21 xmm0 [orig:246 _160 ] [246])
            (reg:SF 22 xmm1 [orig:240 _154 ] [240]))) "CALCAPE.f":243 838 {*fop_sf_comm}
     (nil))
(insn 525 524 526 39 (set (reg:SF 22 xmm1 [905])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 sqs00k+0 S4 A32])) "CALCAPE.f":243 131 {*movsf_internal}
     (nil))
(insn 526 525 527 39 (set (reg:SF 21 xmm0 [904])
        (plus:SF (reg:SF 21 xmm0 [orig:247 _161 ] [247])
            (reg:SF 22 xmm1 [905]))) "CALCAPE.f":243 838 {*fop_sf_comm}
     (nil))
(insn 527 526 528 39 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [1 sqk+0 S4 A32])
        (reg:SF 21 xmm0 [904])) "CALCAPE.f":243 131 {*movsf_internal}
     (nil))
(insn 528 527 529 39 (set (reg:SF 21 xmm0 [906])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 qbtk+0 S4 A32])) "CALCAPE.f":244 131 {*movsf_internal}
     (nil))
(insn 529 528 2061 39 (set (reg:SF 21 xmm0 [orig:248 _162 ] [248])
        (minus:SF (reg:SF 21 xmm0 [906])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -108 [0xffffffffffffff94])) [1 bqk+0 S4 A32]))) "CALCAPE.f":244 841 {*fop_sf_1}
     (nil))
(insn 2061 529 531 39 (set (reg:SF 22 xmm1 [orig:249 _163 ] [249])
        (reg:SF 21 xmm0 [orig:249 _163 ] [249])) "CALCAPE.f":244 131 {*movsf_internal}
     (nil))
(insn 531 2061 532 39 (set (reg:SF 22 xmm1 [orig:249 _163 ] [249])
        (div:SF (reg:SF 22 xmm1 [orig:249 _163 ] [249])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])) [1 sqk+0 S4 A32]))) "CALCAPE.f":244 841 {*fop_sf_1}
     (nil))
(insn 532 531 533 39 (set (reg/f:DI 0 ax [907])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(insn 533 532 534 39 (set (reg:SF 21 xmm0 [orig:251 _165 ] [251])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [907])
                (const_int 56 [0x38])) [1 phys.rdq+0 S4 A64])) "CALCAPE.f":1 131 {*movsf_internal}
     (nil))
(insn 534 533 535 39 (set (reg:SF 21 xmm0 [908])
        (mult:SF (reg:SF 21 xmm0 [orig:251 _165 ] [251])
            (reg:SF 22 xmm1 [orig:250 _164 ] [250]))) "CALCAPE.f":244 838 {*fop_sf_comm}
     (nil))
(insn 535 534 536 39 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 tqk+0 S4 A32])
        (reg:SF 21 xmm0 [908])) "CALCAPE.f":244 131 {*movsf_internal}
     (nil))
(insn 536 535 537 39 (set (reg:SF 22 xmm1 [909])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 tqk+0 S4 A32])) "CALCAPE.f":245 131 {*movsf_internal}
     (nil))
(insn 537 536 538 39 (set (reg:SF 24 xmm3 [910])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":245 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 8.388608e+6 [0x0.8p+24])
        (nil)))
(insn 538 537 539 39 (set (reg:SF 21 xmm0 [911])
        (reg:SF 22 xmm1 [909])) "CALCAPE.f":245 131 {*movsf_internal}
     (nil))
(insn 539 538 540 39 (set (reg:V4SF 23 xmm2 [913])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S16 A128])) "CALCAPE.f":245 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 540 539 2063 39 (set (reg:SF 23 xmm2 [914])
        (vec_select:SF (reg:V4SF 23 xmm2 [913])
            (parallel [
                    (const_int 0 [0])
                ]))) "CALCAPE.f":245 2527 {*vec_extractv4sf_0}
     (nil))
(insn 2063 540 541 39 (set (reg:SF 25 xmm4 [912])
        (reg:SF 21 xmm0 [911])) "CALCAPE.f":245 131 {*movsf_internal}
     (nil))
(insn 541 2063 542 39 (set (reg:SF 25 xmm4 [912])
        (and:SF (reg:SF 25 xmm4 [912])
            (reg:SF 23 xmm2 [914]))) "CALCAPE.f":245 1849 {*andsf3}
     (nil))
(insn 542 541 543 39 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 24 xmm3 [910])
                    (reg:SF 25 xmm4 [912]))
            ] UNSPEC_NOTRAP)) "CALCAPE.f":245 54 {*cmpiusf}
     (nil))
(jump_insn 543 542 1879 39 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 548)
            (pc))) "CALCAPE.f":245 682 {*jcc}
     (nil)
 -> 548)
;;  succ:       41
;;              40 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699 909 911 914

;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 41, flags: (RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699 909 911 914
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 909 911 914
;; lr  def 	 911 915 916
(note 1879 543 544 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 544 1879 545 40 (set (reg:SI 0 ax [915])
        (fix:SI (reg:SF 21 xmm0 [911]))) "CALCAPE.f":245 174 {fix_truncsfsi_sse}
     (nil))
(insn 545 544 546 40 (set (reg:SF 21 xmm0 [911])
        (float:SF (reg:SI 0 ax [915]))) "CALCAPE.f":245 203 {*floatsisf2_mixed}
     (nil))
(insn 546 545 2066 40 (set (reg:SF 23 xmm2 [914])
        (and:SF (not:SF (reg:SF 23 xmm2 [914]))
            (reg:SF 22 xmm1 [909]))) "CALCAPE.f":245 1846 {*andnotsf3}
     (nil))
(insn 2066 546 547 40 (set (reg:SF 22 xmm1 [916])
        (reg:SF 23 xmm2 [914])) "CALCAPE.f":245 131 {*movsf_internal}
     (nil))
(insn 547 2066 548 40 (set (reg:SF 21 xmm0 [911])
        (ior:SF (reg:SF 21 xmm0 [911])
            (reg:SF 22 xmm1 [916]))) "CALCAPE.f":245 1850 {*iorsf3}
     (nil))
;;  succ:       41 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699 911

;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 42, flags: (RTL, MODIFIED)
;;  pred:       39
;;              40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699 911
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 911
;; lr  def 	 17 [flags] 252 253 254 255 256 257 258 259 917 918 919 920 921 922
(code_label 548 547 1880 41 24 (nil) [1 uses])
(note 1880 548 549 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 549 1880 550 41 (set (reg:SF 22 xmm1 [orig:252 _166 ] [252])
        (reg:SF 21 xmm0 [911])) "CALCAPE.f":245 131 {*movsf_internal}
     (nil))
(insn 550 549 551 41 (set (reg:SI 0 ax [917])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":245 86 {*movsi_internal}
     (nil))
(insn 551 550 552 41 (set (reg:DI 0 ax [orig:253 _167 ] [253])
        (sign_extend:DI (reg:SI 0 ax [917]))) "CALCAPE.f":245 149 {*extendsidi2_rex64}
     (nil))
(insn 552 551 553 41 (parallel [
            (set (reg:DI 1 dx [orig:254 _168 ] [254])
                (mult:DI (reg:DI 0 ax [orig:253 _167 ] [253])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":245 349 {*muldi3_1}
     (nil))
(insn 553 552 554 41 (set (reg:SI 0 ax [918])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":245 86 {*movsi_internal}
     (nil))
(insn 554 553 555 41 (set (reg:DI 0 ax [orig:255 _169 ] [255])
        (sign_extend:DI (reg:SI 0 ax [918]))) "CALCAPE.f":245 149 {*extendsidi2_rex64}
     (nil))
(insn 555 554 556 41 (parallel [
            (set (reg:DI 0 ax [orig:256 _170 ] [256])
                (plus:DI (reg:DI 0 ax [orig:255 _169 ] [255])
                    (reg:DI 1 dx [orig:254 _168 ] [254])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":245 222 {*adddi_1}
     (nil))
(insn 556 555 557 41 (parallel [
            (set (reg:DI 1 dx [orig:257 _171 ] [257])
                (plus:DI (reg:DI 0 ax [orig:256 _170 ] [256])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":245 222 {*adddi_1}
     (nil))
(insn 557 556 558 41 (set (reg:SF 21 xmm0 [919])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 tqk+0 S4 A32])) "CALCAPE.f":245 131 {*movsf_internal}
     (nil))
(insn 558 557 559 41 (set (reg:SF 21 xmm0 [orig:258 _172 ] [258])
        (minus:SF (reg:SF 21 xmm0 [919])
            (reg:SF 22 xmm1 [orig:252 _166 ] [252]))) "CALCAPE.f":245 841 {*fop_sf_1}
     (nil))
(insn 559 558 560 41 (set (reg/f:DI 0 ax [920])
        (symbol_ref:DI ("pp.4181") [flags 0x202]  <var_decl 0x7f0daa8aaf30 pp>)) "CALCAPE.f":245 85 {*movdi_internal}
     (nil))
(insn 560 559 561 41 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:257 _171 ] [257])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [920])) [1 pp S4 A32])
        (reg:SF 21 xmm0 [orig:258 _172 ] [258])) "CALCAPE.f":245 131 {*movsf_internal}
     (nil))
(insn 561 560 562 41 (set (reg:SF 21 xmm0 [921])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 tqk+0 S4 A32])) "CALCAPE.f":246 131 {*movsf_internal}
     (nil))
(insn 562 561 563 41 (set (reg:SI 0 ax [orig:259 _173 ] [259])
        (fix:SI (reg:SF 21 xmm0 [921]))) "CALCAPE.f":246 174 {fix_truncsfsi_sse}
     (nil))
(insn 563 562 564 41 (parallel [
            (set (reg:SI 0 ax [922])
                (plus:SI (reg:SI 0 ax [orig:259 _173 ] [259])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":246 221 {*addsi_1}
     (nil))
(insn 564 563 565 41 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 iq+0 S4 A32])
        (reg:SI 0 ax [922])) "CALCAPE.f":246 86 {*movsi_internal}
     (nil))
(insn 565 564 566 41 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 iq+0 S4 A32])
            (const_int 0 [0]))) "CALCAPE.f":248 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 566 565 567 41 (set (pc)
        (if_then_else (gt (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 579)
            (pc))) "CALCAPE.f":248 682 {*jcc}
     (nil)
 -> 579)
;;  succ:       42 (FALLTHRU)
;;              43
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 260 261 262 263 264 923 924 925 926
(note 567 566 568 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 568 567 569 42 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 iq+0 S4 A32])
        (const_int 1 [0x1])) "CALCAPE.f":249 86 {*movsi_internal}
     (nil))
(insn 569 568 570 42 (set (reg:SI 0 ax [923])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":250 86 {*movsi_internal}
     (nil))
(insn 570 569 571 42 (set (reg:DI 0 ax [orig:260 _174 ] [260])
        (sign_extend:DI (reg:SI 0 ax [923]))) "CALCAPE.f":250 149 {*extendsidi2_rex64}
     (nil))
(insn 571 570 572 42 (parallel [
            (set (reg:DI 1 dx [orig:261 _175 ] [261])
                (mult:DI (reg:DI 0 ax [orig:260 _174 ] [260])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":250 349 {*muldi3_1}
     (nil))
(insn 572 571 573 42 (set (reg:SI 0 ax [924])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":250 86 {*movsi_internal}
     (nil))
(insn 573 572 574 42 (set (reg:DI 0 ax [orig:262 _176 ] [262])
        (sign_extend:DI (reg:SI 0 ax [924]))) "CALCAPE.f":250 149 {*extendsidi2_rex64}
     (nil))
(insn 574 573 575 42 (parallel [
            (set (reg:DI 0 ax [orig:263 _177 ] [263])
                (plus:DI (reg:DI 0 ax [orig:262 _176 ] [262])
                    (reg:DI 1 dx [orig:261 _175 ] [261])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":250 222 {*adddi_1}
     (nil))
(insn 575 574 576 42 (parallel [
            (set (reg:DI 1 dx [orig:264 _178 ] [264])
                (plus:DI (reg:DI 0 ax [orig:263 _177 ] [263])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":250 222 {*adddi_1}
     (nil))
(insn 576 575 577 42 (set (reg/f:DI 0 ax [925])
        (symbol_ref:DI ("pp.4181") [flags 0x202]  <var_decl 0x7f0daa8aaf30 pp>)) "CALCAPE.f":250 85 {*movdi_internal}
     (nil))
(insn 577 576 578 42 (set (reg:SF 21 xmm0 [926])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":250 131 {*movsf_internal}
     (nil))
(insn 578 577 579 42 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:264 _178 ] [264])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [925])) [1 pp S4 A32])
        (reg:SF 21 xmm0 [926])) "CALCAPE.f":250 131 {*movsf_internal}
     (nil))
;;  succ:       43 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 43, loop depth 0, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       41
;;              42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 579 578 580 43 25 (nil) [1 uses])
(note 580 579 581 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 581 580 582 43 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [2 iq+0 S4 A32])
            (const_int 75 [0x4b]))) "CALCAPE.f":252 11 {*cmpsi_1}
     (nil))
(jump_insn 582 581 583 43 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 595)
            (pc))) "CALCAPE.f":252 682 {*jcc}
     (nil)
 -> 595)
;;  succ:       44 (FALLTHRU)
;;              45
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 44, loop depth 0, maybe hot
;;  prev block 43, next block 45, flags: (RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 265 266 267 268 269 927 928 929 930
(note 583 582 584 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 584 583 585 44 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 iq+0 S4 A32])
        (const_int 75 [0x4b])) "CALCAPE.f":253 86 {*movsi_internal}
     (nil))
(insn 585 584 586 44 (set (reg:SI 0 ax [927])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":254 86 {*movsi_internal}
     (nil))
(insn 586 585 587 44 (set (reg:DI 0 ax [orig:265 _179 ] [265])
        (sign_extend:DI (reg:SI 0 ax [927]))) "CALCAPE.f":254 149 {*extendsidi2_rex64}
     (nil))
(insn 587 586 588 44 (parallel [
            (set (reg:DI 1 dx [orig:266 _180 ] [266])
                (mult:DI (reg:DI 0 ax [orig:265 _179 ] [265])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":254 349 {*muldi3_1}
     (nil))
(insn 588 587 589 44 (set (reg:SI 0 ax [928])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":254 86 {*movsi_internal}
     (nil))
(insn 589 588 590 44 (set (reg:DI 0 ax [orig:267 _181 ] [267])
        (sign_extend:DI (reg:SI 0 ax [928]))) "CALCAPE.f":254 149 {*extendsidi2_rex64}
     (nil))
(insn 590 589 591 44 (parallel [
            (set (reg:DI 0 ax [orig:268 _182 ] [268])
                (plus:DI (reg:DI 0 ax [orig:267 _181 ] [267])
                    (reg:DI 1 dx [orig:266 _180 ] [266])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":254 222 {*adddi_1}
     (nil))
(insn 591 590 592 44 (parallel [
            (set (reg:DI 1 dx [orig:269 _183 ] [269])
                (plus:DI (reg:DI 0 ax [orig:268 _182 ] [268])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":254 222 {*adddi_1}
     (nil))
(insn 592 591 593 44 (set (reg/f:DI 0 ax [929])
        (symbol_ref:DI ("pp.4181") [flags 0x202]  <var_decl 0x7f0daa8aaf30 pp>)) "CALCAPE.f":254 85 {*movdi_internal}
     (nil))
(insn 593 592 594 44 (set (reg:SF 21 xmm0 [930])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":254 131 {*movsf_internal}
     (nil))
(insn 594 593 595 44 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:269 _183 ] [269])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [929])) [1 pp S4 A32])
        (reg:SF 21 xmm0 [930])) "CALCAPE.f":254 131 {*movsf_internal}
     (nil))
;;  succ:       45 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 46, flags: (RTL, MODIFIED)
;;  pred:       43
;;              44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 270 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 704 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956 957 958 959 960 961 962 963 964 965 966 967 968 969 970 971 972 973 974 975 976 977 978 979 980 981 982 983 984 985
(code_label 595 594 596 45 26 (nil) [1 uses])
(note 596 595 597 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 597 596 598 45 (set (reg:SI 0 ax [931])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 ittbk+0 S4 A32])) "CALCAPE.f":257 86 {*movsi_internal}
     (nil))
(insn 598 597 599 45 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 it+0 S4 A32])
        (reg:SI 0 ax [931])) "CALCAPE.f":257 86 {*movsi_internal}
     (nil))
(insn 599 598 600 45 (set (reg:SI 0 ax [932])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 it+0 S4 A32])) "CALCAPE.f":258 86 {*movsi_internal}
     (nil))
(insn 600 599 601 45 (set (reg:DI 1 dx [orig:270 _184 ] [270])
        (sign_extend:DI (reg:SI 0 ax [932]))) "CALCAPE.f":258 149 {*extendsidi2_rex64}
     (nil))
(insn 601 600 602 45 (set (reg:DI 0 ax [933])
        (reg:DI 1 dx [orig:270 _184 ] [270])) "CALCAPE.f":258 85 {*movdi_internal}
     (nil))
(insn 602 601 603 45 (parallel [
            (set (reg:DI 0 ax [933])
                (ashift:DI (reg:DI 0 ax [933])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":258 551 {*ashldi3_1}
     (nil))
(insn 603 602 604 45 (parallel [
            (set (reg:DI 0 ax [933])
                (plus:DI (reg:DI 0 ax [933])
                    (reg:DI 1 dx [orig:270 _184 ] [270])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":258 222 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:270 _184 ] [270])
            (const_int 9 [0x9]))
        (nil)))
(insn 604 603 605 45 (parallel [
            (set (reg:DI 0 ax [933])
                (ashift:DI (reg:DI 0 ax [933])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":258 551 {*ashldi3_1}
     (nil))
(insn 605 604 606 45 (parallel [
            (set (reg:DI 0 ax [933])
                (plus:DI (reg:DI 0 ax [933])
                    (reg:DI 1 dx [orig:270 _184 ] [270])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":258 222 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:270 _184 ] [270])
            (const_int 19 [0x13]))
        (nil)))
(insn 606 605 608 45 (parallel [
            (set (reg:DI 0 ax [934])
                (ashift:DI (reg:DI 0 ax [933])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":258 551 {*ashldi3_1}
     (nil))
(insn 608 606 609 45 (set (reg:DI 1 dx [orig:271 _185 ] [271])
        (reg:DI 0 ax [933])) "CALCAPE.f":258 85 {*movdi_internal}
     (nil))
(insn 609 608 610 45 (set (reg:SI 0 ax [935])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 iq+0 S4 A32])) "CALCAPE.f":258 86 {*movsi_internal}
     (nil))
(insn 610 609 611 45 (set (reg:DI 0 ax [orig:272 _186 ] [272])
        (sign_extend:DI (reg:SI 0 ax [935]))) "CALCAPE.f":258 149 {*extendsidi2_rex64}
     (nil))
(insn 611 610 612 45 (parallel [
            (set (reg:DI 0 ax [orig:273 _187 ] [273])
                (plus:DI (reg:DI 0 ax [orig:272 _186 ] [272])
                    (reg:DI 1 dx [orig:271 _185 ] [271])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":258 222 {*adddi_1}
     (nil))
(insn 612 611 613 45 (parallel [
            (set (reg:DI 1 dx [orig:274 _188 ] [274])
                (plus:DI (reg:DI 0 ax [orig:273 _187 ] [273])
                    (const_int -77 [0xffffffffffffffb3])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":258 222 {*adddi_1}
     (nil))
(insn 613 612 614 45 (set (reg/f:DI 0 ax [936])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":258 85 {*movdi_internal}
     (nil))
(insn 614 613 615 45 (parallel [
            (set (reg:DI 1 dx [937])
                (plus:DI (reg:DI 1 dx [orig:274 _188 ] [274])
                    (const_int 563849 [0x89a89])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":258 222 {*adddi_1}
     (nil))
(insn 615 614 616 45 (set (reg:SF 21 xmm0 [938])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [937])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [936])) [1 phys.ptbl S4 A32])) "CALCAPE.f":258 131 {*movsf_internal}
     (nil))
(insn 616 615 617 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [1 p00k+0 S4 A32])
        (reg:SF 21 xmm0 [938])) "CALCAPE.f":258 131 {*movsf_internal}
     (nil))
(insn 617 616 618 45 (set (reg:SI 0 ax [939])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 it+0 S4 A32])) "CALCAPE.f":259 86 {*movsi_internal}
     (nil))
(insn 618 617 619 45 (set (reg:DI 1 dx [orig:275 _189 ] [275])
        (sign_extend:DI (reg:SI 0 ax [939]))) "CALCAPE.f":259 149 {*extendsidi2_rex64}
     (nil))
(insn 619 618 620 45 (set (reg:DI 0 ax [940])
        (reg:DI 1 dx [orig:275 _189 ] [275])) "CALCAPE.f":259 85 {*movdi_internal}
     (nil))
(insn 620 619 621 45 (parallel [
            (set (reg:DI 0 ax [940])
                (ashift:DI (reg:DI 0 ax [940])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":259 551 {*ashldi3_1}
     (nil))
(insn 621 620 622 45 (parallel [
            (set (reg:DI 0 ax [940])
                (plus:DI (reg:DI 0 ax [940])
                    (reg:DI 1 dx [orig:275 _189 ] [275])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":259 222 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:275 _189 ] [275])
            (const_int 9 [0x9]))
        (nil)))
(insn 622 621 623 45 (parallel [
            (set (reg:DI 0 ax [940])
                (ashift:DI (reg:DI 0 ax [940])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":259 551 {*ashldi3_1}
     (nil))
(insn 623 622 624 45 (parallel [
            (set (reg:DI 0 ax [940])
                (plus:DI (reg:DI 0 ax [940])
                    (reg:DI 1 dx [orig:275 _189 ] [275])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":259 222 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:275 _189 ] [275])
            (const_int 19 [0x13]))
        (nil)))
(insn 624 623 626 45 (parallel [
            (set (reg:DI 0 ax [941])
                (ashift:DI (reg:DI 0 ax [940])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":259 551 {*ashldi3_1}
     (nil))
(insn 626 624 627 45 (set (reg:DI 1 dx [orig:276 _190 ] [276])
        (reg:DI 0 ax [940])) "CALCAPE.f":259 85 {*movdi_internal}
     (nil))
(insn 627 626 628 45 (set (reg:SI 0 ax [942])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 iq+0 S4 A32])) "CALCAPE.f":259 86 {*movsi_internal}
     (nil))
(insn 628 627 629 45 (parallel [
            (set (reg:SI 0 ax [orig:277 _191 ] [277])
                (plus:SI (reg:SI 0 ax [942])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":259 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [2 iq+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 629 628 630 45 (set (reg:DI 0 ax [orig:278 _192 ] [278])
        (sign_extend:DI (reg:SI 0 ax [orig:277 _191 ] [277]))) "CALCAPE.f":259 149 {*extendsidi2_rex64}
     (nil))
(insn 630 629 631 45 (parallel [
            (set (reg:DI 0 ax [orig:279 _193 ] [279])
                (plus:DI (reg:DI 0 ax [orig:278 _192 ] [278])
                    (reg:DI 1 dx [orig:276 _190 ] [276])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":259 222 {*adddi_1}
     (nil))
(insn 631 630 632 45 (parallel [
            (set (reg:DI 1 dx [orig:280 _194 ] [280])
                (plus:DI (reg:DI 0 ax [orig:279 _193 ] [279])
                    (const_int -77 [0xffffffffffffffb3])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":259 222 {*adddi_1}
     (nil))
(insn 632 631 633 45 (set (reg/f:DI 0 ax [943])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":259 85 {*movdi_internal}
     (nil))
(insn 633 632 634 45 (parallel [
            (set (reg:DI 1 dx [944])
                (plus:DI (reg:DI 1 dx [orig:280 _194 ] [280])
                    (const_int 563849 [0x89a89])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":259 222 {*adddi_1}
     (nil))
(insn 634 633 635 45 (set (reg:SF 21 xmm0 [945])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [944])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [943])) [1 phys.ptbl S4 A32])) "CALCAPE.f":259 131 {*movsf_internal}
     (nil))
(insn 635 634 636 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [1 p10k+0 S4 A32])
        (reg:SF 21 xmm0 [945])) "CALCAPE.f":259 131 {*movsf_internal}
     (nil))
(insn 636 635 637 45 (set (reg:SI 0 ax [946])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 it+0 S4 A32])) "CALCAPE.f":260 86 {*movsi_internal}
     (nil))
(insn 637 636 638 45 (parallel [
            (set (reg:SI 0 ax [orig:281 _195 ] [281])
                (plus:SI (reg:SI 0 ax [946])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":260 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [2 it+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 638 637 639 45 (set (reg:DI 1 dx [orig:282 _196 ] [282])
        (sign_extend:DI (reg:SI 0 ax [orig:281 _195 ] [281]))) "CALCAPE.f":260 149 {*extendsidi2_rex64}
     (nil))
(insn 639 638 640 45 (set (reg:DI 0 ax [947])
        (reg:DI 1 dx [orig:282 _196 ] [282])) "CALCAPE.f":260 85 {*movdi_internal}
     (nil))
(insn 640 639 641 45 (parallel [
            (set (reg:DI 0 ax [947])
                (ashift:DI (reg:DI 0 ax [947])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":260 551 {*ashldi3_1}
     (nil))
(insn 641 640 642 45 (parallel [
            (set (reg:DI 0 ax [947])
                (plus:DI (reg:DI 0 ax [947])
                    (reg:DI 1 dx [orig:282 _196 ] [282])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":260 222 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:282 _196 ] [282])
            (const_int 9 [0x9]))
        (nil)))
(insn 642 641 643 45 (parallel [
            (set (reg:DI 0 ax [947])
                (ashift:DI (reg:DI 0 ax [947])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":260 551 {*ashldi3_1}
     (nil))
(insn 643 642 644 45 (parallel [
            (set (reg:DI 0 ax [947])
                (plus:DI (reg:DI 0 ax [947])
                    (reg:DI 1 dx [orig:282 _196 ] [282])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":260 222 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:282 _196 ] [282])
            (const_int 19 [0x13]))
        (nil)))
(insn 644 643 646 45 (parallel [
            (set (reg:DI 0 ax [948])
                (ashift:DI (reg:DI 0 ax [947])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":260 551 {*ashldi3_1}
     (nil))
(insn 646 644 647 45 (set (reg:DI 1 dx [orig:283 _197 ] [283])
        (reg:DI 0 ax [947])) "CALCAPE.f":260 85 {*movdi_internal}
     (nil))
(insn 647 646 648 45 (set (reg:SI 0 ax [949])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 iq+0 S4 A32])) "CALCAPE.f":260 86 {*movsi_internal}
     (nil))
(insn 648 647 649 45 (set (reg:DI 0 ax [orig:284 _198 ] [284])
        (sign_extend:DI (reg:SI 0 ax [949]))) "CALCAPE.f":260 149 {*extendsidi2_rex64}
     (nil))
(insn 649 648 650 45 (parallel [
            (set (reg:DI 0 ax [orig:285 _199 ] [285])
                (plus:DI (reg:DI 0 ax [orig:284 _198 ] [284])
                    (reg:DI 1 dx [orig:283 _197 ] [283])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":260 222 {*adddi_1}
     (nil))
(insn 650 649 651 45 (parallel [
            (set (reg:DI 1 dx [orig:286 _200 ] [286])
                (plus:DI (reg:DI 0 ax [orig:285 _199 ] [285])
                    (const_int -77 [0xffffffffffffffb3])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":260 222 {*adddi_1}
     (nil))
(insn 651 650 652 45 (set (reg/f:DI 0 ax [950])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":260 85 {*movdi_internal}
     (nil))
(insn 652 651 653 45 (parallel [
            (set (reg:DI 1 dx [951])
                (plus:DI (reg:DI 1 dx [orig:286 _200 ] [286])
                    (const_int 563849 [0x89a89])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":260 222 {*adddi_1}
     (nil))
(insn 653 652 654 45 (set (reg:SF 21 xmm0 [952])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [951])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [950])) [1 phys.ptbl S4 A32])) "CALCAPE.f":260 131 {*movsf_internal}
     (nil))
(insn 654 653 655 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 p01k+0 S4 A32])
        (reg:SF 21 xmm0 [952])) "CALCAPE.f":260 131 {*movsf_internal}
     (nil))
(insn 655 654 656 45 (set (reg:SI 0 ax [953])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 it+0 S4 A32])) "CALCAPE.f":261 86 {*movsi_internal}
     (nil))
(insn 656 655 657 45 (parallel [
            (set (reg:SI 0 ax [orig:287 _201 ] [287])
                (plus:SI (reg:SI 0 ax [953])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":261 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -104 [0xffffffffffffff98])) [2 it+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 657 656 658 45 (set (reg:DI 1 dx [orig:288 _202 ] [288])
        (sign_extend:DI (reg:SI 0 ax [orig:287 _201 ] [287]))) "CALCAPE.f":261 149 {*extendsidi2_rex64}
     (nil))
(insn 658 657 659 45 (set (reg:DI 0 ax [954])
        (reg:DI 1 dx [orig:288 _202 ] [288])) "CALCAPE.f":261 85 {*movdi_internal}
     (nil))
(insn 659 658 660 45 (parallel [
            (set (reg:DI 0 ax [954])
                (ashift:DI (reg:DI 0 ax [954])
                    (const_int 3 [0x3])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":261 551 {*ashldi3_1}
     (nil))
(insn 660 659 661 45 (parallel [
            (set (reg:DI 0 ax [954])
                (plus:DI (reg:DI 0 ax [954])
                    (reg:DI 1 dx [orig:288 _202 ] [288])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":261 222 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:288 _202 ] [288])
            (const_int 9 [0x9]))
        (nil)))
(insn 661 660 662 45 (parallel [
            (set (reg:DI 0 ax [954])
                (ashift:DI (reg:DI 0 ax [954])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":261 551 {*ashldi3_1}
     (nil))
(insn 662 661 663 45 (parallel [
            (set (reg:DI 0 ax [954])
                (plus:DI (reg:DI 0 ax [954])
                    (reg:DI 1 dx [orig:288 _202 ] [288])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":261 222 {*adddi_1}
     (expr_list:REG_EQUAL (mult:DI (reg:DI 1 dx [orig:288 _202 ] [288])
            (const_int 19 [0x13]))
        (nil)))
(insn 663 662 665 45 (parallel [
            (set (reg:DI 0 ax [955])
                (ashift:DI (reg:DI 0 ax [954])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":261 551 {*ashldi3_1}
     (nil))
(insn 665 663 666 45 (set (reg:DI 1 dx [orig:289 _203 ] [289])
        (reg:DI 0 ax [954])) "CALCAPE.f":261 85 {*movdi_internal}
     (nil))
(insn 666 665 667 45 (set (reg:SI 0 ax [956])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [2 iq+0 S4 A32])) "CALCAPE.f":261 86 {*movsi_internal}
     (nil))
(insn 667 666 668 45 (parallel [
            (set (reg:SI 0 ax [orig:290 _204 ] [290])
                (plus:SI (reg:SI 0 ax [956])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":261 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [2 iq+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 668 667 669 45 (set (reg:DI 0 ax [orig:291 _205 ] [291])
        (sign_extend:DI (reg:SI 0 ax [orig:290 _204 ] [290]))) "CALCAPE.f":261 149 {*extendsidi2_rex64}
     (nil))
(insn 669 668 670 45 (parallel [
            (set (reg:DI 0 ax [orig:292 _206 ] [292])
                (plus:DI (reg:DI 0 ax [orig:291 _205 ] [291])
                    (reg:DI 1 dx [orig:289 _203 ] [289])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":261 222 {*adddi_1}
     (nil))
(insn 670 669 671 45 (parallel [
            (set (reg:DI 1 dx [orig:293 _207 ] [293])
                (plus:DI (reg:DI 0 ax [orig:292 _206 ] [292])
                    (const_int -77 [0xffffffffffffffb3])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":261 222 {*adddi_1}
     (nil))
(insn 671 670 672 45 (set (reg/f:DI 0 ax [957])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":261 85 {*movdi_internal}
     (nil))
(insn 672 671 673 45 (parallel [
            (set (reg:DI 1 dx [958])
                (plus:DI (reg:DI 1 dx [orig:293 _207 ] [293])
                    (const_int 563849 [0x89a89])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":261 222 {*adddi_1}
     (nil))
(insn 673 672 674 45 (set (reg:SF 21 xmm0 [959])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [958])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [957])) [1 phys.ptbl S4 A32])) "CALCAPE.f":261 131 {*movsf_internal}
     (nil))
(insn 674 673 675 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [1 p11k+0 S4 A32])
        (reg:SF 21 xmm0 [959])) "CALCAPE.f":261 131 {*movsf_internal}
     (nil))
(insn 675 674 676 45 (set (reg:SF 21 xmm0 [960])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [1 p10k+0 S4 A32])) "CALCAPE.f":264 131 {*movsf_internal}
     (nil))
(insn 676 675 677 45 (set (reg:SF 21 xmm0 [orig:294 _208 ] [294])
        (minus:SF (reg:SF 21 xmm0 [960])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -124 [0xffffffffffffff84])) [1 p00k+0 S4 A32]))) "CALCAPE.f":264 841 {*fop_sf_1}
     (nil))
(insn 677 676 678 45 (set (reg:SF 22 xmm1 [orig:295 _209 ] [295])
        (reg:SF 21 xmm0 [orig:294 _208 ] [294])) "CALCAPE.f":264 131 {*movsf_internal}
     (nil))
(insn 678 677 679 45 (set (reg:SI 0 ax [961])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":264 86 {*movsi_internal}
     (nil))
(insn 679 678 680 45 (set (reg:DI 0 ax [orig:296 _210 ] [296])
        (sign_extend:DI (reg:SI 0 ax [961]))) "CALCAPE.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 680 679 681 45 (parallel [
            (set (reg:DI 1 dx [orig:297 _211 ] [297])
                (mult:DI (reg:DI 0 ax [orig:296 _210 ] [296])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":264 349 {*muldi3_1}
     (nil))
(insn 681 680 682 45 (set (reg:SI 0 ax [962])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":264 86 {*movsi_internal}
     (nil))
(insn 682 681 683 45 (set (reg:DI 0 ax [orig:298 _212 ] [298])
        (sign_extend:DI (reg:SI 0 ax [962]))) "CALCAPE.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 683 682 684 45 (parallel [
            (set (reg:DI 0 ax [orig:299 _213 ] [299])
                (plus:DI (reg:DI 0 ax [orig:298 _212 ] [298])
                    (reg:DI 1 dx [orig:297 _211 ] [297])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":264 222 {*adddi_1}
     (nil))
(insn 684 683 685 45 (parallel [
            (set (reg:DI 1 dx [orig:300 _214 ] [300])
                (plus:DI (reg:DI 0 ax [orig:299 _213 ] [299])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":264 222 {*adddi_1}
     (nil))
(insn 685 684 686 45 (set (reg/f:DI 0 ax [963])
        (symbol_ref:DI ("pp.4181") [flags 0x202]  <var_decl 0x7f0daa8aaf30 pp>)) "CALCAPE.f":264 85 {*movdi_internal}
     (nil))
(insn 686 685 687 45 (set (reg:SF 21 xmm0 [orig:301 _215 ] [301])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:300 _214 ] [300])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [963])) [1 pp S4 A32])) "CALCAPE.f":264 131 {*movsf_internal}
     (nil))
(insn 687 686 2067 45 (set (reg:SF 21 xmm0 [orig:302 _216 ] [302])
        (mult:SF (reg:SF 21 xmm0 [orig:301 _215 ] [301])
            (reg:SF 22 xmm1 [orig:295 _209 ] [295]))) "CALCAPE.f":264 838 {*fop_sf_comm}
     (nil))
(insn 2067 687 688 45 (set (reg:SF 22 xmm1 [orig:302 _216 ] [302])
        (reg:SF 21 xmm0 [orig:302 _216 ] [302])) "CALCAPE.f":264 131 {*movsf_internal}
     (nil))
(insn 688 2067 689 45 (set (reg:SF 22 xmm1 [orig:302 _216 ] [302])
        (plus:SF (reg:SF 22 xmm1 [orig:302 _216 ] [302])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -124 [0xffffffffffffff84])) [1 p00k+0 S4 A32]))) "CALCAPE.f":264 838 {*fop_sf_comm}
     (nil))
(insn 689 688 690 45 (set (reg:SF 21 xmm0 [964])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -132 [0xffffffffffffff7c])) [1 p01k+0 S4 A32])) "CALCAPE.f":264 131 {*movsf_internal}
     (nil))
(insn 690 689 691 45 (set (reg:SF 21 xmm0 [orig:304 _218 ] [304])
        (minus:SF (reg:SF 21 xmm0 [964])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -124 [0xffffffffffffff84])) [1 p00k+0 S4 A32]))) "CALCAPE.f":264 841 {*fop_sf_1}
     (nil))
(insn 691 690 692 45 (set (reg:SF 23 xmm2 [orig:305 _219 ] [305])
        (reg:SF 21 xmm0 [orig:304 _218 ] [304])) "CALCAPE.f":264 131 {*movsf_internal}
     (nil))
(insn 692 691 693 45 (set (reg:SI 0 ax [965])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":264 86 {*movsi_internal}
     (nil))
(insn 693 692 694 45 (set (reg:DI 0 ax [orig:306 _220 ] [306])
        (sign_extend:DI (reg:SI 0 ax [965]))) "CALCAPE.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 694 693 695 45 (parallel [
            (set (reg:DI 1 dx [orig:307 _221 ] [307])
                (mult:DI (reg:DI 0 ax [orig:306 _220 ] [306])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":264 349 {*muldi3_1}
     (nil))
(insn 695 694 696 45 (set (reg:SI 0 ax [966])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":264 86 {*movsi_internal}
     (nil))
(insn 696 695 697 45 (set (reg:DI 0 ax [orig:308 _222 ] [308])
        (sign_extend:DI (reg:SI 0 ax [966]))) "CALCAPE.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 697 696 698 45 (parallel [
            (set (reg:DI 0 ax [orig:309 _223 ] [309])
                (plus:DI (reg:DI 0 ax [orig:308 _222 ] [308])
                    (reg:DI 1 dx [orig:307 _221 ] [307])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":264 222 {*adddi_1}
     (nil))
(insn 698 697 699 45 (parallel [
            (set (reg:DI 1 dx [orig:310 _224 ] [310])
                (plus:DI (reg:DI 0 ax [orig:309 _223 ] [309])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":264 222 {*adddi_1}
     (nil))
(insn 699 698 700 45 (set (reg/f:DI 0 ax [967])
        (symbol_ref:DI ("qq.4188") [flags 0x202]  <var_decl 0x7f0daa8ac240 qq>)) "CALCAPE.f":264 85 {*movdi_internal}
     (nil))
(insn 700 699 701 45 (set (reg:SF 21 xmm0 [orig:311 _225 ] [311])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:310 _224 ] [310])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [967])) [1 qq S4 A32])) "CALCAPE.f":264 131 {*movsf_internal}
     (nil))
(insn 701 700 702 45 (set (reg:SF 21 xmm0 [orig:312 _226 ] [312])
        (mult:SF (reg:SF 21 xmm0 [orig:311 _225 ] [311])
            (reg:SF 23 xmm2 [orig:305 _219 ] [305]))) "CALCAPE.f":264 838 {*fop_sf_comm}
     (nil))
(insn 702 701 703 45 (set (reg:SF 22 xmm1 [orig:313 _227 ] [313])
        (plus:SF (reg:SF 22 xmm1 [orig:303 _217 ] [303])
            (reg:SF 21 xmm0 [orig:312 _226 ] [312]))) "CALCAPE.f":264 838 {*fop_sf_comm}
     (nil))
(insn 703 702 704 45 (set (reg:SF 21 xmm0 [968])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [1 p00k+0 S4 A32])) "CALCAPE.f":264 131 {*movsf_internal}
     (nil))
(insn 704 703 705 45 (set (reg:SF 21 xmm0 [orig:314 _228 ] [314])
        (minus:SF (reg:SF 21 xmm0 [968])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -128 [0xffffffffffffff80])) [1 p10k+0 S4 A32]))) "CALCAPE.f":264 841 {*fop_sf_1}
     (nil))
(insn 705 704 706 45 (set (reg:SF 21 xmm0 [orig:315 _229 ] [315])
        (minus:SF (reg:SF 21 xmm0 [orig:314 _228 ] [314])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -132 [0xffffffffffffff7c])) [1 p01k+0 S4 A32]))) "CALCAPE.f":264 841 {*fop_sf_1}
     (nil))
(insn 706 705 707 45 (set (reg:SF 21 xmm0 [orig:316 _230 ] [316])
        (plus:SF (reg:SF 21 xmm0 [orig:315 _229 ] [315])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -136 [0xffffffffffffff78])) [1 p11k+0 S4 A32]))) "CALCAPE.f":264 838 {*fop_sf_comm}
     (nil))
(insn 707 706 708 45 (set (reg:SF 23 xmm2 [orig:317 _231 ] [317])
        (reg:SF 21 xmm0 [orig:316 _230 ] [316])) "CALCAPE.f":264 131 {*movsf_internal}
     (nil))
(insn 708 707 709 45 (set (reg:SI 0 ax [969])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":264 86 {*movsi_internal}
     (nil))
(insn 709 708 710 45 (set (reg:DI 0 ax [orig:318 _232 ] [318])
        (sign_extend:DI (reg:SI 0 ax [969]))) "CALCAPE.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 710 709 711 45 (parallel [
            (set (reg:DI 1 dx [orig:319 _233 ] [319])
                (mult:DI (reg:DI 0 ax [orig:318 _232 ] [318])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":264 349 {*muldi3_1}
     (nil))
(insn 711 710 712 45 (set (reg:SI 0 ax [970])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":264 86 {*movsi_internal}
     (nil))
(insn 712 711 713 45 (set (reg:DI 0 ax [orig:320 _234 ] [320])
        (sign_extend:DI (reg:SI 0 ax [970]))) "CALCAPE.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 713 712 714 45 (parallel [
            (set (reg:DI 0 ax [orig:321 _235 ] [321])
                (plus:DI (reg:DI 0 ax [orig:320 _234 ] [320])
                    (reg:DI 1 dx [orig:319 _233 ] [319])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":264 222 {*adddi_1}
     (nil))
(insn 714 713 715 45 (parallel [
            (set (reg:DI 1 dx [orig:322 _236 ] [322])
                (plus:DI (reg:DI 0 ax [orig:321 _235 ] [321])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":264 222 {*adddi_1}
     (nil))
(insn 715 714 716 45 (set (reg/f:DI 0 ax [971])
        (symbol_ref:DI ("pp.4181") [flags 0x202]  <var_decl 0x7f0daa8aaf30 pp>)) "CALCAPE.f":264 85 {*movdi_internal}
     (nil))
(insn 716 715 717 45 (set (reg:SF 21 xmm0 [orig:323 _237 ] [323])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:322 _236 ] [322])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [971])) [1 pp S4 A32])) "CALCAPE.f":264 131 {*movsf_internal}
     (nil))
(insn 717 716 718 45 (set (reg:SF 23 xmm2 [orig:324 _238 ] [324])
        (mult:SF (reg:SF 23 xmm2 [orig:317 _231 ] [317])
            (reg:SF 21 xmm0 [orig:323 _237 ] [323]))) "CALCAPE.f":264 838 {*fop_sf_comm}
     (nil))
(insn 718 717 719 45 (set (reg:SI 0 ax [972])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":264 86 {*movsi_internal}
     (nil))
(insn 719 718 720 45 (set (reg:DI 0 ax [orig:325 _239 ] [325])
        (sign_extend:DI (reg:SI 0 ax [972]))) "CALCAPE.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 720 719 721 45 (parallel [
            (set (reg:DI 1 dx [orig:326 _240 ] [326])
                (mult:DI (reg:DI 0 ax [orig:325 _239 ] [325])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":264 349 {*muldi3_1}
     (nil))
(insn 721 720 722 45 (set (reg:SI 0 ax [973])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":264 86 {*movsi_internal}
     (nil))
(insn 722 721 723 45 (set (reg:DI 0 ax [orig:327 _241 ] [327])
        (sign_extend:DI (reg:SI 0 ax [973]))) "CALCAPE.f":264 149 {*extendsidi2_rex64}
     (nil))
(insn 723 722 724 45 (parallel [
            (set (reg:DI 0 ax [orig:328 _242 ] [328])
                (plus:DI (reg:DI 0 ax [orig:327 _241 ] [327])
                    (reg:DI 1 dx [orig:326 _240 ] [326])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":264 222 {*adddi_1}
     (nil))
(insn 724 723 725 45 (parallel [
            (set (reg:DI 1 dx [orig:329 _243 ] [329])
                (plus:DI (reg:DI 0 ax [orig:328 _242 ] [328])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":264 222 {*adddi_1}
     (nil))
(insn 725 724 726 45 (set (reg/f:DI 0 ax [974])
        (symbol_ref:DI ("qq.4188") [flags 0x202]  <var_decl 0x7f0daa8ac240 qq>)) "CALCAPE.f":264 85 {*movdi_internal}
     (nil))
(insn 726 725 727 45 (set (reg:SF 21 xmm0 [orig:330 _244 ] [330])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:329 _243 ] [329])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [974])) [1 qq S4 A32])) "CALCAPE.f":264 131 {*movsf_internal}
     (nil))
(insn 727 726 728 45 (set (reg:SF 21 xmm0 [orig:331 _245 ] [331])
        (mult:SF (reg:SF 21 xmm0 [orig:330 _244 ] [330])
            (reg:SF 23 xmm2 [orig:324 _238 ] [324]))) "CALCAPE.f":264 838 {*fop_sf_comm}
     (nil))
(insn 728 727 729 45 (set (reg:SF 21 xmm0 [975])
        (plus:SF (reg:SF 21 xmm0 [orig:331 _245 ] [331])
            (reg:SF 22 xmm1 [orig:313 _227 ] [313]))) "CALCAPE.f":264 838 {*fop_sf_comm}
     (nil))
(insn 729 728 730 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [1 tpspk+0 S4 A32])
        (reg:SF 21 xmm0 [975])) "CALCAPE.f":264 131 {*movsf_internal}
     (nil))
(insn 730 729 731 45 (set (reg:SF 21 xmm0 [976])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":265 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+5 [0x0.c35p+17])
        (nil)))
(insn 731 730 733 45 (set (reg:SF 21 xmm0 [orig:332 _246 ] [332])
        (div:SF (reg:SF 21 xmm0 [976])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -140 [0xffffffffffffff74])) [1 tpspk+0 S4 A32]))) "CALCAPE.f":265 841 {*fop_sf_1}
     (nil))
(insn 733 731 735 45 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":265 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.8589642047882080078125e-1 [0x0.926104p-1])
        (nil)))
(call_insn/u 735 733 736 45 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0daa706100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALCAPE.f":265 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 736 735 737 45 (set (reg:SF 0 ax [977])
        (reg:SF 21 xmm0)) "CALCAPE.f":265 131 {*movsf_internal}
     (nil))
(insn 737 736 738 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [1 apespk+0 S4 A32])
        (reg:SF 0 ax [977])) "CALCAPE.f":265 131 {*movsf_internal}
     (nil))
(insn 738 737 739 45 (set (reg:SF 22 xmm1 [978])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 qbtk+0 S4 A32])) "CALCAPE.f":266 131 {*movsf_internal}
     (nil))
(insn 739 738 740 45 (set (reg:SF 21 xmm0 [979])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":266 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.70754541015625e+3 [0x0.a938bap+12])
        (nil)))
(insn 740 739 741 45 (set (reg:SF 21 xmm0 [orig:333 _247 ] [333])
        (mult:SF (reg:SF 21 xmm0 [979])
            (reg:SF 22 xmm1 [978]))) "CALCAPE.f":266 838 {*fop_sf_comm}
     (nil))
(insn 741 740 742 45 (set (reg:SF 21 xmm0 [orig:334 _248 ] [334])
        (mult:SF (reg:SF 21 xmm0 [orig:333 _247 ] [333])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -144 [0xffffffffffffff70])) [1 apespk+0 S4 A32]))) "CALCAPE.f":266 838 {*fop_sf_comm}
     (nil))
(insn 742 741 744 45 (set (reg:SF 21 xmm0 [orig:335 _249 ] [335])
        (div:SF (reg:SF 21 xmm0 [orig:334 _248 ] [334])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])) [1 tthbtk+0 S4 A32]))) "CALCAPE.f":266 841 {*fop_sf_1}
     (nil))
(call_insn/u 744 742 745 45 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("expf") [flags 0x41]  <function_decl 0x7f0daa6f9300 __builtin_expf>) [0 __builtin_expf S1 A8])
            (const_int 0 [0]))) "CALCAPE.f":266 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 745 744 746 45 (set (reg:SF 22 xmm1 [orig:336 _250 ] [336])
        (reg:SF 21 xmm0)) "CALCAPE.f":266 131 {*movsf_internal}
     (nil))
(insn 746 745 747 45 (set (reg:SF 21 xmm0 [981])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 tthbtk+0 S4 A32])) "CALCAPE.f":266 131 {*movsf_internal}
     (nil))
(insn 747 746 748 45 (set (reg:SF 21 xmm0 [980])
        (mult:SF (reg:SF 21 xmm0 [981])
            (reg:SF 22 xmm1 [orig:336 _250 ] [336]))) "CALCAPE.f":266 838 {*fop_sf_comm}
     (nil))
(insn 748 747 749 45 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [1 tthesk+0 S4 A32])
        (reg:SF 21 xmm0 [980])) "CALCAPE.f":266 131 {*movsf_internal}
     (nil))
(insn 749 748 750 45 (set (reg:SI 0 ax [982])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":268 86 {*movsi_internal}
     (nil))
(insn 750 749 751 45 (set (reg:DI 0 ax [orig:337 _251 ] [337])
        (sign_extend:DI (reg:SI 0 ax [982]))) "CALCAPE.f":268 149 {*extendsidi2_rex64}
     (nil))
(insn 751 750 752 45 (parallel [
            (set (reg:DI 1 dx [orig:338 _252 ] [338])
                (mult:DI (reg:DI 0 ax [orig:337 _251 ] [337])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":268 349 {*muldi3_1}
     (nil))
(insn 752 751 753 45 (set (reg:SI 0 ax [983])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":268 86 {*movsi_internal}
     (nil))
(insn 753 752 754 45 (set (reg:DI 0 ax [orig:339 _253 ] [339])
        (sign_extend:DI (reg:SI 0 ax [983]))) "CALCAPE.f":268 149 {*extendsidi2_rex64}
     (nil))
(insn 754 753 755 45 (parallel [
            (set (reg:DI 0 ax [orig:340 _254 ] [340])
                (plus:DI (reg:DI 0 ax [orig:339 _253 ] [339])
                    (reg:DI 1 dx [orig:338 _252 ] [338])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":268 222 {*adddi_1}
     (nil))
(insn 755 754 756 45 (parallel [
            (set (reg:DI 1 dx [orig:341 _255 ] [341])
                (plus:DI (reg:DI 0 ax [orig:340 _254 ] [340])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":268 222 {*adddi_1}
     (nil))
(insn 756 755 757 45 (set (reg/f:DI 0 ax [984])
        (symbol_ref:DI ("thesp.4194") [flags 0x202]  <var_decl 0x7f0daa8ac510 thesp>)) "CALCAPE.f":268 85 {*movdi_internal}
     (nil))
(insn 757 756 758 45 (set (reg:SF 22 xmm1 [orig:342 _256 ] [342])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:341 _255 ] [341])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [984])) [1 thesp S4 A32])) "CALCAPE.f":268 131 {*movsf_internal}
     (nil))
(insn 758 757 759 45 (set (reg:SF 21 xmm0 [985])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [1 tthesk+0 S4 A32])) "CALCAPE.f":268 131 {*movsf_internal}
     (nil))
(insn 759 758 760 45 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [985])
            (reg:SF 22 xmm1 [orig:342 _256 ] [342]))) "CALCAPE.f":268 53 {*cmpisf}
     (nil))
(jump_insn 760 759 764 45 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 785)
            (pc))) "CALCAPE.f":268 682 {*jcc}
     (nil)
 -> 785)
;;  succ:       46 (FALLTHRU)
;;              47
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 46, loop depth 0, maybe hot
;;  prev block 45, next block 47, flags: (RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 343 344 345 346 347 348 349 350 351 352 986 987 988 989 990 991 992 993
(note 764 760 765 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 765 764 766 46 (set (reg:SI 0 ax [986])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":269 86 {*movsi_internal}
     (nil))
(insn 766 765 767 46 (set (reg:DI 0 ax [orig:343 _257 ] [343])
        (sign_extend:DI (reg:SI 0 ax [986]))) "CALCAPE.f":269 149 {*extendsidi2_rex64}
     (nil))
(insn 767 766 768 46 (parallel [
            (set (reg:DI 1 dx [orig:344 _258 ] [344])
                (mult:DI (reg:DI 0 ax [orig:343 _257 ] [343])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":269 349 {*muldi3_1}
     (nil))
(insn 768 767 769 46 (set (reg:SI 0 ax [987])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":269 86 {*movsi_internal}
     (nil))
(insn 769 768 770 46 (set (reg:DI 0 ax [orig:345 _259 ] [345])
        (sign_extend:DI (reg:SI 0 ax [987]))) "CALCAPE.f":269 149 {*extendsidi2_rex64}
     (nil))
(insn 770 769 771 46 (parallel [
            (set (reg:DI 0 ax [orig:346 _260 ] [346])
                (plus:DI (reg:DI 0 ax [orig:345 _259 ] [345])
                    (reg:DI 1 dx [orig:344 _258 ] [344])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":269 222 {*adddi_1}
     (nil))
(insn 771 770 772 46 (parallel [
            (set (reg:DI 1 dx [orig:347 _261 ] [347])
                (plus:DI (reg:DI 0 ax [orig:346 _260 ] [346])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":269 222 {*adddi_1}
     (nil))
(insn 772 771 773 46 (set (reg/f:DI 0 ax [988])
        (symbol_ref:DI ("psp.4185") [flags 0x202]  <var_decl 0x7f0daa8ac120 psp>)) "CALCAPE.f":269 85 {*movdi_internal}
     (nil))
(insn 773 772 774 46 (set (reg:SF 21 xmm0 [989])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -140 [0xffffffffffffff74])) [1 tpspk+0 S4 A32])) "CALCAPE.f":269 131 {*movsf_internal}
     (nil))
(insn 774 773 775 46 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:347 _261 ] [347])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [988])) [1 psp S4 A32])
        (reg:SF 21 xmm0 [989])) "CALCAPE.f":269 131 {*movsf_internal}
     (nil))
(insn 775 774 776 46 (set (reg:SI 0 ax [990])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":270 86 {*movsi_internal}
     (nil))
(insn 776 775 777 46 (set (reg:DI 0 ax [orig:348 _262 ] [348])
        (sign_extend:DI (reg:SI 0 ax [990]))) "CALCAPE.f":270 149 {*extendsidi2_rex64}
     (nil))
(insn 777 776 778 46 (parallel [
            (set (reg:DI 1 dx [orig:349 _263 ] [349])
                (mult:DI (reg:DI 0 ax [orig:348 _262 ] [348])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":270 349 {*muldi3_1}
     (nil))
(insn 778 777 779 46 (set (reg:SI 0 ax [991])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":270 86 {*movsi_internal}
     (nil))
(insn 779 778 780 46 (set (reg:DI 0 ax [orig:350 _264 ] [350])
        (sign_extend:DI (reg:SI 0 ax [991]))) "CALCAPE.f":270 149 {*extendsidi2_rex64}
     (nil))
(insn 780 779 781 46 (parallel [
            (set (reg:DI 0 ax [orig:351 _265 ] [351])
                (plus:DI (reg:DI 0 ax [orig:350 _264 ] [350])
                    (reg:DI 1 dx [orig:349 _263 ] [349])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":270 222 {*adddi_1}
     (nil))
(insn 781 780 782 46 (parallel [
            (set (reg:DI 1 dx [orig:352 _266 ] [352])
                (plus:DI (reg:DI 0 ax [orig:351 _265 ] [351])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":270 222 {*adddi_1}
     (nil))
(insn 782 781 783 46 (set (reg/f:DI 0 ax [992])
        (symbol_ref:DI ("thesp.4194") [flags 0x202]  <var_decl 0x7f0daa8ac510 thesp>)) "CALCAPE.f":270 85 {*movdi_internal}
     (nil))
(insn 783 782 784 46 (set (reg:SF 21 xmm0 [993])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -148 [0xffffffffffffff6c])) [1 tthesk+0 S4 A32])) "CALCAPE.f":270 131 {*movsf_internal}
     (nil))
(insn 784 783 785 46 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:352 _266 ] [352])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [992])) [1 thesp S4 A32])
        (reg:SF 21 xmm0 [993])) "CALCAPE.f":270 131 {*movsf_internal}
     (nil))
;;  succ:       47 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 47, loop depth 0, maybe hot
;;  prev block 46, next block 155, flags: (RTL, MODIFIED)
;;  pred:       28
;;              29
;;              46 (FALLTHRU)
;;              45
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 785 784 786 47 18 (nil) [3 uses])
(note 786 785 787 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 787 786 1915 47 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":206 221 {*addsi_1}
     (nil))
(jump_insn 1915 787 1916 47 (set (pc)
        (label_ref 788)) "CALCAPE.f":206 683 {jump}
     (nil)
 -> 788)
;;  succ:       26 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

(barrier 1916 1915 1991)
;; basic block 155, loop depth 0, maybe hot
;;  prev block 47, next block 48, flags: (RTL, MODIFIED)
;;  pred:       26
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1991 1916 1990 155 112 (nil) [1 uses])
(note 1990 1991 1992 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 1992 1990 791 155 (const_int 0 [0]) "CALCAPE.f":268 718 {nop}
     (nil))
;;  succ:       48 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

;; basic block 48, loop depth 0, maybe hot
;;  prev block 155, next block 154, flags: (RTL, MODIFIED)
;;  pred:       155 [always]  (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 791 1992 792 48 16 (nil) [0 uses])
(note 792 791 793 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 793 792 1917 48 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":205 221 {*addsi_1}
     (nil))
(jump_insn 1917 793 1918 48 (set (pc)
        (label_ref 794)) "CALCAPE.f":205 683 {jump}
     (nil)
 -> 794)
;;  succ:       24 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 699

(barrier 1918 1917 1988)
;; basic block 154, loop depth 0, maybe hot
;;  prev block 48, next block 49, flags: (RTL, MODIFIED)
;;  pred:       22
;;              24
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1988 1918 1987 154 111 (nil) [2 uses])
(note 1987 1988 1989 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 1989 1987 797 154 (const_int 0 [0]) "CALCAPE.f":206 718 {nop}
     (nil))
;;  succ:       49 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, maybe hot
;;  prev block 154, next block 153, flags: (RTL, MODIFIED)
;;  pred:       154 [always]  (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 797 1989 798 49 15 (nil) [0 uses])
(note 798 797 799 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 799 798 1919 49 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [2 kb+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [2 kb+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":203 221 {*addsi_1}
     (nil))
(jump_insn 1919 799 1920 49 (set (pc)
        (label_ref 800)) "CALCAPE.f":203 683 {jump}
     (nil)
 -> 800)
;;  succ:       20 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1920 1919 1985)
;; basic block 153, loop depth 0, maybe hot
;;  prev block 49, next block 50, flags: (RTL, MODIFIED)
;;  pred:       20
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1985 1920 1984 153 110 (nil) [1 uses])
(note 1984 1985 1986 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 1986 1984 803 153 (const_int 0 [0]) "CALCAPE.f":205 718 {nop}
     (nil))
;;  succ:       50 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 50, loop depth 0, maybe hot
;;  prev block 153, next block 51, flags: (RTL, MODIFIED)
;;  pred:       153 [always]  (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 803 1986 804 50 13 (nil) [0 uses])
(note 804 803 805 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 805 804 893 50 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
        (const_int 1 [0x1])) "CALCAPE.f":278 86 {*movsi_internal}
     (nil))
;;  succ:       51 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 51, loop depth 0, maybe hot
;;  prev block 50, next block 52, flags: (RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;;              60 [always] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 705 994
(code_label 893 805 806 51 38 (nil) [1 uses])
(note 806 893 807 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 807 806 808 51 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
            (const_int 38 [0x26]))) "CALCAPE.f":278 11 {*cmpsi_1}
     (nil))
(insn 808 807 809 51 (set (reg:QI 0 ax [994])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":278 678 {*setcc_qi}
     (nil))
(insn 809 808 810 51 (set (reg:SI 0 ax [orig:705 _786 ] [705])
        (zero_extend:SI (reg:QI 0 ax [994]))) "CALCAPE.f":278 140 {*zero_extendqisi2}
     (nil))
(insn 810 809 811 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:705 _786 ] [705])
            (const_int 0 [0]))) "CALCAPE.f":278 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 811 810 812 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1994)
            (pc))) "CALCAPE.f":278 682 {*jcc}
     (nil)
 -> 1994)
;;  succ:       156
;;              52 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 53, flags: (RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 706 707
(note 812 811 813 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 813 812 814 52 (set (reg:SI 1 dx [orig:706 _787 ] [706])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 16 [0x10]))) [2 parallel.jsta_m+0 S4 A128])) "CALCAPE.f":281 86 {*movsi_internal}
     (nil))
(insn 814 813 815 52 (set (reg:SI 0 ax [orig:707 _788 ] [707])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 20 [0x14]))) [2 parallel.jend_m+0 S4 A32])) "CALCAPE.f":281 86 {*movsi_internal}
     (nil))
(insn 815 814 887 52 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:706 _787 ] [706])) "CALCAPE.f":281 86 {*movsi_internal}
     (nil))
;;  succ:       53 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707

;; basic block 53, loop depth 0, maybe hot
;;  prev block 52, next block 54, flags: (RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;;              59 [always] 
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707
;; lr  def 	 17 [flags] 708 995
(code_label 887 815 816 53 37 (nil) [1 uses])
(note 816 887 817 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 817 816 818 53 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:707 _788 ] [707]))) "CALCAPE.f":281 11 {*cmpsi_1}
     (nil))
(insn 818 817 819 53 (set (reg:QI 1 dx [995])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":281 678 {*setcc_qi}
     (nil))
(insn 819 818 820 53 (set (reg:SI 1 dx [orig:708 _790 ] [708])
        (zero_extend:SI (reg:QI 1 dx [995]))) "CALCAPE.f":281 140 {*zero_extendqisi2}
     (nil))
(insn 820 819 821 53 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:708 _790 ] [708])
            (const_int 0 [0]))) "CALCAPE.f":281 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 821 820 822 53 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1997)
            (pc))) "CALCAPE.f":281 682 {*jcc}
     (nil)
 -> 1997)
;;  succ:       157
;;              54 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707

;; basic block 54, loop depth 0, maybe hot
;;  prev block 53, next block 55, flags: (RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 822 821 823 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 823 822 881 54 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "CALCAPE.f":282 86 {*movsi_internal}
     (nil))
;;  succ:       55 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707

;; basic block 55, loop depth 0, maybe hot
;;  prev block 54, next block 56, flags: (RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;;              58 [always] 
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 709 996
(code_label 881 823 824 55 36 (nil) [1 uses])
(note 824 881 825 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 825 824 826 55 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALCAPE.f":282 11 {*cmpsi_1}
     (nil))
(insn 826 825 827 55 (set (reg:QI 1 dx [996])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":282 678 {*setcc_qi}
     (nil))
(insn 827 826 828 55 (set (reg:SI 1 dx [orig:709 _792 ] [709])
        (zero_extend:SI (reg:QI 1 dx [996]))) "CALCAPE.f":282 140 {*zero_extendqisi2}
     (nil))
(insn 828 827 829 55 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:709 _792 ] [709])
            (const_int 0 [0]))) "CALCAPE.f":282 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 829 828 830 55 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2000)
            (pc))) "CALCAPE.f":282 682 {*jcc}
     (nil)
 -> 2000)
;;  succ:       158
;;              56 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707

;; basic block 56, loop depth 0, maybe hot
;;  prev block 55, next block 57, flags: (RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 997 998 999 1000 1001 1002 1003 1004 1005 1006 1007 1008
(note 830 829 831 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 831 830 832 56 (set (reg:SI 1 dx [997])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":283 86 {*movsi_internal}
     (nil))
(insn 832 831 833 56 (set (reg:DI 1 dx [orig:353 _267 ] [353])
        (sign_extend:DI (reg:SI 1 dx [997]))) "CALCAPE.f":283 149 {*extendsidi2_rex64}
     (nil))
(insn 833 832 834 56 (parallel [
            (set (reg:DI 2 cx [orig:354 _268 ] [354])
                (plus:DI (reg:DI 1 dx [orig:353 _267 ] [353])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":283 222 {*adddi_1}
     (nil))
(insn 834 833 835 56 (set (reg/f:DI 1 dx [998])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":283 85 {*movdi_internal}
     (nil))
(insn 835 834 836 56 (parallel [
            (set (reg:DI 2 cx [999])
                (plus:DI (reg:DI 2 cx [orig:354 _268 ] [354])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":283 222 {*adddi_1}
     (nil))
(insn 836 835 837 56 (set (reg:SF 22 xmm1 [orig:355 _269 ] [355])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [999])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [998])) [1 phys.aeta S4 A32])) "CALCAPE.f":283 131 {*movsf_internal}
     (nil))
(insn 837 836 838 56 (set (reg:SI 1 dx [1000])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":283 86 {*movsi_internal}
     (nil))
(insn 838 837 839 56 (set (reg:DI 1 dx [orig:356 _270 ] [356])
        (sign_extend:DI (reg:SI 1 dx [1000]))) "CALCAPE.f":283 149 {*extendsidi2_rex64}
     (nil))
(insn 839 838 840 56 (parallel [
            (set (reg:DI 2 cx [orig:357 _271 ] [357])
                (mult:DI (reg:DI 1 dx [orig:356 _270 ] [356])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":283 349 {*muldi3_1}
     (nil))
(insn 840 839 841 56 (set (reg:SI 1 dx [1001])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":283 86 {*movsi_internal}
     (nil))
(insn 841 840 842 56 (set (reg:DI 1 dx [orig:358 _272 ] [358])
        (sign_extend:DI (reg:SI 1 dx [1001]))) "CALCAPE.f":283 149 {*extendsidi2_rex64}
     (nil))
(insn 842 841 843 56 (parallel [
            (set (reg:DI 1 dx [orig:359 _273 ] [359])
                (plus:DI (reg:DI 1 dx [orig:358 _272 ] [358])
                    (reg:DI 2 cx [orig:357 _271 ] [357])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":283 222 {*adddi_1}
     (nil))
(insn 843 842 844 56 (parallel [
            (set (reg:DI 2 cx [orig:360 _274 ] [360])
                (plus:DI (reg:DI 1 dx [orig:359 _273 ] [359])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":283 222 {*adddi_1}
     (nil))
(insn 844 843 845 56 (set (reg/f:DI 1 dx [1002])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0daa88c870 extra>)) "CALCAPE.f":283 85 {*movdi_internal}
     (nil))
(insn 845 844 846 56 (parallel [
            (set (reg:DI 2 cx [1003])
                (plus:DI (reg:DI 2 cx [orig:360 _274 ] [360])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":283 222 {*adddi_1}
     (nil))
(insn 846 845 847 56 (set (reg:SF 21 xmm0 [orig:361 _275 ] [361])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1003])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1002])) [1 extra.pdsl S4 A32])) "CALCAPE.f":283 131 {*movsf_internal}
     (nil))
(insn 847 846 848 56 (set (reg:SF 22 xmm1 [orig:362 _276 ] [362])
        (mult:SF (reg:SF 22 xmm1 [orig:355 _269 ] [355])
            (reg:SF 21 xmm0 [orig:361 _275 ] [361]))) "CALCAPE.f":283 838 {*fop_sf_comm}
     (nil))
(insn 848 847 849 56 (set (reg/f:DI 1 dx [1004])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(insn 849 848 850 56 (set (reg:SF 21 xmm0 [orig:363 _277 ] [363])
        (mem/c:SF (plus:DI (reg/f:DI 1 dx [1004])
                (const_int 4 [0x4])) [1 phys.pt+0 S4 A32])) "CALCAPE.f":1 131 {*movsf_internal}
     (nil))
(insn 850 849 851 56 (set (reg:SF 21 xmm0 [1005])
        (plus:SF (reg:SF 21 xmm0 [orig:363 _277 ] [363])
            (reg:SF 22 xmm1 [orig:362 _276 ] [362]))) "CALCAPE.f":283 838 {*fop_sf_comm}
     (nil))
(insn 851 850 852 56 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 pkl+0 S4 A32])
        (reg:SF 21 xmm0 [1005])) "CALCAPE.f":283 131 {*movsf_internal}
     (nil))
(insn 852 851 853 56 (set (reg:SI 1 dx [1006])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":284 86 {*movsi_internal}
     (nil))
(insn 853 852 854 56 (set (reg:DI 1 dx [orig:364 _278 ] [364])
        (sign_extend:DI (reg:SI 1 dx [1006]))) "CALCAPE.f":284 149 {*extendsidi2_rex64}
     (nil))
(insn 854 853 855 56 (parallel [
            (set (reg:DI 2 cx [orig:365 _279 ] [365])
                (mult:DI (reg:DI 1 dx [orig:364 _278 ] [364])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":284 349 {*muldi3_1}
     (nil))
(insn 855 854 856 56 (set (reg:SI 1 dx [1007])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":284 86 {*movsi_internal}
     (nil))
(insn 856 855 857 56 (set (reg:DI 1 dx [orig:366 _280 ] [366])
        (sign_extend:DI (reg:SI 1 dx [1007]))) "CALCAPE.f":284 149 {*extendsidi2_rex64}
     (nil))
(insn 857 856 858 56 (parallel [
            (set (reg:DI 1 dx [orig:367 _281 ] [367])
                (plus:DI (reg:DI 1 dx [orig:366 _280 ] [366])
                    (reg:DI 2 cx [orig:365 _279 ] [365])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":284 222 {*adddi_1}
     (nil))
(insn 858 857 859 56 (parallel [
            (set (reg:DI 2 cx [orig:368 _282 ] [368])
                (plus:DI (reg:DI 1 dx [orig:367 _281 ] [367])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":284 222 {*adddi_1}
     (nil))
(insn 859 858 860 56 (set (reg/f:DI 1 dx [1008])
        (symbol_ref:DI ("psp.4185") [flags 0x202]  <var_decl 0x7f0daa8ac120 psp>)) "CALCAPE.f":284 85 {*movdi_internal}
     (nil))
(insn 860 859 861 56 (set (reg:SF 21 xmm0 [orig:369 _283 ] [369])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:368 _282 ] [368])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1008])) [1 psp S4 A32])) "CALCAPE.f":284 131 {*movsf_internal}
     (nil))
(insn 861 860 862 56 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:369 _283 ] [369])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [1 pkl+0 S4 A32]))) "CALCAPE.f":284 53 {*cmpisf}
     (nil))
(jump_insn 862 861 866 56 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 878)
            (pc))) "CALCAPE.f":284 682 {*jcc}
     (nil)
 -> 878)
;;  succ:       57 (FALLTHRU)
;;              58
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707

;; basic block 57, loop depth 0, maybe hot
;;  prev block 56, next block 58, flags: (RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 370 371 372 373 374 375 1009 1010 1011 1012
(note 866 862 867 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 867 866 868 57 (set (reg:SI 1 dx [1009])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":284 86 {*movsi_internal}
     (nil))
(insn 868 867 869 57 (set (reg:DI 1 dx [orig:370 _284 ] [370])
        (sign_extend:DI (reg:SI 1 dx [1009]))) "CALCAPE.f":284 149 {*extendsidi2_rex64}
     (nil))
(insn 869 868 870 57 (parallel [
            (set (reg:DI 2 cx [orig:371 _285 ] [371])
                (mult:DI (reg:DI 1 dx [orig:370 _284 ] [370])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":284 349 {*muldi3_1}
     (nil))
(insn 870 869 871 57 (set (reg:SI 1 dx [1010])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":284 86 {*movsi_internal}
     (nil))
(insn 871 870 872 57 (set (reg:DI 1 dx [orig:372 _286 ] [372])
        (sign_extend:DI (reg:SI 1 dx [1010]))) "CALCAPE.f":284 149 {*extendsidi2_rex64}
     (nil))
(insn 872 871 873 57 (parallel [
            (set (reg:DI 1 dx [orig:373 _287 ] [373])
                (plus:DI (reg:DI 1 dx [orig:372 _286 ] [372])
                    (reg:DI 2 cx [orig:371 _285 ] [371])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":284 222 {*adddi_1}
     (nil))
(insn 873 872 874 57 (parallel [
            (set (reg:DI 2 cx [orig:374 _288 ] [374])
                (plus:DI (reg:DI 1 dx [orig:373 _287 ] [373])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":284 222 {*adddi_1}
     (nil))
(insn 874 873 875 57 (set (reg:SI 1 dx [1011])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":284 86 {*movsi_internal}
     (nil))
(insn 875 874 876 57 (parallel [
            (set (reg:SI 4 si [orig:375 _289 ] [375])
                (plus:SI (reg:SI 1 dx [1011])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":284 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -36 [0xffffffffffffffdc])) [2 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 876 875 877 57 (set (reg/f:DI 1 dx [1012])
        (symbol_ref:DI ("lcl.4172") [flags 0x202]  <var_decl 0x7f0daa8aaab0 lcl>)) "CALCAPE.f":284 85 {*movdi_internal}
     (nil))
(insn 877 876 878 57 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:374 _288 ] [374])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1012])) [2 lcl S4 A32])
        (reg:SI 4 si [orig:375 _289 ] [375])) "CALCAPE.f":284 86 {*movsi_internal}
     (nil))
;;  succ:       58 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707

;; basic block 58, loop depth 0, maybe hot
;;  prev block 57, next block 158, flags: (RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;;              56
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 878 877 879 58 34 (nil) [1 uses])
(note 879 878 880 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 880 879 1921 58 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":282 221 {*addsi_1}
     (nil))
(jump_insn 1921 880 1922 58 (set (pc)
        (label_ref 881)) "CALCAPE.f":282 683 {jump}
     (nil)
 -> 881)
;;  succ:       55 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707

(barrier 1922 1921 2000)
;; basic block 158, loop depth 0, maybe hot
;;  prev block 58, next block 59, flags: (RTL, MODIFIED)
;;  pred:       55
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2000 1922 1999 158 115 (nil) [1 uses])
(note 1999 2000 2001 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 2001 1999 884 158 (const_int 0 [0]) "CALCAPE.f":284 718 {nop}
     (nil))
;;  succ:       59 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707

;; basic block 59, loop depth 0, maybe hot
;;  prev block 158, next block 157, flags: (RTL, MODIFIED)
;;  pred:       158 [always]  (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 884 2001 885 59 33 (nil) [0 uses])
(note 885 884 886 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 886 885 1923 59 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":281 221 {*addsi_1}
     (nil))
(jump_insn 1923 886 1924 59 (set (pc)
        (label_ref 887)) "CALCAPE.f":281 683 {jump}
     (nil)
 -> 887)
;;  succ:       53 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 707

(barrier 1924 1923 1997)
;; basic block 157, loop depth 0, maybe hot
;;  prev block 59, next block 60, flags: (RTL, MODIFIED)
;;  pred:       53
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1997 1924 1996 157 114 (nil) [1 uses])
(note 1996 1997 1998 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 1998 1996 890 157 (const_int 0 [0]) "CALCAPE.f":282 718 {nop}
     (nil))
;;  succ:       60 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 60, loop depth 0, maybe hot
;;  prev block 157, next block 156, flags: (RTL, MODIFIED)
;;  pred:       157 [always]  (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 890 1998 891 60 32 (nil) [0 uses])
(note 891 890 892 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 892 891 1925 60 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":278 221 {*addsi_1}
     (nil))
(jump_insn 1925 892 1926 60 (set (pc)
        (label_ref 893)) "CALCAPE.f":278 683 {jump}
     (nil)
 -> 893)
;;  succ:       51 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1926 1925 1994)
;; basic block 156, loop depth 0, maybe hot
;;  prev block 60, next block 61, flags: (RTL, MODIFIED)
;;  pred:       51
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1994 1926 1993 156 113 (nil) [1 uses])
(note 1993 1994 1995 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 1995 1993 896 156 (const_int 0 [0]) "CALCAPE.f":281 718 {nop}
     (nil))
;;  succ:       61 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 61, loop depth 0, maybe hot
;;  prev block 156, next block 62, flags: (RTL, MODIFIED)
;;  pred:       156 [always]  (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 710 711
(code_label 896 1995 897 61 31 (nil) [0 uses])
(note 897 896 898 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 898 897 899 61 (set (reg:SI 1 dx [orig:710 _798 ] [710])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 16 [0x10]))) [2 parallel.jsta_m+0 S4 A128])) "CALCAPE.f":289 86 {*movsi_internal}
     (nil))
(insn 899 898 900 61 (set (reg:SI 0 ax [orig:711 _799 ] [711])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 20 [0x14]))) [2 parallel.jend_m+0 S4 A32])) "CALCAPE.f":289 86 {*movsi_internal}
     (nil))
(insn 900 899 966 61 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:710 _798 ] [710])) "CALCAPE.f":289 86 {*movsi_internal}
     (nil))
;;  succ:       62 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711

;; basic block 62, loop depth 0, maybe hot
;;  prev block 61, next block 63, flags: (RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;;              68 [always] 
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711
;; lr  def 	 17 [flags] 712 1013
(code_label 966 900 901 62 43 (nil) [1 uses])
(note 901 966 902 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 902 901 903 62 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:711 _799 ] [711]))) "CALCAPE.f":289 11 {*cmpsi_1}
     (nil))
(insn 903 902 904 62 (set (reg:QI 1 dx [1013])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":289 678 {*setcc_qi}
     (nil))
(insn 904 903 905 62 (set (reg:SI 1 dx [orig:712 _801 ] [712])
        (zero_extend:SI (reg:QI 1 dx [1013]))) "CALCAPE.f":289 140 {*zero_extendqisi2}
     (nil))
(insn 905 904 906 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:712 _801 ] [712])
            (const_int 0 [0]))) "CALCAPE.f":289 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 906 905 907 62 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2003)
            (pc))) "CALCAPE.f":289 682 {*jcc}
     (nil)
 -> 2003)
;;  succ:       159
;;              63 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711

;; basic block 63, loop depth 0, maybe hot
;;  prev block 62, next block 64, flags: (RTL, MODIFIED)
;;  pred:       62 (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 907 906 908 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 908 907 960 63 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "CALCAPE.f":290 86 {*movsi_internal}
     (nil))
;;  succ:       64 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711

;; basic block 64, loop depth 0, maybe hot
;;  prev block 63, next block 65, flags: (RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;;              67 [always] 
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 713 1014
(code_label 960 908 909 64 42 (nil) [1 uses])
(note 909 960 910 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 910 909 911 64 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALCAPE.f":290 11 {*cmpsi_1}
     (nil))
(insn 911 910 912 64 (set (reg:QI 1 dx [1014])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":290 678 {*setcc_qi}
     (nil))
(insn 912 911 913 64 (set (reg:SI 1 dx [orig:713 _803 ] [713])
        (zero_extend:SI (reg:QI 1 dx [1014]))) "CALCAPE.f":290 140 {*zero_extendqisi2}
     (nil))
(insn 913 912 914 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:713 _803 ] [713])
            (const_int 0 [0]))) "CALCAPE.f":290 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 914 913 915 64 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2006)
            (pc))) "CALCAPE.f":290 682 {*jcc}
     (nil)
 -> 2006)
;;  succ:       160
;;              65 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711

;; basic block 65, loop depth 0, maybe hot
;;  prev block 64, next block 66, flags: (RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 376 377 378 379 380 381 382 383 384 385 386 387 1015 1016 1017 1018 1019 1020 1021
(note 915 914 916 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 916 915 917 65 (set (reg:SI 1 dx [1015])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":291 86 {*movsi_internal}
     (nil))
(insn 917 916 918 65 (set (reg:DI 1 dx [orig:376 _290 ] [376])
        (sign_extend:DI (reg:SI 1 dx [1015]))) "CALCAPE.f":291 149 {*extendsidi2_rex64}
     (nil))
(insn 918 917 919 65 (parallel [
            (set (reg:DI 2 cx [orig:377 _291 ] [377])
                (mult:DI (reg:DI 1 dx [orig:376 _290 ] [376])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":291 349 {*muldi3_1}
     (nil))
(insn 919 918 920 65 (set (reg:SI 1 dx [1016])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":291 86 {*movsi_internal}
     (nil))
(insn 920 919 921 65 (set (reg:DI 1 dx [orig:378 _292 ] [378])
        (sign_extend:DI (reg:SI 1 dx [1016]))) "CALCAPE.f":291 149 {*extendsidi2_rex64}
     (nil))
(insn 921 920 922 65 (parallel [
            (set (reg:DI 1 dx [orig:379 _293 ] [379])
                (plus:DI (reg:DI 1 dx [orig:378 _292 ] [378])
                    (reg:DI 2 cx [orig:377 _291 ] [377])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":291 222 {*adddi_1}
     (nil))
(insn 922 921 923 65 (parallel [
            (set (reg:DI 2 cx [orig:380 _294 ] [380])
                (plus:DI (reg:DI 1 dx [orig:379 _293 ] [379])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":291 222 {*adddi_1}
     (nil))
(insn 923 922 924 65 (set (reg/f:DI 1 dx [1017])
        (symbol_ref:DI ("lcl.4172") [flags 0x202]  <var_decl 0x7f0daa8aaab0 lcl>)) "CALCAPE.f":291 85 {*movdi_internal}
     (nil))
(insn 924 923 925 65 (set (reg:SI 2 cx [orig:381 _295 ] [381])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:380 _294 ] [380])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1017])) [2 lcl S4 A32])) "CALCAPE.f":291 86 {*movsi_internal}
     (nil))
(insn 925 924 926 65 (set (reg:SI 1 dx [1018])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":291 86 {*movsi_internal}
     (nil))
(insn 926 925 927 65 (set (reg:DI 1 dx [orig:382 _296 ] [382])
        (sign_extend:DI (reg:SI 1 dx [1018]))) "CALCAPE.f":291 149 {*extendsidi2_rex64}
     (nil))
(insn 927 926 928 65 (parallel [
            (set (reg:DI 4 si [orig:383 _297 ] [383])
                (mult:DI (reg:DI 1 dx [orig:382 _296 ] [382])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":291 349 {*muldi3_1}
     (nil))
(insn 928 927 929 65 (set (reg:SI 1 dx [1019])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":291 86 {*movsi_internal}
     (nil))
(insn 929 928 930 65 (set (reg:DI 1 dx [orig:384 _298 ] [384])
        (sign_extend:DI (reg:SI 1 dx [1019]))) "CALCAPE.f":291 149 {*extendsidi2_rex64}
     (nil))
(insn 930 929 931 65 (parallel [
            (set (reg:DI 1 dx [orig:385 _299 ] [385])
                (plus:DI (reg:DI 1 dx [orig:384 _298 ] [384])
                    (reg:DI 4 si [orig:383 _297 ] [383])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":291 222 {*adddi_1}
     (nil))
(insn 931 930 932 65 (parallel [
            (set (reg:DI 4 si [orig:386 _300 ] [386])
                (plus:DI (reg:DI 1 dx [orig:385 _299 ] [385])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":291 222 {*adddi_1}
     (nil))
(insn 932 931 933 65 (set (reg/f:DI 1 dx [1020])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f0daa894990 loops>)) "CALCAPE.f":291 85 {*movdi_internal}
     (nil))
(insn 933 932 934 65 (parallel [
            (set (reg:DI 4 si [1021])
                (plus:DI (reg:DI 4 si [orig:386 _300 ] [386])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":291 222 {*adddi_1}
     (nil))
(insn 934 933 935 65 (set (reg:SI 1 dx [orig:387 _301 ] [387])
        (mem:SI (plus:DI (mult:DI (reg:DI 4 si [1021])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1020])) [2 loops.lmh S4 A32])) "CALCAPE.f":291 86 {*movsi_internal}
     (nil))
(insn 935 934 936 65 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 2 cx [orig:381 _295 ] [381])
            (reg:SI 1 dx [orig:387 _301 ] [387]))) "CALCAPE.f":291 11 {*cmpsi_1}
     (nil))
(jump_insn 936 935 937 65 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 957)
            (pc))) "CALCAPE.f":291 682 {*jcc}
     (nil)
 -> 957)
;;  succ:       66 (FALLTHRU)
;;              67
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711

;; basic block 66, loop depth 0, maybe hot
;;  prev block 65, next block 67, flags: (RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 388 389 390 391 392 393 394 395 396 397 398 1022 1023 1024 1025 1026 1027 1028
(note 937 936 938 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 938 937 939 66 (set (reg:SI 1 dx [1022])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":291 86 {*movsi_internal}
     (nil))
(insn 939 938 940 66 (set (reg:DI 1 dx [orig:388 _302 ] [388])
        (sign_extend:DI (reg:SI 1 dx [1022]))) "CALCAPE.f":291 149 {*extendsidi2_rex64}
     (nil))
(insn 940 939 941 66 (parallel [
            (set (reg:DI 2 cx [orig:389 _303 ] [389])
                (mult:DI (reg:DI 1 dx [orig:388 _302 ] [388])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":291 349 {*muldi3_1}
     (nil))
(insn 941 940 942 66 (set (reg:SI 1 dx [1023])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":291 86 {*movsi_internal}
     (nil))
(insn 942 941 943 66 (set (reg:DI 1 dx [orig:390 _304 ] [390])
        (sign_extend:DI (reg:SI 1 dx [1023]))) "CALCAPE.f":291 149 {*extendsidi2_rex64}
     (nil))
(insn 943 942 944 66 (parallel [
            (set (reg:DI 1 dx [orig:391 _305 ] [391])
                (plus:DI (reg:DI 1 dx [orig:390 _304 ] [390])
                    (reg:DI 2 cx [orig:389 _303 ] [389])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":291 222 {*adddi_1}
     (nil))
(insn 944 943 945 66 (parallel [
            (set (reg:DI 5 di [orig:392 _306 ] [392])
                (plus:DI (reg:DI 1 dx [orig:391 _305 ] [391])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":291 222 {*adddi_1}
     (nil))
(insn 945 944 946 66 (set (reg:SI 1 dx [1024])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":291 86 {*movsi_internal}
     (nil))
(insn 946 945 947 66 (set (reg:DI 1 dx [orig:393 _307 ] [393])
        (sign_extend:DI (reg:SI 1 dx [1024]))) "CALCAPE.f":291 149 {*extendsidi2_rex64}
     (nil))
(insn 947 946 948 66 (parallel [
            (set (reg:DI 2 cx [orig:394 _308 ] [394])
                (mult:DI (reg:DI 1 dx [orig:393 _307 ] [393])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":291 349 {*muldi3_1}
     (nil))
(insn 948 947 949 66 (set (reg:SI 1 dx [1025])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":291 86 {*movsi_internal}
     (nil))
(insn 949 948 950 66 (set (reg:DI 1 dx [orig:395 _309 ] [395])
        (sign_extend:DI (reg:SI 1 dx [1025]))) "CALCAPE.f":291 149 {*extendsidi2_rex64}
     (nil))
(insn 950 949 951 66 (parallel [
            (set (reg:DI 1 dx [orig:396 _310 ] [396])
                (plus:DI (reg:DI 1 dx [orig:395 _309 ] [395])
                    (reg:DI 2 cx [orig:394 _308 ] [394])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":291 222 {*adddi_1}
     (nil))
(insn 951 950 952 66 (parallel [
            (set (reg:DI 4 si [orig:397 _311 ] [397])
                (plus:DI (reg:DI 1 dx [orig:396 _310 ] [396])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":291 222 {*adddi_1}
     (nil))
(insn 952 951 953 66 (set (reg/f:DI 1 dx [1026])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f0daa894990 loops>)) "CALCAPE.f":291 85 {*movdi_internal}
     (nil))
(insn 953 952 954 66 (parallel [
            (set (reg:DI 2 cx [1027])
                (plus:DI (reg:DI 5 di [orig:392 _306 ] [392])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":291 222 {*adddi_1}
     (nil))
(insn 954 953 955 66 (set (reg:SI 1 dx [orig:398 _312 ] [398])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [1027])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1026])) [2 loops.lmh S4 A32])) "CALCAPE.f":291 86 {*movsi_internal}
     (nil))
(insn 955 954 956 66 (set (reg/f:DI 2 cx [1028])
        (symbol_ref:DI ("lcl.4172") [flags 0x202]  <var_decl 0x7f0daa8aaab0 lcl>)) "CALCAPE.f":291 85 {*movdi_internal}
     (nil))
(insn 956 955 957 66 (set (mem:SI (plus:DI (mult:DI (reg:DI 4 si [orig:397 _311 ] [397])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [1028])) [2 lcl S4 A32])
        (reg:SI 1 dx [orig:398 _312 ] [398])) "CALCAPE.f":291 86 {*movsi_internal}
     (nil))
;;  succ:       67 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711

;; basic block 67, loop depth 0, maybe hot
;;  prev block 66, next block 160, flags: (RTL, MODIFIED)
;;  pred:       65
;;              66 (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 957 956 958 67 41 (nil) [1 uses])
(note 958 957 959 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 959 958 1927 67 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":290 221 {*addsi_1}
     (nil))
(jump_insn 1927 959 1928 67 (set (pc)
        (label_ref 960)) "CALCAPE.f":290 683 {jump}
     (nil)
 -> 960)
;;  succ:       64 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711

(barrier 1928 1927 2006)
;; basic block 160, loop depth 0, maybe hot
;;  prev block 67, next block 68, flags: (RTL, MODIFIED)
;;  pred:       64
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2006 1928 2005 160 117 (nil) [1 uses])
(note 2005 2006 2007 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 2007 2005 963 160 (const_int 0 [0]) "CALCAPE.f":291 718 {nop}
     (nil))
;;  succ:       68 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711

;; basic block 68, loop depth 0, maybe hot
;;  prev block 160, next block 159, flags: (RTL, MODIFIED)
;;  pred:       160 [always]  (FALLTHRU)
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 963 2007 964 68 40 (nil) [0 uses])
(note 964 963 965 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 965 964 1929 68 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":289 221 {*addsi_1}
     (nil))
(jump_insn 1929 965 1930 68 (set (pc)
        (label_ref 966)) "CALCAPE.f":289 683 {jump}
     (nil)
 -> 966)
;;  succ:       62 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 711

(barrier 1930 1929 2003)
;; basic block 159, loop depth 0, maybe hot
;;  prev block 68, next block 69, flags: (RTL, MODIFIED)
;;  pred:       62
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2003 1930 2002 159 116 (nil) [1 uses])
(note 2002 2003 2004 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 2004 2002 969 159 (const_int 0 [0]) "CALCAPE.f":290 718 {nop}
     (nil))
;;  succ:       69 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 69, loop depth 0, maybe hot
;;  prev block 159, next block 70, flags: (RTL, MODIFIED)
;;  pred:       159 [always]  (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 969 2004 970 69 39 (nil) [0 uses])
(note 970 969 971 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 971 970 1373 69 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
        (const_int 38 [0x26])) "CALCAPE.f":298 86 {*movsi_internal}
     (nil))
;;  succ:       70 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 70, loop depth 0, maybe hot
;;  prev block 69, next block 71, flags: (RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;;              103 [always] 
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 714 1029
(code_label 1373 971 972 70 67 (nil) [1 uses])
(note 972 1373 973 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 973 972 974 70 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
            (const_int 0 [0]))) "CALCAPE.f":298 7 {*cmpsi_ccno_1}
     (nil))
(insn 974 973 975 70 (set (reg:QI 0 ax [1029])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":298 678 {*setcc_qi}
     (nil))
(insn 975 974 976 70 (set (reg:SI 0 ax [orig:714 _808 ] [714])
        (zero_extend:SI (reg:QI 0 ax [1029]))) "CALCAPE.f":298 140 {*zero_extendqisi2}
     (nil))
(insn 976 975 977 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:714 _808 ] [714])
            (const_int 0 [0]))) "CALCAPE.f":298 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 977 976 978 70 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2009)
            (pc))) "CALCAPE.f":298 682 {*jcc}
     (nil)
 -> 2009)
;;  succ:       161
;;              71 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 71, loop depth 0, maybe hot
;;  prev block 70, next block 72, flags: (RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 715 716
(note 978 977 979 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 979 978 980 71 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 knuml+0 S4 A32])
        (const_int 0 [0])) "CALCAPE.f":300 86 {*movsi_internal}
     (nil))
(insn 980 979 981 71 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 knumh+0 S4 A32])
        (const_int 0 [0])) "CALCAPE.f":301 86 {*movsi_internal}
     (nil))
(insn 981 980 982 71 (set (reg:SI 1 dx [orig:715 _811 ] [715])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 16 [0x10]))) [2 parallel.jsta_m+0 S4 A128])) "CALCAPE.f":302 86 {*movsi_internal}
     (nil))
(insn 982 981 983 71 (set (reg:SI 0 ax [orig:716 _812 ] [716])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 20 [0x14]))) [2 parallel.jend_m+0 S4 A32])) "CALCAPE.f":302 86 {*movsi_internal}
     (nil))
(insn 983 982 1093 71 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:715 _811 ] [715])) "CALCAPE.f":302 86 {*movsi_internal}
     (nil))
;;  succ:       72 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716

;; basic block 72, loop depth 0, maybe hot
;;  prev block 71, next block 73, flags: (RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;;              80 [always] 
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716
;; lr  def 	 17 [flags] 717 1030
(code_label 1093 983 984 72 52 (nil) [1 uses])
(note 984 1093 985 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 985 984 986 72 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:716 _812 ] [716]))) "CALCAPE.f":302 11 {*cmpsi_1}
     (nil))
(insn 986 985 987 72 (set (reg:QI 1 dx [1030])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":302 678 {*setcc_qi}
     (nil))
(insn 987 986 988 72 (set (reg:SI 1 dx [orig:717 _814 ] [717])
        (zero_extend:SI (reg:QI 1 dx [1030]))) "CALCAPE.f":302 140 {*zero_extendqisi2}
     (nil))
(insn 988 987 989 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:717 _814 ] [717])
            (const_int 0 [0]))) "CALCAPE.f":302 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 989 988 990 72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2012)
            (pc))) "CALCAPE.f":302 682 {*jcc}
     (nil)
 -> 2012)
;;  succ:       162
;;              73 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716

;; basic block 73, loop depth 0, maybe hot
;;  prev block 72, next block 74, flags: (RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 990 989 991 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 991 990 1087 73 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "CALCAPE.f":303 86 {*movsi_internal}
     (nil))
;;  succ:       74 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716

;; basic block 74, loop depth 0, maybe hot
;;  prev block 73, next block 75, flags: (RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;;              79 [always] 
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 718 1031
(code_label 1087 991 992 74 51 (nil) [1 uses])
(note 992 1087 993 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 993 992 994 74 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALCAPE.f":303 11 {*cmpsi_1}
     (nil))
(insn 994 993 995 74 (set (reg:QI 1 dx [1031])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":303 678 {*setcc_qi}
     (nil))
(insn 995 994 996 74 (set (reg:SI 1 dx [orig:718 _816 ] [718])
        (zero_extend:SI (reg:QI 1 dx [1031]))) "CALCAPE.f":303 140 {*zero_extendqisi2}
     (nil))
(insn 996 995 997 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:718 _816 ] [718])
            (const_int 0 [0]))) "CALCAPE.f":303 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 997 996 998 74 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2015)
            (pc))) "CALCAPE.f":303 682 {*jcc}
     (nil)
 -> 2015)
;;  succ:       163
;;              75 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716

;; basic block 75, loop depth 0, maybe hot
;;  prev block 74, next block 76, flags: (RTL, MODIFIED)
;;  pred:       74 (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 1032 1033 1034 1035 1036 1037 1038 1039 1040 1041 1042 1043 1044 1045 1046 1047 1048 1049
(note 998 997 999 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 999 998 1000 75 (set (reg:SI 1 dx [1032])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":304 86 {*movsi_internal}
     (nil))
(insn 1000 999 1001 75 (set (reg:DI 1 dx [orig:399 _313 ] [399])
        (sign_extend:DI (reg:SI 1 dx [1032]))) "CALCAPE.f":304 149 {*extendsidi2_rex64}
     (nil))
(insn 1001 1000 1002 75 (parallel [
            (set (reg:DI 2 cx [orig:400 _314 ] [400])
                (mult:DI (reg:DI 1 dx [orig:399 _313 ] [399])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":304 349 {*muldi3_1}
     (nil))
(insn 1002 1001 1003 75 (set (reg:SI 1 dx [1033])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":304 86 {*movsi_internal}
     (nil))
(insn 1003 1002 1004 75 (set (reg:DI 1 dx [orig:401 _315 ] [401])
        (sign_extend:DI (reg:SI 1 dx [1033]))) "CALCAPE.f":304 149 {*extendsidi2_rex64}
     (nil))
(insn 1004 1003 1005 75 (parallel [
            (set (reg:DI 1 dx [orig:402 _316 ] [402])
                (plus:DI (reg:DI 1 dx [orig:401 _315 ] [401])
                    (reg:DI 2 cx [orig:400 _314 ] [400])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":304 222 {*adddi_1}
     (nil))
(insn 1005 1004 1006 75 (parallel [
            (set (reg:DI 2 cx [orig:403 _317 ] [403])
                (plus:DI (reg:DI 1 dx [orig:402 _316 ] [402])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":304 222 {*adddi_1}
     (nil))
(insn 1006 1005 1007 75 (set (reg/f:DI 1 dx [1034])
        (symbol_ref:DI ("klres.4166") [flags 0x202]  <var_decl 0x7f0daa8aa7e0 klres>)) "CALCAPE.f":304 85 {*movdi_internal}
     (nil))
(insn 1007 1006 1008 75 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:403 _317 ] [403])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1034])) [2 klres S4 A32])
        (const_int 0 [0])) "CALCAPE.f":304 86 {*movsi_internal}
     (nil))
(insn 1008 1007 1009 75 (set (reg:SI 1 dx [1035])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":305 86 {*movsi_internal}
     (nil))
(insn 1009 1008 1010 75 (set (reg:DI 1 dx [orig:404 _318 ] [404])
        (sign_extend:DI (reg:SI 1 dx [1035]))) "CALCAPE.f":305 149 {*extendsidi2_rex64}
     (nil))
(insn 1010 1009 1011 75 (parallel [
            (set (reg:DI 2 cx [orig:405 _319 ] [405])
                (mult:DI (reg:DI 1 dx [orig:404 _318 ] [404])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":305 349 {*muldi3_1}
     (nil))
(insn 1011 1010 1012 75 (set (reg:SI 1 dx [1036])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":305 86 {*movsi_internal}
     (nil))
(insn 1012 1011 1013 75 (set (reg:DI 1 dx [orig:406 _320 ] [406])
        (sign_extend:DI (reg:SI 1 dx [1036]))) "CALCAPE.f":305 149 {*extendsidi2_rex64}
     (nil))
(insn 1013 1012 1014 75 (parallel [
            (set (reg:DI 1 dx [orig:407 _321 ] [407])
                (plus:DI (reg:DI 1 dx [orig:406 _320 ] [406])
                    (reg:DI 2 cx [orig:405 _319 ] [405])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":305 222 {*adddi_1}
     (nil))
(insn 1014 1013 1015 75 (parallel [
            (set (reg:DI 2 cx [orig:408 _322 ] [408])
                (plus:DI (reg:DI 1 dx [orig:407 _321 ] [407])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":305 222 {*adddi_1}
     (nil))
(insn 1015 1014 1016 75 (set (reg/f:DI 1 dx [1037])
        (symbol_ref:DI ("khres.4164") [flags 0x202]  <var_decl 0x7f0daa8aa750 khres>)) "CALCAPE.f":305 85 {*movdi_internal}
     (nil))
(insn 1016 1015 1017 75 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:408 _322 ] [408])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1037])) [2 khres S4 A32])
        (const_int 0 [0])) "CALCAPE.f":305 86 {*movsi_internal}
     (nil))
(insn 1017 1016 1018 75 (set (reg:SI 1 dx [1038])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":306 86 {*movsi_internal}
     (nil))
(insn 1018 1017 1019 75 (set (reg:DI 1 dx [orig:409 _323 ] [409])
        (sign_extend:DI (reg:SI 1 dx [1038]))) "CALCAPE.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 1019 1018 1020 75 (parallel [
            (set (reg:DI 2 cx [orig:410 _324 ] [410])
                (plus:DI (reg:DI 1 dx [orig:409 _323 ] [409])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":306 222 {*adddi_1}
     (nil))
(insn 1020 1019 1021 75 (set (reg/f:DI 1 dx [1039])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":306 85 {*movdi_internal}
     (nil))
(insn 1021 1020 1022 75 (parallel [
            (set (reg:DI 2 cx [1040])
                (plus:DI (reg:DI 2 cx [orig:410 _324 ] [410])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":306 222 {*adddi_1}
     (nil))
(insn 1022 1021 1023 75 (set (reg:SF 22 xmm1 [orig:411 _325 ] [411])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1040])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1039])) [1 phys.aeta S4 A32])) "CALCAPE.f":306 131 {*movsf_internal}
     (nil))
(insn 1023 1022 1024 75 (set (reg:SI 1 dx [1041])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":306 86 {*movsi_internal}
     (nil))
(insn 1024 1023 1025 75 (set (reg:DI 1 dx [orig:412 _326 ] [412])
        (sign_extend:DI (reg:SI 1 dx [1041]))) "CALCAPE.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 1025 1024 1026 75 (parallel [
            (set (reg:DI 2 cx [orig:413 _327 ] [413])
                (mult:DI (reg:DI 1 dx [orig:412 _326 ] [412])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":306 349 {*muldi3_1}
     (nil))
(insn 1026 1025 1027 75 (set (reg:SI 1 dx [1042])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":306 86 {*movsi_internal}
     (nil))
(insn 1027 1026 1028 75 (set (reg:DI 1 dx [orig:414 _328 ] [414])
        (sign_extend:DI (reg:SI 1 dx [1042]))) "CALCAPE.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 1028 1027 1029 75 (parallel [
            (set (reg:DI 1 dx [orig:415 _329 ] [415])
                (plus:DI (reg:DI 1 dx [orig:414 _328 ] [414])
                    (reg:DI 2 cx [orig:413 _327 ] [413])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":306 222 {*adddi_1}
     (nil))
(insn 1029 1028 1030 75 (parallel [
            (set (reg:DI 2 cx [orig:416 _330 ] [416])
                (plus:DI (reg:DI 1 dx [orig:415 _329 ] [415])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":306 222 {*adddi_1}
     (nil))
(insn 1030 1029 1031 75 (set (reg/f:DI 1 dx [1043])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0daa88c870 extra>)) "CALCAPE.f":306 85 {*movdi_internal}
     (nil))
(insn 1031 1030 1032 75 (parallel [
            (set (reg:DI 2 cx [1044])
                (plus:DI (reg:DI 2 cx [orig:416 _330 ] [416])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":306 222 {*adddi_1}
     (nil))
(insn 1032 1031 1033 75 (set (reg:SF 21 xmm0 [orig:417 _331 ] [417])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1044])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1043])) [1 extra.pdsl S4 A32])) "CALCAPE.f":306 131 {*movsf_internal}
     (nil))
(insn 1033 1032 1034 75 (set (reg:SF 22 xmm1 [orig:418 _332 ] [418])
        (mult:SF (reg:SF 22 xmm1 [orig:411 _325 ] [411])
            (reg:SF 21 xmm0 [orig:417 _331 ] [417]))) "CALCAPE.f":306 838 {*fop_sf_comm}
     (nil))
(insn 1034 1033 1035 75 (set (reg/f:DI 1 dx [1045])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(insn 1035 1034 1036 75 (set (reg:SF 21 xmm0 [orig:419 _333 ] [419])
        (mem/c:SF (plus:DI (reg/f:DI 1 dx [1045])
                (const_int 4 [0x4])) [1 phys.pt+0 S4 A32])) "CALCAPE.f":1 131 {*movsf_internal}
     (nil))
(insn 1036 1035 1037 75 (set (reg:SF 21 xmm0 [1046])
        (plus:SF (reg:SF 21 xmm0 [orig:419 _333 ] [419])
            (reg:SF 22 xmm1 [orig:418 _332 ] [418]))) "CALCAPE.f":306 838 {*fop_sf_comm}
     (nil))
(insn 1037 1036 1038 75 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 pkl+0 S4 A32])
        (reg:SF 21 xmm0 [1046])) "CALCAPE.f":306 131 {*movsf_internal}
     (nil))
(insn 1038 1037 1039 75 (set (reg:SI 1 dx [1047])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":307 86 {*movsi_internal}
     (nil))
(insn 1039 1038 1040 75 (set (reg:DI 1 dx [orig:420 _334 ] [420])
        (sign_extend:DI (reg:SI 1 dx [1047]))) "CALCAPE.f":307 149 {*extendsidi2_rex64}
     (nil))
(insn 1040 1039 1041 75 (parallel [
            (set (reg:DI 2 cx [orig:421 _335 ] [421])
                (mult:DI (reg:DI 1 dx [orig:420 _334 ] [420])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":307 349 {*muldi3_1}
     (nil))
(insn 1041 1040 1042 75 (set (reg:SI 1 dx [1048])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":307 86 {*movsi_internal}
     (nil))
(insn 1042 1041 1043 75 (set (reg:DI 1 dx [orig:422 _336 ] [422])
        (sign_extend:DI (reg:SI 1 dx [1048]))) "CALCAPE.f":307 149 {*extendsidi2_rex64}
     (nil))
(insn 1043 1042 1044 75 (parallel [
            (set (reg:DI 1 dx [orig:423 _337 ] [423])
                (plus:DI (reg:DI 1 dx [orig:422 _336 ] [422])
                    (reg:DI 2 cx [orig:421 _335 ] [421])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":307 222 {*adddi_1}
     (nil))
(insn 1044 1043 1045 75 (parallel [
            (set (reg:DI 2 cx [orig:424 _338 ] [424])
                (plus:DI (reg:DI 1 dx [orig:423 _337 ] [423])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":307 222 {*adddi_1}
     (nil))
(insn 1045 1044 1046 75 (set (reg/f:DI 1 dx [1049])
        (symbol_ref:DI ("lcl.4172") [flags 0x202]  <var_decl 0x7f0daa8aaab0 lcl>)) "CALCAPE.f":307 85 {*movdi_internal}
     (nil))
(insn 1046 1045 1047 75 (set (reg:SI 1 dx [orig:425 _339 ] [425])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:424 _338 ] [424])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1049])) [2 lcl S4 A32])) "CALCAPE.f":307 86 {*movsi_internal}
     (nil))
(insn 1047 1046 1048 75 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
            (reg:SI 1 dx [orig:425 _339 ] [425]))) "CALCAPE.f":307 11 {*cmpsi_1}
     (nil))
(jump_insn 1048 1047 1049 75 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1084)
            (pc))) "CALCAPE.f":307 682 {*jcc}
     (nil)
 -> 1084)
;;  succ:       76 (FALLTHRU)
;;              79
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716

;; basic block 76, loop depth 0, maybe hot
;;  prev block 75, next block 77, flags: (RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 426 1050
(note 1049 1048 1050 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 1050 1049 1051 76 (set (reg/f:DI 1 dx [1050])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(insn 1051 1050 1052 76 (set (reg:SF 21 xmm0 [orig:426 _340 ] [426])
        (mem/c:SF (plus:DI (reg/f:DI 1 dx [1050])
                (const_int 72 [0x48])) [1 phys.plq+0 S4 A64])) "CALCAPE.f":1 131 {*movsf_internal}
     (nil))
(insn 1052 1051 1053 76 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:426 _340 ] [426])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [1 pkl+0 S4 A32]))) "CALCAPE.f":308 53 {*cmpisf}
     (nil))
(jump_insn 1053 1052 1057 76 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1931)
            (pc))) "CALCAPE.f":308 682 {*jcc}
     (nil)
 -> 1931)
;;  succ:       77 (FALLTHRU)
;;              78
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716

;; basic block 77, loop depth 0, maybe hot
;;  prev block 76, next block 78, flags: (RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 427 428 429 430 431 1051 1052 1053
(note 1057 1053 1058 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 1058 1057 1059 77 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -48 [0xffffffffffffffd0])) [2 knuml+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -48 [0xffffffffffffffd0])) [2 knuml+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":309 221 {*addsi_1}
     (nil))
(insn 1059 1058 1060 77 (set (reg:SI 1 dx [1051])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":310 86 {*movsi_internal}
     (nil))
(insn 1060 1059 1061 77 (set (reg:DI 1 dx [orig:427 _341 ] [427])
        (sign_extend:DI (reg:SI 1 dx [1051]))) "CALCAPE.f":310 149 {*extendsidi2_rex64}
     (nil))
(insn 1061 1060 1062 77 (parallel [
            (set (reg:DI 2 cx [orig:428 _342 ] [428])
                (mult:DI (reg:DI 1 dx [orig:427 _341 ] [427])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":310 349 {*muldi3_1}
     (nil))
(insn 1062 1061 1063 77 (set (reg:SI 1 dx [1052])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":310 86 {*movsi_internal}
     (nil))
(insn 1063 1062 1064 77 (set (reg:DI 1 dx [orig:429 _343 ] [429])
        (sign_extend:DI (reg:SI 1 dx [1052]))) "CALCAPE.f":310 149 {*extendsidi2_rex64}
     (nil))
(insn 1064 1063 1065 77 (parallel [
            (set (reg:DI 1 dx [orig:430 _344 ] [430])
                (plus:DI (reg:DI 1 dx [orig:429 _343 ] [429])
                    (reg:DI 2 cx [orig:428 _342 ] [428])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":310 222 {*adddi_1}
     (nil))
(insn 1065 1064 1066 77 (parallel [
            (set (reg:DI 2 cx [orig:431 _345 ] [431])
                (plus:DI (reg:DI 1 dx [orig:430 _344 ] [430])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":310 222 {*adddi_1}
     (nil))
(insn 1066 1065 1067 77 (set (reg/f:DI 1 dx [1053])
        (symbol_ref:DI ("klres.4166") [flags 0x202]  <var_decl 0x7f0daa8aa7e0 klres>)) "CALCAPE.f":310 85 {*movdi_internal}
     (nil))
(insn 1067 1066 1932 77 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:431 _345 ] [431])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1053])) [2 klres S4 A32])
        (const_int 1 [0x1])) "CALCAPE.f":310 86 {*movsi_internal}
     (nil))
(jump_insn 1932 1067 1933 77 (set (pc)
        (label_ref 1084)) 683 {jump}
     (nil)
 -> 1084)
;;  succ:       79 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716

(barrier 1933 1932 1931)
;; basic block 78, loop depth 0, maybe hot
;;  prev block 77, next block 79, flags: (RTL, MODIFIED)
;;  pred:       76
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 432 433 434 435 436 1054 1055 1056
(code_label 1931 1933 1071 78 103 (nil) [1 uses])
(note 1071 1931 1072 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1072 1071 1073 78 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [2 knumh+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [2 knumh+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":312 221 {*addsi_1}
     (nil))
(insn 1073 1072 1074 78 (set (reg:SI 1 dx [1054])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":313 86 {*movsi_internal}
     (nil))
(insn 1074 1073 1075 78 (set (reg:DI 1 dx [orig:432 _346 ] [432])
        (sign_extend:DI (reg:SI 1 dx [1054]))) "CALCAPE.f":313 149 {*extendsidi2_rex64}
     (nil))
(insn 1075 1074 1076 78 (parallel [
            (set (reg:DI 2 cx [orig:433 _347 ] [433])
                (mult:DI (reg:DI 1 dx [orig:432 _346 ] [432])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":313 349 {*muldi3_1}
     (nil))
(insn 1076 1075 1077 78 (set (reg:SI 1 dx [1055])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":313 86 {*movsi_internal}
     (nil))
(insn 1077 1076 1078 78 (set (reg:DI 1 dx [orig:434 _348 ] [434])
        (sign_extend:DI (reg:SI 1 dx [1055]))) "CALCAPE.f":313 149 {*extendsidi2_rex64}
     (nil))
(insn 1078 1077 1079 78 (parallel [
            (set (reg:DI 1 dx [orig:435 _349 ] [435])
                (plus:DI (reg:DI 1 dx [orig:434 _348 ] [434])
                    (reg:DI 2 cx [orig:433 _347 ] [433])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":313 222 {*adddi_1}
     (nil))
(insn 1079 1078 1080 78 (parallel [
            (set (reg:DI 2 cx [orig:436 _350 ] [436])
                (plus:DI (reg:DI 1 dx [orig:435 _349 ] [435])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":313 222 {*adddi_1}
     (nil))
(insn 1080 1079 1081 78 (set (reg/f:DI 1 dx [1056])
        (symbol_ref:DI ("khres.4164") [flags 0x202]  <var_decl 0x7f0daa8aa750 khres>)) "CALCAPE.f":313 85 {*movdi_internal}
     (nil))
(insn 1081 1080 1084 78 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:436 _350 ] [436])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1056])) [2 khres S4 A32])
        (const_int 1 [0x1])) "CALCAPE.f":313 86 {*movsi_internal}
     (nil))
;;  succ:       79 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716

;; basic block 79, loop depth 0, maybe hot
;;  prev block 78, next block 163, flags: (RTL, MODIFIED)
;;  pred:       75
;;              78 (FALLTHRU)
;;              77 [always] 
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1084 1081 1085 79 47 (nil) [2 uses])
(note 1085 1084 1086 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 1086 1085 1934 79 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":303 221 {*addsi_1}
     (nil))
(jump_insn 1934 1086 1935 79 (set (pc)
        (label_ref 1087)) "CALCAPE.f":303 683 {jump}
     (nil)
 -> 1087)
;;  succ:       74 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716

(barrier 1935 1934 2015)
;; basic block 163, loop depth 0, maybe hot
;;  prev block 79, next block 80, flags: (RTL, MODIFIED)
;;  pred:       74
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2015 1935 2014 163 120 (nil) [1 uses])
(note 2014 2015 2016 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 2016 2014 1090 163 (const_int 0 [0]) "CALCAPE.f":307 718 {nop}
     (nil))
;;  succ:       80 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716

;; basic block 80, loop depth 0, maybe hot
;;  prev block 163, next block 162, flags: (RTL, MODIFIED)
;;  pred:       163 [always]  (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1090 2016 1091 80 46 (nil) [0 uses])
(note 1091 1090 1092 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1092 1091 1936 80 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":302 221 {*addsi_1}
     (nil))
(jump_insn 1936 1092 1937 80 (set (pc)
        (label_ref 1093)) "CALCAPE.f":302 683 {jump}
     (nil)
 -> 1093)
;;  succ:       72 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 716

(barrier 1937 1936 2012)
;; basic block 162, loop depth 0, maybe hot
;;  prev block 80, next block 81, flags: (RTL, MODIFIED)
;;  pred:       72
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2012 1937 2011 162 119 (nil) [1 uses])
(note 2011 2012 2013 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 2013 2011 1096 162 (const_int 0 [0]) "CALCAPE.f":303 718 {nop}
     (nil))
;;  succ:       81 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 81, loop depth 0, maybe hot
;;  prev block 162, next block 82, flags: (RTL, MODIFIED)
;;  pred:       162 [always]  (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1096 2013 1097 81 45 (nil) [0 uses])
(note 1097 1096 1098 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1098 1097 1099 81 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 knuml+0 S4 A32])
            (const_int 0 [0]))) "CALCAPE.f":321 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1099 1098 1100 81 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1146)
            (pc))) "CALCAPE.f":321 682 {*jcc}
     (nil)
 -> 1146)
;;  succ:       82 (FALLTHRU)
;;              83
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 82, loop depth 0, maybe hot
;;  prev block 81, next block 83, flags: (RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 437 438 439 440 441 442 443 444 445 446 447 1057 1058 1059 1060 1061 1062 1063 1064 1065 1066 1067
(note 1100 1099 1101 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1101 1100 1102 82 (set (reg:SI 0 ax [1057])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":324 86 {*movsi_internal}
     (nil))
(insn 1102 1101 1103 82 (set (reg:DI 0 ax [orig:437 _351 ] [437])
        (sign_extend:DI (reg:SI 0 ax [1057]))) "CALCAPE.f":324 149 {*extendsidi2_rex64}
     (nil))
(insn 1103 1102 1104 82 (parallel [
            (set (reg:DI 0 ax [orig:438 _352 ] [438])
                (plus:DI (reg:DI 0 ax [orig:437 _351 ] [437])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":324 222 {*adddi_1}
     (nil))
(insn 1104 1103 1105 82 (parallel [
            (set (reg:DI 0 ax [orig:439 _353 ] [439])
                (mult:DI (reg:DI 0 ax [orig:438 _352 ] [438])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":324 349 {*muldi3_1}
     (nil))
(insn 1105 1104 1106 82 (parallel [
            (set (reg:DI 0 ax [1058])
                (plus:DI (reg:DI 0 ax [orig:439 _353 ] [439])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":324 222 {*adddi_1}
     (nil))
(insn 1106 1105 1107 82 (parallel [
            (set (reg:DI 1 dx [1059])
                (ashift:DI (reg:DI 0 ax [1058])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":324 551 {*ashldi3_1}
     (nil))
(insn 1107 1106 1108 82 (set (reg:DI 0 ax [1060])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f0daa894e10 masks>)) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1108 1107 1109 82 (parallel [
            (set (reg/f:DI 2 cx [orig:440 _354 ] [440])
                (plus:DI (reg:DI 1 dx [1059])
                    (reg:DI 0 ax [1060])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":324 222 {*adddi_1}
     (nil))
(insn 1109 1108 1110 82 (set (reg:SI 0 ax [1061])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":324 86 {*movsi_internal}
     (nil))
(insn 1110 1109 1111 82 (set (reg:DI 0 ax [orig:441 _355 ] [441])
        (sign_extend:DI (reg:SI 0 ax [1061]))) "CALCAPE.f":324 149 {*extendsidi2_rex64}
     (nil))
(insn 1111 1110 1112 82 (parallel [
            (set (reg:DI 0 ax [orig:442 _356 ] [442])
                (plus:DI (reg:DI 0 ax [orig:441 _355 ] [441])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":324 222 {*adddi_1}
     (nil))
(insn 1112 1111 1113 82 (parallel [
            (set (reg:DI 0 ax [1062])
                (plus:DI (reg:DI 0 ax [orig:442 _356 ] [442])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":324 222 {*adddi_1}
     (nil))
(insn 1113 1112 1114 82 (parallel [
            (set (reg:DI 1 dx [1063])
                (ashift:DI (reg:DI 0 ax [1062])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":324 551 {*ashldi3_1}
     (nil))
(insn 1114 1113 1115 82 (set (reg:DI 0 ax [1064])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1115 1114 1116 82 (parallel [
            (set (reg/f:DI 1 dx [orig:443 _357 ] [443])
                (plus:DI (reg:DI 1 dx [1063])
                    (reg:DI 0 ax [1064])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":324 222 {*adddi_1}
     (nil))
(insn 1116 1115 1117 82 (set (reg:SI 0 ax [1065])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":324 86 {*movsi_internal}
     (nil))
(insn 1117 1116 1118 82 (set (reg:DI 0 ax [orig:444 _358 ] [444])
        (sign_extend:DI (reg:SI 0 ax [1065]))) "CALCAPE.f":324 149 {*extendsidi2_rex64}
     (nil))
(insn 1118 1117 1119 82 (parallel [
            (set (reg:DI 0 ax [orig:445 _359 ] [445])
                (plus:DI (reg:DI 0 ax [orig:444 _358 ] [444])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":324 222 {*adddi_1}
     (nil))
(insn 1119 1118 1120 82 (parallel [
            (set (reg:DI 0 ax [orig:446 _360 ] [446])
                (mult:DI (reg:DI 0 ax [orig:445 _359 ] [445])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":324 349 {*muldi3_1}
     (nil))
(insn 1120 1119 1121 82 (parallel [
            (set (reg:DI 4 si [1066])
                (ashift:DI (reg:DI 0 ax [orig:446 _360 ] [446])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":324 551 {*ashldi3_1}
     (nil))
(insn 1121 1120 1122 82 (set (reg:DI 0 ax [1067])
        (symbol_ref:DI ("tpar.4198") [flags 0x202]  <var_decl 0x7f0daa8ac6c0 tpar>)) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1122 1121 1123 82 (parallel [
            (set (reg/f:DI 0 ax [orig:447 _361 ] [447])
                (plus:DI (reg:DI 0 ax [1067])
                    (reg:DI 4 si [1066])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":324 222 {*adddi_1}
     (nil))
(insn 1123 1122 2069 82 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":324 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2069 1123 1124 82 (set (reg:DI 3 bx [1231])
        (symbol_ref:DI ("ithtb.4159") [flags 0x202]  <var_decl 0x7f0daa8aa510 ithtb>)) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1124 2069 2070 82 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (reg:DI 3 bx [1231])) "CALCAPE.f":324 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2070 1124 1125 82 (set (reg:DI 3 bx [1232])
        (symbol_ref:DI ("iptb.4155") [flags 0x202]  <var_decl 0x7f0daa8aa360 iptb>)) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1125 2070 2071 82 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (reg:DI 3 bx [1232])) "CALCAPE.f":324 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 2071 1125 1126 82 (set (reg:DI 3 bx [1233])
        (symbol_ref:DI ("thesp.4194") [flags 0x202]  <var_decl 0x7f0daa8ac510 thesp>)) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1126 2071 2072 82 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 3 bx [1233])) "CALCAPE.f":324 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 2072 1126 1127 82 (set (reg:DI 5 di [1234])
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)
                (const_int 68 [0x44])))) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1127 2072 2073 82 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 5 di [1234])) "CALCAPE.f":324 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 2073 1127 1128 82 (set (reg:DI 3 bx [1235])
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)
                (const_int 1920 [0x780])))) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1128 2073 2074 82 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 3 bx [1235])) "CALCAPE.f":324 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 2074 1128 1129 82 (set (reg:DI 5 di [1236])
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)
                (const_int 1616 [0x650])))) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1129 2074 2075 82 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 5 di [1236])) "CALCAPE.f":324 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 2075 1129 1130 82 (set (reg:DI 3 bx [1237])
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)
                (const_int 64 [0x40])))) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1130 2075 2076 82 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 3 bx [1237])) "CALCAPE.f":324 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 2076 1130 1131 82 (set (reg:DI 5 di [1238])
        (symbol_ref:DI ("pp.4181") [flags 0x202]  <var_decl 0x7f0daa8aaf30 pp>)) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1131 2076 2077 82 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 5 di [1238])) "CALCAPE.f":324 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 72 [0x48])
        (nil)))
(insn 2077 1131 1132 82 (set (reg:DI 3 bx [1239])
        (symbol_ref:DI ("qq.4188") [flags 0x202]  <var_decl 0x7f0daa8ac240 qq>)) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1132 2077 2078 82 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 3 bx [1239])) "CALCAPE.f":324 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 80 [0x50])
        (nil)))
(insn 2078 1132 1133 82 (set (reg:DI 5 di [1240])
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)
                (const_int 48 [0x30])))) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1133 2078 2079 82 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 5 di [1240])) "CALCAPE.f":324 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 88 [0x58])
        (nil)))
(insn 2079 1133 1134 82 (set (reg:DI 3 bx [1241])
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)
                (const_int 4 [0x4])))) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1134 2079 1135 82 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 3 bx [1241])) "CALCAPE.f":324 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 96 [0x60])
        (nil)))
(insn 1135 1134 1136 82 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg/f:DI 2 cx [orig:440 _354 ] [440])) "CALCAPE.f":324 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 104 [0x68])
        (nil)))
(insn 1136 1135 1137 82 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg/f:DI 1 dx [orig:443 _357 ] [443])) "CALCAPE.f":324 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 112 [0x70])
        (nil)))
(insn 1137 1136 1138 82 (set (reg:DI 38 r9)
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0daa88c870 extra>)
                (const_int 18589572 [0x11ba784])))) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1138 1137 1139 82 (set (reg:DI 37 r8)
        (symbol_ref:DI ("klres.4166") [flags 0x202]  <var_decl 0x7f0daa8aa7e0 klres>)) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1139 1138 1140 82 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7f0daa4cce10 *.LC12>)) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1140 1139 1141 82 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC13") [flags 0x2]  <var_decl 0x7f0daa4ccea0 *.LC13>)) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1141 1140 1142 82 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)
                (const_int 2296132 [0x230944])))) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1142 1141 1143 82 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:447 _361 ] [447])) "CALCAPE.f":324 85 {*movdi_internal}
     (nil))
(insn 1143 1142 1144 82 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALCAPE.f":324 88 {*movqi_internal}
     (nil))
(call_insn 1144 1143 1145 82 (call (mem:QI (symbol_ref:DI ("ttblex_") [flags 0x41]  <function_decl 0x7f0daa881900 ttblex>) [0 ttblex S1 A8])
        (const_int 112 [0x70])) "CALCAPE.f":324 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1145 1144 1146 82 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":324 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
;;  succ:       83 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 83, loop depth 0, maybe hot
;;  prev block 82, next block 84, flags: (RTL, MODIFIED)
;;  pred:       81
;;              82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1146 1145 1147 83 53 (nil) [1 uses])
(note 1147 1146 1148 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 1148 1147 1149 83 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [2 knumh+0 S4 A32])
            (const_int 0 [0]))) "CALCAPE.f":329 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1149 1148 1150 83 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1196)
            (pc))) "CALCAPE.f":329 682 {*jcc}
     (nil)
 -> 1196)
;;  succ:       84 (FALLTHRU)
;;              85
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 84, loop depth 0, maybe hot
;;  prev block 83, next block 85, flags: (RTL, MODIFIED)
;;  pred:       83 (FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 448 449 450 451 452 453 454 455 456 457 458 1068 1069 1070 1071 1072 1073 1074 1075 1076 1077 1078
(note 1150 1149 1151 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 1151 1150 1152 84 (set (reg:SI 0 ax [1068])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":332 86 {*movsi_internal}
     (nil))
(insn 1152 1151 1153 84 (set (reg:DI 0 ax [orig:448 _362 ] [448])
        (sign_extend:DI (reg:SI 0 ax [1068]))) "CALCAPE.f":332 149 {*extendsidi2_rex64}
     (nil))
(insn 1153 1152 1154 84 (parallel [
            (set (reg:DI 0 ax [orig:449 _363 ] [449])
                (plus:DI (reg:DI 0 ax [orig:448 _362 ] [448])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":332 222 {*adddi_1}
     (nil))
(insn 1154 1153 1155 84 (parallel [
            (set (reg:DI 0 ax [orig:450 _364 ] [450])
                (mult:DI (reg:DI 0 ax [orig:449 _363 ] [449])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":332 349 {*muldi3_1}
     (nil))
(insn 1155 1154 1156 84 (parallel [
            (set (reg:DI 0 ax [1069])
                (plus:DI (reg:DI 0 ax [orig:450 _364 ] [450])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":332 222 {*adddi_1}
     (nil))
(insn 1156 1155 1157 84 (parallel [
            (set (reg:DI 1 dx [1070])
                (ashift:DI (reg:DI 0 ax [1069])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":332 551 {*ashldi3_1}
     (nil))
(insn 1157 1156 1158 84 (set (reg:DI 0 ax [1071])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f0daa894e10 masks>)) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1158 1157 1159 84 (parallel [
            (set (reg/f:DI 2 cx [orig:451 _365 ] [451])
                (plus:DI (reg:DI 1 dx [1070])
                    (reg:DI 0 ax [1071])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":332 222 {*adddi_1}
     (nil))
(insn 1159 1158 1160 84 (set (reg:SI 0 ax [1072])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":332 86 {*movsi_internal}
     (nil))
(insn 1160 1159 1161 84 (set (reg:DI 0 ax [orig:452 _366 ] [452])
        (sign_extend:DI (reg:SI 0 ax [1072]))) "CALCAPE.f":332 149 {*extendsidi2_rex64}
     (nil))
(insn 1161 1160 1162 84 (parallel [
            (set (reg:DI 0 ax [orig:453 _367 ] [453])
                (plus:DI (reg:DI 0 ax [orig:452 _366 ] [452])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":332 222 {*adddi_1}
     (nil))
(insn 1162 1161 1163 84 (parallel [
            (set (reg:DI 0 ax [1073])
                (plus:DI (reg:DI 0 ax [orig:453 _367 ] [453])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":332 222 {*adddi_1}
     (nil))
(insn 1163 1162 1164 84 (parallel [
            (set (reg:DI 1 dx [1074])
                (ashift:DI (reg:DI 0 ax [1073])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":332 551 {*ashldi3_1}
     (nil))
(insn 1164 1163 1165 84 (set (reg:DI 0 ax [1075])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1165 1164 1166 84 (parallel [
            (set (reg/f:DI 1 dx [orig:454 _368 ] [454])
                (plus:DI (reg:DI 1 dx [1074])
                    (reg:DI 0 ax [1075])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":332 222 {*adddi_1}
     (nil))
(insn 1166 1165 1167 84 (set (reg:SI 0 ax [1076])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":332 86 {*movsi_internal}
     (nil))
(insn 1167 1166 1168 84 (set (reg:DI 0 ax [orig:455 _369 ] [455])
        (sign_extend:DI (reg:SI 0 ax [1076]))) "CALCAPE.f":332 149 {*extendsidi2_rex64}
     (nil))
(insn 1168 1167 1169 84 (parallel [
            (set (reg:DI 0 ax [orig:456 _370 ] [456])
                (plus:DI (reg:DI 0 ax [orig:455 _369 ] [455])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":332 222 {*adddi_1}
     (nil))
(insn 1169 1168 1170 84 (parallel [
            (set (reg:DI 0 ax [orig:457 _371 ] [457])
                (mult:DI (reg:DI 0 ax [orig:456 _370 ] [456])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":332 349 {*muldi3_1}
     (nil))
(insn 1170 1169 1171 84 (parallel [
            (set (reg:DI 4 si [1077])
                (ashift:DI (reg:DI 0 ax [orig:457 _371 ] [457])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":332 551 {*ashldi3_1}
     (nil))
(insn 1171 1170 1172 84 (set (reg:DI 0 ax [1078])
        (symbol_ref:DI ("tpar.4198") [flags 0x202]  <var_decl 0x7f0daa8ac6c0 tpar>)) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1172 1171 1173 84 (parallel [
            (set (reg/f:DI 0 ax [orig:458 _372 ] [458])
                (plus:DI (reg:DI 0 ax [1078])
                    (reg:DI 4 si [1077])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":332 222 {*adddi_1}
     (nil))
(insn 1173 1172 2080 84 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":332 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 2080 1173 1174 84 (set (reg:DI 5 di [1242])
        (symbol_ref:DI ("ithtb.4159") [flags 0x202]  <var_decl 0x7f0daa8aa510 ithtb>)) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1174 2080 2081 84 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (reg:DI 5 di [1242])) "CALCAPE.f":332 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 2081 1174 1175 84 (set (reg:DI 3 bx [1243])
        (symbol_ref:DI ("iptb.4155") [flags 0x202]  <var_decl 0x7f0daa8aa360 iptb>)) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1175 2081 2082 84 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (reg:DI 3 bx [1243])) "CALCAPE.f":332 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 2082 1175 1176 84 (set (reg:DI 5 di [1244])
        (symbol_ref:DI ("thesp.4194") [flags 0x202]  <var_decl 0x7f0daa8ac510 thesp>)) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1176 2082 2083 84 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 5 di [1244])) "CALCAPE.f":332 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 2083 1176 1177 84 (set (reg:DI 3 bx [1245])
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)
                (const_int 80 [0x50])))) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1177 2083 2084 84 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 3 bx [1245])) "CALCAPE.f":332 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 2084 1177 1178 84 (set (reg:DI 5 di [1246])
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)
                (const_int 2832 [0xb10])))) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1178 2084 2085 84 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 5 di [1246])) "CALCAPE.f":332 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 2085 1178 1179 84 (set (reg:DI 3 bx [1247])
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)
                (const_int 2224 [0x8b0])))) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1179 2085 2086 84 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 3 bx [1247])) "CALCAPE.f":332 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 2086 1179 1180 84 (set (reg:DI 5 di [1248])
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)
                (const_int 76 [0x4c])))) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1180 2086 2087 84 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 5 di [1248])) "CALCAPE.f":332 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 2087 1180 1181 84 (set (reg:DI 3 bx [1249])
        (symbol_ref:DI ("pp.4181") [flags 0x202]  <var_decl 0x7f0daa8aaf30 pp>)) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1181 2087 2088 84 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 3 bx [1249])) "CALCAPE.f":332 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 72 [0x48])
        (nil)))
(insn 2088 1181 1182 84 (set (reg:DI 4 si [1250])
        (symbol_ref:DI ("qq.4188") [flags 0x202]  <var_decl 0x7f0daa8ac240 qq>)) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1182 2088 2089 84 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 4 si [1250])) "CALCAPE.f":332 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 80 [0x50])
        (nil)))
(insn 2089 1182 1183 84 (set (reg:DI 5 di [1251])
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)
                (const_int 72 [0x48])))) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1183 2089 2090 84 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 5 di [1251])) "CALCAPE.f":332 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 88 [0x58])
        (nil)))
(insn 2090 1183 1184 84 (set (reg:DI 3 bx [1252])
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)
                (const_int 4 [0x4])))) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1184 2090 1185 84 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 3 bx [1252])) "CALCAPE.f":332 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 96 [0x60])
        (nil)))
(insn 1185 1184 1186 84 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg/f:DI 2 cx [orig:451 _365 ] [451])) "CALCAPE.f":332 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 104 [0x68])
        (nil)))
(insn 1186 1185 1187 84 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg/f:DI 1 dx [orig:454 _368 ] [454])) "CALCAPE.f":332 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 112 [0x70])
        (nil)))
(insn 1187 1186 1188 84 (set (reg:DI 38 r9)
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0daa88c870 extra>)
                (const_int 18589572 [0x11ba784])))) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1188 1187 1189 84 (set (reg:DI 37 r8)
        (symbol_ref:DI ("khres.4164") [flags 0x202]  <var_decl 0x7f0daa8aa750 khres>)) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1189 1188 1190 84 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC14") [flags 0x2]  <var_decl 0x7f0daa4ccf30 *.LC14>)) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1190 1189 1191 84 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC15") [flags 0x2]  <var_decl 0x7f0daa4cc7e0 *.LC15>)) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1191 1190 1192 84 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)
                (const_int 2336868 [0x23a864])))) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1192 1191 1193 84 (set (reg:DI 5 di)
        (reg/f:DI 0 ax [orig:458 _372 ] [458])) "CALCAPE.f":332 85 {*movdi_internal}
     (nil))
(insn 1193 1192 1194 84 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALCAPE.f":332 88 {*movqi_internal}
     (nil))
(call_insn 1194 1193 1195 84 (call (mem:QI (symbol_ref:DI ("ttblex_") [flags 0x41]  <function_decl 0x7f0daa881900 ttblex>) [0 ttblex S1 A8])
        (const_int 112 [0x70])) "CALCAPE.f":332 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1195 1194 1196 84 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 112 [0x70])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":332 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
;;  succ:       85 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 85, loop depth 0, maybe hot
;;  prev block 84, next block 86, flags: (RTL, MODIFIED)
;;  pred:       83
;;              84 (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 719 720
(code_label 1196 1195 1197 85 54 (nil) [1 uses])
(note 1197 1196 1198 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 1198 1197 1199 85 (set (reg:SI 1 dx [orig:719 _828 ] [719])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 16 [0x10]))) [2 parallel.jsta_m+0 S4 A128])) "CALCAPE.f":336 86 {*movsi_internal}
     (nil))
(insn 1199 1198 1200 85 (set (reg:SI 0 ax [orig:720 _829 ] [720])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 20 [0x14]))) [2 parallel.jend_m+0 S4 A32])) "CALCAPE.f":336 86 {*movsi_internal}
     (nil))
(insn 1200 1199 1280 85 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:719 _828 ] [719])) "CALCAPE.f":336 86 {*movsi_internal}
     (nil))
;;  succ:       86 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720

;; basic block 86, loop depth 0, maybe hot
;;  prev block 85, next block 87, flags: (RTL, MODIFIED)
;;  pred:       85 (FALLTHRU)
;;              93 [always] 
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720
;; lr  def 	 17 [flags] 721 1079
(code_label 1280 1200 1201 86 60 (nil) [1 uses])
(note 1201 1280 1202 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 1202 1201 1203 86 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:720 _829 ] [720]))) "CALCAPE.f":336 11 {*cmpsi_1}
     (nil))
(insn 1203 1202 1204 86 (set (reg:QI 1 dx [1079])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":336 678 {*setcc_qi}
     (nil))
(insn 1204 1203 1205 86 (set (reg:SI 1 dx [orig:721 _831 ] [721])
        (zero_extend:SI (reg:QI 1 dx [1079]))) "CALCAPE.f":336 140 {*zero_extendqisi2}
     (nil))
(insn 1205 1204 1206 86 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:721 _831 ] [721])
            (const_int 0 [0]))) "CALCAPE.f":336 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1206 1205 1207 86 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2018)
            (pc))) "CALCAPE.f":336 682 {*jcc}
     (nil)
 -> 2018)
;;  succ:       164
;;              87 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720

;; basic block 87, loop depth 0, maybe hot
;;  prev block 86, next block 88, flags: (RTL, MODIFIED)
;;  pred:       86 (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1207 1206 1208 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 1208 1207 1274 87 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "CALCAPE.f":337 86 {*movsi_internal}
     (nil))
;;  succ:       88 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720

;; basic block 88, loop depth 0, maybe hot
;;  prev block 87, next block 89, flags: (RTL, MODIFIED)
;;  pred:       87 (FALLTHRU)
;;              92 [always] 
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 722 1080
(code_label 1274 1208 1209 88 59 (nil) [1 uses])
(note 1209 1274 1210 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 1210 1209 1211 88 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALCAPE.f":337 11 {*cmpsi_1}
     (nil))
(insn 1211 1210 1212 88 (set (reg:QI 1 dx [1080])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":337 678 {*setcc_qi}
     (nil))
(insn 1212 1211 1213 88 (set (reg:SI 1 dx [orig:722 _833 ] [722])
        (zero_extend:SI (reg:QI 1 dx [1080]))) "CALCAPE.f":337 140 {*zero_extendqisi2}
     (nil))
(insn 1213 1212 1214 88 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:722 _833 ] [722])
            (const_int 0 [0]))) "CALCAPE.f":337 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1214 1213 1215 88 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2021)
            (pc))) "CALCAPE.f":337 682 {*jcc}
     (nil)
 -> 2021)
;;  succ:       165
;;              89 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720

;; basic block 89, loop depth 0, maybe hot
;;  prev block 88, next block 90, flags: (RTL, MODIFIED)
;;  pred:       88 (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 459 460 461 462 463 464 1081 1082 1083
(note 1215 1214 1216 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 1216 1215 1217 89 (set (reg:SI 1 dx [1081])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":338 86 {*movsi_internal}
     (nil))
(insn 1217 1216 1218 89 (set (reg:DI 1 dx [orig:459 _373 ] [459])
        (sign_extend:DI (reg:SI 1 dx [1081]))) "CALCAPE.f":338 149 {*extendsidi2_rex64}
     (nil))
(insn 1218 1217 1219 89 (parallel [
            (set (reg:DI 2 cx [orig:460 _374 ] [460])
                (mult:DI (reg:DI 1 dx [orig:459 _373 ] [459])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":338 349 {*muldi3_1}
     (nil))
(insn 1219 1218 1220 89 (set (reg:SI 1 dx [1082])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":338 86 {*movsi_internal}
     (nil))
(insn 1220 1219 1221 89 (set (reg:DI 1 dx [orig:461 _375 ] [461])
        (sign_extend:DI (reg:SI 1 dx [1082]))) "CALCAPE.f":338 149 {*extendsidi2_rex64}
     (nil))
(insn 1221 1220 1222 89 (parallel [
            (set (reg:DI 1 dx [orig:462 _376 ] [462])
                (plus:DI (reg:DI 1 dx [orig:461 _375 ] [461])
                    (reg:DI 2 cx [orig:460 _374 ] [460])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":338 222 {*adddi_1}
     (nil))
(insn 1222 1221 1223 89 (parallel [
            (set (reg:DI 2 cx [orig:463 _377 ] [463])
                (plus:DI (reg:DI 1 dx [orig:462 _376 ] [462])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":338 222 {*adddi_1}
     (nil))
(insn 1223 1222 1224 89 (set (reg/f:DI 1 dx [1083])
        (symbol_ref:DI ("khres.4164") [flags 0x202]  <var_decl 0x7f0daa8aa750 khres>)) "CALCAPE.f":338 85 {*movdi_internal}
     (nil))
(insn 1224 1223 1225 89 (set (reg:SI 1 dx [orig:464 _378 ] [464])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:463 _377 ] [463])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1083])) [2 khres S4 A32])) "CALCAPE.f":338 86 {*movsi_internal}
     (nil))
(insn 1225 1224 1226 89 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 1 dx [orig:464 _378 ] [464])
            (const_int 0 [0]))) "CALCAPE.f":338 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1226 1225 1227 89 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1271)
            (pc))) "CALCAPE.f":338 682 {*jcc}
     (nil)
 -> 1271)
;;  succ:       90 (FALLTHRU)
;;              92
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720

;; basic block 90, loop depth 0, maybe hot
;;  prev block 89, next block 91, flags: (RTL, MODIFIED)
;;  pred:       89 (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 1084 1085 1086 1087 1088 1089 1090 1091 1092
(note 1227 1226 1228 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1228 1227 1229 90 (set (reg:SI 1 dx [1084])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":339 86 {*movsi_internal}
     (nil))
(insn 1229 1228 1230 90 (set (reg:DI 1 dx [orig:465 _379 ] [465])
        (sign_extend:DI (reg:SI 1 dx [1084]))) "CALCAPE.f":339 149 {*extendsidi2_rex64}
     (nil))
(insn 1230 1229 1231 90 (parallel [
            (set (reg:DI 2 cx [orig:466 _380 ] [466])
                (mult:DI (reg:DI 1 dx [orig:465 _379 ] [465])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":339 349 {*muldi3_1}
     (nil))
(insn 1231 1230 1232 90 (set (reg:SI 1 dx [1085])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":339 86 {*movsi_internal}
     (nil))
(insn 1232 1231 1233 90 (set (reg:DI 1 dx [orig:467 _381 ] [467])
        (sign_extend:DI (reg:SI 1 dx [1085]))) "CALCAPE.f":339 149 {*extendsidi2_rex64}
     (nil))
(insn 1233 1232 1234 90 (parallel [
            (set (reg:DI 1 dx [orig:468 _382 ] [468])
                (mult:DI (reg:DI 1 dx [orig:467 _381 ] [467])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":339 349 {*muldi3_1}
     (nil))
(insn 1234 1233 1235 90 (parallel [
            (set (reg:DI 2 cx [orig:469 _383 ] [469])
                (plus:DI (reg:DI 2 cx [orig:466 _380 ] [466])
                    (reg:DI 1 dx [orig:468 _382 ] [468])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":339 222 {*adddi_1}
     (nil))
(insn 1235 1234 1236 90 (set (reg:SI 1 dx [1086])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":339 86 {*movsi_internal}
     (nil))
(insn 1236 1235 1237 90 (set (reg:DI 1 dx [orig:470 _384 ] [470])
        (sign_extend:DI (reg:SI 1 dx [1086]))) "CALCAPE.f":339 149 {*extendsidi2_rex64}
     (nil))
(insn 1237 1236 1238 90 (parallel [
            (set (reg:DI 1 dx [orig:471 _385 ] [471])
                (plus:DI (reg:DI 1 dx [orig:470 _384 ] [470])
                    (reg:DI 2 cx [orig:469 _383 ] [469])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":339 222 {*adddi_1}
     (nil))
(insn 1238 1237 1239 90 (parallel [
            (set (reg:DI 2 cx [orig:472 _386 ] [472])
                (plus:DI (reg:DI 1 dx [orig:471 _385 ] [471])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":339 222 {*adddi_1}
     (nil))
(insn 1239 1238 1240 90 (set (reg/f:DI 1 dx [1087])
        (symbol_ref:DI ("tpar.4198") [flags 0x202]  <var_decl 0x7f0daa8ac6c0 tpar>)) "CALCAPE.f":339 85 {*movdi_internal}
     (nil))
(insn 1240 1239 1241 90 (set (reg:SF 21 xmm0 [orig:473 _387 ] [473])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:472 _386 ] [472])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1087])) [1 tpar S4 A32])) "CALCAPE.f":339 131 {*movsf_internal}
     (nil))
(insn 1241 1240 1242 90 (set (reg:SI 1 dx [1088])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":339 86 {*movsi_internal}
     (nil))
(insn 1242 1241 1243 90 (set (reg:DI 1 dx [orig:474 _388 ] [474])
        (sign_extend:DI (reg:SI 1 dx [1088]))) "CALCAPE.f":339 149 {*extendsidi2_rex64}
     (nil))
(insn 1243 1242 1244 90 (parallel [
            (set (reg:DI 2 cx [orig:475 _389 ] [475])
                (mult:DI (reg:DI 1 dx [orig:474 _388 ] [474])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":339 349 {*muldi3_1}
     (nil))
(insn 1244 1243 1245 90 (set (reg:SI 1 dx [1089])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":339 86 {*movsi_internal}
     (nil))
(insn 1245 1244 1246 90 (set (reg:DI 1 dx [orig:476 _390 ] [476])
        (sign_extend:DI (reg:SI 1 dx [1089]))) "CALCAPE.f":339 149 {*extendsidi2_rex64}
     (nil))
(insn 1246 1245 1247 90 (parallel [
            (set (reg:DI 1 dx [orig:477 _391 ] [477])
                (mult:DI (reg:DI 1 dx [orig:476 _390 ] [476])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":339 349 {*muldi3_1}
     (nil))
(insn 1247 1246 1248 90 (parallel [
            (set (reg:DI 2 cx [orig:478 _392 ] [478])
                (plus:DI (reg:DI 2 cx [orig:475 _389 ] [475])
                    (reg:DI 1 dx [orig:477 _391 ] [477])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":339 222 {*adddi_1}
     (nil))
(insn 1248 1247 1249 90 (set (reg:SI 1 dx [1090])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":339 86 {*movsi_internal}
     (nil))
(insn 1249 1248 1250 90 (set (reg:DI 1 dx [orig:479 _393 ] [479])
        (sign_extend:DI (reg:SI 1 dx [1090]))) "CALCAPE.f":339 149 {*extendsidi2_rex64}
     (nil))
(insn 1250 1249 1251 90 (parallel [
            (set (reg:DI 1 dx [orig:480 _394 ] [480])
                (plus:DI (reg:DI 1 dx [orig:479 _393 ] [479])
                    (reg:DI 2 cx [orig:478 _392 ] [478])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":339 222 {*adddi_1}
     (nil))
(insn 1251 1250 1252 90 (parallel [
            (set (reg:DI 2 cx [orig:481 _395 ] [481])
                (plus:DI (reg:DI 1 dx [orig:480 _394 ] [480])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":339 222 {*adddi_1}
     (nil))
(insn 1252 1251 1253 90 (set (reg/f:DI 1 dx [1091])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0daa8a8990 vrbls>)) "CALCAPE.f":339 85 {*movdi_internal}
     (nil))
(insn 1253 1252 1254 90 (parallel [
            (set (reg:DI 2 cx [1092])
                (plus:DI (reg:DI 2 cx [orig:481 _395 ] [481])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":339 222 {*adddi_1}
     (nil))
(insn 1254 1253 1255 90 (set (reg:SF 22 xmm1 [orig:482 _396 ] [482])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1092])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1091])) [1 vrbls.t S4 A32])) "CALCAPE.f":339 131 {*movsf_internal}
     (nil))
(insn 1255 1254 1256 90 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:473 _387 ] [473])
            (reg:SF 22 xmm1 [orig:482 _396 ] [482]))) "CALCAPE.f":339 53 {*cmpisf}
     (nil))
(jump_insn 1256 1255 1260 90 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1271)
            (pc))) "CALCAPE.f":339 682 {*jcc}
     (nil)
 -> 1271)
;;  succ:       91 (FALLTHRU)
;;              92
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720

;; basic block 91, loop depth 0, maybe hot
;;  prev block 90, next block 92, flags: (RTL, MODIFIED)
;;  pred:       90 (FALLTHRU)
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 483 484 485 486 487 1093 1094 1095 1096
(note 1260 1256 1261 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 1261 1260 1262 91 (set (reg:SI 1 dx [1093])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":339 86 {*movsi_internal}
     (nil))
(insn 1262 1261 1263 91 (set (reg:DI 1 dx [orig:483 _397 ] [483])
        (sign_extend:DI (reg:SI 1 dx [1093]))) "CALCAPE.f":339 149 {*extendsidi2_rex64}
     (nil))
(insn 1263 1262 1264 91 (parallel [
            (set (reg:DI 2 cx [orig:484 _398 ] [484])
                (mult:DI (reg:DI 1 dx [orig:483 _397 ] [483])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":339 349 {*muldi3_1}
     (nil))
(insn 1264 1263 1265 91 (set (reg:SI 1 dx [1094])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":339 86 {*movsi_internal}
     (nil))
(insn 1265 1264 1266 91 (set (reg:DI 1 dx [orig:485 _399 ] [485])
        (sign_extend:DI (reg:SI 1 dx [1094]))) "CALCAPE.f":339 149 {*extendsidi2_rex64}
     (nil))
(insn 1266 1265 1267 91 (parallel [
            (set (reg:DI 1 dx [orig:486 _400 ] [486])
                (plus:DI (reg:DI 1 dx [orig:485 _399 ] [485])
                    (reg:DI 2 cx [orig:484 _398 ] [484])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":339 222 {*adddi_1}
     (nil))
(insn 1267 1266 1268 91 (parallel [
            (set (reg:DI 4 si [orig:487 _401 ] [487])
                (plus:DI (reg:DI 1 dx [orig:486 _400 ] [486])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":339 222 {*adddi_1}
     (nil))
(insn 1268 1267 1269 91 (set (reg/f:DI 2 cx [1095])
        (symbol_ref:DI ("ieql.4153") [flags 0x202]  <var_decl 0x7f0daa8aa2d0 ieql>)) "CALCAPE.f":339 85 {*movdi_internal}
     (nil))
(insn 1269 1268 1270 91 (set (reg:SI 1 dx [1096])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":339 86 {*movsi_internal}
     (nil))
(insn 1270 1269 1271 91 (set (mem:SI (plus:DI (mult:DI (reg:DI 4 si [orig:487 _401 ] [487])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [1095])) [2 ieql S4 A32])
        (reg:SI 1 dx [1096])) "CALCAPE.f":339 86 {*movsi_internal}
     (nil))
;;  succ:       92 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720

;; basic block 92, loop depth 0, maybe hot
;;  prev block 91, next block 165, flags: (RTL, MODIFIED)
;;  pred:       89
;;              91 (FALLTHRU)
;;              90
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1271 1270 1272 92 57 (nil) [2 uses])
(note 1272 1271 1273 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1273 1272 1938 92 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":337 221 {*addsi_1}
     (nil))
(jump_insn 1938 1273 1939 92 (set (pc)
        (label_ref 1274)) "CALCAPE.f":337 683 {jump}
     (nil)
 -> 1274)
;;  succ:       88 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720

(barrier 1939 1938 2021)
;; basic block 165, loop depth 0, maybe hot
;;  prev block 92, next block 93, flags: (RTL, MODIFIED)
;;  pred:       88
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2021 1939 2020 165 122 (nil) [1 uses])
(note 2020 2021 2022 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 2022 2020 1277 165 (const_int 0 [0]) "CALCAPE.f":338 718 {nop}
     (nil))
;;  succ:       93 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720

;; basic block 93, loop depth 0, maybe hot
;;  prev block 165, next block 164, flags: (RTL, MODIFIED)
;;  pred:       165 [always]  (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1277 2022 1278 93 56 (nil) [0 uses])
(note 1278 1277 1279 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 1279 1278 1940 93 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":336 221 {*addsi_1}
     (nil))
(jump_insn 1940 1279 1941 93 (set (pc)
        (label_ref 1280)) "CALCAPE.f":336 683 {jump}
     (nil)
 -> 1280)
;;  succ:       86 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 720

(barrier 1941 1940 2018)
;; basic block 164, loop depth 0, maybe hot
;;  prev block 93, next block 94, flags: (RTL, MODIFIED)
;;  pred:       86
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2018 1941 2017 164 121 (nil) [1 uses])
(note 2017 2018 2019 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 2019 2017 1283 164 (const_int 0 [0]) "CALCAPE.f":337 718 {nop}
     (nil))
;;  succ:       94 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 94, loop depth 0, maybe hot
;;  prev block 164, next block 95, flags: (RTL, MODIFIED)
;;  pred:       164 [always]  (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 723 724
(code_label 1283 2019 1284 94 55 (nil) [0 uses])
(note 1284 1283 1285 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 1285 1284 1286 94 (set (reg:SI 1 dx [orig:723 _837 ] [723])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 16 [0x10]))) [2 parallel.jsta_m+0 S4 A128])) "CALCAPE.f":344 86 {*movsi_internal}
     (nil))
(insn 1286 1285 1287 94 (set (reg:SI 0 ax [orig:724 _838 ] [724])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 20 [0x14]))) [2 parallel.jend_m+0 S4 A32])) "CALCAPE.f":344 86 {*movsi_internal}
     (nil))
(insn 1287 1286 1367 94 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:723 _837 ] [723])) "CALCAPE.f":344 86 {*movsi_internal}
     (nil))
;;  succ:       95 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724

;; basic block 95, loop depth 0, maybe hot
;;  prev block 94, next block 96, flags: (RTL, MODIFIED)
;;  pred:       94 (FALLTHRU)
;;              102 [always] 
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724
;; lr  def 	 17 [flags] 725 1097
(code_label 1367 1287 1288 95 66 (nil) [1 uses])
(note 1288 1367 1289 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1289 1288 1290 95 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:724 _838 ] [724]))) "CALCAPE.f":344 11 {*cmpsi_1}
     (nil))
(insn 1290 1289 1291 95 (set (reg:QI 1 dx [1097])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":344 678 {*setcc_qi}
     (nil))
(insn 1291 1290 1292 95 (set (reg:SI 1 dx [orig:725 _840 ] [725])
        (zero_extend:SI (reg:QI 1 dx [1097]))) "CALCAPE.f":344 140 {*zero_extendqisi2}
     (nil))
(insn 1292 1291 1293 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:725 _840 ] [725])
            (const_int 0 [0]))) "CALCAPE.f":344 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1293 1292 1294 95 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2024)
            (pc))) "CALCAPE.f":344 682 {*jcc}
     (nil)
 -> 2024)
;;  succ:       166
;;              96 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724

;; basic block 96, loop depth 0, maybe hot
;;  prev block 95, next block 97, flags: (RTL, MODIFIED)
;;  pred:       95 (FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1294 1293 1295 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1295 1294 1361 96 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "CALCAPE.f":345 86 {*movsi_internal}
     (nil))
;;  succ:       97 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724

;; basic block 97, loop depth 0, maybe hot
;;  prev block 96, next block 98, flags: (RTL, MODIFIED)
;;  pred:       96 (FALLTHRU)
;;              101 [always] 
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 726 1098
(code_label 1361 1295 1296 97 65 (nil) [1 uses])
(note 1296 1361 1297 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1297 1296 1298 97 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALCAPE.f":345 11 {*cmpsi_1}
     (nil))
(insn 1298 1297 1299 97 (set (reg:QI 1 dx [1098])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":345 678 {*setcc_qi}
     (nil))
(insn 1299 1298 1300 97 (set (reg:SI 1 dx [orig:726 _842 ] [726])
        (zero_extend:SI (reg:QI 1 dx [1098]))) "CALCAPE.f":345 140 {*zero_extendqisi2}
     (nil))
(insn 1300 1299 1301 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:726 _842 ] [726])
            (const_int 0 [0]))) "CALCAPE.f":345 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1301 1300 1302 97 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2027)
            (pc))) "CALCAPE.f":345 682 {*jcc}
     (nil)
 -> 2027)
;;  succ:       167
;;              98 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724

;; basic block 98, loop depth 0, maybe hot
;;  prev block 97, next block 99, flags: (RTL, MODIFIED)
;;  pred:       97 (FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 488 489 490 491 492 493 1099 1100 1101
(note 1302 1301 1303 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 1303 1302 1304 98 (set (reg:SI 1 dx [1099])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":346 86 {*movsi_internal}
     (nil))
(insn 1304 1303 1305 98 (set (reg:DI 1 dx [orig:488 _402 ] [488])
        (sign_extend:DI (reg:SI 1 dx [1099]))) "CALCAPE.f":346 149 {*extendsidi2_rex64}
     (nil))
(insn 1305 1304 1306 98 (parallel [
            (set (reg:DI 2 cx [orig:489 _403 ] [489])
                (mult:DI (reg:DI 1 dx [orig:488 _402 ] [488])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":346 349 {*muldi3_1}
     (nil))
(insn 1306 1305 1307 98 (set (reg:SI 1 dx [1100])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":346 86 {*movsi_internal}
     (nil))
(insn 1307 1306 1308 98 (set (reg:DI 1 dx [orig:490 _404 ] [490])
        (sign_extend:DI (reg:SI 1 dx [1100]))) "CALCAPE.f":346 149 {*extendsidi2_rex64}
     (nil))
(insn 1308 1307 1309 98 (parallel [
            (set (reg:DI 1 dx [orig:491 _405 ] [491])
                (plus:DI (reg:DI 1 dx [orig:490 _404 ] [490])
                    (reg:DI 2 cx [orig:489 _403 ] [489])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":346 222 {*adddi_1}
     (nil))
(insn 1309 1308 1310 98 (parallel [
            (set (reg:DI 2 cx [orig:492 _406 ] [492])
                (plus:DI (reg:DI 1 dx [orig:491 _405 ] [491])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":346 222 {*adddi_1}
     (nil))
(insn 1310 1309 1311 98 (set (reg/f:DI 1 dx [1101])
        (symbol_ref:DI ("klres.4166") [flags 0x202]  <var_decl 0x7f0daa8aa7e0 klres>)) "CALCAPE.f":346 85 {*movdi_internal}
     (nil))
(insn 1311 1310 1312 98 (set (reg:SI 1 dx [orig:493 _407 ] [493])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:492 _406 ] [492])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1101])) [2 klres S4 A32])) "CALCAPE.f":346 86 {*movsi_internal}
     (nil))
(insn 1312 1311 1313 98 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 1 dx [orig:493 _407 ] [493])
            (const_int 0 [0]))) "CALCAPE.f":346 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1313 1312 1314 98 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1358)
            (pc))) "CALCAPE.f":346 682 {*jcc}
     (nil)
 -> 1358)
;;  succ:       99 (FALLTHRU)
;;              101
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724

;; basic block 99, loop depth 0, maybe hot
;;  prev block 98, next block 100, flags: (RTL, MODIFIED)
;;  pred:       98 (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 494 495 496 497 498 499 500 501 502 503 504 505 506 507 508 509 510 511 1102 1103 1104 1105 1106 1107 1108 1109 1110
(note 1314 1313 1315 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 1315 1314 1316 99 (set (reg:SI 1 dx [1102])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":347 86 {*movsi_internal}
     (nil))
(insn 1316 1315 1317 99 (set (reg:DI 1 dx [orig:494 _408 ] [494])
        (sign_extend:DI (reg:SI 1 dx [1102]))) "CALCAPE.f":347 149 {*extendsidi2_rex64}
     (nil))
(insn 1317 1316 1318 99 (parallel [
            (set (reg:DI 2 cx [orig:495 _409 ] [495])
                (mult:DI (reg:DI 1 dx [orig:494 _408 ] [494])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":347 349 {*muldi3_1}
     (nil))
(insn 1318 1317 1319 99 (set (reg:SI 1 dx [1103])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":347 86 {*movsi_internal}
     (nil))
(insn 1319 1318 1320 99 (set (reg:DI 1 dx [orig:496 _410 ] [496])
        (sign_extend:DI (reg:SI 1 dx [1103]))) "CALCAPE.f":347 149 {*extendsidi2_rex64}
     (nil))
(insn 1320 1319 1321 99 (parallel [
            (set (reg:DI 1 dx [orig:497 _411 ] [497])
                (mult:DI (reg:DI 1 dx [orig:496 _410 ] [496])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":347 349 {*muldi3_1}
     (nil))
(insn 1321 1320 1322 99 (parallel [
            (set (reg:DI 2 cx [orig:498 _412 ] [498])
                (plus:DI (reg:DI 2 cx [orig:495 _409 ] [495])
                    (reg:DI 1 dx [orig:497 _411 ] [497])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":347 222 {*adddi_1}
     (nil))
(insn 1322 1321 1323 99 (set (reg:SI 1 dx [1104])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":347 86 {*movsi_internal}
     (nil))
(insn 1323 1322 1324 99 (set (reg:DI 1 dx [orig:499 _413 ] [499])
        (sign_extend:DI (reg:SI 1 dx [1104]))) "CALCAPE.f":347 149 {*extendsidi2_rex64}
     (nil))
(insn 1324 1323 1325 99 (parallel [
            (set (reg:DI 1 dx [orig:500 _414 ] [500])
                (plus:DI (reg:DI 1 dx [orig:499 _413 ] [499])
                    (reg:DI 2 cx [orig:498 _412 ] [498])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":347 222 {*adddi_1}
     (nil))
(insn 1325 1324 1326 99 (parallel [
            (set (reg:DI 2 cx [orig:501 _415 ] [501])
                (plus:DI (reg:DI 1 dx [orig:500 _414 ] [500])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":347 222 {*adddi_1}
     (nil))
(insn 1326 1325 1327 99 (set (reg/f:DI 1 dx [1105])
        (symbol_ref:DI ("tpar.4198") [flags 0x202]  <var_decl 0x7f0daa8ac6c0 tpar>)) "CALCAPE.f":347 85 {*movdi_internal}
     (nil))
(insn 1327 1326 1328 99 (set (reg:SF 21 xmm0 [orig:502 _416 ] [502])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:501 _415 ] [501])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1105])) [1 tpar S4 A32])) "CALCAPE.f":347 131 {*movsf_internal}
     (nil))
(insn 1328 1327 1329 99 (set (reg:SI 1 dx [1106])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":347 86 {*movsi_internal}
     (nil))
(insn 1329 1328 1330 99 (set (reg:DI 1 dx [orig:503 _417 ] [503])
        (sign_extend:DI (reg:SI 1 dx [1106]))) "CALCAPE.f":347 149 {*extendsidi2_rex64}
     (nil))
(insn 1330 1329 1331 99 (parallel [
            (set (reg:DI 2 cx [orig:504 _418 ] [504])
                (mult:DI (reg:DI 1 dx [orig:503 _417 ] [503])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":347 349 {*muldi3_1}
     (nil))
(insn 1331 1330 1332 99 (set (reg:SI 1 dx [1107])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":347 86 {*movsi_internal}
     (nil))
(insn 1332 1331 1333 99 (set (reg:DI 1 dx [orig:505 _419 ] [505])
        (sign_extend:DI (reg:SI 1 dx [1107]))) "CALCAPE.f":347 149 {*extendsidi2_rex64}
     (nil))
(insn 1333 1332 1334 99 (parallel [
            (set (reg:DI 1 dx [orig:506 _420 ] [506])
                (mult:DI (reg:DI 1 dx [orig:505 _419 ] [505])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":347 349 {*muldi3_1}
     (nil))
(insn 1334 1333 1335 99 (parallel [
            (set (reg:DI 2 cx [orig:507 _421 ] [507])
                (plus:DI (reg:DI 2 cx [orig:504 _418 ] [504])
                    (reg:DI 1 dx [orig:506 _420 ] [506])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":347 222 {*adddi_1}
     (nil))
(insn 1335 1334 1336 99 (set (reg:SI 1 dx [1108])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":347 86 {*movsi_internal}
     (nil))
(insn 1336 1335 1337 99 (set (reg:DI 1 dx [orig:508 _422 ] [508])
        (sign_extend:DI (reg:SI 1 dx [1108]))) "CALCAPE.f":347 149 {*extendsidi2_rex64}
     (nil))
(insn 1337 1336 1338 99 (parallel [
            (set (reg:DI 1 dx [orig:509 _423 ] [509])
                (plus:DI (reg:DI 1 dx [orig:508 _422 ] [508])
                    (reg:DI 2 cx [orig:507 _421 ] [507])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":347 222 {*adddi_1}
     (nil))
(insn 1338 1337 1339 99 (parallel [
            (set (reg:DI 2 cx [orig:510 _424 ] [510])
                (plus:DI (reg:DI 1 dx [orig:509 _423 ] [509])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":347 222 {*adddi_1}
     (nil))
(insn 1339 1338 1340 99 (set (reg/f:DI 1 dx [1109])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0daa8a8990 vrbls>)) "CALCAPE.f":347 85 {*movdi_internal}
     (nil))
(insn 1340 1339 1341 99 (parallel [
            (set (reg:DI 2 cx [1110])
                (plus:DI (reg:DI 2 cx [orig:510 _424 ] [510])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":347 222 {*adddi_1}
     (nil))
(insn 1341 1340 1342 99 (set (reg:SF 22 xmm1 [orig:511 _425 ] [511])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [1110])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1109])) [1 vrbls.t S4 A32])) "CALCAPE.f":347 131 {*movsf_internal}
     (nil))
(insn 1342 1341 1343 99 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:502 _416 ] [502])
            (reg:SF 22 xmm1 [orig:511 _425 ] [511]))) "CALCAPE.f":347 53 {*cmpisf}
     (nil))
(jump_insn 1343 1342 1347 99 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1358)
            (pc))) "CALCAPE.f":347 682 {*jcc}
     (nil)
 -> 1358)
;;  succ:       100 (FALLTHRU)
;;              101
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724

;; basic block 100, loop depth 0, maybe hot
;;  prev block 99, next block 101, flags: (RTL, MODIFIED)
;;  pred:       99 (FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 512 513 514 515 516 1111 1112 1113 1114
(note 1347 1343 1348 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 1348 1347 1349 100 (set (reg:SI 1 dx [1111])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":347 86 {*movsi_internal}
     (nil))
(insn 1349 1348 1350 100 (set (reg:DI 1 dx [orig:512 _426 ] [512])
        (sign_extend:DI (reg:SI 1 dx [1111]))) "CALCAPE.f":347 149 {*extendsidi2_rex64}
     (nil))
(insn 1350 1349 1351 100 (parallel [
            (set (reg:DI 2 cx [orig:513 _427 ] [513])
                (mult:DI (reg:DI 1 dx [orig:512 _426 ] [512])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":347 349 {*muldi3_1}
     (nil))
(insn 1351 1350 1352 100 (set (reg:SI 1 dx [1112])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":347 86 {*movsi_internal}
     (nil))
(insn 1352 1351 1353 100 (set (reg:DI 1 dx [orig:514 _428 ] [514])
        (sign_extend:DI (reg:SI 1 dx [1112]))) "CALCAPE.f":347 149 {*extendsidi2_rex64}
     (nil))
(insn 1353 1352 1354 100 (parallel [
            (set (reg:DI 1 dx [orig:515 _429 ] [515])
                (plus:DI (reg:DI 1 dx [orig:514 _428 ] [514])
                    (reg:DI 2 cx [orig:513 _427 ] [513])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":347 222 {*adddi_1}
     (nil))
(insn 1354 1353 1355 100 (parallel [
            (set (reg:DI 4 si [orig:516 _430 ] [516])
                (plus:DI (reg:DI 1 dx [orig:515 _429 ] [515])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":347 222 {*adddi_1}
     (nil))
(insn 1355 1354 1356 100 (set (reg/f:DI 2 cx [1113])
        (symbol_ref:DI ("ieql.4153") [flags 0x202]  <var_decl 0x7f0daa8aa2d0 ieql>)) "CALCAPE.f":347 85 {*movdi_internal}
     (nil))
(insn 1356 1355 1357 100 (set (reg:SI 1 dx [1114])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":347 86 {*movsi_internal}
     (nil))
(insn 1357 1356 1358 100 (set (mem:SI (plus:DI (mult:DI (reg:DI 4 si [orig:516 _430 ] [516])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [1113])) [2 ieql S4 A32])
        (reg:SI 1 dx [1114])) "CALCAPE.f":347 86 {*movsi_internal}
     (nil))
;;  succ:       101 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724

;; basic block 101, loop depth 0, maybe hot
;;  prev block 100, next block 167, flags: (RTL, MODIFIED)
;;  pred:       98
;;              100 (FALLTHRU)
;;              99
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1358 1357 1359 101 63 (nil) [2 uses])
(note 1359 1358 1360 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 1360 1359 1942 101 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":345 221 {*addsi_1}
     (nil))
(jump_insn 1942 1360 1943 101 (set (pc)
        (label_ref 1361)) "CALCAPE.f":345 683 {jump}
     (nil)
 -> 1361)
;;  succ:       97 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724

(barrier 1943 1942 2027)
;; basic block 167, loop depth 0, maybe hot
;;  prev block 101, next block 102, flags: (RTL, MODIFIED)
;;  pred:       97
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2027 1943 2026 167 124 (nil) [1 uses])
(note 2026 2027 2028 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 2028 2026 1364 167 (const_int 0 [0]) "CALCAPE.f":346 718 {nop}
     (nil))
;;  succ:       102 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724

;; basic block 102, loop depth 0, maybe hot
;;  prev block 167, next block 166, flags: (RTL, MODIFIED)
;;  pred:       167 [always]  (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1364 2028 1365 102 62 (nil) [0 uses])
(note 1365 1364 1366 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 1366 1365 1944 102 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":344 221 {*addsi_1}
     (nil))
(jump_insn 1944 1366 1945 102 (set (pc)
        (label_ref 1367)) "CALCAPE.f":344 683 {jump}
     (nil)
 -> 1367)
;;  succ:       95 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 724

(barrier 1945 1944 2024)
;; basic block 166, loop depth 0, maybe hot
;;  prev block 102, next block 103, flags: (RTL, MODIFIED)
;;  pred:       95
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2024 1945 2023 166 123 (nil) [1 uses])
(note 2023 2024 2025 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 2025 2023 1370 166 (const_int 0 [0]) "CALCAPE.f":345 718 {nop}
     (nil))
;;  succ:       103 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 103, loop depth 0, maybe hot
;;  prev block 166, next block 161, flags: (RTL, MODIFIED)
;;  pred:       166 [always]  (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1370 2025 1371 103 61 (nil) [0 uses])
(note 1371 1370 1372 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 1372 1371 1946 103 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":298 221 {*addsi_1}
     (nil))
(jump_insn 1946 1372 1947 103 (set (pc)
        (label_ref 1373)) "CALCAPE.f":298 683 {jump}
     (nil)
 -> 1373)
;;  succ:       70 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 1947 1946 2009)
;; basic block 161, loop depth 0, maybe hot
;;  prev block 103, next block 104, flags: (RTL, MODIFIED)
;;  pred:       70
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2009 1947 2008 161 118 (nil) [1 uses])
(note 2008 2009 2010 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 2010 2008 1376 161 (const_int 0 [0]) "CALCAPE.f":352 718 {nop}
     (nil))
;;  succ:       104 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 104, loop depth 0, maybe hot
;;  prev block 161, next block 105, flags: (RTL, MODIFIED)
;;  pred:       161 [always]  (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 727 728
(code_label 1376 2010 1377 104 44 (nil) [0 uses])
(note 1377 1376 1378 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 1378 1377 1379 104 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 lbeg+0 S4 A32])
        (const_int 100 [0x64])) "CALCAPE.f":369 86 {*movsi_internal}
     (nil))
(insn 1379 1378 1380 104 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 lend+0 S4 A32])
        (const_int 0 [0])) "CALCAPE.f":370 86 {*movsi_internal}
     (nil))
(insn 1380 1379 1381 104 (set (reg:SI 0 ax [orig:727 _849 ] [727])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 16 [0x10]))) [2 parallel.jsta_m+0 S4 A128])) "CALCAPE.f":374 86 {*movsi_internal}
     (nil))
(insn 1381 1380 1382 104 (set (reg:SI 1 dx [orig:728 _850 ] [728])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 20 [0x14]))) [2 parallel.jend_m+0 S4 A32])) "CALCAPE.f":374 86 {*movsi_internal}
     (nil))
(insn 1382 1381 1437 104 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
        (reg:SI 0 ax [orig:727 _849 ] [727])) "CALCAPE.f":374 86 {*movsi_internal}
     (nil))
;;  succ:       105 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728

;; basic block 105, loop depth 0, maybe hot
;;  prev block 104, next block 106, flags: (RTL, MODIFIED)
;;  pred:       104 (FALLTHRU)
;;              113 [always] 
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728
;; lr  def 	 17 [flags] 729 1115
(code_label 1437 1382 1383 105 73 (nil) [1 uses])
(note 1383 1437 1384 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 1384 1383 1385 105 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
            (reg:SI 1 dx [orig:728 _850 ] [728]))) "CALCAPE.f":374 11 {*cmpsi_1}
     (nil))
(insn 1385 1384 1386 105 (set (reg:QI 0 ax [1115])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":374 678 {*setcc_qi}
     (nil))
(insn 1386 1385 1387 105 (set (reg:SI 0 ax [orig:729 _852 ] [729])
        (zero_extend:SI (reg:QI 0 ax [1115]))) "CALCAPE.f":374 140 {*zero_extendqisi2}
     (nil))
(insn 1387 1386 1388 105 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:729 _852 ] [729])
            (const_int 0 [0]))) "CALCAPE.f":374 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1388 1387 1389 105 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2030)
            (pc))) "CALCAPE.f":374 682 {*jcc}
     (nil)
 -> 2030)
;;  succ:       168
;;              106 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728

;; basic block 106, loop depth 0, maybe hot
;;  prev block 105, next block 107, flags: (RTL, MODIFIED)
;;  pred:       105 (FALLTHRU)
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1389 1388 1390 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 1390 1389 1431 106 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "CALCAPE.f":375 86 {*movsi_internal}
     (nil))
;;  succ:       107 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728

;; basic block 107, loop depth 0, maybe hot
;;  prev block 106, next block 108, flags: (RTL, MODIFIED)
;;  pred:       106 (FALLTHRU)
;;              112 [always] 
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 730 1116
(code_label 1431 1390 1391 107 72 (nil) [1 uses])
(note 1391 1431 1392 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 1392 1391 1393 107 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALCAPE.f":375 11 {*cmpsi_1}
     (nil))
(insn 1393 1392 1394 107 (set (reg:QI 0 ax [1116])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":375 678 {*setcc_qi}
     (nil))
(insn 1394 1393 1395 107 (set (reg:SI 0 ax [orig:730 _854 ] [730])
        (zero_extend:SI (reg:QI 0 ax [1116]))) "CALCAPE.f":375 140 {*zero_extendqisi2}
     (nil))
(insn 1395 1394 1396 107 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:730 _854 ] [730])
            (const_int 0 [0]))) "CALCAPE.f":375 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1396 1395 1397 107 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2033)
            (pc))) "CALCAPE.f":375 682 {*jcc}
     (nil)
 -> 2033)
;;  succ:       169
;;              108 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728

;; basic block 108, loop depth 0, maybe hot
;;  prev block 107, next block 109, flags: (RTL, MODIFIED)
;;  pred:       107 (FALLTHRU)
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 517 518 519 520 521 684 1117 1118 1119
(note 1397 1396 1398 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 1398 1397 1399 108 (set (reg:SI 0 ax [1117])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":376 86 {*movsi_internal}
     (nil))
(insn 1399 1398 1400 108 (set (reg:DI 0 ax [orig:517 _431 ] [517])
        (sign_extend:DI (reg:SI 0 ax [1117]))) "CALCAPE.f":376 149 {*extendsidi2_rex64}
     (nil))
(insn 1400 1399 1401 108 (parallel [
            (set (reg:DI 2 cx [orig:518 _432 ] [518])
                (mult:DI (reg:DI 0 ax [orig:517 _431 ] [517])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":376 349 {*muldi3_1}
     (nil))
(insn 1401 1400 1402 108 (set (reg:SI 0 ax [1118])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":376 86 {*movsi_internal}
     (nil))
(insn 1402 1401 1403 108 (set (reg:DI 0 ax [orig:519 _433 ] [519])
        (sign_extend:DI (reg:SI 0 ax [1118]))) "CALCAPE.f":376 149 {*extendsidi2_rex64}
     (nil))
(insn 1403 1402 1404 108 (parallel [
            (set (reg:DI 0 ax [orig:520 _434 ] [520])
                (plus:DI (reg:DI 0 ax [orig:519 _433 ] [519])
                    (reg:DI 2 cx [orig:518 _432 ] [518])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":376 222 {*adddi_1}
     (nil))
(insn 1404 1403 1405 108 (parallel [
            (set (reg:DI 2 cx [orig:521 _435 ] [521])
                (plus:DI (reg:DI 0 ax [orig:520 _434 ] [520])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":376 222 {*adddi_1}
     (nil))
(insn 1405 1404 1406 108 (set (reg/f:DI 0 ax [1119])
        (symbol_ref:DI ("ieql.4153") [flags 0x202]  <var_decl 0x7f0daa8aa2d0 ieql>)) "CALCAPE.f":376 85 {*movdi_internal}
     (nil))
(insn 1406 1405 1407 108 (set (reg:SI 0 ax [orig:684 M.0_646 ] [684])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:521 _435 ] [521])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1119])) [2 ieql S4 A32])) "CALCAPE.f":376 86 {*movsi_internal}
     (nil))
(insn 1407 1406 1408 108 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 lbeg+0 S4 A32])
            (reg:SI 0 ax [orig:684 M.0_646 ] [684]))) "CALCAPE.f":376 11 {*cmpsi_1}
     (nil))
(jump_insn 1408 1407 1409 108 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1411)
            (pc))) "CALCAPE.f":376 682 {*jcc}
     (nil)
 -> 1411)
;;  succ:       109 (FALLTHRU)
;;              110
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 684 728

;; basic block 109, loop depth 0, maybe hot
;;  prev block 108, next block 110, flags: (RTL, MODIFIED)
;;  pred:       108 (FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 684
(note 1409 1408 1410 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 1410 1409 1411 109 (set (reg:SI 0 ax [orig:684 M.0_646 ] [684])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 lbeg+0 S4 A32])) "CALCAPE.f":376 86 {*movsi_internal}
     (nil))
;;  succ:       110 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 684 728

;; basic block 110, loop depth 0, maybe hot
;;  prev block 109, next block 111, flags: (RTL, MODIFIED)
;;  pred:       108
;;              109 (FALLTHRU)
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 684 728
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 684
;; lr  def 	 17 [flags] 522 523 524 525 526 685 1120 1121 1122
(code_label 1411 1410 1412 110 70 (nil) [1 uses])
(note 1412 1411 1413 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 1413 1412 1414 110 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 lbeg+0 S4 A32])
        (reg:SI 0 ax [orig:684 M.0_646 ] [684])) "CALCAPE.f":376 86 {*movsi_internal}
     (nil))
(insn 1414 1413 1415 110 (set (reg:SI 0 ax [1120])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":377 86 {*movsi_internal}
     (nil))
(insn 1415 1414 1416 110 (set (reg:DI 0 ax [orig:522 _436 ] [522])
        (sign_extend:DI (reg:SI 0 ax [1120]))) "CALCAPE.f":377 149 {*extendsidi2_rex64}
     (nil))
(insn 1416 1415 1417 110 (parallel [
            (set (reg:DI 2 cx [orig:523 _437 ] [523])
                (mult:DI (reg:DI 0 ax [orig:522 _436 ] [522])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":377 349 {*muldi3_1}
     (nil))
(insn 1417 1416 1418 110 (set (reg:SI 0 ax [1121])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":377 86 {*movsi_internal}
     (nil))
(insn 1418 1417 1419 110 (set (reg:DI 0 ax [orig:524 _438 ] [524])
        (sign_extend:DI (reg:SI 0 ax [1121]))) "CALCAPE.f":377 149 {*extendsidi2_rex64}
     (nil))
(insn 1419 1418 1420 110 (parallel [
            (set (reg:DI 0 ax [orig:525 _439 ] [525])
                (plus:DI (reg:DI 0 ax [orig:524 _438 ] [524])
                    (reg:DI 2 cx [orig:523 _437 ] [523])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":377 222 {*adddi_1}
     (nil))
(insn 1420 1419 1421 110 (parallel [
            (set (reg:DI 2 cx [orig:526 _440 ] [526])
                (plus:DI (reg:DI 0 ax [orig:525 _439 ] [525])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":377 222 {*adddi_1}
     (nil))
(insn 1421 1420 1422 110 (set (reg/f:DI 0 ax [1122])
        (symbol_ref:DI ("lcl.4172") [flags 0x202]  <var_decl 0x7f0daa8aaab0 lcl>)) "CALCAPE.f":377 85 {*movdi_internal}
     (nil))
(insn 1422 1421 1423 110 (set (reg:SI 0 ax [orig:685 M.1_647 ] [685])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:526 _440 ] [526])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1122])) [2 lcl S4 A32])) "CALCAPE.f":377 86 {*movsi_internal}
     (nil))
(insn 1423 1422 1424 110 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [2 lend+0 S4 A32])
            (reg:SI 0 ax [orig:685 M.1_647 ] [685]))) "CALCAPE.f":377 11 {*cmpsi_1}
     (nil))
(jump_insn 1424 1423 1425 110 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1427)
            (pc))) "CALCAPE.f":377 682 {*jcc}
     (nil)
 -> 1427)
;;  succ:       111 (FALLTHRU)
;;              112
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 685 728

;; basic block 111, loop depth 0, maybe hot
;;  prev block 110, next block 112, flags: (RTL, MODIFIED)
;;  pred:       110 (FALLTHRU)
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 685
(note 1425 1424 1426 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 1426 1425 1427 111 (set (reg:SI 0 ax [orig:685 M.1_647 ] [685])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 lend+0 S4 A32])) "CALCAPE.f":377 86 {*movsi_internal}
     (nil))
;;  succ:       112 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 685 728

;; basic block 112, loop depth 0, maybe hot
;;  prev block 111, next block 169, flags: (RTL, MODIFIED)
;;  pred:       110
;;              111 (FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 685 728
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 685
;; lr  def 	 17 [flags]
(code_label 1427 1426 1428 112 71 (nil) [1 uses])
(note 1428 1427 1429 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 1429 1428 1430 112 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 lend+0 S4 A32])
        (reg:SI 0 ax [orig:685 M.1_647 ] [685])) "CALCAPE.f":377 86 {*movsi_internal}
     (nil))
(insn 1430 1429 1948 112 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":375 221 {*addsi_1}
     (nil))
(jump_insn 1948 1430 1949 112 (set (pc)
        (label_ref 1431)) "CALCAPE.f":375 683 {jump}
     (nil)
 -> 1431)
;;  succ:       107 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728

(barrier 1949 1948 2033)
;; basic block 169, loop depth 0, maybe hot
;;  prev block 112, next block 113, flags: (RTL, MODIFIED)
;;  pred:       107
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2033 1949 2032 169 126 (nil) [1 uses])
(note 2032 2033 2034 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 2034 2032 1434 169 (const_int 0 [0]) "CALCAPE.f":377 718 {nop}
     (nil))
;;  succ:       113 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728

;; basic block 113, loop depth 0, maybe hot
;;  prev block 169, next block 168, flags: (RTL, MODIFIED)
;;  pred:       169 [always]  (FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1434 2034 1435 113 69 (nil) [0 uses])
(note 1435 1434 1436 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 1436 1435 1950 113 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":374 221 {*addsi_1}
     (nil))
(jump_insn 1950 1436 1951 113 (set (pc)
        (label_ref 1437)) "CALCAPE.f":374 683 {jump}
     (nil)
 -> 1437)
;;  succ:       105 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 728

(barrier 1951 1950 2030)
;; basic block 168, loop depth 0, maybe hot
;;  prev block 113, next block 114, flags: (RTL, MODIFIED)
;;  pred:       105
;; bb 168 artificial_defs: { }
;; bb 168 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2030 1951 2029 168 125 (nil) [1 uses])
(note 2029 2030 2031 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 2031 2029 1440 168 (const_int 0 [0]) "CALCAPE.f":375 718 {nop}
     (nil))
;;  succ:       114 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 114, loop depth 0, maybe hot
;;  prev block 168, next block 115, flags: (RTL, MODIFIED)
;;  pred:       168 [always]  (FALLTHRU)
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 731 732
(code_label 1440 2031 1441 114 68 (nil) [0 uses])
(note 1441 1440 1442 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 1442 1441 1443 114 (set (reg:SI 0 ax [orig:731 _865 ] [731])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 lbeg+0 S4 A32])) "CALCAPE.f":381 86 {*movsi_internal}
     (nil))
(insn 1443 1442 1444 114 (set (reg:SI 3 bx [orig:732 _866 ] [732])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 lend+0 S4 A32])) "CALCAPE.f":381 86 {*movsi_internal}
     (nil))
(insn 1444 1443 1775 114 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
        (reg:SI 0 ax [orig:731 _865 ] [731])) "CALCAPE.f":381 86 {*movsi_internal}
     (nil))
;;  succ:       115 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732

;; basic block 115, loop depth 0, maybe hot
;;  prev block 114, next block 116, flags: (RTL, MODIFIED)
;;  pred:       114 (FALLTHRU)
;;              136 [always] 
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732
;; lr  def 	 17 [flags] 733 1123
(code_label 1775 1444 1445 115 88 (nil) [1 uses])
(note 1445 1775 1446 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 1446 1445 1447 115 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
            (reg:SI 3 bx [orig:732 _866 ] [732]))) "CALCAPE.f":381 11 {*cmpsi_1}
     (nil))
(insn 1447 1446 1448 115 (set (reg:QI 0 ax [1123])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":381 678 {*setcc_qi}
     (nil))
(insn 1448 1447 1449 115 (set (reg:SI 0 ax [orig:733 _868 ] [733])
        (zero_extend:SI (reg:QI 0 ax [1123]))) "CALCAPE.f":381 140 {*zero_extendqisi2}
     (nil))
(insn 1449 1448 1450 115 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:733 _868 ] [733])
            (const_int 0 [0]))) "CALCAPE.f":381 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1450 1449 1451 115 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2036)
            (pc))) "CALCAPE.f":381 682 {*jcc}
     (nil)
 -> 2036)
;;  succ:       170
;;              116 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732

;; basic block 116, loop depth 0, maybe hot
;;  prev block 115, next block 117, flags: (RTL, MODIFIED)
;;  pred:       115 (FALLTHRU)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 734 735
(note 1451 1450 1452 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 1452 1451 1453 116 (set (reg:SI 1 dx [orig:734 _869 ] [734])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 16 [0x10]))) [2 parallel.jsta_m+0 S4 A128])) "CALCAPE.f":382 86 {*movsi_internal}
     (nil))
(insn 1453 1452 1454 116 (set (reg:SI 0 ax [orig:735 _870 ] [735])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 20 [0x14]))) [2 parallel.jend_m+0 S4 A32])) "CALCAPE.f":382 86 {*movsi_internal}
     (nil))
(insn 1454 1453 1521 116 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:734 _869 ] [734])) "CALCAPE.f":382 86 {*movsi_internal}
     (nil))
;;  succ:       117 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735

;; basic block 117, loop depth 0, maybe hot
;;  prev block 116, next block 118, flags: (RTL, MODIFIED)
;;  pred:       116 (FALLTHRU)
;;              124 [always] 
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 735
;; lr  def 	 17 [flags] 736 1124
(code_label 1521 1454 1455 117 79 (nil) [1 uses])
(note 1455 1521 1456 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 1456 1455 1457 117 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:735 _870 ] [735]))) "CALCAPE.f":382 11 {*cmpsi_1}
     (nil))
(insn 1457 1456 1458 117 (set (reg:QI 1 dx [1124])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":382 678 {*setcc_qi}
     (nil))
(insn 1458 1457 1459 117 (set (reg:SI 1 dx [orig:736 _872 ] [736])
        (zero_extend:SI (reg:QI 1 dx [1124]))) "CALCAPE.f":382 140 {*zero_extendqisi2}
     (nil))
(insn 1459 1458 1460 117 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:736 _872 ] [736])
            (const_int 0 [0]))) "CALCAPE.f":382 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1460 1459 1461 117 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2039)
            (pc))) "CALCAPE.f":382 682 {*jcc}
     (nil)
 -> 2039)
;;  succ:       171
;;              118 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735

;; basic block 118, loop depth 0, maybe hot
;;  prev block 117, next block 119, flags: (RTL, MODIFIED)
;;  pred:       117 (FALLTHRU)
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1461 1460 1462 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 1462 1461 1515 118 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "CALCAPE.f":383 86 {*movsi_internal}
     (nil))
;;  succ:       119 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735

;; basic block 119, loop depth 0, maybe hot
;;  prev block 118, next block 120, flags: (RTL, MODIFIED)
;;  pred:       118 (FALLTHRU)
;;              123 [always] 
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 737 1125
(code_label 1515 1462 1463 119 78 (nil) [1 uses])
(note 1463 1515 1464 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 1464 1463 1465 119 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALCAPE.f":383 11 {*cmpsi_1}
     (nil))
(insn 1465 1464 1466 119 (set (reg:QI 1 dx [1125])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":383 678 {*setcc_qi}
     (nil))
(insn 1466 1465 1467 119 (set (reg:SI 1 dx [orig:737 _874 ] [737])
        (zero_extend:SI (reg:QI 1 dx [1125]))) "CALCAPE.f":383 140 {*zero_extendqisi2}
     (nil))
(insn 1467 1466 1468 119 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:737 _874 ] [737])
            (const_int 0 [0]))) "CALCAPE.f":383 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1468 1467 1469 119 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2042)
            (pc))) "CALCAPE.f":383 682 {*jcc}
     (nil)
 -> 2042)
;;  succ:       172
;;              120 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735

;; basic block 120, loop depth 0, maybe hot
;;  prev block 119, next block 121, flags: (RTL, MODIFIED)
;;  pred:       119 (FALLTHRU)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 527 528 529 530 531 532 533 534 535 536 537 1126 1127 1128 1129 1130 1131
(note 1469 1468 1470 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 1470 1469 1471 120 (set (reg:SI 1 dx [1126])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":384 86 {*movsi_internal}
     (nil))
(insn 1471 1470 1472 120 (set (reg:DI 1 dx [orig:527 _441 ] [527])
        (sign_extend:DI (reg:SI 1 dx [1126]))) "CALCAPE.f":384 149 {*extendsidi2_rex64}
     (nil))
(insn 1472 1471 1473 120 (parallel [
            (set (reg:DI 2 cx [orig:528 _442 ] [528])
                (mult:DI (reg:DI 1 dx [orig:527 _441 ] [527])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":384 349 {*muldi3_1}
     (nil))
(insn 1473 1472 1474 120 (set (reg:SI 1 dx [1127])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":384 86 {*movsi_internal}
     (nil))
(insn 1474 1473 1475 120 (set (reg:DI 1 dx [orig:529 _443 ] [529])
        (sign_extend:DI (reg:SI 1 dx [1127]))) "CALCAPE.f":384 149 {*extendsidi2_rex64}
     (nil))
(insn 1475 1474 1476 120 (parallel [
            (set (reg:DI 1 dx [orig:530 _444 ] [530])
                (plus:DI (reg:DI 1 dx [orig:529 _443 ] [529])
                    (reg:DI 2 cx [orig:528 _442 ] [528])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":384 222 {*adddi_1}
     (nil))
(insn 1476 1475 1477 120 (parallel [
            (set (reg:DI 2 cx [orig:531 _445 ] [531])
                (plus:DI (reg:DI 1 dx [orig:530 _444 ] [530])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":384 222 {*adddi_1}
     (nil))
(insn 1477 1476 1478 120 (set (reg/f:DI 1 dx [1128])
        (symbol_ref:DI ("idx.4151") [flags 0x202]  <var_decl 0x7f0daa8aa240 idx>)) "CALCAPE.f":384 85 {*movdi_internal}
     (nil))
(insn 1478 1477 1479 120 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:531 _445 ] [531])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1128])) [2 idx S4 A32])
        (const_int 0 [0])) "CALCAPE.f":384 86 {*movsi_internal}
     (nil))
(insn 1479 1478 1480 120 (set (reg:SI 1 dx [1129])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":385 86 {*movsi_internal}
     (nil))
(insn 1480 1479 1481 120 (set (reg:DI 1 dx [orig:532 _446 ] [532])
        (sign_extend:DI (reg:SI 1 dx [1129]))) "CALCAPE.f":385 149 {*extendsidi2_rex64}
     (nil))
(insn 1481 1480 1482 120 (parallel [
            (set (reg:DI 2 cx [orig:533 _447 ] [533])
                (mult:DI (reg:DI 1 dx [orig:532 _446 ] [532])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":385 349 {*muldi3_1}
     (nil))
(insn 1482 1481 1483 120 (set (reg:SI 1 dx [1130])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":385 86 {*movsi_internal}
     (nil))
(insn 1483 1482 1484 120 (set (reg:DI 1 dx [orig:534 _448 ] [534])
        (sign_extend:DI (reg:SI 1 dx [1130]))) "CALCAPE.f":385 149 {*extendsidi2_rex64}
     (nil))
(insn 1484 1483 1485 120 (parallel [
            (set (reg:DI 1 dx [orig:535 _449 ] [535])
                (plus:DI (reg:DI 1 dx [orig:534 _448 ] [534])
                    (reg:DI 2 cx [orig:533 _447 ] [533])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":385 222 {*adddi_1}
     (nil))
(insn 1485 1484 1486 120 (parallel [
            (set (reg:DI 2 cx [orig:536 _450 ] [536])
                (plus:DI (reg:DI 1 dx [orig:535 _449 ] [535])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":385 222 {*adddi_1}
     (nil))
(insn 1486 1485 1487 120 (set (reg/f:DI 1 dx [1131])
        (symbol_ref:DI ("ieql.4153") [flags 0x202]  <var_decl 0x7f0daa8aa2d0 ieql>)) "CALCAPE.f":385 85 {*movdi_internal}
     (nil))
(insn 1487 1486 1488 120 (set (reg:SI 1 dx [orig:537 _451 ] [537])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:536 _450 ] [536])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1131])) [2 ieql S4 A32])) "CALCAPE.f":385 86 {*movsi_internal}
     (nil))
(insn 1488 1487 1489 120 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
            (reg:SI 1 dx [orig:537 _451 ] [537]))) "CALCAPE.f":385 11 {*cmpsi_1}
     (nil))
(jump_insn 1489 1488 1490 120 (set (pc)
        (if_then_else (lt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1512)
            (pc))) "CALCAPE.f":385 682 {*jcc}
     (nil)
 -> 1512)
;;  succ:       121 (FALLTHRU)
;;              123
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735

;; basic block 121, loop depth 0, maybe hot
;;  prev block 120, next block 122, flags: (RTL, MODIFIED)
;;  pred:       120 (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 538 539 540 541 542 543 1132 1133 1134
(note 1490 1489 1491 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 1491 1490 1492 121 (set (reg:SI 1 dx [1132])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":385 86 {*movsi_internal}
     (nil))
(insn 1492 1491 1493 121 (set (reg:DI 1 dx [orig:538 _452 ] [538])
        (sign_extend:DI (reg:SI 1 dx [1132]))) "CALCAPE.f":385 149 {*extendsidi2_rex64}
     (nil))
(insn 1493 1492 1494 121 (parallel [
            (set (reg:DI 2 cx [orig:539 _453 ] [539])
                (mult:DI (reg:DI 1 dx [orig:538 _452 ] [538])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":385 349 {*muldi3_1}
     (nil))
(insn 1494 1493 1495 121 (set (reg:SI 1 dx [1133])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":385 86 {*movsi_internal}
     (nil))
(insn 1495 1494 1496 121 (set (reg:DI 1 dx [orig:540 _454 ] [540])
        (sign_extend:DI (reg:SI 1 dx [1133]))) "CALCAPE.f":385 149 {*extendsidi2_rex64}
     (nil))
(insn 1496 1495 1497 121 (parallel [
            (set (reg:DI 1 dx [orig:541 _455 ] [541])
                (plus:DI (reg:DI 1 dx [orig:540 _454 ] [540])
                    (reg:DI 2 cx [orig:539 _453 ] [539])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":385 222 {*adddi_1}
     (nil))
(insn 1497 1496 1498 121 (parallel [
            (set (reg:DI 2 cx [orig:542 _456 ] [542])
                (plus:DI (reg:DI 1 dx [orig:541 _455 ] [541])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":385 222 {*adddi_1}
     (nil))
(insn 1498 1497 1499 121 (set (reg/f:DI 1 dx [1134])
        (symbol_ref:DI ("lcl.4172") [flags 0x202]  <var_decl 0x7f0daa8aaab0 lcl>)) "CALCAPE.f":385 85 {*movdi_internal}
     (nil))
(insn 1499 1498 1500 121 (set (reg:SI 1 dx [orig:543 _457 ] [543])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:542 _456 ] [542])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1134])) [2 lcl S4 A32])) "CALCAPE.f":385 86 {*movsi_internal}
     (nil))
(insn 1500 1499 1501 121 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
            (reg:SI 1 dx [orig:543 _457 ] [543]))) "CALCAPE.f":385 11 {*cmpsi_1}
     (nil))
(jump_insn 1501 1500 1502 121 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1512)
            (pc))) "CALCAPE.f":385 682 {*jcc}
     (nil)
 -> 1512)
;;  succ:       122 (FALLTHRU)
;;              123
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735

;; basic block 122, loop depth 0, maybe hot
;;  prev block 121, next block 123, flags: (RTL, MODIFIED)
;;  pred:       121 (FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 544 545 546 547 548 1135 1136 1137
(note 1502 1501 1503 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 1503 1502 1504 122 (set (reg:SI 1 dx [1135])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":386 86 {*movsi_internal}
     (nil))
(insn 1504 1503 1505 122 (set (reg:DI 1 dx [orig:544 _458 ] [544])
        (sign_extend:DI (reg:SI 1 dx [1135]))) "CALCAPE.f":386 149 {*extendsidi2_rex64}
     (nil))
(insn 1505 1504 1506 122 (parallel [
            (set (reg:DI 2 cx [orig:545 _459 ] [545])
                (mult:DI (reg:DI 1 dx [orig:544 _458 ] [544])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":386 349 {*muldi3_1}
     (nil))
(insn 1506 1505 1507 122 (set (reg:SI 1 dx [1136])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":386 86 {*movsi_internal}
     (nil))
(insn 1507 1506 1508 122 (set (reg:DI 1 dx [orig:546 _460 ] [546])
        (sign_extend:DI (reg:SI 1 dx [1136]))) "CALCAPE.f":386 149 {*extendsidi2_rex64}
     (nil))
(insn 1508 1507 1509 122 (parallel [
            (set (reg:DI 1 dx [orig:547 _461 ] [547])
                (plus:DI (reg:DI 1 dx [orig:546 _460 ] [546])
                    (reg:DI 2 cx [orig:545 _459 ] [545])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":386 222 {*adddi_1}
     (nil))
(insn 1509 1508 1510 122 (parallel [
            (set (reg:DI 2 cx [orig:548 _462 ] [548])
                (plus:DI (reg:DI 1 dx [orig:547 _461 ] [547])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":386 222 {*adddi_1}
     (nil))
(insn 1510 1509 1511 122 (set (reg/f:DI 1 dx [1137])
        (symbol_ref:DI ("idx.4151") [flags 0x202]  <var_decl 0x7f0daa8aa240 idx>)) "CALCAPE.f":386 85 {*movdi_internal}
     (nil))
(insn 1511 1510 1512 122 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:548 _462 ] [548])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1137])) [2 idx S4 A32])
        (const_int 1 [0x1])) "CALCAPE.f":386 86 {*movsi_internal}
     (nil))
;;  succ:       123 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735

;; basic block 123, loop depth 0, maybe hot
;;  prev block 122, next block 172, flags: (RTL, MODIFIED)
;;  pred:       120
;;              121
;;              122 (FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1512 1511 1513 123 77 (nil) [2 uses])
(note 1513 1512 1514 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 1514 1513 1952 123 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":383 221 {*addsi_1}
     (nil))
(jump_insn 1952 1514 1953 123 (set (pc)
        (label_ref 1515)) "CALCAPE.f":383 683 {jump}
     (nil)
 -> 1515)
;;  succ:       119 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735

(barrier 1953 1952 2042)
;; basic block 172, loop depth 0, maybe hot
;;  prev block 123, next block 124, flags: (RTL, MODIFIED)
;;  pred:       119
;; bb 172 artificial_defs: { }
;; bb 172 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2042 1953 2041 172 129 (nil) [1 uses])
(note 2041 2042 2043 172 [bb 172] NOTE_INSN_BASIC_BLOCK)
(insn 2043 2041 1518 172 (const_int 0 [0]) "CALCAPE.f":385 718 {nop}
     (nil))
;;  succ:       124 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735

;; basic block 124, loop depth 0, maybe hot
;;  prev block 172, next block 171, flags: (RTL, MODIFIED)
;;  pred:       172 [always]  (FALLTHRU)
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1518 2043 1519 124 76 (nil) [0 uses])
(note 1519 1518 1520 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 1520 1519 1954 124 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":382 221 {*addsi_1}
     (nil))
(jump_insn 1954 1520 1955 124 (set (pc)
        (label_ref 1521)) "CALCAPE.f":382 683 {jump}
     (nil)
 -> 1521)
;;  succ:       117 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 735

(barrier 1955 1954 2039)
;; basic block 171, loop depth 0, maybe hot
;;  prev block 124, next block 125, flags: (RTL, MODIFIED)
;;  pred:       117
;; bb 171 artificial_defs: { }
;; bb 171 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2039 1955 2038 171 128 (nil) [1 uses])
(note 2038 2039 2040 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 2040 2038 1524 171 (const_int 0 [0]) "CALCAPE.f":383 718 {nop}
     (nil))
;;  succ:       125 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732

;; basic block 125, loop depth 0, maybe hot
;;  prev block 171, next block 126, flags: (RTL, MODIFIED)
;;  pred:       171 [always]  (FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 738 739
(code_label 1524 2040 1525 125 75 (nil) [0 uses])
(note 1525 1524 1526 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 1526 1525 1527 125 (set (reg:SI 0 ax [orig:738 _879 ] [738])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 16 [0x10]))) [2 parallel.jsta_m+0 S4 A128])) "CALCAPE.f":394 86 {*movsi_internal}
     (nil))
(insn 1527 1526 1528 125 (set (reg:SI 41 r12 [orig:739 _880 ] [739])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 20 [0x14]))) [2 parallel.jend_m+0 S4 A32])) "CALCAPE.f":394 86 {*movsi_internal}
     (nil))
(insn 1528 1527 1769 125 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
        (reg:SI 0 ax [orig:738 _879 ] [738])) "CALCAPE.f":394 86 {*movsi_internal}
     (nil))
;;  succ:       126 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739

;; basic block 126, loop depth 0, maybe hot
;;  prev block 125, next block 127, flags: (RTL, MODIFIED)
;;  pred:       125 (FALLTHRU)
;;              135 [always] 
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 739
;; lr  def 	 17 [flags] 740 1138
(code_label 1769 1528 1529 126 87 (nil) [1 uses])
(note 1529 1769 1530 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 1530 1529 1531 126 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
            (reg:SI 41 r12 [orig:739 _880 ] [739]))) "CALCAPE.f":394 11 {*cmpsi_1}
     (nil))
(insn 1531 1530 1532 126 (set (reg:QI 0 ax [1138])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":394 678 {*setcc_qi}
     (nil))
(insn 1532 1531 1533 126 (set (reg:SI 0 ax [orig:740 _882 ] [740])
        (zero_extend:SI (reg:QI 0 ax [1138]))) "CALCAPE.f":394 140 {*zero_extendqisi2}
     (nil))
(insn 1533 1532 1534 126 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:740 _882 ] [740])
            (const_int 0 [0]))) "CALCAPE.f":394 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1534 1533 1535 126 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2045)
            (pc))) "CALCAPE.f":394 682 {*jcc}
     (nil)
 -> 2045)
;;  succ:       173
;;              127 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739

;; basic block 127, loop depth 0, maybe hot
;;  prev block 126, next block 128, flags: (RTL, MODIFIED)
;;  pred:       126 (FALLTHRU)
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1535 1534 1536 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 1536 1535 1763 127 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "CALCAPE.f":395 86 {*movsi_internal}
     (nil))
;;  succ:       128 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739

;; basic block 128, loop depth 0, maybe hot
;;  prev block 127, next block 129, flags: (RTL, MODIFIED)
;;  pred:       127 (FALLTHRU)
;;              134 [always] 
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 741 1139
(code_label 1763 1536 1537 128 86 (nil) [1 uses])
(note 1537 1763 1538 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 1538 1537 1539 128 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALCAPE.f":395 11 {*cmpsi_1}
     (nil))
(insn 1539 1538 1540 128 (set (reg:QI 0 ax [1139])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":395 678 {*setcc_qi}
     (nil))
(insn 1540 1539 1541 128 (set (reg:SI 0 ax [orig:741 _884 ] [741])
        (zero_extend:SI (reg:QI 0 ax [1139]))) "CALCAPE.f":395 140 {*zero_extendqisi2}
     (nil))
(insn 1541 1540 1542 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:741 _884 ] [741])
            (const_int 0 [0]))) "CALCAPE.f":395 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1542 1541 1543 128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2048)
            (pc))) "CALCAPE.f":395 682 {*jcc}
     (nil)
 -> 2048)
;;  succ:       174
;;              129 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739

;; basic block 129, loop depth 0, maybe hot
;;  prev block 128, next block 130, flags: (RTL, MODIFIED)
;;  pred:       128 (FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 549 550 551 552 553 554 1140 1141 1142
(note 1543 1542 1544 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 1544 1543 1545 129 (set (reg:SI 0 ax [1140])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":396 86 {*movsi_internal}
     (nil))
(insn 1545 1544 1546 129 (set (reg:DI 0 ax [orig:549 _463 ] [549])
        (sign_extend:DI (reg:SI 0 ax [1140]))) "CALCAPE.f":396 149 {*extendsidi2_rex64}
     (nil))
(insn 1546 1545 1547 129 (parallel [
            (set (reg:DI 1 dx [orig:550 _464 ] [550])
                (mult:DI (reg:DI 0 ax [orig:549 _463 ] [549])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":396 349 {*muldi3_1}
     (nil))
(insn 1547 1546 1548 129 (set (reg:SI 0 ax [1141])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":396 86 {*movsi_internal}
     (nil))
(insn 1548 1547 1549 129 (set (reg:DI 0 ax [orig:551 _465 ] [551])
        (sign_extend:DI (reg:SI 0 ax [1141]))) "CALCAPE.f":396 149 {*extendsidi2_rex64}
     (nil))
(insn 1549 1548 1550 129 (parallel [
            (set (reg:DI 0 ax [orig:552 _466 ] [552])
                (plus:DI (reg:DI 0 ax [orig:551 _465 ] [551])
                    (reg:DI 1 dx [orig:550 _464 ] [550])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":396 222 {*adddi_1}
     (nil))
(insn 1550 1549 1551 129 (parallel [
            (set (reg:DI 1 dx [orig:553 _467 ] [553])
                (plus:DI (reg:DI 0 ax [orig:552 _466 ] [552])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":396 222 {*adddi_1}
     (nil))
(insn 1551 1550 1552 129 (set (reg/f:DI 0 ax [1142])
        (symbol_ref:DI ("idx.4151") [flags 0x202]  <var_decl 0x7f0daa8aa240 idx>)) "CALCAPE.f":396 85 {*movdi_internal}
     (nil))
(insn 1552 1551 1553 129 (set (reg:SI 0 ax [orig:554 _468 ] [554])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:553 _467 ] [553])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1142])) [2 idx S4 A32])) "CALCAPE.f":396 86 {*movsi_internal}
     (nil))
(insn 1553 1552 1554 129 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:554 _468 ] [554])
            (const_int 0 [0]))) "CALCAPE.f":396 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1554 1553 1555 129 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1760)
            (pc))) "CALCAPE.f":396 682 {*jcc}
     (nil)
 -> 1760)
;;  succ:       130 (FALLTHRU)
;;              134
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739

;; basic block 130, loop depth 0, maybe hot
;;  prev block 129, next block 131, flags: (RTL, MODIFIED)
;;  pred:       129 (FALLTHRU)
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 555 556 557 558 559 560 561 562 563 564 565 566 567 568 569 570 571 572 573 574 575 576 577 578 579 580 581 582 583 584 585 586 587 588 589 590 591 592 593 594 595 596 597 598 599 600 601 602 603 604 605 606 607 608 609 610 611 612 613 614 615 616 617 618 619 620 621 742 743 1143 1144 1145 1146 1147 1148 1149 1150 1151 1152 1153 1154 1155 1156 1157 1158 1159 1160 1161 1162 1163 1164 1165 1166 1167 1168 1169 1170 1171 1172 1173 1174 1175 1176 1177 1178 1179 1180 1181 1182 1183 1184 1185 1186
(note 1555 1554 1556 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 1556 1555 1557 130 (set (reg:SI 0 ax [1143])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":397 86 {*movsi_internal}
     (nil))
(insn 1557 1556 1558 130 (set (reg:DI 0 ax [orig:555 _469 ] [555])
        (sign_extend:DI (reg:SI 0 ax [1143]))) "CALCAPE.f":397 149 {*extendsidi2_rex64}
     (nil))
(insn 1558 1557 1559 130 (parallel [
            (set (reg:DI 1 dx [orig:556 _470 ] [556])
                (plus:DI (reg:DI 0 ax [orig:555 _469 ] [555])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":397 222 {*adddi_1}
     (nil))
(insn 1559 1558 1560 130 (set (reg/f:DI 0 ax [1144])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":397 85 {*movdi_internal}
     (nil))
(insn 1560 1559 1561 130 (parallel [
            (set (reg:DI 1 dx [1145])
                (plus:DI (reg:DI 1 dx [orig:556 _470 ] [556])
                    (const_int 59 [0x3b])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":397 222 {*adddi_1}
     (nil))
(insn 1561 1560 1562 130 (set (reg:SF 22 xmm1 [orig:557 _471 ] [557])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1145])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1144])) [1 phys.aeta S4 A32])) "CALCAPE.f":397 131 {*movsf_internal}
     (nil))
(insn 1562 1561 1563 130 (set (reg:SI 0 ax [1146])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":397 86 {*movsi_internal}
     (nil))
(insn 1563 1562 1564 130 (set (reg:DI 0 ax [orig:558 _472 ] [558])
        (sign_extend:DI (reg:SI 0 ax [1146]))) "CALCAPE.f":397 149 {*extendsidi2_rex64}
     (nil))
(insn 1564 1563 1565 130 (parallel [
            (set (reg:DI 1 dx [orig:559 _473 ] [559])
                (mult:DI (reg:DI 0 ax [orig:558 _472 ] [558])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":397 349 {*muldi3_1}
     (nil))
(insn 1565 1564 1566 130 (set (reg:SI 0 ax [1147])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":397 86 {*movsi_internal}
     (nil))
(insn 1566 1565 1567 130 (set (reg:DI 0 ax [orig:560 _474 ] [560])
        (sign_extend:DI (reg:SI 0 ax [1147]))) "CALCAPE.f":397 149 {*extendsidi2_rex64}
     (nil))
(insn 1567 1566 1568 130 (parallel [
            (set (reg:DI 0 ax [orig:561 _475 ] [561])
                (plus:DI (reg:DI 0 ax [orig:560 _474 ] [560])
                    (reg:DI 1 dx [orig:559 _473 ] [559])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":397 222 {*adddi_1}
     (nil))
(insn 1568 1567 1569 130 (parallel [
            (set (reg:DI 1 dx [orig:562 _476 ] [562])
                (plus:DI (reg:DI 0 ax [orig:561 _475 ] [561])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":397 222 {*adddi_1}
     (nil))
(insn 1569 1568 1570 130 (set (reg/f:DI 0 ax [1148])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0daa88c870 extra>)) "CALCAPE.f":397 85 {*movdi_internal}
     (nil))
(insn 1570 1569 1571 130 (parallel [
            (set (reg:DI 1 dx [1149])
                (plus:DI (reg:DI 1 dx [orig:562 _476 ] [562])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":397 222 {*adddi_1}
     (nil))
(insn 1571 1570 1572 130 (set (reg:SF 21 xmm0 [orig:563 _477 ] [563])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1149])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1148])) [1 extra.pdsl S4 A32])) "CALCAPE.f":397 131 {*movsf_internal}
     (nil))
(insn 1572 1571 1573 130 (set (reg:SF 22 xmm1 [orig:564 _478 ] [564])
        (mult:SF (reg:SF 22 xmm1 [orig:557 _471 ] [557])
            (reg:SF 21 xmm0 [orig:563 _477 ] [563]))) "CALCAPE.f":397 838 {*fop_sf_comm}
     (nil))
(insn 1573 1572 1574 130 (set (reg/f:DI 0 ax [1150])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":1 85 {*movdi_internal}
     (nil))
(insn 1574 1573 1575 130 (set (reg:SF 21 xmm0 [orig:565 _479 ] [565])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [1150])
                (const_int 4 [0x4])) [1 phys.pt+0 S4 A32])) "CALCAPE.f":1 131 {*movsf_internal}
     (nil))
(insn 1575 1574 1576 130 (set (reg:SF 21 xmm0 [1151])
        (plus:SF (reg:SF 21 xmm0 [orig:565 _479 ] [565])
            (reg:SF 22 xmm1 [orig:564 _478 ] [564]))) "CALCAPE.f":397 838 {*fop_sf_comm}
     (nil))
(insn 1576 1575 1577 130 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [1 presk+0 S4 A32])
        (reg:SF 21 xmm0 [1151])) "CALCAPE.f":397 131 {*movsf_internal}
     (nil))
(insn 1577 1576 1578 130 (set (reg:SI 0 ax [1152])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":399 86 {*movsi_internal}
     (nil))
(insn 1578 1577 1579 130 (set (reg:DI 0 ax [orig:566 _480 ] [566])
        (sign_extend:DI (reg:SI 0 ax [1152]))) "CALCAPE.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1579 1578 1580 130 (parallel [
            (set (reg:DI 1 dx [orig:567 _481 ] [567])
                (mult:DI (reg:DI 0 ax [orig:566 _480 ] [566])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 349 {*muldi3_1}
     (nil))
(insn 1580 1579 1581 130 (set (reg:SI 0 ax [1153])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":399 86 {*movsi_internal}
     (nil))
(insn 1581 1580 1582 130 (set (reg:DI 0 ax [orig:568 _482 ] [568])
        (sign_extend:DI (reg:SI 0 ax [1153]))) "CALCAPE.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1582 1581 1583 130 (parallel [
            (set (reg:DI 0 ax [orig:569 _483 ] [569])
                (mult:DI (reg:DI 0 ax [orig:568 _482 ] [568])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 349 {*muldi3_1}
     (nil))
(insn 1583 1582 1584 130 (parallel [
            (set (reg:DI 1 dx [orig:570 _484 ] [570])
                (plus:DI (reg:DI 1 dx [orig:567 _481 ] [567])
                    (reg:DI 0 ax [orig:569 _483 ] [569])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 222 {*adddi_1}
     (nil))
(insn 1584 1583 1585 130 (set (reg:SI 0 ax [1154])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":399 86 {*movsi_internal}
     (nil))
(insn 1585 1584 1586 130 (set (reg:DI 0 ax [orig:571 _485 ] [571])
        (sign_extend:DI (reg:SI 0 ax [1154]))) "CALCAPE.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1586 1585 1587 130 (parallel [
            (set (reg:DI 0 ax [orig:572 _486 ] [572])
                (plus:DI (reg:DI 0 ax [orig:571 _485 ] [571])
                    (reg:DI 1 dx [orig:570 _484 ] [570])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 222 {*adddi_1}
     (nil))
(insn 1587 1586 1588 130 (parallel [
            (set (reg:DI 1 dx [orig:573 _487 ] [573])
                (plus:DI (reg:DI 0 ax [orig:572 _486 ] [572])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 222 {*adddi_1}
     (nil))
(insn 1588 1587 1589 130 (set (reg/f:DI 0 ax [1155])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0daa8a8990 vrbls>)) "CALCAPE.f":399 85 {*movdi_internal}
     (nil))
(insn 1589 1588 1590 130 (parallel [
            (set (reg:DI 1 dx [1156])
                (plus:DI (reg:DI 1 dx [orig:573 _487 ] [573])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 222 {*adddi_1}
     (nil))
(insn 1590 1589 1591 130 (set (reg:SF 21 xmm0 [orig:574 _488 ] [574])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1156])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1155])) [1 vrbls.t S4 A32])) "CALCAPE.f":399 131 {*movsf_internal}
     (nil))
(insn 1591 1590 1592 130 (set (reg:SI 0 ax [1157])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":399 86 {*movsi_internal}
     (nil))
(insn 1592 1591 1593 130 (set (reg:DI 0 ax [orig:575 _489 ] [575])
        (sign_extend:DI (reg:SI 0 ax [1157]))) "CALCAPE.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1593 1592 1594 130 (parallel [
            (set (reg:DI 1 dx [orig:576 _490 ] [576])
                (mult:DI (reg:DI 0 ax [orig:575 _489 ] [575])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 349 {*muldi3_1}
     (nil))
(insn 1594 1593 1595 130 (set (reg:SI 0 ax [1158])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":399 86 {*movsi_internal}
     (nil))
(insn 1595 1594 1596 130 (set (reg:DI 0 ax [orig:577 _491 ] [577])
        (sign_extend:DI (reg:SI 0 ax [1158]))) "CALCAPE.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1596 1595 1597 130 (parallel [
            (set (reg:DI 0 ax [orig:578 _492 ] [578])
                (mult:DI (reg:DI 0 ax [orig:577 _491 ] [577])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 349 {*muldi3_1}
     (nil))
(insn 1597 1596 1598 130 (parallel [
            (set (reg:DI 1 dx [orig:579 _493 ] [579])
                (plus:DI (reg:DI 1 dx [orig:576 _490 ] [576])
                    (reg:DI 0 ax [orig:578 _492 ] [578])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 222 {*adddi_1}
     (nil))
(insn 1598 1597 1599 130 (set (reg:SI 0 ax [1159])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":399 86 {*movsi_internal}
     (nil))
(insn 1599 1598 1600 130 (set (reg:DI 0 ax [orig:580 _494 ] [580])
        (sign_extend:DI (reg:SI 0 ax [1159]))) "CALCAPE.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1600 1599 1601 130 (parallel [
            (set (reg:DI 0 ax [orig:581 _495 ] [581])
                (plus:DI (reg:DI 0 ax [orig:580 _494 ] [580])
                    (reg:DI 1 dx [orig:579 _493 ] [579])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 222 {*adddi_1}
     (nil))
(insn 1601 1600 1602 130 (parallel [
            (set (reg:DI 1 dx [orig:582 _496 ] [582])
                (plus:DI (reg:DI 0 ax [orig:581 _495 ] [581])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 222 {*adddi_1}
     (nil))
(insn 1602 1601 1603 130 (set (reg/f:DI 0 ax [1160])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0daa8a8990 vrbls>)) "CALCAPE.f":399 85 {*movdi_internal}
     (nil))
(insn 1603 1602 1604 130 (parallel [
            (set (reg:DI 1 dx [1161])
                (plus:DI (reg:DI 1 dx [orig:582 _496 ] [582])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 222 {*adddi_1}
     (nil))
(insn 1604 1603 1605 130 (set (reg:SF 23 xmm2 [orig:583 _497 ] [583])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1161])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1160])) [1 vrbls.q S4 A32])) "CALCAPE.f":399 131 {*movsf_internal}
     (nil))
(insn 1605 1604 1606 130 (set (reg:SF 22 xmm1 [1162])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":399 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 1606 1605 1607 130 (set (reg:SF 23 xmm2 [orig:584 _498 ] [584])
        (mult:SF (reg:SF 23 xmm2 [orig:583 _497 ] [583])
            (reg:SF 22 xmm1 [1162]))) "CALCAPE.f":399 838 {*fop_sf_comm}
     (nil))
(insn 1607 1606 1608 130 (set (reg:SF 22 xmm1 [1163])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":399 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1608 1607 1610 130 (set (reg:SF 22 xmm1 [orig:585 _499 ] [585])
        (plus:SF (reg:SF 22 xmm1 [1163])
            (reg:SF 23 xmm2 [orig:584 _498 ] [584]))) "CALCAPE.f":399 838 {*fop_sf_comm}
     (nil))
(insn 1610 1608 1611 130 (set (reg:SF 22 xmm1 [orig:587 _501 ] [587])
        (mult:SF (reg:SF 22 xmm1 [orig:586 _500 ] [586])
            (reg:SF 21 xmm0 [orig:574 _488 ] [574]))) "CALCAPE.f":399 838 {*fop_sf_comm}
     (nil))
(insn 1611 1610 1612 130 (set (reg:SF 21 xmm0 [1164])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":399 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.92897968292236328125e+1 [0x0.ea5181p+5])
        (nil)))
(insn 1612 1611 1613 130 (set (reg:SF 22 xmm1 [orig:588 _502 ] [588])
        (mult:SF (reg:SF 22 xmm1 [orig:587 _501 ] [587])
            (reg:SF 21 xmm0 [1164]))) "CALCAPE.f":399 838 {*fop_sf_comm}
     (nil))
(insn 1613 1612 1614 130 (set (reg:SI 0 ax [1165])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":399 86 {*movsi_internal}
     (nil))
(insn 1614 1613 1615 130 (set (reg:DI 0 ax [orig:589 _503 ] [589])
        (sign_extend:DI (reg:SI 0 ax [1165]))) "CALCAPE.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1615 1614 1616 130 (parallel [
            (set (reg:DI 1 dx [orig:590 _504 ] [590])
                (mult:DI (reg:DI 0 ax [orig:589 _503 ] [589])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 349 {*muldi3_1}
     (nil))
(insn 1616 1615 1617 130 (set (reg:SI 0 ax [1166])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":399 86 {*movsi_internal}
     (nil))
(insn 1617 1616 1618 130 (set (reg:DI 0 ax [orig:591 _505 ] [591])
        (sign_extend:DI (reg:SI 0 ax [1166]))) "CALCAPE.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1618 1617 1619 130 (parallel [
            (set (reg:DI 0 ax [orig:592 _506 ] [592])
                (plus:DI (reg:DI 0 ax [orig:591 _505 ] [591])
                    (reg:DI 1 dx [orig:590 _504 ] [590])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 222 {*adddi_1}
     (nil))
(insn 1619 1618 1620 130 (parallel [
            (set (reg:DI 1 dx [orig:593 _507 ] [593])
                (plus:DI (reg:DI 0 ax [orig:592 _506 ] [592])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 222 {*adddi_1}
     (nil))
(insn 1620 1619 1621 130 (set (reg/f:DI 0 ax [1167])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f0daa88c870 extra>)) "CALCAPE.f":399 85 {*movdi_internal}
     (nil))
(insn 1621 1620 1622 130 (parallel [
            (set (reg:DI 1 dx [1168])
                (plus:DI (reg:DI 1 dx [orig:593 _507 ] [593])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 222 {*adddi_1}
     (nil))
(insn 1622 1621 1623 130 (set (reg:SF 21 xmm0 [orig:594 _508 ] [594])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1168])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1167])) [1 extra.pdsl S4 A32])) "CALCAPE.f":399 131 {*movsf_internal}
     (nil))
(insn 1623 1622 1624 130 (set (reg:SF 22 xmm1 [orig:595 _509 ] [595])
        (mult:SF (reg:SF 22 xmm1 [orig:588 _502 ] [588])
            (reg:SF 21 xmm0 [orig:594 _508 ] [594]))) "CALCAPE.f":399 838 {*fop_sf_comm}
     (nil))
(insn 1624 1623 1625 130 (set (reg:SI 0 ax [1169])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":399 86 {*movsi_internal}
     (nil))
(insn 1625 1624 1626 130 (set (reg:DI 0 ax [orig:596 _510 ] [596])
        (sign_extend:DI (reg:SI 0 ax [1169]))) "CALCAPE.f":399 149 {*extendsidi2_rex64}
     (nil))
(insn 1626 1625 1627 130 (parallel [
            (set (reg:DI 1 dx [orig:597 _511 ] [597])
                (plus:DI (reg:DI 0 ax [orig:596 _510 ] [596])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 222 {*adddi_1}
     (nil))
(insn 1627 1626 1628 130 (set (reg/f:DI 0 ax [1170])
        (symbol_ref:DI ("phys_") [flags 0x202]  <var_decl 0x7f0daa899b40 phys>)) "CALCAPE.f":399 85 {*movdi_internal}
     (nil))
(insn 1628 1627 1629 130 (parallel [
            (set (reg:DI 1 dx [1171])
                (plus:DI (reg:DI 1 dx [orig:597 _511 ] [597])
                    (const_int 21 [0x15])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":399 222 {*adddi_1}
     (nil))
(insn 1629 1628 1630 130 (set (reg:SF 21 xmm0 [orig:598 _512 ] [598])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1171])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1170])) [1 phys.deta S4 A32])) "CALCAPE.f":399 131 {*movsf_internal}
     (nil))
(insn 1630 1629 1631 130 (set (reg:SF 21 xmm0 [orig:599 _513 ] [599])
        (mult:SF (reg:SF 21 xmm0 [orig:598 _512 ] [598])
            (reg:SF 22 xmm1 [orig:595 _509 ] [595]))) "CALCAPE.f":399 838 {*fop_sf_comm}
     (nil))
(insn 1631 1630 1632 130 (set (reg:SF 21 xmm0 [1172])
        (div:SF (reg:SF 21 xmm0 [orig:599 _513 ] [599])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -152 [0xffffffffffffff68])) [1 presk+0 S4 A32]))) "CALCAPE.f":399 841 {*fop_sf_1}
     (nil))
(insn 1632 1631 1633 130 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -156 [0xffffffffffffff64])) [1 dzkl+0 S4 A32])
        (reg:SF 21 xmm0 [1172])) "CALCAPE.f":399 131 {*movsf_internal}
     (nil))
(insn 1633 1632 1634 130 (set (reg:SF 21 xmm0 [1173])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":400 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+5 [0x0.c35p+17])
        (nil)))
(insn 1634 1633 1636 130 (set (reg:SF 21 xmm0 [orig:600 _514 ] [600])
        (div:SF (reg:SF 21 xmm0 [1173])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -152 [0xffffffffffffff68])) [1 presk+0 S4 A32]))) "CALCAPE.f":400 841 {*fop_sf_1}
     (nil))
(insn 1636 1634 1637 130 (set (reg:SI 0 ax [1174])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":400 86 {*movsi_internal}
     (nil))
(insn 1637 1636 1638 130 (set (reg:DI 0 ax [orig:601 _515 ] [601])
        (sign_extend:DI (reg:SI 0 ax [1174]))) "CALCAPE.f":400 149 {*extendsidi2_rex64}
     (nil))
(insn 1638 1637 1639 130 (parallel [
            (set (reg:DI 1 dx [orig:602 _516 ] [602])
                (mult:DI (reg:DI 0 ax [orig:601 _515 ] [601])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":400 349 {*muldi3_1}
     (nil))
(insn 1639 1638 1640 130 (set (reg:SI 0 ax [1175])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":400 86 {*movsi_internal}
     (nil))
(insn 1640 1639 1641 130 (set (reg:DI 0 ax [orig:603 _517 ] [603])
        (sign_extend:DI (reg:SI 0 ax [1175]))) "CALCAPE.f":400 149 {*extendsidi2_rex64}
     (nil))
(insn 1641 1640 1642 130 (parallel [
            (set (reg:DI 0 ax [orig:604 _518 ] [604])
                (mult:DI (reg:DI 0 ax [orig:603 _517 ] [603])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":400 349 {*muldi3_1}
     (nil))
(insn 1642 1641 1643 130 (parallel [
            (set (reg:DI 1 dx [orig:605 _519 ] [605])
                (plus:DI (reg:DI 1 dx [orig:602 _516 ] [602])
                    (reg:DI 0 ax [orig:604 _518 ] [604])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":400 222 {*adddi_1}
     (nil))
(insn 1643 1642 1644 130 (set (reg:SI 0 ax [1176])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":400 86 {*movsi_internal}
     (nil))
(insn 1644 1643 1645 130 (set (reg:DI 0 ax [orig:606 _520 ] [606])
        (sign_extend:DI (reg:SI 0 ax [1176]))) "CALCAPE.f":400 149 {*extendsidi2_rex64}
     (nil))
(insn 1645 1644 1646 130 (parallel [
            (set (reg:DI 0 ax [orig:607 _521 ] [607])
                (plus:DI (reg:DI 0 ax [orig:606 _520 ] [606])
                    (reg:DI 1 dx [orig:605 _519 ] [605])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":400 222 {*adddi_1}
     (nil))
(insn 1646 1645 1647 130 (parallel [
            (set (reg:DI 1 dx [orig:608 _522 ] [608])
                (plus:DI (reg:DI 0 ax [orig:607 _521 ] [607])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":400 222 {*adddi_1}
     (nil))
(insn 1647 1646 1648 130 (set (reg/f:DI 0 ax [1177])
        (symbol_ref:DI ("tpar.4198") [flags 0x202]  <var_decl 0x7f0daa8ac6c0 tpar>)) "CALCAPE.f":400 85 {*movdi_internal}
     (nil))
(insn 1648 1647 2091 130 (set (reg:SF 28 xmm7 [orig:609 _523 ] [609])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:608 _522 ] [608])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1177])) [1 tpar S4 A32])) "CALCAPE.f":400 131 {*movsf_internal}
     (nil))
(insn 2091 1648 2116 130 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -228 [0xffffffffffffff1c])) [12 %sfp+-212 S4 A32])
        (reg:SF 28 xmm7 [orig:609 _523 ] [609])) "CALCAPE.f":400 131 {*movsf_internal}
     (nil))
(note 2116 2091 2106 130 NOTE_INSN_DELETED)
(note 2106 2116 1649 130 NOTE_INSN_DELETED)
(insn 1649 2106 1651 130 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":400 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.8589642047882080078125e-1 [0x0.926104p-1])
        (nil)))
(call_insn/u 1651 1649 2092 130 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0daa706100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALCAPE.f":400 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(note 2092 1651 2112 130 NOTE_INSN_DELETED)
(note 2112 2092 1653 130 NOTE_INSN_DELETED)
(insn 1653 2112 1654 130 (set (reg:SF 21 xmm0 [1178])
        (mult:SF (reg:SF 21 xmm0 [orig:610 _524 ] [610])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -228 [0xffffffffffffff1c])) [12 %sfp+-212 S4 A32]))) "CALCAPE.f":400 838 {*fop_sf_comm}
     (nil))
(insn 1654 1653 1655 130 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [1 thetap+0 S4 A32])
        (reg:SF 21 xmm0 [1178])) "CALCAPE.f":400 131 {*movsf_internal}
     (nil))
(insn 1655 1654 1656 130 (set (reg:SF 21 xmm0 [1179])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":401 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+5 [0x0.c35p+17])
        (nil)))
(insn 1656 1655 1658 130 (set (reg:SF 21 xmm0 [orig:611 _525 ] [611])
        (div:SF (reg:SF 21 xmm0 [1179])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -152 [0xffffffffffffff68])) [1 presk+0 S4 A32]))) "CALCAPE.f":401 841 {*fop_sf_1}
     (nil))
(insn 1658 1656 1659 130 (set (reg:SI 0 ax [1180])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])) "CALCAPE.f":401 86 {*movsi_internal}
     (nil))
(insn 1659 1658 1660 130 (set (reg:DI 0 ax [orig:612 _526 ] [612])
        (sign_extend:DI (reg:SI 0 ax [1180]))) "CALCAPE.f":401 149 {*extendsidi2_rex64}
     (nil))
(insn 1660 1659 1661 130 (parallel [
            (set (reg:DI 1 dx [orig:613 _527 ] [613])
                (mult:DI (reg:DI 0 ax [orig:612 _526 ] [612])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":401 349 {*muldi3_1}
     (nil))
(insn 1661 1660 1662 130 (set (reg:SI 0 ax [1181])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":401 86 {*movsi_internal}
     (nil))
(insn 1662 1661 1663 130 (set (reg:DI 0 ax [orig:614 _528 ] [614])
        (sign_extend:DI (reg:SI 0 ax [1181]))) "CALCAPE.f":401 149 {*extendsidi2_rex64}
     (nil))
(insn 1663 1662 1664 130 (parallel [
            (set (reg:DI 0 ax [orig:615 _529 ] [615])
                (mult:DI (reg:DI 0 ax [orig:614 _528 ] [614])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":401 349 {*muldi3_1}
     (nil))
(insn 1664 1663 1665 130 (parallel [
            (set (reg:DI 1 dx [orig:616 _530 ] [616])
                (plus:DI (reg:DI 1 dx [orig:613 _527 ] [613])
                    (reg:DI 0 ax [orig:615 _529 ] [615])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":401 222 {*adddi_1}
     (nil))
(insn 1665 1664 1666 130 (set (reg:SI 0 ax [1182])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":401 86 {*movsi_internal}
     (nil))
(insn 1666 1665 1667 130 (set (reg:DI 0 ax [orig:617 _531 ] [617])
        (sign_extend:DI (reg:SI 0 ax [1182]))) "CALCAPE.f":401 149 {*extendsidi2_rex64}
     (nil))
(insn 1667 1666 1668 130 (parallel [
            (set (reg:DI 0 ax [orig:618 _532 ] [618])
                (plus:DI (reg:DI 0 ax [orig:617 _531 ] [617])
                    (reg:DI 1 dx [orig:616 _530 ] [616])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":401 222 {*adddi_1}
     (nil))
(insn 1668 1667 1669 130 (parallel [
            (set (reg:DI 1 dx [orig:619 _533 ] [619])
                (plus:DI (reg:DI 0 ax [orig:618 _532 ] [618])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":401 222 {*adddi_1}
     (nil))
(insn 1669 1668 1670 130 (set (reg/f:DI 0 ax [1183])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f0daa8a8990 vrbls>)) "CALCAPE.f":401 85 {*movdi_internal}
     (nil))
(insn 1670 1669 1671 130 (parallel [
            (set (reg:DI 1 dx [1184])
                (plus:DI (reg:DI 1 dx [orig:619 _533 ] [619])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":401 222 {*adddi_1}
     (nil))
(insn 1671 1670 2093 130 (set (reg:SF 26 xmm5 [orig:620 _534 ] [620])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [1184])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1183])) [1 vrbls.t S4 A32])) "CALCAPE.f":401 131 {*movsf_internal}
     (nil))
(insn 2093 1671 2115 130 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -228 [0xffffffffffffff1c])) [12 %sfp+-212 S4 A32])
        (reg:SF 26 xmm5 [orig:620 _534 ] [620])) "CALCAPE.f":401 131 {*movsf_internal}
     (nil))
(note 2115 2093 2105 130 NOTE_INSN_DELETED)
(note 2105 2115 1672 130 NOTE_INSN_DELETED)
(insn 1672 2105 1674 130 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":401 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.8589642047882080078125e-1 [0x0.926104p-1])
        (nil)))
(call_insn/u 1674 1672 2094 130 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f0daa706100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALCAPE.f":401 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(note 2094 1674 2111 130 NOTE_INSN_DELETED)
(note 2111 2094 1676 130 NOTE_INSN_DELETED)
(insn 1676 2111 1677 130 (set (reg:SF 21 xmm0 [1185])
        (mult:SF (reg:SF 21 xmm0 [orig:621 _535 ] [621])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -228 [0xffffffffffffff1c])) [12 %sfp+-212 S4 A32]))) "CALCAPE.f":401 838 {*fop_sf_comm}
     (nil))
(insn 1677 1676 1678 130 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [1 thetaa+0 S4 A32])
        (reg:SF 21 xmm0 [1185])) "CALCAPE.f":401 131 {*movsf_internal}
     (nil))
(insn 1678 1677 1679 130 (set (reg:SF 21 xmm0 [1186])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [1 thetaa+0 S4 A32])) "CALCAPE.f":402 131 {*movsf_internal}
     (nil))
(insn 1679 1678 1680 130 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1186])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -160 [0xffffffffffffff60])) [1 thetap+0 S4 A32]))) "CALCAPE.f":402 53 {*cmpisf}
     (nil))
(jump_insn 1680 1679 1684 130 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1956)
            (pc))) "CALCAPE.f":402 682 {*jcc}
     (nil)
 -> 1956)
;;  succ:       131 (FALLTHRU)
;;              132
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739

;; basic block 131, loop depth 0, maybe hot
;;  prev block 130, next block 132, flags: (RTL, MODIFIED)
;;  pred:       130 (FALLTHRU)
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 622 623 624 625 626 627 628 629 630 631 632 633 634 635 636 637 638 639 1187 1188 1189 1190 1191 1192 1193 1194 1195
(note 1684 1680 1685 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 1685 1684 1686 131 (set (reg:SI 0 ax [1187])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":405 86 {*movsi_internal}
     (nil))
(insn 1686 1685 1687 131 (set (reg:DI 0 ax [orig:622 _536 ] [622])
        (sign_extend:DI (reg:SI 0 ax [1187]))) "CALCAPE.f":405 149 {*extendsidi2_rex64}
     (nil))
(insn 1687 1686 1688 131 (parallel [
            (set (reg:DI 1 dx [orig:623 _537 ] [623])
                (mult:DI (reg:DI 0 ax [orig:622 _536 ] [622])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":405 349 {*muldi3_1}
     (nil))
(insn 1688 1687 1689 131 (set (reg:SI 0 ax [1188])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":405 86 {*movsi_internal}
     (nil))
(insn 1689 1688 1690 131 (set (reg:DI 0 ax [orig:624 _538 ] [624])
        (sign_extend:DI (reg:SI 0 ax [1188]))) "CALCAPE.f":405 149 {*extendsidi2_rex64}
     (nil))
(insn 1690 1689 1691 131 (parallel [
            (set (reg:DI 0 ax [orig:625 _539 ] [625])
                (plus:DI (reg:DI 0 ax [orig:624 _538 ] [624])
                    (reg:DI 1 dx [orig:623 _537 ] [623])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":405 222 {*adddi_1}
     (nil))
(insn 1691 1690 1692 131 (parallel [
            (set (reg:DI 1 dx [orig:626 _540 ] [626])
                (plus:DI (reg:DI 0 ax [orig:625 _539 ] [625])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":405 222 {*adddi_1}
     (nil))
(insn 1692 1691 1693 131 (set (reg/f:DI 0 ax [1189])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [4 cins+0 S8 A64])) "CALCAPE.f":405 85 {*movdi_internal}
     (nil))
(insn 1693 1692 2095 131 (set (reg:SF 27 xmm6 [orig:627 _541 ] [627])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:626 _540 ] [626])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1189])) [1 *cins_703(D) S4 A32])) "CALCAPE.f":405 131 {*movsf_internal}
     (nil))
(insn 2095 1693 2114 131 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -228 [0xffffffffffffff1c])) [12 %sfp+-212 S4 A32])
        (reg:SF 27 xmm6 [orig:627 _541 ] [627])) "CALCAPE.f":405 131 {*movsf_internal}
     (nil))
(note 2114 2095 2104 131 NOTE_INSN_DELETED)
(note 2104 2114 1694 131 NOTE_INSN_DELETED)
(insn 1694 2104 1696 131 (set (reg:SF 21 xmm0 [1190])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [1 thetap+0 S4 A32])) "CALCAPE.f":405 131 {*movsf_internal}
     (nil))
(call_insn/u 1696 1694 1697 131 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f0daa6f9900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALCAPE.f":405 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 1697 1696 2113 131 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [12 %sfp+-216 S4 A32])
        (reg:SF 21 xmm0)) "CALCAPE.f":405 131 {*movsf_internal}
     (nil))
(note 2113 1697 2103 131 NOTE_INSN_DELETED)
(note 2103 2113 1698 131 NOTE_INSN_DELETED)
(insn 1698 2103 1700 131 (set (reg:SF 21 xmm0 [1191])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [1 thetaa+0 S4 A32])) "CALCAPE.f":405 131 {*movsf_internal}
     (nil))
(call_insn/u 1700 1698 2096 131 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f0daa6f9900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALCAPE.f":405 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 2096 1700 1702 131 (set (reg:SF 26 xmm5 [orig:628 _542 ] [628])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [12 %sfp+-216 S4 A32])) "CALCAPE.f":405 131 {*movsf_internal}
     (nil))
(insn 1702 2096 2097 131 (set (reg:SF 26 xmm5 [orig:628 _542 ] [628])
        (minus:SF (reg:SF 26 xmm5 [orig:628 _542 ] [628])
            (reg:SF 21 xmm0 [orig:629 _543 ] [629]))) "CALCAPE.f":405 841 {*fop_sf_1}
     (nil))
(insn 2097 1702 1703 131 (set (reg:SF 21 xmm0 [orig:630 _544 ] [630])
        (reg:SF 26 xmm5 [orig:628 _542 ] [628])) "CALCAPE.f":405 131 {*movsf_internal}
     (nil))
(insn 1703 2097 1704 131 (set (reg:SF 22 xmm1 [orig:631 _545 ] [631])
        (reg:SF 21 xmm0 [orig:630 _544 ] [630])) "CALCAPE.f":405 131 {*movsf_internal}
     (nil))
(insn 1704 1703 1705 131 (set (reg:SF 21 xmm0 [1192])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":405 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.80000019073486328125e+0 [0x0.9ccccdp+4])
        (nil)))
(insn 1705 1704 1706 131 (set (reg:SF 21 xmm0 [orig:632 _546 ] [632])
        (mult:SF (reg:SF 21 xmm0 [1192])
            (reg:SF 22 xmm1 [orig:631 _545 ] [631]))) "CALCAPE.f":405 838 {*fop_sf_comm}
     (nil))
(insn 1706 1705 1707 131 (set (reg:SF 21 xmm0 [orig:633 _547 ] [633])
        (mult:SF (reg:SF 21 xmm0 [orig:632 _546 ] [632])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 dzkl+0 S4 A32]))) "CALCAPE.f":405 838 {*fop_sf_comm}
     (nil))
(insn 1707 1706 1708 131 (set (reg:SI 0 ax [1193])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":405 86 {*movsi_internal}
     (nil))
(insn 1708 1707 1709 131 (set (reg:DI 0 ax [orig:634 _548 ] [634])
        (sign_extend:DI (reg:SI 0 ax [1193]))) "CALCAPE.f":405 149 {*extendsidi2_rex64}
     (nil))
(insn 1709 1708 1710 131 (parallel [
            (set (reg:DI 1 dx [orig:635 _549 ] [635])
                (mult:DI (reg:DI 0 ax [orig:634 _548 ] [634])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":405 349 {*muldi3_1}
     (nil))
(insn 1710 1709 1711 131 (set (reg:SI 0 ax [1194])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":405 86 {*movsi_internal}
     (nil))
(insn 1711 1710 1712 131 (set (reg:DI 0 ax [orig:636 _550 ] [636])
        (sign_extend:DI (reg:SI 0 ax [1194]))) "CALCAPE.f":405 149 {*extendsidi2_rex64}
     (nil))
(insn 1712 1711 1713 131 (parallel [
            (set (reg:DI 0 ax [orig:637 _551 ] [637])
                (plus:DI (reg:DI 0 ax [orig:636 _550 ] [636])
                    (reg:DI 1 dx [orig:635 _549 ] [635])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":405 222 {*adddi_1}
     (nil))
(insn 1713 1712 2098 131 (parallel [
            (set (reg:DI 1 dx [orig:638 _552 ] [638])
                (plus:DI (reg:DI 0 ax [orig:637 _551 ] [637])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":405 222 {*adddi_1}
     (nil))
(note 2098 1713 2110 131 NOTE_INSN_DELETED)
(note 2110 2098 1714 131 NOTE_INSN_DELETED)
(insn 1714 2110 1715 131 (set (reg:SF 21 xmm0 [orig:639 _553 ] [639])
        (plus:SF (reg:SF 21 xmm0 [orig:633 _547 ] [633])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -228 [0xffffffffffffff1c])) [12 %sfp+-212 S4 A32]))) "CALCAPE.f":405 838 {*fop_sf_comm}
     (nil))
(insn 1715 1714 1716 131 (set (reg/f:DI 0 ax [1195])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [4 cins+0 S8 A64])) "CALCAPE.f":405 85 {*movdi_internal}
     (nil))
(insn 1716 1715 1957 131 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:638 _552 ] [638])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1195])) [1 *cins_703(D) S4 A32])
        (reg:SF 21 xmm0 [orig:639 _553 ] [639])) "CALCAPE.f":405 131 {*movsf_internal}
     (nil))
(jump_insn 1957 1716 1958 131 (set (pc)
        (label_ref 1760)) 683 {jump}
     (nil)
 -> 1760)
;;  succ:       134 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739

(barrier 1958 1957 1956)
;; basic block 132, loop depth 0, maybe hot
;;  prev block 131, next block 133, flags: (RTL, MODIFIED)
;;  pred:       130
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 1196
(code_label 1956 1958 1720 132 104 (nil) [1 uses])
(note 1720 1956 1721 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 1721 1720 1722 132 (set (reg:SF 21 xmm0 [1196])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [1 thetap+0 S4 A32])) "CALCAPE.f":406 131 {*movsf_internal}
     (nil))
(insn 1722 1721 1723 132 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [1196])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -164 [0xffffffffffffff5c])) [1 thetaa+0 S4 A32]))) "CALCAPE.f":406 53 {*cmpisf}
     (nil))
(jump_insn 1723 1722 1727 132 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1760)
            (pc))) "CALCAPE.f":406 682 {*jcc}
     (nil)
 -> 1760)
;;  succ:       133 (FALLTHRU)
;;              134
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739

;; basic block 133, loop depth 0, maybe hot
;;  prev block 132, next block 134, flags: (RTL, MODIFIED)
;;  pred:       132 (FALLTHRU)
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 640 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 1197 1198 1199 1200 1201 1202 1203 1204 1205
(note 1727 1723 1728 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 1728 1727 1729 133 (set (reg:SI 0 ax [1197])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":409 86 {*movsi_internal}
     (nil))
(insn 1729 1728 1730 133 (set (reg:DI 0 ax [orig:640 _554 ] [640])
        (sign_extend:DI (reg:SI 0 ax [1197]))) "CALCAPE.f":409 149 {*extendsidi2_rex64}
     (nil))
(insn 1730 1729 1731 133 (parallel [
            (set (reg:DI 1 dx [orig:641 _555 ] [641])
                (mult:DI (reg:DI 0 ax [orig:640 _554 ] [640])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":409 349 {*muldi3_1}
     (nil))
(insn 1731 1730 1732 133 (set (reg:SI 0 ax [1198])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":409 86 {*movsi_internal}
     (nil))
(insn 1732 1731 1733 133 (set (reg:DI 0 ax [orig:642 _556 ] [642])
        (sign_extend:DI (reg:SI 0 ax [1198]))) "CALCAPE.f":409 149 {*extendsidi2_rex64}
     (nil))
(insn 1733 1732 1734 133 (parallel [
            (set (reg:DI 0 ax [orig:643 _557 ] [643])
                (plus:DI (reg:DI 0 ax [orig:642 _556 ] [642])
                    (reg:DI 1 dx [orig:641 _555 ] [641])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":409 222 {*adddi_1}
     (nil))
(insn 1734 1733 1735 133 (parallel [
            (set (reg:DI 1 dx [orig:644 _558 ] [644])
                (plus:DI (reg:DI 0 ax [orig:643 _557 ] [643])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":409 222 {*adddi_1}
     (nil))
(insn 1735 1734 1736 133 (set (reg/f:DI 0 ax [1199])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [4 cape+0 S8 A64])) "CALCAPE.f":409 85 {*movdi_internal}
     (nil))
(insn 1736 1735 2099 133 (set (reg:SF 24 xmm3 [orig:645 _559 ] [645])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:644 _558 ] [644])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1199])) [1 *cape_701(D) S4 A32])) "CALCAPE.f":409 131 {*movsf_internal}
     (nil))
(insn 2099 1736 2118 133 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -228 [0xffffffffffffff1c])) [12 %sfp+-212 S4 A32])
        (reg:SF 24 xmm3 [orig:645 _559 ] [645])) "CALCAPE.f":409 131 {*movsf_internal}
     (nil))
(note 2118 2099 2108 133 NOTE_INSN_DELETED)
(note 2108 2118 1737 133 NOTE_INSN_DELETED)
(insn 1737 2108 1739 133 (set (reg:SF 21 xmm0 [1200])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [1 thetap+0 S4 A32])) "CALCAPE.f":409 131 {*movsf_internal}
     (nil))
(call_insn/u 1739 1737 1740 133 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f0daa6f9900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALCAPE.f":409 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 1740 1739 2117 133 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [12 %sfp+-216 S4 A32])
        (reg:SF 21 xmm0)) "CALCAPE.f":409 131 {*movsf_internal}
     (nil))
(note 2117 1740 2107 133 NOTE_INSN_DELETED)
(note 2107 2117 1741 133 NOTE_INSN_DELETED)
(insn 1741 2107 1743 133 (set (reg:SF 21 xmm0 [1201])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -164 [0xffffffffffffff5c])) [1 thetaa+0 S4 A32])) "CALCAPE.f":409 131 {*movsf_internal}
     (nil))
(call_insn/u 1743 1741 2100 133 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f0daa6f9900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALCAPE.f":409 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 2100 1743 1745 133 (set (reg:SF 27 xmm6 [orig:646 _560 ] [646])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -232 [0xffffffffffffff18])) [12 %sfp+-216 S4 A32])) "CALCAPE.f":409 131 {*movsf_internal}
     (nil))
(insn 1745 2100 2101 133 (set (reg:SF 27 xmm6 [orig:646 _560 ] [646])
        (minus:SF (reg:SF 27 xmm6 [orig:646 _560 ] [646])
            (reg:SF 21 xmm0 [orig:647 _561 ] [647]))) "CALCAPE.f":409 841 {*fop_sf_1}
     (nil))
(insn 2101 1745 1746 133 (set (reg:SF 21 xmm0 [orig:648 _562 ] [648])
        (reg:SF 27 xmm6 [orig:646 _560 ] [646])) "CALCAPE.f":409 131 {*movsf_internal}
     (nil))
(insn 1746 2101 1747 133 (set (reg:SF 22 xmm1 [orig:649 _563 ] [649])
        (reg:SF 21 xmm0 [orig:648 _562 ] [648])) "CALCAPE.f":409 131 {*movsf_internal}
     (nil))
(insn 1747 1746 1748 133 (set (reg:SF 21 xmm0 [1202])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":409 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.80000019073486328125e+0 [0x0.9ccccdp+4])
        (nil)))
(insn 1748 1747 1749 133 (set (reg:SF 21 xmm0 [orig:650 _564 ] [650])
        (mult:SF (reg:SF 21 xmm0 [1202])
            (reg:SF 22 xmm1 [orig:649 _563 ] [649]))) "CALCAPE.f":409 838 {*fop_sf_comm}
     (nil))
(insn 1749 1748 1750 133 (set (reg:SF 21 xmm0 [orig:651 _565 ] [651])
        (mult:SF (reg:SF 21 xmm0 [orig:650 _564 ] [650])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -156 [0xffffffffffffff64])) [1 dzkl+0 S4 A32]))) "CALCAPE.f":409 838 {*fop_sf_comm}
     (nil))
(insn 1750 1749 1751 133 (set (reg:SI 0 ax [1203])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":409 86 {*movsi_internal}
     (nil))
(insn 1751 1750 1752 133 (set (reg:DI 0 ax [orig:652 _566 ] [652])
        (sign_extend:DI (reg:SI 0 ax [1203]))) "CALCAPE.f":409 149 {*extendsidi2_rex64}
     (nil))
(insn 1752 1751 1753 133 (parallel [
            (set (reg:DI 1 dx [orig:653 _567 ] [653])
                (mult:DI (reg:DI 0 ax [orig:652 _566 ] [652])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":409 349 {*muldi3_1}
     (nil))
(insn 1753 1752 1754 133 (set (reg:SI 0 ax [1204])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":409 86 {*movsi_internal}
     (nil))
(insn 1754 1753 1755 133 (set (reg:DI 0 ax [orig:654 _568 ] [654])
        (sign_extend:DI (reg:SI 0 ax [1204]))) "CALCAPE.f":409 149 {*extendsidi2_rex64}
     (nil))
(insn 1755 1754 1756 133 (parallel [
            (set (reg:DI 0 ax [orig:655 _569 ] [655])
                (plus:DI (reg:DI 0 ax [orig:654 _568 ] [654])
                    (reg:DI 1 dx [orig:653 _567 ] [653])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":409 222 {*adddi_1}
     (nil))
(insn 1756 1755 2102 133 (parallel [
            (set (reg:DI 1 dx [orig:656 _570 ] [656])
                (plus:DI (reg:DI 0 ax [orig:655 _569 ] [655])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":409 222 {*adddi_1}
     (nil))
(note 2102 1756 2109 133 NOTE_INSN_DELETED)
(note 2109 2102 1757 133 NOTE_INSN_DELETED)
(insn 1757 2109 1758 133 (set (reg:SF 21 xmm0 [orig:657 _571 ] [657])
        (plus:SF (reg:SF 21 xmm0 [orig:651 _565 ] [651])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -228 [0xffffffffffffff1c])) [12 %sfp+-212 S4 A32]))) "CALCAPE.f":409 838 {*fop_sf_comm}
     (nil))
(insn 1758 1757 1759 133 (set (reg/f:DI 0 ax [1205])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [4 cape+0 S8 A64])) "CALCAPE.f":409 85 {*movdi_internal}
     (nil))
(insn 1759 1758 1760 133 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:656 _570 ] [656])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [1205])) [1 *cape_701(D) S4 A32])
        (reg:SF 21 xmm0 [orig:657 _571 ] [657])) "CALCAPE.f":409 131 {*movsf_internal}
     (nil))
;;  succ:       134 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739

;; basic block 134, loop depth 0, maybe hot
;;  prev block 133, next block 174, flags: (RTL, MODIFIED)
;;  pred:       129
;;              133 (FALLTHRU)
;;              132
;;              131 [always] 
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1760 1759 1761 134 82 (nil) [3 uses])
(note 1761 1760 1762 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 1762 1761 1959 134 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":395 221 {*addsi_1}
     (nil))
(jump_insn 1959 1762 1960 134 (set (pc)
        (label_ref 1763)) "CALCAPE.f":395 683 {jump}
     (nil)
 -> 1763)
;;  succ:       128 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739

(barrier 1960 1959 2048)
;; basic block 174, loop depth 0, maybe hot
;;  prev block 134, next block 135, flags: (RTL, MODIFIED)
;;  pred:       128
;; bb 174 artificial_defs: { }
;; bb 174 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2048 1960 2047 174 131 (nil) [1 uses])
(note 2047 2048 2049 174 [bb 174] NOTE_INSN_BASIC_BLOCK)
(insn 2049 2047 1766 174 (const_int 0 [0]) "CALCAPE.f":396 718 {nop}
     (nil))
;;  succ:       135 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739

;; basic block 135, loop depth 0, maybe hot
;;  prev block 174, next block 173, flags: (RTL, MODIFIED)
;;  pred:       174 [always]  (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1766 2049 1767 135 81 (nil) [0 uses])
(note 1767 1766 1768 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1768 1767 1961 135 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":394 221 {*addsi_1}
     (nil))
(jump_insn 1961 1768 1962 135 (set (pc)
        (label_ref 1769)) "CALCAPE.f":394 683 {jump}
     (nil)
 -> 1769)
;;  succ:       126 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732 739

(barrier 1962 1961 2045)
;; basic block 173, loop depth 0, maybe hot
;;  prev block 135, next block 136, flags: (RTL, MODIFIED)
;;  pred:       126
;; bb 173 artificial_defs: { }
;; bb 173 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2045 1962 2044 173 130 (nil) [1 uses])
(note 2044 2045 2046 173 [bb 173] NOTE_INSN_BASIC_BLOCK)
(insn 2046 2044 1772 173 (const_int 0 [0]) "CALCAPE.f":395 718 {nop}
     (nil))
;;  succ:       136 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732

;; basic block 136, loop depth 0, maybe hot
;;  prev block 173, next block 170, flags: (RTL, MODIFIED)
;;  pred:       173 [always]  (FALLTHRU)
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1772 2046 1773 136 80 (nil) [0 uses])
(note 1773 1772 1774 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 1774 1773 1963 136 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -52 [0xffffffffffffffcc])) [2 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":381 221 {*addsi_1}
     (nil))
(jump_insn 1963 1774 1964 136 (set (pc)
        (label_ref 1775)) "CALCAPE.f":381 683 {jump}
     (nil)
 -> 1775)
;;  succ:       115 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 732

(barrier 1964 1963 2036)
;; basic block 170, loop depth 0, maybe hot
;;  prev block 136, next block 137, flags: (RTL, MODIFIED)
;;  pred:       115
;; bb 170 artificial_defs: { }
;; bb 170 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2036 1964 2035 170 127 (nil) [1 uses])
(note 2035 2036 2037 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 2037 2035 1778 170 (const_int 0 [0]) "CALCAPE.f":394 718 {nop}
     (nil))
;;  succ:       137 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 137, loop depth 0, maybe hot
;;  prev block 170, next block 138, flags: (RTL, MODIFIED)
;;  pred:       170 [always]  (FALLTHRU)
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 744 745
(code_label 1778 2037 1779 137 74 (nil) [0 uses])
(note 1779 1778 1780 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 1780 1779 1781 137 (set (reg:SI 1 dx [orig:744 _896 ] [744])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CALCAPE.f":421 86 {*movsi_internal}
     (nil))
(insn 1781 1780 1782 137 (set (reg:SI 0 ax [orig:745 _897 ] [745])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f0daa8992d0 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CALCAPE.f":421 86 {*movsi_internal}
     (nil))
(insn 1782 1781 1868 137 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:744 _896 ] [744])) "CALCAPE.f":421 86 {*movsi_internal}
     (nil))
;;  succ:       138 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745

;; basic block 138, loop depth 0, maybe hot
;;  prev block 137, next block 139, flags: (RTL, MODIFIED)
;;  pred:       137 (FALLTHRU)
;;              146 [always] 
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745
;; lr  def 	 17 [flags] 746 1206
(code_label 1868 1782 1783 138 94 (nil) [1 uses])
(note 1783 1868 1784 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 1784 1783 1785 138 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:745 _897 ] [745]))) "CALCAPE.f":421 11 {*cmpsi_1}
     (nil))
(insn 1785 1784 1786 138 (set (reg:QI 1 dx [1206])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":421 678 {*setcc_qi}
     (nil))
(insn 1786 1785 1787 138 (set (reg:SI 1 dx [orig:746 _899 ] [746])
        (zero_extend:SI (reg:QI 1 dx [1206]))) "CALCAPE.f":421 140 {*zero_extendqisi2}
     (nil))
(insn 1787 1786 1788 138 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:746 _899 ] [746])
            (const_int 0 [0]))) "CALCAPE.f":421 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1788 1787 1789 138 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2051)
            (pc))) "CALCAPE.f":421 682 {*jcc}
     (nil)
 -> 2051)
;;  succ:       175
;;              139 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745

;; basic block 139, loop depth 0, maybe hot
;;  prev block 138, next block 140, flags: (RTL, MODIFIED)
;;  pred:       138 (FALLTHRU)
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1789 1788 1790 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 1790 1789 1862 139 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CALCAPE.f":422 86 {*movsi_internal}
     (nil))
;;  succ:       140 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745

;; basic block 140, loop depth 0, maybe hot
;;  prev block 139, next block 141, flags: (RTL, MODIFIED)
;;  pred:       139 (FALLTHRU)
;;              145 [always] 
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 747 1207
(code_label 1862 1790 1791 140 93 (nil) [1 uses])
(note 1791 1862 1792 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(insn 1792 1791 1793 140 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALCAPE.f":422 11 {*cmpsi_1}
     (nil))
(insn 1793 1792 1794 140 (set (reg:QI 1 dx [1207])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":422 678 {*setcc_qi}
     (nil))
(insn 1794 1793 1795 140 (set (reg:SI 1 dx [orig:747 _901 ] [747])
        (zero_extend:SI (reg:QI 1 dx [1207]))) "CALCAPE.f":422 140 {*zero_extendqisi2}
     (nil))
(insn 1795 1794 1796 140 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:747 _901 ] [747])
            (const_int 0 [0]))) "CALCAPE.f":422 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1796 1795 1797 140 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 2054)
            (pc))) "CALCAPE.f":422 682 {*jcc}
     (nil)
 -> 2054)
;;  succ:       176
;;              141 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745

;; basic block 141, loop depth 0, maybe hot
;;  prev block 140, next block 142, flags: (RTL, MODIFIED)
;;  pred:       140 (FALLTHRU)
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 658 659 660 661 662 663 664 665 686 748 1208 1209 1210 1211 1212
(note 1797 1796 1798 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 1798 1797 1799 141 (set (reg:SF 21 xmm0 [orig:686 M.2_648 ] [686])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":429 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1799 1798 1800 141 (set (reg:SI 1 dx [1208])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":429 86 {*movsi_internal}
     (nil))
(insn 1800 1799 1801 141 (set (reg:DI 1 dx [orig:658 _572 ] [658])
        (sign_extend:DI (reg:SI 1 dx [1208]))) "CALCAPE.f":429 149 {*extendsidi2_rex64}
     (nil))
(insn 1801 1800 1802 141 (parallel [
            (set (reg:DI 2 cx [orig:659 _573 ] [659])
                (mult:DI (reg:DI 1 dx [orig:658 _572 ] [658])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":429 349 {*muldi3_1}
     (nil))
(insn 1802 1801 1803 141 (set (reg:SI 1 dx [1209])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":429 86 {*movsi_internal}
     (nil))
(insn 1803 1802 1804 141 (set (reg:DI 1 dx [orig:660 _574 ] [660])
        (sign_extend:DI (reg:SI 1 dx [1209]))) "CALCAPE.f":429 149 {*extendsidi2_rex64}
     (nil))
(insn 1804 1803 1805 141 (parallel [
            (set (reg:DI 1 dx [orig:661 _575 ] [661])
                (plus:DI (reg:DI 1 dx [orig:660 _574 ] [660])
                    (reg:DI 2 cx [orig:659 _573 ] [659])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":429 222 {*adddi_1}
     (nil))
(insn 1805 1804 1806 141 (parallel [
            (set (reg:DI 2 cx [orig:662 _576 ] [662])
                (plus:DI (reg:DI 1 dx [orig:661 _575 ] [661])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":429 222 {*adddi_1}
     (nil))
(insn 1806 1805 1807 141 (set (reg/f:DI 1 dx [1210])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [4 cape+0 S8 A64])) "CALCAPE.f":429 85 {*movdi_internal}
     (nil))
(insn 1807 1806 1808 141 (set (reg:SF 22 xmm1 [orig:748 _903 ] [748])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:662 _576 ] [662])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1210])) [1 *cape_701(D) S4 A32])) "CALCAPE.f":429 131 {*movsf_internal}
     (nil))
(insn 1808 1807 1809 141 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 22 xmm1 [orig:748 _903 ] [748])
            (reg:SF 21 xmm0 [orig:686 M.2_648 ] [686]))) "CALCAPE.f":429 53 {*cmpisf}
     (nil))
(insn 1809 1808 1810 141 (set (reg:QI 1 dx [1211])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":429 678 {*setcc_qi}
     (nil))
(insn 1810 1809 1811 141 (set (reg:SI 2 cx [orig:663 _577 ] [663])
        (zero_extend:SI (reg:QI 1 dx [1211]))) "CALCAPE.f":429 140 {*zero_extendqisi2}
     (nil))
(insn 1811 1810 1812 141 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:686 M.2_648 ] [686])
                    (reg:SF 21 xmm0 [orig:686 M.2_648 ] [686]))
            ] UNSPEC_NOTRAP)) "CALCAPE.f":429 54 {*cmpiusf}
     (nil))
(insn 1812 1811 1813 141 (set (reg:QI 1 dx [1212])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":429 678 {*setcc_qi}
     (nil))
(insn 1813 1812 1814 141 (set (reg:SI 1 dx [orig:664 _578 ] [664])
        (zero_extend:SI (reg:QI 1 dx [1212]))) "CALCAPE.f":429 140 {*zero_extendqisi2}
     (nil))
(insn 1814 1813 1815 141 (parallel [
            (set (reg:SI 1 dx [orig:665 _579 ] [665])
                (ior:SI (reg:SI 1 dx [orig:664 _578 ] [664])
                    (reg:SI 2 cx [orig:663 _577 ] [663])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":429 450 {*iorsi_1}
     (nil))
(insn 1815 1814 1816 141 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:665 _579 ] [665])
            (const_int 0 [0]))) "CALCAPE.f":429 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1816 1815 1817 141 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1818)
            (pc))) "CALCAPE.f":429 682 {*jcc}
     (nil)
 -> 1818)
;;  succ:       142 (FALLTHRU)
;;              143
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 686 745 748

;; basic block 142, loop depth 0, maybe hot
;;  prev block 141, next block 143, flags: (RTL, MODIFIED)
;;  pred:       141 (FALLTHRU)
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745 748
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 748
;; lr  def 	 686
(note 1817 1816 9 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 9 1817 1818 142 (set (reg:SF 21 xmm0 [orig:686 M.2_648 ] [686])
        (reg:SF 22 xmm1 [orig:748 _903 ] [748])) "CALCAPE.f":429 131 {*movsf_internal}
     (nil))
;;  succ:       143 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 686 745

;; basic block 143, loop depth 0, maybe hot
;;  prev block 142, next block 144, flags: (RTL, MODIFIED)
;;  pred:       141
;;              142 (FALLTHRU)
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 686 745
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 686
;; lr  def 	 17 [flags] 666 667 668 669 670 671 672 673 674 675 676 677 678 687 1213 1214 1215 1216 1217 1218 1219 1220 1221
(code_label 1818 9 1819 143 91 (nil) [1 uses])
(note 1819 1818 1820 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 1820 1819 1821 143 (set (reg:SI 1 dx [1213])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":429 86 {*movsi_internal}
     (nil))
(insn 1821 1820 1822 143 (set (reg:DI 1 dx [orig:666 _580 ] [666])
        (sign_extend:DI (reg:SI 1 dx [1213]))) "CALCAPE.f":429 149 {*extendsidi2_rex64}
     (nil))
(insn 1822 1821 1823 143 (parallel [
            (set (reg:DI 2 cx [orig:667 _581 ] [667])
                (mult:DI (reg:DI 1 dx [orig:666 _580 ] [666])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":429 349 {*muldi3_1}
     (nil))
(insn 1823 1822 1824 143 (set (reg:SI 1 dx [1214])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":429 86 {*movsi_internal}
     (nil))
(insn 1824 1823 1825 143 (set (reg:DI 1 dx [orig:668 _582 ] [668])
        (sign_extend:DI (reg:SI 1 dx [1214]))) "CALCAPE.f":429 149 {*extendsidi2_rex64}
     (nil))
(insn 1825 1824 1826 143 (parallel [
            (set (reg:DI 1 dx [orig:669 _583 ] [669])
                (plus:DI (reg:DI 1 dx [orig:668 _582 ] [668])
                    (reg:DI 2 cx [orig:667 _581 ] [667])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":429 222 {*adddi_1}
     (nil))
(insn 1826 1825 1827 143 (parallel [
            (set (reg:DI 2 cx [orig:670 _584 ] [670])
                (plus:DI (reg:DI 1 dx [orig:669 _583 ] [669])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":429 222 {*adddi_1}
     (nil))
(insn 1827 1826 1828 143 (set (reg/f:DI 1 dx [1215])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -224 [0xffffffffffffff20])) [4 cape+0 S8 A64])) "CALCAPE.f":429 85 {*movdi_internal}
     (nil))
(insn 1828 1827 1829 143 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:670 _584 ] [670])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1215])) [1 *cape_701(D) S4 A32])
        (reg:SF 21 xmm0 [orig:686 M.2_648 ] [686])) "CALCAPE.f":429 131 {*movsf_internal}
     (nil))
(insn 1829 1828 1830 143 (set (reg:SI 1 dx [1216])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":430 86 {*movsi_internal}
     (nil))
(insn 1830 1829 1831 143 (set (reg:DI 1 dx [orig:671 _585 ] [671])
        (sign_extend:DI (reg:SI 1 dx [1216]))) "CALCAPE.f":430 149 {*extendsidi2_rex64}
     (nil))
(insn 1831 1830 1832 143 (parallel [
            (set (reg:DI 2 cx [orig:672 _586 ] [672])
                (mult:DI (reg:DI 1 dx [orig:671 _585 ] [671])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":430 349 {*muldi3_1}
     (nil))
(insn 1832 1831 1833 143 (set (reg:SI 1 dx [1217])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":430 86 {*movsi_internal}
     (nil))
(insn 1833 1832 1834 143 (set (reg:DI 1 dx [orig:673 _587 ] [673])
        (sign_extend:DI (reg:SI 1 dx [1217]))) "CALCAPE.f":430 149 {*extendsidi2_rex64}
     (nil))
(insn 1834 1833 1835 143 (parallel [
            (set (reg:DI 1 dx [orig:674 _588 ] [674])
                (plus:DI (reg:DI 1 dx [orig:673 _587 ] [673])
                    (reg:DI 2 cx [orig:672 _586 ] [672])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":430 222 {*adddi_1}
     (nil))
(insn 1835 1834 1836 143 (parallel [
            (set (reg:DI 2 cx [orig:675 _589 ] [675])
                (plus:DI (reg:DI 1 dx [orig:674 _588 ] [674])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":430 222 {*adddi_1}
     (nil))
(insn 1836 1835 1837 143 (set (reg/f:DI 1 dx [1218])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [4 cins+0 S8 A64])) "CALCAPE.f":430 85 {*movdi_internal}
     (nil))
(insn 1837 1836 1838 143 (set (reg:SF 21 xmm0 [orig:687 M.3_649 ] [687])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:675 _589 ] [675])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1218])) [1 *cins_703(D) S4 A32])) "CALCAPE.f":430 131 {*movsf_internal}
     (nil))
(insn 1838 1837 1839 143 (set (reg:SF 22 xmm1 [1220])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":430 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 1839 1838 1840 143 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:687 M.3_649 ] [687])
            (reg:SF 22 xmm1 [1220]))) "CALCAPE.f":430 53 {*cmpisf}
     (nil))
(insn 1840 1839 1841 143 (set (reg:QI 1 dx [1219])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":430 678 {*setcc_qi}
     (nil))
(insn 1841 1840 1842 143 (set (reg:SI 2 cx [orig:676 _590 ] [676])
        (zero_extend:SI (reg:QI 1 dx [1219]))) "CALCAPE.f":430 140 {*zero_extendqisi2}
     (nil))
(insn 1842 1841 1843 143 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:687 M.3_649 ] [687])
                    (reg:SF 21 xmm0 [orig:687 M.3_649 ] [687]))
            ] UNSPEC_NOTRAP)) "CALCAPE.f":430 54 {*cmpiusf}
     (nil))
(insn 1843 1842 1844 143 (set (reg:QI 1 dx [1221])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALCAPE.f":430 678 {*setcc_qi}
     (nil))
(insn 1844 1843 1845 143 (set (reg:SI 1 dx [orig:677 _591 ] [677])
        (zero_extend:SI (reg:QI 1 dx [1221]))) "CALCAPE.f":430 140 {*zero_extendqisi2}
     (nil))
(insn 1845 1844 1846 143 (parallel [
            (set (reg:SI 1 dx [orig:678 _592 ] [678])
                (ior:SI (reg:SI 1 dx [orig:677 _591 ] [677])
                    (reg:SI 2 cx [orig:676 _590 ] [676])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":430 450 {*iorsi_1}
     (nil))
(insn 1846 1845 1847 143 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:678 _592 ] [678])
            (const_int 0 [0]))) "CALCAPE.f":430 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1847 1846 1848 143 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1850)
            (pc))) "CALCAPE.f":430 682 {*jcc}
     (nil)
 -> 1850)
;;  succ:       144 (FALLTHRU)
;;              145
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 687 745

;; basic block 144, loop depth 0, maybe hot
;;  prev block 143, next block 145, flags: (RTL, MODIFIED)
;;  pred:       143 (FALLTHRU)
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 687
(note 1848 1847 1849 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 1849 1848 1850 144 (set (reg:SF 21 xmm0 [orig:687 M.3_649 ] [687])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALCAPE.f":430 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
;;  succ:       145 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 687 745

;; basic block 145, loop depth 0, maybe hot
;;  prev block 144, next block 176, flags: (RTL, MODIFIED)
;;  pred:       143
;;              144 (FALLTHRU)
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 687 745
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 687
;; lr  def 	 17 [flags] 679 680 681 682 683 1222 1223 1224
(code_label 1850 1849 1851 145 92 (nil) [1 uses])
(note 1851 1850 1852 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 1852 1851 1853 145 (set (reg:SI 1 dx [1222])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])) "CALCAPE.f":430 86 {*movsi_internal}
     (nil))
(insn 1853 1852 1854 145 (set (reg:DI 1 dx [orig:679 _593 ] [679])
        (sign_extend:DI (reg:SI 1 dx [1222]))) "CALCAPE.f":430 149 {*extendsidi2_rex64}
     (nil))
(insn 1854 1853 1855 145 (parallel [
            (set (reg:DI 2 cx [orig:680 _594 ] [680])
                (mult:DI (reg:DI 1 dx [orig:679 _593 ] [679])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":430 349 {*muldi3_1}
     (nil))
(insn 1855 1854 1856 145 (set (reg:SI 1 dx [1223])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])) "CALCAPE.f":430 86 {*movsi_internal}
     (nil))
(insn 1856 1855 1857 145 (set (reg:DI 1 dx [orig:681 _595 ] [681])
        (sign_extend:DI (reg:SI 1 dx [1223]))) "CALCAPE.f":430 149 {*extendsidi2_rex64}
     (nil))
(insn 1857 1856 1858 145 (parallel [
            (set (reg:DI 1 dx [orig:682 _596 ] [682])
                (plus:DI (reg:DI 1 dx [orig:681 _595 ] [681])
                    (reg:DI 2 cx [orig:680 _594 ] [680])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":430 222 {*adddi_1}
     (nil))
(insn 1858 1857 1859 145 (parallel [
            (set (reg:DI 2 cx [orig:683 _597 ] [683])
                (plus:DI (reg:DI 1 dx [orig:682 _596 ] [682])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":430 222 {*adddi_1}
     (nil))
(insn 1859 1858 1860 145 (set (reg/f:DI 1 dx [1224])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [4 cins+0 S8 A64])) "CALCAPE.f":430 85 {*movdi_internal}
     (nil))
(insn 1860 1859 1861 145 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:683 _597 ] [683])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [1224])) [1 *cins_703(D) S4 A32])
        (reg:SF 21 xmm0 [orig:687 M.3_649 ] [687])) "CALCAPE.f":430 131 {*movsf_internal}
     (nil))
(insn 1861 1860 1965 145 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":422 221 {*addsi_1}
     (nil))
(jump_insn 1965 1861 1966 145 (set (pc)
        (label_ref 1862)) "CALCAPE.f":422 683 {jump}
     (nil)
 -> 1862)
;;  succ:       140 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745

(barrier 1966 1965 2054)
;; basic block 176, loop depth 0, maybe hot
;;  prev block 145, next block 146, flags: (RTL, MODIFIED)
;;  pred:       140
;; bb 176 artificial_defs: { }
;; bb 176 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2054 1966 2053 176 133 (nil) [1 uses])
(note 2053 2054 2055 176 [bb 176] NOTE_INSN_BASIC_BLOCK)
(insn 2055 2053 1865 176 (const_int 0 [0]) "CALCAPE.f":430 718 {nop}
     (nil))
;;  succ:       146 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745

;; basic block 146, loop depth 0, maybe hot
;;  prev block 176, next block 175, flags: (RTL, MODIFIED)
;;  pred:       176 [always]  (FALLTHRU)
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1865 2055 1866 146 90 (nil) [0 uses])
(note 1866 1865 1867 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 1867 1866 1967 146 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCAPE.f":421 221 {*addsi_1}
     (nil))
(jump_insn 1967 1867 1968 146 (set (pc)
        (label_ref 1868)) "CALCAPE.f":421 683 {jump}
     (nil)
 -> 1868)
;;  succ:       138 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 745

(barrier 1968 1967 2051)
;; basic block 175, loop depth 0, maybe hot
;;  prev block 146, next block 147, flags: (RTL, MODIFIED)
;;  pred:       138
;; bb 175 artificial_defs: { }
;; bb 175 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 2051 1968 2050 175 132 (nil) [1 uses])
(note 2050 2051 2052 175 [bb 175] NOTE_INSN_BASIC_BLOCK)
(insn 2052 2050 1871 175 (const_int 0 [0]) "CALCAPE.f":422 718 {nop}
     (nil))
;;  succ:       147 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 147, loop depth 0, maybe hot
;;  prev block 175, next block 1, flags: (RTL, MODIFIED)
;;  pred:       175 [always]  (FALLTHRU)
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1871 2052 1872 147 89 (nil) [0 uses])
(note 1872 1871 1902 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 1902 1872 2056 147 (const_int 0 [0]) "CALCAPE.f":436 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 2056 1902 0 NOTE_INSN_DELETED)
