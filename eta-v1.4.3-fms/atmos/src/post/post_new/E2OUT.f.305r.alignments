
;; Function e2out (e2out_, funcdef_no=0, decl_uid=3770, cgraph_uid=0, symbol_order=0)



e2out

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp]
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;;  exit block uses 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14]
;;  ref usage 	r0={534d,501u} r1={118d,82u} r2={72d,34u} r3={4d,10u} r4={74d,36u} r5={79d,41u} r6={3d,433u} r7={27d,239u} r8={38d} r9={38d} r10={38d} r11={38d} r12={38d} r13={38d} r14={38d} r15={38d} r17={274d,124u} r18={38d} r19={38d} r20={1d,1u} r21={48d,9u} r22={39d} r23={39d} r24={39d} r25={39d} r26={39d} r27={39d} r28={39d} r29={38d} r30={38d} r31={38d} r32={38d} r33={38d} r34={38d} r35={38d} r36={38d} r37={47d,9u} r38={44d,6u} r39={39d} r40={39d} r41={4d,8u} r42={5d,8u} r43={4d,7u} r45={38d} r46={38d} r47={38d} r48={38d} r49={38d} r50={38d} r51={38d} r52={38d} r53={38d} r54={38d} r55={38d} r56={38d} r57={38d} r58={38d} r59={38d} r60={38d} r61={38d} r62={38d} r63={38d} r64={38d} r65={38d} r66={38d} r67={38d} r68={38d} r69={38d} r70={38d} r71={38d} r72={38d} r73={38d} r74={38d} r75={38d} r76={38d} r77={38d} r78={38d} r79={38d} r80={38d} 
;;    total ref usage 5289{3741d,1548u,0e} in 1118{1080 regular + 38 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 37 [r8] 38 [r9]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 9 1 1538 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn/f 1538 9 1539 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg/f:DI 6 bp)) "E2OUT.f":1 -1
     (nil))
(insn/f 1539 1538 1540 2 (set (reg/f:DI 6 bp)
        (reg/f:DI 7 sp)) "E2OUT.f":1 -1
     (nil))
(insn/f 1540 1539 1541 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 43 r14)) "E2OUT.f":1 -1
     (nil))
(insn/f 1541 1540 1542 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 42 r13)) "E2OUT.f":1 -1
     (nil))
(insn/f 1542 1541 1543 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 41 r12)) "E2OUT.f":1 -1
     (nil))
(insn/f 1543 1542 1544 2 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [0  S8 A8])
        (reg:DI 3 bx)) "E2OUT.f":1 -1
     (nil))
(insn/f 1544 1543 1545 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -96 [0xffffffffffffffa0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "E2OUT.f":1 -1
     (nil))
(note 1545 1544 2 2 NOTE_INSN_PROLOGUE_END)
(insn 2 1545 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])
        (reg:DI 5 di [ itag1 ])) "E2OUT.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])
        (reg:DI 4 si [ itag2 ])) "E2OUT.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])
        (reg:DI 1 dx [ egrid1 ])) "E2OUT.f":1 85 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])
        (reg:DI 2 cx [ egrid2 ])) "E2OUT.f":1 85 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])
        (reg:DI 37 r8 [ grid1 ])) "E2OUT.f":1 85 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])
        (reg:DI 38 r9 [ grid2 ])) "E2OUT.f":1 85 {*movdi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [416])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [416]) [1 *imout_347(D)+0 S4 A32])) "E2OUT.f":2 86 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 0 ax [417])
        (sign_extend:DI (reg:SI 0 ax [orig:87 _1 ] [87]))) "E2OUT.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.0+0 S8 A64])
        (reg:DI 0 ax [417])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 15 14 17 2 (set (reg:DI 0 ax [orig:380 stride.2_349 ] [380])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.0+0 S8 A64])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 17 15 16 2 (set (reg:DI 1 dx [418])
        (const_int 0 [0])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 16 17 1484 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:380 stride.2_349 ] [380])
            (const_int 0 [0]))) "E2OUT.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 1484 16 18 2 (set (reg:DI 3 bx [418])
        (reg:DI 1 dx [418])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 18 1484 19 2 (set (reg:DI 3 bx [418])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:380 stride.2_349 ] [380])
            (reg:DI 3 bx [418]))) "E2OUT.f":2 1003 {*movdicc_noc}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 0 ax [419])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 0 ax [orig:88 _2 ] [88])
        (mem:SI (reg/f:DI 0 ax [419]) [1 *jmout_351(D)+0 S4 A32])) "E2OUT.f":2 86 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 0 ax [420])
        (sign_extend:DI (reg:SI 0 ax [orig:88 _2 ] [88]))) "E2OUT.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 22 21 1486 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 ubound.1+0 S8 A64])
        (reg:DI 0 ax [420])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 1486 22 23 2 (set (reg:DI 0 ax [orig:382 size.4_353 ] [382])
        (reg:DI 3 bx [orig:381 stride.2_350 ] [381])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 23 1486 25 2 (parallel [
            (set (reg:DI 0 ax [orig:382 size.4_353 ] [382])
                (mult:DI (reg:DI 0 ax [orig:382 size.4_353 ] [382])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":2 349 {*muldi3_1}
     (nil))
(insn 25 23 24 2 (set (reg:DI 1 dx [421])
        (const_int 0 [0])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 24 25 26 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:382 size.4_353 ] [382])
            (const_int 0 [0]))) "E2OUT.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 26 24 29 2 (set (reg:DI 0 ax [orig:383 size.4_354 ] [383])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:382 size.4_353 ] [382])
            (reg:DI 1 dx [421]))) "E2OUT.f":2 1003 {*movdicc_noc}
     (nil))
(insn 29 26 30 2 (set (reg:DI 41 r12 [orig:90 _4 ] [90])
        (reg:DI 0 ax [orig:89 size.14_3 ] [89])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 30 29 1488 2 (set (reg:DI 42 r13 [ _4+8 ])
        (const_int 0 [0])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 1488 30 34 2 (set (reg:DI 42 r13 [orig:387 offset.3_358 ] [387])
        (reg:DI 3 bx [orig:381 stride.2_350 ] [381])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 34 1488 35 2 (set (reg:DI 42 r13 [orig:387 offset.3_358 ] [387])
        (not:DI (reg:DI 42 r13 [orig:387 offset.3_358 ] [387]))) "E2OUT.f":2 532 {*one_cmpldi2_1}
     (nil))
(insn 35 34 36 2 (set (reg/f:DI 0 ax [422])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:SI 0 ax [orig:92 _6 ] [92])
        (mem:SI (reg/f:DI 0 ax [422]) [1 *imout_347(D)+0 S4 A32])) "E2OUT.f":2 86 {*movsi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:DI 0 ax [423])
        (sign_extend:DI (reg:SI 0 ax [orig:92 _6 ] [92]))) "E2OUT.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 38 37 39 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 ubound.5+0 S8 A64])
        (reg:DI 0 ax [423])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 39 38 41 2 (set (reg:DI 0 ax [orig:388 stride.7_360 ] [388])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 ubound.5+0 S8 A64])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 41 39 40 2 (set (reg:DI 1 dx [424])
        (const_int 0 [0])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 40 41 42 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:388 stride.7_360 ] [388])
            (const_int 0 [0]))) "E2OUT.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 42 40 1491 2 (set (reg:DI 1 dx [424])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:388 stride.7_360 ] [388])
            (reg:DI 1 dx [424]))) "E2OUT.f":2 1003 {*movdicc_noc}
     (nil))
(insn 1491 42 43 2 (set (reg:DI 41 r12 [orig:389 stride.7_361 ] [389])
        (reg:DI 1 dx [424])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 43 1491 44 2 (set (reg/f:DI 0 ax [425])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:SI 0 ax [orig:93 _7 ] [93])
        (mem:SI (reg/f:DI 0 ax [425]) [1 *jmout_351(D)+0 S4 A32])) "E2OUT.f":2 86 {*movsi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 0 ax [426])
        (sign_extend:DI (reg:SI 0 ax [orig:93 _7 ] [93]))) "E2OUT.f":2 149 {*extendsidi2_rex64}
     (nil))
(insn 46 45 1492 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 ubound.6+0 S8 A64])
        (reg:DI 0 ax [426])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 1492 46 47 2 (set (reg:DI 0 ax [orig:390 size.9_363 ] [390])
        (reg:DI 41 r12 [orig:389 stride.7_361 ] [389])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 47 1492 49 2 (parallel [
            (set (reg:DI 0 ax [orig:390 size.9_363 ] [390])
                (mult:DI (reg:DI 0 ax [orig:390 size.9_363 ] [390])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -72 [0xffffffffffffffb8])) [2 ubound.6+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":2 349 {*muldi3_1}
     (nil))
(insn 49 47 48 2 (set (reg:DI 1 dx [427])
        (const_int 0 [0])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 48 49 50 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:390 size.9_363 ] [390])
            (const_int 0 [0]))) "E2OUT.f":2 8 {*cmpdi_ccno_1}
     (nil))
(insn 50 48 53 2 (set (reg:DI 0 ax [orig:391 size.9_364 ] [391])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:390 size.9_363 ] [390])
            (reg:DI 1 dx [427]))) "E2OUT.f":2 1003 {*movdicc_noc}
     (nil))
(insn 53 50 54 2 (set (reg:DI 39 r10 [orig:95 _9 ] [95])
        (reg:DI 0 ax [orig:94 size.16_8 ] [94])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 54 53 1494 2 (set (reg:DI 40 r11 [ _9+8 ])
        (const_int 0 [0])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 1494 54 58 2 (set (reg:DI 43 r14 [orig:395 offset.8_368 ] [395])
        (reg:DI 41 r12 [orig:389 stride.7_361 ] [389])) "E2OUT.f":2 85 {*movdi_internal}
     (nil))
(insn 58 1494 59 2 (set (reg:DI 43 r14 [orig:395 offset.8_368 ] [395])
        (not:DI (reg:DI 43 r14 [orig:395 offset.8_368 ] [395]))) "E2OUT.f":2 532 {*one_cmpldi2_1}
     (nil))
(insn 59 58 60 2 (set (reg:DI 0 ax [428])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":107 85 {*movdi_internal}
     (nil))
(insn 60 59 61 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [428])) "E2OUT.f":107 85 {*movdi_internal}
     (nil))
(insn 61 60 62 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":107 88 {*movqi_internal}
     (nil))
(call_insn 62 61 63 2 (call (mem:QI (symbol_ref:DI ("collect_") [flags 0x41]  <function_decl 0x7f830f8f8600 collect>) [0 collect S1 A8])
        (const_int 0 [0])) "E2OUT.f":107 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 63 62 64 2 (set (reg:DI 0 ax [429])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":114 85 {*movdi_internal}
     (nil))
(insn 64 63 65 2 (set (reg:DI 5 di)
        (reg:DI 0 ax [429])) "E2OUT.f":114 85 {*movdi_internal}
     (nil))
(insn 65 64 66 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":114 88 {*movqi_internal}
     (nil))
(call_insn 66 65 67 2 (call (mem:QI (symbol_ref:DI ("collect_") [flags 0x41]  <function_decl 0x7f830f8f8600 collect>) [0 collect S1 A8])
        (const_int 0 [0])) "E2OUT.f":114 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 67 66 68 2 (set (reg:SI 0 ax [orig:97 _11 ] [97])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f830f90dbd0 parallel>)
                    (const_int 4 [0x4]))) [1 parallel.me+0 S4 A32])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 68 67 69 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:97 _11 ] [97])
            (const_int 0 [0]))) "E2OUT.f":116 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 69 68 70 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1363)
            (pc))) "E2OUT.f":116 682 {*jcc}
     (nil)
 -> 1363)
;;  succ:       3 (FALLTHRU)
;;              171
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 37 [r8]
(note 70 69 71 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 71 70 72 3 (set (reg/f:DI 0 ax [430])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":120 85 {*movdi_internal}
     (nil))
(insn 72 71 73 3 (set (reg:SI 0 ax [orig:98 _12 ] [98])
        (mem:SI (reg/f:DI 0 ax [430]) [1 *imout_347(D)+0 S4 A32])) "E2OUT.f":120 86 {*movsi_internal}
     (nil))
(insn 73 72 74 3 (set (reg:DI 5 di [orig:396 _374 ] [396])
        (sign_extend:DI (reg:SI 0 ax [orig:98 _12 ] [98]))) "E2OUT.f":120 149 {*extendsidi2_rex64}
     (nil))
(insn 74 73 75 3 (set (reg/f:DI 0 ax [431])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":120 85 {*movdi_internal}
     (nil))
(insn 75 74 76 3 (set (reg:SI 0 ax [orig:99 _13 ] [99])
        (mem:SI (reg/f:DI 0 ax [431]) [1 *jmout_351(D)+0 S4 A32])) "E2OUT.f":120 86 {*movsi_internal}
     (nil))
(insn 76 75 77 3 (set (reg:DI 37 r8 [orig:397 _375 ] [397])
        (sign_extend:DI (reg:SI 0 ax [orig:99 _13 ] [99]))) "E2OUT.f":120 149 {*extendsidi2_rex64}
     (nil))
(insn 77 76 100 3 (set (reg:DI 1 dx [orig:376 S.10_304 ] [376])
        (const_int 1 [0x1])) "E2OUT.f":120 85 {*movdi_internal}
     (nil))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              8 [always] 
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 37 [r8]
;; lr  def 	 17 [flags]
(code_label 100 77 78 4 6 (nil) [1 uses])
(note 78 100 79 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 79 78 80 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 1 dx [orig:376 S.10_304 ] [376])
            (reg:DI 37 r8 [orig:397 _375 ] [397]))) "E2OUT.f":120 12 {*cmpdi_1}
     (nil))
(jump_insn 80 79 81 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 103)
            (pc))) "E2OUT.f":120 682 {*jcc}
     (nil)
 -> 103)
;;  succ:       9
;;              5 (FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 17 [flags] 38 [r9]
(note 81 80 1496 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 1496 81 82 5 (set (reg:DI 0 ax [orig:100 _14 ] [100])
        (reg:DI 1 dx [orig:376 S.10_304 ] [376])) "E2OUT.f":120 85 {*movdi_internal}
     (nil))
(insn 82 1496 1537 5 (parallel [
            (set (reg:DI 0 ax [orig:100 _14 ] [100])
                (mult:DI (reg:DI 0 ax [orig:100 _14 ] [100])
                    (reg:DI 3 bx [orig:381 stride.2_350 ] [381])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":120 349 {*muldi3_1}
     (nil))
(insn 1537 82 84 5 (set (reg:DI 38 r9 [orig:398 _377 ] [398])
        (plus:DI (reg:DI 42 r13 [orig:387 offset.3_358 ] [387])
            (reg:DI 0 ax [orig:100 _14 ] [100]))) "E2OUT.f":120 218 {*leadi}
     (nil))
(insn 84 1537 94 5 (set (reg:DI 0 ax [orig:377 S.11_305 ] [377])
        (const_int 1 [0x1])) "E2OUT.f":120 85 {*movdi_internal}
     (nil))
;;  succ:       6 (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;;              7 [always] 
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 94 84 85 6 5 (nil) [1 uses])
(note 85 94 86 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 0 ax [orig:377 S.11_305 ] [377])
            (reg:DI 5 di [orig:396 _374 ] [396]))) "E2OUT.f":120 12 {*cmpdi_1}
     (nil))
(jump_insn 87 86 88 6 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 97)
            (pc))) "E2OUT.f":120 682 {*jcc}
     (nil)
 -> 97)
;;  succ:       8
;;              7 (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 38 [r9]
;; lr  def 	 0 [ax] 2 [cx] 4 [si] 17 [flags] 21 [xmm0]
(note 88 87 1535 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 1535 88 90 7 (set (reg:DI 4 si [orig:101 _15 ] [101])
        (plus:DI (reg:DI 0 ax [orig:377 S.11_305 ] [377])
            (reg:DI 38 r9 [orig:398 _377 ] [398]))) "E2OUT.f":120 218 {*leadi}
     (nil))
(insn 90 1535 1536 7 (set (reg/f:DI 2 cx [432])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":120 85 {*movdi_internal}
     (nil))
(insn 1536 90 92 7 (set (reg:SF 21 xmm0 [433])
        (const_double:SF 0.0 [0x0.0p+0])) "E2OUT.f":120 131 {*movsf_internal}
     (nil))
(insn 92 1536 93 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:101 _15 ] [101])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [432])) [6 *grid1_379(D) S4 A32])
        (reg:SF 21 xmm0 [433])) "E2OUT.f":120 131 {*movsf_internal}
     (nil))
(insn 93 92 1379 7 (parallel [
            (set (reg:DI 0 ax [orig:377 S.11_305 ] [377])
                (plus:DI (reg:DI 0 ax [orig:377 S.11_305 ] [377])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":120 222 {*adddi_1}
     (nil))
(jump_insn 1379 93 1380 7 (set (pc)
        (label_ref 94)) "E2OUT.f":120 683 {jump}
     (nil)
 -> 94)
;;  succ:       6 [always] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

(barrier 1380 1379 97)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 97 1380 98 8 4 (nil) [1 uses])
(note 98 97 99 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 99 98 1381 8 (parallel [
            (set (reg:DI 1 dx [orig:376 S.10_304 ] [376])
                (plus:DI (reg:DI 1 dx [orig:376 S.10_304 ] [376])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":120 222 {*adddi_1}
     (nil))
(jump_insn 1381 99 1382 8 (set (pc)
        (label_ref 100)) "E2OUT.f":120 683 {jump}
     (nil)
 -> 100)
;;  succ:       4 [always] 
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

(barrier 1382 1381 103)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       4
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 5 [di] 37 [r8]
(code_label 103 1382 104 9 3 (nil) [1 uses])
(note 104 103 105 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 105 104 106 9 (set (reg/f:DI 0 ax [434])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":121 85 {*movdi_internal}
     (nil))
(insn 106 105 107 9 (set (reg:SI 0 ax [orig:102 _16 ] [102])
        (mem:SI (reg/f:DI 0 ax [434]) [1 *imout_347(D)+0 S4 A32])) "E2OUT.f":121 86 {*movsi_internal}
     (nil))
(insn 107 106 108 9 (set (reg:DI 5 di [orig:399 _384 ] [399])
        (sign_extend:DI (reg:SI 0 ax [orig:102 _16 ] [102]))) "E2OUT.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 108 107 109 9 (set (reg/f:DI 0 ax [435])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":121 85 {*movdi_internal}
     (nil))
(insn 109 108 110 9 (set (reg:SI 0 ax [orig:103 _17 ] [103])
        (mem:SI (reg/f:DI 0 ax [435]) [1 *jmout_351(D)+0 S4 A32])) "E2OUT.f":121 86 {*movsi_internal}
     (nil))
(insn 110 109 111 9 (set (reg:DI 37 r8 [orig:400 _385 ] [400])
        (sign_extend:DI (reg:SI 0 ax [orig:103 _17 ] [103]))) "E2OUT.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 111 110 134 9 (set (reg:DI 1 dx [orig:378 S.12_306 ] [378])
        (const_int 1 [0x1])) "E2OUT.f":121 85 {*movdi_internal}
     (nil))
;;  succ:       10 (FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;;              14 [always] 
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 37 [r8]
;; lr  def 	 17 [flags]
(code_label 134 111 112 10 10 (nil) [1 uses])
(note 112 134 113 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 113 112 114 10 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 1 dx [orig:378 S.12_306 ] [378])
            (reg:DI 37 r8 [orig:400 _385 ] [400]))) "E2OUT.f":121 12 {*cmpdi_1}
     (nil))
(jump_insn 114 113 115 10 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 137)
            (pc))) "E2OUT.f":121 682 {*jcc}
     (nil)
 -> 137)
;;  succ:       15
;;              11 (FALLTHRU)
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 17 [flags] 38 [r9]
(note 115 114 1498 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 1498 115 116 11 (set (reg:DI 0 ax [orig:104 _18 ] [104])
        (reg:DI 1 dx [orig:378 S.12_306 ] [378])) "E2OUT.f":121 85 {*movdi_internal}
     (nil))
(insn 116 1498 1534 11 (parallel [
            (set (reg:DI 0 ax [orig:104 _18 ] [104])
                (mult:DI (reg:DI 0 ax [orig:104 _18 ] [104])
                    (reg:DI 41 r12 [orig:389 stride.7_361 ] [389])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":121 349 {*muldi3_1}
     (nil))
(insn 1534 116 118 11 (set (reg:DI 38 r9 [orig:401 _387 ] [401])
        (plus:DI (reg:DI 43 r14 [orig:395 offset.8_368 ] [395])
            (reg:DI 0 ax [orig:104 _18 ] [104]))) "E2OUT.f":121 218 {*leadi}
     (nil))
(insn 118 1534 128 11 (set (reg:DI 0 ax [orig:379 S.13_307 ] [379])
        (const_int 1 [0x1])) "E2OUT.f":121 85 {*movdi_internal}
     (nil))
;;  succ:       12 (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;;              13 [always] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 5 [di] 6 [bp] 7 [sp]
;; lr  def 	 17 [flags]
(code_label 128 118 119 12 9 (nil) [1 uses])
(note 119 128 120 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 12 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 0 ax [orig:379 S.13_307 ] [379])
            (reg:DI 5 di [orig:399 _384 ] [399]))) "E2OUT.f":121 12 {*cmpdi_1}
     (nil))
(jump_insn 121 120 122 12 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 131)
            (pc))) "E2OUT.f":121 682 {*jcc}
     (nil)
 -> 131)
;;  succ:       14
;;              13 (FALLTHRU)
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 0 [ax] 6 [bp] 7 [sp] 38 [r9]
;; lr  def 	 0 [ax] 2 [cx] 4 [si] 17 [flags] 21 [xmm0]
(note 122 121 1532 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 1532 122 124 13 (set (reg:DI 4 si [orig:105 _19 ] [105])
        (plus:DI (reg:DI 0 ax [orig:379 S.13_307 ] [379])
            (reg:DI 38 r9 [orig:401 _387 ] [401]))) "E2OUT.f":121 218 {*leadi}
     (nil))
(insn 124 1532 1533 13 (set (reg/f:DI 2 cx [436])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])) "E2OUT.f":121 85 {*movdi_internal}
     (nil))
(insn 1533 124 126 13 (set (reg:SF 21 xmm0 [437])
        (const_double:SF 0.0 [0x0.0p+0])) "E2OUT.f":121 131 {*movsf_internal}
     (nil))
(insn 126 1533 127 13 (set (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:105 _19 ] [105])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [436])) [6 *grid2_389(D) S4 A32])
        (reg:SF 21 xmm0 [437])) "E2OUT.f":121 131 {*movsf_internal}
     (nil))
(insn 127 126 1383 13 (parallel [
            (set (reg:DI 0 ax [orig:379 S.13_307 ] [379])
                (plus:DI (reg:DI 0 ax [orig:379 S.13_307 ] [379])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":121 222 {*adddi_1}
     (nil))
(jump_insn 1383 127 1384 13 (set (pc)
        (label_ref 128)) "E2OUT.f":121 683 {jump}
     (nil)
 -> 128)
;;  succ:       12 [always] 
;; lr  out 	 0 [ax] 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 38 [r9] 41 [r12] 42 [r13] 43 [r14]

(barrier 1384 1383 131)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       12
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 1 [dx] 6 [bp] 7 [sp]
;; lr  def 	 1 [dx] 17 [flags]
(code_label 131 1384 132 14 8 (nil) [1 uses])
(note 132 131 133 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 1385 14 (parallel [
            (set (reg:DI 1 dx [orig:378 S.12_306 ] [378])
                (plus:DI (reg:DI 1 dx [orig:378 S.12_306 ] [378])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":121 222 {*adddi_1}
     (nil))
(jump_insn 1385 133 1386 14 (set (pc)
        (label_ref 134)) "E2OUT.f":121 683 {jump}
     (nil)
 -> 134)
;;  succ:       10 [always] 
;; lr  out 	 1 [dx] 3 [bx] 5 [di] 6 [bp] 7 [sp] 20 [frame] 37 [r8] 41 [r12] 42 [r13] 43 [r14]

(barrier 1386 1385 137)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 137 1386 138 15 7 (nil) [1 uses])
(note 138 137 139 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 15 (set (reg:SI 0 ax [orig:106 _20 ] [106])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 140 139 141 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:106 _20 ] [106])
            (const_int 90 [0x5a]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 141 140 142 15 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              16 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 142 141 143 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 143 142 144 16 (set (reg:SI 0 ax [orig:107 _21 ] [107])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 144 143 145 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:107 _21 ] [107])
            (const_int 92 [0x5c]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 145 144 146 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              17 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 146 145 147 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 17 (set (reg:SI 0 ax [orig:108 _22 ] [108])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 148 147 149 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:108 _22 ] [108])
            (const_int 94 [0x5e]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 149 148 150 17 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              18 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 150 149 151 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 151 150 152 18 (set (reg:SI 0 ax [orig:109 _23 ] [109])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 152 151 153 18 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:109 _23 ] [109])
            (const_int 96 [0x60]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 153 152 154 18 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              19 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 154 153 155 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 19 (set (reg:SI 0 ax [orig:110 _24 ] [110])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 156 155 157 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:110 _24 ] [110])
            (const_int 99 [0x63]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 157 156 158 19 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              20 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 158 157 159 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 159 158 160 20 (set (reg:SI 0 ax [orig:111 _25 ] [111])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 160 159 161 20 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:111 _25 ] [111])
            (const_int 190 [0xbe]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 161 160 162 20 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              21 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 162 161 163 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 163 162 164 21 (set (reg:SI 0 ax [orig:112 _26 ] [112])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 164 163 165 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:112 _26 ] [112])
            (const_int 192 [0xc0]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 165 164 166 21 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              22 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 166 165 167 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 167 166 168 22 (set (reg:SI 0 ax [orig:113 _27 ] [113])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 168 167 169 22 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:113 _27 ] [113])
            (const_int 194 [0xc2]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 169 168 170 22 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              23 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 170 169 171 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 171 170 172 23 (set (reg:SI 0 ax [orig:114 _28 ] [114])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 172 171 173 23 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:114 _28 ] [114])
            (const_int 196 [0xc4]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 173 172 174 23 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 178)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 178)
;;  succ:       25
;;              24 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 174 173 175 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 24 (set (reg:SI 0 ax [orig:115 _29 ] [115])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 176 175 177 24 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:115 _29 ] [115])
            (const_int 255 [0xff]))) "E2OUT.f":132 11 {*cmpsi_1}
     (nil))
(jump_insn 177 176 178 24 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 302)
            (pc))) "E2OUT.f":132 682 {*jcc}
     (nil)
 -> 302)
;;  succ:       25 (FALLTHRU)
;;              39
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       15
;;              16
;;              17
;;              18
;;              19
;;              20
;;              21
;;              22
;;              23
;;              24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 178 177 179 25 11 (nil) [9 uses])
(note 179 178 180 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 180 179 181 25 (set (reg:DI 0 ax [438])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":135 85 {*movdi_internal}
     (nil))
(insn 181 180 182 25 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":135 85 {*movdi_internal}
     (nil))
(insn 182 181 183 25 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f830f5566c0 *.LC2>)) "E2OUT.f":135 85 {*movdi_internal}
     (nil))
(insn 183 182 184 25 (set (reg:DI 5 di)
        (reg:DI 0 ax [438])) "E2OUT.f":135 85 {*movdi_internal}
     (nil))
(insn 184 183 185 25 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":135 88 {*movqi_internal}
     (nil))
(call_insn 185 184 186 25 (call (mem:QI (symbol_ref:DI ("efill_") [flags 0x41]  <function_decl 0x7f830f8f8700 efill>) [0 efill S1 A8])
        (const_int 0 [0])) "E2OUT.f":135 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 186 185 236 25 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":143 86 {*movsi_internal}
     (nil))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;;              30 [always] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 236 186 187 26 16 (nil) [1 uses])
(note 187 236 188 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 188 187 189 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "E2OUT.f":143 11 {*cmpsi_1}
     (nil))
(insn 189 188 190 26 (set (reg:QI 0 ax [439])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":143 678 {*setcc_qi}
     (nil))
(insn 190 189 191 26 (set (reg:SI 0 ax [orig:412 _474 ] [412])
        (zero_extend:SI (reg:QI 0 ax [439]))) "E2OUT.f":143 140 {*zero_extendqisi2}
     (nil))
(insn 191 190 192 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:412 _474 ] [412])
            (const_int 0 [0]))) "E2OUT.f":143 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 192 191 193 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1430)
            (pc))) "E2OUT.f":143 682 {*jcc}
     (nil)
 -> 1430)
;;  succ:       31
;;              27 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 193 192 194 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 194 193 230 27 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":144 86 {*movsi_internal}
     (nil))
;;  succ:       28 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;;              29 [always] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 230 194 195 28 15 (nil) [1 uses])
(note 195 230 196 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 196 195 197 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "E2OUT.f":144 11 {*cmpsi_1}
     (nil))
(insn 197 196 198 28 (set (reg:QI 0 ax [440])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":144 678 {*setcc_qi}
     (nil))
(insn 198 197 199 28 (set (reg:SI 0 ax [orig:413 _476 ] [413])
        (zero_extend:SI (reg:QI 0 ax [440]))) "E2OUT.f":144 140 {*zero_extendqisi2}
     (nil))
(insn 199 198 200 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:413 _476 ] [413])
            (const_int 0 [0]))) "E2OUT.f":144 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 200 199 201 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1433)
            (pc))) "E2OUT.f":144 682 {*jcc}
     (nil)
 -> 1433)
;;  succ:       30
;;              29 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 201 200 202 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 202 201 203 29 (set (reg:SI 0 ax [441])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":145 86 {*movsi_internal}
     (nil))
(insn 203 202 204 29 (set (reg:DI 0 ax [orig:116 _30 ] [116])
        (sign_extend:DI (reg:SI 0 ax [441]))) "E2OUT.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 204 203 205 29 (parallel [
            (set (reg:DI 1 dx [orig:117 _31 ] [117])
                (mult:DI (reg:DI 0 ax [orig:116 _30 ] [116])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":145 349 {*muldi3_1}
     (nil))
(insn 205 204 206 29 (set (reg:SI 0 ax [442])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":145 86 {*movsi_internal}
     (nil))
(insn 206 205 207 29 (set (reg:DI 0 ax [orig:118 _32 ] [118])
        (sign_extend:DI (reg:SI 0 ax [442]))) "E2OUT.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 207 206 1529 29 (parallel [
            (set (reg:DI 0 ax [orig:119 _33 ] [119])
                (plus:DI (reg:DI 0 ax [orig:118 _32 ] [118])
                    (reg:DI 1 dx [orig:117 _31 ] [117])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":145 222 {*adddi_1}
     (nil))
(insn 1529 207 209 29 (set (reg:DI 2 cx [orig:120 _34 ] [120])
        (plus:DI (reg:DI 0 ax [orig:119 _33 ] [119])
            (const_int -120 [0xffffffffffffff88]))) "E2OUT.f":145 218 {*leadi}
     (nil))
(insn 209 1529 210 29 (set (reg:SI 0 ax [443])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":145 86 {*movsi_internal}
     (nil))
(insn 210 209 211 29 (set (reg:DI 0 ax [orig:121 _35 ] [121])
        (sign_extend:DI (reg:SI 0 ax [443]))) "E2OUT.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 211 210 1530 29 (parallel [
            (set (reg:DI 0 ax [orig:122 _36 ] [122])
                (mult:DI (reg:DI 0 ax [orig:121 _35 ] [121])
                    (reg:DI 3 bx [orig:381 stride.2_350 ] [381])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":145 349 {*muldi3_1}
     (nil))
(insn 1530 211 213 29 (set (reg:DI 1 dx [orig:123 _37 ] [123])
        (plus:DI (reg:DI 42 r13 [orig:387 offset.3_358 ] [387])
            (reg:DI 0 ax [orig:122 _36 ] [122]))) "E2OUT.f":145 218 {*leadi}
     (nil))
(insn 213 1530 214 29 (set (reg:SI 0 ax [444])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":145 86 {*movsi_internal}
     (nil))
(insn 214 213 215 29 (set (reg:DI 0 ax [orig:124 _38 ] [124])
        (sign_extend:DI (reg:SI 0 ax [444]))) "E2OUT.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 215 214 216 29 (parallel [
            (set (reg:DI 1 dx [orig:125 _39 ] [125])
                (plus:DI (reg:DI 1 dx [orig:123 _37 ] [123])
                    (reg:DI 0 ax [orig:124 _38 ] [124])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":145 222 {*adddi_1}
     (nil))
(insn 216 215 217 29 (set (reg/f:DI 0 ax [445])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":145 85 {*movdi_internal}
     (nil))
(insn 217 216 218 29 (set (reg:SF 21 xmm0 [orig:126 _40 ] [126])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:120 _34 ] [120])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [445])) [6 *egrid1_369(D) S4 A32])) "E2OUT.f":145 131 {*movsf_internal}
     (nil))
(insn 218 217 219 29 (set (reg/f:DI 0 ax [446])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":145 85 {*movdi_internal}
     (nil))
(insn 219 218 220 29 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:125 _39 ] [125])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [446])) [6 *grid1_379(D) S4 A32])
        (reg:SF 21 xmm0 [orig:126 _40 ] [126])) "E2OUT.f":145 131 {*movsf_internal}
     (nil))
(insn 220 219 221 29 (set (reg:SI 0 ax [447])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":146 86 {*movsi_internal}
     (nil))
(insn 221 220 222 29 (set (reg:DI 0 ax [orig:127 _41 ] [127])
        (sign_extend:DI (reg:SI 0 ax [447]))) "E2OUT.f":146 149 {*extendsidi2_rex64}
     (nil))
(insn 222 221 223 29 (parallel [
            (set (reg:DI 1 dx [orig:128 _42 ] [128])
                (mult:DI (reg:DI 0 ax [orig:127 _41 ] [127])
                    (const_int 4000 [0xfa0])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":146 349 {*muldi3_1}
     (nil))
(insn 223 222 224 29 (set (reg:SI 0 ax [448])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":146 86 {*movsi_internal}
     (nil))
(insn 224 223 225 29 (set (reg:DI 0 ax [orig:129 _43 ] [129])
        (sign_extend:DI (reg:SI 0 ax [448]))) "E2OUT.f":146 149 {*extendsidi2_rex64}
     (nil))
(insn 225 224 1531 29 (parallel [
            (set (reg:DI 0 ax [orig:130 _44 ] [130])
                (plus:DI (reg:DI 0 ax [orig:129 _43 ] [129])
                    (reg:DI 1 dx [orig:128 _42 ] [128])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":146 222 {*adddi_1}
     (nil))
(insn 1531 225 227 29 (set (reg:DI 1 dx [orig:131 _45 ] [131])
        (plus:DI (reg:DI 0 ax [orig:130 _44 ] [130])
            (const_int -4001 [0xfffffffffffff05f]))) "E2OUT.f":146 218 {*leadi}
     (nil))
(insn 227 1531 228 29 (set (reg/f:DI 0 ax [449])
        (symbol_ref:DI ("bitmap_") [flags 0x202]  <var_decl 0x7f831696bab0 bitmap>)) "E2OUT.f":146 85 {*movdi_internal}
     (nil))
(insn 228 227 229 29 (set (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:131 _45 ] [131])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [449])) [1 bitmap.ibmap S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":146 86 {*movsi_internal}
     (nil))
(insn 229 228 1387 29 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":144 221 {*addsi_1}
     (nil))
(jump_insn 1387 229 1388 29 (set (pc)
        (label_ref 230)) "E2OUT.f":144 683 {jump}
     (nil)
 -> 230)
;;  succ:       28 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

(barrier 1388 1387 1433)
;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       28
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1433 1388 1432 30 73 (nil) [1 uses])
(note 1432 1433 1434 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 1434 1432 235 30 (const_int 0 [0]) "E2OUT.f":146 718 {nop}
     (nil))
(insn 235 1434 1389 30 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":143 221 {*addsi_1}
     (nil))
(jump_insn 1389 235 1390 30 (set (pc)
        (label_ref 236)) "E2OUT.f":143 683 {jump}
     (nil)
 -> 236)
;;  succ:       26 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

(barrier 1390 1389 1430)
;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       26
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1430 1390 1429 31 72 (nil) [1 uses])
(note 1429 1430 1431 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 1431 1429 241 31 (const_int 0 [0]) "E2OUT.f":144 718 {nop}
     (nil))
(insn 241 1431 242 31 (set (reg/f:DI 0 ax [450])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":150 85 {*movdi_internal}
     (nil))
(insn 242 241 243 31 (set (reg:SI 0 ax [orig:132 _46 ] [132])
        (mem:SI (reg/f:DI 0 ax [450]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":150 86 {*movsi_internal}
     (nil))
(insn 243 242 244 31 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:132 _46 ] [132])
            (const_int 0 [0]))) "E2OUT.f":150 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 244 243 245 31 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1438)
            (pc))) "E2OUT.f":150 682 {*jcc}
     (nil)
 -> 1438)
;;  succ:       32 (FALLTHRU)
;;              162
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 245 244 246 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 246 245 247 32 (set (reg:DI 0 ax [451])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":152 85 {*movdi_internal}
     (nil))
(insn 247 246 248 32 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":152 85 {*movdi_internal}
     (nil))
(insn 248 247 249 32 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7f830f5566c0 *.LC2>)) "E2OUT.f":152 85 {*movdi_internal}
     (nil))
(insn 249 248 250 32 (set (reg:DI 5 di)
        (reg:DI 0 ax [451])) "E2OUT.f":152 85 {*movdi_internal}
     (nil))
(insn 250 249 251 32 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":152 88 {*movqi_internal}
     (nil))
(call_insn 251 250 252 32 (call (mem:QI (symbol_ref:DI ("efill_") [flags 0x41]  <function_decl 0x7f830f8f8700 efill>) [0 efill S1 A8])
        (const_int 0 [0])) "E2OUT.f":152 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 252 251 293 32 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":154 86 {*movsi_internal}
     (nil))
;;  succ:       33 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;;              37 [always] 
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 293 252 253 33 21 (nil) [1 uses])
(note 253 293 254 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 254 253 255 33 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "E2OUT.f":154 11 {*cmpsi_1}
     (nil))
(insn 255 254 256 33 (set (reg:QI 0 ax [452])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":154 678 {*setcc_qi}
     (nil))
(insn 256 255 257 33 (set (reg:SI 0 ax [orig:414 _483 ] [414])
        (zero_extend:SI (reg:QI 0 ax [452]))) "E2OUT.f":154 140 {*zero_extendqisi2}
     (nil))
(insn 257 256 258 33 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:414 _483 ] [414])
            (const_int 0 [0]))) "E2OUT.f":154 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 258 257 259 33 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1441)
            (pc))) "E2OUT.f":154 682 {*jcc}
     (nil)
 -> 1441)
;;  succ:       38
;;              34 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 35, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33 (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 259 258 260 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 260 259 287 34 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":155 86 {*movsi_internal}
     (nil))
;;  succ:       35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;;              36 [always] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 287 260 261 35 20 (nil) [1 uses])
(note 261 287 262 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 262 261 263 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "E2OUT.f":155 11 {*cmpsi_1}
     (nil))
(insn 263 262 264 35 (set (reg:QI 0 ax [453])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":155 678 {*setcc_qi}
     (nil))
(insn 264 263 265 35 (set (reg:SI 0 ax [orig:415 _485 ] [415])
        (zero_extend:SI (reg:QI 0 ax [453]))) "E2OUT.f":155 140 {*zero_extendqisi2}
     (nil))
(insn 265 264 266 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:415 _485 ] [415])
            (const_int 0 [0]))) "E2OUT.f":155 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 266 265 267 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1444)
            (pc))) "E2OUT.f":155 682 {*jcc}
     (nil)
 -> 1444)
;;  succ:       37
;;              36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 37, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 267 266 268 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 268 267 269 36 (set (reg:SI 0 ax [454])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":156 86 {*movsi_internal}
     (nil))
(insn 269 268 270 36 (set (reg:DI 0 ax [orig:133 _47 ] [133])
        (sign_extend:DI (reg:SI 0 ax [454]))) "E2OUT.f":156 149 {*extendsidi2_rex64}
     (nil))
(insn 270 269 271 36 (parallel [
            (set (reg:DI 1 dx [orig:134 _48 ] [134])
                (mult:DI (reg:DI 0 ax [orig:133 _47 ] [133])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":156 349 {*muldi3_1}
     (nil))
(insn 271 270 272 36 (set (reg:SI 0 ax [455])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":156 86 {*movsi_internal}
     (nil))
(insn 272 271 273 36 (set (reg:DI 0 ax [orig:135 _49 ] [135])
        (sign_extend:DI (reg:SI 0 ax [455]))) "E2OUT.f":156 149 {*extendsidi2_rex64}
     (nil))
(insn 273 272 1527 36 (parallel [
            (set (reg:DI 0 ax [orig:136 _50 ] [136])
                (plus:DI (reg:DI 0 ax [orig:135 _49 ] [135])
                    (reg:DI 1 dx [orig:134 _48 ] [134])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":156 222 {*adddi_1}
     (nil))
(insn 1527 273 275 36 (set (reg:DI 2 cx [orig:137 _51 ] [137])
        (plus:DI (reg:DI 0 ax [orig:136 _50 ] [136])
            (const_int -120 [0xffffffffffffff88]))) "E2OUT.f":156 218 {*leadi}
     (nil))
(insn 275 1527 276 36 (set (reg:SI 0 ax [456])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":156 86 {*movsi_internal}
     (nil))
(insn 276 275 277 36 (set (reg:DI 0 ax [orig:138 _52 ] [138])
        (sign_extend:DI (reg:SI 0 ax [456]))) "E2OUT.f":156 149 {*extendsidi2_rex64}
     (nil))
(insn 277 276 1528 36 (parallel [
            (set (reg:DI 0 ax [orig:139 _53 ] [139])
                (mult:DI (reg:DI 0 ax [orig:138 _52 ] [138])
                    (reg:DI 41 r12 [orig:389 stride.7_361 ] [389])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":156 349 {*muldi3_1}
     (nil))
(insn 1528 277 279 36 (set (reg:DI 1 dx [orig:140 _54 ] [140])
        (plus:DI (reg:DI 43 r14 [orig:395 offset.8_368 ] [395])
            (reg:DI 0 ax [orig:139 _53 ] [139]))) "E2OUT.f":156 218 {*leadi}
     (nil))
(insn 279 1528 280 36 (set (reg:SI 0 ax [457])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":156 86 {*movsi_internal}
     (nil))
(insn 280 279 281 36 (set (reg:DI 0 ax [orig:141 _55 ] [141])
        (sign_extend:DI (reg:SI 0 ax [457]))) "E2OUT.f":156 149 {*extendsidi2_rex64}
     (nil))
(insn 281 280 282 36 (parallel [
            (set (reg:DI 1 dx [orig:142 _56 ] [142])
                (plus:DI (reg:DI 1 dx [orig:140 _54 ] [140])
                    (reg:DI 0 ax [orig:141 _55 ] [141])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":156 222 {*adddi_1}
     (nil))
(insn 282 281 283 36 (set (reg/f:DI 0 ax [458])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":156 85 {*movdi_internal}
     (nil))
(insn 283 282 284 36 (set (reg:SF 21 xmm0 [orig:143 _57 ] [143])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:137 _51 ] [137])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [458])) [6 *egrid2_371(D) S4 A32])) "E2OUT.f":156 131 {*movsf_internal}
     (nil))
(insn 284 283 285 36 (set (reg/f:DI 0 ax [459])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])) "E2OUT.f":156 85 {*movdi_internal}
     (nil))
(insn 285 284 286 36 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:142 _56 ] [142])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [459])) [6 *grid2_389(D) S4 A32])
        (reg:SF 21 xmm0 [orig:143 _57 ] [143])) "E2OUT.f":156 131 {*movsf_internal}
     (nil))
(insn 286 285 1391 36 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":155 221 {*addsi_1}
     (nil))
(jump_insn 1391 286 1392 36 (set (pc)
        (label_ref 287)) "E2OUT.f":155 683 {jump}
     (nil)
 -> 287)
;;  succ:       35 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

(barrier 1392 1391 1444)
;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       35
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1444 1392 1443 37 76 (nil) [1 uses])
(note 1443 1444 1445 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 1445 1443 292 37 (const_int 0 [0]) "E2OUT.f":156 718 {nop}
     (nil))
(insn 292 1445 1393 37 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":154 221 {*addsi_1}
     (nil))
(jump_insn 1393 292 1394 37 (set (pc)
        (label_ref 293)) "E2OUT.f":154 683 {jump}
     (nil)
 -> 293)
;;  succ:       33 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

(barrier 1394 1393 1441)
;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       33
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1441 1394 1440 38 75 (nil) [1 uses])
(note 1440 1441 1442 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 1442 1440 1395 38 (const_int 0 [0]) "E2OUT.f":155 718 {nop}
     (nil))
(jump_insn 1395 1442 1396 38 (set (pc)
        (label_ref:DI 1438)) "E2OUT.f":161 683 {jump}
     (nil)
 -> 1438)
;;  succ:       162 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1396 1395 302)
;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 40, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       24
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 302 1396 303 39 12 (nil) [1 uses])
(note 303 302 304 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 304 303 305 39 (set (reg/f:DI 0 ax [460])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":167 85 {*movdi_internal}
     (nil))
(insn 305 304 306 39 (set (reg:SI 0 ax [orig:144 _58 ] [144])
        (mem:SI (reg/f:DI 0 ax [460]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":167 86 {*movsi_internal}
     (nil))
(insn 306 305 307 39 (set (reg:DI 0 ax [orig:145 _59 ] [145])
        (sign_extend:DI (reg:SI 0 ax [orig:144 _58 ] [144]))) "E2OUT.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 307 306 308 39 (parallel [
            (set (reg:DI 0 ax [orig:146 _60 ] [146])
                (plus:DI (reg:DI 0 ax [orig:145 _59 ] [145])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":167 222 {*adddi_1}
     (nil))
(insn 308 307 309 39 (parallel [
            (set (reg:DI 0 ax [461])
                (plus:DI (reg:DI 0 ax [orig:146 _60 ] [146])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":167 222 {*adddi_1}
     (nil))
(insn 309 308 310 39 (set (reg:SI 0 ax [orig:147 _61 ] [147])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [461])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":167 86 {*movsi_internal}
     (nil))
(insn 310 309 311 39 (set (reg:DI 0 ax [orig:148 _62 ] [148])
        (sign_extend:DI (reg:SI 0 ax [orig:147 _61 ] [147]))) "E2OUT.f":167 149 {*extendsidi2_rex64}
     (nil))
(insn 311 310 312 39 (parallel [
            (set (reg:DI 0 ax [orig:149 _63 ] [149])
                (plus:DI (reg:DI 0 ax [orig:148 _62 ] [148])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":167 222 {*adddi_1}
     (nil))
(insn 312 311 313 39 (parallel [
            (set (reg:DI 0 ax [462])
                (plus:DI (reg:DI 0 ax [orig:149 _63 ] [149])
                    (const_int 804 [0x324])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":167 222 {*adddi_1}
     (nil))
(insn 313 312 314 39 (set (reg:SI 0 ax [orig:150 _64 ] [150])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [462])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismstg S4 A32])) "E2OUT.f":167 86 {*movsi_internal}
     (nil))
(insn 314 313 315 39 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:150 _64 ] [150])) "E2OUT.f":167 86 {*movsi_internal}
     (nil))
(insn 315 314 316 39 (set (reg/f:DI 0 ax [463])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":168 85 {*movdi_internal}
     (nil))
(insn 316 315 317 39 (set (reg:SI 0 ax [orig:151 _65 ] [151])
        (mem:SI (reg/f:DI 0 ax [463]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":168 86 {*movsi_internal}
     (nil))
(insn 317 316 318 39 (set (reg:DI 0 ax [orig:152 _66 ] [152])
        (sign_extend:DI (reg:SI 0 ax [orig:151 _65 ] [151]))) "E2OUT.f":168 149 {*extendsidi2_rex64}
     (nil))
(insn 318 317 319 39 (parallel [
            (set (reg:DI 0 ax [orig:153 _67 ] [153])
                (plus:DI (reg:DI 0 ax [orig:152 _66 ] [152])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":168 222 {*adddi_1}
     (nil))
(insn 319 318 320 39 (parallel [
            (set (reg:DI 0 ax [464])
                (plus:DI (reg:DI 0 ax [orig:153 _67 ] [153])
                    (const_int 13604 [0x3524])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":168 222 {*adddi_1}
     (nil))
(insn 320 319 321 39 (set (reg:SI 0 ax [orig:154 _68 ] [154])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [464])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ifilv S4 A32])) "E2OUT.f":168 86 {*movsi_internal}
     (nil))
(insn 321 320 322 39 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:154 _68 ] [154])
            (const_int 0 [0]))) "E2OUT.f":168 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 322 321 323 39 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 387)
            (pc))) "E2OUT.f":168 682 {*jcc}
     (nil)
 -> 387)
;;  succ:       40 (FALLTHRU)
;;              49
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 41, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 323 322 324 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 324 323 325 40 (set (reg:SI 0 ax [orig:155 ismth.18_69 ] [155])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":169 86 {*movsi_internal}
     (nil))
(insn 325 324 326 40 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:155 ismth.18_69 ] [155])
            (const_int 0 [0]))) "E2OUT.f":169 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 326 325 327 40 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 335)
            (pc))) "E2OUT.f":169 682 {*jcc}
     (nil)
 -> 335)
;;  succ:       41 (FALLTHRU)
;;              42
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 42, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 327 326 328 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 328 327 1526 41 (set (reg:DI 1 dx [465])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":170 85 {*movdi_internal}
     (nil))
(insn 1526 328 331 41 (set (reg:DI 0 ax [466])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":170 218 {*leadi}
     (nil))
(insn 331 1526 332 41 (set (reg:DI 4 si)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f830f90abd0 masks>)) "E2OUT.f":170 85 {*movdi_internal}
     (nil))
(insn 332 331 333 41 (set (reg:DI 5 di)
        (reg:DI 0 ax [466])) "E2OUT.f":170 85 {*movdi_internal}
     (nil))
(insn 333 332 334 41 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":170 88 {*movqi_internal}
     (nil))
(call_insn 334 333 335 41 (call (mem:QI (symbol_ref:DI ("p2filtf_") [flags 0x41]  <function_decl 0x7f830f8f8800 p2filtf>) [0 p2filtf S1 A8])
        (const_int 0 [0])) "E2OUT.f":170 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       42 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       40
;;              41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 335 334 336 42 24 (nil) [1 uses])
(note 336 335 337 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 337 336 338 42 (set (reg:SI 0 ax [orig:156 ismth.19_70 ] [156])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":172 86 {*movsi_internal}
     (nil))
(insn 338 337 339 42 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:156 ismth.19_70 ] [156])
            (const_int 0 [0]))) "E2OUT.f":172 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 339 338 340 42 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 356)
            (pc))) "E2OUT.f":172 682 {*jcc}
     (nil)
 -> 356)
;;  succ:       43 (FALLTHRU)
;;              46
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 43, loop depth 0, maybe hot
;;  prev block 42, next block 44, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 340 339 341 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 341 340 342 43 (set (reg/f:DI 0 ax [467])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":172 85 {*movdi_internal}
     (nil))
(insn 342 341 343 43 (set (reg:SI 0 ax [orig:157 _71 ] [157])
        (mem:SI (reg/f:DI 0 ax [467]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":172 86 {*movsi_internal}
     (nil))
(insn 343 342 344 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:157 _71 ] [157])
            (const_int 10 [0xa]))) "E2OUT.f":172 11 {*cmpsi_1}
     (nil))
(jump_insn 344 343 345 43 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 350)
            (pc))) "E2OUT.f":172 682 {*jcc}
     (nil)
 -> 350)
;;  succ:       45
;;              44 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 44, loop depth 0, maybe hot
;;  prev block 43, next block 45, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 345 344 346 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 346 345 347 44 (set (reg/f:DI 0 ax [468])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":172 85 {*movdi_internal}
     (nil))
(insn 347 346 348 44 (set (reg:SI 0 ax [orig:158 _72 ] [158])
        (mem:SI (reg/f:DI 0 ax [468]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":172 86 {*movsi_internal}
     (nil))
(insn 348 347 349 44 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:158 _72 ] [158])
            (const_int 21 [0x15]))) "E2OUT.f":172 11 {*cmpsi_1}
     (nil))
(jump_insn 349 348 350 44 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 356)
            (pc))) "E2OUT.f":172 682 {*jcc}
     (nil)
 -> 356)
;;  succ:       45 (FALLTHRU)
;;              46
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 46, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       43
;;              44 (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 350 349 351 45 26 (nil) [1 uses])
(note 351 350 352 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 352 351 353 45 (set (reg:DI 0 ax [469])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":173 85 {*movdi_internal}
     (nil))
(insn 353 352 354 45 (set (reg:DI 5 di)
        (reg:DI 0 ax [469])) "E2OUT.f":173 85 {*movdi_internal}
     (nil))
(insn 354 353 355 45 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":173 88 {*movqi_internal}
     (nil))
(call_insn 355 354 356 45 (call (mem:QI (symbol_ref:DI ("efilt_") [flags 0x41]  <function_decl 0x7f830f8f8900 efilt>) [0 efilt S1 A8])
        (const_int 0 [0])) "E2OUT.f":173 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
;;  succ:       46 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 46, loop depth 0, maybe hot
;;  prev block 45, next block 47, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       42
;;              44
;;              45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 356 355 357 46 25 (nil) [2 uses])
(note 357 356 358 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 358 357 359 46 (set (reg/f:DI 0 ax [470])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":175 85 {*movdi_internal}
     (nil))
(insn 359 358 360 46 (set (reg:SI 0 ax [orig:159 _73 ] [159])
        (mem:SI (reg/f:DI 0 ax [470]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":175 86 {*movsi_internal}
     (nil))
(insn 360 359 361 46 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:159 _73 ] [159])
            (const_int 0 [0]))) "E2OUT.f":175 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 361 360 362 46 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 429)
            (pc))) "E2OUT.f":175 682 {*jcc}
     (nil)
 -> 429)
;;  succ:       47 (FALLTHRU)
;;              54
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 47, loop depth 0, maybe hot
;;  prev block 46, next block 48, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 362 361 363 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 363 362 364 47 (set (reg/f:DI 0 ax [471])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":176 85 {*movdi_internal}
     (nil))
(insn 364 363 365 47 (set (reg:SI 0 ax [orig:160 _74 ] [160])
        (mem:SI (reg/f:DI 0 ax [471]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":176 86 {*movsi_internal}
     (nil))
(insn 365 364 366 47 (set (reg:DI 0 ax [orig:161 _75 ] [161])
        (sign_extend:DI (reg:SI 0 ax [orig:160 _74 ] [160]))) "E2OUT.f":176 149 {*extendsidi2_rex64}
     (nil))
(insn 366 365 367 47 (parallel [
            (set (reg:DI 0 ax [orig:162 _76 ] [162])
                (plus:DI (reg:DI 0 ax [orig:161 _75 ] [161])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":176 222 {*adddi_1}
     (nil))
(insn 367 366 368 47 (parallel [
            (set (reg:DI 0 ax [472])
                (plus:DI (reg:DI 0 ax [orig:162 _76 ] [162])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":176 222 {*adddi_1}
     (nil))
(insn 368 367 369 47 (set (reg:SI 0 ax [orig:163 _77 ] [163])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [472])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":176 86 {*movsi_internal}
     (nil))
(insn 369 368 370 47 (set (reg:DI 0 ax [orig:164 _78 ] [164])
        (sign_extend:DI (reg:SI 0 ax [orig:163 _77 ] [163]))) "E2OUT.f":176 149 {*extendsidi2_rex64}
     (nil))
(insn 370 369 371 47 (parallel [
            (set (reg:DI 0 ax [orig:165 _79 ] [165])
                (plus:DI (reg:DI 0 ax [orig:164 _78 ] [164])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":176 222 {*adddi_1}
     (nil))
(insn 371 370 372 47 (parallel [
            (set (reg:DI 0 ax [473])
                (plus:DI (reg:DI 0 ax [orig:165 _79 ] [165])
                    (const_int 804 [0x324])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":176 222 {*adddi_1}
     (nil))
(insn 372 371 373 47 (set (reg:SI 0 ax [orig:166 _80 ] [166])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [473])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismstg S4 A32])) "E2OUT.f":176 86 {*movsi_internal}
     (nil))
(insn 373 372 374 47 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:166 _80 ] [166])) "E2OUT.f":176 86 {*movsi_internal}
     (nil))
(insn 374 373 375 47 (set (reg:SI 0 ax [orig:167 ismth.20_81 ] [167])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":177 86 {*movsi_internal}
     (nil))
(insn 375 374 376 47 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:167 ismth.20_81 ] [167])
            (const_int 0 [0]))) "E2OUT.f":177 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 376 375 377 47 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 429)
            (pc))) "E2OUT.f":177 682 {*jcc}
     (nil)
 -> 429)
;;  succ:       48 (FALLTHRU)
;;              54
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 48, loop depth 0, maybe hot
;;  prev block 47, next block 49, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 377 376 378 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 378 377 1525 48 (set (reg:DI 1 dx [474])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":178 85 {*movdi_internal}
     (nil))
(insn 1525 378 381 48 (set (reg:DI 0 ax [475])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":178 218 {*leadi}
     (nil))
(insn 381 1525 382 48 (set (reg:DI 4 si)
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f830f90abd0 masks>)) "E2OUT.f":178 85 {*movdi_internal}
     (nil))
(insn 382 381 383 48 (set (reg:DI 5 di)
        (reg:DI 0 ax [475])) "E2OUT.f":178 85 {*movdi_internal}
     (nil))
(insn 383 382 384 48 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":178 88 {*movqi_internal}
     (nil))
(call_insn 384 383 1397 48 (call (mem:QI (symbol_ref:DI ("p2filtf_") [flags 0x41]  <function_decl 0x7f830f8f8800 p2filtf>) [0 p2filtf S1 A8])
        (const_int 0 [0])) "E2OUT.f":178 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 1397 384 1398 48 (set (pc)
        (label_ref 429)) 683 {jump}
     (nil)
 -> 429)
;;  succ:       54 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

(barrier 1398 1397 387)
;; basic block 49, loop depth 0, maybe hot
;;  prev block 48, next block 50, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       39
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 387 1398 388 49 23 (nil) [1 uses])
(note 388 387 389 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 389 388 390 49 (set (reg:SI 0 ax [orig:168 ismth.21_82 ] [168])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":182 86 {*movsi_internal}
     (nil))
(insn 390 389 391 49 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:168 ismth.21_82 ] [168])
            (const_int 0 [0]))) "E2OUT.f":182 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 391 390 392 49 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 400)
            (pc))) "E2OUT.f":182 682 {*jcc}
     (nil)
 -> 400)
;;  succ:       50 (FALLTHRU)
;;              51
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 50, loop depth 0, maybe hot
;;  prev block 49, next block 51, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 392 391 393 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 393 392 1524 50 (set (reg:DI 1 dx [476])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":183 85 {*movdi_internal}
     (nil))
(insn 1524 393 396 50 (set (reg:DI 0 ax [477])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":183 218 {*leadi}
     (nil))
(insn 396 1524 397 50 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f830f90abd0 masks>)
                (const_int 118524 [0x1cefc])))) "E2OUT.f":183 85 {*movdi_internal}
     (nil))
(insn 397 396 398 50 (set (reg:DI 5 di)
        (reg:DI 0 ax [477])) "E2OUT.f":183 85 {*movdi_internal}
     (nil))
(insn 398 397 399 50 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":183 88 {*movqi_internal}
     (nil))
(call_insn 399 398 400 50 (call (mem:QI (symbol_ref:DI ("p2fltvf_") [flags 0x41]  <function_decl 0x7f830f8f8a00 p2fltvf>) [0 p2fltvf S1 A8])
        (const_int 0 [0])) "E2OUT.f":183 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       51 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 51, loop depth 0, maybe hot
;;  prev block 50, next block 52, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       49
;;              50 (FALLTHRU)
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 400 399 401 51 28 (nil) [1 uses])
(note 401 400 402 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 402 401 403 51 (set (reg/f:DI 0 ax [478])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":185 85 {*movdi_internal}
     (nil))
(insn 403 402 404 51 (set (reg:SI 0 ax [orig:169 _83 ] [169])
        (mem:SI (reg/f:DI 0 ax [478]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":185 86 {*movsi_internal}
     (nil))
(insn 404 403 405 51 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:169 _83 ] [169])
            (const_int 0 [0]))) "E2OUT.f":185 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 405 404 406 51 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 429)
            (pc))) "E2OUT.f":185 682 {*jcc}
     (nil)
 -> 429)
;;  succ:       52 (FALLTHRU)
;;              54
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 53, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 406 405 407 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 52 (set (reg/f:DI 0 ax [479])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":186 85 {*movdi_internal}
     (nil))
(insn 408 407 409 52 (set (reg:SI 0 ax [orig:170 _84 ] [170])
        (mem:SI (reg/f:DI 0 ax [479]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":186 86 {*movsi_internal}
     (nil))
(insn 409 408 410 52 (set (reg:DI 0 ax [orig:171 _85 ] [171])
        (sign_extend:DI (reg:SI 0 ax [orig:170 _84 ] [170]))) "E2OUT.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 410 409 411 52 (parallel [
            (set (reg:DI 0 ax [orig:172 _86 ] [172])
                (plus:DI (reg:DI 0 ax [orig:171 _85 ] [171])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":186 222 {*adddi_1}
     (nil))
(insn 411 410 412 52 (parallel [
            (set (reg:DI 0 ax [480])
                (plus:DI (reg:DI 0 ax [orig:172 _86 ] [172])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":186 222 {*adddi_1}
     (nil))
(insn 412 411 413 52 (set (reg:SI 0 ax [orig:173 _87 ] [173])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [480])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":186 86 {*movsi_internal}
     (nil))
(insn 413 412 414 52 (set (reg:DI 0 ax [orig:174 _88 ] [174])
        (sign_extend:DI (reg:SI 0 ax [orig:173 _87 ] [173]))) "E2OUT.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 414 413 415 52 (parallel [
            (set (reg:DI 0 ax [orig:175 _89 ] [175])
                (plus:DI (reg:DI 0 ax [orig:174 _88 ] [174])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":186 222 {*adddi_1}
     (nil))
(insn 415 414 416 52 (parallel [
            (set (reg:DI 0 ax [481])
                (plus:DI (reg:DI 0 ax [orig:175 _89 ] [175])
                    (const_int 804 [0x324])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":186 222 {*adddi_1}
     (nil))
(insn 416 415 417 52 (set (reg:SI 0 ax [orig:176 _90 ] [176])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [481])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismstg S4 A32])) "E2OUT.f":186 86 {*movsi_internal}
     (nil))
(insn 417 416 418 52 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:176 _90 ] [176])) "E2OUT.f":186 86 {*movsi_internal}
     (nil))
(insn 418 417 419 52 (set (reg:SI 0 ax [orig:177 ismth.22_91 ] [177])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":187 86 {*movsi_internal}
     (nil))
(insn 419 418 420 52 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:177 ismth.22_91 ] [177])
            (const_int 0 [0]))) "E2OUT.f":187 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 420 419 421 52 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 429)
            (pc))) "E2OUT.f":187 682 {*jcc}
     (nil)
 -> 429)
;;  succ:       53 (FALLTHRU)
;;              54
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 53, loop depth 0, maybe hot
;;  prev block 52, next block 54, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 421 420 422 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 422 421 1523 53 (set (reg:DI 1 dx [482])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":188 85 {*movdi_internal}
     (nil))
(insn 1523 422 425 53 (set (reg:DI 0 ax [483])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":188 218 {*leadi}
     (nil))
(insn 425 1523 426 53 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f830f90abd0 masks>)
                (const_int 118524 [0x1cefc])))) "E2OUT.f":188 85 {*movdi_internal}
     (nil))
(insn 426 425 427 53 (set (reg:DI 5 di)
        (reg:DI 0 ax [483])) "E2OUT.f":188 85 {*movdi_internal}
     (nil))
(insn 427 426 428 53 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":188 88 {*movqi_internal}
     (nil))
(call_insn 428 427 429 53 (call (mem:QI (symbol_ref:DI ("p2fltvf_") [flags 0x41]  <function_decl 0x7f830f8f8a00 p2fltvf>) [0 p2fltvf S1 A8])
        (const_int 0 [0])) "E2OUT.f":188 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
;;  succ:       54 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 54, loop depth 0, maybe hot
;;  prev block 53, next block 55, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       52
;;              51
;;              53 (FALLTHRU)
;;              46
;;              47
;;              48 [always] 
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 429 428 430 54 27 (nil) [5 uses])
(note 430 429 431 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 431 430 432 54 (set (reg/f:DI 0 ax [484])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":195 85 {*movdi_internal}
     (nil))
(insn 432 431 433 54 (set (reg:SI 0 ax [orig:178 _92 ] [178])
        (mem:SI (reg/f:DI 0 ax [484]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":195 86 {*movsi_internal}
     (nil))
(insn 433 432 434 54 (set (reg:DI 0 ax [orig:179 _93 ] [179])
        (sign_extend:DI (reg:SI 0 ax [orig:178 _92 ] [178]))) "E2OUT.f":195 149 {*extendsidi2_rex64}
     (nil))
(insn 434 433 435 54 (parallel [
            (set (reg:DI 0 ax [orig:180 _94 ] [180])
                (plus:DI (reg:DI 0 ax [orig:179 _93 ] [179])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":195 222 {*adddi_1}
     (nil))
(insn 435 434 436 54 (parallel [
            (set (reg:DI 0 ax [485])
                (plus:DI (reg:DI 0 ax [orig:180 _94 ] [180])
                    (const_int 13604 [0x3524])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":195 222 {*adddi_1}
     (nil))
(insn 436 435 437 54 (set (reg:SI 0 ax [orig:181 _95 ] [181])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [485])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ifilv S4 A32])) "E2OUT.f":195 86 {*movsi_internal}
     (nil))
(insn 437 436 438 54 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:181 _95 ] [181])
            (const_int 0 [0]))) "E2OUT.f":195 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 438 437 439 54 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 877)
            (pc))) "E2OUT.f":195 682 {*jcc}
     (nil)
 -> 877)
;;  succ:       55 (FALLTHRU)
;;              111
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 55, loop depth 0, maybe hot
;;  prev block 54, next block 56, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 439 438 440 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 440 439 441 55 (set (reg:DI 0 ax [486])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":199 85 {*movdi_internal}
     (nil))
(insn 441 440 442 55 (set (reg:DI 37 r8)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":199 85 {*movdi_internal}
     (nil))
(insn 442 441 443 55 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":199 85 {*movdi_internal}
     (nil))
(insn 443 442 444 55 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f830f90d090 options>)
                (const_int 16 [0x10])))) "E2OUT.f":199 85 {*movdi_internal}
     (nil))
(insn 444 443 445 55 (set (reg:DI 4 si)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":199 85 {*movdi_internal}
     (nil))
(insn 445 444 446 55 (set (reg:DI 5 di)
        (reg:DI 0 ax [486])) "E2OUT.f":199 85 {*movdi_internal}
     (nil))
(insn 446 445 447 55 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":199 88 {*movqi_internal}
     (nil))
(call_insn 447 446 448 55 (call (mem:QI (symbol_ref:DI ("fillv_") [flags 0x41]  <function_decl 0x7f830f8f8b00 fillv>) [0 fillv S1 A8])
        (const_int 0 [0])) "E2OUT.f":199 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 448 447 449 55 (set (reg/f:DI 0 ax [487])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":203 85 {*movdi_internal}
     (nil))
(insn 449 448 450 55 (set (reg:SI 0 ax [orig:182 _96 ] [182])
        (mem:SI (reg/f:DI 0 ax [487]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":203 86 {*movsi_internal}
     (nil))
(insn 450 449 451 55 (set (reg:DI 0 ax [orig:183 _97 ] [183])
        (sign_extend:DI (reg:SI 0 ax [orig:182 _96 ] [182]))) "E2OUT.f":203 149 {*extendsidi2_rex64}
     (nil))
(insn 451 450 452 55 (parallel [
            (set (reg:DI 0 ax [orig:184 _98 ] [184])
                (plus:DI (reg:DI 0 ax [orig:183 _97 ] [183])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":203 222 {*adddi_1}
     (nil))
(insn 452 451 453 55 (parallel [
            (set (reg:DI 0 ax [488])
                (plus:DI (reg:DI 0 ax [orig:184 _98 ] [184])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":203 222 {*adddi_1}
     (nil))
(insn 453 452 454 55 (set (reg:SI 0 ax [orig:185 _99 ] [185])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [488])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":203 86 {*movsi_internal}
     (nil))
(insn 454 453 455 55 (set (reg:DI 0 ax [orig:186 _100 ] [186])
        (sign_extend:DI (reg:SI 0 ax [orig:185 _99 ] [185]))) "E2OUT.f":203 149 {*extendsidi2_rex64}
     (nil))
(insn 455 454 456 55 (parallel [
            (set (reg:DI 0 ax [orig:187 _101 ] [187])
                (plus:DI (reg:DI 0 ax [orig:186 _100 ] [186])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":203 222 {*adddi_1}
     (nil))
(insn 456 455 457 55 (parallel [
            (set (reg:DI 0 ax [489])
                (plus:DI (reg:DI 0 ax [orig:187 _101 ] [187])
                    (const_int 1004 [0x3ec])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":203 222 {*adddi_1}
     (nil))
(insn 457 456 458 55 (set (reg:SI 0 ax [orig:188 _102 ] [188])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [489])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismful S4 A32])) "E2OUT.f":203 86 {*movsi_internal}
     (nil))
(insn 458 457 459 55 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:188 _102 ] [188])) "E2OUT.f":203 86 {*movsi_internal}
     (nil))
(insn 459 458 460 55 (set (reg:SI 0 ax [orig:189 ismth.23_103 ] [189])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":204 86 {*movsi_internal}
     (nil))
(insn 460 459 461 55 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:189 ismth.23_103 ] [189])
            (const_int 0 [0]))) "E2OUT.f":204 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 461 460 462 55 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 470)
            (pc))) "E2OUT.f":204 682 {*jcc}
     (nil)
 -> 470)
;;  succ:       56 (FALLTHRU)
;;              57
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 56, loop depth 0, maybe hot
;;  prev block 55, next block 57, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 462 461 1522 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 1522 462 464 56 (set (reg:DI 0 ax [490])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":204 218 {*leadi}
     (nil))
(insn 464 1522 465 56 (set (reg:DI 2 cx)
        (reg:DI 0 ax [490])) "E2OUT.f":204 85 {*movdi_internal}
     (nil))
(insn 465 464 466 56 (set (reg:DI 1 dx)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":204 85 {*movdi_internal}
     (nil))
(insn 466 465 467 56 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":204 85 {*movdi_internal}
     (nil))
(insn 467 466 468 56 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":204 85 {*movdi_internal}
     (nil))
(insn 468 467 469 56 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":204 88 {*movqi_internal}
     (nil))
(call_insn 469 468 470 56 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":204 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       57 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 57, loop depth 0, maybe hot
;;  prev block 56, next block 58, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       55
;;              56 (FALLTHRU)
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 470 469 471 57 30 (nil) [1 uses])
(note 471 470 472 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 472 471 473 57 (set (reg:SI 0 ax [orig:190 _104 ] [190])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 473 472 474 57 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:190 _104 ] [190])
            (const_int 89 [0x59]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 474 473 475 57 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 503)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 503)
;;  succ:       65
;;              58 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 58, loop depth 0, maybe hot
;;  prev block 57, next block 59, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       57 (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 475 474 476 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 477 58 (set (reg:SI 0 ax [orig:191 _105 ] [191])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 477 476 478 58 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:191 _105 ] [191])
            (const_int 97 [0x61]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 478 477 479 58 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 684)
;;  succ:       59 (FALLTHRU)
;;              86
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 59, loop depth 0, maybe hot
;;  prev block 58, next block 60, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       58 (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 479 478 480 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 480 479 481 59 (set (reg:SI 0 ax [orig:192 _106 ] [192])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 481 480 482 59 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:192 _106 ] [192])
            (const_int 99 [0x63]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 482 481 483 59 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 684)
;;  succ:       60 (FALLTHRU)
;;              86
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 60, loop depth 0, maybe hot
;;  prev block 59, next block 61, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       59 (FALLTHRU)
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 483 482 484 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 484 483 485 60 (set (reg:SI 0 ax [orig:193 _107 ] [193])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 485 484 486 60 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:193 _107 ] [193])
            (const_int 190 [0xbe]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 486 485 487 60 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 684)
;;  succ:       61 (FALLTHRU)
;;              86
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 61, loop depth 0, maybe hot
;;  prev block 60, next block 62, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 487 486 488 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 488 487 489 61 (set (reg:SI 0 ax [orig:194 _108 ] [194])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 489 488 490 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:194 _108 ] [194])
            (const_int 192 [0xc0]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 490 489 491 61 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 684)
;;  succ:       62 (FALLTHRU)
;;              86
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 62, loop depth 0, maybe hot
;;  prev block 61, next block 63, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 491 490 492 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 62 (set (reg:SI 0 ax [orig:195 _109 ] [195])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 493 492 494 62 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:195 _109 ] [195])
            (const_int 194 [0xc2]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 494 493 495 62 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 684)
;;  succ:       63 (FALLTHRU)
;;              86
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 63, loop depth 0, maybe hot
;;  prev block 62, next block 64, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       62 (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 495 494 496 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 496 495 497 63 (set (reg:SI 0 ax [orig:196 _110 ] [196])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 497 496 498 63 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:196 _110 ] [196])
            (const_int 196 [0xc4]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 498 497 499 63 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 684)
;;  succ:       64 (FALLTHRU)
;;              86
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 64, loop depth 0, maybe hot
;;  prev block 63, next block 65, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 499 498 500 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 500 499 501 64 (set (reg:SI 0 ax [orig:197 _111 ] [197])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 501 500 502 64 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:197 _111 ] [197])
            (const_int 255 [0xff]))) "E2OUT.f":207 11 {*cmpsi_1}
     (nil))
(jump_insn 502 501 503 64 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 684)
            (pc))) "E2OUT.f":207 682 {*jcc}
     (nil)
 -> 684)
;;  succ:       65 (FALLTHRU)
;;              86
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 65, loop depth 0, maybe hot
;;  prev block 64, next block 66, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       57
;;              64 (FALLTHRU)
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 503 502 504 65 31 (nil) [1 uses])
(note 504 503 505 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 505 504 506 65 (set (reg/f:DI 0 ax [491])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":214 85 {*movdi_internal}
     (nil))
(insn 506 505 507 65 (set (reg:SI 0 ax [orig:198 _112 ] [198])
        (mem:SI (reg/f:DI 0 ax [491]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":214 86 {*movsi_internal}
     (nil))
(insn 507 506 508 65 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:198 _112 ] [198])
            (const_int 50 [0x32]))) "E2OUT.f":214 11 {*cmpsi_1}
     (nil))
(jump_insn 508 507 509 65 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 520)
            (pc))) "E2OUT.f":214 682 {*jcc}
     (nil)
 -> 520)
;;  succ:       66 (FALLTHRU)
;;              67
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 66, loop depth 0, maybe hot
;;  prev block 65, next block 67, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       65 (FALLTHRU)
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 509 508 510 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 510 509 511 66 (set (reg:DI 1 dx [492])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":215 85 {*movdi_internal}
     (nil))
(insn 511 510 512 66 (set (reg:DI 0 ax [493])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":215 85 {*movdi_internal}
     (nil))
(insn 512 511 513 66 (set (reg:DI 2 cx)
        (reg:DI 1 dx [492])) "E2OUT.f":215 85 {*movdi_internal}
     (nil))
(insn 513 512 514 66 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":215 85 {*movdi_internal}
     (nil))
(insn 514 513 515 66 (set (reg:DI 4 si)
        (reg:DI 0 ax [493])) "E2OUT.f":215 85 {*movdi_internal}
     (nil))
(insn 515 514 516 66 (set (reg:DI 5 di)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":215 85 {*movdi_internal}
     (nil))
(insn 516 515 517 66 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":215 88 {*movqi_internal}
     (nil))
(call_insn 517 516 1399 66 (call (mem:QI (symbol_ref:DI ("out_masks_") [flags 0x41]  <function_decl 0x7f830f8f8d00 out_masks>) [0 out_masks S1 A8])
        (const_int 0 [0])) "E2OUT.f":215 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(jump_insn 1399 517 1400 66 (set (pc)
        (label_ref 530)) 683 {jump}
     (nil)
 -> 530)
;;  succ:       68 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1400 1399 520)
;; basic block 67, loop depth 0, maybe hot
;;  prev block 66, next block 68, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       65
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 520 1400 521 67 33 (nil) [1 uses])
(note 521 520 522 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 522 521 523 67 (set (reg:DI 1 dx [494])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":223 85 {*movdi_internal}
     (nil))
(insn 523 522 524 67 (set (reg:DI 0 ax [495])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":223 85 {*movdi_internal}
     (nil))
(insn 524 523 525 67 (set (reg:DI 2 cx)
        (reg:DI 1 dx [494])) "E2OUT.f":223 85 {*movdi_internal}
     (nil))
(insn 525 524 526 67 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":223 85 {*movdi_internal}
     (nil))
(insn 526 525 527 67 (set (reg:DI 4 si)
        (reg:DI 0 ax [495])) "E2OUT.f":223 85 {*movdi_internal}
     (nil))
(insn 527 526 528 67 (set (reg:DI 5 di)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":223 85 {*movdi_internal}
     (nil))
(insn 528 527 529 67 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":223 88 {*movqi_internal}
     (nil))
(call_insn 529 528 530 67 (call (mem:QI (symbol_ref:DI ("interp3_") [flags 0x41]  <function_decl 0x7f830f8f8e00 interp3>) [0 interp3 S1 A8])
        (const_int 0 [0])) "E2OUT.f":223 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       68 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 68, loop depth 0, maybe hot
;;  prev block 67, next block 69, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;;              66 [always] 
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 530 529 531 68 34 (nil) [1 uses])
(note 531 530 532 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 532 531 533 68 (set (reg/f:DI 0 ax [496])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 533 532 534 68 (set (reg:SI 0 ax [orig:199 _113 ] [199])
        (mem:SI (reg/f:DI 0 ax [496]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 534 533 535 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:199 _113 ] [199])
            (const_int 56 [0x38]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 535 534 536 68 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       78
;;              69 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 69, loop depth 0, maybe hot
;;  prev block 68, next block 70, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 536 535 537 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 537 536 538 69 (set (reg/f:DI 0 ax [497])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 538 537 539 69 (set (reg:SI 0 ax [orig:200 _114 ] [200])
        (mem:SI (reg/f:DI 0 ax [497]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 539 538 540 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:200 _114 ] [200])
            (const_int 57 [0x39]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 540 539 541 69 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       78
;;              70 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 70, loop depth 0, maybe hot
;;  prev block 69, next block 71, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 541 540 542 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 542 541 543 70 (set (reg/f:DI 0 ax [498])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 543 542 544 70 (set (reg:SI 0 ax [orig:201 _115 ] [201])
        (mem:SI (reg/f:DI 0 ax [498]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 544 543 545 70 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:201 _115 ] [201])
            (const_int 60 [0x3c]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 545 544 546 70 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       78
;;              71 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 71, loop depth 0, maybe hot
;;  prev block 70, next block 72, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 546 545 547 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 547 546 548 71 (set (reg/f:DI 0 ax [499])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 548 547 549 71 (set (reg:SI 0 ax [orig:202 _116 ] [202])
        (mem:SI (reg/f:DI 0 ax [499]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 549 548 550 71 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:202 _116 ] [202])
            (const_int 61 [0x3d]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 550 549 551 71 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       78
;;              72 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 72, loop depth 0, maybe hot
;;  prev block 71, next block 73, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       71 (FALLTHRU)
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 551 550 552 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 552 551 553 72 (set (reg/f:DI 0 ax [500])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 553 552 554 72 (set (reg:SI 0 ax [orig:203 _117 ] [203])
        (mem:SI (reg/f:DI 0 ax [500]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 554 553 555 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:203 _117 ] [203])
            (const_int 64 [0x40]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 555 554 556 72 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       78
;;              73 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 73, loop depth 0, maybe hot
;;  prev block 72, next block 74, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 556 555 557 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 557 556 558 73 (set (reg/f:DI 0 ax [501])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 558 557 559 73 (set (reg:SI 0 ax [orig:204 _118 ] [204])
        (mem:SI (reg/f:DI 0 ax [501]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 559 558 560 73 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:204 _118 ] [204])
            (const_int 65 [0x41]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 560 559 561 73 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       78
;;              74 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 74, loop depth 0, maybe hot
;;  prev block 73, next block 75, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 561 560 562 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 562 561 563 74 (set (reg/f:DI 0 ax [502])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 563 562 564 74 (set (reg:SI 0 ax [orig:205 _119 ] [205])
        (mem:SI (reg/f:DI 0 ax [502]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 564 563 565 74 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:205 _119 ] [205])
            (const_int 73 [0x49]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 565 564 566 74 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       78
;;              75 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 75, loop depth 0, maybe hot
;;  prev block 74, next block 76, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       74 (FALLTHRU)
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 566 565 567 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 567 566 568 75 (set (reg/f:DI 0 ax [503])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 568 567 569 75 (set (reg:SI 0 ax [orig:206 _120 ] [206])
        (mem:SI (reg/f:DI 0 ax [503]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 569 568 570 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:206 _120 ] [206])
            (const_int 74 [0x4a]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 570 569 571 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       78
;;              76 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 76, loop depth 0, maybe hot
;;  prev block 75, next block 77, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 571 570 572 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 572 571 573 76 (set (reg/f:DI 0 ax [504])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 573 572 574 76 (set (reg:SI 0 ax [orig:207 _121 ] [207])
        (mem:SI (reg/f:DI 0 ax [504]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 574 573 575 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:207 _121 ] [207])
            (const_int 95 [0x5f]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 575 574 576 76 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 581)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 581)
;;  succ:       78
;;              77 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 77, loop depth 0, maybe hot
;;  prev block 76, next block 78, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 576 575 577 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 577 576 578 77 (set (reg/f:DI 0 ax [505])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":231 85 {*movdi_internal}
     (nil))
(insn 578 577 579 77 (set (reg:SI 0 ax [orig:208 _122 ] [208])
        (mem:SI (reg/f:DI 0 ax [505]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":231 86 {*movsi_internal}
     (nil))
(insn 579 578 580 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:208 _122 ] [208])
            (const_int 96 [0x60]))) "E2OUT.f":231 11 {*cmpsi_1}
     (nil))
(jump_insn 580 579 581 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 651)
            (pc))) "E2OUT.f":231 682 {*jcc}
     (nil)
 -> 651)
;;  succ:       78 (FALLTHRU)
;;              82
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 78, loop depth 0, maybe hot
;;  prev block 77, next block 79, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       68
;;              69
;;              70
;;              71
;;              72
;;              73
;;              74
;;              75
;;              76
;;              77 (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 581 580 582 78 35 (nil) [9 uses])
(note 582 581 583 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 583 582 584 78 (set (reg:DI 0 ax [506])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":232 85 {*movdi_internal}
     (nil))
(insn 584 583 585 78 (set (reg:DI 37 r8)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":232 85 {*movdi_internal}
     (nil))
(insn 585 584 586 78 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":232 85 {*movdi_internal}
     (nil))
(insn 586 585 587 78 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f830f90d090 options>)
                (const_int 16 [0x10])))) "E2OUT.f":232 85 {*movdi_internal}
     (nil))
(insn 587 586 588 78 (set (reg:DI 4 si)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":232 85 {*movdi_internal}
     (nil))
(insn 588 587 589 78 (set (reg:DI 5 di)
        (reg:DI 0 ax [506])) "E2OUT.f":232 85 {*movdi_internal}
     (nil))
(insn 589 588 590 78 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":232 88 {*movqi_internal}
     (nil))
(call_insn 590 589 591 78 (call (mem:QI (symbol_ref:DI ("fillv_") [flags 0x41]  <function_decl 0x7f830f8f8b00 fillv>) [0 fillv S1 A8])
        (const_int 0 [0])) "E2OUT.f":232 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 591 590 592 78 (set (reg/f:DI 0 ax [507])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":233 85 {*movdi_internal}
     (nil))
(insn 592 591 593 78 (set (reg:SI 0 ax [orig:209 _123 ] [209])
        (mem:SI (reg/f:DI 0 ax [507]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":233 86 {*movsi_internal}
     (nil))
(insn 593 592 594 78 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:209 _123 ] [209])
            (const_int 0 [0]))) "E2OUT.f":233 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 594 593 595 78 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 618)
            (pc))) "E2OUT.f":233 682 {*jcc}
     (nil)
 -> 618)
;;  succ:       79 (FALLTHRU)
;;              81
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 79, loop depth 0, maybe hot
;;  prev block 78, next block 80, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 595 594 596 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 596 595 597 79 (set (reg/f:DI 0 ax [508])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":234 85 {*movdi_internal}
     (nil))
(insn 597 596 598 79 (set (reg:SI 0 ax [orig:210 _124 ] [210])
        (mem:SI (reg/f:DI 0 ax [508]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":234 86 {*movsi_internal}
     (nil))
(insn 598 597 599 79 (set (reg:DI 0 ax [orig:211 _125 ] [211])
        (sign_extend:DI (reg:SI 0 ax [orig:210 _124 ] [210]))) "E2OUT.f":234 149 {*extendsidi2_rex64}
     (nil))
(insn 599 598 600 79 (parallel [
            (set (reg:DI 0 ax [orig:212 _126 ] [212])
                (plus:DI (reg:DI 0 ax [orig:211 _125 ] [211])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":234 222 {*adddi_1}
     (nil))
(insn 600 599 601 79 (parallel [
            (set (reg:DI 0 ax [509])
                (plus:DI (reg:DI 0 ax [orig:212 _126 ] [212])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":234 222 {*adddi_1}
     (nil))
(insn 601 600 602 79 (set (reg:SI 0 ax [orig:213 _127 ] [213])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [509])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":234 86 {*movsi_internal}
     (nil))
(insn 602 601 603 79 (set (reg:DI 0 ax [orig:214 _128 ] [214])
        (sign_extend:DI (reg:SI 0 ax [orig:213 _127 ] [213]))) "E2OUT.f":234 149 {*extendsidi2_rex64}
     (nil))
(insn 603 602 604 79 (parallel [
            (set (reg:DI 0 ax [orig:215 _129 ] [215])
                (plus:DI (reg:DI 0 ax [orig:214 _128 ] [214])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":234 222 {*adddi_1}
     (nil))
(insn 604 603 605 79 (parallel [
            (set (reg:DI 0 ax [510])
                (plus:DI (reg:DI 0 ax [orig:215 _129 ] [215])
                    (const_int 1004 [0x3ec])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":234 222 {*adddi_1}
     (nil))
(insn 605 604 606 79 (set (reg:SI 0 ax [orig:216 _130 ] [216])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [510])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismful S4 A32])) "E2OUT.f":234 86 {*movsi_internal}
     (nil))
(insn 606 605 607 79 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:216 _130 ] [216])) "E2OUT.f":234 86 {*movsi_internal}
     (nil))
(insn 607 606 608 79 (set (reg:SI 0 ax [orig:217 ismth.24_131 ] [217])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":235 86 {*movsi_internal}
     (nil))
(insn 608 607 609 79 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:217 ismth.24_131 ] [217])
            (const_int 0 [0]))) "E2OUT.f":235 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 609 608 610 79 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 618)
            (pc))) "E2OUT.f":235 682 {*jcc}
     (nil)
 -> 618)
;;  succ:       80 (FALLTHRU)
;;              81
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 80, loop depth 0, maybe hot
;;  prev block 79, next block 81, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       79 (FALLTHRU)
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 610 609 1521 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1521 610 612 80 (set (reg:DI 0 ax [511])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":235 218 {*leadi}
     (nil))
(insn 612 1521 613 80 (set (reg:DI 2 cx)
        (reg:DI 0 ax [511])) "E2OUT.f":235 85 {*movdi_internal}
     (nil))
(insn 613 612 614 80 (set (reg:DI 1 dx)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":235 85 {*movdi_internal}
     (nil))
(insn 614 613 615 80 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":235 85 {*movdi_internal}
     (nil))
(insn 615 614 616 80 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":235 85 {*movdi_internal}
     (nil))
(insn 616 615 617 80 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":235 88 {*movqi_internal}
     (nil))
(call_insn 617 616 618 80 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":235 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       81 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 81, loop depth 0, maybe hot
;;  prev block 80, next block 82, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       78
;;              80 (FALLTHRU)
;;              79
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 618 617 619 81 37 (nil) [2 uses])
(note 619 618 620 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 620 619 621 81 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [2  S8 A64])
        (const_int 6 [0x6])) "E2OUT.f":238 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 621 620 622 81 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (const:DI (plus:DI (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)
                (const_int 44 [0x2c])))) "E2OUT.f":238 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 622 621 623 81 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [16  S8 A64])
        (const:DI (plus:DI (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)
                (const_int 40 [0x28])))) "E2OUT.f":238 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 623 622 624 81 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (const:DI (plus:DI (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)
                (const_int 4 [0x4])))) "E2OUT.f":238 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 624 623 1500 81 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)) "E2OUT.f":238 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 1500 624 625 81 (set (reg:DI 0 ax [653])
        (const:DI (plus:DI (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f830f901ea0 llgrds>)
                (const_int 193183248 [0xb83be10])))) "E2OUT.f":238 85 {*movdi_internal}
     (nil))
(insn 625 1500 626 81 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [653])) "E2OUT.f":238 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 626 625 627 81 (set (reg:DI 38 r9)
        (const:DI (plus:DI (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f830f901ea0 llgrds>)
                (const_int 192947196 [0xb8023fc])))) "E2OUT.f":238 85 {*movdi_internal}
     (nil))
(insn 627 626 628 81 (set (reg:DI 37 r8)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":238 85 {*movdi_internal}
     (nil))
(insn 628 627 629 81 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":238 85 {*movdi_internal}
     (nil))
(insn 629 628 630 81 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f830f901ea0 llgrds>)
                (const_int 192711144 [0xb7c89e8])))) "E2OUT.f":238 85 {*movdi_internal}
     (nil))
(insn 630 629 631 81 (set (reg:DI 4 si)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":238 85 {*movdi_internal}
     (nil))
(insn 631 630 632 81 (set (reg:DI 5 di)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":238 85 {*movdi_internal}
     (nil))
(insn 632 631 633 81 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":238 88 {*movqi_internal}
     (nil))
(call_insn 633 632 634 81 (call (mem:QI (symbol_ref:DI ("euvguv_") [flags 0x41]  <function_decl 0x7f830f927000 euvguv>) [0 euvguv S1 A8])
        (const_int 48 [0x30])) "E2OUT.f":238 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 634 633 635 81 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":238 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 635 634 636 81 (set (reg:DI 1 dx [512])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":240 85 {*movdi_internal}
     (nil))
(insn 636 635 637 81 (set (reg:DI 0 ax [513])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":240 85 {*movdi_internal}
     (nil))
(insn 637 636 638 81 (set (reg:DI 2 cx)
        (reg:DI 1 dx [512])) "E2OUT.f":240 85 {*movdi_internal}
     (nil))
(insn 638 637 639 81 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":240 85 {*movdi_internal}
     (nil))
(insn 639 638 640 81 (set (reg:DI 4 si)
        (reg:DI 0 ax [513])) "E2OUT.f":240 85 {*movdi_internal}
     (nil))
(insn 640 639 641 81 (set (reg:DI 5 di)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":240 85 {*movdi_internal}
     (nil))
(insn 641 640 642 81 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":240 88 {*movqi_internal}
     (nil))
(call_insn 642 641 643 81 (call (mem:QI (symbol_ref:DI ("interp3_") [flags 0x41]  <function_decl 0x7f830f8f8e00 interp3>) [0 interp3 S1 A8])
        (const_int 0 [0])) "E2OUT.f":240 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 643 642 644 81 (set (reg:DI 1 dx [514])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":241 85 {*movdi_internal}
     (nil))
(insn 644 643 645 81 (set (reg:DI 0 ax [515])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])) "E2OUT.f":241 85 {*movdi_internal}
     (nil))
(insn 645 644 646 81 (set (reg:DI 2 cx)
        (reg:DI 1 dx [514])) "E2OUT.f":241 85 {*movdi_internal}
     (nil))
(insn 646 645 647 81 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":241 85 {*movdi_internal}
     (nil))
(insn 647 646 648 81 (set (reg:DI 4 si)
        (reg:DI 0 ax [515])) "E2OUT.f":241 85 {*movdi_internal}
     (nil))
(insn 648 647 649 81 (set (reg:DI 5 di)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":241 85 {*movdi_internal}
     (nil))
(insn 649 648 650 81 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":241 88 {*movqi_internal}
     (nil))
(call_insn 650 649 651 81 (call (mem:QI (symbol_ref:DI ("interp3_") [flags 0x41]  <function_decl 0x7f830f8f8e00 interp3>) [0 interp3 S1 A8])
        (const_int 0 [0])) "E2OUT.f":241 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       82 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 82, loop depth 0, maybe hot
;;  prev block 81, next block 83, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       77
;;              81 (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 651 650 652 82 36 (nil) [1 uses])
(note 652 651 653 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 653 652 654 82 (set (reg/f:DI 0 ax [516])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":247 85 {*movdi_internal}
     (nil))
(insn 654 653 655 82 (set (reg:SI 0 ax [orig:218 _132 ] [218])
        (mem:SI (reg/f:DI 0 ax [516]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":247 86 {*movsi_internal}
     (nil))
(insn 655 654 656 82 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:218 _132 ] [218])
            (const_int 33 [0x21]))) "E2OUT.f":247 11 {*cmpsi_1}
     (nil))
(jump_insn 656 655 657 82 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 667)
            (pc))) "E2OUT.f":247 682 {*jcc}
     (nil)
 -> 667)
;;  succ:       85
;;              83 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 83, loop depth 0, maybe hot
;;  prev block 82, next block 84, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       82 (FALLTHRU)
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 657 656 658 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 658 657 659 83 (set (reg/f:DI 0 ax [517])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":247 85 {*movdi_internal}
     (nil))
(insn 659 658 660 83 (set (reg:SI 0 ax [orig:219 _133 ] [219])
        (mem:SI (reg/f:DI 0 ax [517]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":247 86 {*movsi_internal}
     (nil))
(insn 660 659 661 83 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:219 _133 ] [219])
            (const_int 34 [0x22]))) "E2OUT.f":247 11 {*cmpsi_1}
     (nil))
(jump_insn 661 660 662 83 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 667)
            (pc))) "E2OUT.f":247 682 {*jcc}
     (nil)
 -> 667)
;;  succ:       85
;;              84 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 84, loop depth 0, maybe hot
;;  prev block 83, next block 85, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       83 (FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 662 661 663 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 663 662 664 84 (set (reg/f:DI 0 ax [518])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":247 85 {*movdi_internal}
     (nil))
(insn 664 663 665 84 (set (reg:SI 0 ax [orig:220 _134 ] [220])
        (mem:SI (reg/f:DI 0 ax [518]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":247 86 {*movsi_internal}
     (nil))
(insn 665 664 666 84 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:220 _134 ] [220])
            (const_int 87 [0x57]))) "E2OUT.f":247 11 {*cmpsi_1}
     (nil))
(jump_insn 666 665 667 84 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1447)
            (pc))) "E2OUT.f":247 682 {*jcc}
     (nil)
 -> 1447)
;;  succ:       85 (FALLTHRU)
;;              158
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 85, loop depth 0, maybe hot
;;  prev block 84, next block 86, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       82
;;              83
;;              84 (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 667 666 668 85 38 (nil) [2 uses])
(note 668 667 669 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 669 668 670 85 (set (reg:DI 1 dx [519])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 670 669 671 85 (set (reg:DI 4 si [520])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 671 670 672 85 (set (reg:DI 0 ax [521])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 672 671 673 85 (set (reg:DI 38 r9)
        (const:DI (plus:DI (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f830f90d090 options>)
                (const_int 12 [0xc])))) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 673 672 674 85 (set (reg:DI 37 r8)
        (const:DI (plus:DI (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f830f90d090 options>)
                (const_int 8 [0x8])))) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 674 673 675 85 (set (reg:DI 2 cx)
        (reg:DI 1 dx [519])) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 675 674 677 85 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 677 675 678 85 (set (reg:DI 5 di)
        (reg:DI 0 ax [521])) "E2OUT.f":249 85 {*movdi_internal}
     (nil))
(insn 678 677 679 85 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":249 88 {*movqi_internal}
     (nil))
(call_insn 679 678 1401 85 (call (mem:QI (symbol_ref:DI ("cetlih4_") [flags 0x41]  <function_decl 0x7f830f927100 cetlih4>) [0 cetlih4 S1 A8])
        (const_int 0 [0])) "E2OUT.f":249 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(jump_insn 1401 679 1402 85 (set (pc)
        (label_ref:DI 1447)) "E2OUT.f":249 683 {jump}
     (nil)
 -> 1447)
;;  succ:       158 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1402 1401 684)
;; basic block 86, loop depth 0, maybe hot
;;  prev block 85, next block 87, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       58
;;              59
;;              60
;;              61
;;              62
;;              63
;;              64
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 684 1402 685 86 32 (nil) [7 uses])
(note 685 684 686 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 686 685 736 86 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":253 86 {*movsi_internal}
     (nil))
;;  succ:       87 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 87, loop depth 0, maybe hot
;;  prev block 86, next block 88, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       86 (FALLTHRU)
;;              91 [always] 
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 736 686 687 87 44 (nil) [1 uses])
(note 687 736 688 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 688 687 689 87 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "E2OUT.f":253 11 {*cmpsi_1}
     (nil))
(insn 689 688 690 87 (set (reg:QI 0 ax [522])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":253 678 {*setcc_qi}
     (nil))
(insn 690 689 691 87 (set (reg:SI 0 ax [orig:402 _407 ] [402])
        (zero_extend:SI (reg:QI 0 ax [522]))) "E2OUT.f":253 140 {*zero_extendqisi2}
     (nil))
(insn 691 690 692 87 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:402 _407 ] [402])
            (const_int 0 [0]))) "E2OUT.f":253 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 692 691 693 87 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1450)
            (pc))) "E2OUT.f":253 682 {*jcc}
     (nil)
 -> 1450)
;;  succ:       92
;;              88 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 88, loop depth 0, maybe hot
;;  prev block 87, next block 89, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       87 (FALLTHRU)
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 693 692 694 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 694 693 730 88 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":254 86 {*movsi_internal}
     (nil))
;;  succ:       89 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 89, loop depth 0, maybe hot
;;  prev block 88, next block 90, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       88 (FALLTHRU)
;;              90 [always] 
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 730 694 695 89 43 (nil) [1 uses])
(note 695 730 696 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 696 695 697 89 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 237 [0xed]))) "E2OUT.f":254 11 {*cmpsi_1}
     (nil))
(insn 697 696 698 89 (set (reg:QI 0 ax [523])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":254 678 {*setcc_qi}
     (nil))
(insn 698 697 699 89 (set (reg:SI 0 ax [orig:403 _409 ] [403])
        (zero_extend:SI (reg:QI 0 ax [523]))) "E2OUT.f":254 140 {*zero_extendqisi2}
     (nil))
(insn 699 698 700 89 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:403 _409 ] [403])
            (const_int 0 [0]))) "E2OUT.f":254 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 700 699 701 89 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1453)
            (pc))) "E2OUT.f":254 682 {*jcc}
     (nil)
 -> 1453)
;;  succ:       91
;;              90 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 90, loop depth 0, maybe hot
;;  prev block 89, next block 91, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       89 (FALLTHRU)
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 701 700 702 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 702 701 703 90 (set (reg:SI 0 ax [524])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":255 86 {*movsi_internal}
     (nil))
(insn 703 702 704 90 (set (reg:DI 0 ax [orig:221 _135 ] [221])
        (sign_extend:DI (reg:SI 0 ax [524]))) "E2OUT.f":255 149 {*extendsidi2_rex64}
     (nil))
(insn 704 703 705 90 (parallel [
            (set (reg:DI 1 dx [orig:222 _136 ] [222])
                (mult:DI (reg:DI 0 ax [orig:221 _135 ] [221])
                    (const_int 237 [0xed])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":255 349 {*muldi3_1}
     (nil))
(insn 705 704 706 90 (set (reg:SI 0 ax [525])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":255 86 {*movsi_internal}
     (nil))
(insn 706 705 707 90 (set (reg:DI 0 ax [orig:223 _137 ] [223])
        (sign_extend:DI (reg:SI 0 ax [525]))) "E2OUT.f":255 149 {*extendsidi2_rex64}
     (nil))
(insn 707 706 1518 90 (parallel [
            (set (reg:DI 0 ax [orig:224 _138 ] [224])
                (plus:DI (reg:DI 0 ax [orig:223 _137 ] [223])
                    (reg:DI 1 dx [orig:222 _136 ] [222])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":255 222 {*adddi_1}
     (nil))
(insn 1518 707 709 90 (set (reg:DI 2 cx [orig:225 _139 ] [225])
        (plus:DI (reg:DI 0 ax [orig:224 _138 ] [224])
            (const_int -238 [0xffffffffffffff12]))) "E2OUT.f":255 218 {*leadi}
     (nil))
(insn 709 1518 710 90 (set (reg:SI 0 ax [526])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":255 86 {*movsi_internal}
     (nil))
(insn 710 709 711 90 (set (reg:DI 0 ax [orig:226 _140 ] [226])
        (sign_extend:DI (reg:SI 0 ax [526]))) "E2OUT.f":255 149 {*extendsidi2_rex64}
     (nil))
(insn 711 710 1519 90 (parallel [
            (set (reg:DI 0 ax [orig:227 _141 ] [227])
                (mult:DI (reg:DI 0 ax [orig:226 _140 ] [226])
                    (reg:DI 3 bx [orig:381 stride.2_350 ] [381])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":255 349 {*muldi3_1}
     (nil))
(insn 1519 711 713 90 (set (reg:DI 1 dx [orig:228 _142 ] [228])
        (plus:DI (reg:DI 42 r13 [orig:387 offset.3_358 ] [387])
            (reg:DI 0 ax [orig:227 _141 ] [227]))) "E2OUT.f":255 218 {*leadi}
     (nil))
(insn 713 1519 714 90 (set (reg:SI 0 ax [527])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":255 86 {*movsi_internal}
     (nil))
(insn 714 713 715 90 (set (reg:DI 0 ax [orig:229 _143 ] [229])
        (sign_extend:DI (reg:SI 0 ax [527]))) "E2OUT.f":255 149 {*extendsidi2_rex64}
     (nil))
(insn 715 714 716 90 (parallel [
            (set (reg:DI 1 dx [orig:230 _144 ] [230])
                (plus:DI (reg:DI 1 dx [orig:228 _142 ] [228])
                    (reg:DI 0 ax [orig:229 _143 ] [229])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":255 222 {*adddi_1}
     (nil))
(insn 716 715 717 90 (set (reg/f:DI 0 ax [528])
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":255 85 {*movdi_internal}
     (nil))
(insn 717 716 718 90 (set (reg:SF 21 xmm0 [orig:231 _145 ] [231])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:225 _139 ] [225])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [528])) [6 hful S4 A32])) "E2OUT.f":255 131 {*movsf_internal}
     (nil))
(insn 718 717 719 90 (set (reg/f:DI 0 ax [529])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":255 85 {*movdi_internal}
     (nil))
(insn 719 718 720 90 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:230 _144 ] [230])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [529])) [6 *grid1_379(D) S4 A32])
        (reg:SF 21 xmm0 [orig:231 _145 ] [231])) "E2OUT.f":255 131 {*movsf_internal}
     (nil))
(insn 720 719 721 90 (set (reg:SI 0 ax [530])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":256 86 {*movsi_internal}
     (nil))
(insn 721 720 722 90 (set (reg:DI 0 ax [orig:232 _146 ] [232])
        (sign_extend:DI (reg:SI 0 ax [530]))) "E2OUT.f":256 149 {*extendsidi2_rex64}
     (nil))
(insn 722 721 723 90 (parallel [
            (set (reg:DI 1 dx [orig:233 _147 ] [233])
                (mult:DI (reg:DI 0 ax [orig:232 _146 ] [232])
                    (const_int 4000 [0xfa0])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":256 349 {*muldi3_1}
     (nil))
(insn 723 722 724 90 (set (reg:SI 0 ax [531])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":256 86 {*movsi_internal}
     (nil))
(insn 724 723 725 90 (set (reg:DI 0 ax [orig:234 _148 ] [234])
        (sign_extend:DI (reg:SI 0 ax [531]))) "E2OUT.f":256 149 {*extendsidi2_rex64}
     (nil))
(insn 725 724 1520 90 (parallel [
            (set (reg:DI 0 ax [orig:235 _149 ] [235])
                (plus:DI (reg:DI 0 ax [orig:234 _148 ] [234])
                    (reg:DI 1 dx [orig:233 _147 ] [233])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":256 222 {*adddi_1}
     (nil))
(insn 1520 725 727 90 (set (reg:DI 1 dx [orig:236 _150 ] [236])
        (plus:DI (reg:DI 0 ax [orig:235 _149 ] [235])
            (const_int -4001 [0xfffffffffffff05f]))) "E2OUT.f":256 218 {*leadi}
     (nil))
(insn 727 1520 728 90 (set (reg/f:DI 0 ax [532])
        (symbol_ref:DI ("bitmap_") [flags 0x202]  <var_decl 0x7f831696bab0 bitmap>)) "E2OUT.f":256 85 {*movdi_internal}
     (nil))
(insn 728 727 729 90 (set (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:236 _150 ] [236])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [532])) [1 bitmap.ibmap S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":256 86 {*movsi_internal}
     (nil))
(insn 729 728 1403 90 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":254 221 {*addsi_1}
     (nil))
(jump_insn 1403 729 1404 90 (set (pc)
        (label_ref 730)) "E2OUT.f":254 683 {jump}
     (nil)
 -> 730)
;;  succ:       89 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

(barrier 1404 1403 1453)
;; basic block 91, loop depth 0, maybe hot
;;  prev block 90, next block 92, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       89
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1453 1404 1452 91 79 (nil) [1 uses])
(note 1452 1453 1454 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 1454 1452 735 91 (const_int 0 [0]) "E2OUT.f":256 718 {nop}
     (nil))
(insn 735 1454 1405 91 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":253 221 {*addsi_1}
     (nil))
(jump_insn 1405 735 1406 91 (set (pc)
        (label_ref 736)) "E2OUT.f":253 683 {jump}
     (nil)
 -> 736)
;;  succ:       87 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

(barrier 1406 1405 1450)
;; basic block 92, loop depth 0, maybe hot
;;  prev block 91, next block 93, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       87
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1450 1406 1449 92 78 (nil) [1 uses])
(note 1449 1450 1451 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1451 1449 741 92 (const_int 0 [0]) "E2OUT.f":254 718 {nop}
     (nil))
(insn 741 1451 742 92 (set (reg/f:DI 0 ax [533])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 742 741 743 92 (set (reg:SI 0 ax [orig:237 _151 ] [237])
        (mem:SI (reg/f:DI 0 ax [533]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 743 742 744 92 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:237 _151 ] [237])
            (const_int 56 [0x38]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 744 743 745 92 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       102
;;              93 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 93, loop depth 0, maybe hot
;;  prev block 92, next block 94, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       92 (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 745 744 746 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 746 745 747 93 (set (reg/f:DI 0 ax [534])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 747 746 748 93 (set (reg:SI 0 ax [orig:238 _152 ] [238])
        (mem:SI (reg/f:DI 0 ax [534]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 748 747 749 93 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:238 _152 ] [238])
            (const_int 57 [0x39]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 749 748 750 93 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       102
;;              94 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 94, loop depth 0, maybe hot
;;  prev block 93, next block 95, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       93 (FALLTHRU)
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 750 749 751 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 751 750 752 94 (set (reg/f:DI 0 ax [535])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 752 751 753 94 (set (reg:SI 0 ax [orig:239 _153 ] [239])
        (mem:SI (reg/f:DI 0 ax [535]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 753 752 754 94 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:239 _153 ] [239])
            (const_int 60 [0x3c]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 754 753 755 94 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       102
;;              95 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 95, loop depth 0, maybe hot
;;  prev block 94, next block 96, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       94 (FALLTHRU)
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 755 754 756 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 756 755 757 95 (set (reg/f:DI 0 ax [536])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 757 756 758 95 (set (reg:SI 0 ax [orig:240 _154 ] [240])
        (mem:SI (reg/f:DI 0 ax [536]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 758 757 759 95 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:240 _154 ] [240])
            (const_int 61 [0x3d]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 759 758 760 95 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       102
;;              96 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 96, loop depth 0, maybe hot
;;  prev block 95, next block 97, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       95 (FALLTHRU)
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 760 759 761 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 761 760 762 96 (set (reg/f:DI 0 ax [537])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 762 761 763 96 (set (reg:SI 0 ax [orig:241 _155 ] [241])
        (mem:SI (reg/f:DI 0 ax [537]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 763 762 764 96 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:241 _155 ] [241])
            (const_int 64 [0x40]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 764 763 765 96 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       102
;;              97 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 97, loop depth 0, maybe hot
;;  prev block 96, next block 98, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       96 (FALLTHRU)
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 765 764 766 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 766 765 767 97 (set (reg/f:DI 0 ax [538])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 767 766 768 97 (set (reg:SI 0 ax [orig:242 _156 ] [242])
        (mem:SI (reg/f:DI 0 ax [538]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 768 767 769 97 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:242 _156 ] [242])
            (const_int 65 [0x41]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 769 768 770 97 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       102
;;              98 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 98, loop depth 0, maybe hot
;;  prev block 97, next block 99, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       97 (FALLTHRU)
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 770 769 771 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 771 770 772 98 (set (reg/f:DI 0 ax [539])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 772 771 773 98 (set (reg:SI 0 ax [orig:243 _157 ] [243])
        (mem:SI (reg/f:DI 0 ax [539]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 773 772 774 98 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:243 _157 ] [243])
            (const_int 73 [0x49]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 774 773 775 98 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       102
;;              99 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 99, loop depth 0, maybe hot
;;  prev block 98, next block 100, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       98 (FALLTHRU)
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 775 774 776 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 776 775 777 99 (set (reg/f:DI 0 ax [540])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 777 776 778 99 (set (reg:SI 0 ax [orig:244 _158 ] [244])
        (mem:SI (reg/f:DI 0 ax [540]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 778 777 779 99 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:244 _158 ] [244])
            (const_int 74 [0x4a]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 779 778 780 99 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       102
;;              100 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 100, loop depth 0, maybe hot
;;  prev block 99, next block 101, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       99 (FALLTHRU)
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 780 779 781 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 781 780 782 100 (set (reg/f:DI 0 ax [541])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 782 781 783 100 (set (reg:SI 0 ax [orig:245 _159 ] [245])
        (mem:SI (reg/f:DI 0 ax [541]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 783 782 784 100 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:245 _159 ] [245])
            (const_int 95 [0x5f]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 784 783 785 100 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 790)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       102
;;              101 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 101, loop depth 0, maybe hot
;;  prev block 100, next block 102, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       100 (FALLTHRU)
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 785 784 786 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 786 785 787 101 (set (reg/f:DI 0 ax [542])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":264 85 {*movdi_internal}
     (nil))
(insn 787 786 788 101 (set (reg:SI 0 ax [orig:246 _160 ] [246])
        (mem:SI (reg/f:DI 0 ax [542]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":264 86 {*movsi_internal}
     (nil))
(insn 788 787 789 101 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:246 _160 ] [246])
            (const_int 96 [0x60]))) "E2OUT.f":264 11 {*cmpsi_1}
     (nil))
(jump_insn 789 788 790 101 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1458)
            (pc))) "E2OUT.f":264 682 {*jcc}
     (nil)
 -> 1458)
;;  succ:       102 (FALLTHRU)
;;              159
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 102, loop depth 0, maybe hot
;;  prev block 101, next block 103, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       92
;;              93
;;              94
;;              95
;;              96
;;              97
;;              98
;;              99
;;              100
;;              101 (FALLTHRU)
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 790 789 791 102 45 (nil) [9 uses])
(note 791 790 792 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 792 791 793 102 (set (reg:DI 0 ax [543])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":265 85 {*movdi_internal}
     (nil))
(insn 793 792 794 102 (set (reg:DI 37 r8)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":265 85 {*movdi_internal}
     (nil))
(insn 794 793 795 102 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":265 85 {*movdi_internal}
     (nil))
(insn 795 794 796 102 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7f830f90d090 options>)
                (const_int 16 [0x10])))) "E2OUT.f":265 85 {*movdi_internal}
     (nil))
(insn 796 795 797 102 (set (reg:DI 4 si)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":265 85 {*movdi_internal}
     (nil))
(insn 797 796 798 102 (set (reg:DI 5 di)
        (reg:DI 0 ax [543])) "E2OUT.f":265 85 {*movdi_internal}
     (nil))
(insn 798 797 799 102 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":265 88 {*movqi_internal}
     (nil))
(call_insn 799 798 800 102 (call (mem:QI (symbol_ref:DI ("fillv_") [flags 0x41]  <function_decl 0x7f830f8f8b00 fillv>) [0 fillv S1 A8])
        (const_int 0 [0])) "E2OUT.f":265 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (nil))))))))
(insn 800 799 801 102 (set (reg/f:DI 0 ax [544])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":266 85 {*movdi_internal}
     (nil))
(insn 801 800 802 102 (set (reg:SI 0 ax [orig:247 _161 ] [247])
        (mem:SI (reg/f:DI 0 ax [544]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":266 86 {*movsi_internal}
     (nil))
(insn 802 801 803 102 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:247 _161 ] [247])
            (const_int 0 [0]))) "E2OUT.f":266 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 803 802 804 102 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 827)
            (pc))) "E2OUT.f":266 682 {*jcc}
     (nil)
 -> 827)
;;  succ:       103 (FALLTHRU)
;;              105
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 103, loop depth 0, maybe hot
;;  prev block 102, next block 104, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       102 (FALLTHRU)
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 804 803 805 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 805 804 806 103 (set (reg/f:DI 0 ax [545])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":267 85 {*movdi_internal}
     (nil))
(insn 806 805 807 103 (set (reg:SI 0 ax [orig:248 _162 ] [248])
        (mem:SI (reg/f:DI 0 ax [545]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":267 86 {*movsi_internal}
     (nil))
(insn 807 806 808 103 (set (reg:DI 0 ax [orig:249 _163 ] [249])
        (sign_extend:DI (reg:SI 0 ax [orig:248 _162 ] [248]))) "E2OUT.f":267 149 {*extendsidi2_rex64}
     (nil))
(insn 808 807 809 103 (parallel [
            (set (reg:DI 0 ax [orig:250 _164 ] [250])
                (plus:DI (reg:DI 0 ax [orig:249 _163 ] [249])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":267 222 {*adddi_1}
     (nil))
(insn 809 808 810 103 (parallel [
            (set (reg:DI 0 ax [546])
                (plus:DI (reg:DI 0 ax [orig:250 _164 ] [250])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":267 222 {*adddi_1}
     (nil))
(insn 810 809 811 103 (set (reg:SI 0 ax [orig:251 _165 ] [251])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [546])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":267 86 {*movsi_internal}
     (nil))
(insn 811 810 812 103 (set (reg:DI 0 ax [orig:252 _166 ] [252])
        (sign_extend:DI (reg:SI 0 ax [orig:251 _165 ] [251]))) "E2OUT.f":267 149 {*extendsidi2_rex64}
     (nil))
(insn 812 811 813 103 (parallel [
            (set (reg:DI 0 ax [orig:253 _167 ] [253])
                (plus:DI (reg:DI 0 ax [orig:252 _166 ] [252])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":267 222 {*adddi_1}
     (nil))
(insn 813 812 814 103 (parallel [
            (set (reg:DI 0 ax [547])
                (plus:DI (reg:DI 0 ax [orig:253 _167 ] [253])
                    (const_int 1004 [0x3ec])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":267 222 {*adddi_1}
     (nil))
(insn 814 813 815 103 (set (reg:SI 0 ax [orig:254 _168 ] [254])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [547])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismful S4 A32])) "E2OUT.f":267 86 {*movsi_internal}
     (nil))
(insn 815 814 816 103 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:254 _168 ] [254])) "E2OUT.f":267 86 {*movsi_internal}
     (nil))
(insn 816 815 817 103 (set (reg:SI 0 ax [orig:255 ismth.25_169 ] [255])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":268 86 {*movsi_internal}
     (nil))
(insn 817 816 818 103 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:255 ismth.25_169 ] [255])
            (const_int 0 [0]))) "E2OUT.f":268 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 818 817 819 103 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 827)
            (pc))) "E2OUT.f":268 682 {*jcc}
     (nil)
 -> 827)
;;  succ:       104 (FALLTHRU)
;;              105
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 104, loop depth 0, maybe hot
;;  prev block 103, next block 105, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       103 (FALLTHRU)
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 819 818 1517 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 1517 819 821 104 (set (reg:DI 0 ax [548])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":268 218 {*leadi}
     (nil))
(insn 821 1517 822 104 (set (reg:DI 2 cx)
        (reg:DI 0 ax [548])) "E2OUT.f":268 85 {*movdi_internal}
     (nil))
(insn 822 821 823 104 (set (reg:DI 1 dx)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":268 85 {*movdi_internal}
     (nil))
(insn 823 822 824 104 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":268 85 {*movdi_internal}
     (nil))
(insn 824 823 825 104 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":268 85 {*movdi_internal}
     (nil))
(insn 825 824 826 104 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":268 88 {*movqi_internal}
     (nil))
(call_insn 826 825 827 104 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":268 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       105 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 105, loop depth 0, maybe hot
;;  prev block 104, next block 106, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       102
;;              104 (FALLTHRU)
;;              103
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 827 826 828 105 46 (nil) [2 uses])
(note 828 827 829 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 829 828 870 105 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":271 86 {*movsi_internal}
     (nil))
;;  succ:       106 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 106, loop depth 0, maybe hot
;;  prev block 105, next block 107, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       105 (FALLTHRU)
;;              110 [always] 
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 870 829 830 106 49 (nil) [1 uses])
(note 830 870 831 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 831 830 832 106 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "E2OUT.f":271 11 {*cmpsi_1}
     (nil))
(insn 832 831 833 106 (set (reg:QI 0 ax [549])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":271 678 {*setcc_qi}
     (nil))
(insn 833 832 834 106 (set (reg:SI 0 ax [orig:404 _418 ] [404])
        (zero_extend:SI (reg:QI 0 ax [549]))) "E2OUT.f":271 140 {*zero_extendqisi2}
     (nil))
(insn 834 833 835 106 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:404 _418 ] [404])
            (const_int 0 [0]))) "E2OUT.f":271 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 835 834 836 106 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1458)
            (pc))) "E2OUT.f":271 682 {*jcc}
     (nil)
 -> 1458)
;;  succ:       159
;;              107 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 107, loop depth 0, maybe hot
;;  prev block 106, next block 108, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       106 (FALLTHRU)
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 836 835 837 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 837 836 864 107 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":272 86 {*movsi_internal}
     (nil))
;;  succ:       108 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 108, loop depth 0, maybe hot
;;  prev block 107, next block 109, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       107 (FALLTHRU)
;;              109 [always] 
;; bb 108 artificial_defs: { }
;; bb 108 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 864 837 838 108 48 (nil) [1 uses])
(note 838 864 839 108 [bb 108] NOTE_INSN_BASIC_BLOCK)
(insn 839 838 840 108 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 237 [0xed]))) "E2OUT.f":272 11 {*cmpsi_1}
     (nil))
(insn 840 839 841 108 (set (reg:QI 0 ax [550])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":272 678 {*setcc_qi}
     (nil))
(insn 841 840 842 108 (set (reg:SI 0 ax [orig:405 _420 ] [405])
        (zero_extend:SI (reg:QI 0 ax [550]))) "E2OUT.f":272 140 {*zero_extendqisi2}
     (nil))
(insn 842 841 843 108 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:405 _420 ] [405])
            (const_int 0 [0]))) "E2OUT.f":272 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 843 842 844 108 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1461)
            (pc))) "E2OUT.f":272 682 {*jcc}
     (nil)
 -> 1461)
;;  succ:       110
;;              109 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 109, loop depth 0, maybe hot
;;  prev block 108, next block 110, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       108 (FALLTHRU)
;; bb 109 artificial_defs: { }
;; bb 109 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 844 843 845 109 [bb 109] NOTE_INSN_BASIC_BLOCK)
(insn 845 844 846 109 (set (reg:SI 0 ax [551])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":273 86 {*movsi_internal}
     (nil))
(insn 846 845 847 109 (set (reg:DI 0 ax [orig:256 _170 ] [256])
        (sign_extend:DI (reg:SI 0 ax [551]))) "E2OUT.f":273 149 {*extendsidi2_rex64}
     (nil))
(insn 847 846 848 109 (parallel [
            (set (reg:DI 1 dx [orig:257 _171 ] [257])
                (mult:DI (reg:DI 0 ax [orig:256 _170 ] [256])
                    (const_int 237 [0xed])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":273 349 {*muldi3_1}
     (nil))
(insn 848 847 849 109 (set (reg:SI 0 ax [552])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":273 86 {*movsi_internal}
     (nil))
(insn 849 848 850 109 (set (reg:DI 0 ax [orig:258 _172 ] [258])
        (sign_extend:DI (reg:SI 0 ax [552]))) "E2OUT.f":273 149 {*extendsidi2_rex64}
     (nil))
(insn 850 849 1515 109 (parallel [
            (set (reg:DI 0 ax [orig:259 _173 ] [259])
                (plus:DI (reg:DI 0 ax [orig:258 _172 ] [258])
                    (reg:DI 1 dx [orig:257 _171 ] [257])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":273 222 {*adddi_1}
     (nil))
(insn 1515 850 852 109 (set (reg:DI 2 cx [orig:260 _174 ] [260])
        (plus:DI (reg:DI 0 ax [orig:259 _173 ] [259])
            (const_int -238 [0xffffffffffffff12]))) "E2OUT.f":273 218 {*leadi}
     (nil))
(insn 852 1515 853 109 (set (reg:SI 0 ax [553])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":273 86 {*movsi_internal}
     (nil))
(insn 853 852 854 109 (set (reg:DI 0 ax [orig:261 _175 ] [261])
        (sign_extend:DI (reg:SI 0 ax [553]))) "E2OUT.f":273 149 {*extendsidi2_rex64}
     (nil))
(insn 854 853 1516 109 (parallel [
            (set (reg:DI 0 ax [orig:262 _176 ] [262])
                (mult:DI (reg:DI 0 ax [orig:261 _175 ] [261])
                    (reg:DI 41 r12 [orig:389 stride.7_361 ] [389])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":273 349 {*muldi3_1}
     (nil))
(insn 1516 854 856 109 (set (reg:DI 1 dx [orig:263 _177 ] [263])
        (plus:DI (reg:DI 43 r14 [orig:395 offset.8_368 ] [395])
            (reg:DI 0 ax [orig:262 _176 ] [262]))) "E2OUT.f":273 218 {*leadi}
     (nil))
(insn 856 1516 857 109 (set (reg:SI 0 ax [554])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":273 86 {*movsi_internal}
     (nil))
(insn 857 856 858 109 (set (reg:DI 0 ax [orig:264 _178 ] [264])
        (sign_extend:DI (reg:SI 0 ax [554]))) "E2OUT.f":273 149 {*extendsidi2_rex64}
     (nil))
(insn 858 857 859 109 (parallel [
            (set (reg:DI 1 dx [orig:265 _179 ] [265])
                (plus:DI (reg:DI 1 dx [orig:263 _177 ] [263])
                    (reg:DI 0 ax [orig:264 _178 ] [264])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":273 222 {*adddi_1}
     (nil))
(insn 859 858 860 109 (set (reg/f:DI 0 ax [555])
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":273 85 {*movdi_internal}
     (nil))
(insn 860 859 861 109 (set (reg:SF 21 xmm0 [orig:266 _180 ] [266])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:260 _174 ] [260])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [555])) [6 vful S4 A32])) "E2OUT.f":273 131 {*movsf_internal}
     (nil))
(insn 861 860 862 109 (set (reg/f:DI 0 ax [556])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])) "E2OUT.f":273 85 {*movdi_internal}
     (nil))
(insn 862 861 863 109 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:265 _179 ] [265])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [556])) [6 *grid2_389(D) S4 A32])
        (reg:SF 21 xmm0 [orig:266 _180 ] [266])) "E2OUT.f":273 131 {*movsf_internal}
     (nil))
(insn 863 862 1407 109 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":272 221 {*addsi_1}
     (nil))
(jump_insn 1407 863 1408 109 (set (pc)
        (label_ref 864)) "E2OUT.f":272 683 {jump}
     (nil)
 -> 864)
;;  succ:       108 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

(barrier 1408 1407 1461)
;; basic block 110, loop depth 0, maybe hot
;;  prev block 109, next block 111, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       108
;; bb 110 artificial_defs: { }
;; bb 110 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1461 1408 1460 110 81 (nil) [1 uses])
(note 1460 1461 1462 110 [bb 110] NOTE_INSN_BASIC_BLOCK)
(insn 1462 1460 869 110 (const_int 0 [0]) "E2OUT.f":273 718 {nop}
     (nil))
(insn 869 1462 1409 110 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":271 221 {*addsi_1}
     (nil))
(jump_insn 1409 869 1410 110 (set (pc)
        (label_ref 870)) "E2OUT.f":271 683 {jump}
     (nil)
 -> 870)
;;  succ:       106 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

(barrier 1410 1409 877)
;; basic block 111, loop depth 0, maybe hot
;;  prev block 110, next block 112, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       54
;; bb 111 artificial_defs: { }
;; bb 111 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 877 1410 878 111 29 (nil) [1 uses])
(note 878 877 879 111 [bb 111] NOTE_INSN_BASIC_BLOCK)
(insn 879 878 880 111 (set (reg/f:DI 0 ax [557])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":283 85 {*movdi_internal}
     (nil))
(insn 880 879 881 111 (set (reg:SI 0 ax [orig:267 _181 ] [267])
        (mem:SI (reg/f:DI 0 ax [557]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":283 86 {*movsi_internal}
     (nil))
(insn 881 880 882 111 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:267 _181 ] [267])
            (const_int 53 [0x35]))) "E2OUT.f":283 11 {*cmpsi_1}
     (nil))
(jump_insn 882 881 883 111 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1127)
            (pc))) "E2OUT.f":283 682 {*jcc}
     (nil)
 -> 1127)
;;  succ:       112 (FALLTHRU)
;;              141
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 112, loop depth 0, maybe hot
;;  prev block 111, next block 113, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       111 (FALLTHRU)
;; bb 112 artificial_defs: { }
;; bb 112 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 883 882 884 112 [bb 112] NOTE_INSN_BASIC_BLOCK)
(insn 884 883 885 112 (set (reg/f:DI 0 ax [558])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":283 85 {*movdi_internal}
     (nil))
(insn 885 884 886 112 (set (reg:SI 0 ax [orig:268 _182 ] [268])
        (mem:SI (reg/f:DI 0 ax [558]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":283 86 {*movsi_internal}
     (nil))
(insn 886 885 887 112 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:268 _182 ] [268])
            (const_int 162 [0xa2]))) "E2OUT.f":283 11 {*cmpsi_1}
     (nil))
(jump_insn 887 886 888 112 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1127)
            (pc))) "E2OUT.f":283 682 {*jcc}
     (nil)
 -> 1127)
;;  succ:       113 (FALLTHRU)
;;              141
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 113, loop depth 0, maybe hot
;;  prev block 112, next block 114, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       112 (FALLTHRU)
;; bb 113 artificial_defs: { }
;; bb 113 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 888 887 889 113 [bb 113] NOTE_INSN_BASIC_BLOCK)
(insn 889 888 890 113 (set (reg:DI 0 ax [559])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":284 85 {*movdi_internal}
     (nil))
(insn 890 889 891 113 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":284 85 {*movdi_internal}
     (nil))
(insn 891 890 892 113 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":284 85 {*movdi_internal}
     (nil))
(insn 892 891 893 113 (set (reg:DI 4 si)
        (symbol_ref:DI ("uful.4078") [flags 0x202]  <var_decl 0x7f830f917870 uful>)) "E2OUT.f":284 85 {*movdi_internal}
     (nil))
(insn 893 892 894 113 (set (reg:DI 5 di)
        (reg:DI 0 ax [559])) "E2OUT.f":284 85 {*movdi_internal}
     (nil))
(insn 894 893 895 113 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":284 88 {*movqi_internal}
     (nil))
(call_insn 895 894 896 113 (call (mem:QI (symbol_ref:DI ("fillh_") [flags 0x41]  <function_decl 0x7f830f927200 fillh>) [0 fillh S1 A8])
        (const_int 0 [0])) "E2OUT.f":284 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 896 895 897 113 (set (reg:DI 0 ax [560])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":285 85 {*movdi_internal}
     (nil))
(insn 897 896 898 113 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":285 85 {*movdi_internal}
     (nil))
(insn 898 897 899 113 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":285 85 {*movdi_internal}
     (nil))
(insn 899 898 900 113 (set (reg:DI 4 si)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":285 85 {*movdi_internal}
     (nil))
(insn 900 899 901 113 (set (reg:DI 5 di)
        (reg:DI 0 ax [560])) "E2OUT.f":285 85 {*movdi_internal}
     (nil))
(insn 901 900 902 113 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":285 88 {*movqi_internal}
     (nil))
(call_insn 902 901 903 113 (call (mem:QI (symbol_ref:DI ("fillh_") [flags 0x41]  <function_decl 0x7f830f927200 fillh>) [0 fillh S1 A8])
        (const_int 0 [0])) "E2OUT.f":285 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 903 902 904 113 (set (reg/f:DI 0 ax [561])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":286 85 {*movdi_internal}
     (nil))
(insn 904 903 905 113 (set (reg:SI 0 ax [orig:269 _183 ] [269])
        (mem:SI (reg/f:DI 0 ax [561]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":286 86 {*movsi_internal}
     (nil))
(insn 905 904 906 113 (set (reg:DI 0 ax [orig:270 _184 ] [270])
        (sign_extend:DI (reg:SI 0 ax [orig:269 _183 ] [269]))) "E2OUT.f":286 149 {*extendsidi2_rex64}
     (nil))
(insn 906 905 907 113 (parallel [
            (set (reg:DI 0 ax [orig:271 _185 ] [271])
                (plus:DI (reg:DI 0 ax [orig:270 _184 ] [270])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":286 222 {*adddi_1}
     (nil))
(insn 907 906 908 113 (parallel [
            (set (reg:DI 0 ax [562])
                (plus:DI (reg:DI 0 ax [orig:271 _185 ] [271])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":286 222 {*adddi_1}
     (nil))
(insn 908 907 909 113 (set (reg:SI 0 ax [orig:272 _186 ] [272])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [562])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":286 86 {*movsi_internal}
     (nil))
(insn 909 908 910 113 (set (reg:DI 0 ax [orig:273 _187 ] [273])
        (sign_extend:DI (reg:SI 0 ax [orig:272 _186 ] [272]))) "E2OUT.f":286 149 {*extendsidi2_rex64}
     (nil))
(insn 910 909 911 113 (parallel [
            (set (reg:DI 0 ax [orig:274 _188 ] [274])
                (plus:DI (reg:DI 0 ax [orig:273 _187 ] [273])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":286 222 {*adddi_1}
     (nil))
(insn 911 910 912 113 (parallel [
            (set (reg:DI 0 ax [563])
                (plus:DI (reg:DI 0 ax [orig:274 _188 ] [274])
                    (const_int 1004 [0x3ec])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":286 222 {*adddi_1}
     (nil))
(insn 912 911 913 113 (set (reg:SI 0 ax [orig:275 _189 ] [275])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [563])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismful S4 A32])) "E2OUT.f":286 86 {*movsi_internal}
     (nil))
(insn 913 912 914 113 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:275 _189 ] [275])) "E2OUT.f":286 86 {*movsi_internal}
     (nil))
(insn 914 913 915 113 (set (reg:SI 0 ax [orig:276 ismth.26_190 ] [276])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":287 86 {*movsi_internal}
     (nil))
(insn 915 914 916 113 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:276 ismth.26_190 ] [276])
            (const_int 0 [0]))) "E2OUT.f":287 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 916 915 917 113 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 925)
            (pc))) "E2OUT.f":287 682 {*jcc}
     (nil)
 -> 925)
;;  succ:       114 (FALLTHRU)
;;              115
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 114, loop depth 0, maybe hot
;;  prev block 113, next block 115, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       113 (FALLTHRU)
;; bb 114 artificial_defs: { }
;; bb 114 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 917 916 1514 114 [bb 114] NOTE_INSN_BASIC_BLOCK)
(insn 1514 917 919 114 (set (reg:DI 0 ax [564])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":287 218 {*leadi}
     (nil))
(insn 919 1514 920 114 (set (reg:DI 2 cx)
        (reg:DI 0 ax [564])) "E2OUT.f":287 85 {*movdi_internal}
     (nil))
(insn 920 919 921 114 (set (reg:DI 1 dx)
        (symbol_ref:DI ("uful.4078") [flags 0x202]  <var_decl 0x7f830f917870 uful>)) "E2OUT.f":287 85 {*movdi_internal}
     (nil))
(insn 921 920 922 114 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":287 85 {*movdi_internal}
     (nil))
(insn 922 921 923 114 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":287 85 {*movdi_internal}
     (nil))
(insn 923 922 924 114 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":287 88 {*movqi_internal}
     (nil))
(call_insn 924 923 925 114 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":287 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       115 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 115, loop depth 0, maybe hot
;;  prev block 114, next block 116, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       113
;;              114 (FALLTHRU)
;; bb 115 artificial_defs: { }
;; bb 115 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 925 924 926 115 52 (nil) [1 uses])
(note 926 925 927 115 [bb 115] NOTE_INSN_BASIC_BLOCK)
(insn 927 926 928 115 (set (reg/f:DI 0 ax [565])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":288 85 {*movdi_internal}
     (nil))
(insn 928 927 929 115 (set (reg:SI 0 ax [orig:277 _191 ] [277])
        (mem:SI (reg/f:DI 0 ax [565]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":288 86 {*movsi_internal}
     (nil))
(insn 929 928 930 115 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:277 _191 ] [277])
            (const_int 0 [0]))) "E2OUT.f":288 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 930 929 931 115 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 954)
            (pc))) "E2OUT.f":288 682 {*jcc}
     (nil)
 -> 954)
;;  succ:       116 (FALLTHRU)
;;              118
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 116, loop depth 0, maybe hot
;;  prev block 115, next block 117, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       115 (FALLTHRU)
;; bb 116 artificial_defs: { }
;; bb 116 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 931 930 932 116 [bb 116] NOTE_INSN_BASIC_BLOCK)
(insn 932 931 933 116 (set (reg/f:DI 0 ax [566])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":289 85 {*movdi_internal}
     (nil))
(insn 933 932 934 116 (set (reg:SI 0 ax [orig:278 _192 ] [278])
        (mem:SI (reg/f:DI 0 ax [566]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":289 86 {*movsi_internal}
     (nil))
(insn 934 933 935 116 (set (reg:DI 0 ax [orig:279 _193 ] [279])
        (sign_extend:DI (reg:SI 0 ax [orig:278 _192 ] [278]))) "E2OUT.f":289 149 {*extendsidi2_rex64}
     (nil))
(insn 935 934 936 116 (parallel [
            (set (reg:DI 0 ax [orig:280 _194 ] [280])
                (plus:DI (reg:DI 0 ax [orig:279 _193 ] [279])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":289 222 {*adddi_1}
     (nil))
(insn 936 935 937 116 (parallel [
            (set (reg:DI 0 ax [567])
                (plus:DI (reg:DI 0 ax [orig:280 _194 ] [280])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":289 222 {*adddi_1}
     (nil))
(insn 937 936 938 116 (set (reg:SI 0 ax [orig:281 _195 ] [281])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [567])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":289 86 {*movsi_internal}
     (nil))
(insn 938 937 939 116 (set (reg:DI 0 ax [orig:282 _196 ] [282])
        (sign_extend:DI (reg:SI 0 ax [orig:281 _195 ] [281]))) "E2OUT.f":289 149 {*extendsidi2_rex64}
     (nil))
(insn 939 938 940 116 (parallel [
            (set (reg:DI 0 ax [orig:283 _197 ] [283])
                (plus:DI (reg:DI 0 ax [orig:282 _196 ] [282])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":289 222 {*adddi_1}
     (nil))
(insn 940 939 941 116 (parallel [
            (set (reg:DI 0 ax [568])
                (plus:DI (reg:DI 0 ax [orig:283 _197 ] [283])
                    (const_int 1004 [0x3ec])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":289 222 {*adddi_1}
     (nil))
(insn 941 940 942 116 (set (reg:SI 0 ax [orig:284 _198 ] [284])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [568])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismful S4 A32])) "E2OUT.f":289 86 {*movsi_internal}
     (nil))
(insn 942 941 943 116 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:284 _198 ] [284])) "E2OUT.f":289 86 {*movsi_internal}
     (nil))
(insn 943 942 944 116 (set (reg:SI 0 ax [orig:285 ismth.27_199 ] [285])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":290 86 {*movsi_internal}
     (nil))
(insn 944 943 945 116 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:285 ismth.27_199 ] [285])
            (const_int 0 [0]))) "E2OUT.f":290 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 945 944 946 116 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 954)
            (pc))) "E2OUT.f":290 682 {*jcc}
     (nil)
 -> 954)
;;  succ:       117 (FALLTHRU)
;;              118
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 117, loop depth 0, maybe hot
;;  prev block 116, next block 118, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       116 (FALLTHRU)
;; bb 117 artificial_defs: { }
;; bb 117 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 946 945 1513 117 [bb 117] NOTE_INSN_BASIC_BLOCK)
(insn 1513 946 948 117 (set (reg:DI 0 ax [569])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":291 218 {*leadi}
     (nil))
(insn 948 1513 949 117 (set (reg:DI 2 cx)
        (reg:DI 0 ax [569])) "E2OUT.f":291 85 {*movdi_internal}
     (nil))
(insn 949 948 950 117 (set (reg:DI 1 dx)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":291 85 {*movdi_internal}
     (nil))
(insn 950 949 951 117 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":291 85 {*movdi_internal}
     (nil))
(insn 951 950 952 117 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":291 85 {*movdi_internal}
     (nil))
(insn 952 951 953 117 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":291 88 {*movqi_internal}
     (nil))
(call_insn 953 952 954 117 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":291 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       118 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 118, loop depth 0, maybe hot
;;  prev block 117, next block 119, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       115
;;              117 (FALLTHRU)
;;              116
;; bb 118 artificial_defs: { }
;; bb 118 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 954 953 955 118 53 (nil) [2 uses])
(note 955 954 956 118 [bb 118] NOTE_INSN_BASIC_BLOCK)
(insn 956 955 957 118 (set (reg:SI 0 ax [orig:286 _200 ] [286])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 957 956 958 118 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:286 _200 ] [286])
            (const_int 89 [0x59]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 958 957 959 118 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 987)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 987)
;;  succ:       126
;;              119 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 119, loop depth 0, maybe hot
;;  prev block 118, next block 120, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       118 (FALLTHRU)
;; bb 119 artificial_defs: { }
;; bb 119 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 959 958 960 119 [bb 119] NOTE_INSN_BASIC_BLOCK)
(insn 960 959 961 119 (set (reg:SI 0 ax [orig:287 _201 ] [287])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 961 960 962 119 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:287 _201 ] [287])
            (const_int 97 [0x61]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 962 961 963 119 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 1022)
;;  succ:       120 (FALLTHRU)
;;              127
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 120, loop depth 0, maybe hot
;;  prev block 119, next block 121, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       119 (FALLTHRU)
;; bb 120 artificial_defs: { }
;; bb 120 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 963 962 964 120 [bb 120] NOTE_INSN_BASIC_BLOCK)
(insn 964 963 965 120 (set (reg:SI 0 ax [orig:288 _202 ] [288])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 965 964 966 120 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:288 _202 ] [288])
            (const_int 99 [0x63]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 966 965 967 120 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 1022)
;;  succ:       121 (FALLTHRU)
;;              127
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 121, loop depth 0, maybe hot
;;  prev block 120, next block 122, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       120 (FALLTHRU)
;; bb 121 artificial_defs: { }
;; bb 121 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 967 966 968 121 [bb 121] NOTE_INSN_BASIC_BLOCK)
(insn 968 967 969 121 (set (reg:SI 0 ax [orig:289 _203 ] [289])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 969 968 970 121 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:289 _203 ] [289])
            (const_int 190 [0xbe]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 970 969 971 121 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 1022)
;;  succ:       122 (FALLTHRU)
;;              127
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 122, loop depth 0, maybe hot
;;  prev block 121, next block 123, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       121 (FALLTHRU)
;; bb 122 artificial_defs: { }
;; bb 122 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 971 970 972 122 [bb 122] NOTE_INSN_BASIC_BLOCK)
(insn 972 971 973 122 (set (reg:SI 0 ax [orig:290 _204 ] [290])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 973 972 974 122 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:290 _204 ] [290])
            (const_int 192 [0xc0]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 974 973 975 122 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 1022)
;;  succ:       123 (FALLTHRU)
;;              127
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 123, loop depth 0, maybe hot
;;  prev block 122, next block 124, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       122 (FALLTHRU)
;; bb 123 artificial_defs: { }
;; bb 123 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 975 974 976 123 [bb 123] NOTE_INSN_BASIC_BLOCK)
(insn 976 975 977 123 (set (reg:SI 0 ax [orig:291 _205 ] [291])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 977 976 978 123 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:291 _205 ] [291])
            (const_int 194 [0xc2]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 978 977 979 123 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 1022)
;;  succ:       124 (FALLTHRU)
;;              127
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 124, loop depth 0, maybe hot
;;  prev block 123, next block 125, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       123 (FALLTHRU)
;; bb 124 artificial_defs: { }
;; bb 124 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 979 978 980 124 [bb 124] NOTE_INSN_BASIC_BLOCK)
(insn 980 979 981 124 (set (reg:SI 0 ax [orig:292 _206 ] [292])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 981 980 982 124 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:292 _206 ] [292])
            (const_int 196 [0xc4]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 982 981 983 124 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 1022)
;;  succ:       125 (FALLTHRU)
;;              127
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 125, loop depth 0, maybe hot
;;  prev block 124, next block 126, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       124 (FALLTHRU)
;; bb 125 artificial_defs: { }
;; bb 125 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 983 982 984 125 [bb 125] NOTE_INSN_BASIC_BLOCK)
(insn 984 983 985 125 (set (reg:SI 0 ax [orig:293 _207 ] [293])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 985 984 986 125 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:293 _207 ] [293])
            (const_int 255 [0xff]))) "E2OUT.f":294 11 {*cmpsi_1}
     (nil))
(jump_insn 986 985 987 125 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1022)
            (pc))) "E2OUT.f":294 682 {*jcc}
     (nil)
 -> 1022)
;;  succ:       126 (FALLTHRU)
;;              127
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 126, loop depth 0, maybe hot
;;  prev block 125, next block 127, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       118
;;              125 (FALLTHRU)
;; bb 126 artificial_defs: { }
;; bb 126 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 987 986 988 126 54 (nil) [1 uses])
(note 988 987 989 126 [bb 126] NOTE_INSN_BASIC_BLOCK)
(insn 989 988 990 126 (set (mem:DI (pre_dec:DI (reg/f:DI 7 sp)) [2  S8 A64])
        (const_int 6 [0x6])) "E2OUT.f":299 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 990 989 991 126 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [15  S8 A64])
        (const:DI (plus:DI (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)
                (const_int 44 [0x2c])))) "E2OUT.f":299 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 991 990 992 126 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [16  S8 A64])
        (const:DI (plus:DI (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)
                (const_int 40 [0x28])))) "E2OUT.f":299 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 992 991 993 126 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (const:DI (plus:DI (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)
                (const_int 4 [0x4])))) "E2OUT.f":299 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 993 992 1501 126 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (symbol_ref:DI ("outgrd_") [flags 0x2]  <var_decl 0x7f830f90d480 outgrd>)) "E2OUT.f":299 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 1501 993 994 126 (set (reg:DI 0 ax [654])
        (const:DI (plus:DI (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f830f901ea0 llgrds>)
                (const_int 193183248 [0xb83be10])))) "E2OUT.f":299 85 {*movdi_internal}
     (nil))
(insn 994 1501 995 126 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [4  S8 A64])
        (reg:DI 0 ax [654])) "E2OUT.f":299 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 995 994 996 126 (set (reg:DI 38 r9)
        (const:DI (plus:DI (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f830f901ea0 llgrds>)
                (const_int 192947196 [0xb8023fc])))) "E2OUT.f":299 85 {*movdi_internal}
     (nil))
(insn 996 995 997 126 (set (reg:DI 37 r8)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":299 85 {*movdi_internal}
     (nil))
(insn 997 996 998 126 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":299 85 {*movdi_internal}
     (nil))
(insn 998 997 999 126 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f830f901ea0 llgrds>)
                (const_int 192711144 [0xb7c89e8])))) "E2OUT.f":299 85 {*movdi_internal}
     (nil))
(insn 999 998 1000 126 (set (reg:DI 4 si)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":299 85 {*movdi_internal}
     (nil))
(insn 1000 999 1001 126 (set (reg:DI 5 di)
        (symbol_ref:DI ("uful.4078") [flags 0x202]  <var_decl 0x7f830f917870 uful>)) "E2OUT.f":299 85 {*movdi_internal}
     (nil))
(insn 1001 1000 1002 126 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":299 88 {*movqi_internal}
     (nil))
(call_insn 1002 1001 1003 126 (call (mem:QI (symbol_ref:DI ("euvguv_") [flags 0x41]  <function_decl 0x7f830f927000 euvguv>) [0 euvguv S1 A8])
        (const_int 48 [0x30])) "E2OUT.f":299 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 1003 1002 1004 126 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 48 [0x30])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":299 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 1004 1003 1005 126 (set (reg:DI 1 dx [570])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":300 85 {*movdi_internal}
     (nil))
(insn 1005 1004 1006 126 (set (reg:DI 0 ax [571])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":300 85 {*movdi_internal}
     (nil))
(insn 1006 1005 1007 126 (set (reg:DI 2 cx)
        (reg:DI 1 dx [570])) "E2OUT.f":300 85 {*movdi_internal}
     (nil))
(insn 1007 1006 1008 126 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":300 85 {*movdi_internal}
     (nil))
(insn 1008 1007 1009 126 (set (reg:DI 4 si)
        (reg:DI 0 ax [571])) "E2OUT.f":300 85 {*movdi_internal}
     (nil))
(insn 1009 1008 1010 126 (set (reg:DI 5 di)
        (symbol_ref:DI ("uful.4078") [flags 0x202]  <var_decl 0x7f830f917870 uful>)) "E2OUT.f":300 85 {*movdi_internal}
     (nil))
(insn 1010 1009 1011 126 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":300 88 {*movqi_internal}
     (nil))
(call_insn 1011 1010 1012 126 (call (mem:QI (symbol_ref:DI ("interp3_") [flags 0x41]  <function_decl 0x7f830f8f8e00 interp3>) [0 interp3 S1 A8])
        (const_int 0 [0])) "E2OUT.f":300 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1012 1011 1013 126 (set (reg:DI 1 dx [572])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":301 85 {*movdi_internal}
     (nil))
(insn 1013 1012 1014 126 (set (reg:DI 0 ax [573])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])) "E2OUT.f":301 85 {*movdi_internal}
     (nil))
(insn 1014 1013 1015 126 (set (reg:DI 2 cx)
        (reg:DI 1 dx [572])) "E2OUT.f":301 85 {*movdi_internal}
     (nil))
(insn 1015 1014 1016 126 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":301 85 {*movdi_internal}
     (nil))
(insn 1016 1015 1017 126 (set (reg:DI 4 si)
        (reg:DI 0 ax [573])) "E2OUT.f":301 85 {*movdi_internal}
     (nil))
(insn 1017 1016 1018 126 (set (reg:DI 5 di)
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":301 85 {*movdi_internal}
     (nil))
(insn 1018 1017 1019 126 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":301 88 {*movqi_internal}
     (nil))
(call_insn 1019 1018 1411 126 (call (mem:QI (symbol_ref:DI ("interp3_") [flags 0x41]  <function_decl 0x7f830f8f8e00 interp3>) [0 interp3 S1 A8])
        (const_int 0 [0])) "E2OUT.f":301 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(jump_insn 1411 1019 1412 126 (set (pc)
        (label_ref 1123)) "E2OUT.f":301 683 {jump}
     (nil)
 -> 1123)
;;  succ:       140 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1412 1411 1022)
;; basic block 127, loop depth 0, maybe hot
;;  prev block 126, next block 128, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       119
;;              120
;;              121
;;              122
;;              123
;;              124
;;              125
;; bb 127 artificial_defs: { }
;; bb 127 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1022 1412 1023 127 55 (nil) [7 uses])
(note 1023 1022 1024 127 [bb 127] NOTE_INSN_BASIC_BLOCK)
(insn 1024 1023 1074 127 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":304 86 {*movsi_internal}
     (nil))
;;  succ:       128 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 128, loop depth 0, maybe hot
;;  prev block 127, next block 129, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       127 (FALLTHRU)
;;              132 [always] 
;; bb 128 artificial_defs: { }
;; bb 128 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1074 1024 1025 128 60 (nil) [1 uses])
(note 1025 1074 1026 128 [bb 128] NOTE_INSN_BASIC_BLOCK)
(insn 1026 1025 1027 128 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "E2OUT.f":304 11 {*cmpsi_1}
     (nil))
(insn 1027 1026 1028 128 (set (reg:QI 0 ax [574])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":304 678 {*setcc_qi}
     (nil))
(insn 1028 1027 1029 128 (set (reg:SI 0 ax [orig:406 _440 ] [406])
        (zero_extend:SI (reg:QI 0 ax [574]))) "E2OUT.f":304 140 {*zero_extendqisi2}
     (nil))
(insn 1029 1028 1030 128 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:406 _440 ] [406])
            (const_int 0 [0]))) "E2OUT.f":304 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1030 1029 1031 128 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1464)
            (pc))) "E2OUT.f":304 682 {*jcc}
     (nil)
 -> 1464)
;;  succ:       133
;;              129 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 129, loop depth 0, maybe hot
;;  prev block 128, next block 130, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       128 (FALLTHRU)
;; bb 129 artificial_defs: { }
;; bb 129 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 1031 1030 1032 129 [bb 129] NOTE_INSN_BASIC_BLOCK)
(insn 1032 1031 1068 129 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":305 86 {*movsi_internal}
     (nil))
;;  succ:       130 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 130, loop depth 0, maybe hot
;;  prev block 129, next block 131, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       129 (FALLTHRU)
;;              131 [always] 
;; bb 130 artificial_defs: { }
;; bb 130 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1068 1032 1033 130 59 (nil) [1 uses])
(note 1033 1068 1034 130 [bb 130] NOTE_INSN_BASIC_BLOCK)
(insn 1034 1033 1035 130 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 237 [0xed]))) "E2OUT.f":305 11 {*cmpsi_1}
     (nil))
(insn 1035 1034 1036 130 (set (reg:QI 0 ax [575])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":305 678 {*setcc_qi}
     (nil))
(insn 1036 1035 1037 130 (set (reg:SI 0 ax [orig:407 _442 ] [407])
        (zero_extend:SI (reg:QI 0 ax [575]))) "E2OUT.f":305 140 {*zero_extendqisi2}
     (nil))
(insn 1037 1036 1038 130 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:407 _442 ] [407])
            (const_int 0 [0]))) "E2OUT.f":305 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1038 1037 1039 130 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1467)
            (pc))) "E2OUT.f":305 682 {*jcc}
     (nil)
 -> 1467)
;;  succ:       132
;;              131 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

;; basic block 131, loop depth 0, maybe hot
;;  prev block 130, next block 132, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       130 (FALLTHRU)
;; bb 131 artificial_defs: { }
;; bb 131 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 1039 1038 1040 131 [bb 131] NOTE_INSN_BASIC_BLOCK)
(insn 1040 1039 1041 131 (set (reg:SI 0 ax [576])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":306 86 {*movsi_internal}
     (nil))
(insn 1041 1040 1042 131 (set (reg:DI 0 ax [orig:294 _208 ] [294])
        (sign_extend:DI (reg:SI 0 ax [576]))) "E2OUT.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 1042 1041 1043 131 (parallel [
            (set (reg:DI 1 dx [orig:295 _209 ] [295])
                (mult:DI (reg:DI 0 ax [orig:294 _208 ] [294])
                    (const_int 237 [0xed])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":306 349 {*muldi3_1}
     (nil))
(insn 1043 1042 1044 131 (set (reg:SI 0 ax [577])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":306 86 {*movsi_internal}
     (nil))
(insn 1044 1043 1045 131 (set (reg:DI 0 ax [orig:296 _210 ] [296])
        (sign_extend:DI (reg:SI 0 ax [577]))) "E2OUT.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 1045 1044 1510 131 (parallel [
            (set (reg:DI 0 ax [orig:297 _211 ] [297])
                (plus:DI (reg:DI 0 ax [orig:296 _210 ] [296])
                    (reg:DI 1 dx [orig:295 _209 ] [295])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":306 222 {*adddi_1}
     (nil))
(insn 1510 1045 1047 131 (set (reg:DI 2 cx [orig:298 _212 ] [298])
        (plus:DI (reg:DI 0 ax [orig:297 _211 ] [297])
            (const_int -238 [0xffffffffffffff12]))) "E2OUT.f":306 218 {*leadi}
     (nil))
(insn 1047 1510 1048 131 (set (reg:SI 0 ax [578])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":306 86 {*movsi_internal}
     (nil))
(insn 1048 1047 1049 131 (set (reg:DI 0 ax [orig:299 _213 ] [299])
        (sign_extend:DI (reg:SI 0 ax [578]))) "E2OUT.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 1049 1048 1511 131 (parallel [
            (set (reg:DI 0 ax [orig:300 _214 ] [300])
                (mult:DI (reg:DI 0 ax [orig:299 _213 ] [299])
                    (reg:DI 3 bx [orig:381 stride.2_350 ] [381])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":306 349 {*muldi3_1}
     (nil))
(insn 1511 1049 1051 131 (set (reg:DI 1 dx [orig:301 _215 ] [301])
        (plus:DI (reg:DI 42 r13 [orig:387 offset.3_358 ] [387])
            (reg:DI 0 ax [orig:300 _214 ] [300]))) "E2OUT.f":306 218 {*leadi}
     (nil))
(insn 1051 1511 1052 131 (set (reg:SI 0 ax [579])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":306 86 {*movsi_internal}
     (nil))
(insn 1052 1051 1053 131 (set (reg:DI 0 ax [orig:302 _216 ] [302])
        (sign_extend:DI (reg:SI 0 ax [579]))) "E2OUT.f":306 149 {*extendsidi2_rex64}
     (nil))
(insn 1053 1052 1054 131 (parallel [
            (set (reg:DI 1 dx [orig:303 _217 ] [303])
                (plus:DI (reg:DI 1 dx [orig:301 _215 ] [301])
                    (reg:DI 0 ax [orig:302 _216 ] [302])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":306 222 {*adddi_1}
     (nil))
(insn 1054 1053 1055 131 (set (reg/f:DI 0 ax [580])
        (symbol_ref:DI ("uful.4078") [flags 0x202]  <var_decl 0x7f830f917870 uful>)) "E2OUT.f":306 85 {*movdi_internal}
     (nil))
(insn 1055 1054 1056 131 (set (reg:SF 21 xmm0 [orig:304 _218 ] [304])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:298 _212 ] [298])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [580])) [6 uful S4 A32])) "E2OUT.f":306 131 {*movsf_internal}
     (nil))
(insn 1056 1055 1057 131 (set (reg/f:DI 0 ax [581])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":306 85 {*movdi_internal}
     (nil))
(insn 1057 1056 1058 131 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:303 _217 ] [303])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [581])) [6 *grid1_379(D) S4 A32])
        (reg:SF 21 xmm0 [orig:304 _218 ] [304])) "E2OUT.f":306 131 {*movsf_internal}
     (nil))
(insn 1058 1057 1059 131 (set (reg:SI 0 ax [582])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":307 86 {*movsi_internal}
     (nil))
(insn 1059 1058 1060 131 (set (reg:DI 0 ax [orig:305 _219 ] [305])
        (sign_extend:DI (reg:SI 0 ax [582]))) "E2OUT.f":307 149 {*extendsidi2_rex64}
     (nil))
(insn 1060 1059 1061 131 (parallel [
            (set (reg:DI 1 dx [orig:306 _220 ] [306])
                (mult:DI (reg:DI 0 ax [orig:305 _219 ] [305])
                    (const_int 4000 [0xfa0])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":307 349 {*muldi3_1}
     (nil))
(insn 1061 1060 1062 131 (set (reg:SI 0 ax [583])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":307 86 {*movsi_internal}
     (nil))
(insn 1062 1061 1063 131 (set (reg:DI 0 ax [orig:307 _221 ] [307])
        (sign_extend:DI (reg:SI 0 ax [583]))) "E2OUT.f":307 149 {*extendsidi2_rex64}
     (nil))
(insn 1063 1062 1512 131 (parallel [
            (set (reg:DI 0 ax [orig:308 _222 ] [308])
                (plus:DI (reg:DI 0 ax [orig:307 _221 ] [307])
                    (reg:DI 1 dx [orig:306 _220 ] [306])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":307 222 {*adddi_1}
     (nil))
(insn 1512 1063 1065 131 (set (reg:DI 1 dx [orig:309 _223 ] [309])
        (plus:DI (reg:DI 0 ax [orig:308 _222 ] [308])
            (const_int -4001 [0xfffffffffffff05f]))) "E2OUT.f":307 218 {*leadi}
     (nil))
(insn 1065 1512 1066 131 (set (reg/f:DI 0 ax [584])
        (symbol_ref:DI ("bitmap_") [flags 0x202]  <var_decl 0x7f831696bab0 bitmap>)) "E2OUT.f":307 85 {*movdi_internal}
     (nil))
(insn 1066 1065 1067 131 (set (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:309 _223 ] [309])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [584])) [1 bitmap.ibmap S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":307 86 {*movsi_internal}
     (nil))
(insn 1067 1066 1413 131 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":305 221 {*addsi_1}
     (nil))
(jump_insn 1413 1067 1414 131 (set (pc)
        (label_ref 1068)) "E2OUT.f":305 683 {jump}
     (nil)
 -> 1068)
;;  succ:       130 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

(barrier 1414 1413 1467)
;; basic block 132, loop depth 0, maybe hot
;;  prev block 131, next block 133, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       130
;; bb 132 artificial_defs: { }
;; bb 132 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1467 1414 1466 132 83 (nil) [1 uses])
(note 1466 1467 1468 132 [bb 132] NOTE_INSN_BASIC_BLOCK)
(insn 1468 1466 1073 132 (const_int 0 [0]) "E2OUT.f":307 718 {nop}
     (nil))
(insn 1073 1468 1415 132 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":304 221 {*addsi_1}
     (nil))
(jump_insn 1415 1073 1416 132 (set (pc)
        (label_ref 1074)) "E2OUT.f":304 683 {jump}
     (nil)
 -> 1074)
;;  succ:       128 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 41 [r12] 42 [r13] 43 [r14]

(barrier 1416 1415 1464)
;; basic block 133, loop depth 0, maybe hot
;;  prev block 132, next block 134, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       128
;; bb 133 artificial_defs: { }
;; bb 133 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1464 1416 1463 133 82 (nil) [1 uses])
(note 1463 1464 1465 133 [bb 133] NOTE_INSN_BASIC_BLOCK)
(insn 1465 1463 1079 133 (const_int 0 [0]) "E2OUT.f":305 718 {nop}
     (nil))
(insn 1079 1465 1120 133 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":311 86 {*movsi_internal}
     (nil))
;;  succ:       134 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 134, loop depth 0, maybe hot
;;  prev block 133, next block 135, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       133 (FALLTHRU)
;;              138 [always] 
;; bb 134 artificial_defs: { }
;; bb 134 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1120 1079 1080 134 63 (nil) [1 uses])
(note 1080 1120 1081 134 [bb 134] NOTE_INSN_BASIC_BLOCK)
(insn 1081 1080 1082 134 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "E2OUT.f":311 11 {*cmpsi_1}
     (nil))
(insn 1082 1081 1083 134 (set (reg:QI 0 ax [585])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":311 678 {*setcc_qi}
     (nil))
(insn 1083 1082 1084 134 (set (reg:SI 0 ax [orig:408 _448 ] [408])
        (zero_extend:SI (reg:QI 0 ax [585]))) "E2OUT.f":311 140 {*zero_extendqisi2}
     (nil))
(insn 1084 1083 1085 134 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:408 _448 ] [408])
            (const_int 0 [0]))) "E2OUT.f":311 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1085 1084 1086 134 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1470)
            (pc))) "E2OUT.f":311 682 {*jcc}
     (nil)
 -> 1470)
;;  succ:       139
;;              135 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 135, loop depth 0, maybe hot
;;  prev block 134, next block 136, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       134 (FALLTHRU)
;; bb 135 artificial_defs: { }
;; bb 135 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 1086 1085 1087 135 [bb 135] NOTE_INSN_BASIC_BLOCK)
(insn 1087 1086 1114 135 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":312 86 {*movsi_internal}
     (nil))
;;  succ:       136 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 136, loop depth 0, maybe hot
;;  prev block 135, next block 137, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       135 (FALLTHRU)
;;              137 [always] 
;; bb 136 artificial_defs: { }
;; bb 136 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1114 1087 1088 136 62 (nil) [1 uses])
(note 1088 1114 1089 136 [bb 136] NOTE_INSN_BASIC_BLOCK)
(insn 1089 1088 1090 136 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 237 [0xed]))) "E2OUT.f":312 11 {*cmpsi_1}
     (nil))
(insn 1090 1089 1091 136 (set (reg:QI 0 ax [586])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":312 678 {*setcc_qi}
     (nil))
(insn 1091 1090 1092 136 (set (reg:SI 0 ax [orig:409 _450 ] [409])
        (zero_extend:SI (reg:QI 0 ax [586]))) "E2OUT.f":312 140 {*zero_extendqisi2}
     (nil))
(insn 1092 1091 1093 136 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:409 _450 ] [409])
            (const_int 0 [0]))) "E2OUT.f":312 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1093 1092 1094 136 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1473)
            (pc))) "E2OUT.f":312 682 {*jcc}
     (nil)
 -> 1473)
;;  succ:       138
;;              137 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

;; basic block 137, loop depth 0, maybe hot
;;  prev block 136, next block 138, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       136 (FALLTHRU)
;; bb 137 artificial_defs: { }
;; bb 137 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp] 41 [r12] 43 [r14]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 1094 1093 1095 137 [bb 137] NOTE_INSN_BASIC_BLOCK)
(insn 1095 1094 1096 137 (set (reg:SI 0 ax [587])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":313 86 {*movsi_internal}
     (nil))
(insn 1096 1095 1097 137 (set (reg:DI 0 ax [orig:310 _224 ] [310])
        (sign_extend:DI (reg:SI 0 ax [587]))) "E2OUT.f":313 149 {*extendsidi2_rex64}
     (nil))
(insn 1097 1096 1098 137 (parallel [
            (set (reg:DI 1 dx [orig:311 _225 ] [311])
                (mult:DI (reg:DI 0 ax [orig:310 _224 ] [310])
                    (const_int 237 [0xed])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":313 349 {*muldi3_1}
     (nil))
(insn 1098 1097 1099 137 (set (reg:SI 0 ax [588])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":313 86 {*movsi_internal}
     (nil))
(insn 1099 1098 1100 137 (set (reg:DI 0 ax [orig:312 _226 ] [312])
        (sign_extend:DI (reg:SI 0 ax [588]))) "E2OUT.f":313 149 {*extendsidi2_rex64}
     (nil))
(insn 1100 1099 1508 137 (parallel [
            (set (reg:DI 0 ax [orig:313 _227 ] [313])
                (plus:DI (reg:DI 0 ax [orig:312 _226 ] [312])
                    (reg:DI 1 dx [orig:311 _225 ] [311])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":313 222 {*adddi_1}
     (nil))
(insn 1508 1100 1102 137 (set (reg:DI 2 cx [orig:314 _228 ] [314])
        (plus:DI (reg:DI 0 ax [orig:313 _227 ] [313])
            (const_int -238 [0xffffffffffffff12]))) "E2OUT.f":313 218 {*leadi}
     (nil))
(insn 1102 1508 1103 137 (set (reg:SI 0 ax [589])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":313 86 {*movsi_internal}
     (nil))
(insn 1103 1102 1104 137 (set (reg:DI 0 ax [orig:315 _229 ] [315])
        (sign_extend:DI (reg:SI 0 ax [589]))) "E2OUT.f":313 149 {*extendsidi2_rex64}
     (nil))
(insn 1104 1103 1509 137 (parallel [
            (set (reg:DI 0 ax [orig:316 _230 ] [316])
                (mult:DI (reg:DI 0 ax [orig:315 _229 ] [315])
                    (reg:DI 41 r12 [orig:389 stride.7_361 ] [389])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":313 349 {*muldi3_1}
     (nil))
(insn 1509 1104 1106 137 (set (reg:DI 1 dx [orig:317 _231 ] [317])
        (plus:DI (reg:DI 43 r14 [orig:395 offset.8_368 ] [395])
            (reg:DI 0 ax [orig:316 _230 ] [316]))) "E2OUT.f":313 218 {*leadi}
     (nil))
(insn 1106 1509 1107 137 (set (reg:SI 0 ax [590])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":313 86 {*movsi_internal}
     (nil))
(insn 1107 1106 1108 137 (set (reg:DI 0 ax [orig:318 _232 ] [318])
        (sign_extend:DI (reg:SI 0 ax [590]))) "E2OUT.f":313 149 {*extendsidi2_rex64}
     (nil))
(insn 1108 1107 1109 137 (parallel [
            (set (reg:DI 1 dx [orig:319 _233 ] [319])
                (plus:DI (reg:DI 1 dx [orig:317 _231 ] [317])
                    (reg:DI 0 ax [orig:318 _232 ] [318])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":313 222 {*adddi_1}
     (nil))
(insn 1109 1108 1110 137 (set (reg/f:DI 0 ax [591])
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":313 85 {*movdi_internal}
     (nil))
(insn 1110 1109 1111 137 (set (reg:SF 21 xmm0 [orig:320 _234 ] [320])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:314 _228 ] [314])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [591])) [6 vful S4 A32])) "E2OUT.f":313 131 {*movsf_internal}
     (nil))
(insn 1111 1110 1112 137 (set (reg/f:DI 0 ax [592])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])) "E2OUT.f":313 85 {*movdi_internal}
     (nil))
(insn 1112 1111 1113 137 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:319 _233 ] [319])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [592])) [6 *grid2_389(D) S4 A32])
        (reg:SF 21 xmm0 [orig:320 _234 ] [320])) "E2OUT.f":313 131 {*movsf_internal}
     (nil))
(insn 1113 1112 1417 137 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":312 221 {*addsi_1}
     (nil))
(jump_insn 1417 1113 1418 137 (set (pc)
        (label_ref 1114)) "E2OUT.f":312 683 {jump}
     (nil)
 -> 1114)
;;  succ:       136 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

(barrier 1418 1417 1473)
;; basic block 138, loop depth 0, maybe hot
;;  prev block 137, next block 139, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       136
;; bb 138 artificial_defs: { }
;; bb 138 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1473 1418 1472 138 85 (nil) [1 uses])
(note 1472 1473 1474 138 [bb 138] NOTE_INSN_BASIC_BLOCK)
(insn 1474 1472 1119 138 (const_int 0 [0]) "E2OUT.f":313 718 {nop}
     (nil))
(insn 1119 1474 1419 138 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":311 221 {*addsi_1}
     (nil))
(jump_insn 1419 1119 1420 138 (set (pc)
        (label_ref 1120)) "E2OUT.f":311 683 {jump}
     (nil)
 -> 1120)
;;  succ:       134 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame] 41 [r12] 43 [r14]

(barrier 1420 1419 1470)
;; basic block 139, loop depth 0, maybe hot
;;  prev block 138, next block 140, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       134
;; bb 139 artificial_defs: { }
;; bb 139 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1470 1420 1469 139 84 (nil) [1 uses])
(note 1469 1470 1471 139 [bb 139] NOTE_INSN_BASIC_BLOCK)
(insn 1471 1469 1123 139 (const_int 0 [0]) "E2OUT.f":312 718 {nop}
     (nil))
;;  succ:       140 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 140, loop depth 0, maybe hot
;;  prev block 139, next block 141, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       139 [always]  (FALLTHRU)
;;              126 [always] 
;; bb 140 artificial_defs: { }
;; bb 140 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1123 1471 1124 140 56 (nil) [1 uses])
(note 1124 1123 1421 140 [bb 140] NOTE_INSN_BASIC_BLOCK)
(jump_insn 1421 1124 1422 140 (set (pc)
        (label_ref 1254)) "E2OUT.f":311 683 {jump}
     (nil)
 -> 1254)
;;  succ:       161 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1422 1421 1127)
;; basic block 141, loop depth 0, maybe hot
;;  prev block 140, next block 142, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       111
;;              112
;; bb 141 artificial_defs: { }
;; bb 141 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1127 1422 1128 141 51 (nil) [2 uses])
(note 1128 1127 1129 141 [bb 141] NOTE_INSN_BASIC_BLOCK)
(insn 1129 1128 1130 141 (set (reg:DI 0 ax [593])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":319 85 {*movdi_internal}
     (nil))
(insn 1130 1129 1131 141 (set (reg:DI 2 cx)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":319 85 {*movdi_internal}
     (nil))
(insn 1131 1130 1132 141 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":319 85 {*movdi_internal}
     (nil))
(insn 1132 1131 1133 141 (set (reg:DI 4 si)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":319 85 {*movdi_internal}
     (nil))
(insn 1133 1132 1134 141 (set (reg:DI 5 di)
        (reg:DI 0 ax [593])) "E2OUT.f":319 85 {*movdi_internal}
     (nil))
(insn 1134 1133 1135 141 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":319 88 {*movqi_internal}
     (nil))
(call_insn 1135 1134 1136 141 (call (mem:QI (symbol_ref:DI ("fillh_") [flags 0x41]  <function_decl 0x7f830f927200 fillh>) [0 fillh S1 A8])
        (const_int 0 [0])) "E2OUT.f":319 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 1136 1135 1137 141 (set (reg/f:DI 0 ax [594])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":320 85 {*movdi_internal}
     (nil))
(insn 1137 1136 1138 141 (set (reg:SI 0 ax [orig:321 _235 ] [321])
        (mem:SI (reg/f:DI 0 ax [594]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":320 86 {*movsi_internal}
     (nil))
(insn 1138 1137 1139 141 (set (reg:DI 0 ax [orig:322 _236 ] [322])
        (sign_extend:DI (reg:SI 0 ax [orig:321 _235 ] [321]))) "E2OUT.f":320 149 {*extendsidi2_rex64}
     (nil))
(insn 1139 1138 1140 141 (parallel [
            (set (reg:DI 0 ax [orig:323 _237 ] [323])
                (plus:DI (reg:DI 0 ax [orig:322 _236 ] [322])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":320 222 {*adddi_1}
     (nil))
(insn 1140 1139 1141 141 (parallel [
            (set (reg:DI 0 ax [595])
                (plus:DI (reg:DI 0 ax [orig:323 _237 ] [323])
                    (const_int 1004 [0x3ec])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":320 222 {*adddi_1}
     (nil))
(insn 1141 1140 1142 141 (set (reg:SI 0 ax [orig:324 _238 ] [324])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [595])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismful S4 A32])) "E2OUT.f":320 86 {*movsi_internal}
     (nil))
(insn 1142 1141 1143 141 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:324 _238 ] [324])) "E2OUT.f":320 86 {*movsi_internal}
     (nil))
(insn 1143 1142 1144 141 (set (reg:SI 0 ax [orig:325 ismth.28_239 ] [325])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":321 86 {*movsi_internal}
     (nil))
(insn 1144 1143 1145 141 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:325 ismth.28_239 ] [325])
            (const_int 0 [0]))) "E2OUT.f":321 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1145 1144 1146 141 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1154)
            (pc))) "E2OUT.f":321 682 {*jcc}
     (nil)
 -> 1154)
;;  succ:       142 (FALLTHRU)
;;              143
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 142, loop depth 0, maybe hot
;;  prev block 141, next block 143, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       141 (FALLTHRU)
;; bb 142 artificial_defs: { }
;; bb 142 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1146 1145 1507 142 [bb 142] NOTE_INSN_BASIC_BLOCK)
(insn 1507 1146 1148 142 (set (reg:DI 0 ax [596])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":321 218 {*leadi}
     (nil))
(insn 1148 1507 1149 142 (set (reg:DI 2 cx)
        (reg:DI 0 ax [596])) "E2OUT.f":321 85 {*movdi_internal}
     (nil))
(insn 1149 1148 1150 142 (set (reg:DI 1 dx)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":321 85 {*movdi_internal}
     (nil))
(insn 1150 1149 1151 142 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7f830f556630 *.LC1>)) "E2OUT.f":321 85 {*movdi_internal}
     (nil))
(insn 1151 1150 1152 142 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7f830f556750 *.LC3>)) "E2OUT.f":321 85 {*movdi_internal}
     (nil))
(insn 1152 1151 1153 142 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":321 88 {*movqi_internal}
     (nil))
(call_insn 1153 1152 1154 142 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":321 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       143 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 143, loop depth 0, maybe hot
;;  prev block 142, next block 144, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       141
;;              142 (FALLTHRU)
;; bb 143 artificial_defs: { }
;; bb 143 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1154 1153 1155 143 64 (nil) [1 uses])
(note 1155 1154 1156 143 [bb 143] NOTE_INSN_BASIC_BLOCK)
(insn 1156 1155 1157 143 (set (reg:SI 0 ax [orig:326 _240 ] [326])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1157 1156 1158 143 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:326 _240 ] [326])
            (const_int 89 [0x59]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1158 1157 1159 143 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1187)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1187)
;;  succ:       151
;;              144 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 144, loop depth 0, maybe hot
;;  prev block 143, next block 145, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       143 (FALLTHRU)
;; bb 144 artificial_defs: { }
;; bb 144 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1159 1158 1160 144 [bb 144] NOTE_INSN_BASIC_BLOCK)
(insn 1160 1159 1161 144 (set (reg:SI 0 ax [orig:327 _241 ] [327])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1161 1160 1162 144 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 0 ax [orig:327 _241 ] [327])
            (const_int 97 [0x61]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1162 1161 1163 144 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 1199)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1199)
;;  succ:       145 (FALLTHRU)
;;              152
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 145, loop depth 0, maybe hot
;;  prev block 144, next block 146, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       144 (FALLTHRU)
;; bb 145 artificial_defs: { }
;; bb 145 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1163 1162 1164 145 [bb 145] NOTE_INSN_BASIC_BLOCK)
(insn 1164 1163 1165 145 (set (reg:SI 0 ax [orig:328 _242 ] [328])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1165 1164 1166 145 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:328 _242 ] [328])
            (const_int 99 [0x63]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1166 1165 1167 145 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1199)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1199)
;;  succ:       146 (FALLTHRU)
;;              152
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 146, loop depth 0, maybe hot
;;  prev block 145, next block 147, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       145 (FALLTHRU)
;; bb 146 artificial_defs: { }
;; bb 146 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1167 1166 1168 146 [bb 146] NOTE_INSN_BASIC_BLOCK)
(insn 1168 1167 1169 146 (set (reg:SI 0 ax [orig:329 _243 ] [329])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1169 1168 1170 146 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:329 _243 ] [329])
            (const_int 190 [0xbe]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1170 1169 1171 146 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1199)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1199)
;;  succ:       147 (FALLTHRU)
;;              152
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 147, loop depth 0, maybe hot
;;  prev block 146, next block 148, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       146 (FALLTHRU)
;; bb 147 artificial_defs: { }
;; bb 147 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1171 1170 1172 147 [bb 147] NOTE_INSN_BASIC_BLOCK)
(insn 1172 1171 1173 147 (set (reg:SI 0 ax [orig:330 _244 ] [330])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1173 1172 1174 147 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:330 _244 ] [330])
            (const_int 192 [0xc0]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1174 1173 1175 147 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1199)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1199)
;;  succ:       148 (FALLTHRU)
;;              152
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 148, loop depth 0, maybe hot
;;  prev block 147, next block 149, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       147 (FALLTHRU)
;; bb 148 artificial_defs: { }
;; bb 148 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1175 1174 1176 148 [bb 148] NOTE_INSN_BASIC_BLOCK)
(insn 1176 1175 1177 148 (set (reg:SI 0 ax [orig:331 _245 ] [331])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1177 1176 1178 148 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:331 _245 ] [331])
            (const_int 194 [0xc2]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1178 1177 1179 148 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1199)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1199)
;;  succ:       149 (FALLTHRU)
;;              152
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 149, loop depth 0, maybe hot
;;  prev block 148, next block 150, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       148 (FALLTHRU)
;; bb 149 artificial_defs: { }
;; bb 149 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1179 1178 1180 149 [bb 149] NOTE_INSN_BASIC_BLOCK)
(insn 1180 1179 1181 149 (set (reg:SI 0 ax [orig:332 _246 ] [332])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1181 1180 1182 149 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:332 _246 ] [332])
            (const_int 196 [0xc4]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1182 1181 1183 149 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1199)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1199)
;;  succ:       150 (FALLTHRU)
;;              152
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 150, loop depth 0, maybe hot
;;  prev block 149, next block 151, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       149 (FALLTHRU)
;; bb 150 artificial_defs: { }
;; bb 150 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1183 1182 1184 150 [bb 150] NOTE_INSN_BASIC_BLOCK)
(insn 1184 1183 1185 150 (set (reg:SI 0 ax [orig:333 _247 ] [333])
        (mem/c:SI (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>) [1 rqstfld.kgtype+0 S4 A128])) "E2OUT.f":1 86 {*movsi_internal}
     (nil))
(insn 1185 1184 1186 150 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:333 _247 ] [333])
            (const_int 255 [0xff]))) "E2OUT.f":322 11 {*cmpsi_1}
     (nil))
(jump_insn 1186 1185 1187 150 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1199)
            (pc))) "E2OUT.f":322 682 {*jcc}
     (nil)
 -> 1199)
;;  succ:       151 (FALLTHRU)
;;              152
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 151, loop depth 0, maybe hot
;;  prev block 150, next block 152, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       143
;;              150 (FALLTHRU)
;; bb 151 artificial_defs: { }
;; bb 151 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1187 1186 1188 151 65 (nil) [1 uses])
(note 1188 1187 1189 151 [bb 151] NOTE_INSN_BASIC_BLOCK)
(insn 1189 1188 1190 151 (set (reg:DI 1 dx [597])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":327 85 {*movdi_internal}
     (nil))
(insn 1190 1189 1191 151 (set (reg:DI 0 ax [598])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":327 85 {*movdi_internal}
     (nil))
(insn 1191 1190 1192 151 (set (reg:DI 2 cx)
        (reg:DI 1 dx [597])) "E2OUT.f":327 85 {*movdi_internal}
     (nil))
(insn 1192 1191 1193 151 (set (reg:DI 1 dx)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":327 85 {*movdi_internal}
     (nil))
(insn 1193 1192 1194 151 (set (reg:DI 4 si)
        (reg:DI 0 ax [598])) "E2OUT.f":327 85 {*movdi_internal}
     (nil))
(insn 1194 1193 1195 151 (set (reg:DI 5 di)
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":327 85 {*movdi_internal}
     (nil))
(insn 1195 1194 1196 151 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":327 88 {*movqi_internal}
     (nil))
(call_insn 1196 1195 1423 151 (call (mem:QI (symbol_ref:DI ("interp3_") [flags 0x41]  <function_decl 0x7f830f8f8e00 interp3>) [0 interp3 S1 A8])
        (const_int 0 [0])) "E2OUT.f":327 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(jump_insn 1423 1196 1424 151 (set (pc)
        (label_ref 1254)) "E2OUT.f":327 683 {jump}
     (nil)
 -> 1254)
;;  succ:       161 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1424 1423 1199)
;; basic block 152, loop depth 0, maybe hot
;;  prev block 151, next block 153, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       144
;;              145
;;              146
;;              147
;;              148
;;              149
;;              150
;; bb 152 artificial_defs: { }
;; bb 152 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1199 1424 1200 152 66 (nil) [7 uses])
(note 1200 1199 1201 152 [bb 152] NOTE_INSN_BASIC_BLOCK)
(insn 1201 1200 1251 152 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":329 86 {*movsi_internal}
     (nil))
;;  succ:       153 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 153, loop depth 0, maybe hot
;;  prev block 152, next block 154, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       152 (FALLTHRU)
;;              157 [always] 
;; bb 153 artificial_defs: { }
;; bb 153 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1251 1201 1202 153 69 (nil) [1 uses])
(note 1202 1251 1203 153 [bb 153] NOTE_INSN_BASIC_BLOCK)
(insn 1203 1202 1204 153 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "E2OUT.f":329 11 {*cmpsi_1}
     (nil))
(insn 1204 1203 1205 153 (set (reg:QI 0 ax [599])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":329 678 {*setcc_qi}
     (nil))
(insn 1205 1204 1206 153 (set (reg:SI 0 ax [orig:410 _461 ] [410])
        (zero_extend:SI (reg:QI 0 ax [599]))) "E2OUT.f":329 140 {*zero_extendqisi2}
     (nil))
(insn 1206 1205 1207 153 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:410 _461 ] [410])
            (const_int 0 [0]))) "E2OUT.f":329 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1207 1206 1208 153 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1478)
            (pc))) "E2OUT.f":329 682 {*jcc}
     (nil)
 -> 1478)
;;  succ:       160
;;              154 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 154, loop depth 0, maybe hot
;;  prev block 153, next block 155, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       153 (FALLTHRU)
;; bb 154 artificial_defs: { }
;; bb 154 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(note 1208 1207 1209 154 [bb 154] NOTE_INSN_BASIC_BLOCK)
(insn 1209 1208 1245 154 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":330 86 {*movsi_internal}
     (nil))
;;  succ:       155 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 155, loop depth 0, maybe hot
;;  prev block 154, next block 156, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       154 (FALLTHRU)
;;              156 [always] 
;; bb 155 artificial_defs: { }
;; bb 155 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1245 1209 1210 155 68 (nil) [1 uses])
(note 1210 1245 1211 155 [bb 155] NOTE_INSN_BASIC_BLOCK)
(insn 1211 1210 1212 155 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
            (const_int 237 [0xed]))) "E2OUT.f":330 11 {*cmpsi_1}
     (nil))
(insn 1212 1211 1213 155 (set (reg:QI 0 ax [600])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "E2OUT.f":330 678 {*setcc_qi}
     (nil))
(insn 1213 1212 1214 155 (set (reg:SI 0 ax [orig:411 _463 ] [411])
        (zero_extend:SI (reg:QI 0 ax [600]))) "E2OUT.f":330 140 {*zero_extendqisi2}
     (nil))
(insn 1214 1213 1215 155 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:411 _463 ] [411])
            (const_int 0 [0]))) "E2OUT.f":330 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1215 1214 1216 155 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1481)
            (pc))) "E2OUT.f":330 682 {*jcc}
     (nil)
 -> 1481)
;;  succ:       157
;;              156 (FALLTHRU)
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

;; basic block 156, loop depth 0, maybe hot
;;  prev block 155, next block 157, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       155 (FALLTHRU)
;; bb 156 artificial_defs: { }
;; bb 156 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 3 [bx] 6 [bp] 7 [sp] 42 [r13]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 17 [flags] 21 [xmm0]
(note 1216 1215 1217 156 [bb 156] NOTE_INSN_BASIC_BLOCK)
(insn 1217 1216 1218 156 (set (reg:SI 0 ax [601])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":331 86 {*movsi_internal}
     (nil))
(insn 1218 1217 1219 156 (set (reg:DI 0 ax [orig:334 _248 ] [334])
        (sign_extend:DI (reg:SI 0 ax [601]))) "E2OUT.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1219 1218 1220 156 (parallel [
            (set (reg:DI 1 dx [orig:335 _249 ] [335])
                (mult:DI (reg:DI 0 ax [orig:334 _248 ] [334])
                    (const_int 237 [0xed])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":331 349 {*muldi3_1}
     (nil))
(insn 1220 1219 1221 156 (set (reg:SI 0 ax [602])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":331 86 {*movsi_internal}
     (nil))
(insn 1221 1220 1222 156 (set (reg:DI 0 ax [orig:336 _250 ] [336])
        (sign_extend:DI (reg:SI 0 ax [602]))) "E2OUT.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1222 1221 1504 156 (parallel [
            (set (reg:DI 0 ax [orig:337 _251 ] [337])
                (plus:DI (reg:DI 0 ax [orig:336 _250 ] [336])
                    (reg:DI 1 dx [orig:335 _249 ] [335])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":331 222 {*adddi_1}
     (nil))
(insn 1504 1222 1224 156 (set (reg:DI 2 cx [orig:338 _252 ] [338])
        (plus:DI (reg:DI 0 ax [orig:337 _251 ] [337])
            (const_int -238 [0xffffffffffffff12]))) "E2OUT.f":331 218 {*leadi}
     (nil))
(insn 1224 1504 1225 156 (set (reg:SI 0 ax [603])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":331 86 {*movsi_internal}
     (nil))
(insn 1225 1224 1226 156 (set (reg:DI 0 ax [orig:339 _253 ] [339])
        (sign_extend:DI (reg:SI 0 ax [603]))) "E2OUT.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1226 1225 1505 156 (parallel [
            (set (reg:DI 0 ax [orig:340 _254 ] [340])
                (mult:DI (reg:DI 0 ax [orig:339 _253 ] [339])
                    (reg:DI 3 bx [orig:381 stride.2_350 ] [381])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":331 349 {*muldi3_1}
     (nil))
(insn 1505 1226 1228 156 (set (reg:DI 1 dx [orig:341 _255 ] [341])
        (plus:DI (reg:DI 42 r13 [orig:387 offset.3_358 ] [387])
            (reg:DI 0 ax [orig:340 _254 ] [340]))) "E2OUT.f":331 218 {*leadi}
     (nil))
(insn 1228 1505 1229 156 (set (reg:SI 0 ax [604])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":331 86 {*movsi_internal}
     (nil))
(insn 1229 1228 1230 156 (set (reg:DI 0 ax [orig:342 _256 ] [342])
        (sign_extend:DI (reg:SI 0 ax [604]))) "E2OUT.f":331 149 {*extendsidi2_rex64}
     (nil))
(insn 1230 1229 1231 156 (parallel [
            (set (reg:DI 1 dx [orig:343 _257 ] [343])
                (plus:DI (reg:DI 1 dx [orig:341 _255 ] [341])
                    (reg:DI 0 ax [orig:342 _256 ] [342])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":331 222 {*adddi_1}
     (nil))
(insn 1231 1230 1232 156 (set (reg/f:DI 0 ax [605])
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":331 85 {*movdi_internal}
     (nil))
(insn 1232 1231 1233 156 (set (reg:SF 21 xmm0 [orig:344 _258 ] [344])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:338 _252 ] [338])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [605])) [6 hful S4 A32])) "E2OUT.f":331 131 {*movsf_internal}
     (nil))
(insn 1233 1232 1234 156 (set (reg/f:DI 0 ax [606])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":331 85 {*movdi_internal}
     (nil))
(insn 1234 1233 1235 156 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:343 _257 ] [343])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [606])) [6 *grid1_379(D) S4 A32])
        (reg:SF 21 xmm0 [orig:344 _258 ] [344])) "E2OUT.f":331 131 {*movsf_internal}
     (nil))
(insn 1235 1234 1236 156 (set (reg:SI 0 ax [607])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])) "E2OUT.f":332 86 {*movsi_internal}
     (nil))
(insn 1236 1235 1237 156 (set (reg:DI 0 ax [orig:345 _259 ] [345])
        (sign_extend:DI (reg:SI 0 ax [607]))) "E2OUT.f":332 149 {*extendsidi2_rex64}
     (nil))
(insn 1237 1236 1238 156 (parallel [
            (set (reg:DI 1 dx [orig:346 _260 ] [346])
                (mult:DI (reg:DI 0 ax [orig:345 _259 ] [345])
                    (const_int 4000 [0xfa0])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":332 349 {*muldi3_1}
     (nil))
(insn 1238 1237 1239 156 (set (reg:SI 0 ax [608])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])) "E2OUT.f":332 86 {*movsi_internal}
     (nil))
(insn 1239 1238 1240 156 (set (reg:DI 0 ax [orig:347 _261 ] [347])
        (sign_extend:DI (reg:SI 0 ax [608]))) "E2OUT.f":332 149 {*extendsidi2_rex64}
     (nil))
(insn 1240 1239 1506 156 (parallel [
            (set (reg:DI 0 ax [orig:348 _262 ] [348])
                (plus:DI (reg:DI 0 ax [orig:347 _261 ] [347])
                    (reg:DI 1 dx [orig:346 _260 ] [346])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":332 222 {*adddi_1}
     (nil))
(insn 1506 1240 1242 156 (set (reg:DI 1 dx [orig:349 _263 ] [349])
        (plus:DI (reg:DI 0 ax [orig:348 _262 ] [348])
            (const_int -4001 [0xfffffffffffff05f]))) "E2OUT.f":332 218 {*leadi}
     (nil))
(insn 1242 1506 1243 156 (set (reg/f:DI 0 ax [609])
        (symbol_ref:DI ("bitmap_") [flags 0x202]  <var_decl 0x7f831696bab0 bitmap>)) "E2OUT.f":332 85 {*movdi_internal}
     (nil))
(insn 1243 1242 1244 156 (set (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:349 _263 ] [349])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [609])) [1 bitmap.ibmap S4 A32])
        (const_int 1 [0x1])) "E2OUT.f":332 86 {*movsi_internal}
     (nil))
(insn 1244 1243 1425 156 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":330 221 {*addsi_1}
     (nil))
(jump_insn 1425 1244 1426 156 (set (pc)
        (label_ref 1245)) "E2OUT.f":330 683 {jump}
     (nil)
 -> 1245)
;;  succ:       155 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

(barrier 1426 1425 1481)
;; basic block 157, loop depth 0, maybe hot
;;  prev block 156, next block 158, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       155
;; bb 157 artificial_defs: { }
;; bb 157 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1481 1426 1480 157 87 (nil) [1 uses])
(note 1480 1481 1482 157 [bb 157] NOTE_INSN_BASIC_BLOCK)
(insn 1482 1480 1250 157 (const_int 0 [0]) "E2OUT.f":332 718 {nop}
     (nil))
(insn 1250 1482 1427 157 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":329 221 {*addsi_1}
     (nil))
(jump_insn 1427 1250 1428 157 (set (pc)
        (label_ref 1251)) "E2OUT.f":329 683 {jump}
     (nil)
 -> 1251)
;;  succ:       153 [always] 
;; lr  out 	 3 [bx] 6 [bp] 7 [sp] 20 [frame] 42 [r13]

(barrier 1428 1427 1447)
;; basic block 158, loop depth 0, maybe hot
;;  prev block 157, next block 159, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       84
;;              85 [always] 
;; bb 158 artificial_defs: { }
;; bb 158 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1447 1428 1446 158 77 (nil) [2 uses])
(note 1446 1447 1448 158 [bb 158] NOTE_INSN_BASIC_BLOCK)
(insn 1448 1446 1455 158 (const_int 0 [0]) "E2OUT.f":249 718 {nop}
     (nil))
(jump_insn 1455 1448 1456 158 (set (pc)
        (label_ref 1254)) 683 {jump}
     (nil)
 -> 1254)
;;  succ:       161 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1456 1455 1458)
;; basic block 159, loop depth 0, maybe hot
;;  prev block 158, next block 160, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       101
;;              106
;; bb 159 artificial_defs: { }
;; bb 159 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1458 1456 1457 159 80 (nil) [2 uses])
(note 1457 1458 1459 159 [bb 159] NOTE_INSN_BASIC_BLOCK)
(insn 1459 1457 1475 159 (const_int 0 [0]) "E2OUT.f":272 718 {nop}
     (nil))
(jump_insn 1475 1459 1476 159 (set (pc)
        (label_ref 1254)) 683 {jump}
     (nil)
 -> 1254)
;;  succ:       161 [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1476 1475 1478)
;; basic block 160, loop depth 0, maybe hot
;;  prev block 159, next block 161, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       153
;; bb 160 artificial_defs: { }
;; bb 160 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1478 1476 1477 160 86 (nil) [1 uses])
(note 1477 1478 1479 160 [bb 160] NOTE_INSN_BASIC_BLOCK)
(insn 1479 1477 1254 160 (const_int 0 [0]) "E2OUT.f":330 718 {nop}
     (nil))
;;  succ:       161 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 161, loop depth 0, maybe hot
;;  prev block 160, next block 162, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       158 [always] 
;;              151 [always] 
;;              140 [always] 
;;              160 [always]  (FALLTHRU)
;;              159 [always] 
;; bb 161 artificial_defs: { }
;; bb 161 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1254 1479 1255 161 50 (nil) [4 uses])
(note 1255 1254 1256 161 [bb 161] NOTE_INSN_BASIC_BLOCK)
(insn 1256 1255 1258 161 (set (reg/f:DI 0 ax [610])
        (symbol_ref:DI ("hful.4073") [flags 0x202]  <var_decl 0x7f830f917630 hful>)) "E2OUT.f":341 85 {*movdi_internal}
     (nil))
(insn 1258 1256 1260 161 (set (reg:DI 1 dx [612])
        (const_int 236052 [0x39a14])) "E2OUT.f":341 85 {*movdi_internal}
     (nil))
(insn 1260 1258 1261 161 (set (reg:SI 4 si)
        (const_int 0 [0])) "E2OUT.f":341 86 {*movsi_internal}
     (nil))
(insn 1261 1260 1262 161 (set (reg:DI 5 di)
        (reg:DI 0 ax [611])) "E2OUT.f":341 85 {*movdi_internal}
     (nil))
(call_insn 1262 1261 1265 161 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f830f7a5900 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "E2OUT.f":341 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1265 1262 1267 161 (set (reg/f:DI 0 ax [615])
        (symbol_ref:DI ("uful.4078") [flags 0x202]  <var_decl 0x7f830f917870 uful>)) "E2OUT.f":342 85 {*movdi_internal}
     (nil))
(insn 1267 1265 1269 161 (set (reg:DI 1 dx [617])
        (const_int 236052 [0x39a14])) "E2OUT.f":342 85 {*movdi_internal}
     (nil))
(insn 1269 1267 1270 161 (set (reg:SI 4 si)
        (const_int 0 [0])) "E2OUT.f":342 86 {*movsi_internal}
     (nil))
(insn 1270 1269 1271 161 (set (reg:DI 5 di)
        (reg:DI 0 ax [616])) "E2OUT.f":342 85 {*movdi_internal}
     (nil))
(call_insn 1271 1270 1274 161 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f830f7a5900 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "E2OUT.f":342 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 1274 1271 1276 161 (set (reg/f:DI 0 ax [620])
        (symbol_ref:DI ("vful.4080") [flags 0x202]  <var_decl 0x7f830f917900 vful>)) "E2OUT.f":343 85 {*movdi_internal}
     (nil))
(insn 1276 1274 1278 161 (set (reg:DI 1 dx [622])
        (const_int 236052 [0x39a14])) "E2OUT.f":343 85 {*movdi_internal}
     (nil))
(insn 1278 1276 1279 161 (set (reg:SI 4 si)
        (const_int 0 [0])) "E2OUT.f":343 86 {*movsi_internal}
     (nil))
(insn 1279 1278 1280 161 (set (reg:DI 5 di)
        (reg:DI 0 ax [621])) "E2OUT.f":343 85 {*movdi_internal}
     (nil))
(call_insn 1280 1279 1435 161 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7f830f7a5900 __builtin_memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) "E2OUT.f":343 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(jump_insn 1435 1280 1436 161 (set (pc)
        (label_ref 1283)) 683 {jump}
     (nil)
 -> 1283)
;;  succ:       163
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1436 1435 1438)
;; basic block 162, loop depth 0, maybe hot
;;  prev block 161, next block 163, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       31
;;              38 [always] 
;; bb 162 artificial_defs: { }
;; bb 162 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	
(code_label 1438 1436 1437 162 74 (nil) [2 uses])
(note 1437 1438 1439 162 [bb 162] NOTE_INSN_BASIC_BLOCK)
(insn 1439 1437 1283 162 (const_int 0 [0]) "E2OUT.f":161 718 {nop}
     (nil))
;;  succ:       163 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 163, loop depth 0, maybe hot
;;  prev block 162, next block 164, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       162 [always]  (FALLTHRU)
;;              161
;; bb 163 artificial_defs: { }
;; bb 163 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1283 1439 1284 163 22 (nil) [1 uses])
(note 1284 1283 1285 163 [bb 163] NOTE_INSN_BASIC_BLOCK)
(insn 1285 1284 1286 163 (set (reg/f:DI 0 ax [625])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":349 85 {*movdi_internal}
     (nil))
(insn 1286 1285 1287 163 (set (reg:SI 0 ax [orig:350 _264 ] [350])
        (mem:SI (reg/f:DI 0 ax [625]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":349 86 {*movsi_internal}
     (nil))
(insn 1287 1286 1288 163 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:350 _264 ] [350])
            (const_int 0 [0]))) "E2OUT.f":349 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1288 1287 1289 163 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1323)
            (pc))) "E2OUT.f":349 682 {*jcc}
     (nil)
 -> 1323)
;;  succ:       164 (FALLTHRU)
;;              167
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 164, loop depth 0, maybe hot
;;  prev block 163, next block 165, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       163 (FALLTHRU)
;; bb 164 artificial_defs: { }
;; bb 164 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1289 1288 1290 164 [bb 164] NOTE_INSN_BASIC_BLOCK)
(insn 1290 1289 1291 164 (set (reg/f:DI 0 ax [626])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":350 85 {*movdi_internal}
     (nil))
(insn 1291 1290 1292 164 (set (reg:SI 0 ax [orig:351 _265 ] [351])
        (mem:SI (reg/f:DI 0 ax [626]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":350 86 {*movsi_internal}
     (nil))
(insn 1292 1291 1293 164 (set (reg:DI 0 ax [orig:352 _266 ] [352])
        (sign_extend:DI (reg:SI 0 ax [orig:351 _265 ] [351]))) "E2OUT.f":350 149 {*extendsidi2_rex64}
     (nil))
(insn 1293 1292 1294 164 (parallel [
            (set (reg:DI 0 ax [orig:353 _267 ] [353])
                (plus:DI (reg:DI 0 ax [orig:352 _266 ] [352])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":350 222 {*adddi_1}
     (nil))
(insn 1294 1293 1295 164 (parallel [
            (set (reg:DI 0 ax [627])
                (plus:DI (reg:DI 0 ax [orig:353 _267 ] [353])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":350 222 {*adddi_1}
     (nil))
(insn 1295 1294 1296 164 (set (reg:SI 0 ax [orig:354 _268 ] [354])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [627])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":350 86 {*movsi_internal}
     (nil))
(insn 1296 1295 1297 164 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:354 _268 ] [354])
            (const_int 0 [0]))) "E2OUT.f":350 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1297 1296 1298 164 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1323)
            (pc))) "E2OUT.f":350 682 {*jcc}
     (nil)
 -> 1323)
;;  succ:       165 (FALLTHRU)
;;              167
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 165, loop depth 0, maybe hot
;;  prev block 164, next block 166, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       164 (FALLTHRU)
;; bb 165 artificial_defs: { }
;; bb 165 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1298 1297 1299 165 [bb 165] NOTE_INSN_BASIC_BLOCK)
(insn 1299 1298 1300 165 (set (reg/f:DI 0 ax [628])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 itag1+0 S8 A64])) "E2OUT.f":351 85 {*movdi_internal}
     (nil))
(insn 1300 1299 1301 165 (set (reg:SI 0 ax [orig:355 _269 ] [355])
        (mem:SI (reg/f:DI 0 ax [628]) [1 *itag1_393(D)+0 S4 A32])) "E2OUT.f":351 86 {*movsi_internal}
     (nil))
(insn 1301 1300 1302 165 (set (reg:DI 0 ax [orig:356 _270 ] [356])
        (sign_extend:DI (reg:SI 0 ax [orig:355 _269 ] [355]))) "E2OUT.f":351 149 {*extendsidi2_rex64}
     (nil))
(insn 1302 1301 1303 165 (parallel [
            (set (reg:DI 0 ax [orig:357 _271 ] [357])
                (plus:DI (reg:DI 0 ax [orig:356 _270 ] [356])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":351 222 {*adddi_1}
     (nil))
(insn 1303 1302 1304 165 (parallel [
            (set (reg:DI 0 ax [629])
                (plus:DI (reg:DI 0 ax [orig:357 _271 ] [357])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":351 222 {*adddi_1}
     (nil))
(insn 1304 1303 1305 165 (set (reg:SI 0 ax [orig:358 _272 ] [358])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [629])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":351 86 {*movsi_internal}
     (nil))
(insn 1305 1304 1306 165 (set (reg:DI 0 ax [orig:359 _273 ] [359])
        (sign_extend:DI (reg:SI 0 ax [orig:358 _272 ] [358]))) "E2OUT.f":351 149 {*extendsidi2_rex64}
     (nil))
(insn 1306 1305 1307 165 (parallel [
            (set (reg:DI 0 ax [orig:360 _274 ] [360])
                (plus:DI (reg:DI 0 ax [orig:359 _273 ] [359])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":351 222 {*adddi_1}
     (nil))
(insn 1307 1306 1308 165 (parallel [
            (set (reg:DI 0 ax [630])
                (plus:DI (reg:DI 0 ax [orig:360 _274 ] [360])
                    (const_int 1204 [0x4b4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":351 222 {*adddi_1}
     (nil))
(insn 1308 1307 1309 165 (set (reg:SI 0 ax [orig:361 _275 ] [361])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [630])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismout S4 A32])) "E2OUT.f":351 86 {*movsi_internal}
     (nil))
(insn 1309 1308 1310 165 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:361 _275 ] [361])) "E2OUT.f":351 86 {*movsi_internal}
     (nil))
(insn 1310 1309 1311 165 (set (reg:SI 0 ax [orig:362 ismth.29_276 ] [362])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":352 86 {*movsi_internal}
     (nil))
(insn 1311 1310 1312 165 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:362 ismth.29_276 ] [362])
            (const_int 0 [0]))) "E2OUT.f":352 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1312 1311 1313 165 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1323)
            (pc))) "E2OUT.f":352 682 {*jcc}
     (nil)
 -> 1323)
;;  succ:       166 (FALLTHRU)
;;              167
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 166, loop depth 0, maybe hot
;;  prev block 165, next block 167, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       165 (FALLTHRU)
;; bb 166 artificial_defs: { }
;; bb 166 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1313 1312 1503 166 [bb 166] NOTE_INSN_BASIC_BLOCK)
(insn 1503 1313 1315 166 (set (reg:DI 2 cx [631])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":352 218 {*leadi}
     (nil))
(insn 1315 1503 1316 166 (set (reg:DI 1 dx [632])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [4 grid1+0 S8 A64])) "E2OUT.f":352 85 {*movdi_internal}
     (nil))
(insn 1316 1315 1319 166 (set (reg:DI 0 ax [633])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":352 85 {*movdi_internal}
     (nil))
(insn 1319 1316 1320 166 (set (reg:DI 4 si)
        (reg:DI 0 ax [633])) "E2OUT.f":352 85 {*movdi_internal}
     (nil))
(insn 1320 1319 1321 166 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":352 85 {*movdi_internal}
     (nil))
(insn 1321 1320 1322 166 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":352 88 {*movqi_internal}
     (nil))
(call_insn 1322 1321 1323 166 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":352 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       167 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 167, loop depth 0, maybe hot
;;  prev block 166, next block 168, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       163
;;              166 (FALLTHRU)
;;              164
;;              165
;; bb 167 artificial_defs: { }
;; bb 167 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(code_label 1323 1322 1324 167 70 (nil) [3 uses])
(note 1324 1323 1325 167 [bb 167] NOTE_INSN_BASIC_BLOCK)
(insn 1325 1324 1326 167 (set (reg/f:DI 0 ax [634])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":356 85 {*movdi_internal}
     (nil))
(insn 1326 1325 1327 167 (set (reg:SI 0 ax [orig:363 _277 ] [363])
        (mem:SI (reg/f:DI 0 ax [634]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":356 86 {*movsi_internal}
     (nil))
(insn 1327 1326 1328 167 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:363 _277 ] [363])
            (const_int 0 [0]))) "E2OUT.f":356 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1328 1327 1329 167 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1363)
            (pc))) "E2OUT.f":356 682 {*jcc}
     (nil)
 -> 1363)
;;  succ:       168 (FALLTHRU)
;;              171
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 168, loop depth 0, maybe hot
;;  prev block 167, next block 169, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       167 (FALLTHRU)
;; bb 168 artificial_defs: { }
;; bb 168 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1329 1328 1330 168 [bb 168] NOTE_INSN_BASIC_BLOCK)
(insn 1330 1329 1331 168 (set (reg/f:DI 0 ax [635])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":357 85 {*movdi_internal}
     (nil))
(insn 1331 1330 1332 168 (set (reg:SI 0 ax [orig:364 _278 ] [364])
        (mem:SI (reg/f:DI 0 ax [635]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":357 86 {*movsi_internal}
     (nil))
(insn 1332 1331 1333 168 (set (reg:DI 0 ax [orig:365 _279 ] [365])
        (sign_extend:DI (reg:SI 0 ax [orig:364 _278 ] [364]))) "E2OUT.f":357 149 {*extendsidi2_rex64}
     (nil))
(insn 1333 1332 1334 168 (parallel [
            (set (reg:DI 0 ax [orig:366 _280 ] [366])
                (plus:DI (reg:DI 0 ax [orig:365 _279 ] [365])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":357 222 {*adddi_1}
     (nil))
(insn 1334 1333 1335 168 (parallel [
            (set (reg:DI 0 ax [636])
                (plus:DI (reg:DI 0 ax [orig:366 _280 ] [366])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":357 222 {*adddi_1}
     (nil))
(insn 1335 1334 1336 168 (set (reg:SI 0 ax [orig:367 _281 ] [367])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [636])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":357 86 {*movsi_internal}
     (nil))
(insn 1336 1335 1337 168 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:367 _281 ] [367])
            (const_int 0 [0]))) "E2OUT.f":357 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1337 1336 1338 168 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1363)
            (pc))) "E2OUT.f":357 682 {*jcc}
     (nil)
 -> 1363)
;;  succ:       169 (FALLTHRU)
;;              171
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 169, loop depth 0, maybe hot
;;  prev block 168, next block 170, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       168 (FALLTHRU)
;; bb 169 artificial_defs: { }
;; bb 169 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 17 [flags]
(note 1338 1337 1339 169 [bb 169] NOTE_INSN_BASIC_BLOCK)
(insn 1339 1338 1340 169 (set (reg/f:DI 0 ax [637])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 itag2+0 S8 A64])) "E2OUT.f":358 85 {*movdi_internal}
     (nil))
(insn 1340 1339 1341 169 (set (reg:SI 0 ax [orig:368 _282 ] [368])
        (mem:SI (reg/f:DI 0 ax [637]) [1 *itag2_397(D)+0 S4 A32])) "E2OUT.f":358 86 {*movsi_internal}
     (nil))
(insn 1341 1340 1342 169 (set (reg:DI 0 ax [orig:369 _283 ] [369])
        (sign_extend:DI (reg:SI 0 ax [orig:368 _282 ] [368]))) "E2OUT.f":358 149 {*extendsidi2_rex64}
     (nil))
(insn 1342 1341 1343 169 (parallel [
            (set (reg:DI 0 ax [orig:370 _284 ] [370])
                (plus:DI (reg:DI 0 ax [orig:369 _283 ] [369])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":358 222 {*adddi_1}
     (nil))
(insn 1343 1342 1344 169 (parallel [
            (set (reg:DI 0 ax [638])
                (plus:DI (reg:DI 0 ax [orig:370 _284 ] [370])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":358 222 {*adddi_1}
     (nil))
(insn 1344 1343 1345 169 (set (reg:SI 0 ax [orig:371 _285 ] [371])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [638])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.iget S4 A32])) "E2OUT.f":358 86 {*movsi_internal}
     (nil))
(insn 1345 1344 1346 169 (set (reg:DI 0 ax [orig:372 _286 ] [372])
        (sign_extend:DI (reg:SI 0 ax [orig:371 _285 ] [371]))) "E2OUT.f":358 149 {*extendsidi2_rex64}
     (nil))
(insn 1346 1345 1347 169 (parallel [
            (set (reg:DI 0 ax [orig:373 _287 ] [373])
                (plus:DI (reg:DI 0 ax [orig:372 _286 ] [372])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":358 222 {*adddi_1}
     (nil))
(insn 1347 1346 1348 169 (parallel [
            (set (reg:DI 0 ax [639])
                (plus:DI (reg:DI 0 ax [orig:373 _287 ] [373])
                    (const_int 1204 [0x4b4])))
            (clobber (reg:CC 17 flags))
        ]) "E2OUT.f":358 222 {*adddi_1}
     (nil))
(insn 1348 1347 1349 169 (set (reg:SI 0 ax [orig:374 _288 ] [374])
        (mem:SI (plus:DI (mult:DI (reg:DI 0 ax [639])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("rqstfld_") [flags 0x2]  <var_decl 0x7f830f90f480 rqstfld>)) [1 rqstfld.ismout S4 A32])) "E2OUT.f":358 86 {*movsi_internal}
     (nil))
(insn 1349 1348 1350 169 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])
        (reg:SI 0 ax [orig:374 _288 ] [374])) "E2OUT.f":358 86 {*movsi_internal}
     (nil))
(insn 1350 1349 1351 169 (set (reg:SI 0 ax [orig:375 ismth.30_289 ] [375])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 ismth+0 S4 A32])) "E2OUT.f":359 86 {*movsi_internal}
     (nil))
(insn 1351 1350 1352 169 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:375 ismth.30_289 ] [375])
            (const_int 0 [0]))) "E2OUT.f":359 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1352 1351 1353 169 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1363)
            (pc))) "E2OUT.f":359 682 {*jcc}
     (nil)
 -> 1363)
;;  succ:       170 (FALLTHRU)
;;              171
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 170, loop depth 0, maybe hot
;;  prev block 169, next block 171, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       169 (FALLTHRU)
;; bb 170 artificial_defs: { }
;; bb 170 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(note 1353 1352 1502 170 [bb 170] NOTE_INSN_BASIC_BLOCK)
(insn 1502 1353 1355 170 (set (reg:DI 2 cx [640])
        (plus:DI (reg/f:DI 6 bp)
            (const_int -76 [0xffffffffffffffb4]))) "E2OUT.f":359 218 {*leadi}
     (nil))
(insn 1355 1502 1356 170 (set (reg:DI 1 dx [641])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -128 [0xffffffffffffff80])) [4 grid2+0 S8 A64])) "E2OUT.f":359 85 {*movdi_internal}
     (nil))
(insn 1356 1355 1359 170 (set (reg:DI 0 ax [642])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [3 jmout+0 S8 A64])) "E2OUT.f":359 85 {*movdi_internal}
     (nil))
(insn 1359 1356 1360 170 (set (reg:DI 4 si)
        (reg:DI 0 ax [642])) "E2OUT.f":359 85 {*movdi_internal}
     (nil))
(insn 1360 1359 1361 170 (set (reg:DI 5 di)
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 imout+0 S8 A64])) "E2OUT.f":359 85 {*movdi_internal}
     (nil))
(insn 1361 1360 1362 170 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":359 88 {*movqi_internal}
     (nil))
(call_insn 1362 1361 1363 170 (call (mem:QI (symbol_ref:DI ("filter_") [flags 0x41]  <function_decl 0x7f830f8f8c00 filter>) [0 filter S1 A8])
        (const_int 0 [0])) "E2OUT.f":359 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
;;  succ:       171 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

;; basic block 171, loop depth 0, maybe hot
;;  prev block 170, next block 1, flags: (REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              170 (FALLTHRU)
;;              167
;;              169
;;              168
;; bb 171 artificial_defs: { }
;; bb 171 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
(code_label 1363 1362 1364 171 2 (nil) [4 uses])
(note 1364 1363 1365 171 [bb 171] NOTE_INSN_BASIC_BLOCK)
(insn 1365 1364 1366 171 (set (reg:DI 0 ax [643])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [4 egrid1+0 S8 A64])) "E2OUT.f":385 85 {*movdi_internal}
     (nil))
(insn 1366 1365 1367 171 (set (reg:DI 5 di)
        (reg:DI 0 ax [643])) "E2OUT.f":385 85 {*movdi_internal}
     (nil))
(insn 1367 1366 1368 171 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":385 88 {*movqi_internal}
     (nil))
(call_insn 1368 1367 1369 171 (call (mem:QI (symbol_ref:DI ("dist_") [flags 0x41]  <function_decl 0x7f830f927400 dist>) [0 dist S1 A8])
        (const_int 0 [0])) "E2OUT.f":385 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 1369 1368 1370 171 (set (reg:DI 0 ax [644])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [4 egrid2+0 S8 A64])) "E2OUT.f":386 85 {*movdi_internal}
     (nil))
(insn 1370 1369 1371 171 (set (reg:DI 5 di)
        (reg:DI 0 ax [644])) "E2OUT.f":386 85 {*movdi_internal}
     (nil))
(insn 1371 1370 1372 171 (set (reg:QI 0 ax)
        (const_int 0 [0])) "E2OUT.f":386 88 {*movqi_internal}
     (nil))
(call_insn 1372 1371 1378 171 (call (mem:QI (symbol_ref:DI ("dist_") [flags 0x41]  <function_decl 0x7f830f927400 dist>) [0 dist S1 A8])
        (const_int 0 [0])) "E2OUT.f":386 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 1378 1372 1546 171 (const_int 0 [0]) "E2OUT.f":391 718 {nop}
     (nil))
(note 1546 1378 1547 171 NOTE_INSN_EPILOGUE_BEG)
(insn 1547 1546 1548 171 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])))
            (clobber (reg:CC 17 flags))
            (clobber (mem:BLK (scratch) [0  A8]))
        ]) "E2OUT.f":392 -1
     (nil))
(insn 1548 1547 1549 171 (set (reg:DI 3 bx)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "E2OUT.f":392 -1
     (nil))
(insn 1549 1548 1550 171 (set (reg:DI 41 r12)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "E2OUT.f":392 -1
     (nil))
(insn 1550 1549 1551 171 (set (reg:DI 42 r13)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "E2OUT.f":392 -1
     (nil))
(insn 1551 1550 1552 171 (set (reg:DI 43 r14)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "E2OUT.f":392 -1
     (nil))
(insn/f 1552 1551 1553 171 (set (reg/f:DI 6 bp)
        (mem:DI (post_inc:DI (reg/f:DI 7 sp)) [0  S8 A8])) "E2OUT.f":392 -1
     (expr_list:REG_CFA_DEF_CFA (plus:DI (reg/f:DI 7 sp)
            (const_int 8 [0x8]))
        (nil)))
(jump_insn 1553 1552 1554 171 (simple_return) "E2OUT.f":392 -1
     (nil)
 -> simple_return)
;;  succ:       EXIT [always] 
;; lr  out 	 6 [bp] 7 [sp] 20 [frame]

(barrier 1554 1553 1483)
(note 1483 1554 0 NOTE_INSN_DELETED)
