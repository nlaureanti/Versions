
;; Function calcwi (calcwi_, funcdef_no=0, decl_uid=3770, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=128, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=96, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 7:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 8:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 9:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 10:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 11:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 19:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 22:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 27:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 28:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 29:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 31:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 32
	 Choosing alt 0 in insn 32:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 33:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 34:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 35:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 36:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 37:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 43:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 57:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 59:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 63:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 67:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 71:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 76:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 77:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 80
	 Choosing alt 0 in insn 80:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 81:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 82:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 83:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 86:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=592 from oldreg=408, assigning class GENERAL_REGS to r592
   86: {r592:SI=r592:SI-r97:SI;clobber flags:CC;}
      REG_DEAD r408:SI
      REG_DEAD r97:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  814: r592:SI=r408:SI
    Inserting insn reload after:
  815: r409:SI=r592:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 87:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 89:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 90:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 93:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 94:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 97
	 Choosing alt 0 in insn 97:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 98:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 99:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 100:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 101:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 102:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 104:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 105:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 107
	 Choosing alt 0 in insn 107:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 108:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 109:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 110:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 111
	 Choosing alt 1 in insn 111:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 112:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 115:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 116:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 117:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 118:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 122
	 Choosing alt 0 in insn 122:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 123:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 124:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 125:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 126:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 127:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 130:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 133:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 137
	 Choosing alt 0 in insn 137:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 138:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 139:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 140:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 141:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 142:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 145:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 148:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 152
	 Choosing alt 0 in insn 152:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 153:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 154:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 155:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 156:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 157:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 158:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 159:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 161:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 162:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 163:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 164:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 165:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 168:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 171
	 Choosing alt 0 in insn 171:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 175:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 178:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 179:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 181:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 182:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 184:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 185
	 Choosing alt 0 in insn 185:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 186:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 187:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 188:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 189:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 190:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 192:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 193:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 194:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 195:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 196:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 197:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 198:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 199
	 Choosing alt 1 in insn 199:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 200:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 201:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 202:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 203
	 Choosing alt 1 in insn 203:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
	 Choosing alt 2 in insn 204:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=593 from oldreg=153, assigning class SSE_REGS to r593
  204: r593:SF=r593:SF/[frame:DI-0x40]
      REG_DEAD r153:SF
    Inserting insn reload before:
  816: r593:SF=r153:SF
    Inserting insn reload after:
  817: r154:SF=r593:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 817:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 205:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 206:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 207:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 208:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 209:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 210:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 212
	 Choosing alt 1 in insn 212:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 213:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 214:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 215:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 217:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 221
	 Choosing alt 1 in insn 221:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=594 from oldreg=154, assigning class SSE_REGS to r594
      Making reload reg 594 for reg 154 optional
  221: r460:SF=r162:SF*r594:SF
      REG_DEAD r162:SF
      REG_DEAD r154:SF
    Inserting insn reload before:
  818: r594:SF=r154:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 818:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 222:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 223:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 224:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 225:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 228:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 231
	 Choosing alt 0 in insn 231:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 235:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 238:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 239
	 Choosing alt 1 in insn 239:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 240:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 241
	 Choosing alt 1 in insn 241:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 244:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 245:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 248
	 Choosing alt 0 in insn 248:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 249:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 250:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 251:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 252:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 253:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 254:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 255:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 257:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 258
	 Choosing alt 0 in insn 258:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 259:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 260:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 261:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 262:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 264:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 265
	 Choosing alt 0 in insn 265:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 266:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 267:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 268:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 269:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 270:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 272:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 273:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 275:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 276
	 Choosing alt 0 in insn 276:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 277:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 278:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 279:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 280:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 281:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 282:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 284
	 Choosing alt 1 in insn 284:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 285:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 286
	 Choosing alt 1 in insn 286:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 287:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 288:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 289:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 295:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 296:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 297:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 299:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 300
	 Choosing alt 0 in insn 300:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 301:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 302:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 303:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 304:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=595 from oldreg=200, assigning class SSE_REGS to r595
  304: r595:SF=r595:SF*[frame:DI-0x4c]
      REG_DEAD r200:SF
    Inserting insn reload before:
  819: r595:SF=r200:SF
    Inserting insn reload after:
  820: r201:SF=r595:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 305:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 306:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 307:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 308:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 309:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 310:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 313:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 314:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 321:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 322:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 323:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 325:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 326:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 327:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 329:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 330
	 Choosing alt 0 in insn 330:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 331:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 332:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 333:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 334:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 339:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 340:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 341:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 342:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 343:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 344:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 345:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 346:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 347:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 348
	 Choosing alt 0 in insn 348:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 349:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 350:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 351:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 352:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 357:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 358:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 359:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 365:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 366:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 367:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 368:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 369:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 370:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 371:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 372:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 373:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 374
	 Choosing alt 0 in insn 374:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 375:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 376:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 377:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 378:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 381:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 382:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 388:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 389:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 395:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 396:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 397:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 398:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 399:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 400:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 401:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 402:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 403:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 404
	 Choosing alt 0 in insn 404:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 405:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 406:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 407:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 408:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 409:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 410:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 411:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 412:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 413:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 414:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 415:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 416:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 417:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 418:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 419
	 Choosing alt 0 in insn 419:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 420:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 421:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 422:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 423:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 424:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 426:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 427:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 433:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 434:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 440:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 441:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 442:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 443:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 444:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 445:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 446:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 447:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 448:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 449
	 Choosing alt 0 in insn 449:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 450:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 451:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 452:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 453:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 456:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 462:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 468:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 474:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 475:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 476:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 478:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 479:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 480:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 481:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 484:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 486:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 487:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 488:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 489:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 492:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 493:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 494:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 495:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 496:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 497
	 Choosing alt 0 in insn 497:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 498:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 499:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 500:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 501:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 502:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 503:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 504:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 505:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 506:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 507
	 Choosing alt 0 in insn 507:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 508:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 509:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 510:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 511:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 512:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 518:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 524:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 526:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 527:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 528:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 532:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 533:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 534:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 536:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 537:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 538:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 539:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 542:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 544:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 545:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 546:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 547:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 550:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 551:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 552:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 553:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 554:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 555:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 556:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 557:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 558:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 559
	 Choosing alt 0 in insn 559:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 560:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 561:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 562:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 563:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 564:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 565:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 566:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 567:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 568:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 569:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 570:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 571:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 572:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 573
	 Choosing alt 0 in insn 573:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 574:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 575:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 576:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 577:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 579:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 580:  (0) Yv  (1) Yv  (2) 0 {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 581:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 582:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 583:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 584:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 585:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 586:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 587
	 Choosing alt 0 in insn 587:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 588:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 589:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 590:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 591:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 592:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 593:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 594:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 595:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 596:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 597:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 598:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 599:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 600
	 Choosing alt 0 in insn 600:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 601:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 602:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 603:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 604:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 605:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 606:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 607:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 608:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 609:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 610:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 611:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 612:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 613
	 Choosing alt 0 in insn 613:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 614:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 615:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 616:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 617:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 618:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 620:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 621:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 622:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 623:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 624:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 625:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 626:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 627:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 628:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 629:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 630
	 Choosing alt 0 in insn 630:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 631:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 632:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 633:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 634:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 635
	 Choosing alt 1 in insn 635:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 637:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=596 from oldreg=320, assigning class SSE_REGS to r596
  637: r596:SF=r596:SF*[frame:DI-0x54]
      REG_DEAD r320:SF
    Inserting insn reload before:
  821: r596:SF=r320:SF
    Inserting insn reload after:
  822: r321:SF=r596:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 638:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 639
	 Choosing alt 1 in insn 639:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 640:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 641:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 642:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 643:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 644:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 645
	 Choosing alt 0 in insn 645:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 646:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 647
	 Choosing alt 1 in insn 647:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 648:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 649:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 650:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 651:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 652:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 653:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 654:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 655
	 Choosing alt 0 in insn 655:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 656:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 657:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 658:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 659:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 660:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 661:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 662:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 663:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 664:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 665:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 666:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 667:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 668
	 Choosing alt 0 in insn 668:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 669:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 670:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 671:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 672:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 673:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 674:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 675:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 676:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 677:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 678:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 679:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 680:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 681
	 Choosing alt 0 in insn 681:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 682:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 683:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 684:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 686
	 Choosing alt 1 in insn 686:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 687:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 688:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 689:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 690:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 691:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 692:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 693:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 694:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 695:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 696
	 Choosing alt 0 in insn 696:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 697:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 698:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 699:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 700:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 701
	 Choosing alt 1 in insn 701:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 703:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=597 from oldreg=365, assigning class SSE_REGS to r597
  703: r597:SF=r597:SF*[frame:DI-0x54]
      REG_DEAD r365:SF
    Inserting insn reload before:
  823: r597:SF=r365:SF
    Inserting insn reload after:
  824: r366:SF=r597:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 704:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 705
	 Choosing alt 1 in insn 705:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 706:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 707:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 708:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 709:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 710:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 711
	 Choosing alt 0 in insn 711:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 712:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 713
	 Choosing alt 1 in insn 713:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 714:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 715:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 716:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 722:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 728:  (0) rm  (1) 0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 51
EBB 7
EBB 50
EBB 8
EBB 9 10
EBB 11 12
EBB 13 14 15
EBB 16 17
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=598 from oldreg=154, assigning class SSE_REGS to inheritance r598
    Original reg change 154->598 (bb16):
  817: r598:SF=r593:SF
    Add original<-inheritance after:
  825: r154:SF=r598:SF

    Inheritance reuse change 154->598 (bb16):
  818: r594:SF=r598:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   825: r154:SF=r598:SF
deleting insn with uid = 825.
EBB 18 19 20
EBB 21
EBB 22
EBB 23 24
EBB 25 26 27 28 29 30
EBB 31
EBB 54
EBB 32
EBB 53
EBB 33
EBB 52
EBB 34
EBB 35 36
EBB 37 38
EBB 56
EBB 39
EBB 55
EBB 40
EBB 41 42
EBB 43 44
EBB 45 46
EBB 59
EBB 47
EBB 58
EBB 48
EBB 57
EBB 49

********** Pseudo live ranges #1: **********

  BB 49
   Insn 759: point = 0, n_alt = -1
  BB 57
   Insn 806: point = 0, n_alt = -1
  BB 41
   Insn 530: point = 0, n_alt = -1
   Insn 529: point = 0, n_alt = 0
   Insn 528: point = 1, n_alt = 0
   Insn 527: point = 3, n_alt = 0
   Insn 526: point = 4, n_alt = 0
  BB 48
   Insn 781: point = 4, n_alt = -1
   Insn 728: point = 4, n_alt = 1
  BB 58
   Insn 809: point = 4, n_alt = -1
  BB 43
   Insn 540: point = 4, n_alt = -1
   Insn 539: point = 4, n_alt = 0
   Insn 538: point = 5, n_alt = 0
   Insn 537: point = 7, n_alt = 0
   Insn 536: point = 8, n_alt = 0
  BB 47
   Insn 779: point = 9, n_alt = -1
   Insn 722: point = 9, n_alt = 1
  BB 59
   Insn 812: point = 10, n_alt = -1
  BB 45
   Insn 548: point = 11, n_alt = -1
   Insn 547: point = 11, n_alt = 0
   Insn 546: point = 12, n_alt = 0
   Insn 545: point = 14, n_alt = 0
   Insn 544: point = 15, n_alt = 0
  BB 46
   Insn 777: point = 16, n_alt = -1
   Insn 716: point = 16, n_alt = 1
   Insn 715: point = 16, n_alt = 8
   Insn 714: point = 17, n_alt = 3
   Insn 713: point = 18, n_alt = 1
   Insn 712: point = 20, n_alt = 3
   Insn 711: point = 22, n_alt = 0
   Insn 710: point = 24, n_alt = 1
   Insn 709: point = 26, n_alt = 0
   Insn 708: point = 27, n_alt = 0
   Insn 707: point = 29, n_alt = 1
   Insn 706: point = 31, n_alt = 0
   Insn 705: point = 32, n_alt = 1
   Insn 704: point = 34, n_alt = 7
   Insn 824: point = 35, n_alt = -2
	Hard reg 23 is preferable by r597 with profit 1000
   Insn 703: point = 37, n_alt = 1
   Insn 823: point = 37, n_alt = -2
	Hard reg 23 is preferable by r597 with profit 1000
	Hard reg 21 is preferable by r597 with profit 1000
   Insn 702: point = 39, n_alt = -2
   Insn 701: point = 41, n_alt = 1
   Insn 700: point = 43, n_alt = 7
   Insn 699: point = 45, n_alt = 0
   Insn 698: point = 47, n_alt = 4
   Insn 697: point = 48, n_alt = 3
   Insn 696: point = 50, n_alt = 0
   Insn 695: point = 52, n_alt = 1
   Insn 694: point = 54, n_alt = 0
   Insn 693: point = 55, n_alt = 0
   Insn 692: point = 57, n_alt = 0
   Insn 691: point = 59, n_alt = 1
   Insn 690: point = 61, n_alt = 0
   Insn 689: point = 62, n_alt = 1
   Insn 688: point = 64, n_alt = 1
   Insn 687: point = 66, n_alt = 0
   Insn 686: point = 67, n_alt = 1
   Insn 685: point = 69, n_alt = -2
   Insn 684: point = 71, n_alt = 7
   Insn 683: point = 73, n_alt = 4
   Insn 682: point = 74, n_alt = 3
   Insn 681: point = 76, n_alt = 0
   Insn 680: point = 78, n_alt = 1
   Insn 679: point = 80, n_alt = 0
   Insn 678: point = 81, n_alt = 0
   Insn 677: point = 83, n_alt = 0
   Insn 676: point = 85, n_alt = 1
   Insn 675: point = 87, n_alt = 0
   Insn 674: point = 88, n_alt = 1
   Insn 673: point = 90, n_alt = 1
   Insn 672: point = 92, n_alt = 0
   Insn 671: point = 93, n_alt = 7
   Insn 670: point = 95, n_alt = 4
   Insn 669: point = 96, n_alt = 3
   Insn 668: point = 98, n_alt = 0
   Insn 667: point = 100, n_alt = 1
   Insn 666: point = 102, n_alt = 0
   Insn 665: point = 103, n_alt = 0
   Insn 664: point = 105, n_alt = 0
   Insn 663: point = 107, n_alt = 1
   Insn 662: point = 109, n_alt = 0
   Insn 661: point = 110, n_alt = 1
   Insn 660: point = 112, n_alt = 1
   Insn 659: point = 114, n_alt = 0
   Insn 658: point = 115, n_alt = 7
   Insn 657: point = 117, n_alt = 3
   Insn 656: point = 118, n_alt = 3
   Insn 655: point = 120, n_alt = 0
   Insn 654: point = 122, n_alt = 1
   Insn 653: point = 124, n_alt = 0
   Insn 652: point = 125, n_alt = 0
   Insn 651: point = 127, n_alt = 1
   Insn 650: point = 129, n_alt = 0
   Insn 649: point = 130, n_alt = 8
   Insn 648: point = 131, n_alt = 3
   Insn 647: point = 132, n_alt = 1
   Insn 646: point = 134, n_alt = 3
   Insn 645: point = 136, n_alt = 0
   Insn 644: point = 138, n_alt = 1
   Insn 643: point = 140, n_alt = 0
   Insn 642: point = 141, n_alt = 0
   Insn 641: point = 143, n_alt = 1
   Insn 640: point = 145, n_alt = 0
   Insn 639: point = 146, n_alt = 1
   Insn 638: point = 148, n_alt = 7
   Insn 822: point = 149, n_alt = -2
	Hard reg 23 is preferable by r596 with profit 1000
   Insn 637: point = 151, n_alt = 1
   Insn 821: point = 151, n_alt = -2
	Hard reg 23 is preferable by r596 with profit 1000
	Hard reg 21 is preferable by r596 with profit 1000
   Insn 636: point = 153, n_alt = -2
   Insn 635: point = 155, n_alt = 1
   Insn 634: point = 157, n_alt = 7
   Insn 633: point = 159, n_alt = 0
   Insn 632: point = 161, n_alt = 4
   Insn 631: point = 162, n_alt = 3
   Insn 630: point = 164, n_alt = 0
   Insn 629: point = 166, n_alt = 1
   Insn 628: point = 168, n_alt = 0
   Insn 627: point = 169, n_alt = 0
   Insn 626: point = 171, n_alt = 0
   Insn 625: point = 173, n_alt = 1
   Insn 624: point = 175, n_alt = 0
   Insn 623: point = 176, n_alt = 1
   Insn 622: point = 178, n_alt = 1
   Insn 621: point = 180, n_alt = 0
   Insn 620: point = 181, n_alt = 1
   Insn 619: point = 183, n_alt = -2
   Insn 618: point = 185, n_alt = 2
   Insn 617: point = 187, n_alt = 7
   Insn 616: point = 188, n_alt = 7
   Insn 615: point = 190, n_alt = 4
   Insn 614: point = 191, n_alt = 3
   Insn 613: point = 193, n_alt = 0
   Insn 612: point = 195, n_alt = 1
   Insn 611: point = 197, n_alt = 0
   Insn 610: point = 198, n_alt = 0
   Insn 609: point = 200, n_alt = 0
   Insn 608: point = 202, n_alt = 1
   Insn 607: point = 204, n_alt = 0
   Insn 606: point = 205, n_alt = 1
   Insn 605: point = 207, n_alt = 1
   Insn 604: point = 209, n_alt = 0
   Insn 603: point = 210, n_alt = 7
   Insn 602: point = 212, n_alt = 4
   Insn 601: point = 213, n_alt = 3
   Insn 600: point = 215, n_alt = 0
   Insn 599: point = 217, n_alt = 1
   Insn 598: point = 219, n_alt = 0
   Insn 597: point = 220, n_alt = 0
   Insn 596: point = 222, n_alt = 0
   Insn 595: point = 224, n_alt = 1
   Insn 594: point = 226, n_alt = 0
   Insn 593: point = 227, n_alt = 1
   Insn 592: point = 229, n_alt = 1
   Insn 591: point = 231, n_alt = 0
   Insn 590: point = 232, n_alt = 7
   Insn 589: point = 234, n_alt = 3
   Insn 588: point = 235, n_alt = 3
   Insn 587: point = 237, n_alt = 0
   Insn 586: point = 239, n_alt = 1
   Insn 585: point = 241, n_alt = 0
   Insn 584: point = 242, n_alt = 0
   Insn 583: point = 244, n_alt = 1
   Insn 582: point = 246, n_alt = 0
   Insn 581: point = 247, n_alt = 8
   Insn 580: point = 248, n_alt = 1
   Insn 579: point = 250, n_alt = 2
   Insn 578: point = 251, n_alt = -2
   Insn 577: point = 253, n_alt = 2
   Insn 576: point = 255, n_alt = 7
   Insn 575: point = 257, n_alt = 4
   Insn 574: point = 258, n_alt = 3
   Insn 573: point = 260, n_alt = 0
   Insn 572: point = 262, n_alt = 1
   Insn 571: point = 264, n_alt = 0
   Insn 570: point = 265, n_alt = 0
   Insn 569: point = 267, n_alt = 0
   Insn 568: point = 269, n_alt = 1
   Insn 567: point = 271, n_alt = 0
   Insn 566: point = 272, n_alt = 1
   Insn 565: point = 274, n_alt = 1
   Insn 564: point = 276, n_alt = 0
   Insn 563: point = 278, n_alt = 0
   Insn 562: point = 279, n_alt = 7
   Insn 561: point = 281, n_alt = 4
   Insn 560: point = 282, n_alt = 3
   Insn 559: point = 284, n_alt = 0
   Insn 558: point = 286, n_alt = 1
   Insn 557: point = 288, n_alt = 0
   Insn 556: point = 289, n_alt = 0
   Insn 555: point = 291, n_alt = 0
   Insn 554: point = 293, n_alt = 1
   Insn 553: point = 295, n_alt = 0
   Insn 552: point = 296, n_alt = 1
   Insn 551: point = 298, n_alt = 1
   Insn 550: point = 300, n_alt = 0
  BB 44
   Insn 542: point = 302, n_alt = 1
  BB 42
   Insn 534: point = 303, n_alt = 1
   Insn 533: point = 304, n_alt = 0
   Insn 532: point = 305, n_alt = 0
  BB 40
   Insn 524: point = 306, n_alt = 1
  BB 55
   Insn 800: point = 306, n_alt = -1
  BB 35
   Insn 482: point = 306, n_alt = -1
   Insn 481: point = 306, n_alt = 0
   Insn 480: point = 307, n_alt = 0
   Insn 479: point = 309, n_alt = 0
   Insn 478: point = 310, n_alt = 0
  BB 39
   Insn 775: point = 311, n_alt = -1
   Insn 518: point = 311, n_alt = 1
  BB 56
   Insn 803: point = 312, n_alt = -1
  BB 37
   Insn 490: point = 313, n_alt = -1
   Insn 489: point = 313, n_alt = 0
   Insn 488: point = 314, n_alt = 0
   Insn 487: point = 316, n_alt = 0
   Insn 486: point = 317, n_alt = 0
  BB 38
   Insn 773: point = 318, n_alt = -1
   Insn 512: point = 318, n_alt = 1
   Insn 511: point = 318, n_alt = 8
   Insn 510: point = 319, n_alt = 7
   Insn 509: point = 320, n_alt = 3
   Insn 508: point = 321, n_alt = 3
   Insn 507: point = 323, n_alt = 0
   Insn 506: point = 325, n_alt = 1
   Insn 505: point = 327, n_alt = 0
   Insn 504: point = 328, n_alt = 0
   Insn 503: point = 330, n_alt = 1
   Insn 502: point = 332, n_alt = 0
   Insn 501: point = 333, n_alt = 8
   Insn 500: point = 334, n_alt = 7
   Insn 499: point = 335, n_alt = 3
   Insn 498: point = 336, n_alt = 3
   Insn 497: point = 338, n_alt = 0
   Insn 496: point = 340, n_alt = 1
   Insn 495: point = 342, n_alt = 0
   Insn 494: point = 343, n_alt = 0
   Insn 493: point = 345, n_alt = 1
   Insn 492: point = 347, n_alt = 0
  BB 36
   Insn 484: point = 349, n_alt = 1
  BB 34
   Insn 476: point = 350, n_alt = 1
   Insn 475: point = 351, n_alt = 0
   Insn 474: point = 352, n_alt = 0
  BB 52
   Insn 791: point = 353, n_alt = -1
  BB 9
   Insn 55: point = 353, n_alt = -1
   Insn 54: point = 353, n_alt = 0
   Insn 53: point = 354, n_alt = 0
   Insn 52: point = 356, n_alt = 0
   Insn 51: point = 357, n_alt = 0
  BB 33
   Insn 771: point = 357, n_alt = -1
   Insn 468: point = 357, n_alt = 1
  BB 53
   Insn 794: point = 357, n_alt = -1
  BB 11
   Insn 65: point = 357, n_alt = -1
   Insn 64: point = 357, n_alt = 0
   Insn 63: point = 358, n_alt = 0
   Insn 62: point = 360, n_alt = 0
   Insn 61: point = 361, n_alt = 0
  BB 32
   Insn 769: point = 362, n_alt = -1
   Insn 462: point = 362, n_alt = 1
  BB 54
   Insn 797: point = 363, n_alt = -1
  BB 13
   Insn 73: point = 364, n_alt = -1
   Insn 72: point = 364, n_alt = 0
   Insn 71: point = 365, n_alt = 0
   Insn 70: point = 367, n_alt = 0
   Insn 69: point = 368, n_alt = 0
  BB 31
   Insn 767: point = 369, n_alt = -1
   Insn 456: point = 369, n_alt = 1
  BB 30
   Insn 453: point = 370, n_alt = 8
   Insn 452: point = 371, n_alt = 7
   Insn 451: point = 372, n_alt = 4
   Insn 450: point = 373, n_alt = 3
   Insn 449: point = 375, n_alt = 0
   Insn 448: point = 377, n_alt = 0
   Insn 447: point = 379, n_alt = 0
   Insn 446: point = 380, n_alt = 0
   Insn 445: point = 382, n_alt = 0
   Insn 444: point = 384, n_alt = 0
   Insn 443: point = 386, n_alt = 0
   Insn 442: point = 387, n_alt = 1
   Insn 441: point = 389, n_alt = 0
   Insn 440: point = 391, n_alt = 0
  BB 29
   Insn 435: point = 393, n_alt = -1
   Insn 434: point = 393, n_alt = 1
   Insn 433: point = 394, n_alt = 7
  BB 28
   Insn 428: point = 396, n_alt = -1
   Insn 427: point = 396, n_alt = 1
   Insn 426: point = 397, n_alt = 7
  BB 27
   Insn 425: point = 399, n_alt = -1
   Insn 424: point = 399, n_alt = 1
   Insn 423: point = 400, n_alt = 7
   Insn 422: point = 401, n_alt = 7
   Insn 421: point = 403, n_alt = 4
   Insn 420: point = 404, n_alt = 3
   Insn 419: point = 406, n_alt = 0
   Insn 418: point = 408, n_alt = 0
   Insn 417: point = 410, n_alt = 0
   Insn 416: point = 411, n_alt = 0
   Insn 415: point = 413, n_alt = 0
   Insn 414: point = 415, n_alt = 0
   Insn 413: point = 417, n_alt = 0
   Insn 412: point = 418, n_alt = 1
   Insn 411: point = 420, n_alt = 0
   Insn 410: point = 422, n_alt = 0
   Insn 409: point = 424, n_alt = 0
   Insn 408: point = 425, n_alt = 8
   Insn 407: point = 426, n_alt = 7
   Insn 406: point = 427, n_alt = 4
   Insn 405: point = 428, n_alt = 3
   Insn 404: point = 430, n_alt = 0
   Insn 403: point = 432, n_alt = 0
   Insn 402: point = 434, n_alt = 0
   Insn 401: point = 435, n_alt = 0
   Insn 400: point = 437, n_alt = 0
   Insn 399: point = 439, n_alt = 0
   Insn 398: point = 441, n_alt = 0
   Insn 397: point = 442, n_alt = 1
   Insn 396: point = 444, n_alt = 0
   Insn 395: point = 446, n_alt = 0
  BB 26
   Insn 390: point = 448, n_alt = -1
   Insn 389: point = 448, n_alt = 1
   Insn 388: point = 449, n_alt = 7
  BB 25
   Insn 383: point = 451, n_alt = -1
   Insn 382: point = 451, n_alt = 1
   Insn 381: point = 452, n_alt = 7
  BB 24
   Insn 378: point = 454, n_alt = 8
   Insn 377: point = 455, n_alt = 7
   Insn 376: point = 456, n_alt = 4
   Insn 375: point = 457, n_alt = 3
   Insn 374: point = 459, n_alt = 0
   Insn 373: point = 461, n_alt = 0
   Insn 372: point = 463, n_alt = 0
   Insn 371: point = 464, n_alt = 0
   Insn 370: point = 466, n_alt = 0
   Insn 369: point = 468, n_alt = 0
   Insn 368: point = 470, n_alt = 0
   Insn 367: point = 471, n_alt = 1
   Insn 366: point = 473, n_alt = 0
   Insn 365: point = 475, n_alt = 0
  BB 23
   Insn 360: point = 477, n_alt = -1
   Insn 359: point = 477, n_alt = 1
   Insn 358: point = 478, n_alt = 7
   Insn 357: point = 479, n_alt = 7
  BB 21
   Insn 765: point = 481, n_alt = -1
   Insn 334: point = 481, n_alt = 8
   Insn 333: point = 482, n_alt = 7
   Insn 332: point = 483, n_alt = 4
   Insn 331: point = 484, n_alt = 3
   Insn 330: point = 486, n_alt = 0
   Insn 329: point = 488, n_alt = 0
   Insn 328: point = 490, n_alt = 0
   Insn 327: point = 491, n_alt = 0
   Insn 326: point = 493, n_alt = 0
   Insn 325: point = 495, n_alt = 0
   Insn 324: point = 497, n_alt = 0
   Insn 323: point = 498, n_alt = 1
   Insn 322: point = 500, n_alt = 0
   Insn 321: point = 502, n_alt = 0
  BB 22
   Insn 352: point = 504, n_alt = 8
   Insn 351: point = 505, n_alt = 7
   Insn 350: point = 506, n_alt = 4
   Insn 349: point = 507, n_alt = 3
   Insn 348: point = 509, n_alt = 0
   Insn 347: point = 511, n_alt = 0
   Insn 346: point = 513, n_alt = 0
   Insn 345: point = 514, n_alt = 0
   Insn 344: point = 516, n_alt = 0
   Insn 343: point = 518, n_alt = 0
   Insn 342: point = 520, n_alt = 0
   Insn 341: point = 521, n_alt = 1
   Insn 340: point = 523, n_alt = 0
   Insn 339: point = 525, n_alt = 0
  BB 20
   Insn 315: point = 527, n_alt = -1
   Insn 314: point = 527, n_alt = 1
   Insn 313: point = 528, n_alt = 7
  BB 19
   Insn 311: point = 530, n_alt = -1
   Insn 310: point = 530, n_alt = 1
   Insn 309: point = 531, n_alt = 7
   Insn 308: point = 532, n_alt = 7
   Insn 307: point = 533, n_alt = 8
   Insn 306: point = 534, n_alt = 2
   Insn 305: point = 536, n_alt = 7
   Insn 820: point = 537, n_alt = -2
	Hard reg 22 is preferable by r595 with profit 1000
   Insn 304: point = 539, n_alt = 1
   Insn 819: point = 539, n_alt = -2
	Hard reg 22 is preferable by r595 with profit 1000
	Hard reg 21 is preferable by r595 with profit 1000
   Insn 303: point = 541, n_alt = 7
   Insn 302: point = 543, n_alt = 4
   Insn 301: point = 544, n_alt = 3
   Insn 300: point = 546, n_alt = 0
   Insn 299: point = 548, n_alt = 0
   Insn 298: point = 550, n_alt = 0
   Insn 297: point = 551, n_alt = 0
   Insn 296: point = 553, n_alt = 0
   Insn 295: point = 555, n_alt = 0
  BB 18
   Insn 290: point = 557, n_alt = -1
   Insn 289: point = 557, n_alt = 1
   Insn 288: point = 558, n_alt = 7
   Insn 287: point = 559, n_alt = 8
   Insn 286: point = 560, n_alt = 1
   Insn 285: point = 562, n_alt = 1
   Insn 284: point = 564, n_alt = 1
   Insn 283: point = 566, n_alt = -2
   Insn 282: point = 568, n_alt = 2
   Insn 281: point = 570, n_alt = 7
   Insn 280: point = 571, n_alt = 7
   Insn 279: point = 573, n_alt = 0
   Insn 278: point = 575, n_alt = 4
   Insn 277: point = 576, n_alt = 3
   Insn 276: point = 578, n_alt = 0
   Insn 275: point = 580, n_alt = 0
   Insn 274: point = 582, n_alt = 0
   Insn 273: point = 583, n_alt = 0
   Insn 272: point = 585, n_alt = 0
   Insn 271: point = 587, n_alt = 0
   Insn 270: point = 588, n_alt = 7
   Insn 269: point = 590, n_alt = 0
   Insn 268: point = 592, n_alt = 4
   Insn 267: point = 593, n_alt = 3
   Insn 266: point = 595, n_alt = 0
   Insn 265: point = 597, n_alt = 0
   Insn 264: point = 599, n_alt = 0
   Insn 263: point = 600, n_alt = 0
   Insn 262: point = 601, n_alt = 7
   Insn 261: point = 603, n_alt = 0
   Insn 260: point = 605, n_alt = 4
   Insn 259: point = 606, n_alt = 3
   Insn 258: point = 608, n_alt = 0
   Insn 257: point = 610, n_alt = 0
   Insn 256: point = 612, n_alt = 0
   Insn 255: point = 613, n_alt = 0
   Insn 254: point = 615, n_alt = 0
   Insn 253: point = 617, n_alt = 0
   Insn 252: point = 618, n_alt = 8
   Insn 251: point = 619, n_alt = 4
   Insn 250: point = 620, n_alt = 1
   Insn 249: point = 622, n_alt = 3
   Insn 248: point = 624, n_alt = 0
   Insn 247: point = 626, n_alt = 0
   Insn 246: point = 628, n_alt = 0
   Insn 245: point = 629, n_alt = 0
   Insn 244: point = 631, n_alt = 0
   Insn 243: point = 633, n_alt = 0
   Insn 242: point = 634, n_alt = -2
   Insn 241: point = 636, n_alt = 1
   Insn 240: point = 638, n_alt = 7
   Insn 239: point = 639, n_alt = 1
   Insn 238: point = 641, n_alt = 7
  BB 17
   Insn 235: point = 643, n_alt = 7
  BB 16
   Insn 233: point = 645, n_alt = -1
   Insn 232: point = 645, n_alt = 0
   Insn 231: point = 646, n_alt = 0
   Insn 230: point = 648, n_alt = 0
   Insn 229: point = 650, n_alt = 0
   Insn 228: point = 651, n_alt = 1
   Insn 227: point = 651, n_alt = 0
   Insn 226: point = 653, n_alt = 0
   Insn 225: point = 654, n_alt = 1
   Insn 224: point = 655, n_alt = 7
   Insn 223: point = 656, n_alt = 7
   Insn 222: point = 657, n_alt = 8
   Insn 221: point = 658, n_alt = 1
   Insn 818: point = 660, n_alt = 7
	   Creating copy r594<-r598@1000
   Insn 220: point = 662, n_alt = -2
   Insn 219: point = 663, n_alt = 0
   Insn 218: point = 663, n_alt = -2
   Insn 217: point = 664, n_alt = 2
   Insn 216: point = 666, n_alt = -2
   Insn 215: point = 668, n_alt = 2
   Insn 214: point = 670, n_alt = 7
   Insn 213: point = 671, n_alt = 7
   Insn 212: point = 672, n_alt = 1
   Insn 211: point = 674, n_alt = -2
   Insn 210: point = 676, n_alt = 2
   Insn 209: point = 678, n_alt = 7
   Insn 208: point = 679, n_alt = 7
   Insn 207: point = 680, n_alt = 1
   Insn 206: point = 682, n_alt = 7
   Insn 205: point = 683, n_alt = 7
   Insn 817: point = 684, n_alt = 8
	   Creating copy r593->r598@1000
   Insn 204: point = 686, n_alt = 2
   Insn 816: point = 686, n_alt = -2
	Hard reg 21 is preferable by r593 with profit 1000
   Insn 203: point = 688, n_alt = 1
   Insn 202: point = 690, n_alt = 7
   Insn 201: point = 691, n_alt = 7
   Insn 200: point = 692, n_alt = 8
   Insn 199: point = 693, n_alt = 1
   Insn 198: point = 695, n_alt = 7
   Insn 197: point = 697, n_alt = 4
   Insn 196: point = 698, n_alt = 1
   Insn 195: point = 700, n_alt = 7
   Insn 194: point = 702, n_alt = 0
   Insn 193: point = 704, n_alt = 4
   Insn 192: point = 705, n_alt = 3
   Insn 191: point = 707, n_alt = 0
   Insn 190: point = 709, n_alt = 0
   Insn 189: point = 710, n_alt = 7
   Insn 188: point = 712, n_alt = 0
   Insn 187: point = 714, n_alt = 4
   Insn 186: point = 715, n_alt = 3
   Insn 185: point = 717, n_alt = 0
   Insn 184: point = 719, n_alt = 0
   Insn 183: point = 721, n_alt = 0
   Insn 182: point = 722, n_alt = 0
   Insn 181: point = 724, n_alt = 0
   Insn 180: point = 726, n_alt = 0
   Insn 179: point = 727, n_alt = 8
   Insn 178: point = 728, n_alt = 1
  BB 15
   Insn 175: point = 731, n_alt = 7
  BB 14
   Insn 173: point = 733, n_alt = -1
   Insn 172: point = 733, n_alt = 0
   Insn 171: point = 734, n_alt = 0
   Insn 170: point = 736, n_alt = 0
   Insn 169: point = 738, n_alt = 0
   Insn 168: point = 739, n_alt = 1
   Insn 167: point = 739, n_alt = 0
   Insn 166: point = 741, n_alt = 0
   Insn 165: point = 742, n_alt = 1
   Insn 164: point = 742, n_alt = 7
   Insn 163: point = 743, n_alt = 8
   Insn 162: point = 744, n_alt = 1
   Insn 161: point = 746, n_alt = 7
   Insn 160: point = 747, n_alt = -2
   Insn 159: point = 749, n_alt = 2
   Insn 158: point = 751, n_alt = 7
   Insn 157: point = 752, n_alt = 7
   Insn 156: point = 753, n_alt = 8
   Insn 155: point = 754, n_alt = 7
   Insn 154: point = 756, n_alt = 4
   Insn 153: point = 757, n_alt = 3
   Insn 152: point = 759, n_alt = 0
   Insn 151: point = 761, n_alt = 0
   Insn 150: point = 763, n_alt = 0
   Insn 149: point = 764, n_alt = 0
   Insn 148: point = 766, n_alt = 0
   Insn 147: point = 768, n_alt = 0
   Insn 146: point = 770, n_alt = 0
   Insn 145: point = 771, n_alt = 1
   Insn 144: point = 773, n_alt = 0
   Insn 143: point = 775, n_alt = 0
   Insn 142: point = 776, n_alt = 8
   Insn 141: point = 777, n_alt = 7
   Insn 140: point = 779, n_alt = 0
   Insn 139: point = 781, n_alt = 4
   Insn 138: point = 782, n_alt = 3
   Insn 137: point = 784, n_alt = 0
   Insn 136: point = 786, n_alt = 0
   Insn 135: point = 788, n_alt = 0
   Insn 134: point = 789, n_alt = 0
   Insn 133: point = 791, n_alt = 0
   Insn 132: point = 793, n_alt = 0
   Insn 131: point = 795, n_alt = 0
   Insn 130: point = 796, n_alt = 1
   Insn 129: point = 798, n_alt = 0
   Insn 128: point = 800, n_alt = 0
   Insn 127: point = 801, n_alt = 8
   Insn 126: point = 802, n_alt = 7
   Insn 125: point = 804, n_alt = 0
   Insn 124: point = 806, n_alt = 4
   Insn 123: point = 807, n_alt = 3
   Insn 122: point = 809, n_alt = 0
   Insn 121: point = 811, n_alt = 0
   Insn 120: point = 813, n_alt = 0
   Insn 119: point = 814, n_alt = 0
   Insn 118: point = 816, n_alt = 0
   Insn 117: point = 818, n_alt = 0
   Insn 116: point = 820, n_alt = 0
   Insn 115: point = 821, n_alt = 1
   Insn 114: point = 823, n_alt = 0
   Insn 113: point = 825, n_alt = 0
   Insn 112: point = 826, n_alt = 8
   Insn 111: point = 827, n_alt = 1
   Insn 110: point = 829, n_alt = 7
   Insn 109: point = 831, n_alt = 4
   Insn 108: point = 832, n_alt = 3
   Insn 107: point = 834, n_alt = 0
   Insn 106: point = 836, n_alt = 0
   Insn 105: point = 838, n_alt = 0
   Insn 104: point = 839, n_alt = 0
   Insn 103: point = 841, n_alt = 0
   Insn 102: point = 843, n_alt = 0
   Insn 101: point = 844, n_alt = 7
   Insn 100: point = 846, n_alt = 0
   Insn 99: point = 848, n_alt = 4
   Insn 98: point = 849, n_alt = 3
   Insn 97: point = 851, n_alt = 0
   Insn 96: point = 853, n_alt = 0
   Insn 95: point = 855, n_alt = 0
   Insn 94: point = 856, n_alt = 0
   Insn 93: point = 858, n_alt = 0
   Insn 92: point = 860, n_alt = 0
   Insn 91: point = 862, n_alt = 0
   Insn 90: point = 863, n_alt = 1
   Insn 89: point = 865, n_alt = 0
   Insn 88: point = 867, n_alt = 0
   Insn 87: point = 868, n_alt = 1
   Insn 815: point = 869, n_alt = -2
	Hard reg 0 is preferable by r592 with profit 1000
   Insn 86: point = 871, n_alt = 0
   Insn 814: point = 872, n_alt = -2
	Hard reg 0 is preferable by r592 with profit 1000
	Hard reg 1 is preferable by r592 with profit 1000
   Insn 85: point = 874, n_alt = 0
   Insn 84: point = 875, n_alt = 0
   Insn 83: point = 877, n_alt = 0
   Insn 82: point = 879, n_alt = 4
   Insn 81: point = 880, n_alt = 3
   Insn 80: point = 882, n_alt = 0
   Insn 79: point = 884, n_alt = 0
   Insn 78: point = 886, n_alt = 0
   Insn 77: point = 887, n_alt = 0
   Insn 76: point = 889, n_alt = 0
   Insn 75: point = 891, n_alt = 0
  BB 12
   Insn 67: point = 893, n_alt = 1
  BB 10
   Insn 59: point = 894, n_alt = 1
   Insn 58: point = 895, n_alt = 0
   Insn 57: point = 896, n_alt = 0
  BB 8
   Insn 49: point = 897, n_alt = 1
  BB 50
   Insn 785: point = 897, n_alt = -1
  BB 3
   Insn 17: point = 897, n_alt = -1
   Insn 16: point = 897, n_alt = 0
   Insn 15: point = 898, n_alt = 0
   Insn 14: point = 900, n_alt = 0
   Insn 13: point = 901, n_alt = 0
  BB 7
   Insn 762: point = 902, n_alt = -1
   Insn 43: point = 902, n_alt = 1
  BB 51
   Insn 788: point = 903, n_alt = -1
  BB 5
   Insn 25: point = 904, n_alt = -1
   Insn 24: point = 904, n_alt = 0
   Insn 23: point = 905, n_alt = 0
   Insn 22: point = 907, n_alt = 0
   Insn 21: point = 908, n_alt = 0
  BB 6
   Insn 760: point = 909, n_alt = -1
   Insn 37: point = 909, n_alt = 1
   Insn 36: point = 909, n_alt = 8
   Insn 35: point = 910, n_alt = 7
   Insn 34: point = 911, n_alt = 4
   Insn 33: point = 912, n_alt = 3
   Insn 32: point = 914, n_alt = 0
   Insn 31: point = 916, n_alt = 1
   Insn 30: point = 918, n_alt = 0
   Insn 29: point = 919, n_alt = 0
   Insn 28: point = 921, n_alt = 1
   Insn 27: point = 923, n_alt = 0
  BB 4
   Insn 19: point = 925, n_alt = 1
  BB 2
   Insn 11: point = 926, n_alt = 1
   Insn 10: point = 927, n_alt = 0
   Insn 9: point = 928, n_alt = 0
   Insn 8: point = 929, n_alt = 8
   Insn 7: point = 930, n_alt = 7
   Insn 3: point = 931, n_alt = 5
   Insn 2: point = 931, n_alt = 5
 r87: [920..921]
 r88: [915..919]
 r89: [915..916]
 r90: [913..914]
 r91: [909..912]
 r92: [888..889]
 r93: [883..887]
 r94: [883..884]
 r95: [881..882]
 r96: [878..880]
 r97: [871..875]
 r98: [864..865]
 r99: [857..863]
 r100: [859..860]
 r101: [857..858]
 r102: [852..856]
 r103: [852..853]
 r104: [850..851]
 r105: [847..849]
 r106: [828..844]
 r107: [840..841]
 r108: [835..839]
 r109: [835..836]
 r110: [833..834]
 r111: [830..832]
 r112: [828..829]
 r113: [822..823]
 r114: [815..821]
 r115: [817..818]
 r116: [815..816]
 r117: [810..814]
 r118: [810..811]
 r119: [808..809]
 r120: [805..807]
 r121: [797..798]
 r122: [790..796]
 r123: [792..793]
 r124: [790..791]
 r125: [785..789]
 r126: [785..786]
 r127: [783..784]
 r128: [780..782]
 r129: [772..773]
 r130: [765..771]
 r131: [767..768]
 r132: [765..766]
 r133: [760..764]
 r134: [760..761]
 r135: [758..759]
 r136: [755..757]
 r137: [748..749]
 r138: [745..747]
 r139: [735..739]
 r140: [735..736]
 r141: [733..734]
 r142: [723..724]
 r143: [718..722]
 r144: [718..719]
 r145: [716..717]
 r146: [713..715]
 r147: [699..710]
 r148: [706..707]
 r149: [703..705]
 r150: [699..700]
 r151: [694..698]
 r152: [694..695]
 r153: [687..688]
 r155: [673..680]
 r156: [675..676]
 r157: [673..674]
 r158: [665..672]
 r159: [667..668]
 r160: [665..666]
 r161: [663..664]
 r162: [659..662]
 r163: [647..651]
 r164: [647..648]
 r165: [645..646]
 r166: [637..639]
 r167: [635..636]
 r168: [621..634]
 r169: [630..631]
 r170: [625..629]
 r171: [625..626]
 r172: [623..624]
 r173: [618..622]
 r174: [618..620]
 r175: [614..615]
 r176: [609..613]
 r177: [609..610]
 r178: [607..608]
 r179: [604..606]
 r180: [561..601]
 r181: [596..597]
 r182: [594..595]
 r183: [591..593]
 r184: [565..588]
 r185: [584..585]
 r186: [579..583]
 r187: [579..580]
 r188: [577..578]
 r189: [574..576]
 r190: [569..571]
 r191: [567..568]
 r192: [565..566]
 r193: [563..564]
 r194: [561..562]
 r195: [552..553]
 r196: [547..551]
 r197: [547..548]
 r198: [545..546]
 r199: [542..544]
 r200: [540..541]
 r201: [535..537]
 r202: [499..500]
 r203: [492..498]
 r204: [494..495]
 r205: [492..493]
 r206: [487..491]
 r207: [487..488]
 r208: [485..486]
 r209: [481..484]
 r210: [522..523]
 r211: [515..521]
 r212: [517..518]
 r213: [515..516]
 r214: [510..514]
 r215: [510..511]
 r216: [508..509]
 r217: [504..507]
 r218: [472..473]
 r219: [465..471]
 r220: [467..468]
 r221: [465..466]
 r222: [460..464]
 r223: [460..461]
 r224: [458..459]
 r225: [454..457]
 r226: [443..444]
 r227: [436..442]
 r228: [438..439]
 r229: [436..437]
 r230: [431..435]
 r231: [431..432]
 r232: [429..430]
 r233: [425..428]
 r234: [421..422]
 r235: [419..420]
 r236: [412..418]
 r237: [414..415]
 r238: [412..413]
 r239: [407..411]
 r240: [407..408]
 r241: [405..406]
 r242: [402..404]
 r243: [396..401]
 r244: [388..389]
 r245: [381..387]
 r246: [383..384]
 r247: [381..382]
 r248: [376..380]
 r249: [376..377]
 r250: [374..375]
 r251: [370..373]
 r252: [344..345]
 r253: [339..343]
 r254: [339..340]
 r255: [337..338]
 r256: [333..336]
 r257: [329..330]
 r258: [324..328]
 r259: [324..325]
 r260: [322..323]
 r261: [318..321]
 r262: [297..298]
 r263: [290..296]
 r264: [292..293]
 r265: [290..291]
 r266: [285..289]
 r267: [285..286]
 r268: [283..284]
 r269: [280..282]
 r270: [254..279]
 r271: [275..276]
 r272: [273..274]
 r273: [266..272]
 r274: [268..269]
 r275: [266..267]
 r276: [261..265]
 r277: [261..262]
 r278: [259..260]
 r279: [256..258]
 r280: [254..255]
 r281: [252..253]
 r282: [249..251]
 r283: [243..244]
 r284: [238..242]
 r285: [238..239]
 r286: [236..237]
 r287: [233..235]
 r288: [133..232]
 r289: [228..229]
 r290: [221..227]
 r291: [223..224]
 r292: [221..222]
 r293: [216..220]
 r294: [216..217]
 r295: [214..215]
 r296: [211..213]
 r297: [182..210]
 r298: [206..207]
 r299: [199..205]
 r300: [201..202]
 r301: [199..200]
 r302: [194..198]
 r303: [194..195]
 r304: [192..193]
 r305: [189..191]
 r306: [186..188]
 r307: [184..185]
 r308: [182..183]
 r309: [156..181]
 r310: [177..178]
 r311: [170..176]
 r312: [172..173]
 r313: [170..171]
 r314: [165..169]
 r315: [165..166]
 r316: [163..164]
 r317: [160..162]
 r318: [156..157]
 r319: [154..155]
 r320: [152..153]
 r321: [147..149]
 r322: [133..146]
 r323: [142..143]
 r324: [137..141]
 r325: [137..138]
 r326: [135..136]
 r327: [130..134]
 r328: [130..132]
 r329: [126..127]
 r330: [121..125]
 r331: [121..122]
 r332: [119..120]
 r333: [116..118]
 r334: [19..115]
 r335: [111..112]
 r336: [104..110]
 r337: [106..107]
 r338: [104..105]
 r339: [99..103]
 r340: [99..100]
 r341: [97..98]
 r342: [94..96]
 r343: [68..93]
 r344: [89..90]
 r345: [82..88]
 r346: [84..85]
 r347: [82..83]
 r348: [77..81]
 r349: [77..78]
 r350: [75..76]
 r351: [72..74]
 r352: [70..71]
 r353: [68..69]
 r354: [42..67]
 r355: [63..64]
 r356: [56..62]
 r357: [58..59]
 r358: [56..57]
 r359: [51..55]
 r360: [51..52]
 r361: [49..50]
 r362: [46..48]
 r363: [42..43]
 r364: [40..41]
 r365: [38..39]
 r366: [33..35]
 r367: [19..32]
 r368: [28..29]
 r369: [23..27]
 r370: [23..24]
 r371: [21..22]
 r372: [16..20]
 r373: [16..18]
 r374: [733..742] [729..731]
 r375: [645..656] [640..643]
 r376: [926..928]
 r377: [897..927]
 r378: [897..898]
 r379: [904..905]
 r380: [353..354]
 r381: [894..896]
 r382: [357..895]
 r383: [357..358]
 r384: [364..365]
 r385: [350..352]
 r386: [306..351]
 r387: [306..307]
 r388: [313..314]
 r389: [0..1]
 r390: [303..305]
 r391: [4..304]
 r392: [4..5]
 r393: [11..12]
 r394: [929..930]
 r395: [899..900]
 r396: [906..907]
 r397: [922..923]
 r398: [917..918]
 r399: [909..911]
 r400: [909..910]
 r401: [355..356]
 r402: [359..360]
 r403: [366..367]
 r404: [890..891]
 r405: [885..886]
 r406: [876..879]
 r407: [876..877]
 r408: [873..874]
 r409: [868..869]
 r410: [866..867]
 r411: [861..862]
 r412: [854..855]
 r413: [845..848]
 r414: [845..846]
 r415: [842..843]
 r416: [837..838]
 r417: [830..831]
 r418: [826..827]
 r419: [824..825]
 r420: [819..820]
 r421: [812..813]
 r422: [803..806]
 r423: [803..804]
 r424: [801..802]
 r425: [799..800]
 r426: [794..795]
 r427: [787..788]
 r428: [778..781]
 r429: [778..779]
 r430: [776..777]
 r431: [774..775]
 r432: [769..770]
 r433: [762..763]
 r434: [755..756]
 r435: [753..754]
 r436: [750..752]
 r437: [750..751]
 r438: [743..744]
 r439: [745..746]
 r440: [740..741]
 r441: [737..738]
 r442: [727..728]
 r443: [725..726]
 r444: [720..721]
 r445: [711..714]
 r446: [711..712]
 r447: [708..709]
 r448: [701..704]
 r449: [701..702]
 r450: [696..697]
 r451: [692..693]
 r452: [689..691]
 r453: [689..690]
 r454: [681..683]
 r455: [681..682]
 r456: [677..679]
 r457: [677..678]
 r458: [669..671]
 r459: [669..670]
 r460: [657..658]
 r461: [652..653]
 r462: [654..655]
 r463: [649..650]
 r464: [640..641]
 r465: [637..638]
 r466: [632..633]
 r467: [627..628]
 r468: [618..619]
 r469: [616..617]
 r470: [611..612]
 r471: [602..605]
 r472: [602..603]
 r473: [598..600]
 r474: [598..599]
 r475: [589..592]
 r476: [589..590]
 r477: [586..587]
 r478: [581..582]
 r479: [572..575]
 r480: [572..573]
 r481: [569..570]
 r482: [559..560]
 r483: [557..558]
 r484: [554..555]
 r485: [549..550]
 r486: [542..543]
 r487: [533..534]
 r488: [535..536]
 r489: [530..532]
 r490: [530..531]
 r491: [527..528]
 r492: [501..502]
 r493: [496..497]
 r494: [489..490]
 r495: [481..483]
 r496: [481..482]
 r497: [524..525]
 r498: [519..520]
 r499: [512..513]
 r500: [504..506]
 r501: [504..505]
 r502: [477..479]
 r503: [477..478]
 r504: [474..475]
 r505: [469..470]
 r506: [462..463]
 r507: [454..456]
 r508: [454..455]
 r509: [451..452]
 r510: [448..449]
 r511: [445..446]
 r512: [440..441]
 r513: [433..434]
 r514: [425..427]
 r515: [425..426]
 r516: [423..424]
 r517: [416..417]
 r518: [409..410]
 r519: [402..403]
 r520: [399..400]
 r521: [396..397]
 r522: [393..394]
 r523: [390..391]
 r524: [385..386]
 r525: [378..379]
 r526: [370..372]
 r527: [370..371]
 r528: [308..309]
 r529: [315..316]
 r530: [346..347]
 r531: [341..342]
 r532: [333..335]
 r533: [333..334]
 r534: [331..332]
 r535: [326..327]
 r536: [318..320]
 r537: [318..319]
 r538: [2..3]
 r539: [6..7]
 r540: [13..14]
 r541: [299..300]
 r542: [294..295]
 r543: [287..288]
 r544: [280..281]
 r545: [277..278]
 r546: [270..271]
 r547: [263..264]
 r548: [256..257]
 r549: [247..248]
 r550: [249..250]
 r551: [245..246]
 r552: [240..241]
 r553: [233..234]
 r554: [230..231]
 r555: [225..226]
 r556: [218..219]
 r557: [211..212]
 r558: [208..209]
 r559: [203..204]
 r560: [196..197]
 r561: [189..190]
 r562: [186..187]
 r563: [179..180]
 r564: [174..175]
 r565: [167..168]
 r566: [158..161]
 r567: [158..159]
 r568: [147..148]
 r569: [144..145]
 r570: [139..140]
 r571: [130..131]
 r572: [128..129]
 r573: [123..124]
 r574: [116..117]
 r575: [113..114]
 r576: [108..109]
 r577: [101..102]
 r578: [94..95]
 r579: [91..92]
 r580: [86..87]
 r581: [79..80]
 r582: [72..73]
 r583: [65..66]
 r584: [60..61]
 r585: [53..54]
 r586: [44..47]
 r587: [44..45]
 r588: [33..34]
 r589: [30..31]
 r590: [25..26]
 r591: [16..17]
 r592: [870..872]
 r593: [685..686]
 r594: [659..660]
 r595: [538..539]
 r596: [150..151]
 r597: [36..37]
 r598: [661..684]
Compressing live ranges: from 931 to 752 - 80%
Ranges after the compression:
 r87: [744..745]
 r88: [740..743]
 r89: [740..741]
 r90: [738..739]
 r91: [736..737]
 r92: [722..723]
 r93: [718..721]
 r94: [718..719]
 r95: [716..717]
 r96: [714..715]
 r97: [708..711]
 r98: [702..703]
 r99: [696..701]
 r100: [698..699]
 r101: [696..697]
 r102: [692..695]
 r103: [692..693]
 r104: [690..691]
 r105: [688..689]
 r106: [672..685]
 r107: [682..683]
 r108: [678..681]
 r109: [678..679]
 r110: [676..677]
 r111: [674..675]
 r112: [672..673]
 r113: [666..667]
 r114: [660..665]
 r115: [662..663]
 r116: [660..661]
 r117: [656..659]
 r118: [656..657]
 r119: [654..655]
 r120: [652..653]
 r121: [644..645]
 r122: [638..643]
 r123: [640..641]
 r124: [638..639]
 r125: [634..637]
 r126: [634..635]
 r127: [632..633]
 r128: [630..631]
 r129: [622..623]
 r130: [616..621]
 r131: [618..619]
 r132: [616..617]
 r133: [612..615]
 r134: [612..613]
 r135: [610..611]
 r136: [608..609]
 r137: [602..603]
 r138: [600..601]
 r139: [592..595]
 r140: [592..593]
 r141: [590..591]
 r142: [582..583]
 r143: [578..581]
 r144: [578..579]
 r145: [576..577]
 r146: [574..575]
 r147: [562..571]
 r148: [568..569]
 r149: [566..567]
 r150: [562..563]
 r151: [558..561]
 r152: [558..559]
 r153: [552..553]
 r155: [542..547]
 r156: [544..545]
 r157: [542..543]
 r158: [536..541]
 r159: [538..539]
 r160: [536..537]
 r161: [534..535]
 r162: [530..533]
 r163: [520..523]
 r164: [520..521]
 r165: [518..519]
 r166: [514..515]
 r167: [512..513]
 r168: [500..511]
 r169: [508..509]
 r170: [504..507]
 r171: [504..505]
 r172: [502..503]
 r173: [498..501]
 r174: [498..499]
 r175: [494..495]
 r176: [490..493]
 r177: [490..491]
 r178: [488..489]
 r179: [486..487]
 r180: [450..483]
 r181: [480..481]
 r182: [478..479]
 r183: [476..477]
 r184: [454..473]
 r185: [470..471]
 r186: [466..469]
 r187: [466..467]
 r188: [464..465]
 r189: [462..463]
 r190: [458..459]
 r191: [456..457]
 r192: [454..455]
 r193: [452..453]
 r194: [450..451]
 r195: [442..443]
 r196: [438..441]
 r197: [438..439]
 r198: [436..437]
 r199: [434..435]
 r200: [432..433]
 r201: [428..429]
 r202: [400..401]
 r203: [394..399]
 r204: [396..397]
 r205: [394..395]
 r206: [390..393]
 r207: [390..391]
 r208: [388..389]
 r209: [386..387]
 r210: [418..419]
 r211: [412..417]
 r212: [414..415]
 r213: [412..413]
 r214: [408..411]
 r215: [408..409]
 r216: [406..407]
 r217: [404..405]
 r218: [380..381]
 r219: [374..379]
 r220: [376..377]
 r221: [374..375]
 r222: [370..373]
 r223: [370..371]
 r224: [368..369]
 r225: [366..367]
 r226: [358..359]
 r227: [352..357]
 r228: [354..355]
 r229: [352..353]
 r230: [348..351]
 r231: [348..349]
 r232: [346..347]
 r233: [344..345]
 r234: [340..341]
 r235: [338..339]
 r236: [332..337]
 r237: [334..335]
 r238: [332..333]
 r239: [328..331]
 r240: [328..329]
 r241: [326..327]
 r242: [324..325]
 r243: [320..323]
 r244: [314..315]
 r245: [308..313]
 r246: [310..311]
 r247: [308..309]
 r248: [304..307]
 r249: [304..305]
 r250: [302..303]
 r251: [300..301]
 r252: [282..283]
 r253: [278..281]
 r254: [278..279]
 r255: [276..277]
 r256: [274..275]
 r257: [270..271]
 r258: [266..269]
 r259: [266..267]
 r260: [264..265]
 r261: [262..263]
 r262: [248..249]
 r263: [242..247]
 r264: [244..245]
 r265: [242..243]
 r266: [238..241]
 r267: [238..239]
 r268: [236..237]
 r269: [234..235]
 r270: [212..233]
 r271: [230..231]
 r272: [228..229]
 r273: [222..227]
 r274: [224..225]
 r275: [222..223]
 r276: [218..221]
 r277: [218..219]
 r278: [216..217]
 r279: [214..215]
 r280: [212..213]
 r281: [210..211]
 r282: [208..209]
 r283: [202..203]
 r284: [198..201]
 r285: [198..199]
 r286: [196..197]
 r287: [194..195]
 r288: [110..193]
 r289: [190..191]
 r290: [184..189]
 r291: [186..187]
 r292: [184..185]
 r293: [180..183]
 r294: [180..181]
 r295: [178..179]
 r296: [176..177]
 r297: [152..175]
 r298: [172..173]
 r299: [166..171]
 r300: [168..169]
 r301: [166..167]
 r302: [162..165]
 r303: [162..163]
 r304: [160..161]
 r305: [158..159]
 r306: [156..157]
 r307: [154..155]
 r308: [152..153]
 r309: [130..151]
 r310: [148..149]
 r311: [142..147]
 r312: [144..145]
 r313: [142..143]
 r314: [138..141]
 r315: [138..139]
 r316: [136..137]
 r317: [134..135]
 r318: [130..131]
 r319: [128..129]
 r320: [126..127]
 r321: [122..123]
 r322: [110..121]
 r323: [118..119]
 r324: [114..117]
 r325: [114..115]
 r326: [112..113]
 r327: [108..111]
 r328: [108..109]
 r329: [104..105]
 r330: [100..103]
 r331: [100..101]
 r332: [98..99]
 r333: [96..97]
 r334: [14..95]
 r335: [92..93]
 r336: [86..91]
 r337: [88..89]
 r338: [86..87]
 r339: [82..85]
 r340: [82..83]
 r341: [80..81]
 r342: [78..79]
 r343: [56..77]
 r344: [74..75]
 r345: [68..73]
 r346: [70..71]
 r347: [68..69]
 r348: [64..67]
 r349: [64..65]
 r350: [62..63]
 r351: [60..61]
 r352: [58..59]
 r353: [56..57]
 r354: [34..55]
 r355: [52..53]
 r356: [46..51]
 r357: [48..49]
 r358: [46..47]
 r359: [42..45]
 r360: [42..43]
 r361: [40..41]
 r362: [38..39]
 r363: [34..35]
 r364: [32..33]
 r365: [30..31]
 r366: [26..27]
 r367: [14..25]
 r368: [22..23]
 r369: [18..21]
 r370: [18..19]
 r371: [16..17]
 r372: [12..15]
 r373: [12..13]
 r374: [588..597]
 r375: [516..527]
 r376: [748..749]
 r377: [728..749]
 r378: [728..729]
 r379: [732..733]
 r380: [288..289]
 r381: [726..727]
 r382: [292..727]
 r383: [292..293]
 r384: [296..297]
 r385: [286..287]
 r386: [254..287]
 r387: [254..255]
 r388: [258..259]
 r389: [0..1]
 r390: [252..253]
 r391: [4..253]
 r392: [4..5]
 r393: [8..9]
 r394: [750..751]
 r395: [730..731]
 r396: [734..735]
 r397: [746..747]
 r398: [742..743]
 r399: [736..737]
 r400: [736..737]
 r401: [290..291]
 r402: [294..295]
 r403: [298..299]
 r404: [724..725]
 r405: [720..721]
 r406: [712..715]
 r407: [712..713]
 r408: [710..711]
 r409: [706..707]
 r410: [704..705]
 r411: [700..701]
 r412: [694..695]
 r413: [686..689]
 r414: [686..687]
 r415: [684..685]
 r416: [680..681]
 r417: [674..675]
 r418: [670..671]
 r419: [668..669]
 r420: [664..665]
 r421: [658..659]
 r422: [650..653]
 r423: [650..651]
 r424: [648..649]
 r425: [646..647]
 r426: [642..643]
 r427: [636..637]
 r428: [628..631]
 r429: [628..629]
 r430: [626..627]
 r431: [624..625]
 r432: [620..621]
 r433: [614..615]
 r434: [608..609]
 r435: [606..607]
 r436: [604..605]
 r437: [604..605]
 r438: [598..599]
 r439: [600..601]
 r440: [596..597]
 r441: [594..595]
 r442: [586..587]
 r443: [584..585]
 r444: [580..581]
 r445: [572..575]
 r446: [572..573]
 r447: [570..571]
 r448: [564..567]
 r449: [564..565]
 r450: [560..561]
 r451: [556..557]
 r452: [554..555]
 r453: [554..555]
 r454: [548..549]
 r455: [548..549]
 r456: [546..547]
 r457: [546..547]
 r458: [540..541]
 r459: [540..541]
 r460: [528..529]
 r461: [524..525]
 r462: [526..527]
 r463: [522..523]
 r464: [516..517]
 r465: [514..515]
 r466: [510..511]
 r467: [506..507]
 r468: [498..499]
 r469: [496..497]
 r470: [492..493]
 r471: [484..487]
 r472: [484..485]
 r473: [482..483]
 r474: [482..483]
 r475: [474..477]
 r476: [474..475]
 r477: [472..473]
 r478: [468..469]
 r479: [460..463]
 r480: [460..461]
 r481: [458..459]
 r482: [448..449]
 r483: [446..447]
 r484: [444..445]
 r485: [440..441]
 r486: [434..435]
 r487: [426..427]
 r488: [428..429]
 r489: [424..425]
 r490: [424..425]
 r491: [422..423]
 r492: [402..403]
 r493: [398..399]
 r494: [392..393]
 r495: [386..387]
 r496: [386..387]
 r497: [420..421]
 r498: [416..417]
 r499: [410..411]
 r500: [404..405]
 r501: [404..405]
 r502: [384..385]
 r503: [384..385]
 r504: [382..383]
 r505: [378..379]
 r506: [372..373]
 r507: [366..367]
 r508: [366..367]
 r509: [364..365]
 r510: [362..363]
 r511: [360..361]
 r512: [356..357]
 r513: [350..351]
 r514: [344..345]
 r515: [344..345]
 r516: [342..343]
 r517: [336..337]
 r518: [330..331]
 r519: [324..325]
 r520: [322..323]
 r521: [320..321]
 r522: [318..319]
 r523: [316..317]
 r524: [312..313]
 r525: [306..307]
 r526: [300..301]
 r527: [300..301]
 r528: [256..257]
 r529: [260..261]
 r530: [284..285]
 r531: [280..281]
 r532: [274..275]
 r533: [274..275]
 r534: [272..273]
 r535: [268..269]
 r536: [262..263]
 r537: [262..263]
 r538: [2..3]
 r539: [6..7]
 r540: [10..11]
 r541: [250..251]
 r542: [246..247]
 r543: [240..241]
 r544: [234..235]
 r545: [232..233]
 r546: [226..227]
 r547: [220..221]
 r548: [214..215]
 r549: [206..207]
 r550: [208..209]
 r551: [204..205]
 r552: [200..201]
 r553: [194..195]
 r554: [192..193]
 r555: [188..189]
 r556: [182..183]
 r557: [176..177]
 r558: [174..175]
 r559: [170..171]
 r560: [164..165]
 r561: [158..159]
 r562: [156..157]
 r563: [150..151]
 r564: [146..147]
 r565: [140..141]
 r566: [132..135]
 r567: [132..133]
 r568: [122..123]
 r569: [120..121]
 r570: [116..117]
 r571: [108..109]
 r572: [106..107]
 r573: [102..103]
 r574: [96..97]
 r575: [94..95]
 r576: [90..91]
 r577: [84..85]
 r578: [78..79]
 r579: [76..77]
 r580: [72..73]
 r581: [66..67]
 r582: [60..61]
 r583: [54..55]
 r584: [50..51]
 r585: [44..45]
 r586: [36..39]
 r587: [36..37]
 r588: [26..27]
 r589: [24..25]
 r590: [20..21]
 r591: [12..13]
 r592: [708..709]
 r593: [550..551]
 r594: [530..531]
 r595: [430..431]
 r596: [124..125]
 r597: [28..29]
 r598: [532..549]

********** Assignment #1: **********

	 Assigning to 592 (cl=GENERAL_REGS, orig=408, freq=3000, tfirst=592, tfreq=3000)...
	   Assign 1 to reload r592 (freq=3000)
	 Assigning to 598 (cl=SSE_REGS, orig=154, freq=2000, tfirst=593, tfreq=3000)...
	 Assigning to 593 (cl=SSE_REGS, orig=153, freq=3000, tfirst=593, tfreq=3000)...
	   Assign 21 to reload r593 (freq=3000)
	Hard reg 21 is preferable by r598 with profit 1000
	Hard reg 21 is preferable by r594 with profit 500
	 Assigning to 594 (cl=SSE_REGS, orig=154, freq=2000, tfirst=593, tfreq=3000)...
	   Assign 25 to optional reload r594 (freq=2000)
	Hard reg 21 is preferable by r598 with profit 1000
	Hard reg 25 is preferable by r598 with profit 1000
	 Assigning to 595 (cl=SSE_REGS, orig=200, freq=3000, tfirst=595, tfreq=3000)...
	   Assign 22 to reload r595 (freq=3000)
	 Assigning to 596 (cl=SSE_REGS, orig=320, freq=3000, tfirst=596, tfreq=3000)...
	   Assign 23 to reload r596 (freq=3000)
	 Assigning to 597 (cl=SSE_REGS, orig=365, freq=3000, tfirst=597, tfreq=3000)...
	   Assign 23 to reload r597 (freq=3000)
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 0 out of 1 (0.00%)
   Insn after restoring regs:
  818: r594:SF=r154:SF
      REG_DEAD r154:SF
   Insn after restoring regs:
  817: r154:SF=r593:SF
      REG_DEAD r593:SF
Remove optional reload reg 594
  Restoring original insn:
  221: r460:SF=r162:SF*r154:SF
      REG_DEAD r154:SF
      REG_DEAD r162:SF
  Deleting move 818
  818: r594:SF=r154:SF
      REG_DEAD r154:SF
deleting insn with uid = 818.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 221:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=599 from oldreg=154, assigning class SSE_REGS to r599
      Making reload reg 599 for reg 154 optional
  221: r460:SF=r162:SF*r599:SF
      REG_DEAD r154:SF
      REG_DEAD r162:SF
    Inserting insn reload before:
  826: r599:SF=r154:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 826:  (0) v  (1) m {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 51
EBB 7
EBB 50
EBB 8
EBB 9 10
EBB 11 12
EBB 13 14 15
EBB 16 17
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=600 from oldreg=154, assigning class SSE_REGS to inheritance r600
    Original reg change 154->600 (bb16):
  817: r600:SF=r593:SF
      REG_DEAD r593:SF
    Add original<-inheritance after:
  827: r154:SF=r600:SF

    Inheritance reuse change 154->600 (bb16):
  826: r599:SF=r600:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   827: r154:SF=r600:SF
deleting insn with uid = 827.
EBB 18 19 20
EBB 21
EBB 22
EBB 23 24
EBB 25 26 27 28 29 30
EBB 31
EBB 54
EBB 32
EBB 53
EBB 33
EBB 52
EBB 34
EBB 35 36
EBB 37 38
EBB 56
EBB 39
EBB 55
EBB 40
EBB 41 42
EBB 43 44
EBB 45 46
EBB 59
EBB 47
EBB 58
EBB 48
EBB 57
EBB 49

********** Pseudo live ranges #2: **********

  BB 49
   Insn 759: point = 0, n_alt = -1
  BB 57
   Insn 806: point = 0, n_alt = -1
  BB 41
   Insn 530: point = 0, n_alt = -1
   Insn 529: point = 0, n_alt = 0
   Insn 528: point = 1, n_alt = 0
   Insn 527: point = 3, n_alt = 0
   Insn 526: point = 4, n_alt = 0
  BB 48
   Insn 781: point = 4, n_alt = -1
   Insn 728: point = 4, n_alt = 1
  BB 58
   Insn 809: point = 4, n_alt = -1
  BB 43
   Insn 540: point = 4, n_alt = -1
   Insn 539: point = 4, n_alt = 0
   Insn 538: point = 5, n_alt = 0
   Insn 537: point = 7, n_alt = 0
   Insn 536: point = 8, n_alt = 0
  BB 47
   Insn 779: point = 9, n_alt = -1
   Insn 722: point = 9, n_alt = 1
  BB 59
   Insn 812: point = 10, n_alt = -1
  BB 45
   Insn 548: point = 11, n_alt = -1
   Insn 547: point = 11, n_alt = 0
   Insn 546: point = 12, n_alt = 0
   Insn 545: point = 14, n_alt = 0
   Insn 544: point = 15, n_alt = 0
  BB 46
   Insn 777: point = 16, n_alt = -1
   Insn 716: point = 16, n_alt = 1
   Insn 715: point = 16, n_alt = 8
   Insn 714: point = 17, n_alt = 3
   Insn 713: point = 18, n_alt = 1
   Insn 712: point = 20, n_alt = 3
   Insn 711: point = 22, n_alt = 0
   Insn 710: point = 24, n_alt = 1
   Insn 709: point = 26, n_alt = 0
   Insn 708: point = 27, n_alt = 0
   Insn 707: point = 29, n_alt = 1
   Insn 706: point = 31, n_alt = 0
   Insn 705: point = 32, n_alt = 1
   Insn 704: point = 34, n_alt = 7
   Insn 824: point = 35, n_alt = -2
	Hard reg 23 is preferable by r597 with profit 1000
   Insn 703: point = 37, n_alt = 1
   Insn 823: point = 37, n_alt = -2
	Hard reg 23 is preferable by r597 with profit 1000
	Hard reg 21 is preferable by r597 with profit 1000
   Insn 702: point = 39, n_alt = -2
   Insn 701: point = 41, n_alt = 1
   Insn 700: point = 43, n_alt = 7
   Insn 699: point = 45, n_alt = 0
   Insn 698: point = 47, n_alt = 4
   Insn 697: point = 48, n_alt = 3
   Insn 696: point = 50, n_alt = 0
   Insn 695: point = 52, n_alt = 1
   Insn 694: point = 54, n_alt = 0
   Insn 693: point = 55, n_alt = 0
   Insn 692: point = 57, n_alt = 0
   Insn 691: point = 59, n_alt = 1
   Insn 690: point = 61, n_alt = 0
   Insn 689: point = 62, n_alt = 1
   Insn 688: point = 64, n_alt = 1
   Insn 687: point = 66, n_alt = 0
   Insn 686: point = 67, n_alt = 1
   Insn 685: point = 69, n_alt = -2
   Insn 684: point = 71, n_alt = 7
   Insn 683: point = 73, n_alt = 4
   Insn 682: point = 74, n_alt = 3
   Insn 681: point = 76, n_alt = 0
   Insn 680: point = 78, n_alt = 1
   Insn 679: point = 80, n_alt = 0
   Insn 678: point = 81, n_alt = 0
   Insn 677: point = 83, n_alt = 0
   Insn 676: point = 85, n_alt = 1
   Insn 675: point = 87, n_alt = 0
   Insn 674: point = 88, n_alt = 1
   Insn 673: point = 90, n_alt = 1
   Insn 672: point = 92, n_alt = 0
   Insn 671: point = 93, n_alt = 7
   Insn 670: point = 95, n_alt = 4
   Insn 669: point = 96, n_alt = 3
   Insn 668: point = 98, n_alt = 0
   Insn 667: point = 100, n_alt = 1
   Insn 666: point = 102, n_alt = 0
   Insn 665: point = 103, n_alt = 0
   Insn 664: point = 105, n_alt = 0
   Insn 663: point = 107, n_alt = 1
   Insn 662: point = 109, n_alt = 0
   Insn 661: point = 110, n_alt = 1
   Insn 660: point = 112, n_alt = 1
   Insn 659: point = 114, n_alt = 0
   Insn 658: point = 115, n_alt = 7
   Insn 657: point = 117, n_alt = 3
   Insn 656: point = 118, n_alt = 3
   Insn 655: point = 120, n_alt = 0
   Insn 654: point = 122, n_alt = 1
   Insn 653: point = 124, n_alt = 0
   Insn 652: point = 125, n_alt = 0
   Insn 651: point = 127, n_alt = 1
   Insn 650: point = 129, n_alt = 0
   Insn 649: point = 130, n_alt = 8
   Insn 648: point = 131, n_alt = 3
   Insn 647: point = 132, n_alt = 1
   Insn 646: point = 134, n_alt = 3
   Insn 645: point = 136, n_alt = 0
   Insn 644: point = 138, n_alt = 1
   Insn 643: point = 140, n_alt = 0
   Insn 642: point = 141, n_alt = 0
   Insn 641: point = 143, n_alt = 1
   Insn 640: point = 145, n_alt = 0
   Insn 639: point = 146, n_alt = 1
   Insn 638: point = 148, n_alt = 7
   Insn 822: point = 149, n_alt = -2
	Hard reg 23 is preferable by r596 with profit 1000
   Insn 637: point = 151, n_alt = 1
   Insn 821: point = 151, n_alt = -2
	Hard reg 23 is preferable by r596 with profit 1000
	Hard reg 21 is preferable by r596 with profit 1000
   Insn 636: point = 153, n_alt = -2
   Insn 635: point = 155, n_alt = 1
   Insn 634: point = 157, n_alt = 7
   Insn 633: point = 159, n_alt = 0
   Insn 632: point = 161, n_alt = 4
   Insn 631: point = 162, n_alt = 3
   Insn 630: point = 164, n_alt = 0
   Insn 629: point = 166, n_alt = 1
   Insn 628: point = 168, n_alt = 0
   Insn 627: point = 169, n_alt = 0
   Insn 626: point = 171, n_alt = 0
   Insn 625: point = 173, n_alt = 1
   Insn 624: point = 175, n_alt = 0
   Insn 623: point = 176, n_alt = 1
   Insn 622: point = 178, n_alt = 1
   Insn 621: point = 180, n_alt = 0
   Insn 620: point = 181, n_alt = 1
   Insn 619: point = 183, n_alt = -2
   Insn 618: point = 185, n_alt = 2
   Insn 617: point = 187, n_alt = 7
   Insn 616: point = 188, n_alt = 7
   Insn 615: point = 190, n_alt = 4
   Insn 614: point = 191, n_alt = 3
   Insn 613: point = 193, n_alt = 0
   Insn 612: point = 195, n_alt = 1
   Insn 611: point = 197, n_alt = 0
   Insn 610: point = 198, n_alt = 0
   Insn 609: point = 200, n_alt = 0
   Insn 608: point = 202, n_alt = 1
   Insn 607: point = 204, n_alt = 0
   Insn 606: point = 205, n_alt = 1
   Insn 605: point = 207, n_alt = 1
   Insn 604: point = 209, n_alt = 0
   Insn 603: point = 210, n_alt = 7
   Insn 602: point = 212, n_alt = 4
   Insn 601: point = 213, n_alt = 3
   Insn 600: point = 215, n_alt = 0
   Insn 599: point = 217, n_alt = 1
   Insn 598: point = 219, n_alt = 0
   Insn 597: point = 220, n_alt = 0
   Insn 596: point = 222, n_alt = 0
   Insn 595: point = 224, n_alt = 1
   Insn 594: point = 226, n_alt = 0
   Insn 593: point = 227, n_alt = 1
   Insn 592: point = 229, n_alt = 1
   Insn 591: point = 231, n_alt = 0
   Insn 590: point = 232, n_alt = 7
   Insn 589: point = 234, n_alt = 3
   Insn 588: point = 235, n_alt = 3
   Insn 587: point = 237, n_alt = 0
   Insn 586: point = 239, n_alt = 1
   Insn 585: point = 241, n_alt = 0
   Insn 584: point = 242, n_alt = 0
   Insn 583: point = 244, n_alt = 1
   Insn 582: point = 246, n_alt = 0
   Insn 581: point = 247, n_alt = 8
   Insn 580: point = 248, n_alt = 1
   Insn 579: point = 250, n_alt = 2
   Insn 578: point = 251, n_alt = -2
   Insn 577: point = 253, n_alt = 2
   Insn 576: point = 255, n_alt = 7
   Insn 575: point = 257, n_alt = 4
   Insn 574: point = 258, n_alt = 3
   Insn 573: point = 260, n_alt = 0
   Insn 572: point = 262, n_alt = 1
   Insn 571: point = 264, n_alt = 0
   Insn 570: point = 265, n_alt = 0
   Insn 569: point = 267, n_alt = 0
   Insn 568: point = 269, n_alt = 1
   Insn 567: point = 271, n_alt = 0
   Insn 566: point = 272, n_alt = 1
   Insn 565: point = 274, n_alt = 1
   Insn 564: point = 276, n_alt = 0
   Insn 563: point = 278, n_alt = 0
   Insn 562: point = 279, n_alt = 7
   Insn 561: point = 281, n_alt = 4
   Insn 560: point = 282, n_alt = 3
   Insn 559: point = 284, n_alt = 0
   Insn 558: point = 286, n_alt = 1
   Insn 557: point = 288, n_alt = 0
   Insn 556: point = 289, n_alt = 0
   Insn 555: point = 291, n_alt = 0
   Insn 554: point = 293, n_alt = 1
   Insn 553: point = 295, n_alt = 0
   Insn 552: point = 296, n_alt = 1
   Insn 551: point = 298, n_alt = 1
   Insn 550: point = 300, n_alt = 0
  BB 44
   Insn 542: point = 302, n_alt = 1
  BB 42
   Insn 534: point = 303, n_alt = 1
   Insn 533: point = 304, n_alt = 0
   Insn 532: point = 305, n_alt = 0
  BB 40
   Insn 524: point = 306, n_alt = 1
  BB 55
   Insn 800: point = 306, n_alt = -1
  BB 35
   Insn 482: point = 306, n_alt = -1
   Insn 481: point = 306, n_alt = 0
   Insn 480: point = 307, n_alt = 0
   Insn 479: point = 309, n_alt = 0
   Insn 478: point = 310, n_alt = 0
  BB 39
   Insn 775: point = 311, n_alt = -1
   Insn 518: point = 311, n_alt = 1
  BB 56
   Insn 803: point = 312, n_alt = -1
  BB 37
   Insn 490: point = 313, n_alt = -1
   Insn 489: point = 313, n_alt = 0
   Insn 488: point = 314, n_alt = 0
   Insn 487: point = 316, n_alt = 0
   Insn 486: point = 317, n_alt = 0
  BB 38
   Insn 773: point = 318, n_alt = -1
   Insn 512: point = 318, n_alt = 1
   Insn 511: point = 318, n_alt = 8
   Insn 510: point = 319, n_alt = 7
   Insn 509: point = 320, n_alt = 3
   Insn 508: point = 321, n_alt = 3
   Insn 507: point = 323, n_alt = 0
   Insn 506: point = 325, n_alt = 1
   Insn 505: point = 327, n_alt = 0
   Insn 504: point = 328, n_alt = 0
   Insn 503: point = 330, n_alt = 1
   Insn 502: point = 332, n_alt = 0
   Insn 501: point = 333, n_alt = 8
   Insn 500: point = 334, n_alt = 7
   Insn 499: point = 335, n_alt = 3
   Insn 498: point = 336, n_alt = 3
   Insn 497: point = 338, n_alt = 0
   Insn 496: point = 340, n_alt = 1
   Insn 495: point = 342, n_alt = 0
   Insn 494: point = 343, n_alt = 0
   Insn 493: point = 345, n_alt = 1
   Insn 492: point = 347, n_alt = 0
  BB 36
   Insn 484: point = 349, n_alt = 1
  BB 34
   Insn 476: point = 350, n_alt = 1
   Insn 475: point = 351, n_alt = 0
   Insn 474: point = 352, n_alt = 0
  BB 52
   Insn 791: point = 353, n_alt = -1
  BB 9
   Insn 55: point = 353, n_alt = -1
   Insn 54: point = 353, n_alt = 0
   Insn 53: point = 354, n_alt = 0
   Insn 52: point = 356, n_alt = 0
   Insn 51: point = 357, n_alt = 0
  BB 33
   Insn 771: point = 357, n_alt = -1
   Insn 468: point = 357, n_alt = 1
  BB 53
   Insn 794: point = 357, n_alt = -1
  BB 11
   Insn 65: point = 357, n_alt = -1
   Insn 64: point = 357, n_alt = 0
   Insn 63: point = 358, n_alt = 0
   Insn 62: point = 360, n_alt = 0
   Insn 61: point = 361, n_alt = 0
  BB 32
   Insn 769: point = 362, n_alt = -1
   Insn 462: point = 362, n_alt = 1
  BB 54
   Insn 797: point = 363, n_alt = -1
  BB 13
   Insn 73: point = 364, n_alt = -1
   Insn 72: point = 364, n_alt = 0
   Insn 71: point = 365, n_alt = 0
   Insn 70: point = 367, n_alt = 0
   Insn 69: point = 368, n_alt = 0
  BB 31
   Insn 767: point = 369, n_alt = -1
   Insn 456: point = 369, n_alt = 1
  BB 30
   Insn 453: point = 370, n_alt = 8
   Insn 452: point = 371, n_alt = 7
   Insn 451: point = 372, n_alt = 4
   Insn 450: point = 373, n_alt = 3
   Insn 449: point = 375, n_alt = 0
   Insn 448: point = 377, n_alt = 0
   Insn 447: point = 379, n_alt = 0
   Insn 446: point = 380, n_alt = 0
   Insn 445: point = 382, n_alt = 0
   Insn 444: point = 384, n_alt = 0
   Insn 443: point = 386, n_alt = 0
   Insn 442: point = 387, n_alt = 1
   Insn 441: point = 389, n_alt = 0
   Insn 440: point = 391, n_alt = 0
  BB 29
   Insn 435: point = 393, n_alt = -1
   Insn 434: point = 393, n_alt = 1
   Insn 433: point = 394, n_alt = 7
  BB 28
   Insn 428: point = 396, n_alt = -1
   Insn 427: point = 396, n_alt = 1
   Insn 426: point = 397, n_alt = 7
  BB 27
   Insn 425: point = 399, n_alt = -1
   Insn 424: point = 399, n_alt = 1
   Insn 423: point = 400, n_alt = 7
   Insn 422: point = 401, n_alt = 7
   Insn 421: point = 403, n_alt = 4
   Insn 420: point = 404, n_alt = 3
   Insn 419: point = 406, n_alt = 0
   Insn 418: point = 408, n_alt = 0
   Insn 417: point = 410, n_alt = 0
   Insn 416: point = 411, n_alt = 0
   Insn 415: point = 413, n_alt = 0
   Insn 414: point = 415, n_alt = 0
   Insn 413: point = 417, n_alt = 0
   Insn 412: point = 418, n_alt = 1
   Insn 411: point = 420, n_alt = 0
   Insn 410: point = 422, n_alt = 0
   Insn 409: point = 424, n_alt = 0
   Insn 408: point = 425, n_alt = 8
   Insn 407: point = 426, n_alt = 7
   Insn 406: point = 427, n_alt = 4
   Insn 405: point = 428, n_alt = 3
   Insn 404: point = 430, n_alt = 0
   Insn 403: point = 432, n_alt = 0
   Insn 402: point = 434, n_alt = 0
   Insn 401: point = 435, n_alt = 0
   Insn 400: point = 437, n_alt = 0
   Insn 399: point = 439, n_alt = 0
   Insn 398: point = 441, n_alt = 0
   Insn 397: point = 442, n_alt = 1
   Insn 396: point = 444, n_alt = 0
   Insn 395: point = 446, n_alt = 0
  BB 26
   Insn 390: point = 448, n_alt = -1
   Insn 389: point = 448, n_alt = 1
   Insn 388: point = 449, n_alt = 7
  BB 25
   Insn 383: point = 451, n_alt = -1
   Insn 382: point = 451, n_alt = 1
   Insn 381: point = 452, n_alt = 7
  BB 24
   Insn 378: point = 454, n_alt = 8
   Insn 377: point = 455, n_alt = 7
   Insn 376: point = 456, n_alt = 4
   Insn 375: point = 457, n_alt = 3
   Insn 374: point = 459, n_alt = 0
   Insn 373: point = 461, n_alt = 0
   Insn 372: point = 463, n_alt = 0
   Insn 371: point = 464, n_alt = 0
   Insn 370: point = 466, n_alt = 0
   Insn 369: point = 468, n_alt = 0
   Insn 368: point = 470, n_alt = 0
   Insn 367: point = 471, n_alt = 1
   Insn 366: point = 473, n_alt = 0
   Insn 365: point = 475, n_alt = 0
  BB 23
   Insn 360: point = 477, n_alt = -1
   Insn 359: point = 477, n_alt = 1
   Insn 358: point = 478, n_alt = 7
   Insn 357: point = 479, n_alt = 7
  BB 21
   Insn 765: point = 481, n_alt = -1
   Insn 334: point = 481, n_alt = 8
   Insn 333: point = 482, n_alt = 7
   Insn 332: point = 483, n_alt = 4
   Insn 331: point = 484, n_alt = 3
   Insn 330: point = 486, n_alt = 0
   Insn 329: point = 488, n_alt = 0
   Insn 328: point = 490, n_alt = 0
   Insn 327: point = 491, n_alt = 0
   Insn 326: point = 493, n_alt = 0
   Insn 325: point = 495, n_alt = 0
   Insn 324: point = 497, n_alt = 0
   Insn 323: point = 498, n_alt = 1
   Insn 322: point = 500, n_alt = 0
   Insn 321: point = 502, n_alt = 0
  BB 22
   Insn 352: point = 504, n_alt = 8
   Insn 351: point = 505, n_alt = 7
   Insn 350: point = 506, n_alt = 4
   Insn 349: point = 507, n_alt = 3
   Insn 348: point = 509, n_alt = 0
   Insn 347: point = 511, n_alt = 0
   Insn 346: point = 513, n_alt = 0
   Insn 345: point = 514, n_alt = 0
   Insn 344: point = 516, n_alt = 0
   Insn 343: point = 518, n_alt = 0
   Insn 342: point = 520, n_alt = 0
   Insn 341: point = 521, n_alt = 1
   Insn 340: point = 523, n_alt = 0
   Insn 339: point = 525, n_alt = 0
  BB 20
   Insn 315: point = 527, n_alt = -1
   Insn 314: point = 527, n_alt = 1
   Insn 313: point = 528, n_alt = 7
  BB 19
   Insn 311: point = 530, n_alt = -1
   Insn 310: point = 530, n_alt = 1
   Insn 309: point = 531, n_alt = 7
   Insn 308: point = 532, n_alt = 7
   Insn 307: point = 533, n_alt = 8
   Insn 306: point = 534, n_alt = 2
   Insn 305: point = 536, n_alt = 7
   Insn 820: point = 537, n_alt = -2
	Hard reg 22 is preferable by r595 with profit 1000
   Insn 304: point = 539, n_alt = 1
   Insn 819: point = 539, n_alt = -2
	Hard reg 22 is preferable by r595 with profit 1000
	Hard reg 21 is preferable by r595 with profit 1000
   Insn 303: point = 541, n_alt = 7
   Insn 302: point = 543, n_alt = 4
   Insn 301: point = 544, n_alt = 3
   Insn 300: point = 546, n_alt = 0
   Insn 299: point = 548, n_alt = 0
   Insn 298: point = 550, n_alt = 0
   Insn 297: point = 551, n_alt = 0
   Insn 296: point = 553, n_alt = 0
   Insn 295: point = 555, n_alt = 0
  BB 18
   Insn 290: point = 557, n_alt = -1
   Insn 289: point = 557, n_alt = 1
   Insn 288: point = 558, n_alt = 7
   Insn 287: point = 559, n_alt = 8
   Insn 286: point = 560, n_alt = 1
   Insn 285: point = 562, n_alt = 1
   Insn 284: point = 564, n_alt = 1
   Insn 283: point = 566, n_alt = -2
   Insn 282: point = 568, n_alt = 2
   Insn 281: point = 570, n_alt = 7
   Insn 280: point = 571, n_alt = 7
   Insn 279: point = 573, n_alt = 0
   Insn 278: point = 575, n_alt = 4
   Insn 277: point = 576, n_alt = 3
   Insn 276: point = 578, n_alt = 0
   Insn 275: point = 580, n_alt = 0
   Insn 274: point = 582, n_alt = 0
   Insn 273: point = 583, n_alt = 0
   Insn 272: point = 585, n_alt = 0
   Insn 271: point = 587, n_alt = 0
   Insn 270: point = 588, n_alt = 7
   Insn 269: point = 590, n_alt = 0
   Insn 268: point = 592, n_alt = 4
   Insn 267: point = 593, n_alt = 3
   Insn 266: point = 595, n_alt = 0
   Insn 265: point = 597, n_alt = 0
   Insn 264: point = 599, n_alt = 0
   Insn 263: point = 600, n_alt = 0
   Insn 262: point = 601, n_alt = 7
   Insn 261: point = 603, n_alt = 0
   Insn 260: point = 605, n_alt = 4
   Insn 259: point = 606, n_alt = 3
   Insn 258: point = 608, n_alt = 0
   Insn 257: point = 610, n_alt = 0
   Insn 256: point = 612, n_alt = 0
   Insn 255: point = 613, n_alt = 0
   Insn 254: point = 615, n_alt = 0
   Insn 253: point = 617, n_alt = 0
   Insn 252: point = 618, n_alt = 8
   Insn 251: point = 619, n_alt = 4
   Insn 250: point = 620, n_alt = 1
   Insn 249: point = 622, n_alt = 3
   Insn 248: point = 624, n_alt = 0
   Insn 247: point = 626, n_alt = 0
   Insn 246: point = 628, n_alt = 0
   Insn 245: point = 629, n_alt = 0
   Insn 244: point = 631, n_alt = 0
   Insn 243: point = 633, n_alt = 0
   Insn 242: point = 634, n_alt = -2
   Insn 241: point = 636, n_alt = 1
   Insn 240: point = 638, n_alt = 7
   Insn 239: point = 639, n_alt = 1
   Insn 238: point = 641, n_alt = 7
  BB 17
   Insn 235: point = 643, n_alt = 7
  BB 16
   Insn 233: point = 645, n_alt = -1
   Insn 232: point = 645, n_alt = 0
   Insn 231: point = 646, n_alt = 0
   Insn 230: point = 648, n_alt = 0
   Insn 229: point = 650, n_alt = 0
   Insn 228: point = 651, n_alt = 1
   Insn 227: point = 651, n_alt = 0
   Insn 226: point = 653, n_alt = 0
   Insn 225: point = 654, n_alt = 1
   Insn 224: point = 655, n_alt = 7
   Insn 223: point = 656, n_alt = 7
   Insn 222: point = 657, n_alt = 8
   Insn 221: point = 658, n_alt = 1
   Insn 826: point = 660, n_alt = 7
	   Creating copy r599<-r600@1000
   Insn 220: point = 662, n_alt = -2
   Insn 219: point = 663, n_alt = 0
   Insn 218: point = 663, n_alt = -2
   Insn 217: point = 664, n_alt = 2
   Insn 216: point = 666, n_alt = -2
   Insn 215: point = 668, n_alt = 2
   Insn 214: point = 670, n_alt = 7
   Insn 213: point = 671, n_alt = 7
   Insn 212: point = 672, n_alt = 1
   Insn 211: point = 674, n_alt = -2
   Insn 210: point = 676, n_alt = 2
   Insn 209: point = 678, n_alt = 7
   Insn 208: point = 679, n_alt = 7
   Insn 207: point = 680, n_alt = 1
   Insn 206: point = 682, n_alt = 7
   Insn 205: point = 683, n_alt = 7
   Insn 817: point = 684, n_alt = 8
	   Creating copy r593->r600@1000
   Insn 204: point = 686, n_alt = 2
   Insn 816: point = 686, n_alt = -2
	Hard reg 21 is preferable by r593 with profit 1000
   Insn 203: point = 688, n_alt = 1
   Insn 202: point = 690, n_alt = 7
   Insn 201: point = 691, n_alt = 7
   Insn 200: point = 692, n_alt = 8
   Insn 199: point = 693, n_alt = 1
   Insn 198: point = 695, n_alt = 7
   Insn 197: point = 697, n_alt = 4
   Insn 196: point = 698, n_alt = 1
   Insn 195: point = 700, n_alt = 7
   Insn 194: point = 702, n_alt = 0
   Insn 193: point = 704, n_alt = 4
   Insn 192: point = 705, n_alt = 3
   Insn 191: point = 707, n_alt = 0
   Insn 190: point = 709, n_alt = 0
   Insn 189: point = 710, n_alt = 7
   Insn 188: point = 712, n_alt = 0
   Insn 187: point = 714, n_alt = 4
   Insn 186: point = 715, n_alt = 3
   Insn 185: point = 717, n_alt = 0
   Insn 184: point = 719, n_alt = 0
   Insn 183: point = 721, n_alt = 0
   Insn 182: point = 722, n_alt = 0
   Insn 181: point = 724, n_alt = 0
   Insn 180: point = 726, n_alt = 0
   Insn 179: point = 727, n_alt = 8
   Insn 178: point = 728, n_alt = 1
  BB 15
   Insn 175: point = 731, n_alt = 7
  BB 14
   Insn 173: point = 733, n_alt = -1
   Insn 172: point = 733, n_alt = 0
   Insn 171: point = 734, n_alt = 0
   Insn 170: point = 736, n_alt = 0
   Insn 169: point = 738, n_alt = 0
   Insn 168: point = 739, n_alt = 1
   Insn 167: point = 739, n_alt = 0
   Insn 166: point = 741, n_alt = 0
   Insn 165: point = 742, n_alt = 1
   Insn 164: point = 742, n_alt = 7
   Insn 163: point = 743, n_alt = 8
   Insn 162: point = 744, n_alt = 1
   Insn 161: point = 746, n_alt = 7
   Insn 160: point = 747, n_alt = -2
   Insn 159: point = 749, n_alt = 2
   Insn 158: point = 751, n_alt = 7
   Insn 157: point = 752, n_alt = 7
   Insn 156: point = 753, n_alt = 8
   Insn 155: point = 754, n_alt = 7
   Insn 154: point = 756, n_alt = 4
   Insn 153: point = 757, n_alt = 3
   Insn 152: point = 759, n_alt = 0
   Insn 151: point = 761, n_alt = 0
   Insn 150: point = 763, n_alt = 0
   Insn 149: point = 764, n_alt = 0
   Insn 148: point = 766, n_alt = 0
   Insn 147: point = 768, n_alt = 0
   Insn 146: point = 770, n_alt = 0
   Insn 145: point = 771, n_alt = 1
   Insn 144: point = 773, n_alt = 0
   Insn 143: point = 775, n_alt = 0
   Insn 142: point = 776, n_alt = 8
   Insn 141: point = 777, n_alt = 7
   Insn 140: point = 779, n_alt = 0
   Insn 139: point = 781, n_alt = 4
   Insn 138: point = 782, n_alt = 3
   Insn 137: point = 784, n_alt = 0
   Insn 136: point = 786, n_alt = 0
   Insn 135: point = 788, n_alt = 0
   Insn 134: point = 789, n_alt = 0
   Insn 133: point = 791, n_alt = 0
   Insn 132: point = 793, n_alt = 0
   Insn 131: point = 795, n_alt = 0
   Insn 130: point = 796, n_alt = 1
   Insn 129: point = 798, n_alt = 0
   Insn 128: point = 800, n_alt = 0
   Insn 127: point = 801, n_alt = 8
   Insn 126: point = 802, n_alt = 7
   Insn 125: point = 804, n_alt = 0
   Insn 124: point = 806, n_alt = 4
   Insn 123: point = 807, n_alt = 3
   Insn 122: point = 809, n_alt = 0
   Insn 121: point = 811, n_alt = 0
   Insn 120: point = 813, n_alt = 0
   Insn 119: point = 814, n_alt = 0
   Insn 118: point = 816, n_alt = 0
   Insn 117: point = 818, n_alt = 0
   Insn 116: point = 820, n_alt = 0
   Insn 115: point = 821, n_alt = 1
   Insn 114: point = 823, n_alt = 0
   Insn 113: point = 825, n_alt = 0
   Insn 112: point = 826, n_alt = 8
   Insn 111: point = 827, n_alt = 1
   Insn 110: point = 829, n_alt = 7
   Insn 109: point = 831, n_alt = 4
   Insn 108: point = 832, n_alt = 3
   Insn 107: point = 834, n_alt = 0
   Insn 106: point = 836, n_alt = 0
   Insn 105: point = 838, n_alt = 0
   Insn 104: point = 839, n_alt = 0
   Insn 103: point = 841, n_alt = 0
   Insn 102: point = 843, n_alt = 0
   Insn 101: point = 844, n_alt = 7
   Insn 100: point = 846, n_alt = 0
   Insn 99: point = 848, n_alt = 4
   Insn 98: point = 849, n_alt = 3
   Insn 97: point = 851, n_alt = 0
   Insn 96: point = 853, n_alt = 0
   Insn 95: point = 855, n_alt = 0
   Insn 94: point = 856, n_alt = 0
   Insn 93: point = 858, n_alt = 0
   Insn 92: point = 860, n_alt = 0
   Insn 91: point = 862, n_alt = 0
   Insn 90: point = 863, n_alt = 1
   Insn 89: point = 865, n_alt = 0
   Insn 88: point = 867, n_alt = 0
   Insn 87: point = 868, n_alt = 1
   Insn 815: point = 869, n_alt = -2
	Hard reg 0 is preferable by r592 with profit 1000
   Insn 86: point = 871, n_alt = 0
   Insn 814: point = 872, n_alt = -2
	Hard reg 0 is preferable by r592 with profit 1000
	Hard reg 1 is preferable by r592 with profit 1000
   Insn 85: point = 874, n_alt = 0
   Insn 84: point = 875, n_alt = 0
   Insn 83: point = 877, n_alt = 0
   Insn 82: point = 879, n_alt = 4
   Insn 81: point = 880, n_alt = 3
   Insn 80: point = 882, n_alt = 0
   Insn 79: point = 884, n_alt = 0
   Insn 78: point = 886, n_alt = 0
   Insn 77: point = 887, n_alt = 0
   Insn 76: point = 889, n_alt = 0
   Insn 75: point = 891, n_alt = 0
  BB 12
   Insn 67: point = 893, n_alt = 1
  BB 10
   Insn 59: point = 894, n_alt = 1
   Insn 58: point = 895, n_alt = 0
   Insn 57: point = 896, n_alt = 0
  BB 8
   Insn 49: point = 897, n_alt = 1
  BB 50
   Insn 785: point = 897, n_alt = -1
  BB 3
   Insn 17: point = 897, n_alt = -1
   Insn 16: point = 897, n_alt = 0
   Insn 15: point = 898, n_alt = 0
   Insn 14: point = 900, n_alt = 0
   Insn 13: point = 901, n_alt = 0
  BB 7
   Insn 762: point = 902, n_alt = -1
   Insn 43: point = 902, n_alt = 1
  BB 51
   Insn 788: point = 903, n_alt = -1
  BB 5
   Insn 25: point = 904, n_alt = -1
   Insn 24: point = 904, n_alt = 0
   Insn 23: point = 905, n_alt = 0
   Insn 22: point = 907, n_alt = 0
   Insn 21: point = 908, n_alt = 0
  BB 6
   Insn 760: point = 909, n_alt = -1
   Insn 37: point = 909, n_alt = 1
   Insn 36: point = 909, n_alt = 8
   Insn 35: point = 910, n_alt = 7
   Insn 34: point = 911, n_alt = 4
   Insn 33: point = 912, n_alt = 3
   Insn 32: point = 914, n_alt = 0
   Insn 31: point = 916, n_alt = 1
   Insn 30: point = 918, n_alt = 0
   Insn 29: point = 919, n_alt = 0
   Insn 28: point = 921, n_alt = 1
   Insn 27: point = 923, n_alt = 0
  BB 4
   Insn 19: point = 925, n_alt = 1
  BB 2
   Insn 11: point = 926, n_alt = 1
   Insn 10: point = 927, n_alt = 0
   Insn 9: point = 928, n_alt = 0
   Insn 8: point = 929, n_alt = 8
   Insn 7: point = 930, n_alt = 7
   Insn 3: point = 931, n_alt = 5
   Insn 2: point = 931, n_alt = 5
 r87: [920..921]
 r88: [915..919]
 r89: [915..916]
 r90: [913..914]
 r91: [909..912]
 r92: [888..889]
 r93: [883..887]
 r94: [883..884]
 r95: [881..882]
 r96: [878..880]
 r97: [871..875]
 r98: [864..865]
 r99: [857..863]
 r100: [859..860]
 r101: [857..858]
 r102: [852..856]
 r103: [852..853]
 r104: [850..851]
 r105: [847..849]
 r106: [828..844]
 r107: [840..841]
 r108: [835..839]
 r109: [835..836]
 r110: [833..834]
 r111: [830..832]
 r112: [828..829]
 r113: [822..823]
 r114: [815..821]
 r115: [817..818]
 r116: [815..816]
 r117: [810..814]
 r118: [810..811]
 r119: [808..809]
 r120: [805..807]
 r121: [797..798]
 r122: [790..796]
 r123: [792..793]
 r124: [790..791]
 r125: [785..789]
 r126: [785..786]
 r127: [783..784]
 r128: [780..782]
 r129: [772..773]
 r130: [765..771]
 r131: [767..768]
 r132: [765..766]
 r133: [760..764]
 r134: [760..761]
 r135: [758..759]
 r136: [755..757]
 r137: [748..749]
 r138: [745..747]
 r139: [735..739]
 r140: [735..736]
 r141: [733..734]
 r142: [723..724]
 r143: [718..722]
 r144: [718..719]
 r145: [716..717]
 r146: [713..715]
 r147: [699..710]
 r148: [706..707]
 r149: [703..705]
 r150: [699..700]
 r151: [694..698]
 r152: [694..695]
 r153: [687..688]
 r155: [673..680]
 r156: [675..676]
 r157: [673..674]
 r158: [665..672]
 r159: [667..668]
 r160: [665..666]
 r161: [663..664]
 r162: [659..662]
 r163: [647..651]
 r164: [647..648]
 r165: [645..646]
 r166: [637..639]
 r167: [635..636]
 r168: [621..634]
 r169: [630..631]
 r170: [625..629]
 r171: [625..626]
 r172: [623..624]
 r173: [618..622]
 r174: [618..620]
 r175: [614..615]
 r176: [609..613]
 r177: [609..610]
 r178: [607..608]
 r179: [604..606]
 r180: [561..601]
 r181: [596..597]
 r182: [594..595]
 r183: [591..593]
 r184: [565..588]
 r185: [584..585]
 r186: [579..583]
 r187: [579..580]
 r188: [577..578]
 r189: [574..576]
 r190: [569..571]
 r191: [567..568]
 r192: [565..566]
 r193: [563..564]
 r194: [561..562]
 r195: [552..553]
 r196: [547..551]
 r197: [547..548]
 r198: [545..546]
 r199: [542..544]
 r200: [540..541]
 r201: [535..537]
 r202: [499..500]
 r203: [492..498]
 r204: [494..495]
 r205: [492..493]
 r206: [487..491]
 r207: [487..488]
 r208: [485..486]
 r209: [481..484]
 r210: [522..523]
 r211: [515..521]
 r212: [517..518]
 r213: [515..516]
 r214: [510..514]
 r215: [510..511]
 r216: [508..509]
 r217: [504..507]
 r218: [472..473]
 r219: [465..471]
 r220: [467..468]
 r221: [465..466]
 r222: [460..464]
 r223: [460..461]
 r224: [458..459]
 r225: [454..457]
 r226: [443..444]
 r227: [436..442]
 r228: [438..439]
 r229: [436..437]
 r230: [431..435]
 r231: [431..432]
 r232: [429..430]
 r233: [425..428]
 r234: [421..422]
 r235: [419..420]
 r236: [412..418]
 r237: [414..415]
 r238: [412..413]
 r239: [407..411]
 r240: [407..408]
 r241: [405..406]
 r242: [402..404]
 r243: [396..401]
 r244: [388..389]
 r245: [381..387]
 r246: [383..384]
 r247: [381..382]
 r248: [376..380]
 r249: [376..377]
 r250: [374..375]
 r251: [370..373]
 r252: [344..345]
 r253: [339..343]
 r254: [339..340]
 r255: [337..338]
 r256: [333..336]
 r257: [329..330]
 r258: [324..328]
 r259: [324..325]
 r260: [322..323]
 r261: [318..321]
 r262: [297..298]
 r263: [290..296]
 r264: [292..293]
 r265: [290..291]
 r266: [285..289]
 r267: [285..286]
 r268: [283..284]
 r269: [280..282]
 r270: [254..279]
 r271: [275..276]
 r272: [273..274]
 r273: [266..272]
 r274: [268..269]
 r275: [266..267]
 r276: [261..265]
 r277: [261..262]
 r278: [259..260]
 r279: [256..258]
 r280: [254..255]
 r281: [252..253]
 r282: [249..251]
 r283: [243..244]
 r284: [238..242]
 r285: [238..239]
 r286: [236..237]
 r287: [233..235]
 r288: [133..232]
 r289: [228..229]
 r290: [221..227]
 r291: [223..224]
 r292: [221..222]
 r293: [216..220]
 r294: [216..217]
 r295: [214..215]
 r296: [211..213]
 r297: [182..210]
 r298: [206..207]
 r299: [199..205]
 r300: [201..202]
 r301: [199..200]
 r302: [194..198]
 r303: [194..195]
 r304: [192..193]
 r305: [189..191]
 r306: [186..188]
 r307: [184..185]
 r308: [182..183]
 r309: [156..181]
 r310: [177..178]
 r311: [170..176]
 r312: [172..173]
 r313: [170..171]
 r314: [165..169]
 r315: [165..166]
 r316: [163..164]
 r317: [160..162]
 r318: [156..157]
 r319: [154..155]
 r320: [152..153]
 r321: [147..149]
 r322: [133..146]
 r323: [142..143]
 r324: [137..141]
 r325: [137..138]
 r326: [135..136]
 r327: [130..134]
 r328: [130..132]
 r329: [126..127]
 r330: [121..125]
 r331: [121..122]
 r332: [119..120]
 r333: [116..118]
 r334: [19..115]
 r335: [111..112]
 r336: [104..110]
 r337: [106..107]
 r338: [104..105]
 r339: [99..103]
 r340: [99..100]
 r341: [97..98]
 r342: [94..96]
 r343: [68..93]
 r344: [89..90]
 r345: [82..88]
 r346: [84..85]
 r347: [82..83]
 r348: [77..81]
 r349: [77..78]
 r350: [75..76]
 r351: [72..74]
 r352: [70..71]
 r353: [68..69]
 r354: [42..67]
 r355: [63..64]
 r356: [56..62]
 r357: [58..59]
 r358: [56..57]
 r359: [51..55]
 r360: [51..52]
 r361: [49..50]
 r362: [46..48]
 r363: [42..43]
 r364: [40..41]
 r365: [38..39]
 r366: [33..35]
 r367: [19..32]
 r368: [28..29]
 r369: [23..27]
 r370: [23..24]
 r371: [21..22]
 r372: [16..20]
 r373: [16..18]
 r374: [733..742] [729..731]
 r375: [645..656] [640..643]
 r376: [926..928]
 r377: [897..927]
 r378: [897..898]
 r379: [904..905]
 r380: [353..354]
 r381: [894..896]
 r382: [357..895]
 r383: [357..358]
 r384: [364..365]
 r385: [350..352]
 r386: [306..351]
 r387: [306..307]
 r388: [313..314]
 r389: [0..1]
 r390: [303..305]
 r391: [4..304]
 r392: [4..5]
 r393: [11..12]
 r394: [929..930]
 r395: [899..900]
 r396: [906..907]
 r397: [922..923]
 r398: [917..918]
 r399: [909..911]
 r400: [909..910]
 r401: [355..356]
 r402: [359..360]
 r403: [366..367]
 r404: [890..891]
 r405: [885..886]
 r406: [876..879]
 r407: [876..877]
 r408: [873..874]
 r409: [868..869]
 r410: [866..867]
 r411: [861..862]
 r412: [854..855]
 r413: [845..848]
 r414: [845..846]
 r415: [842..843]
 r416: [837..838]
 r417: [830..831]
 r418: [826..827]
 r419: [824..825]
 r420: [819..820]
 r421: [812..813]
 r422: [803..806]
 r423: [803..804]
 r424: [801..802]
 r425: [799..800]
 r426: [794..795]
 r427: [787..788]
 r428: [778..781]
 r429: [778..779]
 r430: [776..777]
 r431: [774..775]
 r432: [769..770]
 r433: [762..763]
 r434: [755..756]
 r435: [753..754]
 r436: [750..752]
 r437: [750..751]
 r438: [743..744]
 r439: [745..746]
 r440: [740..741]
 r441: [737..738]
 r442: [727..728]
 r443: [725..726]
 r444: [720..721]
 r445: [711..714]
 r446: [711..712]
 r447: [708..709]
 r448: [701..704]
 r449: [701..702]
 r450: [696..697]
 r451: [692..693]
 r452: [689..691]
 r453: [689..690]
 r454: [681..683]
 r455: [681..682]
 r456: [677..679]
 r457: [677..678]
 r458: [669..671]
 r459: [669..670]
 r460: [657..658]
 r461: [652..653]
 r462: [654..655]
 r463: [649..650]
 r464: [640..641]
 r465: [637..638]
 r466: [632..633]
 r467: [627..628]
 r468: [618..619]
 r469: [616..617]
 r470: [611..612]
 r471: [602..605]
 r472: [602..603]
 r473: [598..600]
 r474: [598..599]
 r475: [589..592]
 r476: [589..590]
 r477: [586..587]
 r478: [581..582]
 r479: [572..575]
 r480: [572..573]
 r481: [569..570]
 r482: [559..560]
 r483: [557..558]
 r484: [554..555]
 r485: [549..550]
 r486: [542..543]
 r487: [533..534]
 r488: [535..536]
 r489: [530..532]
 r490: [530..531]
 r491: [527..528]
 r492: [501..502]
 r493: [496..497]
 r494: [489..490]
 r495: [481..483]
 r496: [481..482]
 r497: [524..525]
 r498: [519..520]
 r499: [512..513]
 r500: [504..506]
 r501: [504..505]
 r502: [477..479]
 r503: [477..478]
 r504: [474..475]
 r505: [469..470]
 r506: [462..463]
 r507: [454..456]
 r508: [454..455]
 r509: [451..452]
 r510: [448..449]
 r511: [445..446]
 r512: [440..441]
 r513: [433..434]
 r514: [425..427]
 r515: [425..426]
 r516: [423..424]
 r517: [416..417]
 r518: [409..410]
 r519: [402..403]
 r520: [399..400]
 r521: [396..397]
 r522: [393..394]
 r523: [390..391]
 r524: [385..386]
 r525: [378..379]
 r526: [370..372]
 r527: [370..371]
 r528: [308..309]
 r529: [315..316]
 r530: [346..347]
 r531: [341..342]
 r532: [333..335]
 r533: [333..334]
 r534: [331..332]
 r535: [326..327]
 r536: [318..320]
 r537: [318..319]
 r538: [2..3]
 r539: [6..7]
 r540: [13..14]
 r541: [299..300]
 r542: [294..295]
 r543: [287..288]
 r544: [280..281]
 r545: [277..278]
 r546: [270..271]
 r547: [263..264]
 r548: [256..257]
 r549: [247..248]
 r550: [249..250]
 r551: [245..246]
 r552: [240..241]
 r553: [233..234]
 r554: [230..231]
 r555: [225..226]
 r556: [218..219]
 r557: [211..212]
 r558: [208..209]
 r559: [203..204]
 r560: [196..197]
 r561: [189..190]
 r562: [186..187]
 r563: [179..180]
 r564: [174..175]
 r565: [167..168]
 r566: [158..161]
 r567: [158..159]
 r568: [147..148]
 r569: [144..145]
 r570: [139..140]
 r571: [130..131]
 r572: [128..129]
 r573: [123..124]
 r574: [116..117]
 r575: [113..114]
 r576: [108..109]
 r577: [101..102]
 r578: [94..95]
 r579: [91..92]
 r580: [86..87]
 r581: [79..80]
 r582: [72..73]
 r583: [65..66]
 r584: [60..61]
 r585: [53..54]
 r586: [44..47]
 r587: [44..45]
 r588: [33..34]
 r589: [30..31]
 r590: [25..26]
 r591: [16..17]
 r592: [870..872]
 r593: [685..686]
 r595: [538..539]
 r596: [150..151]
 r597: [36..37]
 r599: [659..660]
 r600: [661..684]
Compressing live ranges: from 931 to 752 - 80%
Ranges after the compression:
 r87: [744..745]
 r88: [740..743]
 r89: [740..741]
 r90: [738..739]
 r91: [736..737]
 r92: [722..723]
 r93: [718..721]
 r94: [718..719]
 r95: [716..717]
 r96: [714..715]
 r97: [708..711]
 r98: [702..703]
 r99: [696..701]
 r100: [698..699]
 r101: [696..697]
 r102: [692..695]
 r103: [692..693]
 r104: [690..691]
 r105: [688..689]
 r106: [672..685]
 r107: [682..683]
 r108: [678..681]
 r109: [678..679]
 r110: [676..677]
 r111: [674..675]
 r112: [672..673]
 r113: [666..667]
 r114: [660..665]
 r115: [662..663]
 r116: [660..661]
 r117: [656..659]
 r118: [656..657]
 r119: [654..655]
 r120: [652..653]
 r121: [644..645]
 r122: [638..643]
 r123: [640..641]
 r124: [638..639]
 r125: [634..637]
 r126: [634..635]
 r127: [632..633]
 r128: [630..631]
 r129: [622..623]
 r130: [616..621]
 r131: [618..619]
 r132: [616..617]
 r133: [612..615]
 r134: [612..613]
 r135: [610..611]
 r136: [608..609]
 r137: [602..603]
 r138: [600..601]
 r139: [592..595]
 r140: [592..593]
 r141: [590..591]
 r142: [582..583]
 r143: [578..581]
 r144: [578..579]
 r145: [576..577]
 r146: [574..575]
 r147: [562..571]
 r148: [568..569]
 r149: [566..567]
 r150: [562..563]
 r151: [558..561]
 r152: [558..559]
 r153: [552..553]
 r155: [542..547]
 r156: [544..545]
 r157: [542..543]
 r158: [536..541]
 r159: [538..539]
 r160: [536..537]
 r161: [534..535]
 r162: [530..533]
 r163: [520..523]
 r164: [520..521]
 r165: [518..519]
 r166: [514..515]
 r167: [512..513]
 r168: [500..511]
 r169: [508..509]
 r170: [504..507]
 r171: [504..505]
 r172: [502..503]
 r173: [498..501]
 r174: [498..499]
 r175: [494..495]
 r176: [490..493]
 r177: [490..491]
 r178: [488..489]
 r179: [486..487]
 r180: [450..483]
 r181: [480..481]
 r182: [478..479]
 r183: [476..477]
 r184: [454..473]
 r185: [470..471]
 r186: [466..469]
 r187: [466..467]
 r188: [464..465]
 r189: [462..463]
 r190: [458..459]
 r191: [456..457]
 r192: [454..455]
 r193: [452..453]
 r194: [450..451]
 r195: [442..443]
 r196: [438..441]
 r197: [438..439]
 r198: [436..437]
 r199: [434..435]
 r200: [432..433]
 r201: [428..429]
 r202: [400..401]
 r203: [394..399]
 r204: [396..397]
 r205: [394..395]
 r206: [390..393]
 r207: [390..391]
 r208: [388..389]
 r209: [386..387]
 r210: [418..419]
 r211: [412..417]
 r212: [414..415]
 r213: [412..413]
 r214: [408..411]
 r215: [408..409]
 r216: [406..407]
 r217: [404..405]
 r218: [380..381]
 r219: [374..379]
 r220: [376..377]
 r221: [374..375]
 r222: [370..373]
 r223: [370..371]
 r224: [368..369]
 r225: [366..367]
 r226: [358..359]
 r227: [352..357]
 r228: [354..355]
 r229: [352..353]
 r230: [348..351]
 r231: [348..349]
 r232: [346..347]
 r233: [344..345]
 r234: [340..341]
 r235: [338..339]
 r236: [332..337]
 r237: [334..335]
 r238: [332..333]
 r239: [328..331]
 r240: [328..329]
 r241: [326..327]
 r242: [324..325]
 r243: [320..323]
 r244: [314..315]
 r245: [308..313]
 r246: [310..311]
 r247: [308..309]
 r248: [304..307]
 r249: [304..305]
 r250: [302..303]
 r251: [300..301]
 r252: [282..283]
 r253: [278..281]
 r254: [278..279]
 r255: [276..277]
 r256: [274..275]
 r257: [270..271]
 r258: [266..269]
 r259: [266..267]
 r260: [264..265]
 r261: [262..263]
 r262: [248..249]
 r263: [242..247]
 r264: [244..245]
 r265: [242..243]
 r266: [238..241]
 r267: [238..239]
 r268: [236..237]
 r269: [234..235]
 r270: [212..233]
 r271: [230..231]
 r272: [228..229]
 r273: [222..227]
 r274: [224..225]
 r275: [222..223]
 r276: [218..221]
 r277: [218..219]
 r278: [216..217]
 r279: [214..215]
 r280: [212..213]
 r281: [210..211]
 r282: [208..209]
 r283: [202..203]
 r284: [198..201]
 r285: [198..199]
 r286: [196..197]
 r287: [194..195]
 r288: [110..193]
 r289: [190..191]
 r290: [184..189]
 r291: [186..187]
 r292: [184..185]
 r293: [180..183]
 r294: [180..181]
 r295: [178..179]
 r296: [176..177]
 r297: [152..175]
 r298: [172..173]
 r299: [166..171]
 r300: [168..169]
 r301: [166..167]
 r302: [162..165]
 r303: [162..163]
 r304: [160..161]
 r305: [158..159]
 r306: [156..157]
 r307: [154..155]
 r308: [152..153]
 r309: [130..151]
 r310: [148..149]
 r311: [142..147]
 r312: [144..145]
 r313: [142..143]
 r314: [138..141]
 r315: [138..139]
 r316: [136..137]
 r317: [134..135]
 r318: [130..131]
 r319: [128..129]
 r320: [126..127]
 r321: [122..123]
 r322: [110..121]
 r323: [118..119]
 r324: [114..117]
 r325: [114..115]
 r326: [112..113]
 r327: [108..111]
 r328: [108..109]
 r329: [104..105]
 r330: [100..103]
 r331: [100..101]
 r332: [98..99]
 r333: [96..97]
 r334: [14..95]
 r335: [92..93]
 r336: [86..91]
 r337: [88..89]
 r338: [86..87]
 r339: [82..85]
 r340: [82..83]
 r341: [80..81]
 r342: [78..79]
 r343: [56..77]
 r344: [74..75]
 r345: [68..73]
 r346: [70..71]
 r347: [68..69]
 r348: [64..67]
 r349: [64..65]
 r350: [62..63]
 r351: [60..61]
 r352: [58..59]
 r353: [56..57]
 r354: [34..55]
 r355: [52..53]
 r356: [46..51]
 r357: [48..49]
 r358: [46..47]
 r359: [42..45]
 r360: [42..43]
 r361: [40..41]
 r362: [38..39]
 r363: [34..35]
 r364: [32..33]
 r365: [30..31]
 r366: [26..27]
 r367: [14..25]
 r368: [22..23]
 r369: [18..21]
 r370: [18..19]
 r371: [16..17]
 r372: [12..15]
 r373: [12..13]
 r374: [588..597]
 r375: [516..527]
 r376: [748..749]
 r377: [728..749]
 r378: [728..729]
 r379: [732..733]
 r380: [288..289]
 r381: [726..727]
 r382: [292..727]
 r383: [292..293]
 r384: [296..297]
 r385: [286..287]
 r386: [254..287]
 r387: [254..255]
 r388: [258..259]
 r389: [0..1]
 r390: [252..253]
 r391: [4..253]
 r392: [4..5]
 r393: [8..9]
 r394: [750..751]
 r395: [730..731]
 r396: [734..735]
 r397: [746..747]
 r398: [742..743]
 r399: [736..737]
 r400: [736..737]
 r401: [290..291]
 r402: [294..295]
 r403: [298..299]
 r404: [724..725]
 r405: [720..721]
 r406: [712..715]
 r407: [712..713]
 r408: [710..711]
 r409: [706..707]
 r410: [704..705]
 r411: [700..701]
 r412: [694..695]
 r413: [686..689]
 r414: [686..687]
 r415: [684..685]
 r416: [680..681]
 r417: [674..675]
 r418: [670..671]
 r419: [668..669]
 r420: [664..665]
 r421: [658..659]
 r422: [650..653]
 r423: [650..651]
 r424: [648..649]
 r425: [646..647]
 r426: [642..643]
 r427: [636..637]
 r428: [628..631]
 r429: [628..629]
 r430: [626..627]
 r431: [624..625]
 r432: [620..621]
 r433: [614..615]
 r434: [608..609]
 r435: [606..607]
 r436: [604..605]
 r437: [604..605]
 r438: [598..599]
 r439: [600..601]
 r440: [596..597]
 r441: [594..595]
 r442: [586..587]
 r443: [584..585]
 r444: [580..581]
 r445: [572..575]
 r446: [572..573]
 r447: [570..571]
 r448: [564..567]
 r449: [564..565]
 r450: [560..561]
 r451: [556..557]
 r452: [554..555]
 r453: [554..555]
 r454: [548..549]
 r455: [548..549]
 r456: [546..547]
 r457: [546..547]
 r458: [540..541]
 r459: [540..541]
 r460: [528..529]
 r461: [524..525]
 r462: [526..527]
 r463: [522..523]
 r464: [516..517]
 r465: [514..515]
 r466: [510..511]
 r467: [506..507]
 r468: [498..499]
 r469: [496..497]
 r470: [492..493]
 r471: [484..487]
 r472: [484..485]
 r473: [482..483]
 r474: [482..483]
 r475: [474..477]
 r476: [474..475]
 r477: [472..473]
 r478: [468..469]
 r479: [460..463]
 r480: [460..461]
 r481: [458..459]
 r482: [448..449]
 r483: [446..447]
 r484: [444..445]
 r485: [440..441]
 r486: [434..435]
 r487: [426..427]
 r488: [428..429]
 r489: [424..425]
 r490: [424..425]
 r491: [422..423]
 r492: [402..403]
 r493: [398..399]
 r494: [392..393]
 r495: [386..387]
 r496: [386..387]
 r497: [420..421]
 r498: [416..417]
 r499: [410..411]
 r500: [404..405]
 r501: [404..405]
 r502: [384..385]
 r503: [384..385]
 r504: [382..383]
 r505: [378..379]
 r506: [372..373]
 r507: [366..367]
 r508: [366..367]
 r509: [364..365]
 r510: [362..363]
 r511: [360..361]
 r512: [356..357]
 r513: [350..351]
 r514: [344..345]
 r515: [344..345]
 r516: [342..343]
 r517: [336..337]
 r518: [330..331]
 r519: [324..325]
 r520: [322..323]
 r521: [320..321]
 r522: [318..319]
 r523: [316..317]
 r524: [312..313]
 r525: [306..307]
 r526: [300..301]
 r527: [300..301]
 r528: [256..257]
 r529: [260..261]
 r530: [284..285]
 r531: [280..281]
 r532: [274..275]
 r533: [274..275]
 r534: [272..273]
 r535: [268..269]
 r536: [262..263]
 r537: [262..263]
 r538: [2..3]
 r539: [6..7]
 r540: [10..11]
 r541: [250..251]
 r542: [246..247]
 r543: [240..241]
 r544: [234..235]
 r545: [232..233]
 r546: [226..227]
 r547: [220..221]
 r548: [214..215]
 r549: [206..207]
 r550: [208..209]
 r551: [204..205]
 r552: [200..201]
 r553: [194..195]
 r554: [192..193]
 r555: [188..189]
 r556: [182..183]
 r557: [176..177]
 r558: [174..175]
 r559: [170..171]
 r560: [164..165]
 r561: [158..159]
 r562: [156..157]
 r563: [150..151]
 r564: [146..147]
 r565: [140..141]
 r566: [132..135]
 r567: [132..133]
 r568: [122..123]
 r569: [120..121]
 r570: [116..117]
 r571: [108..109]
 r572: [106..107]
 r573: [102..103]
 r574: [96..97]
 r575: [94..95]
 r576: [90..91]
 r577: [84..85]
 r578: [78..79]
 r579: [76..77]
 r580: [72..73]
 r581: [66..67]
 r582: [60..61]
 r583: [54..55]
 r584: [50..51]
 r585: [44..45]
 r586: [36..39]
 r587: [36..37]
 r588: [26..27]
 r589: [24..25]
 r590: [20..21]
 r591: [12..13]
 r592: [708..709]
 r593: [550..551]
 r595: [430..431]
 r596: [124..125]
 r597: [28..29]
 r599: [530..531]
 r600: [532..549]

********** Assignment #2: **********

	 Assigning to 600 (cl=SSE_REGS, orig=154, freq=2000, tfirst=599, tfreq=2000)...
	 Assigning to 599 (cl=SSE_REGS, orig=154, freq=2000, tfirst=599, tfreq=2000)...
	   Assign 25 to optional reload r599 (freq=2000)
	Hard reg 25 is preferable by r600 with profit 1000
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Inherit 0 out of 1 (0.00%)
   Insn after restoring regs:
  826: r599:SF=r154:SF
      REG_DEAD r154:SF
   Insn after restoring regs:
  817: r154:SF=r593:SF
      REG_DEAD r593:SF
Keep optional reload reg 594
Remove optional reload reg 599
  Restoring original insn:
  221: r460:SF=r162:SF*r154:SF
      REG_DEAD r154:SF
      REG_DEAD r162:SF
  Deleting move 826
  826: r599:SF=r154:SF
      REG_DEAD r154:SF
deleting insn with uid = 826.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 221:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 49
   Insn 759: point = 0, n_alt = -1
  BB 57
   Insn 806: point = 0, n_alt = -1
  BB 41
   Insn 530: point = 0, n_alt = -1
   Insn 529: point = 0, n_alt = 0
   Insn 528: point = 1, n_alt = 0
   Insn 527: point = 3, n_alt = 0
   Insn 526: point = 4, n_alt = 0
  BB 48
   Insn 781: point = 4, n_alt = -1
   Insn 728: point = 4, n_alt = 1
  BB 58
   Insn 809: point = 4, n_alt = -1
  BB 43
   Insn 540: point = 4, n_alt = -1
   Insn 539: point = 4, n_alt = 0
   Insn 538: point = 5, n_alt = 0
   Insn 537: point = 7, n_alt = 0
   Insn 536: point = 8, n_alt = 0
  BB 47
   Insn 779: point = 9, n_alt = -1
   Insn 722: point = 9, n_alt = 1
  BB 59
   Insn 812: point = 10, n_alt = -1
  BB 45
   Insn 548: point = 11, n_alt = -1
   Insn 547: point = 11, n_alt = 0
   Insn 546: point = 12, n_alt = 0
   Insn 545: point = 14, n_alt = 0
   Insn 544: point = 15, n_alt = 0
  BB 46
   Insn 777: point = 16, n_alt = -1
   Insn 716: point = 16, n_alt = 1
   Insn 715: point = 16, n_alt = 8
   Insn 714: point = 17, n_alt = 3
   Insn 713: point = 18, n_alt = 1
   Insn 712: point = 20, n_alt = 3
   Insn 711: point = 22, n_alt = 0
   Insn 710: point = 24, n_alt = 1
   Insn 709: point = 26, n_alt = 0
   Insn 708: point = 27, n_alt = 0
   Insn 707: point = 29, n_alt = 1
   Insn 706: point = 31, n_alt = 0
   Insn 705: point = 32, n_alt = 1
   Insn 704: point = 34, n_alt = 7
   Insn 824: point = 35, n_alt = -2
   Insn 703: point = 37, n_alt = 1
   Insn 823: point = 37, n_alt = -2
   Insn 702: point = 39, n_alt = -2
   Insn 701: point = 41, n_alt = 1
   Insn 700: point = 43, n_alt = 7
   Insn 699: point = 45, n_alt = 0
   Insn 698: point = 47, n_alt = 4
   Insn 697: point = 48, n_alt = 3
   Insn 696: point = 50, n_alt = 0
   Insn 695: point = 52, n_alt = 1
   Insn 694: point = 54, n_alt = 0
   Insn 693: point = 55, n_alt = 0
   Insn 692: point = 57, n_alt = 0
   Insn 691: point = 59, n_alt = 1
   Insn 690: point = 61, n_alt = 0
   Insn 689: point = 62, n_alt = 1
   Insn 688: point = 64, n_alt = 1
   Insn 687: point = 66, n_alt = 0
   Insn 686: point = 67, n_alt = 1
   Insn 685: point = 69, n_alt = -2
   Insn 684: point = 71, n_alt = 7
   Insn 683: point = 73, n_alt = 4
   Insn 682: point = 74, n_alt = 3
   Insn 681: point = 76, n_alt = 0
   Insn 680: point = 78, n_alt = 1
   Insn 679: point = 80, n_alt = 0
   Insn 678: point = 81, n_alt = 0
   Insn 677: point = 83, n_alt = 0
   Insn 676: point = 85, n_alt = 1
   Insn 675: point = 87, n_alt = 0
   Insn 674: point = 88, n_alt = 1
   Insn 673: point = 90, n_alt = 1
   Insn 672: point = 92, n_alt = 0
   Insn 671: point = 93, n_alt = 7
   Insn 670: point = 95, n_alt = 4
   Insn 669: point = 96, n_alt = 3
   Insn 668: point = 98, n_alt = 0
   Insn 667: point = 100, n_alt = 1
   Insn 666: point = 102, n_alt = 0
   Insn 665: point = 103, n_alt = 0
   Insn 664: point = 105, n_alt = 0
   Insn 663: point = 107, n_alt = 1
   Insn 662: point = 109, n_alt = 0
   Insn 661: point = 110, n_alt = 1
   Insn 660: point = 112, n_alt = 1
   Insn 659: point = 114, n_alt = 0
   Insn 658: point = 115, n_alt = 7
   Insn 657: point = 117, n_alt = 3
   Insn 656: point = 118, n_alt = 3
   Insn 655: point = 120, n_alt = 0
   Insn 654: point = 122, n_alt = 1
   Insn 653: point = 124, n_alt = 0
   Insn 652: point = 125, n_alt = 0
   Insn 651: point = 127, n_alt = 1
   Insn 650: point = 129, n_alt = 0
   Insn 649: point = 130, n_alt = 8
   Insn 648: point = 131, n_alt = 3
   Insn 647: point = 132, n_alt = 1
   Insn 646: point = 134, n_alt = 3
   Insn 645: point = 136, n_alt = 0
   Insn 644: point = 138, n_alt = 1
   Insn 643: point = 140, n_alt = 0
   Insn 642: point = 141, n_alt = 0
   Insn 641: point = 143, n_alt = 1
   Insn 640: point = 145, n_alt = 0
   Insn 639: point = 146, n_alt = 1
   Insn 638: point = 148, n_alt = 7
   Insn 822: point = 149, n_alt = -2
   Insn 637: point = 151, n_alt = 1
   Insn 821: point = 151, n_alt = -2
   Insn 636: point = 153, n_alt = -2
   Insn 635: point = 155, n_alt = 1
   Insn 634: point = 157, n_alt = 7
   Insn 633: point = 159, n_alt = 0
   Insn 632: point = 161, n_alt = 4
   Insn 631: point = 162, n_alt = 3
   Insn 630: point = 164, n_alt = 0
   Insn 629: point = 166, n_alt = 1
   Insn 628: point = 168, n_alt = 0
   Insn 627: point = 169, n_alt = 0
   Insn 626: point = 171, n_alt = 0
   Insn 625: point = 173, n_alt = 1
   Insn 624: point = 175, n_alt = 0
   Insn 623: point = 176, n_alt = 1
   Insn 622: point = 178, n_alt = 1
   Insn 621: point = 180, n_alt = 0
   Insn 620: point = 181, n_alt = 1
   Insn 619: point = 183, n_alt = -2
   Insn 618: point = 185, n_alt = 2
   Insn 617: point = 187, n_alt = 7
   Insn 616: point = 188, n_alt = 7
   Insn 615: point = 190, n_alt = 4
   Insn 614: point = 191, n_alt = 3
   Insn 613: point = 193, n_alt = 0
   Insn 612: point = 195, n_alt = 1
   Insn 611: point = 197, n_alt = 0
   Insn 610: point = 198, n_alt = 0
   Insn 609: point = 200, n_alt = 0
   Insn 608: point = 202, n_alt = 1
   Insn 607: point = 204, n_alt = 0
   Insn 606: point = 205, n_alt = 1
   Insn 605: point = 207, n_alt = 1
   Insn 604: point = 209, n_alt = 0
   Insn 603: point = 210, n_alt = 7
   Insn 602: point = 212, n_alt = 4
   Insn 601: point = 213, n_alt = 3
   Insn 600: point = 215, n_alt = 0
   Insn 599: point = 217, n_alt = 1
   Insn 598: point = 219, n_alt = 0
   Insn 597: point = 220, n_alt = 0
   Insn 596: point = 222, n_alt = 0
   Insn 595: point = 224, n_alt = 1
   Insn 594: point = 226, n_alt = 0
   Insn 593: point = 227, n_alt = 1
   Insn 592: point = 229, n_alt = 1
   Insn 591: point = 231, n_alt = 0
   Insn 590: point = 232, n_alt = 7
   Insn 589: point = 234, n_alt = 3
   Insn 588: point = 235, n_alt = 3
   Insn 587: point = 237, n_alt = 0
   Insn 586: point = 239, n_alt = 1
   Insn 585: point = 241, n_alt = 0
   Insn 584: point = 242, n_alt = 0
   Insn 583: point = 244, n_alt = 1
   Insn 582: point = 246, n_alt = 0
   Insn 581: point = 247, n_alt = 8
   Insn 580: point = 248, n_alt = 1
   Insn 579: point = 250, n_alt = 2
   Insn 578: point = 251, n_alt = -2
   Insn 577: point = 253, n_alt = 2
   Insn 576: point = 255, n_alt = 7
   Insn 575: point = 257, n_alt = 4
   Insn 574: point = 258, n_alt = 3
   Insn 573: point = 260, n_alt = 0
   Insn 572: point = 262, n_alt = 1
   Insn 571: point = 264, n_alt = 0
   Insn 570: point = 265, n_alt = 0
   Insn 569: point = 267, n_alt = 0
   Insn 568: point = 269, n_alt = 1
   Insn 567: point = 271, n_alt = 0
   Insn 566: point = 272, n_alt = 1
   Insn 565: point = 274, n_alt = 1
   Insn 564: point = 276, n_alt = 0
   Insn 563: point = 278, n_alt = 0
   Insn 562: point = 279, n_alt = 7
   Insn 561: point = 281, n_alt = 4
   Insn 560: point = 282, n_alt = 3
   Insn 559: point = 284, n_alt = 0
   Insn 558: point = 286, n_alt = 1
   Insn 557: point = 288, n_alt = 0
   Insn 556: point = 289, n_alt = 0
   Insn 555: point = 291, n_alt = 0
   Insn 554: point = 293, n_alt = 1
   Insn 553: point = 295, n_alt = 0
   Insn 552: point = 296, n_alt = 1
   Insn 551: point = 298, n_alt = 1
   Insn 550: point = 300, n_alt = 0
  BB 44
   Insn 542: point = 302, n_alt = 1
  BB 42
   Insn 534: point = 303, n_alt = 1
   Insn 533: point = 304, n_alt = 0
   Insn 532: point = 305, n_alt = 0
  BB 40
   Insn 524: point = 306, n_alt = 1
  BB 55
   Insn 800: point = 306, n_alt = -1
  BB 35
   Insn 482: point = 306, n_alt = -1
   Insn 481: point = 306, n_alt = 0
   Insn 480: point = 307, n_alt = 0
   Insn 479: point = 309, n_alt = 0
   Insn 478: point = 310, n_alt = 0
  BB 39
   Insn 775: point = 311, n_alt = -1
   Insn 518: point = 311, n_alt = 1
  BB 56
   Insn 803: point = 312, n_alt = -1
  BB 37
   Insn 490: point = 313, n_alt = -1
   Insn 489: point = 313, n_alt = 0
   Insn 488: point = 314, n_alt = 0
   Insn 487: point = 316, n_alt = 0
   Insn 486: point = 317, n_alt = 0
  BB 38
   Insn 773: point = 318, n_alt = -1
   Insn 512: point = 318, n_alt = 1
   Insn 511: point = 318, n_alt = 8
   Insn 510: point = 319, n_alt = 7
   Insn 509: point = 320, n_alt = 3
   Insn 508: point = 321, n_alt = 3
   Insn 507: point = 323, n_alt = 0
   Insn 506: point = 325, n_alt = 1
   Insn 505: point = 327, n_alt = 0
   Insn 504: point = 328, n_alt = 0
   Insn 503: point = 330, n_alt = 1
   Insn 502: point = 332, n_alt = 0
   Insn 501: point = 333, n_alt = 8
   Insn 500: point = 334, n_alt = 7
   Insn 499: point = 335, n_alt = 3
   Insn 498: point = 336, n_alt = 3
   Insn 497: point = 338, n_alt = 0
   Insn 496: point = 340, n_alt = 1
   Insn 495: point = 342, n_alt = 0
   Insn 494: point = 343, n_alt = 0
   Insn 493: point = 345, n_alt = 1
   Insn 492: point = 347, n_alt = 0
  BB 36
   Insn 484: point = 349, n_alt = 1
  BB 34
   Insn 476: point = 350, n_alt = 1
   Insn 475: point = 351, n_alt = 0
   Insn 474: point = 352, n_alt = 0
  BB 52
   Insn 791: point = 353, n_alt = -1
  BB 9
   Insn 55: point = 353, n_alt = -1
   Insn 54: point = 353, n_alt = 0
   Insn 53: point = 354, n_alt = 0
   Insn 52: point = 356, n_alt = 0
   Insn 51: point = 357, n_alt = 0
  BB 33
   Insn 771: point = 357, n_alt = -1
   Insn 468: point = 357, n_alt = 1
  BB 53
   Insn 794: point = 357, n_alt = -1
  BB 11
   Insn 65: point = 357, n_alt = -1
   Insn 64: point = 357, n_alt = 0
   Insn 63: point = 358, n_alt = 0
   Insn 62: point = 360, n_alt = 0
   Insn 61: point = 361, n_alt = 0
  BB 32
   Insn 769: point = 362, n_alt = -1
   Insn 462: point = 362, n_alt = 1
  BB 54
   Insn 797: point = 363, n_alt = -1
  BB 13
   Insn 73: point = 364, n_alt = -1
   Insn 72: point = 364, n_alt = 0
   Insn 71: point = 365, n_alt = 0
   Insn 70: point = 367, n_alt = 0
   Insn 69: point = 368, n_alt = 0
  BB 31
   Insn 767: point = 369, n_alt = -1
   Insn 456: point = 369, n_alt = 1
  BB 30
   Insn 453: point = 370, n_alt = 8
   Insn 452: point = 371, n_alt = 7
   Insn 451: point = 372, n_alt = 4
   Insn 450: point = 373, n_alt = 3
   Insn 449: point = 375, n_alt = 0
   Insn 448: point = 377, n_alt = 0
   Insn 447: point = 379, n_alt = 0
   Insn 446: point = 380, n_alt = 0
   Insn 445: point = 382, n_alt = 0
   Insn 444: point = 384, n_alt = 0
   Insn 443: point = 386, n_alt = 0
   Insn 442: point = 387, n_alt = 1
   Insn 441: point = 389, n_alt = 0
   Insn 440: point = 391, n_alt = 0
  BB 29
   Insn 435: point = 393, n_alt = -1
   Insn 434: point = 393, n_alt = 1
   Insn 433: point = 394, n_alt = 7
  BB 28
   Insn 428: point = 396, n_alt = -1
   Insn 427: point = 396, n_alt = 1
   Insn 426: point = 397, n_alt = 7
  BB 27
   Insn 425: point = 399, n_alt = -1
   Insn 424: point = 399, n_alt = 1
   Insn 423: point = 400, n_alt = 7
   Insn 422: point = 401, n_alt = 7
   Insn 421: point = 403, n_alt = 4
   Insn 420: point = 404, n_alt = 3
   Insn 419: point = 406, n_alt = 0
   Insn 418: point = 408, n_alt = 0
   Insn 417: point = 410, n_alt = 0
   Insn 416: point = 411, n_alt = 0
   Insn 415: point = 413, n_alt = 0
   Insn 414: point = 415, n_alt = 0
   Insn 413: point = 417, n_alt = 0
   Insn 412: point = 418, n_alt = 1
   Insn 411: point = 420, n_alt = 0
   Insn 410: point = 422, n_alt = 0
   Insn 409: point = 424, n_alt = 0
   Insn 408: point = 425, n_alt = 8
   Insn 407: point = 426, n_alt = 7
   Insn 406: point = 427, n_alt = 4
   Insn 405: point = 428, n_alt = 3
   Insn 404: point = 430, n_alt = 0
   Insn 403: point = 432, n_alt = 0
   Insn 402: point = 434, n_alt = 0
   Insn 401: point = 435, n_alt = 0
   Insn 400: point = 437, n_alt = 0
   Insn 399: point = 439, n_alt = 0
   Insn 398: point = 441, n_alt = 0
   Insn 397: point = 442, n_alt = 1
   Insn 396: point = 444, n_alt = 0
   Insn 395: point = 446, n_alt = 0
  BB 26
   Insn 390: point = 448, n_alt = -1
   Insn 389: point = 448, n_alt = 1
   Insn 388: point = 449, n_alt = 7
  BB 25
   Insn 383: point = 451, n_alt = -1
   Insn 382: point = 451, n_alt = 1
   Insn 381: point = 452, n_alt = 7
  BB 24
   Insn 378: point = 454, n_alt = 8
   Insn 377: point = 455, n_alt = 7
   Insn 376: point = 456, n_alt = 4
   Insn 375: point = 457, n_alt = 3
   Insn 374: point = 459, n_alt = 0
   Insn 373: point = 461, n_alt = 0
   Insn 372: point = 463, n_alt = 0
   Insn 371: point = 464, n_alt = 0
   Insn 370: point = 466, n_alt = 0
   Insn 369: point = 468, n_alt = 0
   Insn 368: point = 470, n_alt = 0
   Insn 367: point = 471, n_alt = 1
   Insn 366: point = 473, n_alt = 0
   Insn 365: point = 475, n_alt = 0
  BB 23
   Insn 360: point = 477, n_alt = -1
   Insn 359: point = 477, n_alt = 1
   Insn 358: point = 478, n_alt = 7
   Insn 357: point = 479, n_alt = 7
  BB 21
   Insn 765: point = 481, n_alt = -1
   Insn 334: point = 481, n_alt = 8
   Insn 333: point = 482, n_alt = 7
   Insn 332: point = 483, n_alt = 4
   Insn 331: point = 484, n_alt = 3
   Insn 330: point = 486, n_alt = 0
   Insn 329: point = 488, n_alt = 0
   Insn 328: point = 490, n_alt = 0
   Insn 327: point = 491, n_alt = 0
   Insn 326: point = 493, n_alt = 0
   Insn 325: point = 495, n_alt = 0
   Insn 324: point = 497, n_alt = 0
   Insn 323: point = 498, n_alt = 1
   Insn 322: point = 500, n_alt = 0
   Insn 321: point = 502, n_alt = 0
  BB 22
   Insn 352: point = 504, n_alt = 8
   Insn 351: point = 505, n_alt = 7
   Insn 350: point = 506, n_alt = 4
   Insn 349: point = 507, n_alt = 3
   Insn 348: point = 509, n_alt = 0
   Insn 347: point = 511, n_alt = 0
   Insn 346: point = 513, n_alt = 0
   Insn 345: point = 514, n_alt = 0
   Insn 344: point = 516, n_alt = 0
   Insn 343: point = 518, n_alt = 0
   Insn 342: point = 520, n_alt = 0
   Insn 341: point = 521, n_alt = 1
   Insn 340: point = 523, n_alt = 0
   Insn 339: point = 525, n_alt = 0
  BB 20
   Insn 315: point = 527, n_alt = -1
   Insn 314: point = 527, n_alt = 1
   Insn 313: point = 528, n_alt = 7
  BB 19
   Insn 311: point = 530, n_alt = -1
   Insn 310: point = 530, n_alt = 1
   Insn 309: point = 531, n_alt = 7
   Insn 308: point = 532, n_alt = 7
   Insn 307: point = 533, n_alt = 8
   Insn 306: point = 534, n_alt = 2
   Insn 305: point = 536, n_alt = 7
   Insn 820: point = 537, n_alt = -2
   Insn 304: point = 539, n_alt = 1
   Insn 819: point = 539, n_alt = -2
   Insn 303: point = 541, n_alt = 7
   Insn 302: point = 543, n_alt = 4
   Insn 301: point = 544, n_alt = 3
   Insn 300: point = 546, n_alt = 0
   Insn 299: point = 548, n_alt = 0
   Insn 298: point = 550, n_alt = 0
   Insn 297: point = 551, n_alt = 0
   Insn 296: point = 553, n_alt = 0
   Insn 295: point = 555, n_alt = 0
  BB 18
   Insn 290: point = 557, n_alt = -1
   Insn 289: point = 557, n_alt = 1
   Insn 288: point = 558, n_alt = 7
   Insn 287: point = 559, n_alt = 8
   Insn 286: point = 560, n_alt = 1
   Insn 285: point = 562, n_alt = 1
   Insn 284: point = 564, n_alt = 1
   Insn 283: point = 566, n_alt = -2
   Insn 282: point = 568, n_alt = 2
   Insn 281: point = 570, n_alt = 7
   Insn 280: point = 571, n_alt = 7
   Insn 279: point = 573, n_alt = 0
   Insn 278: point = 575, n_alt = 4
   Insn 277: point = 576, n_alt = 3
   Insn 276: point = 578, n_alt = 0
   Insn 275: point = 580, n_alt = 0
   Insn 274: point = 582, n_alt = 0
   Insn 273: point = 583, n_alt = 0
   Insn 272: point = 585, n_alt = 0
   Insn 271: point = 587, n_alt = 0
   Insn 270: point = 588, n_alt = 7
   Insn 269: point = 590, n_alt = 0
   Insn 268: point = 592, n_alt = 4
   Insn 267: point = 593, n_alt = 3
   Insn 266: point = 595, n_alt = 0
   Insn 265: point = 597, n_alt = 0
   Insn 264: point = 599, n_alt = 0
   Insn 263: point = 600, n_alt = 0
   Insn 262: point = 601, n_alt = 7
   Insn 261: point = 603, n_alt = 0
   Insn 260: point = 605, n_alt = 4
   Insn 259: point = 606, n_alt = 3
   Insn 258: point = 608, n_alt = 0
   Insn 257: point = 610, n_alt = 0
   Insn 256: point = 612, n_alt = 0
   Insn 255: point = 613, n_alt = 0
   Insn 254: point = 615, n_alt = 0
   Insn 253: point = 617, n_alt = 0
   Insn 252: point = 618, n_alt = 8
   Insn 251: point = 619, n_alt = 4
   Insn 250: point = 620, n_alt = 1
   Insn 249: point = 622, n_alt = 3
   Insn 248: point = 624, n_alt = 0
   Insn 247: point = 626, n_alt = 0
   Insn 246: point = 628, n_alt = 0
   Insn 245: point = 629, n_alt = 0
   Insn 244: point = 631, n_alt = 0
   Insn 243: point = 633, n_alt = 0
   Insn 242: point = 634, n_alt = -2
   Insn 241: point = 636, n_alt = 1
   Insn 240: point = 638, n_alt = 7
   Insn 239: point = 639, n_alt = 1
   Insn 238: point = 641, n_alt = 7
  BB 17
   Insn 235: point = 643, n_alt = 7
  BB 16
   Insn 233: point = 645, n_alt = -1
   Insn 232: point = 645, n_alt = 0
   Insn 231: point = 646, n_alt = 0
   Insn 230: point = 648, n_alt = 0
   Insn 229: point = 650, n_alt = 0
   Insn 228: point = 651, n_alt = 1
   Insn 227: point = 651, n_alt = 0
   Insn 226: point = 653, n_alt = 0
   Insn 225: point = 654, n_alt = 1
   Insn 224: point = 655, n_alt = 7
   Insn 223: point = 656, n_alt = 7
   Insn 222: point = 657, n_alt = 8
   Insn 221: point = 658, n_alt = 1
   Insn 220: point = 660, n_alt = -2
   Insn 219: point = 661, n_alt = 0
   Insn 218: point = 661, n_alt = -2
   Insn 217: point = 662, n_alt = 2
   Insn 216: point = 664, n_alt = -2
   Insn 215: point = 666, n_alt = 2
   Insn 214: point = 668, n_alt = 7
   Insn 213: point = 669, n_alt = 7
   Insn 212: point = 670, n_alt = 1
   Insn 211: point = 672, n_alt = -2
   Insn 210: point = 674, n_alt = 2
   Insn 209: point = 676, n_alt = 7
   Insn 208: point = 677, n_alt = 7
   Insn 207: point = 678, n_alt = 1
   Insn 206: point = 680, n_alt = 7
   Insn 205: point = 681, n_alt = 7
   Insn 817: point = 682, n_alt = 8
   Insn 204: point = 684, n_alt = 2
   Insn 816: point = 684, n_alt = -2
   Insn 203: point = 686, n_alt = 1
   Insn 202: point = 688, n_alt = 7
   Insn 201: point = 689, n_alt = 7
   Insn 200: point = 690, n_alt = 8
   Insn 199: point = 691, n_alt = 1
   Insn 198: point = 693, n_alt = 7
   Insn 197: point = 695, n_alt = 4
   Insn 196: point = 696, n_alt = 1
   Insn 195: point = 698, n_alt = 7
   Insn 194: point = 700, n_alt = 0
   Insn 193: point = 702, n_alt = 4
   Insn 192: point = 703, n_alt = 3
   Insn 191: point = 705, n_alt = 0
   Insn 190: point = 707, n_alt = 0
   Insn 189: point = 708, n_alt = 7
   Insn 188: point = 710, n_alt = 0
   Insn 187: point = 712, n_alt = 4
   Insn 186: point = 713, n_alt = 3
   Insn 185: point = 715, n_alt = 0
   Insn 184: point = 717, n_alt = 0
   Insn 183: point = 719, n_alt = 0
   Insn 182: point = 720, n_alt = 0
   Insn 181: point = 722, n_alt = 0
   Insn 180: point = 724, n_alt = 0
   Insn 179: point = 725, n_alt = 8
   Insn 178: point = 726, n_alt = 1
  BB 15
   Insn 175: point = 729, n_alt = 7
  BB 14
   Insn 173: point = 731, n_alt = -1
   Insn 172: point = 731, n_alt = 0
   Insn 171: point = 732, n_alt = 0
   Insn 170: point = 734, n_alt = 0
   Insn 169: point = 736, n_alt = 0
   Insn 168: point = 737, n_alt = 1
   Insn 167: point = 737, n_alt = 0
   Insn 166: point = 739, n_alt = 0
   Insn 165: point = 740, n_alt = 1
   Insn 164: point = 740, n_alt = 7
   Insn 163: point = 741, n_alt = 8
   Insn 162: point = 742, n_alt = 1
   Insn 161: point = 744, n_alt = 7
   Insn 160: point = 745, n_alt = -2
   Insn 159: point = 747, n_alt = 2
   Insn 158: point = 749, n_alt = 7
   Insn 157: point = 750, n_alt = 7
   Insn 156: point = 751, n_alt = 8
   Insn 155: point = 752, n_alt = 7
   Insn 154: point = 754, n_alt = 4
   Insn 153: point = 755, n_alt = 3
   Insn 152: point = 757, n_alt = 0
   Insn 151: point = 759, n_alt = 0
   Insn 150: point = 761, n_alt = 0
   Insn 149: point = 762, n_alt = 0
   Insn 148: point = 764, n_alt = 0
   Insn 147: point = 766, n_alt = 0
   Insn 146: point = 768, n_alt = 0
   Insn 145: point = 769, n_alt = 1
   Insn 144: point = 771, n_alt = 0
   Insn 143: point = 773, n_alt = 0
   Insn 142: point = 774, n_alt = 8
   Insn 141: point = 775, n_alt = 7
   Insn 140: point = 777, n_alt = 0
   Insn 139: point = 779, n_alt = 4
   Insn 138: point = 780, n_alt = 3
   Insn 137: point = 782, n_alt = 0
   Insn 136: point = 784, n_alt = 0
   Insn 135: point = 786, n_alt = 0
   Insn 134: point = 787, n_alt = 0
   Insn 133: point = 789, n_alt = 0
   Insn 132: point = 791, n_alt = 0
   Insn 131: point = 793, n_alt = 0
   Insn 130: point = 794, n_alt = 1
   Insn 129: point = 796, n_alt = 0
   Insn 128: point = 798, n_alt = 0
   Insn 127: point = 799, n_alt = 8
   Insn 126: point = 800, n_alt = 7
   Insn 125: point = 802, n_alt = 0
   Insn 124: point = 804, n_alt = 4
   Insn 123: point = 805, n_alt = 3
   Insn 122: point = 807, n_alt = 0
   Insn 121: point = 809, n_alt = 0
   Insn 120: point = 811, n_alt = 0
   Insn 119: point = 812, n_alt = 0
   Insn 118: point = 814, n_alt = 0
   Insn 117: point = 816, n_alt = 0
   Insn 116: point = 818, n_alt = 0
   Insn 115: point = 819, n_alt = 1
   Insn 114: point = 821, n_alt = 0
   Insn 113: point = 823, n_alt = 0
   Insn 112: point = 824, n_alt = 8
   Insn 111: point = 825, n_alt = 1
   Insn 110: point = 827, n_alt = 7
   Insn 109: point = 829, n_alt = 4
   Insn 108: point = 830, n_alt = 3
   Insn 107: point = 832, n_alt = 0
   Insn 106: point = 834, n_alt = 0
   Insn 105: point = 836, n_alt = 0
   Insn 104: point = 837, n_alt = 0
   Insn 103: point = 839, n_alt = 0
   Insn 102: point = 841, n_alt = 0
   Insn 101: point = 842, n_alt = 7
   Insn 100: point = 844, n_alt = 0
   Insn 99: point = 846, n_alt = 4
   Insn 98: point = 847, n_alt = 3
   Insn 97: point = 849, n_alt = 0
   Insn 96: point = 851, n_alt = 0
   Insn 95: point = 853, n_alt = 0
   Insn 94: point = 854, n_alt = 0
   Insn 93: point = 856, n_alt = 0
   Insn 92: point = 858, n_alt = 0
   Insn 91: point = 860, n_alt = 0
   Insn 90: point = 861, n_alt = 1
   Insn 89: point = 863, n_alt = 0
   Insn 88: point = 865, n_alt = 0
   Insn 87: point = 866, n_alt = 1
   Insn 815: point = 867, n_alt = -2
   Insn 86: point = 869, n_alt = 0
   Insn 814: point = 870, n_alt = -2
   Insn 85: point = 872, n_alt = 0
   Insn 84: point = 873, n_alt = 0
   Insn 83: point = 875, n_alt = 0
   Insn 82: point = 877, n_alt = 4
   Insn 81: point = 878, n_alt = 3
   Insn 80: point = 880, n_alt = 0
   Insn 79: point = 882, n_alt = 0
   Insn 78: point = 884, n_alt = 0
   Insn 77: point = 885, n_alt = 0
   Insn 76: point = 887, n_alt = 0
   Insn 75: point = 889, n_alt = 0
  BB 12
   Insn 67: point = 891, n_alt = 1
  BB 10
   Insn 59: point = 892, n_alt = 1
   Insn 58: point = 893, n_alt = 0
   Insn 57: point = 894, n_alt = 0
  BB 8
   Insn 49: point = 895, n_alt = 1
  BB 50
   Insn 785: point = 895, n_alt = -1
  BB 3
   Insn 17: point = 895, n_alt = -1
   Insn 16: point = 895, n_alt = 0
   Insn 15: point = 896, n_alt = 0
   Insn 14: point = 898, n_alt = 0
   Insn 13: point = 899, n_alt = 0
  BB 7
   Insn 762: point = 900, n_alt = -1
   Insn 43: point = 900, n_alt = 1
  BB 51
   Insn 788: point = 901, n_alt = -1
  BB 5
   Insn 25: point = 902, n_alt = -1
   Insn 24: point = 902, n_alt = 0
   Insn 23: point = 903, n_alt = 0
   Insn 22: point = 905, n_alt = 0
   Insn 21: point = 906, n_alt = 0
  BB 6
   Insn 760: point = 907, n_alt = -1
   Insn 37: point = 907, n_alt = 1
   Insn 36: point = 907, n_alt = 8
   Insn 35: point = 908, n_alt = 7
   Insn 34: point = 909, n_alt = 4
   Insn 33: point = 910, n_alt = 3
   Insn 32: point = 912, n_alt = 0
   Insn 31: point = 914, n_alt = 1
   Insn 30: point = 916, n_alt = 0
   Insn 29: point = 917, n_alt = 0
   Insn 28: point = 919, n_alt = 1
   Insn 27: point = 921, n_alt = 0
  BB 4
   Insn 19: point = 923, n_alt = 1
  BB 2
   Insn 11: point = 924, n_alt = 1
   Insn 10: point = 925, n_alt = 0
   Insn 9: point = 926, n_alt = 0
   Insn 8: point = 927, n_alt = 8
   Insn 7: point = 928, n_alt = 7
   Insn 3: point = 929, n_alt = 5
   Insn 2: point = 929, n_alt = 5
 r154: [659..682]
Compressing live ranges: from 929 to 2 - 0%
Ranges after the compression:
 r154: [0..1]
  Slot 0 regnos (width = 0):	 154
Changing spilled pseudos to memory in insn #817
Changing spilled pseudos to memory in insn #221
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 1 for insn #221
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 221:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #817
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 817:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=144, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=112, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 28
changing reg in insn 29
changing reg in insn 29
changing reg in insn 31
changing reg in insn 32
changing reg in insn 33
changing reg in insn 33
changing reg in insn 36
changing reg in insn 76
changing reg in insn 77
changing reg in insn 77
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 81
changing reg in insn 83
changing reg in insn 84
changing reg in insn 86
changing reg in insn 89
changing reg in insn 90
changing reg in insn 90
changing reg in insn 94
changing reg in insn 92
changing reg in insn 93
changing reg in insn 93
changing reg in insn 94
changing reg in insn 94
changing reg in insn 96
changing reg in insn 97
changing reg in insn 98
changing reg in insn 98
changing reg in insn 100
changing reg in insn 101
changing reg in insn 103
changing reg in insn 104
changing reg in insn 104
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 108
changing reg in insn 110
changing reg in insn 110
changing reg in insn 114
changing reg in insn 115
changing reg in insn 115
changing reg in insn 119
changing reg in insn 117
changing reg in insn 118
changing reg in insn 118
changing reg in insn 119
changing reg in insn 119
changing reg in insn 121
changing reg in insn 122
changing reg in insn 123
changing reg in insn 123
changing reg in insn 125
changing reg in insn 129
changing reg in insn 130
changing reg in insn 130
changing reg in insn 134
changing reg in insn 132
changing reg in insn 133
changing reg in insn 133
changing reg in insn 134
changing reg in insn 134
changing reg in insn 136
changing reg in insn 137
changing reg in insn 138
changing reg in insn 138
changing reg in insn 140
changing reg in insn 144
changing reg in insn 145
changing reg in insn 145
changing reg in insn 149
changing reg in insn 147
changing reg in insn 148
changing reg in insn 148
changing reg in insn 149
changing reg in insn 149
changing reg in insn 151
changing reg in insn 152
changing reg in insn 153
changing reg in insn 153
changing reg in insn 155
changing reg in insn 159
changing reg in insn 160
changing reg in insn 160
changing reg in insn 162
changing reg in insn 167
changing reg in insn 170
changing reg in insn 171
changing reg in insn 172
changing reg in insn 181
changing reg in insn 182
changing reg in insn 182
changing reg in insn 184
changing reg in insn 185
changing reg in insn 186
changing reg in insn 186
changing reg in insn 188
changing reg in insn 189
changing reg in insn 196
changing reg in insn 191
changing reg in insn 192
changing reg in insn 192
changing reg in insn 194
changing reg in insn 195
changing reg in insn 196
changing reg in insn 196
changing reg in insn 198
changing reg in insn 203
changing reg in insn 207
changing reg in insn 210
changing reg in insn 211
changing reg in insn 211
changing reg in insn 212
changing reg in insn 217
changing reg in insn 215
changing reg in insn 216
changing reg in insn 216
changing reg in insn 217
changing reg in insn 217
changing reg in insn 218
changing reg in insn 220
changing reg in insn 227
changing reg in insn 230
changing reg in insn 231
changing reg in insn 232
changing reg in insn 239
changing reg in insn 241
changing reg in insn 242
changing reg in insn 242
changing reg in insn 250
changing reg in insn 244
changing reg in insn 245
changing reg in insn 245
changing reg in insn 247
changing reg in insn 248
changing reg in insn 249
changing reg in insn 249
changing reg in insn 252
changing reg in insn 250
changing reg in insn 252
changing reg in insn 254
changing reg in insn 255
changing reg in insn 255
changing reg in insn 257
changing reg in insn 258
changing reg in insn 259
changing reg in insn 259
changing reg in insn 261
changing reg in insn 262
changing reg in insn 265
changing reg in insn 266
changing reg in insn 266
changing reg in insn 267
changing reg in insn 267
changing reg in insn 269
changing reg in insn 270
changing reg in insn 272
changing reg in insn 273
changing reg in insn 273
changing reg in insn 275
changing reg in insn 276
changing reg in insn 277
changing reg in insn 277
changing reg in insn 279
changing reg in insn 280
changing reg in insn 282
changing reg in insn 282
changing reg in insn 283
changing reg in insn 283
changing reg in insn 284
changing reg in insn 285
changing reg in insn 285
changing reg in insn 296
changing reg in insn 297
changing reg in insn 297
changing reg in insn 299
changing reg in insn 300
changing reg in insn 301
changing reg in insn 301
changing reg in insn 303
changing reg in insn 303
changing reg in insn 306
changing reg in insn 322
changing reg in insn 323
changing reg in insn 323
changing reg in insn 327
changing reg in insn 325
changing reg in insn 326
changing reg in insn 326
changing reg in insn 327
changing reg in insn 327
changing reg in insn 329
changing reg in insn 330
changing reg in insn 331
changing reg in insn 331
changing reg in insn 334
changing reg in insn 340
changing reg in insn 341
changing reg in insn 341
changing reg in insn 345
changing reg in insn 343
changing reg in insn 344
changing reg in insn 344
changing reg in insn 345
changing reg in insn 345
changing reg in insn 347
changing reg in insn 348
changing reg in insn 349
changing reg in insn 349
changing reg in insn 352
changing reg in insn 366
changing reg in insn 367
changing reg in insn 367
changing reg in insn 371
changing reg in insn 369
changing reg in insn 370
changing reg in insn 370
changing reg in insn 371
changing reg in insn 371
changing reg in insn 373
changing reg in insn 374
changing reg in insn 375
changing reg in insn 375
changing reg in insn 378
changing reg in insn 396
changing reg in insn 397
changing reg in insn 397
changing reg in insn 401
changing reg in insn 399
changing reg in insn 400
changing reg in insn 400
changing reg in insn 401
changing reg in insn 401
changing reg in insn 403
changing reg in insn 404
changing reg in insn 405
changing reg in insn 405
changing reg in insn 408
changing reg in insn 410
changing reg in insn 411
changing reg in insn 411
changing reg in insn 412
changing reg in insn 412
changing reg in insn 416
changing reg in insn 414
changing reg in insn 415
changing reg in insn 415
changing reg in insn 416
changing reg in insn 416
changing reg in insn 418
changing reg in insn 419
changing reg in insn 420
changing reg in insn 420
changing reg in insn 422
changing reg in insn 422
changing reg in insn 427
changing reg in insn 424
changing reg in insn 441
changing reg in insn 442
changing reg in insn 442
changing reg in insn 446
changing reg in insn 444
changing reg in insn 445
changing reg in insn 445
changing reg in insn 446
changing reg in insn 446
changing reg in insn 448
changing reg in insn 449
changing reg in insn 450
changing reg in insn 450
changing reg in insn 453
changing reg in insn 493
changing reg in insn 494
changing reg in insn 494
changing reg in insn 496
changing reg in insn 497
changing reg in insn 498
changing reg in insn 498
changing reg in insn 501
changing reg in insn 503
changing reg in insn 504
changing reg in insn 504
changing reg in insn 506
changing reg in insn 507
changing reg in insn 508
changing reg in insn 508
changing reg in insn 511
changing reg in insn 551
changing reg in insn 552
changing reg in insn 552
changing reg in insn 556
changing reg in insn 554
changing reg in insn 555
changing reg in insn 555
changing reg in insn 556
changing reg in insn 556
changing reg in insn 558
changing reg in insn 559
changing reg in insn 560
changing reg in insn 560
changing reg in insn 562
changing reg in insn 562
changing reg in insn 577
changing reg in insn 564
changing reg in insn 565
changing reg in insn 565
changing reg in insn 566
changing reg in insn 566
changing reg in insn 570
changing reg in insn 568
changing reg in insn 569
changing reg in insn 569
changing reg in insn 570
changing reg in insn 570
changing reg in insn 572
changing reg in insn 573
changing reg in insn 574
changing reg in insn 574
changing reg in insn 576
changing reg in insn 576
changing reg in insn 577
changing reg in insn 577
changing reg in insn 578
changing reg in insn 578
changing reg in insn 580
changing reg in insn 580
changing reg in insn 583
changing reg in insn 584
changing reg in insn 584
changing reg in insn 586
changing reg in insn 587
changing reg in insn 588
changing reg in insn 588
changing reg in insn 590
changing reg in insn 590
changing reg in insn 592
changing reg in insn 593
changing reg in insn 593
changing reg in insn 597
changing reg in insn 595
changing reg in insn 596
changing reg in insn 596
changing reg in insn 597
changing reg in insn 597
changing reg in insn 599
changing reg in insn 600
changing reg in insn 601
changing reg in insn 601
changing reg in insn 603
changing reg in insn 603
changing reg in insn 620
changing reg in insn 605
changing reg in insn 606
changing reg in insn 606
changing reg in insn 610
changing reg in insn 608
changing reg in insn 609
changing reg in insn 609
changing reg in insn 610
changing reg in insn 610
changing reg in insn 612
changing reg in insn 613
changing reg in insn 614
changing reg in insn 614
changing reg in insn 616
changing reg in insn 616
changing reg in insn 618
changing reg in insn 618
changing reg in insn 619
changing reg in insn 619
changing reg in insn 620
changing reg in insn 620
changing reg in insn 622
changing reg in insn 623
changing reg in insn 623
changing reg in insn 627
changing reg in insn 625
changing reg in insn 626
changing reg in insn 626
changing reg in insn 627
changing reg in insn 627
changing reg in insn 629
changing reg in insn 630
changing reg in insn 631
changing reg in insn 631
changing reg in insn 633
changing reg in insn 634
changing reg in insn 635
changing reg in insn 636
changing reg in insn 636
changing reg in insn 639
changing reg in insn 641
changing reg in insn 642
changing reg in insn 642
changing reg in insn 644
changing reg in insn 645
changing reg in insn 646
changing reg in insn 646
changing reg in insn 649
changing reg in insn 647
changing reg in insn 649
changing reg in insn 651
changing reg in insn 652
changing reg in insn 652
changing reg in insn 654
changing reg in insn 655
changing reg in insn 656
changing reg in insn 656
changing reg in insn 658
changing reg in insn 658
changing reg in insn 660
changing reg in insn 661
changing reg in insn 661
changing reg in insn 665
changing reg in insn 663
changing reg in insn 664
changing reg in insn 664
changing reg in insn 665
changing reg in insn 665
changing reg in insn 667
changing reg in insn 668
changing reg in insn 669
changing reg in insn 669
changing reg in insn 671
changing reg in insn 671
changing reg in insn 673
changing reg in insn 674
changing reg in insn 674
changing reg in insn 678
changing reg in insn 676
changing reg in insn 677
changing reg in insn 677
changing reg in insn 678
changing reg in insn 678
changing reg in insn 680
changing reg in insn 681
changing reg in insn 682
changing reg in insn 682
changing reg in insn 684
changing reg in insn 684
changing reg in insn 685
changing reg in insn 685
changing reg in insn 686
changing reg in insn 688
changing reg in insn 689
changing reg in insn 689
changing reg in insn 693
changing reg in insn 691
changing reg in insn 692
changing reg in insn 692
changing reg in insn 693
changing reg in insn 693
changing reg in insn 695
changing reg in insn 696
changing reg in insn 697
changing reg in insn 697
changing reg in insn 699
changing reg in insn 700
changing reg in insn 701
changing reg in insn 702
changing reg in insn 702
changing reg in insn 705
changing reg in insn 707
changing reg in insn 708
changing reg in insn 708
changing reg in insn 710
changing reg in insn 711
changing reg in insn 712
changing reg in insn 712
changing reg in insn 715
changing reg in insn 713
changing reg in insn 715
changing reg in insn 175
changing reg in insn 164
changing reg in insn 178
changing reg in insn 168
changing reg in insn 168
changing reg in insn 165
changing reg in insn 235
changing reg in insn 223
changing reg in insn 228
changing reg in insn 228
changing reg in insn 225
changing reg in insn 9
changing reg in insn 11
changing reg in insn 10
changing reg in insn 13
changing reg in insn 15
changing reg in insn 16
changing reg in insn 23
changing reg in insn 24
changing reg in insn 53
changing reg in insn 54
changing reg in insn 57
changing reg in insn 59
changing reg in insn 58
changing reg in insn 61
changing reg in insn 63
changing reg in insn 64
changing reg in insn 71
changing reg in insn 72
changing reg in insn 474
changing reg in insn 476
changing reg in insn 475
changing reg in insn 478
changing reg in insn 480
changing reg in insn 481
changing reg in insn 488
changing reg in insn 489
changing reg in insn 528
changing reg in insn 529
changing reg in insn 532
changing reg in insn 534
changing reg in insn 533
changing reg in insn 536
changing reg in insn 538
changing reg in insn 539
changing reg in insn 546
changing reg in insn 547
changing reg in insn 7
changing reg in insn 8
changing reg in insn 14
changing reg in insn 15
changing reg in insn 22
changing reg in insn 23
changing reg in insn 27
changing reg in insn 28
changing reg in insn 30
changing reg in insn 31
changing reg in insn 34
changing reg in insn 36
changing reg in insn 35
changing reg in insn 36
changing reg in insn 52
changing reg in insn 53
changing reg in insn 62
changing reg in insn 63
changing reg in insn 70
changing reg in insn 71
changing reg in insn 75
changing reg in insn 76
changing reg in insn 78
changing reg in insn 79
changing reg in insn 82
changing reg in insn 84
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 87
changing reg in insn 88
changing reg in insn 89
changing reg in insn 91
changing reg in insn 92
changing reg in insn 95
changing reg in insn 96
changing reg in insn 99
changing reg in insn 101
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 103
changing reg in insn 105
changing reg in insn 106
changing reg in insn 109
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 113
changing reg in insn 114
changing reg in insn 116
changing reg in insn 117
changing reg in insn 120
changing reg in insn 121
changing reg in insn 124
changing reg in insn 126
changing reg in insn 125
changing reg in insn 126
changing reg in insn 126
changing reg in insn 127
changing reg in insn 128
changing reg in insn 129
changing reg in insn 131
changing reg in insn 132
changing reg in insn 135
changing reg in insn 136
changing reg in insn 139
changing reg in insn 141
changing reg in insn 140
changing reg in insn 141
changing reg in insn 141
changing reg in insn 142
changing reg in insn 143
changing reg in insn 144
changing reg in insn 146
changing reg in insn 147
changing reg in insn 150
changing reg in insn 151
changing reg in insn 154
changing reg in insn 155
changing reg in insn 155
changing reg in insn 156
changing reg in insn 157
changing reg in insn 159
changing reg in insn 158
changing reg in insn 159
changing reg in insn 162
changing reg in insn 163
changing reg in insn 161
changing reg in insn 162
changing reg in insn 166
changing reg in insn 167
changing reg in insn 169
changing reg in insn 170
changing reg in insn 178
changing reg in insn 179
changing reg in insn 180
changing reg in insn 181
changing reg in insn 183
changing reg in insn 184
changing reg in insn 187
changing reg in insn 189
changing reg in insn 188
changing reg in insn 189
changing reg in insn 190
changing reg in insn 191
changing reg in insn 193
changing reg in insn 195
changing reg in insn 194
changing reg in insn 195
changing reg in insn 197
changing reg in insn 198
changing reg in insn 199
changing reg in insn 200
changing reg in insn 201
changing reg in insn 202
changing reg in insn 205
changing reg in insn 207
changing reg in insn 206
changing reg in insn 207
changing reg in insn 208
changing reg in insn 210
changing reg in insn 209
changing reg in insn 210
changing reg in insn 213
changing reg in insn 215
changing reg in insn 214
changing reg in insn 215
changing reg in insn 221
changing reg in insn 222
changing reg in insn 226
changing reg in insn 227
changing reg in insn 224
changing reg in insn 225
changing reg in insn 229
changing reg in insn 230
changing reg in insn 238
changing reg in insn 240
changing reg in insn 243
changing reg in insn 244
changing reg in insn 246
changing reg in insn 247
changing reg in insn 251
changing reg in insn 252
changing reg in insn 253
changing reg in insn 254
changing reg in insn 256
changing reg in insn 257
changing reg in insn 260
changing reg in insn 262
changing reg in insn 261
changing reg in insn 262
changing reg in insn 263
changing reg in insn 264
changing reg in insn 268
changing reg in insn 270
changing reg in insn 269
changing reg in insn 270
changing reg in insn 271
changing reg in insn 272
changing reg in insn 274
changing reg in insn 275
changing reg in insn 278
changing reg in insn 280
changing reg in insn 279
changing reg in insn 280
changing reg in insn 281
changing reg in insn 282
changing reg in insn 286
changing reg in insn 287
changing reg in insn 288
changing reg in insn 289
changing reg in insn 295
changing reg in insn 296
changing reg in insn 298
changing reg in insn 299
changing reg in insn 302
changing reg in insn 303
changing reg in insn 306
changing reg in insn 307
changing reg in insn 305
changing reg in insn 306
changing reg in insn 308
changing reg in insn 310
changing reg in insn 309
changing reg in insn 310
changing reg in insn 313
changing reg in insn 314
changing reg in insn 321
changing reg in insn 322
changing reg in insn 324
changing reg in insn 325
changing reg in insn 328
changing reg in insn 329
changing reg in insn 332
changing reg in insn 334
changing reg in insn 333
changing reg in insn 334
changing reg in insn 339
changing reg in insn 340
changing reg in insn 342
changing reg in insn 343
changing reg in insn 346
changing reg in insn 347
changing reg in insn 350
changing reg in insn 352
changing reg in insn 351
changing reg in insn 352
changing reg in insn 357
changing reg in insn 359
changing reg in insn 358
changing reg in insn 359
changing reg in insn 365
changing reg in insn 366
changing reg in insn 368
changing reg in insn 369
changing reg in insn 372
changing reg in insn 373
changing reg in insn 376
changing reg in insn 378
changing reg in insn 377
changing reg in insn 378
changing reg in insn 381
changing reg in insn 382
changing reg in insn 388
changing reg in insn 389
changing reg in insn 395
changing reg in insn 396
changing reg in insn 398
changing reg in insn 399
changing reg in insn 402
changing reg in insn 403
changing reg in insn 406
changing reg in insn 408
changing reg in insn 407
changing reg in insn 408
changing reg in insn 409
changing reg in insn 410
changing reg in insn 413
changing reg in insn 414
changing reg in insn 417
changing reg in insn 418
changing reg in insn 421
changing reg in insn 422
changing reg in insn 423
changing reg in insn 424
changing reg in insn 426
changing reg in insn 427
changing reg in insn 433
changing reg in insn 434
changing reg in insn 440
changing reg in insn 441
changing reg in insn 443
changing reg in insn 444
changing reg in insn 447
changing reg in insn 448
changing reg in insn 451
changing reg in insn 453
changing reg in insn 452
changing reg in insn 453
changing reg in insn 479
changing reg in insn 480
changing reg in insn 487
changing reg in insn 488
changing reg in insn 492
changing reg in insn 493
changing reg in insn 495
changing reg in insn 496
changing reg in insn 499
changing reg in insn 501
changing reg in insn 500
changing reg in insn 501
changing reg in insn 502
changing reg in insn 503
changing reg in insn 505
changing reg in insn 506
changing reg in insn 509
changing reg in insn 511
changing reg in insn 510
changing reg in insn 511
changing reg in insn 527
changing reg in insn 528
changing reg in insn 537
changing reg in insn 538
changing reg in insn 545
changing reg in insn 546
changing reg in insn 550
changing reg in insn 551
changing reg in insn 553
changing reg in insn 554
changing reg in insn 557
changing reg in insn 558
changing reg in insn 561
changing reg in insn 562
changing reg in insn 563
changing reg in insn 564
changing reg in insn 567
changing reg in insn 568
changing reg in insn 571
changing reg in insn 572
changing reg in insn 575
changing reg in insn 576
changing reg in insn 580
changing reg in insn 581
changing reg in insn 579
changing reg in insn 580
changing reg in insn 582
changing reg in insn 583
changing reg in insn 585
changing reg in insn 586
changing reg in insn 589
changing reg in insn 590
changing reg in insn 591
changing reg in insn 592
changing reg in insn 594
changing reg in insn 595
changing reg in insn 598
changing reg in insn 599
changing reg in insn 602
changing reg in insn 603
changing reg in insn 604
changing reg in insn 605
changing reg in insn 607
changing reg in insn 608
changing reg in insn 611
changing reg in insn 612
changing reg in insn 615
changing reg in insn 616
changing reg in insn 617
changing reg in insn 618
changing reg in insn 621
changing reg in insn 622
changing reg in insn 624
changing reg in insn 625
changing reg in insn 628
changing reg in insn 629
changing reg in insn 632
changing reg in insn 634
changing reg in insn 633
changing reg in insn 634
changing reg in insn 638
changing reg in insn 640
changing reg in insn 641
changing reg in insn 643
changing reg in insn 644
changing reg in insn 648
changing reg in insn 649
changing reg in insn 650
changing reg in insn 651
changing reg in insn 653
changing reg in insn 654
changing reg in insn 657
changing reg in insn 658
changing reg in insn 659
changing reg in insn 660
changing reg in insn 662
changing reg in insn 663
changing reg in insn 666
changing reg in insn 667
changing reg in insn 670
changing reg in insn 671
changing reg in insn 672
changing reg in insn 673
changing reg in insn 675
changing reg in insn 676
changing reg in insn 679
changing reg in insn 680
changing reg in insn 683
changing reg in insn 684
changing reg in insn 687
changing reg in insn 688
changing reg in insn 690
changing reg in insn 691
changing reg in insn 694
changing reg in insn 695
changing reg in insn 698
changing reg in insn 700
changing reg in insn 699
changing reg in insn 700
changing reg in insn 704
changing reg in insn 706
changing reg in insn 707
changing reg in insn 709
changing reg in insn 710
changing reg in insn 714
changing reg in insn 715
deleting insn with uid = 814.
deleting insn with uid = 816.
deleting insn with uid = 211.
deleting insn with uid = 216.
deleting insn with uid = 218.
deleting insn with uid = 220.
deleting insn with uid = 242.
deleting insn with uid = 283.
deleting insn with uid = 820.
deleting insn with uid = 619.
deleting insn with uid = 636.
deleting insn with uid = 822.
deleting insn with uid = 685.
deleting insn with uid = 702.
deleting insn with uid = 824.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 219.


calcwi

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4]
;;  ref usage 	r0={165d,163u} r1={192d,190u} r2={42d,40u} r3={1d,1u} r4={2d,1u} r5={2d,1u} r6={1d,232u} r7={1d,60u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r17={198d,35u} r18={1d} r19={1d} r20={1d,1u,4e} r21={73d,77u} r22={26d,24u,1e} r23={13d,11u} r24={4d,2u} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} 
;;    total ref usage 1632{789d,838u,5e} in 628{627 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 376 377 394
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 clw+0 S8 A64])
        (reg:DI 5 di [ clw ])) "CALCWI.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 cli+0 S8 A64])
        (reg:DI 4 si [ cli ])) "CALCWI.f":1 85 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:SF 21 xmm0 [394])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALCWI.f":68 131 {*movsf_internal}
     (nil))
(insn 8 7 9 2 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 climit+0 S4 A32])
        (reg:SF 21 xmm0 [394])) "CALCWI.f":68 131 {*movsf_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SI 1 dx [orig:376 _316 ] [376])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f157d316990 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALCWI.f":70 86 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:SI 0 ax [orig:377 _317 ] [377])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f157d316990 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALCWI.f":70 86 {*movsi_internal}
     (nil))
(insn 11 10 44 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:376 _316 ] [376])) "CALCWI.f":70 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 377

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 377
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 377
;; lr  def 	 17 [flags] 378 395
(code_label 44 11 12 3 5 (nil) [1 uses])
(note 12 44 13 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:377 _317 ] [377]))) "CALCWI.f":70 11 {*cmpsi_1}
     (nil))
(insn 14 13 15 3 (set (reg:QI 1 dx [395])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCWI.f":70 678 {*setcc_qi}
     (nil))
(insn 15 14 16 3 (set (reg:SI 1 dx [orig:378 _319 ] [378])
        (zero_extend:SI (reg:QI 1 dx [395]))) "CALCWI.f":70 140 {*zero_extendqisi2}
     (nil))
(insn 16 15 17 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:378 _319 ] [378])
            (const_int 0 [0]))) "CALCWI.f":70 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 17 16 18 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 784)
            (pc))) "CALCWI.f":70 682 {*jcc}
     (nil)
 -> 784)
;;  succ:       50
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 377

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 377
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 18 17 19 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 38 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALCWI.f":71 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 377

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 377
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 379 396
(code_label 38 19 20 5 4 (nil) [1 uses])
(note 20 38 21 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 22 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALCWI.f":71 11 {*cmpsi_1}
     (nil))
(insn 22 21 23 5 (set (reg:QI 1 dx [396])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCWI.f":71 678 {*setcc_qi}
     (nil))
(insn 23 22 24 5 (set (reg:SI 1 dx [orig:379 _321 ] [379])
        (zero_extend:SI (reg:QI 1 dx [396]))) "CALCWI.f":71 140 {*zero_extendqisi2}
     (nil))
(insn 24 23 25 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:379 _321 ] [379])
            (const_int 0 [0]))) "CALCWI.f":71 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 25 24 26 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 787)
            (pc))) "CALCWI.f":71 682 {*jcc}
     (nil)
 -> 787)
;;  succ:       51
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 377

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 51, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 377
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 397 398 399 400
(note 26 25 27 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 27 26 28 6 (set (reg:SI 1 dx [397])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":72 86 {*movsi_internal}
     (nil))
(insn 28 27 29 6 (set (reg:DI 1 dx [orig:87 _1 ] [87])
        (sign_extend:DI (reg:SI 1 dx [397]))) "CALCWI.f":72 149 {*extendsidi2_rex64}
     (nil))
(insn 29 28 30 6 (parallel [
            (set (reg:DI 2 cx [orig:88 _2 ] [88])
                (mult:DI (reg:DI 1 dx [orig:87 _1 ] [87])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":72 349 {*muldi3_1}
     (nil))
(insn 30 29 31 6 (set (reg:SI 1 dx [398])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":72 86 {*movsi_internal}
     (nil))
(insn 31 30 32 6 (set (reg:DI 1 dx [orig:89 _3 ] [89])
        (sign_extend:DI (reg:SI 1 dx [398]))) "CALCWI.f":72 149 {*extendsidi2_rex64}
     (nil))
(insn 32 31 33 6 (parallel [
            (set (reg:DI 1 dx [orig:90 _4 ] [90])
                (plus:DI (reg:DI 1 dx [orig:89 _3 ] [89])
                    (reg:DI 2 cx [orig:88 _2 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":72 222 {*adddi_1}
     (nil))
(insn 33 32 34 6 (parallel [
            (set (reg:DI 2 cx [orig:91 _5 ] [91])
                (plus:DI (reg:DI 1 dx [orig:90 _4 ] [90])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":72 222 {*adddi_1}
     (nil))
(insn 34 33 35 6 (set (reg/f:DI 1 dx [399])
        (symbol_ref:DI ("iw.4109") [flags 0x202]  <var_decl 0x7f157d31ca20 iw>)) "CALCWI.f":72 85 {*movdi_internal}
     (nil))
(insn 35 34 36 6 (set (reg:SF 21 xmm0 [400])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALCWI.f":72 131 {*movsf_internal}
     (nil))
(insn 36 35 37 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:91 _5 ] [91])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [399])) [2 iw S4 A32])
        (reg:SF 21 xmm0 [400])) "CALCWI.f":72 131 {*movsf_internal}
     (nil))
(insn 37 36 760 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":71 221 {*addsi_1}
     (nil))
(jump_insn 760 37 761 6 (set (pc)
        (label_ref 38)) "CALCWI.f":71 683 {jump}
     (nil)
 -> 38)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 377

(barrier 761 760 787)
;; basic block 51, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 377
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 787 761 786 51 46 (nil) [1 uses])
(note 786 787 788 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 788 786 41 51 (const_int 0 [0]) "CALCWI.f":72 718 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 377

;; basic block 7, loop depth 0, maybe hot
;;  prev block 51, next block 50, flags: (RTL, MODIFIED)
;;  pred:       51 [always]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 377
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 41 788 42 7 3 (nil) [0 uses])
(note 42 41 43 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 762 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":70 221 {*addsi_1}
     (nil))
(jump_insn 762 43 763 7 (set (pc)
        (label_ref 44)) "CALCWI.f":70 683 {jump}
     (nil)
 -> 44)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 377

(barrier 763 762 784)
;; basic block 50, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 784 763 783 50 45 (nil) [1 uses])
(note 783 784 785 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 785 783 47 50 (const_int 0 [0]) "CALCWI.f":71 718 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 50, next block 9, flags: (RTL, MODIFIED)
;;  pred:       50 [always]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 47 785 48 8 2 (nil) [0 uses])
(note 48 47 49 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 49 48 469 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
        (const_int 2 [0x2])) "CALCWI.f":76 86 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              33 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 380 401
(code_label 469 49 50 9 26 (nil) [1 uses])
(note 50 469 51 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
            (const_int 38 [0x26]))) "CALCWI.f":76 11 {*cmpsi_1}
     (nil))
(insn 52 51 53 9 (set (reg:QI 0 ax [401])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCWI.f":76 678 {*setcc_qi}
     (nil))
(insn 53 52 54 9 (set (reg:SI 0 ax [orig:380 _326 ] [380])
        (zero_extend:SI (reg:QI 0 ax [401]))) "CALCWI.f":76 140 {*zero_extendqisi2}
     (nil))
(insn 54 53 55 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:380 _326 ] [380])
            (const_int 0 [0]))) "CALCWI.f":76 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 55 54 56 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 790)
            (pc))) "CALCWI.f":76 682 {*jcc}
     (nil)
 -> 790)
;;  succ:       52
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 381 382
(note 56 55 57 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 58 10 (set (reg:SI 0 ax [orig:381 _327 ] [381])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f157d316990 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALCWI.f":77 86 {*movsi_internal}
     (nil))
(insn 58 57 59 10 (set (reg:SI 3 bx [orig:382 _328 ] [382])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f157d316990 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALCWI.f":77 86 {*movsi_internal}
     (nil))
(insn 59 58 463 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 0 ax [orig:381 _327 ] [381])) "CALCWI.f":77 86 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              32 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  def 	 17 [flags] 383 402
(code_label 463 59 60 11 25 (nil) [1 uses])
(note 60 463 61 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 3 bx [orig:382 _328 ] [382]))) "CALCWI.f":77 11 {*cmpsi_1}
     (nil))
(insn 62 61 63 11 (set (reg:QI 0 ax [402])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCWI.f":77 678 {*setcc_qi}
     (nil))
(insn 63 62 64 11 (set (reg:SI 0 ax [orig:383 _330 ] [383])
        (zero_extend:SI (reg:QI 0 ax [402]))) "CALCWI.f":77 140 {*zero_extendqisi2}
     (nil))
(insn 64 63 65 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:383 _330 ] [383])
            (const_int 0 [0]))) "CALCWI.f":77 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 65 64 66 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 793)
            (pc))) "CALCWI.f":77 682 {*jcc}
     (nil)
 -> 793)
;;  succ:       53
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 66 65 67 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 67 66 457 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALCWI.f":78 86 {*movsi_internal}
     (nil))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;;              31 [always] 
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 384 403
(code_label 457 67 68 13 24 (nil) [1 uses])
(note 68 457 69 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 13 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALCWI.f":78 11 {*cmpsi_1}
     (nil))
(insn 70 69 71 13 (set (reg:QI 0 ax [403])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCWI.f":78 678 {*setcc_qi}
     (nil))
(insn 71 70 72 13 (set (reg:SI 0 ax [orig:384 _332 ] [384])
        (zero_extend:SI (reg:QI 0 ax [403]))) "CALCWI.f":78 140 {*zero_extendqisi2}
     (nil))
(insn 72 71 73 13 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:384 _332 ] [384])
            (const_int 0 [0]))) "CALCWI.f":78 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 73 72 74 13 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 796)
            (pc))) "CALCWI.f":78 682 {*jcc}
     (nil)
 -> 796)
;;  succ:       54
;;              14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 374 404 405 406 407 408 409 410 411 412 413 414 415 416 417 418 419 420 421 422 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441
(note 74 73 75 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 75 74 76 14 (set (reg:SI 0 ax [404])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":79 86 {*movsi_internal}
     (nil))
(insn 76 75 77 14 (set (reg:DI 0 ax [orig:92 _6 ] [92])
        (sign_extend:DI (reg:SI 0 ax [404]))) "CALCWI.f":79 149 {*extendsidi2_rex64}
     (nil))
(insn 77 76 78 14 (parallel [
            (set (reg:DI 1 dx [orig:93 _7 ] [93])
                (mult:DI (reg:DI 0 ax [orig:92 _6 ] [92])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":79 349 {*muldi3_1}
     (nil))
(insn 78 77 79 14 (set (reg:SI 0 ax [405])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":79 86 {*movsi_internal}
     (nil))
(insn 79 78 80 14 (set (reg:DI 0 ax [orig:94 _8 ] [94])
        (sign_extend:DI (reg:SI 0 ax [405]))) "CALCWI.f":79 149 {*extendsidi2_rex64}
     (nil))
(insn 80 79 81 14 (parallel [
            (set (reg:DI 0 ax [orig:95 _9 ] [95])
                (plus:DI (reg:DI 0 ax [orig:94 _8 ] [94])
                    (reg:DI 1 dx [orig:93 _7 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":79 222 {*adddi_1}
     (nil))
(insn 81 80 82 14 (parallel [
            (set (reg:DI 1 dx [orig:96 _10 ] [96])
                (plus:DI (reg:DI 0 ax [orig:95 _9 ] [95])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":79 222 {*adddi_1}
     (nil))
(insn 82 81 83 14 (set (reg/f:DI 0 ax [406])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7f157d312c60 loops>)) "CALCWI.f":79 85 {*movdi_internal}
     (nil))
(insn 83 82 84 14 (parallel [
            (set (reg:DI 1 dx [407])
                (plus:DI (reg:DI 1 dx [orig:96 _10 ] [96])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":79 222 {*adddi_1}
     (nil))
(insn 84 83 85 14 (set (reg:SI 0 ax [orig:97 _11 ] [97])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [407])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [406])) [1 loops.lmh S4 A32])) "CALCWI.f":79 86 {*movsi_internal}
     (nil))
(insn 85 84 86 14 (set (reg:SI 1 dx [408])
        (const_int 38 [0x26])) "CALCWI.f":79 86 {*movsi_internal}
     (nil))
(insn 86 85 815 14 (parallel [
            (set (reg:SI 1 dx [408])
                (minus:SI (reg:SI 1 dx [408])
                    (reg:SI 0 ax [orig:97 _11 ] [97])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":79 277 {*subsi_1}
     (nil))
(insn 815 86 87 14 (set (reg:SI 0 ax [409])
        (reg:SI 1 dx [408])) "CALCWI.f":79 86 {*movsi_internal}
     (nil))
(insn 87 815 88 14 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 lml+0 S4 A32])
        (reg:SI 0 ax [409])) "CALCWI.f":79 86 {*movsi_internal}
     (nil))
(insn 88 87 89 14 (set (reg:SI 0 ax [410])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":80 86 {*movsi_internal}
     (nil))
(insn 89 88 90 14 (set (reg:DI 0 ax [orig:98 _12 ] [98])
        (sign_extend:DI (reg:SI 0 ax [410]))) "CALCWI.f":80 149 {*extendsidi2_rex64}
     (nil))
(insn 90 89 91 14 (parallel [
            (set (reg:DI 1 dx [orig:99 _13 ] [99])
                (mult:DI (reg:DI 0 ax [orig:98 _12 ] [98])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":80 349 {*muldi3_1}
     (nil))
(insn 91 90 92 14 (set (reg:SI 0 ax [411])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":80 86 {*movsi_internal}
     (nil))
(insn 92 91 93 14 (set (reg:DI 0 ax [orig:100 _14 ] [100])
        (sign_extend:DI (reg:SI 0 ax [411]))) "CALCWI.f":80 149 {*extendsidi2_rex64}
     (nil))
(insn 93 92 94 14 (parallel [
            (set (reg:DI 0 ax [orig:101 _15 ] [101])
                (mult:DI (reg:DI 0 ax [orig:100 _14 ] [100])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":80 349 {*muldi3_1}
     (nil))
(insn 94 93 95 14 (parallel [
            (set (reg:DI 1 dx [orig:102 _16 ] [102])
                (plus:DI (reg:DI 1 dx [orig:99 _13 ] [99])
                    (reg:DI 0 ax [orig:101 _15 ] [101])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":80 222 {*adddi_1}
     (nil))
(insn 95 94 96 14 (set (reg:SI 0 ax [412])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":80 86 {*movsi_internal}
     (nil))
(insn 96 95 97 14 (set (reg:DI 0 ax [orig:103 _17 ] [103])
        (sign_extend:DI (reg:SI 0 ax [412]))) "CALCWI.f":80 149 {*extendsidi2_rex64}
     (nil))
(insn 97 96 98 14 (parallel [
            (set (reg:DI 0 ax [orig:104 _18 ] [104])
                (plus:DI (reg:DI 0 ax [orig:103 _17 ] [103])
                    (reg:DI 1 dx [orig:102 _16 ] [102])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":80 222 {*adddi_1}
     (nil))
(insn 98 97 99 14 (parallel [
            (set (reg:DI 1 dx [orig:105 _19 ] [105])
                (plus:DI (reg:DI 0 ax [orig:104 _18 ] [104])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":80 222 {*adddi_1}
     (nil))
(insn 99 98 100 14 (set (reg/f:DI 0 ax [413])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f157d316120 masks>)) "CALCWI.f":80 85 {*movdi_internal}
     (nil))
(insn 100 99 101 14 (parallel [
            (set (reg:DI 1 dx [414])
                (plus:DI (reg:DI 1 dx [orig:105 _19 ] [105])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":80 222 {*adddi_1}
     (nil))
(insn 101 100 102 14 (set (reg:SF 22 xmm1 [orig:106 _20 ] [106])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [414])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [413])) [2 masks.htm S4 A32])) "CALCWI.f":80 131 {*movsf_internal}
     (nil))
(insn 102 101 103 14 (set (reg:SI 0 ax [415])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":80 86 {*movsi_internal}
     (nil))
(insn 103 102 104 14 (set (reg:DI 0 ax [orig:107 _21 ] [107])
        (sign_extend:DI (reg:SI 0 ax [415]))) "CALCWI.f":80 149 {*extendsidi2_rex64}
     (nil))
(insn 104 103 105 14 (parallel [
            (set (reg:DI 1 dx [orig:108 _22 ] [108])
                (mult:DI (reg:DI 0 ax [orig:107 _21 ] [107])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":80 349 {*muldi3_1}
     (nil))
(insn 105 104 106 14 (set (reg:SI 0 ax [416])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":80 86 {*movsi_internal}
     (nil))
(insn 106 105 107 14 (set (reg:DI 0 ax [orig:109 _23 ] [109])
        (sign_extend:DI (reg:SI 0 ax [416]))) "CALCWI.f":80 149 {*extendsidi2_rex64}
     (nil))
(insn 107 106 108 14 (parallel [
            (set (reg:DI 0 ax [orig:110 _24 ] [110])
                (plus:DI (reg:DI 0 ax [orig:109 _23 ] [109])
                    (reg:DI 1 dx [orig:108 _22 ] [108])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":80 222 {*adddi_1}
     (nil))
(insn 108 107 109 14 (parallel [
            (set (reg:DI 1 dx [orig:111 _25 ] [111])
                (plus:DI (reg:DI 0 ax [orig:110 _24 ] [110])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":80 222 {*adddi_1}
     (nil))
(insn 109 108 110 14 (set (reg/f:DI 0 ax [417])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f157d316120 masks>)) "CALCWI.f":80 85 {*movdi_internal}
     (nil))
(insn 110 109 111 14 (set (reg:SF 21 xmm0 [orig:112 _26 ] [112])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:111 _25 ] [111])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [417])) [2 masks.hbm2 S4 A32])) "CALCWI.f":80 131 {*movsf_internal}
     (nil))
(insn 111 110 112 14 (set (reg:SF 21 xmm0 [418])
        (mult:SF (reg:SF 21 xmm0 [orig:112 _26 ] [112])
            (reg:SF 22 xmm1 [orig:106 _20 ] [106]))) "CALCWI.f":80 838 {*fop_sf_comm}
     (nil))
(insn 112 111 113 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 hh+0 S4 A32])
        (reg:SF 21 xmm0 [418])) "CALCWI.f":80 131 {*movsf_internal}
     (nil))
(insn 113 112 114 14 (set (reg:SI 0 ax [419])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":81 86 {*movsi_internal}
     (nil))
(insn 114 113 115 14 (set (reg:DI 0 ax [orig:113 _27 ] [113])
        (sign_extend:DI (reg:SI 0 ax [419]))) "CALCWI.f":81 149 {*extendsidi2_rex64}
     (nil))
(insn 115 114 116 14 (parallel [
            (set (reg:DI 1 dx [orig:114 _28 ] [114])
                (mult:DI (reg:DI 0 ax [orig:113 _27 ] [113])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":81 349 {*muldi3_1}
     (nil))
(insn 116 115 117 14 (set (reg:SI 0 ax [420])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":81 86 {*movsi_internal}
     (nil))
(insn 117 116 118 14 (set (reg:DI 0 ax [orig:115 _29 ] [115])
        (sign_extend:DI (reg:SI 0 ax [420]))) "CALCWI.f":81 149 {*extendsidi2_rex64}
     (nil))
(insn 118 117 119 14 (parallel [
            (set (reg:DI 0 ax [orig:116 _30 ] [116])
                (mult:DI (reg:DI 0 ax [orig:115 _29 ] [115])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":81 349 {*muldi3_1}
     (nil))
(insn 119 118 120 14 (parallel [
            (set (reg:DI 1 dx [orig:117 _31 ] [117])
                (plus:DI (reg:DI 1 dx [orig:114 _28 ] [114])
                    (reg:DI 0 ax [orig:116 _30 ] [116])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":81 222 {*adddi_1}
     (nil))
(insn 120 119 121 14 (set (reg:SI 0 ax [421])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":81 86 {*movsi_internal}
     (nil))
(insn 121 120 122 14 (set (reg:DI 0 ax [orig:118 _32 ] [118])
        (sign_extend:DI (reg:SI 0 ax [421]))) "CALCWI.f":81 149 {*extendsidi2_rex64}
     (nil))
(insn 122 121 123 14 (parallel [
            (set (reg:DI 0 ax [orig:119 _33 ] [119])
                (plus:DI (reg:DI 0 ax [orig:118 _32 ] [118])
                    (reg:DI 1 dx [orig:117 _31 ] [117])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":81 222 {*adddi_1}
     (nil))
(insn 123 122 124 14 (parallel [
            (set (reg:DI 1 dx [orig:120 _34 ] [120])
                (plus:DI (reg:DI 0 ax [orig:119 _33 ] [119])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":81 222 {*adddi_1}
     (nil))
(insn 124 123 125 14 (set (reg/f:DI 0 ax [422])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f157d31c240 vrbls>)) "CALCWI.f":81 85 {*movdi_internal}
     (nil))
(insn 125 124 126 14 (parallel [
            (set (reg:DI 1 dx [423])
                (plus:DI (reg:DI 1 dx [orig:120 _34 ] [120])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":81 222 {*adddi_1}
     (nil))
(insn 126 125 127 14 (set (reg:SF 21 xmm0 [424])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [423])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [422])) [2 vrbls.t S4 A32])) "CALCWI.f":81 131 {*movsf_internal}
     (nil))
(insn 127 126 128 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 tkl+0 S4 A32])
        (reg:SF 21 xmm0 [424])) "CALCWI.f":81 131 {*movsf_internal}
     (nil))
(insn 128 127 129 14 (set (reg:SI 0 ax [425])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":82 86 {*movsi_internal}
     (nil))
(insn 129 128 130 14 (set (reg:DI 0 ax [orig:121 _35 ] [121])
        (sign_extend:DI (reg:SI 0 ax [425]))) "CALCWI.f":82 149 {*extendsidi2_rex64}
     (nil))
(insn 130 129 131 14 (parallel [
            (set (reg:DI 1 dx [orig:122 _36 ] [122])
                (mult:DI (reg:DI 0 ax [orig:121 _35 ] [121])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":82 349 {*muldi3_1}
     (nil))
(insn 131 130 132 14 (set (reg:SI 0 ax [426])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":82 86 {*movsi_internal}
     (nil))
(insn 132 131 133 14 (set (reg:DI 0 ax [orig:123 _37 ] [123])
        (sign_extend:DI (reg:SI 0 ax [426]))) "CALCWI.f":82 149 {*extendsidi2_rex64}
     (nil))
(insn 133 132 134 14 (parallel [
            (set (reg:DI 0 ax [orig:124 _38 ] [124])
                (mult:DI (reg:DI 0 ax [orig:123 _37 ] [123])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":82 349 {*muldi3_1}
     (nil))
(insn 134 133 135 14 (parallel [
            (set (reg:DI 1 dx [orig:125 _39 ] [125])
                (plus:DI (reg:DI 1 dx [orig:122 _36 ] [122])
                    (reg:DI 0 ax [orig:124 _38 ] [124])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":82 222 {*adddi_1}
     (nil))
(insn 135 134 136 14 (set (reg:SI 0 ax [427])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":82 86 {*movsi_internal}
     (nil))
(insn 136 135 137 14 (set (reg:DI 0 ax [orig:126 _40 ] [126])
        (sign_extend:DI (reg:SI 0 ax [427]))) "CALCWI.f":82 149 {*extendsidi2_rex64}
     (nil))
(insn 137 136 138 14 (parallel [
            (set (reg:DI 0 ax [orig:127 _41 ] [127])
                (plus:DI (reg:DI 0 ax [orig:126 _40 ] [126])
                    (reg:DI 1 dx [orig:125 _39 ] [125])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":82 222 {*adddi_1}
     (nil))
(insn 138 137 139 14 (parallel [
            (set (reg:DI 1 dx [orig:128 _42 ] [128])
                (plus:DI (reg:DI 0 ax [orig:127 _41 ] [127])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":82 222 {*adddi_1}
     (nil))
(insn 139 138 140 14 (set (reg/f:DI 0 ax [428])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7f157d31c240 vrbls>)) "CALCWI.f":82 85 {*movdi_internal}
     (nil))
(insn 140 139 141 14 (parallel [
            (set (reg:DI 1 dx [429])
                (plus:DI (reg:DI 1 dx [orig:128 _42 ] [128])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":82 222 {*adddi_1}
     (nil))
(insn 141 140 142 14 (set (reg:SF 21 xmm0 [430])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [429])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [428])) [2 vrbls.q S4 A32])) "CALCWI.f":82 131 {*movsf_internal}
     (nil))
(insn 142 141 143 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 qkl+0 S4 A32])
        (reg:SF 21 xmm0 [430])) "CALCWI.f":82 131 {*movsf_internal}
     (nil))
(insn 143 142 144 14 (set (reg:SI 0 ax [431])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":83 86 {*movsi_internal}
     (nil))
(insn 144 143 145 14 (set (reg:DI 0 ax [orig:129 _43 ] [129])
        (sign_extend:DI (reg:SI 0 ax [431]))) "CALCWI.f":83 149 {*extendsidi2_rex64}
     (nil))
(insn 145 144 146 14 (parallel [
            (set (reg:DI 1 dx [orig:130 _44 ] [130])
                (mult:DI (reg:DI 0 ax [orig:129 _43 ] [129])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":83 349 {*muldi3_1}
     (nil))
(insn 146 145 147 14 (set (reg:SI 0 ax [432])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":83 86 {*movsi_internal}
     (nil))
(insn 147 146 148 14 (set (reg:DI 0 ax [orig:131 _45 ] [131])
        (sign_extend:DI (reg:SI 0 ax [432]))) "CALCWI.f":83 149 {*extendsidi2_rex64}
     (nil))
(insn 148 147 149 14 (parallel [
            (set (reg:DI 0 ax [orig:132 _46 ] [132])
                (mult:DI (reg:DI 0 ax [orig:131 _45 ] [131])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":83 349 {*muldi3_1}
     (nil))
(insn 149 148 150 14 (parallel [
            (set (reg:DI 1 dx [orig:133 _47 ] [133])
                (plus:DI (reg:DI 1 dx [orig:130 _44 ] [130])
                    (reg:DI 0 ax [orig:132 _46 ] [132])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":83 222 {*adddi_1}
     (nil))
(insn 150 149 151 14 (set (reg:SI 0 ax [433])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":83 86 {*movsi_internal}
     (nil))
(insn 151 150 152 14 (set (reg:DI 0 ax [orig:134 _48 ] [134])
        (sign_extend:DI (reg:SI 0 ax [433]))) "CALCWI.f":83 149 {*extendsidi2_rex64}
     (nil))
(insn 152 151 153 14 (parallel [
            (set (reg:DI 0 ax [orig:135 _49 ] [135])
                (plus:DI (reg:DI 0 ax [orig:134 _48 ] [134])
                    (reg:DI 1 dx [orig:133 _47 ] [133])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":83 222 {*adddi_1}
     (nil))
(insn 153 152 154 14 (parallel [
            (set (reg:DI 1 dx [orig:136 _50 ] [136])
                (plus:DI (reg:DI 0 ax [orig:135 _49 ] [135])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":83 222 {*adddi_1}
     (nil))
(insn 154 153 155 14 (set (reg/f:DI 0 ax [434])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f158436dab0 cldwtr>)) "CALCWI.f":83 85 {*movdi_internal}
     (nil))
(insn 155 154 156 14 (set (reg:SF 21 xmm0 [435])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:136 _50 ] [136])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [434])) [2 cldwtr.cwm S4 A32])) "CALCWI.f":83 131 {*movsf_internal}
     (nil))
(insn 156 155 157 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 cwmkl+0 S4 A32])
        (reg:SF 21 xmm0 [435])) "CALCWI.f":83 131 {*movsf_internal}
     (nil))
(insn 157 156 158 14 (set (reg:SF 21 xmm0 [436])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 tkl+0 S4 A32])) "CALCWI.f":84 131 {*movsf_internal}
     (nil))
(insn 158 157 159 14 (set (reg:SF 22 xmm1 [437])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALCWI.f":84 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73149993896484375e+2 [0x0.889333p+9])
        (nil)))
(insn 159 158 160 14 (set (reg:SF 21 xmm0 [orig:137 _51 ] [137])
        (minus:SF (reg:SF 21 xmm0 [436])
            (reg:SF 22 xmm1 [437]))) "CALCWI.f":84 841 {*fop_sf_1}
     (nil))
(insn 160 159 161 14 (set (reg:SF 22 xmm1 [orig:138 _52 ] [138])
        (reg:SF 21 xmm0 [orig:137 _51 ] [137])) "CALCWI.f":84 131 {*movsf_internal}
     (nil))
(insn 161 160 162 14 (set (reg:SF 21 xmm0 [439])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 hh+0 S4 A32])) "CALCWI.f":84 131 {*movsf_internal}
     (nil))
(insn 162 161 163 14 (set (reg:SF 21 xmm0 [438])
        (mult:SF (reg:SF 21 xmm0 [439])
            (reg:SF 22 xmm1 [orig:138 _52 ] [138]))) "CALCWI.f":84 838 {*fop_sf_comm}
     (nil))
(insn 163 162 164 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 tmt0+0 S4 A32])
        (reg:SF 21 xmm0 [438])) "CALCWI.f":84 131 {*movsf_internal}
     (nil))
(insn 164 163 165 14 (set (reg:SF 21 xmm0 [orig:374 M.0_298 ] [374])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 tmt0+0 S4 A32])) "CALCWI.f":85 131 {*movsf_internal}
     (nil))
(insn 165 164 166 14 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:374 M.0_298 ] [374])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32]))) "CALCWI.f":85 53 {*cmpisf}
     (nil))
(insn 166 165 167 14 (set (reg:QI 0 ax [440])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALCWI.f":85 678 {*setcc_qi}
     (nil))
(insn 167 166 168 14 (set (reg:SI 1 dx [orig:139 _53 ] [139])
        (zero_extend:SI (reg:QI 0 ax [440]))) "CALCWI.f":85 140 {*zero_extendqisi2}
     (nil))
(insn 168 167 169 14 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:374 M.0_298 ] [374])
                    (reg:SF 21 xmm0 [orig:374 M.0_298 ] [374]))
            ] UNSPEC_NOTRAP)) "CALCWI.f":85 54 {*cmpiusf}
     (nil))
(insn 169 168 170 14 (set (reg:QI 0 ax [441])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALCWI.f":85 678 {*setcc_qi}
     (nil))
(insn 170 169 171 14 (set (reg:SI 0 ax [orig:140 _54 ] [140])
        (zero_extend:SI (reg:QI 0 ax [441]))) "CALCWI.f":85 140 {*zero_extendqisi2}
     (nil))
(insn 171 170 172 14 (parallel [
            (set (reg:SI 0 ax [orig:141 _55 ] [141])
                (ior:SI (reg:SI 0 ax [orig:140 _54 ] [140])
                    (reg:SI 1 dx [orig:139 _53 ] [139])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":85 450 {*iorsi_1}
     (nil))
(insn 172 171 173 14 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:141 _55 ] [141])
            (const_int 0 [0]))) "CALCWI.f":85 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 173 172 174 14 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 176)
            (pc))) "CALCWI.f":85 682 {*jcc}
     (nil)
 -> 176)
;;  succ:       15 (FALLTHRU)
;;              16
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 374 382

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 374
(note 174 173 175 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 175 174 176 15 (set (reg:SF 21 xmm0 [orig:374 M.0_298 ] [374])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALCWI.f":85 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -1.5e+1 [-0x0.fp+4])
        (nil)))
;;  succ:       16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 374 382

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       14
;;              15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 374 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 374
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 163 164 165 375 442 443 444 445 446 447 448 449 450 451 452 453 454 455 456 457 458 459 460 461 462 463
(code_label 176 175 177 16 9 (nil) [1 uses])
(note 177 176 178 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 179 16 (set (reg:SF 21 xmm0 [442])
        (mult:SF (reg:SF 21 xmm0 [orig:374 M.0_298 ] [374])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [2 hh+0 S4 A32]))) "CALCWI.f":85 838 {*fop_sf_comm}
     (nil))
(insn 179 178 180 16 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 tmt15+0 S4 A32])
        (reg:SF 21 xmm0 [442])) "CALCWI.f":85 131 {*movsf_internal}
     (nil))
(insn 180 179 181 16 (set (reg:SI 0 ax [443])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":86 86 {*movsi_internal}
     (nil))
(insn 181 180 182 16 (set (reg:DI 0 ax [orig:142 _56 ] [142])
        (sign_extend:DI (reg:SI 0 ax [443]))) "CALCWI.f":86 149 {*extendsidi2_rex64}
     (nil))
(insn 182 181 183 16 (parallel [
            (set (reg:DI 1 dx [orig:143 _57 ] [143])
                (mult:DI (reg:DI 0 ax [orig:142 _56 ] [142])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":86 349 {*muldi3_1}
     (nil))
(insn 183 182 184 16 (set (reg:SI 0 ax [444])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":86 86 {*movsi_internal}
     (nil))
(insn 184 183 185 16 (set (reg:DI 0 ax [orig:144 _58 ] [144])
        (sign_extend:DI (reg:SI 0 ax [444]))) "CALCWI.f":86 149 {*extendsidi2_rex64}
     (nil))
(insn 185 184 186 16 (parallel [
            (set (reg:DI 0 ax [orig:145 _59 ] [145])
                (plus:DI (reg:DI 0 ax [orig:144 _58 ] [144])
                    (reg:DI 1 dx [orig:143 _57 ] [143])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":86 222 {*adddi_1}
     (nil))
(insn 186 185 187 16 (parallel [
            (set (reg:DI 1 dx [orig:146 _60 ] [146])
                (plus:DI (reg:DI 0 ax [orig:145 _59 ] [145])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":86 222 {*adddi_1}
     (nil))
(insn 187 186 188 16 (set (reg/f:DI 0 ax [445])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f157d30cbd0 extra>)) "CALCWI.f":86 85 {*movdi_internal}
     (nil))
(insn 188 187 189 16 (parallel [
            (set (reg:DI 1 dx [446])
                (plus:DI (reg:DI 1 dx [orig:146 _60 ] [146])
                    (const_int 4647393 [0x46e9e1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":86 222 {*adddi_1}
     (nil))
(insn 189 188 190 16 (set (reg:SF 22 xmm1 [orig:147 _61 ] [147])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [446])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [445])) [2 extra.pdsl S4 A32])) "CALCWI.f":86 131 {*movsf_internal}
     (nil))
(insn 190 189 191 16 (set (reg:SI 0 ax [447])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":86 86 {*movsi_internal}
     (nil))
(insn 191 190 192 16 (set (reg:DI 0 ax [orig:148 _62 ] [148])
        (sign_extend:DI (reg:SI 0 ax [447]))) "CALCWI.f":86 149 {*extendsidi2_rex64}
     (nil))
(insn 192 191 193 16 (parallel [
            (set (reg:DI 1 dx [orig:149 _63 ] [149])
                (plus:DI (reg:DI 0 ax [orig:148 _62 ] [148])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":86 222 {*adddi_1}
     (nil))
(insn 193 192 194 16 (set (reg/f:DI 0 ax [448])
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f157d305bd0 dynam>)) "CALCWI.f":86 85 {*movdi_internal}
     (nil))
(insn 194 193 195 16 (parallel [
            (set (reg:DI 1 dx [449])
                (plus:DI (reg:DI 1 dx [orig:149 _63 ] [149])
                    (const_int 85 [0x55])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":86 222 {*adddi_1}
     (nil))
(insn 195 194 196 16 (set (reg:SF 21 xmm0 [orig:150 _64 ] [150])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [449])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [448])) [2 dynam.aeta S4 A32])) "CALCWI.f":86 131 {*movsf_internal}
     (nil))
(insn 196 195 197 16 (set (reg:SF 22 xmm1 [orig:151 _65 ] [151])
        (mult:SF (reg:SF 22 xmm1 [orig:147 _61 ] [147])
            (reg:SF 21 xmm0 [orig:150 _64 ] [150]))) "CALCWI.f":86 838 {*fop_sf_comm}
     (nil))
(insn 197 196 198 16 (set (reg/f:DI 0 ax [450])
        (symbol_ref:DI ("dynam_") [flags 0x202]  <var_decl 0x7f157d305bd0 dynam>)) "CALCWI.f":1 85 {*movdi_internal}
     (nil))
(insn 198 197 199 16 (set (reg:SF 21 xmm0 [orig:152 _66 ] [152])
        (mem/c:SF (plus:DI (reg/f:DI 0 ax [450])
                (const_int 20 [0x14])) [2 dynam.pt+0 S4 A32])) "CALCWI.f":1 131 {*movsf_internal}
     (nil))
(insn 199 198 200 16 (set (reg:SF 21 xmm0 [451])
        (plus:SF (reg:SF 21 xmm0 [orig:152 _66 ] [152])
            (reg:SF 22 xmm1 [orig:151 _65 ] [151]))) "CALCWI.f":86 838 {*fop_sf_comm}
     (nil))
(insn 200 199 201 16 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 pp+0 S4 A32])
        (reg:SF 21 xmm0 [451])) "CALCWI.f":86 131 {*movsf_internal}
     (nil))
(insn 201 200 202 16 (set (reg:SF 22 xmm1 [452])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 hh+0 S4 A32])) "CALCWI.f":87 131 {*movsf_internal}
     (nil))
(insn 202 201 203 16 (set (reg:SF 21 xmm0 [453])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALCWI.f":87 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.799051513671875e+2 [0x0.bdf3dcp+9])
        (nil)))
(insn 203 202 204 16 (set (reg:SF 21 xmm0 [orig:153 _67 ] [153])
        (mult:SF (reg:SF 21 xmm0 [453])
            (reg:SF 22 xmm1 [452]))) "CALCWI.f":87 838 {*fop_sf_comm}
     (nil))
(insn 204 203 817 16 (set (reg:SF 21 xmm0 [orig:153 _67 ] [153])
        (div:SF (reg:SF 21 xmm0 [orig:153 _67 ] [153])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [2 pp+0 S4 A32]))) "CALCWI.f":87 841 {*fop_sf_1}
     (nil))
(insn 817 204 827 16 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [11 %sfp+-100 S4 A32])
        (reg:SF 21 xmm0 [orig:153 _67 ] [153])) "CALCWI.f":87 131 {*movsf_internal}
     (nil))
(note 827 817 825 16 NOTE_INSN_DELETED)
(note 825 827 205 16 NOTE_INSN_DELETED)
(insn 205 825 206 16 (set (reg:SF 22 xmm1 [454])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 hh+0 S4 A32])) "CALCWI.f":87 131 {*movsf_internal}
     (nil))
(insn 206 205 207 16 (set (reg:SF 21 xmm0 [455])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALCWI.f":87 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.72693881988525390625e+1 [0x0.8a27b5p+5])
        (nil)))
(insn 207 206 208 16 (set (reg:SF 22 xmm1 [orig:155 _69 ] [155])
        (mult:SF (reg:SF 22 xmm1 [454])
            (reg:SF 21 xmm0 [455]))) "CALCWI.f":87 838 {*fop_sf_comm}
     (nil))
(insn 208 207 209 16 (set (reg:SF 21 xmm0 [456])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 tkl+0 S4 A32])) "CALCWI.f":87 131 {*movsf_internal}
     (nil))
(insn 209 208 210 16 (set (reg:SF 23 xmm2 [457])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALCWI.f":87 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73160003662109375e+2 [0x0.88947bp+9])
        (nil)))
(insn 210 209 212 16 (set (reg:SF 21 xmm0 [orig:156 _70 ] [156])
        (minus:SF (reg:SF 21 xmm0 [456])
            (reg:SF 23 xmm2 [457]))) "CALCWI.f":87 841 {*fop_sf_1}
     (nil))
(insn 212 210 213 16 (set (reg:SF 21 xmm0 [orig:158 _72 ] [158])
        (mult:SF (reg:SF 21 xmm0 [orig:157 _71 ] [157])
            (reg:SF 22 xmm1 [orig:155 _69 ] [155]))) "CALCWI.f":87 838 {*fop_sf_comm}
     (nil))
(insn 213 212 214 16 (set (reg:SF 22 xmm1 [458])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 tkl+0 S4 A32])) "CALCWI.f":87 131 {*movsf_internal}
     (nil))
(insn 214 213 215 16 (set (reg:SF 23 xmm2 [459])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALCWI.f":87 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.58600006103515625e+1 [0x0.8f70a4p+6])
        (nil)))
(insn 215 214 217 16 (set (reg:SF 22 xmm1 [orig:159 _73 ] [159])
        (minus:SF (reg:SF 22 xmm1 [458])
            (reg:SF 23 xmm2 [459]))) "CALCWI.f":87 841 {*fop_sf_1}
     (nil))
(insn 217 215 219 16 (set (reg:SF 21 xmm0 [orig:161 _75 ] [161])
        (div:SF (reg:SF 21 xmm0 [orig:158 _72 ] [158])
            (reg:SF 22 xmm1 [orig:160 _74 ] [160]))) "CALCWI.f":87 841 {*fop_sf_1}
     (nil))
(call_insn/u 219 217 818 16 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("expf") [flags 0x41]  <function_decl 0x7f157d172300 __builtin_expf>) [0 __builtin_expf S1 A8])
            (const_int 0 [0]))) "CALCWI.f":87 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 818 219 826 16 NOTE_INSN_DELETED)
(note 826 818 221 16 NOTE_INSN_DELETED)
(insn 221 826 222 16 (set (reg:SF 21 xmm0 [460])
        (mult:SF (reg:SF 21 xmm0 [orig:162 _76 ] [162])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])) [11 %sfp+-100 S4 A32]))) "CALCWI.f":87 838 {*fop_sf_comm}
     (nil))
(insn 222 221 223 16 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 qw+0 S4 A32])
        (reg:SF 21 xmm0 [460])) "CALCWI.f":87 131 {*movsf_internal}
     (nil))
(insn 223 222 224 16 (set (reg:SF 21 xmm0 [orig:375 M.1_299 ] [375])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 tmt0+0 S4 A32])) "CALCWI.f":88 131 {*movsf_internal}
     (nil))
(insn 224 223 225 16 (set (reg:SF 22 xmm1 [462])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALCWI.f":88 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 225 224 226 16 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:375 M.1_299 ] [375])
            (reg:SF 22 xmm1 [462]))) "CALCWI.f":88 53 {*cmpisf}
     (nil))
(insn 226 225 227 16 (set (reg:QI 0 ax [461])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALCWI.f":88 678 {*setcc_qi}
     (nil))
(insn 227 226 228 16 (set (reg:SI 1 dx [orig:163 _77 ] [163])
        (zero_extend:SI (reg:QI 0 ax [461]))) "CALCWI.f":88 140 {*zero_extendqisi2}
     (nil))
(insn 228 227 229 16 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:375 M.1_299 ] [375])
                    (reg:SF 21 xmm0 [orig:375 M.1_299 ] [375]))
            ] UNSPEC_NOTRAP)) "CALCWI.f":88 54 {*cmpiusf}
     (nil))
(insn 229 228 230 16 (set (reg:QI 0 ax [463])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALCWI.f":88 678 {*setcc_qi}
     (nil))
(insn 230 229 231 16 (set (reg:SI 0 ax [orig:164 _78 ] [164])
        (zero_extend:SI (reg:QI 0 ax [463]))) "CALCWI.f":88 140 {*zero_extendqisi2}
     (nil))
(insn 231 230 232 16 (parallel [
            (set (reg:SI 0 ax [orig:165 _79 ] [165])
                (ior:SI (reg:SI 0 ax [orig:164 _78 ] [164])
                    (reg:SI 1 dx [orig:163 _77 ] [163])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":88 450 {*iorsi_1}
     (nil))
(insn 232 231 233 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:165 _79 ] [165])
            (const_int 0 [0]))) "CALCWI.f":88 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 233 232 234 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 236)
            (pc))) "CALCWI.f":88 682 {*jcc}
     (nil)
 -> 236)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 375 382

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 375
(note 234 233 235 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 235 234 236 17 (set (reg:SF 21 xmm0 [orig:375 M.1_299 ] [375])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALCWI.f":88 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 375 382

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       16
;;              17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 375 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 375
;; lr  def 	 17 [flags] 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 193 194 464 465 466 467 468 469 470 471 472 473 474 475 476 477 478 479 480 481 482 483
(code_label 236 235 237 18 10 (nil) [1 uses])
(note 237 236 238 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 238 237 239 18 (set (reg:SF 22 xmm1 [464])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALCWI.f":88 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999977648258209228515625e-3 [0x0.a3d70ap-6])
        (nil)))
(insn 239 238 240 18 (set (reg:SF 22 xmm1 [orig:166 _80 ] [166])
        (mult:SF (reg:SF 22 xmm1 [464])
            (reg:SF 21 xmm0 [orig:375 M.1_299 ] [375]))) "CALCWI.f":88 838 {*fop_sf_comm}
     (nil))
(insn 240 239 241 18 (set (reg:SF 21 xmm0 [465])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALCWI.f":88 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 241 240 243 18 (set (reg:SF 21 xmm0 [orig:167 _81 ] [167])
        (plus:SF (reg:SF 21 xmm0 [465])
            (reg:SF 22 xmm1 [orig:166 _80 ] [166]))) "CALCWI.f":88 838 {*fop_sf_comm}
     (nil))
(insn 243 241 244 18 (set (reg:SI 0 ax [466])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":88 86 {*movsi_internal}
     (nil))
(insn 244 243 245 18 (set (reg:DI 0 ax [orig:169 _83 ] [169])
        (sign_extend:DI (reg:SI 0 ax [466]))) "CALCWI.f":88 149 {*extendsidi2_rex64}
     (nil))
(insn 245 244 246 18 (parallel [
            (set (reg:DI 1 dx [orig:170 _84 ] [170])
                (mult:DI (reg:DI 0 ax [orig:169 _83 ] [169])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":88 349 {*muldi3_1}
     (nil))
(insn 246 245 247 18 (set (reg:SI 0 ax [467])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":88 86 {*movsi_internal}
     (nil))
(insn 247 246 248 18 (set (reg:DI 0 ax [orig:171 _85 ] [171])
        (sign_extend:DI (reg:SI 0 ax [467]))) "CALCWI.f":88 149 {*extendsidi2_rex64}
     (nil))
(insn 248 247 249 18 (parallel [
            (set (reg:DI 0 ax [orig:172 _86 ] [172])
                (plus:DI (reg:DI 0 ax [orig:171 _85 ] [171])
                    (reg:DI 1 dx [orig:170 _84 ] [170])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":88 222 {*adddi_1}
     (nil))
(insn 249 248 250 18 (parallel [
            (set (reg:DI 1 dx [orig:173 _87 ] [173])
                (plus:DI (reg:DI 0 ax [orig:172 _86 ] [172])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":88 222 {*adddi_1}
     (nil))
(insn 250 249 251 18 (set (reg:SF 21 xmm0 [orig:174 _88 ] [174])
        (mult:SF (reg:SF 21 xmm0 [orig:168 _82 ] [168])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -68 [0xffffffffffffffbc])) [2 qw+0 S4 A32]))) "CALCWI.f":88 838 {*fop_sf_comm}
     (nil))
(insn 251 250 252 18 (set (reg/f:DI 0 ax [468])
        (symbol_ref:DI ("qi.4115") [flags 0x202]  <var_decl 0x7f157d31ccf0 qi>)) "CALCWI.f":88 85 {*movdi_internal}
     (nil))
(insn 252 251 253 18 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:173 _87 ] [173])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [468])) [2 qi S4 A32])
        (reg:SF 21 xmm0 [orig:174 _88 ] [174])) "CALCWI.f":88 131 {*movsf_internal}
     (nil))
(insn 253 252 254 18 (set (reg:SI 0 ax [469])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":90 86 {*movsi_internal}
     (nil))
(insn 254 253 255 18 (set (reg:DI 0 ax [orig:175 _89 ] [175])
        (sign_extend:DI (reg:SI 0 ax [469]))) "CALCWI.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 255 254 256 18 (parallel [
            (set (reg:DI 1 dx [orig:176 _90 ] [176])
                (mult:DI (reg:DI 0 ax [orig:175 _89 ] [175])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":90 349 {*muldi3_1}
     (nil))
(insn 256 255 257 18 (set (reg:SI 0 ax [470])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":90 86 {*movsi_internal}
     (nil))
(insn 257 256 258 18 (set (reg:DI 0 ax [orig:177 _91 ] [177])
        (sign_extend:DI (reg:SI 0 ax [470]))) "CALCWI.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 258 257 259 18 (parallel [
            (set (reg:DI 0 ax [orig:178 _92 ] [178])
                (plus:DI (reg:DI 0 ax [orig:177 _91 ] [177])
                    (reg:DI 1 dx [orig:176 _90 ] [176])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":90 222 {*adddi_1}
     (nil))
(insn 259 258 260 18 (parallel [
            (set (reg:DI 1 dx [orig:179 _93 ] [179])
                (plus:DI (reg:DI 0 ax [orig:178 _92 ] [178])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":90 222 {*adddi_1}
     (nil))
(insn 260 259 261 18 (set (reg/f:DI 0 ax [471])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f158436dab0 cldwtr>)) "CALCWI.f":90 85 {*movdi_internal}
     (nil))
(insn 261 260 262 18 (parallel [
            (set (reg:DI 1 dx [472])
                (plus:DI (reg:DI 1 dx [orig:179 _93 ] [179])
                    (const_int 1125978 [0x112e5a])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":90 222 {*adddi_1}
     (nil))
(insn 262 261 263 18 (set (reg:SF 22 xmm1 [orig:180 _94 ] [180])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [472])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [471])) [2 cldwtr.u00 S4 A32])) "CALCWI.f":90 131 {*movsf_internal}
     (nil))
(insn 263 262 264 18 (set (reg:SI 1 dx [473])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":90 86 {*movsi_internal}
     (nil))
(insn 264 263 265 18 (set (reg:SI 0 ax [474])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 lml+0 S4 A32])) "CALCWI.f":90 86 {*movsi_internal}
     (nil))
(insn 265 264 266 18 (parallel [
            (set (reg:SI 0 ax [orig:181 _95 ] [181])
                (plus:SI (reg:SI 0 ax [474])
                    (reg:SI 1 dx [473])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":90 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -20 [0xffffffffffffffec])) [1 lml+0 S4 A32]))
        (nil)))
(insn 266 265 267 18 (set (reg:DI 0 ax [orig:182 _96 ] [182])
        (sign_extend:DI (reg:SI 0 ax [orig:181 _95 ] [181]))) "CALCWI.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 267 266 268 18 (parallel [
            (set (reg:DI 1 dx [orig:183 _97 ] [183])
                (plus:DI (reg:DI 0 ax [orig:182 _96 ] [182])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":90 222 {*adddi_1}
     (nil))
(insn 268 267 269 18 (set (reg/f:DI 0 ax [475])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f158436dab0 cldwtr>)) "CALCWI.f":90 85 {*movdi_internal}
     (nil))
(insn 269 268 270 18 (parallel [
            (set (reg:DI 1 dx [476])
                (plus:DI (reg:DI 1 dx [orig:183 _97 ] [183])
                    (const_int 1155609 [0x11a219])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":90 222 {*adddi_1}
     (nil))
(insn 270 269 271 18 (set (reg:SF 23 xmm2 [orig:184 _98 ] [184])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [476])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [475])) [2 cldwtr.ul S4 A32])) "CALCWI.f":90 131 {*movsf_internal}
     (nil))
(insn 271 270 272 18 (set (reg:SI 0 ax [477])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":90 86 {*movsi_internal}
     (nil))
(insn 272 271 273 18 (set (reg:DI 0 ax [orig:185 _99 ] [185])
        (sign_extend:DI (reg:SI 0 ax [477]))) "CALCWI.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 273 272 274 18 (parallel [
            (set (reg:DI 1 dx [orig:186 _100 ] [186])
                (mult:DI (reg:DI 0 ax [orig:185 _99 ] [185])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":90 349 {*muldi3_1}
     (nil))
(insn 274 273 275 18 (set (reg:SI 0 ax [478])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":90 86 {*movsi_internal}
     (nil))
(insn 275 274 276 18 (set (reg:DI 0 ax [orig:187 _101 ] [187])
        (sign_extend:DI (reg:SI 0 ax [478]))) "CALCWI.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 276 275 277 18 (parallel [
            (set (reg:DI 0 ax [orig:188 _102 ] [188])
                (plus:DI (reg:DI 0 ax [orig:187 _101 ] [187])
                    (reg:DI 1 dx [orig:186 _100 ] [186])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":90 222 {*adddi_1}
     (nil))
(insn 277 276 278 18 (parallel [
            (set (reg:DI 1 dx [orig:189 _103 ] [189])
                (plus:DI (reg:DI 0 ax [orig:188 _102 ] [188])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":90 222 {*adddi_1}
     (nil))
(insn 278 277 279 18 (set (reg/f:DI 0 ax [479])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f158436dab0 cldwtr>)) "CALCWI.f":90 85 {*movdi_internal}
     (nil))
(insn 279 278 280 18 (parallel [
            (set (reg:DI 1 dx [480])
                (plus:DI (reg:DI 1 dx [orig:189 _103 ] [189])
                    (const_int 1125978 [0x112e5a])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":90 222 {*adddi_1}
     (nil))
(insn 280 279 281 18 (set (reg:SF 24 xmm3 [orig:190 _104 ] [190])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [480])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [479])) [2 cldwtr.u00 S4 A32])) "CALCWI.f":90 131 {*movsf_internal}
     (nil))
(insn 281 280 282 18 (set (reg:SF 21 xmm0 [481])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALCWI.f":90 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.49999988079071044921875e-1 [0x0.f33333p+0])
        (nil)))
(insn 282 281 284 18 (set (reg:SF 21 xmm0 [orig:191 _105 ] [191])
        (minus:SF (reg:SF 21 xmm0 [481])
            (reg:SF 24 xmm3 [orig:190 _104 ] [190]))) "CALCWI.f":90 841 {*fop_sf_1}
     (nil))
(insn 284 282 285 18 (set (reg:SF 21 xmm0 [orig:193 _107 ] [193])
        (mult:SF (reg:SF 21 xmm0 [orig:192 _106 ] [192])
            (reg:SF 23 xmm2 [orig:184 _98 ] [184]))) "CALCWI.f":90 838 {*fop_sf_comm}
     (nil))
(insn 285 284 286 18 (set (reg:SF 21 xmm0 [orig:194 _108 ] [194])
        (mult:SF (reg:SF 21 xmm0 [orig:193 _107 ] [193])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -72 [0xffffffffffffffb8])) [2 utim+0 S4 A32]))) "CALCWI.f":90 838 {*fop_sf_comm}
     (nil))
(insn 286 285 287 18 (set (reg:SF 21 xmm0 [482])
        (plus:SF (reg:SF 21 xmm0 [orig:194 _108 ] [194])
            (reg:SF 22 xmm1 [orig:180 _94 ] [180]))) "CALCWI.f":90 838 {*fop_sf_comm}
     (nil))
(insn 287 286 288 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [2 u00kl+0 S4 A32])
        (reg:SF 21 xmm0 [482])) "CALCWI.f":90 131 {*movsf_internal}
     (nil))
(insn 288 287 289 18 (set (reg:SF 21 xmm0 [483])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALCWI.f":91 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -1.5e+1 [-0x0.fp+4])
        (nil)))
(insn 289 288 290 18 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [483])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 tmt0+0 S4 A32]))) "CALCWI.f":91 53 {*cmpisf}
     (nil))
(jump_insn 290 289 294 18 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 355)
            (pc))) "CALCWI.f":91 682 {*jcc}
     (nil)
 -> 355)
;;  succ:       19 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 195 196 197 198 199 200 201 484 485 486 487 488 489 490
(note 294 290 295 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 295 294 296 19 (set (reg:SI 0 ax [484])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":92 86 {*movsi_internal}
     (nil))
(insn 296 295 297 19 (set (reg:DI 0 ax [orig:195 _109 ] [195])
        (sign_extend:DI (reg:SI 0 ax [484]))) "CALCWI.f":92 149 {*extendsidi2_rex64}
     (nil))
(insn 297 296 298 19 (parallel [
            (set (reg:DI 1 dx [orig:196 _110 ] [196])
                (mult:DI (reg:DI 0 ax [orig:195 _109 ] [195])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":92 349 {*muldi3_1}
     (nil))
(insn 298 297 299 19 (set (reg:SI 0 ax [485])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":92 86 {*movsi_internal}
     (nil))
(insn 299 298 300 19 (set (reg:DI 0 ax [orig:197 _111 ] [197])
        (sign_extend:DI (reg:SI 0 ax [485]))) "CALCWI.f":92 149 {*extendsidi2_rex64}
     (nil))
(insn 300 299 301 19 (parallel [
            (set (reg:DI 0 ax [orig:198 _112 ] [198])
                (plus:DI (reg:DI 0 ax [orig:197 _111 ] [197])
                    (reg:DI 1 dx [orig:196 _110 ] [196])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":92 222 {*adddi_1}
     (nil))
(insn 301 300 302 19 (parallel [
            (set (reg:DI 1 dx [orig:199 _113 ] [199])
                (plus:DI (reg:DI 0 ax [orig:198 _112 ] [198])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":92 222 {*adddi_1}
     (nil))
(insn 302 301 303 19 (set (reg/f:DI 0 ax [486])
        (symbol_ref:DI ("qi.4115") [flags 0x202]  <var_decl 0x7f157d31ccf0 qi>)) "CALCWI.f":92 85 {*movdi_internal}
     (nil))
(insn 303 302 819 19 (set (reg:SF 21 xmm0 [orig:200 _114 ] [200])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:199 _113 ] [199])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [486])) [2 qi S4 A32])) "CALCWI.f":92 131 {*movsf_internal}
     (nil))
(insn 819 303 304 19 (set (reg:SF 22 xmm1 [orig:200 _114 ] [200])
        (reg:SF 21 xmm0 [orig:200 _114 ] [200])) "CALCWI.f":92 131 {*movsf_internal}
     (nil))
(insn 304 819 305 19 (set (reg:SF 22 xmm1 [orig:200 _114 ] [200])
        (mult:SF (reg:SF 22 xmm1 [orig:200 _114 ] [200])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [2 u00kl+0 S4 A32]))) "CALCWI.f":92 838 {*fop_sf_comm}
     (nil))
(insn 305 304 306 19 (set (reg:SF 21 xmm0 [488])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 qkl+0 S4 A32])) "CALCWI.f":92 131 {*movsf_internal}
     (nil))
(insn 306 305 307 19 (set (reg:SF 21 xmm0 [487])
        (minus:SF (reg:SF 21 xmm0 [488])
            (reg:SF 22 xmm1 [orig:201 _115 ] [201]))) "CALCWI.f":92 841 {*fop_sf_1}
     (nil))
(insn 307 306 308 19 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [2 fiq+0 S4 A32])
        (reg:SF 21 xmm0 [487])) "CALCWI.f":92 131 {*movsf_internal}
     (nil))
(insn 308 307 309 19 (set (reg:SF 21 xmm0 [489])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [2 fiq+0 S4 A32])) "CALCWI.f":93 131 {*movsf_internal}
     (nil))
(insn 309 308 310 19 (set (reg:SF 22 xmm1 [490])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALCWI.f":93 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 310 309 311 19 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [489])
            (reg:SF 22 xmm1 [490]))) "CALCWI.f":93 53 {*cmpisf}
     (nil))
(jump_insn 311 310 312 19 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 319)
            (pc))) "CALCWI.f":93 682 {*jcc}
     (nil)
 -> 319)
;;  succ:       21
;;              20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 491
(note 312 311 313 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 313 312 314 20 (set (reg:SF 21 xmm0 [491])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 cwmkl+0 S4 A32])) "CALCWI.f":93 131 {*movsf_internal}
     (nil))
(insn 314 313 315 20 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [491])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 climit+0 S4 A32]))) "CALCWI.f":93 53 {*cmpisf}
     (nil))
(jump_insn 315 314 319 20 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 764)
            (pc))) "CALCWI.f":93 682 {*jcc}
     (nil)
 -> 764)
;;  succ:       21 (FALLTHRU)
;;              22
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       19
;;              20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 202 203 204 205 206 207 208 209 492 493 494 495 496
(code_label 319 315 320 21 13 (nil) [1 uses])
(note 320 319 321 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 321 320 322 21 (set (reg:SI 0 ax [492])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":94 86 {*movsi_internal}
     (nil))
(insn 322 321 323 21 (set (reg:DI 0 ax [orig:202 _116 ] [202])
        (sign_extend:DI (reg:SI 0 ax [492]))) "CALCWI.f":94 149 {*extendsidi2_rex64}
     (nil))
(insn 323 322 324 21 (parallel [
            (set (reg:DI 1 dx [orig:203 _117 ] [203])
                (mult:DI (reg:DI 0 ax [orig:202 _116 ] [202])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":94 349 {*muldi3_1}
     (nil))
(insn 324 323 325 21 (set (reg:SI 0 ax [493])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":94 86 {*movsi_internal}
     (nil))
(insn 325 324 326 21 (set (reg:DI 0 ax [orig:204 _118 ] [204])
        (sign_extend:DI (reg:SI 0 ax [493]))) "CALCWI.f":94 149 {*extendsidi2_rex64}
     (nil))
(insn 326 325 327 21 (parallel [
            (set (reg:DI 0 ax [orig:205 _119 ] [205])
                (mult:DI (reg:DI 0 ax [orig:204 _118 ] [204])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":94 349 {*muldi3_1}
     (nil))
(insn 327 326 328 21 (parallel [
            (set (reg:DI 1 dx [orig:206 _120 ] [206])
                (plus:DI (reg:DI 1 dx [orig:203 _117 ] [203])
                    (reg:DI 0 ax [orig:205 _119 ] [205])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":94 222 {*adddi_1}
     (nil))
(insn 328 327 329 21 (set (reg:SI 0 ax [494])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":94 86 {*movsi_internal}
     (nil))
(insn 329 328 330 21 (set (reg:DI 0 ax [orig:207 _121 ] [207])
        (sign_extend:DI (reg:SI 0 ax [494]))) "CALCWI.f":94 149 {*extendsidi2_rex64}
     (nil))
(insn 330 329 331 21 (parallel [
            (set (reg:DI 0 ax [orig:208 _122 ] [208])
                (plus:DI (reg:DI 0 ax [orig:207 _121 ] [207])
                    (reg:DI 1 dx [orig:206 _120 ] [206])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":94 222 {*adddi_1}
     (nil))
(insn 331 330 332 21 (parallel [
            (set (reg:DI 1 dx [orig:209 _123 ] [209])
                (plus:DI (reg:DI 0 ax [orig:208 _122 ] [208])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":94 222 {*adddi_1}
     (nil))
(insn 332 331 333 21 (set (reg/f:DI 0 ax [495])
        (symbol_ref:DI ("iw.4109") [flags 0x202]  <var_decl 0x7f157d31ca20 iw>)) "CALCWI.f":94 85 {*movdi_internal}
     (nil))
(insn 333 332 334 21 (set (reg:SF 21 xmm0 [496])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALCWI.f":94 131 {*movsf_internal}
     (nil))
(insn 334 333 765 21 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:209 _123 ] [209])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [495])) [2 iw S4 A32])
        (reg:SF 21 xmm0 [496])) "CALCWI.f":94 131 {*movsf_internal}
     (nil))
(jump_insn 765 334 766 21 (set (pc)
        (label_ref 355)) "CALCWI.f":94 683 {jump}
     (nil)
 -> 355)
;;  succ:       23 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

(barrier 766 765 764)
;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       20
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 210 211 212 213 214 215 216 217 497 498 499 500 501
(code_label 764 766 338 22 44 (nil) [1 uses])
(note 338 764 339 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 339 338 340 22 (set (reg:SI 0 ax [497])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":96 86 {*movsi_internal}
     (nil))
(insn 340 339 341 22 (set (reg:DI 0 ax [orig:210 _124 ] [210])
        (sign_extend:DI (reg:SI 0 ax [497]))) "CALCWI.f":96 149 {*extendsidi2_rex64}
     (nil))
(insn 341 340 342 22 (parallel [
            (set (reg:DI 1 dx [orig:211 _125 ] [211])
                (mult:DI (reg:DI 0 ax [orig:210 _124 ] [210])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":96 349 {*muldi3_1}
     (nil))
(insn 342 341 343 22 (set (reg:SI 0 ax [498])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":96 86 {*movsi_internal}
     (nil))
(insn 343 342 344 22 (set (reg:DI 0 ax [orig:212 _126 ] [212])
        (sign_extend:DI (reg:SI 0 ax [498]))) "CALCWI.f":96 149 {*extendsidi2_rex64}
     (nil))
(insn 344 343 345 22 (parallel [
            (set (reg:DI 0 ax [orig:213 _127 ] [213])
                (mult:DI (reg:DI 0 ax [orig:212 _126 ] [212])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":96 349 {*muldi3_1}
     (nil))
(insn 345 344 346 22 (parallel [
            (set (reg:DI 1 dx [orig:214 _128 ] [214])
                (plus:DI (reg:DI 1 dx [orig:211 _125 ] [211])
                    (reg:DI 0 ax [orig:213 _127 ] [213])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":96 222 {*adddi_1}
     (nil))
(insn 346 345 347 22 (set (reg:SI 0 ax [499])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":96 86 {*movsi_internal}
     (nil))
(insn 347 346 348 22 (set (reg:DI 0 ax [orig:215 _129 ] [215])
        (sign_extend:DI (reg:SI 0 ax [499]))) "CALCWI.f":96 149 {*extendsidi2_rex64}
     (nil))
(insn 348 347 349 22 (parallel [
            (set (reg:DI 0 ax [orig:216 _130 ] [216])
                (plus:DI (reg:DI 0 ax [orig:215 _129 ] [215])
                    (reg:DI 1 dx [orig:214 _128 ] [214])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":96 222 {*adddi_1}
     (nil))
(insn 349 348 350 22 (parallel [
            (set (reg:DI 1 dx [orig:217 _131 ] [217])
                (plus:DI (reg:DI 0 ax [orig:216 _130 ] [216])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":96 222 {*adddi_1}
     (nil))
(insn 350 349 351 22 (set (reg/f:DI 0 ax [500])
        (symbol_ref:DI ("iw.4109") [flags 0x202]  <var_decl 0x7f157d31ca20 iw>)) "CALCWI.f":96 85 {*movdi_internal}
     (nil))
(insn 351 350 352 22 (set (reg:SF 21 xmm0 [501])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALCWI.f":96 131 {*movsf_internal}
     (nil))
(insn 352 351 355 22 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:217 _131 ] [217])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [500])) [2 iw S4 A32])
        (reg:SF 21 xmm0 [501])) "CALCWI.f":96 131 {*movsf_internal}
     (nil))
;;  succ:       23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;;              18
;;              21 [always] 
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 502 503
(code_label 355 352 356 23 11 (nil) [2 uses])
(note 356 355 357 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 357 356 358 23 (set (reg:SF 21 xmm0 [502])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 tmt0+0 S4 A32])) "CALCWI.f":99 131 {*movsf_internal}
     (nil))
(insn 358 357 359 23 (set (reg:SF 22 xmm1 [503])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALCWI.f":99 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 359 358 360 23 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [502])
            (reg:SF 22 xmm1 [503]))) "CALCWI.f":99 53 {*cmpisf}
     (nil))
(jump_insn 360 359 364 23 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 379)
            (pc))) "CALCWI.f":99 682 {*jcc}
     (nil)
 -> 379)
;;  succ:       24 (FALLTHRU)
;;              25
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 218 219 220 221 222 223 224 225 504 505 506 507 508
(note 364 360 365 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 365 364 366 24 (set (reg:SI 0 ax [504])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":99 86 {*movsi_internal}
     (nil))
(insn 366 365 367 24 (set (reg:DI 0 ax [orig:218 _132 ] [218])
        (sign_extend:DI (reg:SI 0 ax [504]))) "CALCWI.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 367 366 368 24 (parallel [
            (set (reg:DI 1 dx [orig:219 _133 ] [219])
                (mult:DI (reg:DI 0 ax [orig:218 _132 ] [218])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":99 349 {*muldi3_1}
     (nil))
(insn 368 367 369 24 (set (reg:SI 0 ax [505])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":99 86 {*movsi_internal}
     (nil))
(insn 369 368 370 24 (set (reg:DI 0 ax [orig:220 _134 ] [220])
        (sign_extend:DI (reg:SI 0 ax [505]))) "CALCWI.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 370 369 371 24 (parallel [
            (set (reg:DI 0 ax [orig:221 _135 ] [221])
                (mult:DI (reg:DI 0 ax [orig:220 _134 ] [220])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":99 349 {*muldi3_1}
     (nil))
(insn 371 370 372 24 (parallel [
            (set (reg:DI 1 dx [orig:222 _136 ] [222])
                (plus:DI (reg:DI 1 dx [orig:219 _133 ] [219])
                    (reg:DI 0 ax [orig:221 _135 ] [221])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":99 222 {*adddi_1}
     (nil))
(insn 372 371 373 24 (set (reg:SI 0 ax [506])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":99 86 {*movsi_internal}
     (nil))
(insn 373 372 374 24 (set (reg:DI 0 ax [orig:223 _137 ] [223])
        (sign_extend:DI (reg:SI 0 ax [506]))) "CALCWI.f":99 149 {*extendsidi2_rex64}
     (nil))
(insn 374 373 375 24 (parallel [
            (set (reg:DI 0 ax [orig:224 _138 ] [224])
                (plus:DI (reg:DI 0 ax [orig:223 _137 ] [223])
                    (reg:DI 1 dx [orig:222 _136 ] [222])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":99 222 {*adddi_1}
     (nil))
(insn 375 374 376 24 (parallel [
            (set (reg:DI 1 dx [orig:225 _139 ] [225])
                (plus:DI (reg:DI 0 ax [orig:224 _138 ] [224])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":99 222 {*adddi_1}
     (nil))
(insn 376 375 377 24 (set (reg/f:DI 0 ax [507])
        (symbol_ref:DI ("iw.4109") [flags 0x202]  <var_decl 0x7f157d31ca20 iw>)) "CALCWI.f":99 85 {*movdi_internal}
     (nil))
(insn 377 376 378 24 (set (reg:SF 21 xmm0 [508])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALCWI.f":99 131 {*movsf_internal}
     (nil))
(insn 378 377 379 24 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:225 _139 ] [225])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [507])) [2 iw S4 A32])
        (reg:SF 21 xmm0 [508])) "CALCWI.f":99 131 {*movsf_internal}
     (nil))
;;  succ:       25 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;;              23
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 509
(code_label 379 378 380 25 17 (nil) [1 uses])
(note 380 379 381 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 381 380 382 25 (set (reg:SF 21 xmm0 [509])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALCWI.f":100 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 382 381 383 25 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [509])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [2 tmt0+0 S4 A32]))) "CALCWI.f":100 53 {*cmpisf}
     (nil))
(jump_insn 383 382 387 25 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 454)
            (pc))) "CALCWI.f":100 682 {*jcc}
     (nil)
 -> 454)
;;  succ:       26 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 510
(note 387 383 388 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 388 387 389 26 (set (reg:SF 21 xmm0 [510])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 tmt0+0 S4 A32])) "CALCWI.f":100 131 {*movsf_internal}
     (nil))
(insn 389 388 390 26 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [510])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32]))) "CALCWI.f":100 53 {*cmpisf}
     (nil))
(jump_insn 390 389 394 26 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 454)
            (pc))) "CALCWI.f":100 682 {*jcc}
     (nil)
 -> 454)
;;  succ:       27 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 511 512 513 514 515 516 517 518 519 520
(note 394 390 395 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 395 394 396 27 (set (reg:SI 0 ax [511])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":101 86 {*movsi_internal}
     (nil))
(insn 396 395 397 27 (set (reg:DI 0 ax [orig:226 _140 ] [226])
        (sign_extend:DI (reg:SI 0 ax [511]))) "CALCWI.f":101 149 {*extendsidi2_rex64}
     (nil))
(insn 397 396 398 27 (parallel [
            (set (reg:DI 1 dx [orig:227 _141 ] [227])
                (mult:DI (reg:DI 0 ax [orig:226 _140 ] [226])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":101 349 {*muldi3_1}
     (nil))
(insn 398 397 399 27 (set (reg:SI 0 ax [512])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":101 86 {*movsi_internal}
     (nil))
(insn 399 398 400 27 (set (reg:DI 0 ax [orig:228 _142 ] [228])
        (sign_extend:DI (reg:SI 0 ax [512]))) "CALCWI.f":101 149 {*extendsidi2_rex64}
     (nil))
(insn 400 399 401 27 (parallel [
            (set (reg:DI 0 ax [orig:229 _143 ] [229])
                (mult:DI (reg:DI 0 ax [orig:228 _142 ] [228])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":101 349 {*muldi3_1}
     (nil))
(insn 401 400 402 27 (parallel [
            (set (reg:DI 1 dx [orig:230 _144 ] [230])
                (plus:DI (reg:DI 1 dx [orig:227 _141 ] [227])
                    (reg:DI 0 ax [orig:229 _143 ] [229])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":101 222 {*adddi_1}
     (nil))
(insn 402 401 403 27 (set (reg:SI 0 ax [513])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":101 86 {*movsi_internal}
     (nil))
(insn 403 402 404 27 (set (reg:DI 0 ax [orig:231 _145 ] [231])
        (sign_extend:DI (reg:SI 0 ax [513]))) "CALCWI.f":101 149 {*extendsidi2_rex64}
     (nil))
(insn 404 403 405 27 (parallel [
            (set (reg:DI 0 ax [orig:232 _146 ] [232])
                (plus:DI (reg:DI 0 ax [orig:231 _145 ] [231])
                    (reg:DI 1 dx [orig:230 _144 ] [230])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":101 222 {*adddi_1}
     (nil))
(insn 405 404 406 27 (parallel [
            (set (reg:DI 1 dx [orig:233 _147 ] [233])
                (plus:DI (reg:DI 0 ax [orig:232 _146 ] [232])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":101 222 {*adddi_1}
     (nil))
(insn 406 405 407 27 (set (reg/f:DI 0 ax [514])
        (symbol_ref:DI ("iw.4109") [flags 0x202]  <var_decl 0x7f157d31ca20 iw>)) "CALCWI.f":101 85 {*movdi_internal}
     (nil))
(insn 407 406 408 27 (set (reg:SF 21 xmm0 [515])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALCWI.f":101 131 {*movsf_internal}
     (nil))
(insn 408 407 409 27 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:233 _147 ] [233])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [514])) [2 iw S4 A32])
        (reg:SF 21 xmm0 [515])) "CALCWI.f":101 131 {*movsf_internal}
     (nil))
(insn 409 408 410 27 (set (reg:SI 0 ax [516])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":102 86 {*movsi_internal}
     (nil))
(insn 410 409 411 27 (parallel [
            (set (reg:SI 0 ax [orig:234 _148 ] [234])
                (plus:SI (reg:SI 0 ax [516])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":102 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 411 410 412 27 (set (reg:DI 0 ax [orig:235 _149 ] [235])
        (sign_extend:DI (reg:SI 0 ax [orig:234 _148 ] [234]))) "CALCWI.f":102 149 {*extendsidi2_rex64}
     (nil))
(insn 412 411 413 27 (parallel [
            (set (reg:DI 1 dx [orig:236 _150 ] [236])
                (mult:DI (reg:DI 0 ax [orig:235 _149 ] [235])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":102 349 {*muldi3_1}
     (nil))
(insn 413 412 414 27 (set (reg:SI 0 ax [517])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":102 86 {*movsi_internal}
     (nil))
(insn 414 413 415 27 (set (reg:DI 0 ax [orig:237 _151 ] [237])
        (sign_extend:DI (reg:SI 0 ax [517]))) "CALCWI.f":102 149 {*extendsidi2_rex64}
     (nil))
(insn 415 414 416 27 (parallel [
            (set (reg:DI 0 ax [orig:238 _152 ] [238])
                (mult:DI (reg:DI 0 ax [orig:237 _151 ] [237])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":102 349 {*muldi3_1}
     (nil))
(insn 416 415 417 27 (parallel [
            (set (reg:DI 1 dx [orig:239 _153 ] [239])
                (plus:DI (reg:DI 1 dx [orig:236 _150 ] [236])
                    (reg:DI 0 ax [orig:238 _152 ] [238])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":102 222 {*adddi_1}
     (nil))
(insn 417 416 418 27 (set (reg:SI 0 ax [518])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":102 86 {*movsi_internal}
     (nil))
(insn 418 417 419 27 (set (reg:DI 0 ax [orig:240 _154 ] [240])
        (sign_extend:DI (reg:SI 0 ax [518]))) "CALCWI.f":102 149 {*extendsidi2_rex64}
     (nil))
(insn 419 418 420 27 (parallel [
            (set (reg:DI 0 ax [orig:241 _155 ] [241])
                (plus:DI (reg:DI 0 ax [orig:240 _154 ] [240])
                    (reg:DI 1 dx [orig:239 _153 ] [239])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":102 222 {*adddi_1}
     (nil))
(insn 420 419 421 27 (parallel [
            (set (reg:DI 1 dx [orig:242 _156 ] [242])
                (plus:DI (reg:DI 0 ax [orig:241 _155 ] [241])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":102 222 {*adddi_1}
     (nil))
(insn 421 420 422 27 (set (reg/f:DI 0 ax [519])
        (symbol_ref:DI ("iw.4109") [flags 0x202]  <var_decl 0x7f157d31ca20 iw>)) "CALCWI.f":102 85 {*movdi_internal}
     (nil))
(insn 422 421 423 27 (set (reg:SF 21 xmm0 [orig:243 _157 ] [243])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:242 _156 ] [242])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [519])) [2 iw S4 A32])) "CALCWI.f":102 131 {*movsf_internal}
     (nil))
(insn 423 422 424 27 (set (reg:SF 22 xmm1 [520])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALCWI.f":102 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 424 423 425 27 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:243 _157 ] [243])
                    (reg:SF 22 xmm1 [520]))
            ] UNSPEC_NOTRAP)) "CALCWI.f":102 54 {*cmpiusf}
     (nil))
(jump_insn 425 424 748 27 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 454)
            (pc))) "CALCWI.f":102 682 {*jcc}
     (nil)
 -> 454)
;;  succ:       31
;;              28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 243 382

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 243 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 243
;; lr  def 	 17 [flags] 521
(note 748 425 426 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 426 748 427 28 (set (reg:SF 22 xmm1 [521])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALCWI.f":102 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 427 426 428 28 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:243 _157 ] [243])
                    (reg:SF 22 xmm1 [521]))
            ] UNSPEC_NOTRAP)) "CALCWI.f":102 54 {*cmpiusf}
     (nil))
(jump_insn 428 427 432 28 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 454)
            (pc))) "CALCWI.f":102 682 {*jcc}
     (nil)
 -> 454)
;;  succ:       29 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 522
(note 432 428 433 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 433 432 434 29 (set (reg:SF 21 xmm0 [522])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [2 cwmkl+0 S4 A32])) "CALCWI.f":102 131 {*movsf_internal}
     (nil))
(insn 434 433 435 29 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [522])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 climit+0 S4 A32]))) "CALCWI.f":102 53 {*cmpisf}
     (nil))
(jump_insn 435 434 439 29 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 454)
            (pc))) "CALCWI.f":102 682 {*jcc}
     (nil)
 -> 454)
;;  succ:       30 (FALLTHRU)
;;              31
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 244 245 246 247 248 249 250 251 523 524 525 526 527
(note 439 435 440 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 440 439 441 30 (set (reg:SI 0 ax [523])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":102 86 {*movsi_internal}
     (nil))
(insn 441 440 442 30 (set (reg:DI 0 ax [orig:244 _158 ] [244])
        (sign_extend:DI (reg:SI 0 ax [523]))) "CALCWI.f":102 149 {*extendsidi2_rex64}
     (nil))
(insn 442 441 443 30 (parallel [
            (set (reg:DI 1 dx [orig:245 _159 ] [245])
                (mult:DI (reg:DI 0 ax [orig:244 _158 ] [244])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":102 349 {*muldi3_1}
     (nil))
(insn 443 442 444 30 (set (reg:SI 0 ax [524])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":102 86 {*movsi_internal}
     (nil))
(insn 444 443 445 30 (set (reg:DI 0 ax [orig:246 _160 ] [246])
        (sign_extend:DI (reg:SI 0 ax [524]))) "CALCWI.f":102 149 {*extendsidi2_rex64}
     (nil))
(insn 445 444 446 30 (parallel [
            (set (reg:DI 0 ax [orig:247 _161 ] [247])
                (mult:DI (reg:DI 0 ax [orig:246 _160 ] [246])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":102 349 {*muldi3_1}
     (nil))
(insn 446 445 447 30 (parallel [
            (set (reg:DI 1 dx [orig:248 _162 ] [248])
                (plus:DI (reg:DI 1 dx [orig:245 _159 ] [245])
                    (reg:DI 0 ax [orig:247 _161 ] [247])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":102 222 {*adddi_1}
     (nil))
(insn 447 446 448 30 (set (reg:SI 0 ax [525])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":102 86 {*movsi_internal}
     (nil))
(insn 448 447 449 30 (set (reg:DI 0 ax [orig:249 _163 ] [249])
        (sign_extend:DI (reg:SI 0 ax [525]))) "CALCWI.f":102 149 {*extendsidi2_rex64}
     (nil))
(insn 449 448 450 30 (parallel [
            (set (reg:DI 0 ax [orig:250 _164 ] [250])
                (plus:DI (reg:DI 0 ax [orig:249 _163 ] [249])
                    (reg:DI 1 dx [orig:248 _162 ] [248])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":102 222 {*adddi_1}
     (nil))
(insn 450 449 451 30 (parallel [
            (set (reg:DI 1 dx [orig:251 _165 ] [251])
                (plus:DI (reg:DI 0 ax [orig:250 _164 ] [250])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":102 222 {*adddi_1}
     (nil))
(insn 451 450 452 30 (set (reg/f:DI 0 ax [526])
        (symbol_ref:DI ("iw.4109") [flags 0x202]  <var_decl 0x7f157d31ca20 iw>)) "CALCWI.f":102 85 {*movdi_internal}
     (nil))
(insn 452 451 453 30 (set (reg:SF 21 xmm0 [527])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALCWI.f":102 131 {*movsf_internal}
     (nil))
(insn 453 452 454 30 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:251 _165 ] [251])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [526])) [2 iw S4 A32])
        (reg:SF 21 xmm0 [527])) "CALCWI.f":102 131 {*movsf_internal}
     (nil))
;;  succ:       31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 54, flags: (RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;;              25
;;              26
;;              27
;;              28
;;              29
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 454 453 455 31 19 (nil) [5 uses])
(note 455 454 456 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 456 455 767 31 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":78 221 {*addsi_1}
     (nil))
(jump_insn 767 456 768 31 (set (pc)
        (label_ref 457)) "CALCWI.f":78 683 {jump}
     (nil)
 -> 457)
;;  succ:       13 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

(barrier 768 767 796)
;; basic block 54, loop depth 0, maybe hot
;;  prev block 31, next block 32, flags: (RTL, MODIFIED)
;;  pred:       13
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 796 768 795 54 49 (nil) [1 uses])
(note 795 796 797 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 797 795 460 54 (const_int 0 [0]) "CALCWI.f":100 718 {nop}
     (nil))
;;  succ:       32 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

;; basic block 32, loop depth 0, maybe hot
;;  prev block 54, next block 53, flags: (RTL, MODIFIED)
;;  pred:       54 [always]  (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 460 797 461 32 8 (nil) [0 uses])
(note 461 460 462 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 462 461 769 32 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":77 221 {*addsi_1}
     (nil))
(jump_insn 769 462 770 32 (set (pc)
        (label_ref 463)) "CALCWI.f":77 683 {jump}
     (nil)
 -> 463)
;;  succ:       11 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 382

(barrier 770 769 793)
;; basic block 53, loop depth 0, maybe hot
;;  prev block 32, next block 33, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 793 770 792 53 48 (nil) [1 uses])
(note 792 793 794 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 794 792 466 53 (const_int 0 [0]) "CALCWI.f":78 718 {nop}
     (nil))
;;  succ:       33 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 33, loop depth 0, maybe hot
;;  prev block 53, next block 52, flags: (RTL, MODIFIED)
;;  pred:       53 [always]  (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 466 794 467 33 7 (nil) [0 uses])
(note 467 466 468 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 468 467 771 33 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":76 221 {*addsi_1}
     (nil))
(jump_insn 771 468 772 33 (set (pc)
        (label_ref 469)) "CALCWI.f":76 683 {jump}
     (nil)
 -> 469)
;;  succ:       9 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 772 771 790)
;; basic block 52, loop depth 0, maybe hot
;;  prev block 33, next block 34, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 790 772 789 52 47 (nil) [1 uses])
(note 789 790 791 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 791 789 472 52 (const_int 0 [0]) "CALCWI.f":106 718 {nop}
     (nil))
;;  succ:       34 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 34, loop depth 0, maybe hot
;;  prev block 52, next block 35, flags: (RTL, MODIFIED)
;;  pred:       52 [always]  (FALLTHRU)
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 385 386
(code_label 472 791 473 34 6 (nil) [0 uses])
(note 473 472 474 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 474 473 475 34 (set (reg:SI 1 dx [orig:385 _358 ] [385])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f157d316990 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALCWI.f":109 86 {*movsi_internal}
     (nil))
(insn 475 474 476 34 (set (reg:SI 0 ax [orig:386 _359 ] [386])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f157d316990 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALCWI.f":109 86 {*movsi_internal}
     (nil))
(insn 476 475 519 34 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:385 _358 ] [385])) "CALCWI.f":109 86 {*movsi_internal}
     (nil))
;;  succ:       35 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 386

;; basic block 35, loop depth 0, maybe hot
;;  prev block 34, next block 36, flags: (RTL, MODIFIED)
;;  pred:       34 (FALLTHRU)
;;              39 [always] 
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 386
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 386
;; lr  def 	 17 [flags] 387 528
(code_label 519 476 477 35 30 (nil) [1 uses])
(note 477 519 478 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 478 477 479 35 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:386 _359 ] [386]))) "CALCWI.f":109 11 {*cmpsi_1}
     (nil))
(insn 479 478 480 35 (set (reg:QI 1 dx [528])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCWI.f":109 678 {*setcc_qi}
     (nil))
(insn 480 479 481 35 (set (reg:SI 1 dx [orig:387 _361 ] [387])
        (zero_extend:SI (reg:QI 1 dx [528]))) "CALCWI.f":109 140 {*zero_extendqisi2}
     (nil))
(insn 481 480 482 35 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:387 _361 ] [387])
            (const_int 0 [0]))) "CALCWI.f":109 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 482 481 483 35 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 799)
            (pc))) "CALCWI.f":109 682 {*jcc}
     (nil)
 -> 799)
;;  succ:       55
;;              36 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 386

;; basic block 36, loop depth 0, maybe hot
;;  prev block 35, next block 37, flags: (RTL, MODIFIED)
;;  pred:       35 (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 386
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 483 482 484 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 484 483 513 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALCWI.f":110 86 {*movsi_internal}
     (nil))
;;  succ:       37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 386

;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;;              38 [always] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 386
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 388 529
(code_label 513 484 485 37 29 (nil) [1 uses])
(note 485 513 486 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 486 485 487 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALCWI.f":110 11 {*cmpsi_1}
     (nil))
(insn 487 486 488 37 (set (reg:QI 1 dx [529])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCWI.f":110 678 {*setcc_qi}
     (nil))
(insn 488 487 489 37 (set (reg:SI 1 dx [orig:388 _363 ] [388])
        (zero_extend:SI (reg:QI 1 dx [529]))) "CALCWI.f":110 140 {*zero_extendqisi2}
     (nil))
(insn 489 488 490 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:388 _363 ] [388])
            (const_int 0 [0]))) "CALCWI.f":110 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 490 489 491 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 802)
            (pc))) "CALCWI.f":110 682 {*jcc}
     (nil)
 -> 802)
;;  succ:       56
;;              38 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 386

;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 56, flags: (RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 386
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 252 253 254 255 256 257 258 259 260 261 530 531 532 533 534 535 536 537
(note 491 490 492 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 492 491 493 38 (set (reg:SI 1 dx [530])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":111 86 {*movsi_internal}
     (nil))
(insn 493 492 494 38 (set (reg:DI 1 dx [orig:252 _166 ] [252])
        (sign_extend:DI (reg:SI 1 dx [530]))) "CALCWI.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 494 493 495 38 (parallel [
            (set (reg:DI 2 cx [orig:253 _167 ] [253])
                (mult:DI (reg:DI 1 dx [orig:252 _166 ] [252])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":111 349 {*muldi3_1}
     (nil))
(insn 495 494 496 38 (set (reg:SI 1 dx [531])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":111 86 {*movsi_internal}
     (nil))
(insn 496 495 497 38 (set (reg:DI 1 dx [orig:254 _168 ] [254])
        (sign_extend:DI (reg:SI 1 dx [531]))) "CALCWI.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 497 496 498 38 (parallel [
            (set (reg:DI 1 dx [orig:255 _169 ] [255])
                (plus:DI (reg:DI 1 dx [orig:254 _168 ] [254])
                    (reg:DI 2 cx [orig:253 _167 ] [253])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":111 222 {*adddi_1}
     (nil))
(insn 498 497 499 38 (parallel [
            (set (reg:DI 2 cx [orig:256 _170 ] [256])
                (plus:DI (reg:DI 1 dx [orig:255 _169 ] [255])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":111 222 {*adddi_1}
     (nil))
(insn 499 498 500 38 (set (reg/f:DI 1 dx [532])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 clw+0 S8 A64])) "CALCWI.f":111 85 {*movdi_internal}
     (nil))
(insn 500 499 501 38 (set (reg:SF 21 xmm0 [533])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALCWI.f":111 131 {*movsf_internal}
     (nil))
(insn 501 500 502 38 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:256 _170 ] [256])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [532])) [2 *clw_364(D) S4 A32])
        (reg:SF 21 xmm0 [533])) "CALCWI.f":111 131 {*movsf_internal}
     (nil))
(insn 502 501 503 38 (set (reg:SI 1 dx [534])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":112 86 {*movsi_internal}
     (nil))
(insn 503 502 504 38 (set (reg:DI 1 dx [orig:257 _171 ] [257])
        (sign_extend:DI (reg:SI 1 dx [534]))) "CALCWI.f":112 149 {*extendsidi2_rex64}
     (nil))
(insn 504 503 505 38 (parallel [
            (set (reg:DI 2 cx [orig:258 _172 ] [258])
                (mult:DI (reg:DI 1 dx [orig:257 _171 ] [257])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":112 349 {*muldi3_1}
     (nil))
(insn 505 504 506 38 (set (reg:SI 1 dx [535])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":112 86 {*movsi_internal}
     (nil))
(insn 506 505 507 38 (set (reg:DI 1 dx [orig:259 _173 ] [259])
        (sign_extend:DI (reg:SI 1 dx [535]))) "CALCWI.f":112 149 {*extendsidi2_rex64}
     (nil))
(insn 507 506 508 38 (parallel [
            (set (reg:DI 1 dx [orig:260 _174 ] [260])
                (plus:DI (reg:DI 1 dx [orig:259 _173 ] [259])
                    (reg:DI 2 cx [orig:258 _172 ] [258])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":112 222 {*adddi_1}
     (nil))
(insn 508 507 509 38 (parallel [
            (set (reg:DI 2 cx [orig:261 _175 ] [261])
                (plus:DI (reg:DI 1 dx [orig:260 _174 ] [260])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":112 222 {*adddi_1}
     (nil))
(insn 509 508 510 38 (set (reg/f:DI 1 dx [536])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 cli+0 S8 A64])) "CALCWI.f":112 85 {*movdi_internal}
     (nil))
(insn 510 509 511 38 (set (reg:SF 21 xmm0 [537])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALCWI.f":112 131 {*movsf_internal}
     (nil))
(insn 511 510 512 38 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:261 _175 ] [261])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [536])) [2 *cli_366(D) S4 A32])
        (reg:SF 21 xmm0 [537])) "CALCWI.f":112 131 {*movsf_internal}
     (nil))
(insn 512 511 773 38 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":110 221 {*addsi_1}
     (nil))
(jump_insn 773 512 774 38 (set (pc)
        (label_ref 513)) "CALCWI.f":110 683 {jump}
     (nil)
 -> 513)
;;  succ:       37 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 386

(barrier 774 773 802)
;; basic block 56, loop depth 0, maybe hot
;;  prev block 38, next block 39, flags: (RTL, MODIFIED)
;;  pred:       37
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 386
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 802 774 801 56 51 (nil) [1 uses])
(note 801 802 803 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 803 801 516 56 (const_int 0 [0]) "CALCWI.f":112 718 {nop}
     (nil))
;;  succ:       39 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 386

;; basic block 39, loop depth 0, maybe hot
;;  prev block 56, next block 55, flags: (RTL, MODIFIED)
;;  pred:       56 [always]  (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 386
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 516 803 517 39 28 (nil) [0 uses])
(note 517 516 518 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 518 517 775 39 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":109 221 {*addsi_1}
     (nil))
(jump_insn 775 518 776 39 (set (pc)
        (label_ref 519)) "CALCWI.f":109 683 {jump}
     (nil)
 -> 519)
;;  succ:       35 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 386

(barrier 776 775 799)
;; basic block 55, loop depth 0, maybe hot
;;  prev block 39, next block 40, flags: (RTL, MODIFIED)
;;  pred:       35
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 799 776 798 55 50 (nil) [1 uses])
(note 798 799 800 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 800 798 522 55 (const_int 0 [0]) "CALCWI.f":110 718 {nop}
     (nil))
;;  succ:       40 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 40, loop depth 0, maybe hot
;;  prev block 55, next block 41, flags: (RTL, MODIFIED)
;;  pred:       55 [always]  (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 522 800 523 40 27 (nil) [0 uses])
(note 523 522 524 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 524 523 729 40 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
        (const_int 1 [0x1])) "CALCWI.f":116 86 {*movsi_internal}
     (nil))
;;  succ:       41 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 42, flags: (RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;;              48 [always] 
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 389 538
(code_label 729 524 525 41 36 (nil) [1 uses])
(note 525 729 526 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 526 525 527 41 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
            (const_int 38 [0x26]))) "CALCWI.f":116 11 {*cmpsi_1}
     (nil))
(insn 527 526 528 41 (set (reg:QI 0 ax [538])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCWI.f":116 678 {*setcc_qi}
     (nil))
(insn 528 527 529 41 (set (reg:SI 0 ax [orig:389 _371 ] [389])
        (zero_extend:SI (reg:QI 0 ax [538]))) "CALCWI.f":116 140 {*zero_extendqisi2}
     (nil))
(insn 529 528 530 41 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:389 _371 ] [389])
            (const_int 0 [0]))) "CALCWI.f":116 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 530 529 531 41 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 805)
            (pc))) "CALCWI.f":116 682 {*jcc}
     (nil)
 -> 805)
;;  succ:       57
;;              42 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 390 391
(note 531 530 532 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 532 531 533 42 (set (reg:SI 1 dx [orig:390 _372 ] [390])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f157d316990 parallel>)
                    (const_int 16 [0x10]))) [1 parallel.jsta_m+0 S4 A128])) "CALCWI.f":119 86 {*movsi_internal}
     (nil))
(insn 533 532 534 42 (set (reg:SI 0 ax [orig:391 _373 ] [391])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f157d316990 parallel>)
                    (const_int 20 [0x14]))) [1 parallel.jend_m+0 S4 A32])) "CALCWI.f":119 86 {*movsi_internal}
     (nil))
(insn 534 533 723 42 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:390 _372 ] [390])) "CALCWI.f":119 86 {*movsi_internal}
     (nil))
;;  succ:       43 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 391

;; basic block 43, loop depth 0, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;;              47 [always] 
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 391
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 391
;; lr  def 	 17 [flags] 392 539
(code_label 723 534 535 43 35 (nil) [1 uses])
(note 535 723 536 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 536 535 537 43 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:391 _373 ] [391]))) "CALCWI.f":119 11 {*cmpsi_1}
     (nil))
(insn 537 536 538 43 (set (reg:QI 1 dx [539])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCWI.f":119 678 {*setcc_qi}
     (nil))
(insn 538 537 539 43 (set (reg:SI 1 dx [orig:392 _375 ] [392])
        (zero_extend:SI (reg:QI 1 dx [539]))) "CALCWI.f":119 140 {*zero_extendqisi2}
     (nil))
(insn 539 538 540 43 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:392 _375 ] [392])
            (const_int 0 [0]))) "CALCWI.f":119 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 540 539 541 43 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 808)
            (pc))) "CALCWI.f":119 682 {*jcc}
     (nil)
 -> 808)
;;  succ:       58
;;              44 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 391

;; basic block 44, loop depth 0, maybe hot
;;  prev block 43, next block 45, flags: (RTL, MODIFIED)
;;  pred:       43 (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 391
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 541 540 542 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 542 541 717 44 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALCWI.f":120 86 {*movsi_internal}
     (nil))
;;  succ:       45 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 391

;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 46, flags: (RTL, MODIFIED)
;;  pred:       44 (FALLTHRU)
;;              46 [always] 
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 391
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 393 540
(code_label 717 542 543 45 34 (nil) [1 uses])
(note 543 717 544 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 544 543 545 45 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALCWI.f":120 11 {*cmpsi_1}
     (nil))
(insn 545 544 546 45 (set (reg:QI 1 dx [540])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALCWI.f":120 678 {*setcc_qi}
     (nil))
(insn 546 545 547 45 (set (reg:SI 1 dx [orig:393 _377 ] [393])
        (zero_extend:SI (reg:QI 1 dx [540]))) "CALCWI.f":120 140 {*zero_extendqisi2}
     (nil))
(insn 547 546 548 45 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:393 _377 ] [393])
            (const_int 0 [0]))) "CALCWI.f":120 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 548 547 549 45 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 811)
            (pc))) "CALCWI.f":120 682 {*jcc}
     (nil)
 -> 811)
;;  succ:       59
;;              46 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 391

;; basic block 46, loop depth 0, maybe hot
;;  prev block 45, next block 59, flags: (RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 391
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags
(note 549 548 550 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 550 549 551 46 (set (reg:SI 1 dx [541])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":121 86 {*movsi_internal}
     (nil))
(insn 551 550 552 46 (set (reg:DI 1 dx [orig:262 _176 ] [262])
        (sign_extend:DI (reg:SI 1 dx [541]))) "CALCWI.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 552 551 553 46 (parallel [
            (set (reg:DI 2 cx [orig:263 _177 ] [263])
                (mult:DI (reg:DI 1 dx [orig:262 _176 ] [262])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":121 349 {*muldi3_1}
     (nil))
(insn 553 552 554 46 (set (reg:SI 1 dx [542])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":121 86 {*movsi_internal}
     (nil))
(insn 554 553 555 46 (set (reg:DI 1 dx [orig:264 _178 ] [264])
        (sign_extend:DI (reg:SI 1 dx [542]))) "CALCWI.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 555 554 556 46 (parallel [
            (set (reg:DI 1 dx [orig:265 _179 ] [265])
                (mult:DI (reg:DI 1 dx [orig:264 _178 ] [264])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":121 349 {*muldi3_1}
     (nil))
(insn 556 555 557 46 (parallel [
            (set (reg:DI 2 cx [orig:266 _180 ] [266])
                (plus:DI (reg:DI 2 cx [orig:263 _177 ] [263])
                    (reg:DI 1 dx [orig:265 _179 ] [265])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":121 222 {*adddi_1}
     (nil))
(insn 557 556 558 46 (set (reg:SI 1 dx [543])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":121 86 {*movsi_internal}
     (nil))
(insn 558 557 559 46 (set (reg:DI 1 dx [orig:267 _181 ] [267])
        (sign_extend:DI (reg:SI 1 dx [543]))) "CALCWI.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 559 558 560 46 (parallel [
            (set (reg:DI 1 dx [orig:268 _182 ] [268])
                (plus:DI (reg:DI 1 dx [orig:267 _181 ] [267])
                    (reg:DI 2 cx [orig:266 _180 ] [266])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":121 222 {*adddi_1}
     (nil))
(insn 560 559 561 46 (parallel [
            (set (reg:DI 2 cx [orig:269 _183 ] [269])
                (plus:DI (reg:DI 1 dx [orig:268 _182 ] [268])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":121 222 {*adddi_1}
     (nil))
(insn 561 560 562 46 (set (reg/f:DI 1 dx [544])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f157d30cbd0 extra>)) "CALCWI.f":121 85 {*movdi_internal}
     (nil))
(insn 562 561 563 46 (set (reg:SF 21 xmm0 [orig:270 _184 ] [270])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:269 _183 ] [269])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [544])) [2 extra.pint S4 A32])) "CALCWI.f":121 131 {*movsf_internal}
     (nil))
(insn 563 562 564 46 (set (reg:SI 1 dx [545])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":121 86 {*movsi_internal}
     (nil))
(insn 564 563 565 46 (parallel [
            (set (reg:SI 1 dx [orig:271 _185 ] [271])
                (plus:SI (reg:SI 1 dx [545])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":121 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 l+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 565 564 566 46 (set (reg:DI 1 dx [orig:272 _186 ] [272])
        (sign_extend:DI (reg:SI 1 dx [orig:271 _185 ] [271]))) "CALCWI.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 566 565 567 46 (parallel [
            (set (reg:DI 2 cx [orig:273 _187 ] [273])
                (mult:DI (reg:DI 1 dx [orig:272 _186 ] [272])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":121 349 {*muldi3_1}
     (nil))
(insn 567 566 568 46 (set (reg:SI 1 dx [546])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":121 86 {*movsi_internal}
     (nil))
(insn 568 567 569 46 (set (reg:DI 1 dx [orig:274 _188 ] [274])
        (sign_extend:DI (reg:SI 1 dx [546]))) "CALCWI.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 569 568 570 46 (parallel [
            (set (reg:DI 1 dx [orig:275 _189 ] [275])
                (mult:DI (reg:DI 1 dx [orig:274 _188 ] [274])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":121 349 {*muldi3_1}
     (nil))
(insn 570 569 571 46 (parallel [
            (set (reg:DI 2 cx [orig:276 _190 ] [276])
                (plus:DI (reg:DI 2 cx [orig:273 _187 ] [273])
                    (reg:DI 1 dx [orig:275 _189 ] [275])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":121 222 {*adddi_1}
     (nil))
(insn 571 570 572 46 (set (reg:SI 1 dx [547])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":121 86 {*movsi_internal}
     (nil))
(insn 572 571 573 46 (set (reg:DI 1 dx [orig:277 _191 ] [277])
        (sign_extend:DI (reg:SI 1 dx [547]))) "CALCWI.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 573 572 574 46 (parallel [
            (set (reg:DI 1 dx [orig:278 _192 ] [278])
                (plus:DI (reg:DI 1 dx [orig:277 _191 ] [277])
                    (reg:DI 2 cx [orig:276 _190 ] [276])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":121 222 {*adddi_1}
     (nil))
(insn 574 573 575 46 (parallel [
            (set (reg:DI 2 cx [orig:279 _193 ] [279])
                (plus:DI (reg:DI 1 dx [orig:278 _192 ] [278])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":121 222 {*adddi_1}
     (nil))
(insn 575 574 576 46 (set (reg/f:DI 1 dx [548])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7f157d30cbd0 extra>)) "CALCWI.f":121 85 {*movdi_internal}
     (nil))
(insn 576 575 577 46 (set (reg:SF 22 xmm1 [orig:280 _194 ] [280])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:279 _193 ] [279])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [548])) [2 extra.pint S4 A32])) "CALCWI.f":121 131 {*movsf_internal}
     (nil))
(insn 577 576 578 46 (set (reg:SF 21 xmm0 [orig:281 _195 ] [281])
        (minus:SF (reg:SF 21 xmm0 [orig:270 _184 ] [270])
            (reg:SF 22 xmm1 [orig:280 _194 ] [280]))) "CALCWI.f":121 841 {*fop_sf_1}
     (nil))
(insn 578 577 579 46 (set (reg:SF 22 xmm1 [orig:282 _196 ] [282])
        (reg:SF 21 xmm0 [orig:281 _195 ] [281])) "CALCWI.f":121 131 {*movsf_internal}
     (nil))
(insn 579 578 580 46 (set (reg:V4SF 21 xmm0 [550])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S16 A128])) "CALCWI.f":121 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF -0.0 [-0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 580 579 581 46 (parallel [
            (set (reg:SF 21 xmm0 [549])
                (neg:SF (reg:SF 22 xmm1 [orig:282 _196 ] [282])))
            (use (reg:V4SF 21 xmm0 [550]))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":121 507 {*absnegsf2}
     (expr_list:REG_EQUAL (neg:SF (reg:SF 22 xmm1 [orig:282 _196 ] [282]))
        (nil)))
(insn 581 580 582 46 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [2 dp+0 S4 A32])
        (reg:SF 21 xmm0 [549])) "CALCWI.f":121 131 {*movsf_internal}
     (nil))
(insn 582 581 583 46 (set (reg:SI 1 dx [551])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":122 86 {*movsi_internal}
     (nil))
(insn 583 582 584 46 (set (reg:DI 1 dx [orig:283 _197 ] [283])
        (sign_extend:DI (reg:SI 1 dx [551]))) "CALCWI.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 584 583 585 46 (parallel [
            (set (reg:DI 2 cx [orig:284 _198 ] [284])
                (mult:DI (reg:DI 1 dx [orig:283 _197 ] [283])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 349 {*muldi3_1}
     (nil))
(insn 585 584 586 46 (set (reg:SI 1 dx [552])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":122 86 {*movsi_internal}
     (nil))
(insn 586 585 587 46 (set (reg:DI 1 dx [orig:285 _199 ] [285])
        (sign_extend:DI (reg:SI 1 dx [552]))) "CALCWI.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 587 586 588 46 (parallel [
            (set (reg:DI 1 dx [orig:286 _200 ] [286])
                (plus:DI (reg:DI 1 dx [orig:285 _199 ] [285])
                    (reg:DI 2 cx [orig:284 _198 ] [284])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 222 {*adddi_1}
     (nil))
(insn 588 587 589 46 (parallel [
            (set (reg:DI 2 cx [orig:287 _201 ] [287])
                (plus:DI (reg:DI 1 dx [orig:286 _200 ] [286])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 222 {*adddi_1}
     (nil))
(insn 589 588 590 46 (set (reg/f:DI 1 dx [553])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 clw+0 S8 A64])) "CALCWI.f":122 85 {*movdi_internal}
     (nil))
(insn 590 589 591 46 (set (reg:SF 22 xmm1 [orig:288 _202 ] [288])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:287 _201 ] [287])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [553])) [2 *clw_364(D) S4 A32])) "CALCWI.f":122 131 {*movsf_internal}
     (nil))
(insn 591 590 592 46 (set (reg:SI 1 dx [554])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":122 86 {*movsi_internal}
     (nil))
(insn 592 591 593 46 (set (reg:DI 1 dx [orig:289 _203 ] [289])
        (sign_extend:DI (reg:SI 1 dx [554]))) "CALCWI.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 593 592 594 46 (parallel [
            (set (reg:DI 2 cx [orig:290 _204 ] [290])
                (mult:DI (reg:DI 1 dx [orig:289 _203 ] [289])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 349 {*muldi3_1}
     (nil))
(insn 594 593 595 46 (set (reg:SI 1 dx [555])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":122 86 {*movsi_internal}
     (nil))
(insn 595 594 596 46 (set (reg:DI 1 dx [orig:291 _205 ] [291])
        (sign_extend:DI (reg:SI 1 dx [555]))) "CALCWI.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 596 595 597 46 (parallel [
            (set (reg:DI 1 dx [orig:292 _206 ] [292])
                (mult:DI (reg:DI 1 dx [orig:291 _205 ] [291])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 349 {*muldi3_1}
     (nil))
(insn 597 596 598 46 (parallel [
            (set (reg:DI 2 cx [orig:293 _207 ] [293])
                (plus:DI (reg:DI 2 cx [orig:290 _204 ] [290])
                    (reg:DI 1 dx [orig:292 _206 ] [292])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 222 {*adddi_1}
     (nil))
(insn 598 597 599 46 (set (reg:SI 1 dx [556])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":122 86 {*movsi_internal}
     (nil))
(insn 599 598 600 46 (set (reg:DI 1 dx [orig:294 _208 ] [294])
        (sign_extend:DI (reg:SI 1 dx [556]))) "CALCWI.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 600 599 601 46 (parallel [
            (set (reg:DI 1 dx [orig:295 _209 ] [295])
                (plus:DI (reg:DI 1 dx [orig:294 _208 ] [294])
                    (reg:DI 2 cx [orig:293 _207 ] [293])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 222 {*adddi_1}
     (nil))
(insn 601 600 602 46 (parallel [
            (set (reg:DI 2 cx [orig:296 _210 ] [296])
                (plus:DI (reg:DI 1 dx [orig:295 _209 ] [295])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 222 {*adddi_1}
     (nil))
(insn 602 601 603 46 (set (reg/f:DI 1 dx [557])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f158436dab0 cldwtr>)) "CALCWI.f":122 85 {*movdi_internal}
     (nil))
(insn 603 602 604 46 (set (reg:SF 23 xmm2 [orig:297 _211 ] [297])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:296 _210 ] [296])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [557])) [2 cldwtr.cwm S4 A32])) "CALCWI.f":122 131 {*movsf_internal}
     (nil))
(insn 604 603 605 46 (set (reg:SI 1 dx [558])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":122 86 {*movsi_internal}
     (nil))
(insn 605 604 606 46 (set (reg:DI 1 dx [orig:298 _212 ] [298])
        (sign_extend:DI (reg:SI 1 dx [558]))) "CALCWI.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 606 605 607 46 (parallel [
            (set (reg:DI 2 cx [orig:299 _213 ] [299])
                (mult:DI (reg:DI 1 dx [orig:298 _212 ] [298])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 349 {*muldi3_1}
     (nil))
(insn 607 606 608 46 (set (reg:SI 1 dx [559])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":122 86 {*movsi_internal}
     (nil))
(insn 608 607 609 46 (set (reg:DI 1 dx [orig:300 _214 ] [300])
        (sign_extend:DI (reg:SI 1 dx [559]))) "CALCWI.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 609 608 610 46 (parallel [
            (set (reg:DI 1 dx [orig:301 _215 ] [301])
                (mult:DI (reg:DI 1 dx [orig:300 _214 ] [300])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 349 {*muldi3_1}
     (nil))
(insn 610 609 611 46 (parallel [
            (set (reg:DI 2 cx [orig:302 _216 ] [302])
                (plus:DI (reg:DI 2 cx [orig:299 _213 ] [299])
                    (reg:DI 1 dx [orig:301 _215 ] [301])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 222 {*adddi_1}
     (nil))
(insn 611 610 612 46 (set (reg:SI 1 dx [560])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":122 86 {*movsi_internal}
     (nil))
(insn 612 611 613 46 (set (reg:DI 1 dx [orig:303 _217 ] [303])
        (sign_extend:DI (reg:SI 1 dx [560]))) "CALCWI.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 613 612 614 46 (parallel [
            (set (reg:DI 1 dx [orig:304 _218 ] [304])
                (plus:DI (reg:DI 1 dx [orig:303 _217 ] [303])
                    (reg:DI 2 cx [orig:302 _216 ] [302])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 222 {*adddi_1}
     (nil))
(insn 614 613 615 46 (parallel [
            (set (reg:DI 2 cx [orig:305 _219 ] [305])
                (plus:DI (reg:DI 1 dx [orig:304 _218 ] [304])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 222 {*adddi_1}
     (nil))
(insn 615 614 616 46 (set (reg/f:DI 1 dx [561])
        (symbol_ref:DI ("iw.4109") [flags 0x202]  <var_decl 0x7f157d31ca20 iw>)) "CALCWI.f":122 85 {*movdi_internal}
     (nil))
(insn 616 615 617 46 (set (reg:SF 24 xmm3 [orig:306 _220 ] [306])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:305 _219 ] [305])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [561])) [2 iw S4 A32])) "CALCWI.f":122 131 {*movsf_internal}
     (nil))
(insn 617 616 618 46 (set (reg:SF 21 xmm0 [562])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALCWI.f":122 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 618 617 620 46 (set (reg:SF 21 xmm0 [orig:307 _221 ] [307])
        (minus:SF (reg:SF 21 xmm0 [562])
            (reg:SF 24 xmm3 [orig:306 _220 ] [306]))) "CALCWI.f":122 841 {*fop_sf_1}
     (nil))
(insn 620 618 621 46 (set (reg:SF 23 xmm2 [orig:309 _223 ] [309])
        (mult:SF (reg:SF 23 xmm2 [orig:297 _211 ] [297])
            (reg:SF 21 xmm0 [orig:308 _222 ] [308]))) "CALCWI.f":122 838 {*fop_sf_comm}
     (nil))
(insn 621 620 622 46 (set (reg:SI 1 dx [563])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":122 86 {*movsi_internal}
     (nil))
(insn 622 621 623 46 (set (reg:DI 1 dx [orig:310 _224 ] [310])
        (sign_extend:DI (reg:SI 1 dx [563]))) "CALCWI.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 623 622 624 46 (parallel [
            (set (reg:DI 2 cx [orig:311 _225 ] [311])
                (mult:DI (reg:DI 1 dx [orig:310 _224 ] [310])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 349 {*muldi3_1}
     (nil))
(insn 624 623 625 46 (set (reg:SI 1 dx [564])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":122 86 {*movsi_internal}
     (nil))
(insn 625 624 626 46 (set (reg:DI 1 dx [orig:312 _226 ] [312])
        (sign_extend:DI (reg:SI 1 dx [564]))) "CALCWI.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 626 625 627 46 (parallel [
            (set (reg:DI 1 dx [orig:313 _227 ] [313])
                (mult:DI (reg:DI 1 dx [orig:312 _226 ] [312])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 349 {*muldi3_1}
     (nil))
(insn 627 626 628 46 (parallel [
            (set (reg:DI 2 cx [orig:314 _228 ] [314])
                (plus:DI (reg:DI 2 cx [orig:311 _225 ] [311])
                    (reg:DI 1 dx [orig:313 _227 ] [313])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 222 {*adddi_1}
     (nil))
(insn 628 627 629 46 (set (reg:SI 1 dx [565])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":122 86 {*movsi_internal}
     (nil))
(insn 629 628 630 46 (set (reg:DI 1 dx [orig:315 _229 ] [315])
        (sign_extend:DI (reg:SI 1 dx [565]))) "CALCWI.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 630 629 631 46 (parallel [
            (set (reg:DI 1 dx [orig:316 _230 ] [316])
                (plus:DI (reg:DI 1 dx [orig:315 _229 ] [315])
                    (reg:DI 2 cx [orig:314 _228 ] [314])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 222 {*adddi_1}
     (nil))
(insn 631 630 632 46 (parallel [
            (set (reg:DI 2 cx [orig:317 _231 ] [317])
                (plus:DI (reg:DI 1 dx [orig:316 _230 ] [316])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 222 {*adddi_1}
     (nil))
(insn 632 631 633 46 (set (reg/f:DI 1 dx [566])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f157d316120 masks>)) "CALCWI.f":122 85 {*movdi_internal}
     (nil))
(insn 633 632 634 46 (parallel [
            (set (reg:DI 2 cx [567])
                (plus:DI (reg:DI 2 cx [orig:317 _231 ] [317])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 222 {*adddi_1}
     (nil))
(insn 634 633 635 46 (set (reg:SF 21 xmm0 [orig:318 _232 ] [318])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [567])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [566])) [2 masks.htm S4 A32])) "CALCWI.f":122 131 {*movsf_internal}
     (nil))
(insn 635 634 821 46 (set (reg:SF 21 xmm0 [orig:319 _233 ] [319])
        (mult:SF (reg:SF 21 xmm0 [orig:318 _232 ] [318])
            (reg:SF 23 xmm2 [orig:309 _223 ] [309]))) "CALCWI.f":122 838 {*fop_sf_comm}
     (nil))
(insn 821 635 637 46 (set (reg:SF 23 xmm2 [orig:320 _234 ] [320])
        (reg:SF 21 xmm0 [orig:320 _234 ] [320])) "CALCWI.f":122 131 {*movsf_internal}
     (nil))
(insn 637 821 638 46 (set (reg:SF 23 xmm2 [orig:320 _234 ] [320])
        (mult:SF (reg:SF 23 xmm2 [orig:320 _234 ] [320])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])) [2 dp+0 S4 A32]))) "CALCWI.f":122 838 {*fop_sf_comm}
     (nil))
(insn 638 637 639 46 (set (reg:SF 21 xmm0 [568])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALCWI.f":122 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0204081237316131591796875e-1 [0x0.d0fac6p-3])
        (nil)))
(insn 639 638 640 46 (set (reg:SF 21 xmm0 [orig:322 _236 ] [322])
        (mult:SF (reg:SF 21 xmm0 [568])
            (reg:SF 23 xmm2 [orig:321 _235 ] [321]))) "CALCWI.f":122 838 {*fop_sf_comm}
     (nil))
(insn 640 639 641 46 (set (reg:SI 1 dx [569])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":122 86 {*movsi_internal}
     (nil))
(insn 641 640 642 46 (set (reg:DI 1 dx [orig:323 _237 ] [323])
        (sign_extend:DI (reg:SI 1 dx [569]))) "CALCWI.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 642 641 643 46 (parallel [
            (set (reg:DI 2 cx [orig:324 _238 ] [324])
                (mult:DI (reg:DI 1 dx [orig:323 _237 ] [323])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 349 {*muldi3_1}
     (nil))
(insn 643 642 644 46 (set (reg:SI 1 dx [570])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":122 86 {*movsi_internal}
     (nil))
(insn 644 643 645 46 (set (reg:DI 1 dx [orig:325 _239 ] [325])
        (sign_extend:DI (reg:SI 1 dx [570]))) "CALCWI.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 645 644 646 46 (parallel [
            (set (reg:DI 1 dx [orig:326 _240 ] [326])
                (plus:DI (reg:DI 1 dx [orig:325 _239 ] [325])
                    (reg:DI 2 cx [orig:324 _238 ] [324])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 222 {*adddi_1}
     (nil))
(insn 646 645 647 46 (parallel [
            (set (reg:DI 2 cx [orig:327 _241 ] [327])
                (plus:DI (reg:DI 1 dx [orig:326 _240 ] [326])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":122 222 {*adddi_1}
     (nil))
(insn 647 646 648 46 (set (reg:SF 21 xmm0 [orig:328 _242 ] [328])
        (plus:SF (reg:SF 21 xmm0 [orig:322 _236 ] [322])
            (reg:SF 22 xmm1 [orig:288 _202 ] [288]))) "CALCWI.f":122 838 {*fop_sf_comm}
     (nil))
(insn 648 647 649 46 (set (reg/f:DI 1 dx [571])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 clw+0 S8 A64])) "CALCWI.f":122 85 {*movdi_internal}
     (nil))
(insn 649 648 650 46 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:327 _241 ] [327])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [571])) [2 *clw_364(D) S4 A32])
        (reg:SF 21 xmm0 [orig:328 _242 ] [328])) "CALCWI.f":122 131 {*movsf_internal}
     (nil))
(insn 650 649 651 46 (set (reg:SI 1 dx [572])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":123 86 {*movsi_internal}
     (nil))
(insn 651 650 652 46 (set (reg:DI 1 dx [orig:329 _243 ] [329])
        (sign_extend:DI (reg:SI 1 dx [572]))) "CALCWI.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 652 651 653 46 (parallel [
            (set (reg:DI 2 cx [orig:330 _244 ] [330])
                (mult:DI (reg:DI 1 dx [orig:329 _243 ] [329])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 349 {*muldi3_1}
     (nil))
(insn 653 652 654 46 (set (reg:SI 1 dx [573])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":123 86 {*movsi_internal}
     (nil))
(insn 654 653 655 46 (set (reg:DI 1 dx [orig:331 _245 ] [331])
        (sign_extend:DI (reg:SI 1 dx [573]))) "CALCWI.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 655 654 656 46 (parallel [
            (set (reg:DI 1 dx [orig:332 _246 ] [332])
                (plus:DI (reg:DI 1 dx [orig:331 _245 ] [331])
                    (reg:DI 2 cx [orig:330 _244 ] [330])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 222 {*adddi_1}
     (nil))
(insn 656 655 657 46 (parallel [
            (set (reg:DI 2 cx [orig:333 _247 ] [333])
                (plus:DI (reg:DI 1 dx [orig:332 _246 ] [332])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 222 {*adddi_1}
     (nil))
(insn 657 656 658 46 (set (reg/f:DI 1 dx [574])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 cli+0 S8 A64])) "CALCWI.f":123 85 {*movdi_internal}
     (nil))
(insn 658 657 659 46 (set (reg:SF 22 xmm1 [orig:334 _248 ] [334])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:333 _247 ] [333])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [574])) [2 *cli_366(D) S4 A32])) "CALCWI.f":123 131 {*movsf_internal}
     (nil))
(insn 659 658 660 46 (set (reg:SI 1 dx [575])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":123 86 {*movsi_internal}
     (nil))
(insn 660 659 661 46 (set (reg:DI 1 dx [orig:335 _249 ] [335])
        (sign_extend:DI (reg:SI 1 dx [575]))) "CALCWI.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 661 660 662 46 (parallel [
            (set (reg:DI 2 cx [orig:336 _250 ] [336])
                (mult:DI (reg:DI 1 dx [orig:335 _249 ] [335])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 349 {*muldi3_1}
     (nil))
(insn 662 661 663 46 (set (reg:SI 1 dx [576])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":123 86 {*movsi_internal}
     (nil))
(insn 663 662 664 46 (set (reg:DI 1 dx [orig:337 _251 ] [337])
        (sign_extend:DI (reg:SI 1 dx [576]))) "CALCWI.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 664 663 665 46 (parallel [
            (set (reg:DI 1 dx [orig:338 _252 ] [338])
                (mult:DI (reg:DI 1 dx [orig:337 _251 ] [337])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 349 {*muldi3_1}
     (nil))
(insn 665 664 666 46 (parallel [
            (set (reg:DI 2 cx [orig:339 _253 ] [339])
                (plus:DI (reg:DI 2 cx [orig:336 _250 ] [336])
                    (reg:DI 1 dx [orig:338 _252 ] [338])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 222 {*adddi_1}
     (nil))
(insn 666 665 667 46 (set (reg:SI 1 dx [577])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":123 86 {*movsi_internal}
     (nil))
(insn 667 666 668 46 (set (reg:DI 1 dx [orig:340 _254 ] [340])
        (sign_extend:DI (reg:SI 1 dx [577]))) "CALCWI.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 668 667 669 46 (parallel [
            (set (reg:DI 1 dx [orig:341 _255 ] [341])
                (plus:DI (reg:DI 1 dx [orig:340 _254 ] [340])
                    (reg:DI 2 cx [orig:339 _253 ] [339])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 222 {*adddi_1}
     (nil))
(insn 669 668 670 46 (parallel [
            (set (reg:DI 2 cx [orig:342 _256 ] [342])
                (plus:DI (reg:DI 1 dx [orig:341 _255 ] [341])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 222 {*adddi_1}
     (nil))
(insn 670 669 671 46 (set (reg/f:DI 1 dx [578])
        (symbol_ref:DI ("cldwtr_") [flags 0x202]  <var_decl 0x7f158436dab0 cldwtr>)) "CALCWI.f":123 85 {*movdi_internal}
     (nil))
(insn 671 670 672 46 (set (reg:SF 21 xmm0 [orig:343 _257 ] [343])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:342 _256 ] [342])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [578])) [2 cldwtr.cwm S4 A32])) "CALCWI.f":123 131 {*movsf_internal}
     (nil))
(insn 672 671 673 46 (set (reg:SI 1 dx [579])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":123 86 {*movsi_internal}
     (nil))
(insn 673 672 674 46 (set (reg:DI 1 dx [orig:344 _258 ] [344])
        (sign_extend:DI (reg:SI 1 dx [579]))) "CALCWI.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 674 673 675 46 (parallel [
            (set (reg:DI 2 cx [orig:345 _259 ] [345])
                (mult:DI (reg:DI 1 dx [orig:344 _258 ] [344])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 349 {*muldi3_1}
     (nil))
(insn 675 674 676 46 (set (reg:SI 1 dx [580])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":123 86 {*movsi_internal}
     (nil))
(insn 676 675 677 46 (set (reg:DI 1 dx [orig:346 _260 ] [346])
        (sign_extend:DI (reg:SI 1 dx [580]))) "CALCWI.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 677 676 678 46 (parallel [
            (set (reg:DI 1 dx [orig:347 _261 ] [347])
                (mult:DI (reg:DI 1 dx [orig:346 _260 ] [346])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 349 {*muldi3_1}
     (nil))
(insn 678 677 679 46 (parallel [
            (set (reg:DI 2 cx [orig:348 _262 ] [348])
                (plus:DI (reg:DI 2 cx [orig:345 _259 ] [345])
                    (reg:DI 1 dx [orig:347 _261 ] [347])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 222 {*adddi_1}
     (nil))
(insn 679 678 680 46 (set (reg:SI 1 dx [581])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":123 86 {*movsi_internal}
     (nil))
(insn 680 679 681 46 (set (reg:DI 1 dx [orig:349 _263 ] [349])
        (sign_extend:DI (reg:SI 1 dx [581]))) "CALCWI.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 681 680 682 46 (parallel [
            (set (reg:DI 1 dx [orig:350 _264 ] [350])
                (plus:DI (reg:DI 1 dx [orig:349 _263 ] [349])
                    (reg:DI 2 cx [orig:348 _262 ] [348])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 222 {*adddi_1}
     (nil))
(insn 682 681 683 46 (parallel [
            (set (reg:DI 2 cx [orig:351 _265 ] [351])
                (plus:DI (reg:DI 1 dx [orig:350 _264 ] [350])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 222 {*adddi_1}
     (nil))
(insn 683 682 684 46 (set (reg/f:DI 1 dx [582])
        (symbol_ref:DI ("iw.4109") [flags 0x202]  <var_decl 0x7f157d31ca20 iw>)) "CALCWI.f":123 85 {*movdi_internal}
     (nil))
(insn 684 683 686 46 (set (reg:SF 23 xmm2 [orig:352 _266 ] [352])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:351 _265 ] [351])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [582])) [2 iw S4 A32])) "CALCWI.f":123 131 {*movsf_internal}
     (nil))
(insn 686 684 687 46 (set (reg:SF 23 xmm2 [orig:354 _268 ] [354])
        (mult:SF (reg:SF 23 xmm2 [orig:353 _267 ] [353])
            (reg:SF 21 xmm0 [orig:343 _257 ] [343]))) "CALCWI.f":123 838 {*fop_sf_comm}
     (nil))
(insn 687 686 688 46 (set (reg:SI 1 dx [583])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])) "CALCWI.f":123 86 {*movsi_internal}
     (nil))
(insn 688 687 689 46 (set (reg:DI 1 dx [orig:355 _269 ] [355])
        (sign_extend:DI (reg:SI 1 dx [583]))) "CALCWI.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 689 688 690 46 (parallel [
            (set (reg:DI 2 cx [orig:356 _270 ] [356])
                (mult:DI (reg:DI 1 dx [orig:355 _269 ] [355])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 349 {*muldi3_1}
     (nil))
(insn 690 689 691 46 (set (reg:SI 1 dx [584])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":123 86 {*movsi_internal}
     (nil))
(insn 691 690 692 46 (set (reg:DI 1 dx [orig:357 _271 ] [357])
        (sign_extend:DI (reg:SI 1 dx [584]))) "CALCWI.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 692 691 693 46 (parallel [
            (set (reg:DI 1 dx [orig:358 _272 ] [358])
                (mult:DI (reg:DI 1 dx [orig:357 _271 ] [357])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 349 {*muldi3_1}
     (nil))
(insn 693 692 694 46 (parallel [
            (set (reg:DI 2 cx [orig:359 _273 ] [359])
                (plus:DI (reg:DI 2 cx [orig:356 _270 ] [356])
                    (reg:DI 1 dx [orig:358 _272 ] [358])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 222 {*adddi_1}
     (nil))
(insn 694 693 695 46 (set (reg:SI 1 dx [585])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":123 86 {*movsi_internal}
     (nil))
(insn 695 694 696 46 (set (reg:DI 1 dx [orig:360 _274 ] [360])
        (sign_extend:DI (reg:SI 1 dx [585]))) "CALCWI.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 696 695 697 46 (parallel [
            (set (reg:DI 1 dx [orig:361 _275 ] [361])
                (plus:DI (reg:DI 1 dx [orig:360 _274 ] [360])
                    (reg:DI 2 cx [orig:359 _273 ] [359])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 222 {*adddi_1}
     (nil))
(insn 697 696 698 46 (parallel [
            (set (reg:DI 2 cx [orig:362 _276 ] [362])
                (plus:DI (reg:DI 1 dx [orig:361 _275 ] [361])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 222 {*adddi_1}
     (nil))
(insn 698 697 699 46 (set (reg/f:DI 1 dx [586])
        (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7f157d316120 masks>)) "CALCWI.f":123 85 {*movdi_internal}
     (nil))
(insn 699 698 700 46 (parallel [
            (set (reg:DI 2 cx [587])
                (plus:DI (reg:DI 2 cx [orig:362 _276 ] [362])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 222 {*adddi_1}
     (nil))
(insn 700 699 701 46 (set (reg:SF 21 xmm0 [orig:363 _277 ] [363])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [587])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [586])) [2 masks.htm S4 A32])) "CALCWI.f":123 131 {*movsf_internal}
     (nil))
(insn 701 700 823 46 (set (reg:SF 21 xmm0 [orig:364 _278 ] [364])
        (mult:SF (reg:SF 21 xmm0 [orig:363 _277 ] [363])
            (reg:SF 23 xmm2 [orig:354 _268 ] [354]))) "CALCWI.f":123 838 {*fop_sf_comm}
     (nil))
(insn 823 701 703 46 (set (reg:SF 23 xmm2 [orig:365 _279 ] [365])
        (reg:SF 21 xmm0 [orig:365 _279 ] [365])) "CALCWI.f":123 131 {*movsf_internal}
     (nil))
(insn 703 823 704 46 (set (reg:SF 23 xmm2 [orig:365 _279 ] [365])
        (mult:SF (reg:SF 23 xmm2 [orig:365 _279 ] [365])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])) [2 dp+0 S4 A32]))) "CALCWI.f":123 838 {*fop_sf_comm}
     (nil))
(insn 704 703 705 46 (set (reg:SF 21 xmm0 [588])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALCWI.f":123 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0204081237316131591796875e-1 [0x0.d0fac6p-3])
        (nil)))
(insn 705 704 706 46 (set (reg:SF 21 xmm0 [orig:367 _281 ] [367])
        (mult:SF (reg:SF 21 xmm0 [588])
            (reg:SF 23 xmm2 [orig:366 _280 ] [366]))) "CALCWI.f":123 838 {*fop_sf_comm}
     (nil))
(insn 706 705 707 46 (set (reg:SI 1 dx [589])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALCWI.f":123 86 {*movsi_internal}
     (nil))
(insn 707 706 708 46 (set (reg:DI 1 dx [orig:368 _282 ] [368])
        (sign_extend:DI (reg:SI 1 dx [589]))) "CALCWI.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 708 707 709 46 (parallel [
            (set (reg:DI 2 cx [orig:369 _283 ] [369])
                (mult:DI (reg:DI 1 dx [orig:368 _282 ] [368])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 349 {*muldi3_1}
     (nil))
(insn 709 708 710 46 (set (reg:SI 1 dx [590])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALCWI.f":123 86 {*movsi_internal}
     (nil))
(insn 710 709 711 46 (set (reg:DI 1 dx [orig:370 _284 ] [370])
        (sign_extend:DI (reg:SI 1 dx [590]))) "CALCWI.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 711 710 712 46 (parallel [
            (set (reg:DI 1 dx [orig:371 _285 ] [371])
                (plus:DI (reg:DI 1 dx [orig:370 _284 ] [370])
                    (reg:DI 2 cx [orig:369 _283 ] [369])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 222 {*adddi_1}
     (nil))
(insn 712 711 713 46 (parallel [
            (set (reg:DI 2 cx [orig:372 _286 ] [372])
                (plus:DI (reg:DI 1 dx [orig:371 _285 ] [371])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":123 222 {*adddi_1}
     (nil))
(insn 713 712 714 46 (set (reg:SF 21 xmm0 [orig:373 _287 ] [373])
        (plus:SF (reg:SF 21 xmm0 [orig:367 _281 ] [367])
            (reg:SF 22 xmm1 [orig:334 _248 ] [334]))) "CALCWI.f":123 838 {*fop_sf_comm}
     (nil))
(insn 714 713 715 46 (set (reg/f:DI 1 dx [591])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 cli+0 S8 A64])) "CALCWI.f":123 85 {*movdi_internal}
     (nil))
(insn 715 714 716 46 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:372 _286 ] [372])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [591])) [2 *cli_366(D) S4 A32])
        (reg:SF 21 xmm0 [orig:373 _287 ] [373])) "CALCWI.f":123 131 {*movsf_internal}
     (nil))
(insn 716 715 777 46 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":120 221 {*addsi_1}
     (nil))
(jump_insn 777 716 778 46 (set (pc)
        (label_ref 717)) "CALCWI.f":120 683 {jump}
     (nil)
 -> 717)
;;  succ:       45 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 391

(barrier 778 777 811)
;; basic block 59, loop depth 0, maybe hot
;;  prev block 46, next block 47, flags: (RTL, MODIFIED)
;;  pred:       45
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 391
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 811 778 810 59 54 (nil) [1 uses])
(note 810 811 812 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 812 810 720 59 (const_int 0 [0]) "CALCWI.f":123 718 {nop}
     (nil))
;;  succ:       47 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 391

;; basic block 47, loop depth 0, maybe hot
;;  prev block 59, next block 58, flags: (RTL, MODIFIED)
;;  pred:       59 [always]  (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 391
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 720 812 721 47 33 (nil) [0 uses])
(note 721 720 722 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 722 721 779 47 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":119 221 {*addsi_1}
     (nil))
(jump_insn 779 722 780 47 (set (pc)
        (label_ref 723)) "CALCWI.f":119 683 {jump}
     (nil)
 -> 723)
;;  succ:       43 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 391

(barrier 780 779 808)
;; basic block 58, loop depth 0, maybe hot
;;  prev block 47, next block 48, flags: (RTL, MODIFIED)
;;  pred:       43
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 808 780 807 58 53 (nil) [1 uses])
(note 807 808 809 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 809 807 726 58 (const_int 0 [0]) "CALCWI.f":120 718 {nop}
     (nil))
;;  succ:       48 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, maybe hot
;;  prev block 58, next block 57, flags: (RTL, MODIFIED)
;;  pred:       58 [always]  (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 726 809 727 48 32 (nil) [0 uses])
(note 727 726 728 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 728 727 781 48 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [1 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALCWI.f":116 221 {*addsi_1}
     (nil))
(jump_insn 781 728 782 48 (set (pc)
        (label_ref 729)) "CALCWI.f":116 683 {jump}
     (nil)
 -> 729)
;;  succ:       41 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 782 781 805)
;; basic block 57, loop depth 0, maybe hot
;;  prev block 48, next block 49, flags: (RTL, MODIFIED)
;;  pred:       41
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 805 782 804 57 52 (nil) [1 uses])
(note 804 805 806 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 806 804 732 57 (const_int 0 [0]) "CALCWI.f":119 718 {nop}
     (nil))
;;  succ:       49 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 49, loop depth 0, maybe hot
;;  prev block 57, next block 1, flags: (RTL, MODIFIED)
;;  pred:       57 [always]  (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 732 806 733 49 31 (nil) [0 uses])
(note 733 732 759 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 759 733 813 49 (const_int 0 [0]) "CALCWI.f":134 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 813 759 0 NOTE_INSN_DELETED)
