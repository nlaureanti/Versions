
;; Function calpot2 (calpot2_, funcdef_no=0, decl_uid=3768, cgraph_uid=0, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue: n_basic_blocks 14 n_edges 16 count 21 (  1.5)
;; 3 loops found
;;
;; Loop 0
;;  header 0, latch 1
;;  depth 0, outer -1
;;  nodes: 0 1 2 3 4 5 6 7 8 9 13 10 12 11
;;
;; Loop 1
;;  header 3, latch 10
;;  depth 1, outer 0
;;  nodes: 3 10 13 5 4 9 8 7 6
;;
;; Loop 2
;;  header 5, latch 9
;;  depth 2, outer 1
;;  nodes: 5 9 8 7 6
;; 2 succs { 3 }
;; 3 succs { 12 4 }
;; 4 succs { 5 }
;; 5 succs { 13 6 }
;; 6 succs { 7 8 }
;; 7 succs { 9 }
;; 8 succs { 9 }
;; 9 succs { 5 }
;; 13 succs { 10 }
;; 10 succs { 3 }
;; 12 succs { 11 }
;; 11 succs { 1 }
Building IRA IR
verify found no changes in insn with uid = 134.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r203: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a10 (r203,l0) best SSE_REGS, allocno SSE_REGS
    r202: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r202,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r201: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r201,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r200: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r200,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r199: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r199,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r198: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r198,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r197: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r197,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r196: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a27 (r196,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r195: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a31 (r195,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r194: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a34 (r194,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r193: preferred SSE_FIRST_REG, alternative GENERAL_REGS, allocno INT_SSE_REGS
    a35 (r193,l0) best SSE_FIRST_REG, allocno INT_SSE_REGS
    r192: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a39 (r192,l0) best SSE_REGS, allocno SSE_REGS
    r191: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a40 (r191,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r190: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a44 (r190,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r189: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a47 (r189,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r188: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a48 (r188,l0) best SSE_REGS, allocno SSE_REGS
    r187: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a51 (r187,l0) best SSE_REGS, allocno SSE_REGS
    r186: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a52 (r186,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r185: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a56 (r185,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r184: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a59 (r184,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r183: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a61 (r183,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r182: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a62 (r182,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r181: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a64 (r181,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r180: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a69 (r180,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r179: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a71 (r179,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r178: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a73 (r178,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r177: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a74 (r177,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r176: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a76 (r176,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r175: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a78 (r175,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r174: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a82 (r174,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r173: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a84 (r173,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r172: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a86 (r172,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r171: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a87 (r171,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r170: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a89 (r170,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r169: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a91 (r169,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r168: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a95 (r168,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r167: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a97 (r167,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r166: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a99 (r166,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r165: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a100 (r165,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r164: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a102 (r164,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r163: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a104 (r163,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r162: preferred SSE_FIRST_REG, alternative SSE_REGS, allocno SSE_REGS
    a36 (r162,l0) best SSE_FIRST_REG, allocno SSE_REGS
    r161: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a60 (r161,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r160: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r160,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r159: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a63 (r159,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r158: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r158,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r157: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a65 (r157,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r156: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r156,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r152: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a68 (r152,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r151: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a70 (r151,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r150: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r150,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r149: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a75 (r149,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r148: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r148,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r144: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a81 (r144,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r143: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a83 (r143,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r142: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r142,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r141: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a88 (r141,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r140: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r140,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r136: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a94 (r136,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r135: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a96 (r135,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r134: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r134,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r133: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a101 (r133,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r132: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r132,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r131: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r131,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r130: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r130,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r129: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r129,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r128: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r128,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r127: preferred SSE_REGS, alternative GENERAL_REGS, allocno SSE_REGS
    a19 (r127,l0) best SSE_REGS, allocno SSE_REGS
    r126: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r126,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r125: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r125,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r124: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r124,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r123: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r123,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r122: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r122,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r121: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a20 (r121,l0) best SSE_REGS, allocno SSE_REGS
    r120: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a28 (r120,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r119: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a29 (r119,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r118: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a30 (r118,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a32 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a33 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a37 (r115,l0) best SSE_REGS, allocno SSE_REGS
    r114: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a38 (r114,l0) best SSE_REGS, allocno SSE_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a41 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a42 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a43 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a45 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a46 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a49 (r108,l0) best SSE_REGS, allocno SSE_REGS
    r107: preferred SSE_REGS, alternative NO_REGS, allocno SSE_REGS
    a50 (r107,l0) best SSE_REGS, allocno SSE_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a53 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a54 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a55 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a57 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a58 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a66 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a67 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a72 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a77 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a79 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a80 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a85 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a90 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a92 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a93 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a98 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a103 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r134,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:49000 NO_REX_SSE_REGS:49000 SSE_REGS:49000 MMX_REGS:69000 INT_SSE_REGS:69000 ALL_REGS:1064000 MEM:31000
  a1(r140,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:31000 NO_REX_SSE_REGS:31000 SSE_REGS:31000 MMX_REGS:41000 INT_SSE_REGS:41000 ALL_REGS:638000 MEM:17000
  a2(r142,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:49000 NO_REX_SSE_REGS:49000 SSE_REGS:49000 MMX_REGS:69000 INT_SSE_REGS:69000 ALL_REGS:1064000 MEM:31000
  a3(r148,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:31000 NO_REX_SSE_REGS:31000 SSE_REGS:31000 MMX_REGS:41000 INT_SSE_REGS:41000 ALL_REGS:638000 MEM:17000
  a4(r150,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 SSE_FIRST_REG:41000 NO_REX_SSE_REGS:41000 SSE_REGS:41000 MMX_REGS:56000 INT_SSE_REGS:56000 ALL_REGS:852000 MEM:26000
  a5(r156,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:23000 NO_REX_SSE_REGS:23000 SSE_REGS:23000 MMX_REGS:28000 INT_SSE_REGS:28000 ALL_REGS:426000 MEM:12000
  a6(r158,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a7(r160,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a8(r202,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a9(r132,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a10(r203,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 FP_TOP_REG:24000 FP_SECOND_REG:24000 FLOAT_REGS:24000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:24000 FP_TOP_SSE_REGS:24000 FP_SECOND_SSE_REGS:24000 FLOAT_SSE_REGS:24000 FLOAT_INT_REGS:24000 INT_SSE_REGS:24000 FLOAT_INT_SSE_REGS:24000 ALL_REGS:24000 MEM:12000
  a11(r131,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a12(r130,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a13(r201,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a14(r129,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a15(r128,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a16(r200,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a17(r199,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a18(r126,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a19(r127,l0) costs: AREG:10000 DREG:10000 CREG:10000 BREG:10000 SIREG:10000 DIREG:10000 AD_REGS:10000 CLOBBERED_REGS:10000 Q_REGS:10000 NON_Q_REGS:10000 TLS_GOTBASE_REGS:10000 GENERAL_REGS:10000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:12000
  a20(r121,l0) costs: AREG:15000 DREG:15000 CREG:15000 BREG:15000 SIREG:15000 DIREG:15000 AD_REGS:15000 CLOBBERED_REGS:15000 Q_REGS:15000 NON_Q_REGS:15000 TLS_GOTBASE_REGS:15000 GENERAL_REGS:15000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:12000
  a21(r125,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a22(r124,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a23(r198,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a24(r123,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a25(r122,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a26(r197,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a27(r196,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a28(r120,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a29(r119,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a30(r118,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a31(r195,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a32(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a33(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a34(r194,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a35(r193,l0) costs: AREG:4000 DREG:4000 CREG:4000 BREG:4000 SIREG:4000 DIREG:4000 AD_REGS:4000 CLOBBERED_REGS:4000 Q_REGS:4000 NON_Q_REGS:4000 TLS_GOTBASE_REGS:4000 GENERAL_REGS:4000 FP_TOP_REG:18000 FP_SECOND_REG:18000 FLOAT_REGS:18000 SSE_FIRST_REG:18000 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:18000 FP_TOP_SSE_REGS:18000 FP_SECOND_SSE_REGS:18000 FLOAT_SSE_REGS:18000 FLOAT_INT_REGS:18000 INT_SSE_REGS:18000 FLOAT_INT_SSE_REGS:18000 ALL_REGS:18000 MEM:7000
  a36(r162,l0) costs: AREG:8000 DREG:8000 CREG:8000 BREG:8000 SIREG:8000 DIREG:8000 AD_REGS:8000 CLOBBERED_REGS:8000 Q_REGS:8000 NON_Q_REGS:8000 TLS_GOTBASE_REGS:8000 GENERAL_REGS:8000 FP_TOP_REG:12000 FP_SECOND_REG:12000 FLOAT_REGS:12000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:12000 FP_TOP_SSE_REGS:12000 FP_SECOND_SSE_REGS:12000 FLOAT_SSE_REGS:12000 FLOAT_INT_REGS:12000 INT_SSE_REGS:12000 FLOAT_INT_SSE_REGS:12000 ALL_REGS:12000 MEM:2000
  a37(r115,l0) costs: AREG:10000 DREG:10000 CREG:10000 BREG:10000 SIREG:10000 DIREG:10000 AD_REGS:10000 CLOBBERED_REGS:10000 Q_REGS:10000 NON_Q_REGS:10000 TLS_GOTBASE_REGS:10000 GENERAL_REGS:10000 FP_TOP_REG:19000 FP_SECOND_REG:19000 FLOAT_REGS:19000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:19000 FP_TOP_SSE_REGS:19000 FP_SECOND_SSE_REGS:19000 FLOAT_SSE_REGS:19000 FLOAT_INT_REGS:19000 INT_SSE_REGS:19000 FLOAT_INT_SSE_REGS:19000 ALL_REGS:19000 MEM:7000
  a38(r114,l0) costs: AREG:15000 DREG:15000 CREG:15000 BREG:15000 SIREG:15000 DIREG:15000 AD_REGS:15000 CLOBBERED_REGS:15000 Q_REGS:15000 NON_Q_REGS:15000 TLS_GOTBASE_REGS:15000 GENERAL_REGS:15000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:11000
  a39(r192,l0) costs: AREG:15000 DREG:15000 CREG:15000 BREG:15000 SIREG:15000 DIREG:15000 AD_REGS:15000 CLOBBERED_REGS:15000 Q_REGS:15000 NON_Q_REGS:15000 TLS_GOTBASE_REGS:15000 GENERAL_REGS:15000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:12000
  a40(r191,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a41(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a42(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a43(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a44(r190,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a45(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a46(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a47(r189,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a48(r188,l0) costs: AREG:15000 DREG:15000 CREG:15000 BREG:15000 SIREG:15000 DIREG:15000 AD_REGS:15000 CLOBBERED_REGS:15000 Q_REGS:15000 NON_Q_REGS:15000 TLS_GOTBASE_REGS:15000 GENERAL_REGS:15000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:11000
  a49(r108,l0) costs: AREG:21000 DREG:21000 CREG:21000 BREG:21000 SIREG:21000 DIREG:21000 AD_REGS:21000 CLOBBERED_REGS:21000 Q_REGS:21000 NON_Q_REGS:21000 TLS_GOTBASE_REGS:21000 GENERAL_REGS:21000 FP_TOP_REG:26000 FP_SECOND_REG:26000 FLOAT_REGS:26000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:26000 FP_TOP_SSE_REGS:26000 FP_SECOND_SSE_REGS:26000 FLOAT_SSE_REGS:26000 FLOAT_INT_REGS:26000 INT_SSE_REGS:26000 FLOAT_INT_SSE_REGS:26000 ALL_REGS:26000 MEM:12000
  a50(r107,l0) costs: AREG:15000 DREG:15000 CREG:15000 BREG:15000 SIREG:15000 DIREG:15000 AD_REGS:15000 CLOBBERED_REGS:15000 Q_REGS:15000 NON_Q_REGS:15000 TLS_GOTBASE_REGS:15000 GENERAL_REGS:15000 FP_TOP_REG:25000 FP_SECOND_REG:25000 FLOAT_REGS:25000 SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MMX_REGS:25000 FP_TOP_SSE_REGS:25000 FP_SECOND_SSE_REGS:25000 FLOAT_SSE_REGS:25000 FLOAT_INT_REGS:25000 INT_SSE_REGS:25000 FLOAT_INT_SSE_REGS:25000 ALL_REGS:25000 MEM:12000
  a51(r187,l0) costs: SSE_FIRST_REG:0 NO_REX_SSE_REGS:0 SSE_REGS:0 MEM:11000
  a52(r186,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a53(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a54(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a55(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:10000
  a56(r185,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a57(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a58(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a59(r184,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a60(r161,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a61(r183,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a62(r182,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a63(r159,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:21000 NO_REX_SSE_REGS:21000 SSE_REGS:21000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a64(r181,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:10000
  a65(r157,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a66(r100,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a67(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a68(r152,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13000 NO_REX_SSE_REGS:13000 SSE_REGS:13000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a69(r180,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a70(r151,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:31000 NO_REX_SSE_REGS:31000 SSE_REGS:31000 MMX_REGS:41000 INT_SSE_REGS:41000 ALL_REGS:638000 MEM:19000
  a71(r179,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13000 NO_REX_SSE_REGS:13000 SSE_REGS:13000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a72(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a73(r178,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a74(r177,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a75(r149,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28000 NO_REX_SSE_REGS:28000 SSE_REGS:28000 MMX_REGS:38000 INT_SSE_REGS:38000 ALL_REGS:530000 MEM:17000
  a76(r176,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13000 NO_REX_SSE_REGS:13000 SSE_REGS:13000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a77(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a78(r175,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a79(r95,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a80(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a81(r144,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13000 NO_REX_SSE_REGS:13000 SSE_REGS:13000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a82(r174,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a83(r143,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:31000 NO_REX_SSE_REGS:31000 SSE_REGS:31000 MMX_REGS:41000 INT_SSE_REGS:41000 ALL_REGS:638000 MEM:19000
  a84(r173,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13000 NO_REX_SSE_REGS:13000 SSE_REGS:13000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a85(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a86(r172,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a87(r171,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a88(r141,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28000 NO_REX_SSE_REGS:28000 SSE_REGS:28000 MMX_REGS:38000 INT_SSE_REGS:38000 ALL_REGS:530000 MEM:17000
  a89(r170,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13000 NO_REX_SSE_REGS:13000 SSE_REGS:13000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a90(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a91(r169,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a92(r90,l0) costs: AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 MEM:2000
  a93(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:6000 NO_REX_SSE_REGS:6000 SSE_REGS:6000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a94(r136,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13000 NO_REX_SSE_REGS:13000 SSE_REGS:13000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:11000
  a95(r168,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a96(r135,l0) costs: AREG:2000 DREG:2000 CREG:2000 BREG:2000 SIREG:2000 DIREG:2000 AD_REGS:2000 CLOBBERED_REGS:2000 Q_REGS:2000 NON_Q_REGS:2000 TLS_GOTBASE_REGS:2000 GENERAL_REGS:2000 SSE_FIRST_REG:31000 NO_REX_SSE_REGS:31000 SSE_REGS:31000 MMX_REGS:41000 INT_SSE_REGS:41000 ALL_REGS:638000 MEM:19000
  a97(r167,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13000 NO_REX_SSE_REGS:13000 SSE_REGS:13000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a98(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a99(r166,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000
  a100(r165,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:14000 NO_REX_SSE_REGS:14000 SSE_REGS:14000 MMX_REGS:19000 INT_SSE_REGS:19000 ALL_REGS:312000 MEM:6000
  a101(r133,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:28000 NO_REX_SSE_REGS:28000 SSE_REGS:28000 MMX_REGS:38000 INT_SSE_REGS:38000 ALL_REGS:530000 MEM:17000
  a102(r164,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:13000 NO_REX_SSE_REGS:13000 SSE_REGS:13000 MMX_REGS:26000 INT_SSE_REGS:26000 ALL_REGS:424000 MEM:12000
  a103(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:11000
  a104(r163,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 CLOBBERED_REGS:0 Q_REGS:0 NON_Q_REGS:0 TLS_GOTBASE_REGS:0 GENERAL_REGS:0 SSE_FIRST_REG:20000 NO_REX_SSE_REGS:20000 SSE_REGS:20000 MMX_REGS:25000 INT_SSE_REGS:25000 ALL_REGS:318000 MEM:12000

   Insn 191(l0): point = 0
   Insn 201(l0): point = 3
   Insn 90(l0): point = 6
   Insn 89(l0): point = 8
   Insn 88(l0): point = 10
   Insn 87(l0): point = 12
   Insn 86(l0): point = 14
   Insn 197(l0): point = 17
   Insn 178(l0): point = 19
   Insn 204(l0): point = 22
   Insn 100(l0): point = 25
   Insn 99(l0): point = 27
   Insn 98(l0): point = 29
   Insn 97(l0): point = 31
   Insn 96(l0): point = 33
   Insn 94(l0): point = 36
   Insn 93(l0): point = 38
   Insn 92(l0): point = 40
   Insn 195(l0): point = 43
   Insn 172(l0): point = 45
   Insn 169(l0): point = 48
   Insn 168(l0): point = 50
   Insn 167(l0): point = 52
   Insn 166(l0): point = 54
   Insn 165(l0): point = 56
   Insn 164(l0): point = 58
   Insn 163(l0): point = 60
   Insn 162(l0): point = 62
   Insn 161(l0): point = 64
   Insn 160(l0): point = 66
   Insn 193(l0): point = 69
   Insn 155(l0): point = 71
   Insn 154(l0): point = 73
   Insn 153(l0): point = 75
   Insn 152(l0): point = 77
   Insn 151(l0): point = 79
   Insn 150(l0): point = 81
   Insn 149(l0): point = 83
   Insn 148(l0): point = 85
   Insn 147(l0): point = 87
   Insn 146(l0): point = 89
   Insn 145(l0): point = 91
   Insn 144(l0): point = 93
   Insn 143(l0): point = 95
   Insn 142(l0): point = 97
   Insn 141(l0): point = 99
   Insn 140(l0): point = 101
   Insn 139(l0): point = 103
   Insn 138(l0): point = 105
   Insn 137(l0): point = 107
   Insn 136(l0): point = 109
   Insn 135(l0): point = 111
   Insn 134(l0): point = 113
   Insn 133(l0): point = 115
   Insn 132(l0): point = 117
   Insn 131(l0): point = 119
   Insn 130(l0): point = 121
   Insn 129(l0): point = 123
   Insn 128(l0): point = 125
   Insn 127(l0): point = 127
   Insn 126(l0): point = 129
   Insn 125(l0): point = 131
   Insn 124(l0): point = 133
   Insn 123(l0): point = 135
   Insn 122(l0): point = 137
   Insn 121(l0): point = 139
   Insn 120(l0): point = 141
   Insn 115(l0): point = 144
   Insn 114(l0): point = 146
   Insn 113(l0): point = 148
   Insn 112(l0): point = 150
   Insn 111(l0): point = 152
   Insn 110(l0): point = 154
   Insn 109(l0): point = 156
   Insn 108(l0): point = 158
   Insn 107(l0): point = 160
   Insn 106(l0): point = 162
   Insn 105(l0): point = 164
   Insn 104(l0): point = 166
   Insn 103(l0): point = 168
   Insn 102(l0): point = 170
   Insn 84(l0): point = 173
   Insn 83(l0): point = 175
   Insn 82(l0): point = 177
   Insn 81(l0): point = 179
   Insn 77(l0): point = 181
   Insn 76(l0): point = 183
   Insn 75(l0): point = 185
   Insn 73(l0): point = 187
   Insn 71(l0): point = 189
   Insn 72(l0): point = 191
   Insn 70(l0): point = 193
   Insn 69(l0): point = 195
   Insn 68(l0): point = 197
   Insn 67(l0): point = 199
   Insn 66(l0): point = 201
   Insn 65(l0): point = 203
   Insn 63(l0): point = 205
   Insn 64(l0): point = 207
   Insn 62(l0): point = 209
   Insn 61(l0): point = 211
   Insn 60(l0): point = 213
   Insn 59(l0): point = 215
   Insn 58(l0): point = 217
   Insn 57(l0): point = 219
   Insn 53(l0): point = 221
   Insn 52(l0): point = 223
   Insn 51(l0): point = 225
   Insn 49(l0): point = 227
   Insn 47(l0): point = 229
   Insn 48(l0): point = 231
   Insn 46(l0): point = 233
   Insn 45(l0): point = 235
   Insn 44(l0): point = 237
   Insn 43(l0): point = 239
   Insn 42(l0): point = 241
   Insn 41(l0): point = 243
   Insn 39(l0): point = 245
   Insn 40(l0): point = 247
   Insn 38(l0): point = 249
   Insn 37(l0): point = 251
   Insn 36(l0): point = 253
   Insn 35(l0): point = 255
   Insn 34(l0): point = 257
   Insn 33(l0): point = 259
   Insn 29(l0): point = 261
   Insn 28(l0): point = 263
   Insn 27(l0): point = 265
   Insn 25(l0): point = 267
   Insn 23(l0): point = 269
   Insn 24(l0): point = 271
   Insn 22(l0): point = 273
   Insn 21(l0): point = 275
   Insn 20(l0): point = 277
   Insn 19(l0): point = 279
   Insn 18(l0): point = 281
   Insn 17(l0): point = 283
   Insn 15(l0): point = 285
   Insn 16(l0): point = 287
   Insn 14(l0): point = 289
   Insn 13(l0): point = 291
   Insn 12(l0): point = 293
   Insn 11(l0): point = 295
   Insn 10(l0): point = 297
   Insn 6(l0): point = 299
   Insn 5(l0): point = 301
   Insn 4(l0): point = 303
   Insn 3(l0): point = 305
   Insn 2(l0): point = 307
 a0(r134): [6..283]
 a1(r140): [6..259]
 a2(r142): [6..243]
 a3(r148): [6..219]
 a4(r150): [6..203]
 a5(r156): [6..179]
 a6(r158): [6..175]
 a7(r160): [43..172] [25..38]
 a8(r202): [49..52]
 a9(r132): [49..54]
 a10(r203): [49..50]
 a11(r131): [55..56]
 a12(r130): [55..60]
 a13(r201): [57..58]
 a14(r129): [61..62]
 a15(r128): [63..64]
 a16(r200): [65..66]
 a17(r199): [72..73]
 a18(r126): [72..77]
 a19(r127): [72..75]
 a20(r121): [76..91]
 a21(r125): [78..79]
 a22(r124): [78..83]
 a23(r198): [80..81]
 a24(r123): [84..85]
 a25(r122): [86..87]
 a26(r197): [88..89]
 a27(r196): [92..93]
 a28(r120): [92..95]
 a29(r119): [96..97]
 a30(r118): [96..101]
 a31(r195): [98..99]
 a32(r117): [102..103]
 a33(r116): [104..105]
 a34(r194): [106..107]
 a35(r193): [110..111]
 a36(r162): [116..119]
 a37(r115): [120..121]
 a38(r114): [122..125]
 a39(r192): [122..123]
 a40(r191): [126..127]
 a41(r113): [126..129]
 a42(r112): [130..131]
 a43(r111): [130..135]
 a44(r190): [132..133]
 a45(r110): [136..137]
 a46(r109): [138..139]
 a47(r189): [140..141]
 a48(r188): [147..148]
 a49(r108): [147..150]
 a50(r107): [151..154]
 a51(r187): [151..152]
 a52(r186): [155..156]
 a53(r106): [155..158]
 a54(r105): [159..160]
 a55(r104): [159..164]
 a56(r185): [161..162]
 a57(r103): [165..166]
 a58(r102): [167..168]
 a59(r184): [169..170]
 a60(r161): [28..29]
 a61(r183): [30..31]
 a62(r182): [39..40]
 a63(r159): [9..10]
 a64(r181): [11..12]
 a65(r157): [174..177]
 a66(r100 [0]): [182..309]
 a66(r100 [1]): [181..309]
 a67(r99): [184..185]
 a68(r152): [186..187]
 a69(r180): [188..191]
 a70(r151): [188..193]
 a71(r179): [196..197]
 a72(r98): [198..199]
 a73(r178): [200..201]
 a74(r177): [204..207]
 a75(r149): [204..209]
 a76(r176): [212..213]
 a77(r97): [214..215]
 a78(r175): [216..217]
 a79(r95 [0]): [222..309]
 a79(r95 [1]): [221..309]
 a80(r94): [224..225]
 a81(r144): [226..227]
 a82(r174): [228..231]
 a83(r143): [228..233]
 a84(r173): [236..237]
 a85(r93): [238..239]
 a86(r172): [240..241]
 a87(r171): [244..247]
 a88(r141): [244..249]
 a89(r170): [252..253]
 a90(r92): [254..255]
 a91(r169): [256..257]
 a92(r90 [0]): [262..309]
 a92(r90 [1]): [261..309]
 a93(r89): [264..265]
 a94(r136): [266..267]
 a95(r168): [268..271]
 a96(r135): [268..273]
 a97(r167): [276..277]
 a98(r88): [278..279]
 a99(r166): [280..281]
 a100(r165): [284..287]
 a101(r133): [284..289]
 a102(r164): [292..293]
 a103(r87): [294..295]
 a104(r163): [296..297]
Compressing live ranges: from 310 to 146 - 47%
Ranges after the compression:
 a0(r134): [0..137]
 a1(r140): [0..125]
 a2(r142): [0..117]
 a3(r148): [0..105]
 a4(r150): [0..97]
 a5(r156): [0..85]
 a6(r158): [0..85]
 a7(r160): [10..83] [4..7]
 a8(r202): [10..11]
 a9(r132): [10..11]
 a10(r203): [10..11]
 a11(r131): [12..13]
 a12(r130): [12..15]
 a13(r201): [14..15]
 a14(r129): [16..17]
 a15(r128): [18..19]
 a16(r200): [20..21]
 a17(r199): [22..23]
 a18(r126): [22..25]
 a19(r127): [22..23]
 a20(r121): [24..35]
 a21(r125): [26..27]
 a22(r124): [26..29]
 a23(r198): [28..29]
 a24(r123): [30..31]
 a25(r122): [32..33]
 a26(r197): [34..35]
 a27(r196): [36..37]
 a28(r120): [36..37]
 a29(r119): [38..39]
 a30(r118): [38..41]
 a31(r195): [40..41]
 a32(r117): [42..43]
 a33(r116): [44..45]
 a34(r194): [46..47]
 a35(r193): [48..49]
 a36(r162): [50..51]
 a37(r115): [52..53]
 a38(r114): [54..55]
 a39(r192): [54..55]
 a40(r191): [56..57]
 a41(r113): [56..57]
 a42(r112): [58..59]
 a43(r111): [58..61]
 a44(r190): [60..61]
 a45(r110): [62..63]
 a46(r109): [64..65]
 a47(r189): [66..67]
 a48(r188): [68..69]
 a49(r108): [68..69]
 a50(r107): [70..71]
 a51(r187): [70..71]
 a52(r186): [72..73]
 a53(r106): [72..73]
 a54(r105): [74..75]
 a55(r104): [74..77]
 a56(r185): [76..77]
 a57(r103): [78..79]
 a58(r102): [80..81]
 a59(r184): [82..83]
 a60(r161): [4..5]
 a61(r183): [6..7]
 a62(r182): [8..9]
 a63(r159): [0..1]
 a64(r181): [2..3]
 a65(r157): [84..85]
 a66(r100 [0]): [86..145]
 a66(r100 [1]): [86..145]
 a67(r99): [86..87]
 a68(r152): [88..89]
 a69(r180): [90..91]
 a70(r151): [90..91]
 a71(r179): [92..93]
 a72(r98): [94..95]
 a73(r178): [96..97]
 a74(r177): [98..99]
 a75(r149): [98..99]
 a76(r176): [100..101]
 a77(r97): [102..103]
 a78(r175): [104..105]
 a79(r95 [0]): [106..145]
 a79(r95 [1]): [106..145]
 a80(r94): [106..107]
 a81(r144): [108..109]
 a82(r174): [110..111]
 a83(r143): [110..111]
 a84(r173): [112..113]
 a85(r93): [114..115]
 a86(r172): [116..117]
 a87(r171): [118..119]
 a88(r141): [118..119]
 a89(r170): [120..121]
 a90(r92): [122..123]
 a91(r169): [124..125]
 a92(r90 [0]): [126..145]
 a92(r90 [1]): [126..145]
 a93(r89): [126..127]
 a94(r136): [128..129]
 a95(r168): [130..131]
 a96(r135): [130..131]
 a97(r167): [132..133]
 a98(r88): [134..135]
 a99(r166): [136..137]
 a100(r165): [138..139]
 a101(r133): [138..139]
 a102(r164): [140..141]
 a103(r87): [142..143]
 a104(r163): [144..145]
  pref0:a35(r193)<-hr21@1461
  pref1:a36(r162)<-hr21@500
  regions=1, blocks=14, points=146
    allocnos=105 (big 3), copies=0, conflicts=0, ranges=109
Disposition:
  103:r87  l0     0   98:r88  l0     0   93:r89  l0     0   92:r90  l0    40
   90:r92  l0     0   85:r93  l0     0   80:r94  l0     0   79:r95  l0   mem
   77:r97  l0     0   72:r98  l0     0   67:r99  l0     0   66:r100 l0    38
   58:r102 l0     0   57:r103 l0     0   55:r104 l0     1   54:r105 l0     0
   53:r106 l0     1   50:r107 l0    21   49:r108 l0    21   46:r109 l0     0
   45:r110 l0     0   43:r111 l0     1   42:r112 l0     0   41:r113 l0     1
   38:r114 l0    22   37:r115 l0    21   33:r116 l0     0   32:r117 l0     0
   30:r118 l0     1   29:r119 l0     0   28:r120 l0     1   20:r121 l0    21
   25:r122 l0     0   24:r123 l0     0   22:r124 l0     1   21:r125 l0     0
   18:r126 l0     1   19:r127 l0    21   15:r128 l0     0   14:r129 l0     0
   12:r130 l0     1   11:r131 l0     0    9:r132 l0     1  101:r133 l0     0
    0:r134 l0     3   96:r135 l0     0   94:r136 l0     0    1:r140 l0    43
   88:r141 l0     0    2:r142 l0    41   83:r143 l0     0   81:r144 l0     0
    3:r148 l0    44   75:r149 l0     0    4:r150 l0    42   70:r151 l0     0
   68:r152 l0     0    5:r156 l0   mem   65:r157 l0     0    6:r158 l0   mem
   63:r159 l0     0    7:r160 l0   mem   60:r161 l0     0   36:r162 l0    21
  104:r163 l0     0  102:r164 l0     0  100:r165 l0     1   99:r166 l0     0
   97:r167 l0     0   95:r168 l0     1   91:r169 l0     0   89:r170 l0     0
   87:r171 l0     1   86:r172 l0     0   84:r173 l0     0   82:r174 l0     1
   78:r175 l0     0   76:r176 l0     0   74:r177 l0     1   73:r178 l0     0
   71:r179 l0     0   69:r180 l0     1   64:r181 l0     0   62:r182 l0     0
   61:r183 l0     0   59:r184 l0     0   56:r185 l0     0   52:r186 l0     0
   51:r187 l0    22   48:r188 l0    22   47:r189 l0     0   44:r190 l0     0
   40:r191 l0     0   39:r192 l0    21   35:r193 l0     0   34:r194 l0     0
   31:r195 l0     0   27:r196 l0     0   26:r197 l0     0   23:r198 l0     0
   17:r199 l0     0   16:r200 l0     0   13:r201 l0     0    8:r202 l0     0
   10:r203 l0    21
+++Costs: overall 58000, reg 20000, mem 38000, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


calpot2

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 37 [r8]
;;  ref usage 	r0={2d} r1={2d,1u} r2={2d,1u} r4={2d,1u} r5={2d,1u} r6={1d,13u} r7={1d,14u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,12u} r17={33d,11u} r18={1d} r19={1d} r20={1d,62u} r21={3d,2u} r22={3d,1u} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d,1u} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={2d,2u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={2d,2u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={2d,2u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u,1e} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} r123={1d,1u} r124={1d,1u} r125={1d,1u} r126={1d,1u} r127={1d,1u} r128={1d,1u} r129={1d,1u} r130={1d,1u} r131={1d,1u} r132={1d,1u} r133={1d,2u} r134={1d,4u} r135={1d,2u} r136={1d,1u} r140={1d,2u} r141={1d,2u} r142={1d,4u} r143={1d,2u} r144={1d,1u} r148={1d,2u} r149={1d,2u} r150={1d,3u} r151={1d,2u} r152={1d,1u} r156={1d,1u} r157={1d,1u} r158={1d,1u} r159={1d,1u} r160={1d,1u} r161={1d,1u} r162={1d,1u} r163={1d,1u} r164={1d,1u} r165={1d,1u} r166={1d,1u} r167={1d,1u} r168={1d,1u} r169={1d,1u} r170={1d,1u} r171={1d,1u} r172={1d,1u} r173={1d,1u} r174={1d,1u} r175={1d,1u} r176={1d,1u} r177={1d,1u} r178={1d,1u} r179={1d,1u} r180={1d,1u} r181={1d,1u} r182={1d,1u} r183={1d,1u} r184={1d,1u} r185={1d,1u} r186={1d,1u} r187={1d,1u} r188={1d,1u} r189={1d,1u} r190={1d,1u} r191={1d,1u} r192={1d,1u} r193={1d,1u} r194={1d,1u} r195={1d,1u} r196={1d,1u} r197={1d,1u} r198={1d,1u} r199={1d,1u} r200={1d,1u} r201={1d,1u} r202={1d,1u} r203={1d,1u} 
;;    total ref usage 478{233d,244u,1e} in 149{148 regular + 1 call} insns.
(note 1 0 8 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 90 95 100
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 90 95 100
;; lr  def 	 17 [flags] 87 88 89 92 93 94 97 98 99 133 134 135 136 140 141 142 143 144 148 149 150 151 152 156 157 158 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180
(note 8 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 8 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 p1d+0 S8 A64])
        (reg:DI 5 di [ p1d ])) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ p1d ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [4 t1d+0 S8 A64])
        (reg:DI 4 si [ t1d ])) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ t1d ])
        (nil)))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [4 theta+0 S8 A64])
        (reg:DI 1 dx [ theta ])) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 1 dx [ theta ])
        (nil)))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 im+0 S8 A64])
        (reg:DI 2 cx [ im ])) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 2 cx [ im ])
        (nil)))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [5 jm+0 S8 A64])
        (reg:DI 37 r8 [ jm ])) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 37 r8 [ jm ])
        (nil)))
(note 7 6 10 2 NOTE_INSN_FUNCTION_BEG)
(insn 10 7 11 2 (set (reg/f:DI 163)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 im+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:SI 87 [ _1 ])
        (mem:SI (reg/f:DI 163) [1 *im_53(D)+0 S4 A32])) "CALPOT2.f":1 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 163)
        (nil)))
(insn 12 11 13 2 (set (reg:DI 164)
        (sign_extend:DI (reg:SI 87 [ _1 ]))) "CALPOT2.f":1 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 87 [ _1 ])
        (nil)))
(insn 13 12 14 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.0+0 S8 A64])
        (reg:DI 164)) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 164)
        (nil)))
(insn 14 13 16 2 (set (reg:DI 133 [ stride.2_55 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [2 ubound.0+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 16 14 15 2 (set (reg:DI 165)
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 15 16 17 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 133 [ stride.2_55 ])
            (const_int 0 [0]))) "CALPOT2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 17 15 18 2 (set (reg:DI 134 [ stride.2_56 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 133 [ stride.2_55 ])
            (reg:DI 165))) "CALPOT2.f":1 1003 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 165)
        (expr_list:REG_DEAD (reg:DI 133 [ stride.2_55 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 18 17 19 2 (set (reg/f:DI 166)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [5 jm+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 19 18 20 2 (set (reg:SI 88 [ _2 ])
        (mem:SI (reg/f:DI 166) [1 *jm_57(D)+0 S4 A32])) "CALPOT2.f":1 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 166)
        (nil)))
(insn 20 19 21 2 (set (reg:DI 167)
        (sign_extend:DI (reg:SI 88 [ _2 ]))) "CALPOT2.f":1 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 88 [ _2 ])
        (nil)))
(insn 21 20 22 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 ubound.1+0 S8 A64])
        (reg:DI 167)) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 167)
        (nil)))
(insn 22 21 24 2 (parallel [
            (set (reg:DI 135 [ size.4_59 ])
                (mult:DI (reg:DI 134 [ stride.2_56 ])
                    (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [2 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":1 349 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 24 22 23 2 (set (reg:DI 168)
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 23 24 25 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 135 [ size.4_59 ])
            (const_int 0 [0]))) "CALPOT2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 25 23 27 2 (set (reg:DI 136 [ size.4_60 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 135 [ size.4_59 ])
            (reg:DI 168))) "CALPOT2.f":1 1003 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 168)
        (expr_list:REG_DEAD (reg:DI 135 [ size.4_59 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 27 25 28 2 (set (reg:DI 89 [ size.15_3 ])
        (reg:DI 136 [ size.4_60 ])) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 136 [ size.4_60 ])
        (nil)))
(insn 28 27 29 2 (set (subreg:DI (reg:TI 90 [ _4 ]) 0)
        (reg:DI 89 [ size.15_3 ])) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89 [ size.15_3 ])
        (nil)))
(insn 29 28 33 2 (set (subreg:DI (reg:TI 90 [ _4 ]) 8)
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 90 [ _4 ])
        (nil)))
(insn 33 29 34 2 (set (reg:DI 140 [ offset.3_64 ])
        (not:DI (reg:DI 134 [ stride.2_56 ]))) "CALPOT2.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 34 33 35 2 (set (reg/f:DI 169)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 im+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 35 34 36 2 (set (reg:SI 92 [ _6 ])
        (mem:SI (reg/f:DI 169) [1 *im_53(D)+0 S4 A32])) "CALPOT2.f":1 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 169)
        (nil)))
(insn 36 35 37 2 (set (reg:DI 170)
        (sign_extend:DI (reg:SI 92 [ _6 ]))) "CALPOT2.f":1 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 92 [ _6 ])
        (nil)))
(insn 37 36 38 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.10+0 S8 A64])
        (reg:DI 170)) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 170)
        (nil)))
(insn 38 37 40 2 (set (reg:DI 141 [ stride.12_66 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 ubound.10+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 40 38 39 2 (set (reg:DI 171)
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 39 40 41 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 141 [ stride.12_66 ])
            (const_int 0 [0]))) "CALPOT2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 41 39 42 2 (set (reg:DI 142 [ stride.12_67 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 141 [ stride.12_66 ])
            (reg:DI 171))) "CALPOT2.f":1 1003 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 171)
        (expr_list:REG_DEAD (reg:DI 141 [ stride.12_66 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 42 41 43 2 (set (reg/f:DI 172)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [5 jm+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:SI 93 [ _7 ])
        (mem:SI (reg/f:DI 172) [1 *jm_57(D)+0 S4 A32])) "CALPOT2.f":1 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 172)
        (nil)))
(insn 44 43 45 2 (set (reg:DI 173)
        (sign_extend:DI (reg:SI 93 [ _7 ]))) "CALPOT2.f":1 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 93 [ _7 ])
        (nil)))
(insn 45 44 46 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -40 [0xffffffffffffffd8])) [2 ubound.11+0 S8 A64])
        (reg:DI 173)) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 173)
        (nil)))
(insn 46 45 48 2 (parallel [
            (set (reg:DI 143 [ size.14_69 ])
                (mult:DI (reg:DI 142 [ stride.12_67 ])
                    (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -40 [0xffffffffffffffd8])) [2 ubound.11+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":1 349 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 48 46 47 2 (set (reg:DI 174)
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 47 48 49 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 143 [ size.14_69 ])
            (const_int 0 [0]))) "CALPOT2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 49 47 51 2 (set (reg:DI 144 [ size.14_70 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 143 [ size.14_69 ])
            (reg:DI 174))) "CALPOT2.f":1 1003 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 174)
        (expr_list:REG_DEAD (reg:DI 143 [ size.14_69 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 51 49 52 2 (set (reg:DI 94 [ size.17_8 ])
        (reg:DI 144 [ size.14_70 ])) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 144 [ size.14_70 ])
        (nil)))
(insn 52 51 53 2 (set (subreg:DI (reg:TI 95 [ _9 ]) 0)
        (reg:DI 94 [ size.17_8 ])) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94 [ size.17_8 ])
        (nil)))
(insn 53 52 57 2 (set (subreg:DI (reg:TI 95 [ _9 ]) 8)
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 95 [ _9 ])
        (nil)))
(insn 57 53 58 2 (set (reg:DI 148 [ offset.13_74 ])
        (not:DI (reg:DI 142 [ stride.12_67 ]))) "CALPOT2.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 58 57 59 2 (set (reg/f:DI 175)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 im+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 59 58 60 2 (set (reg:SI 97 [ _11 ])
        (mem:SI (reg/f:DI 175) [1 *im_53(D)+0 S4 A32])) "CALPOT2.f":1 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 175)
        (nil)))
(insn 60 59 61 2 (set (reg:DI 176)
        (sign_extend:DI (reg:SI 97 [ _11 ]))) "CALPOT2.f":1 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 97 [ _11 ])
        (nil)))
(insn 61 60 62 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.5+0 S8 A64])
        (reg:DI 176)) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 176)
        (nil)))
(insn 62 61 64 2 (set (reg:DI 149 [ stride.7_76 ])
        (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.5+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 64 62 63 2 (set (reg:DI 177)
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 63 64 65 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 149 [ stride.7_76 ])
            (const_int 0 [0]))) "CALPOT2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 65 63 66 2 (set (reg:DI 150 [ stride.7_77 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 149 [ stride.7_76 ])
            (reg:DI 177))) "CALPOT2.f":1 1003 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 177)
        (expr_list:REG_DEAD (reg:DI 149 [ stride.7_76 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 66 65 67 2 (set (reg/f:DI 178)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -104 [0xffffffffffffff98])) [5 jm+0 S8 A64])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 67 66 68 2 (set (reg:SI 98 [ _12 ])
        (mem:SI (reg/f:DI 178) [1 *jm_57(D)+0 S4 A32])) "CALPOT2.f":1 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 178)
        (nil)))
(insn 68 67 69 2 (set (reg:DI 179)
        (sign_extend:DI (reg:SI 98 [ _12 ]))) "CALPOT2.f":1 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 98 [ _12 ])
        (nil)))
(insn 69 68 70 2 (set (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -56 [0xffffffffffffffc8])) [2 ubound.6+0 S8 A64])
        (reg:DI 179)) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 179)
        (nil)))
(insn 70 69 72 2 (parallel [
            (set (reg:DI 151 [ size.9_79 ])
                (mult:DI (reg:DI 150 [ stride.7_77 ])
                    (mem/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -56 [0xffffffffffffffc8])) [2 ubound.6+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":1 349 {*muldi3_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 72 70 71 2 (set (reg:DI 180)
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (nil))
(insn 71 72 73 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 151 [ size.9_79 ])
            (const_int 0 [0]))) "CALPOT2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 73 71 75 2 (set (reg:DI 152 [ size.9_80 ])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 151 [ size.9_79 ])
            (reg:DI 180))) "CALPOT2.f":1 1003 {*movdicc_noc}
     (expr_list:REG_DEAD (reg:DI 180)
        (expr_list:REG_DEAD (reg:DI 151 [ size.9_79 ])
            (expr_list:REG_DEAD (reg:CCGOC 17 flags)
                (nil)))))
(insn 75 73 76 2 (set (reg:DI 99 [ size.19_13 ])
        (reg:DI 152 [ size.9_80 ])) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 152 [ size.9_80 ])
        (nil)))
(insn 76 75 77 2 (set (subreg:DI (reg:TI 100 [ _14 ]) 0)
        (reg:DI 99 [ size.19_13 ])) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99 [ size.19_13 ])
        (nil)))
(insn 77 76 81 2 (set (subreg:DI (reg:TI 100 [ _14 ]) 8)
        (const_int 0 [0])) "CALPOT2.f":1 85 {*movdi_internal}
     (expr_list:REG_UNUSED (reg:TI 100 [ _14 ])
        (nil)))
(insn 81 77 82 2 (set (reg:DI 156 [ offset.8_84 ])
        (not:DI (reg:DI 150 [ stride.7_77 ]))) "CALPOT2.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 82 81 83 2 (set (reg:SI 157 [ _85 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9ef44b8870 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALPOT2.f":55 86 {*movsi_internal}
     (nil))
(insn 83 82 84 2 (set (reg:SI 158 [ _86 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f9ef44b8870 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALPOT2.f":55 86 {*movsi_internal}
     (nil))
(insn 84 83 179 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 157 [ _85 ])) "CALPOT2.f":55 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 157 [ _85 ])
        (nil)))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL)
;;  pred:       2 (FALLTHRU)
;;              10 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 158
;; lr  def 	 17 [flags] 159 181
(code_label 179 84 85 3 8 (nil) [1 uses])
(note 85 179 86 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 158 [ _86 ]))) "CALPOT2.f":55 11 {*cmpsi_1}
     (nil))
(insn 87 86 88 3 (set (reg:QI 181)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALPOT2.f":55 678 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 88 87 89 3 (set (reg:SI 159 [ _88 ])
        (zero_extend:SI (reg:QI 181))) "CALPOT2.f":55 140 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 181)
        (nil)))
(insn 89 88 90 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 159 [ _88 ])
            (const_int 0 [0]))) "CALPOT2.f":55 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 159 [ _88 ])
        (nil)))
(jump_insn 90 89 91 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 200)
            (pc))) "CALPOT2.f":55 682 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 200)
;;  succ:       12
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 160 182
(note 91 90 92 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 92 91 93 4 (set (reg/f:DI 182)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -96 [0xffffffffffffffa0])) [5 im+0 S8 A64])) "CALPOT2.f":56 85 {*movdi_internal}
     (nil))
(insn 93 92 94 4 (set (reg:SI 160 [ _89 ])
        (mem:SI (reg/f:DI 182) [1 *im_53(D)+0 S4 A32])) "CALPOT2.f":56 86 {*movsi_internal}
     (expr_list:REG_DEAD (reg/f:DI 182)
        (nil)))
(insn 94 93 173 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALPOT2.f":56 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158 160

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL)
;;  pred:       4 (FALLTHRU)
;;              9 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158 160
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 160
;; lr  def 	 17 [flags] 161 183
(code_label 173 94 95 5 7 (nil) [1 uses])
(note 95 173 96 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (reg:SI 160 [ _89 ]))) "CALPOT2.f":56 11 {*cmpsi_1}
     (nil))
(insn 97 96 98 5 (set (reg:QI 183)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALPOT2.f":56 678 {*setcc_qi}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil)))
(insn 98 97 99 5 (set (reg:SI 161 [ _91 ])
        (zero_extend:SI (reg:QI 183))) "CALPOT2.f":56 140 {*zero_extendqisi2}
     (expr_list:REG_DEAD (reg:QI 183)
        (nil)))
(insn 99 98 100 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 161 [ _91 ])
            (const_int 0 [0]))) "CALPOT2.f":56 7 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 161 [ _91 ])
        (nil)))
(jump_insn 100 99 101 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 203)
            (pc))) "CALPOT2.f":56 682 {*jcc}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 203)
;;  succ:       13
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158 160

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158 160
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140
;; lr  def 	 17 [flags] 102 103 104 105 106 107 108 184 185 186 187 188
(note 101 100 102 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 6 (set (reg:SI 184)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPOT2.f":57 86 {*movsi_internal}
     (nil))
(insn 103 102 104 6 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 184))) "CALPOT2.f":57 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 184)
        (nil)))
(insn 104 103 105 6 (parallel [
            (set (reg:DI 103 [ _17 ])
                (mult:DI (reg:DI 134 [ stride.2_56 ])
                    (reg:DI 102 [ _16 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":57 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 102 [ _16 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 105 104 106 6 (parallel [
            (set (reg:DI 104 [ _18 ])
                (plus:DI (reg:DI 140 [ offset.3_64 ])
                    (reg:DI 103 [ _17 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":57 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 103 [ _17 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 106 105 107 6 (set (reg:SI 185)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPOT2.f":57 86 {*movsi_internal}
     (nil))
(insn 107 106 108 6 (set (reg:DI 105 [ _19 ])
        (sign_extend:DI (reg:SI 185))) "CALPOT2.f":57 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 185)
        (nil)))
(insn 108 107 109 6 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 104 [ _18 ])
                    (reg:DI 105 [ _19 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":57 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 105 [ _19 ])
        (expr_list:REG_DEAD (reg:DI 104 [ _18 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 109 108 110 6 (set (reg/f:DI 186)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 p1d+0 S8 A64])) "CALPOT2.f":57 85 {*movdi_internal}
     (nil))
(insn 110 109 111 6 (set (reg:SF 107 [ _21 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 186)) [3 *p1d_92(D) S4 A32])) "CALPOT2.f":57 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 186)
        (expr_list:REG_DEAD (reg:DI 106 [ _20 ])
            (nil))))
(insn 111 110 112 6 (set (reg:V4SF 187)
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S16 A128])) "CALPOT2.f":57 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 112 111 113 6 (parallel [
            (set (reg:SF 108 [ _22 ])
                (abs:SF (reg:SF 107 [ _21 ])))
            (use (reg:V4SF 187))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":57 507 {*absnegsf2}
     (expr_list:REG_DEAD (reg:V4SF 187)
        (expr_list:REG_DEAD (reg:SF 107 [ _21 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (expr_list:REG_EQUAL (abs:SF (reg:SF 107 [ _21 ]))
                    (nil))))))
(insn 113 112 114 6 (set (reg:SF 188)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALPOT2.f":57 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 114 113 115 6 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 108 [ _22 ])
            (reg:SF 188))) "CALPOT2.f":57 53 {*cmpisf}
     (expr_list:REG_DEAD (reg:SF 188)
        (expr_list:REG_DEAD (reg:SF 108 [ _22 ])
            (nil))))
(jump_insn 115 114 119 6 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 192)
            (pc))) "CALPOT2.f":57 682 {*jcc}
     (expr_list:REG_DEAD (reg:CCFP 17 flags)
        (nil))
 -> 192)
;;  succ:       7 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158 160

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158 160
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 127 162 189 190 191 192 193 194 195 196 197 198 199
(note 119 115 120 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 120 119 121 7 (set (reg:SI 189)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPOT2.f":58 86 {*movsi_internal}
     (nil))
(insn 121 120 122 7 (set (reg:DI 109 [ _23 ])
        (sign_extend:DI (reg:SI 189))) "CALPOT2.f":58 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 189)
        (nil)))
(insn 122 121 123 7 (parallel [
            (set (reg:DI 110 [ _24 ])
                (mult:DI (reg:DI 134 [ stride.2_56 ])
                    (reg:DI 109 [ _23 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":58 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 109 [ _23 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 123 122 124 7 (parallel [
            (set (reg:DI 111 [ _25 ])
                (plus:DI (reg:DI 140 [ offset.3_64 ])
                    (reg:DI 110 [ _24 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":58 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 110 [ _24 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 124 123 125 7 (set (reg:SI 190)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPOT2.f":58 86 {*movsi_internal}
     (nil))
(insn 125 124 126 7 (set (reg:DI 112 [ _26 ])
        (sign_extend:DI (reg:SI 190))) "CALPOT2.f":58 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 190)
        (nil)))
(insn 126 125 127 7 (parallel [
            (set (reg:DI 113 [ _27 ])
                (plus:DI (reg:DI 111 [ _25 ])
                    (reg:DI 112 [ _26 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":58 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 112 [ _26 ])
        (expr_list:REG_DEAD (reg:DI 111 [ _25 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 127 126 128 7 (set (reg/f:DI 191)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [4 p1d+0 S8 A64])) "CALPOT2.f":58 85 {*movdi_internal}
     (nil))
(insn 128 127 129 7 (set (reg:SF 114 [ _28 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 113 [ _27 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 191)) [3 *p1d_92(D) S4 A32])) "CALPOT2.f":58 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 191)
        (expr_list:REG_DEAD (reg:DI 113 [ _27 ])
            (nil))))
(insn 129 128 130 7 (set (reg:SF 192)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALPOT2.f":58 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+5 [0x0.c35p+17])
        (nil)))
(insn 130 129 131 7 (set (reg:SF 115 [ _29 ])
        (div:SF (reg:SF 192)
            (reg:SF 114 [ _28 ]))) "CALPOT2.f":58 841 {*fop_sf_1}
     (expr_list:REG_DEAD (reg:SF 192)
        (expr_list:REG_DEAD (reg:SF 114 [ _28 ])
            (nil))))
(insn 131 130 132 7 (set (reg:SF 162 [ _93 ])
        (reg:SF 115 [ _29 ])) "CALPOT2.f":58 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 115 [ _29 ])
        (nil)))
(insn 132 131 133 7 (set (reg:SF 22 xmm1)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALPOT2.f":58 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.8589642047882080078125e-1 [0x0.926104p-1])
        (nil)))
(insn 133 132 134 7 (set (reg:SF 21 xmm0)
        (reg:SF 162 [ _93 ])) "CALPOT2.f":58 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 162 [ _93 ])
        (nil)))
(call_insn/u 134 133 135 7 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("powf") [flags 0x41]  <function_decl 0x7f9ef4336100 __builtin_powf>) [0 __builtin_powf S1 A8])
            (const_int 0 [0]))) "CALPOT2.f":58 700 {*call_value}
     (expr_list:REG_DEAD (reg:SF 22 xmm1)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (expr_list:SF (use (reg:SF 22 xmm1))
            (nil))))
(insn 135 134 136 7 (set (reg:SF 193)
        (reg:SF 21 xmm0)) "CALPOT2.f":58 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 21 xmm0)
        (nil)))
(insn 136 135 137 7 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -60 [0xffffffffffffffc4])) [3 fac+0 S4 A32])
        (reg:SF 193)) "CALPOT2.f":58 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 193)
        (nil)))
(insn 137 136 138 7 (set (reg:SI 194)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPOT2.f":59 86 {*movsi_internal}
     (nil))
(insn 138 137 139 7 (set (reg:DI 116 [ _30 ])
        (sign_extend:DI (reg:SI 194))) "CALPOT2.f":59 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 194)
        (nil)))
(insn 139 138 140 7 (parallel [
            (set (reg:DI 117 [ _31 ])
                (mult:DI (reg:DI 150 [ stride.7_77 ])
                    (reg:DI 116 [ _30 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":59 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 116 [ _30 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 140 139 141 7 (parallel [
            (set (reg:DI 118 [ _32 ])
                (plus:DI (reg:DI 156 [ offset.8_84 ])
                    (reg:DI 117 [ _31 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":59 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 117 [ _31 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 141 140 142 7 (set (reg:SI 195)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPOT2.f":59 86 {*movsi_internal}
     (nil))
(insn 142 141 143 7 (set (reg:DI 119 [ _33 ])
        (sign_extend:DI (reg:SI 195))) "CALPOT2.f":59 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 195)
        (nil)))
(insn 143 142 144 7 (parallel [
            (set (reg:DI 120 [ _34 ])
                (plus:DI (reg:DI 118 [ _32 ])
                    (reg:DI 119 [ _33 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":59 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 119 [ _33 ])
        (expr_list:REG_DEAD (reg:DI 118 [ _32 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 144 143 145 7 (set (reg/f:DI 196)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [4 t1d+0 S8 A64])) "CALPOT2.f":59 85 {*movdi_internal}
     (nil))
(insn 145 144 146 7 (set (reg:SF 121 [ _35 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 120 [ _34 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 196)) [3 *t1d_95(D) S4 A32])) "CALPOT2.f":59 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 196)
        (expr_list:REG_DEAD (reg:DI 120 [ _34 ])
            (nil))))
(insn 146 145 147 7 (set (reg:SI 197)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPOT2.f":59 86 {*movsi_internal}
     (nil))
(insn 147 146 148 7 (set (reg:DI 122 [ _36 ])
        (sign_extend:DI (reg:SI 197))) "CALPOT2.f":59 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 197)
        (nil)))
(insn 148 147 149 7 (parallel [
            (set (reg:DI 123 [ _37 ])
                (mult:DI (reg:DI 142 [ stride.12_67 ])
                    (reg:DI 122 [ _36 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":59 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 122 [ _36 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 149 148 150 7 (parallel [
            (set (reg:DI 124 [ _38 ])
                (plus:DI (reg:DI 148 [ offset.13_74 ])
                    (reg:DI 123 [ _37 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":59 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 123 [ _37 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 150 149 151 7 (set (reg:SI 198)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPOT2.f":59 86 {*movsi_internal}
     (nil))
(insn 151 150 152 7 (set (reg:DI 125 [ _39 ])
        (sign_extend:DI (reg:SI 198))) "CALPOT2.f":59 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 198)
        (nil)))
(insn 152 151 153 7 (parallel [
            (set (reg:DI 126 [ _40 ])
                (plus:DI (reg:DI 124 [ _38 ])
                    (reg:DI 125 [ _39 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":59 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 125 [ _39 ])
        (expr_list:REG_DEAD (reg:DI 124 [ _38 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 153 152 154 7 (set (reg:SF 127 [ _41 ])
        (mult:SF (reg:SF 121 [ _35 ])
            (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [3 fac+0 S4 A32]))) "CALPOT2.f":59 838 {*fop_sf_comm}
     (expr_list:REG_DEAD (reg:SF 121 [ _35 ])
        (nil)))
(insn 154 153 155 7 (set (reg/f:DI 199)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [4 theta+0 S8 A64])) "CALPOT2.f":59 85 {*movdi_internal}
     (nil))
(insn 155 154 193 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 126 [ _40 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 199)) [3 *theta_96(D) S4 A32])
        (reg:SF 127 [ _41 ])) "CALPOT2.f":59 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg/f:DI 199)
        (expr_list:REG_DEAD (reg:SF 127 [ _41 ])
            (expr_list:REG_DEAD (reg:DI 126 [ _40 ])
                (nil)))))
(jump_insn 193 155 194 7 (set (pc)
        (label_ref 170)) 683 {jump}
     (nil)
 -> 170)
;;  succ:       9 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158 160

(barrier 194 193 192)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL)
;;  pred:       6
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158 160
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 142 148
;; lr  def 	 17 [flags] 128 129 130 131 132 200 201 202 203
(code_label 192 194 159 8 11 (nil) [1 uses])
(note 159 192 160 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 160 159 161 8 (set (reg:SI 200)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALPOT2.f":61 86 {*movsi_internal}
     (nil))
(insn 161 160 162 8 (set (reg:DI 128 [ _42 ])
        (sign_extend:DI (reg:SI 200))) "CALPOT2.f":61 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 200)
        (nil)))
(insn 162 161 163 8 (parallel [
            (set (reg:DI 129 [ _43 ])
                (mult:DI (reg:DI 142 [ stride.12_67 ])
                    (reg:DI 128 [ _42 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":61 349 {*muldi3_1}
     (expr_list:REG_DEAD (reg:DI 128 [ _42 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 163 162 164 8 (parallel [
            (set (reg:DI 130 [ _44 ])
                (plus:DI (reg:DI 148 [ offset.13_74 ])
                    (reg:DI 129 [ _43 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":61 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 129 [ _43 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 164 163 165 8 (set (reg:SI 201)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALPOT2.f":61 86 {*movsi_internal}
     (nil))
(insn 165 164 166 8 (set (reg:DI 131 [ _45 ])
        (sign_extend:DI (reg:SI 201))) "CALPOT2.f":61 149 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 201)
        (nil)))
(insn 166 165 167 8 (parallel [
            (set (reg:DI 132 [ _46 ])
                (plus:DI (reg:DI 130 [ _44 ])
                    (reg:DI 131 [ _45 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":61 222 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 131 [ _45 ])
        (expr_list:REG_DEAD (reg:DI 130 [ _44 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 167 166 168 8 (set (reg/f:DI 202)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -88 [0xffffffffffffffa8])) [4 theta+0 S8 A64])) "CALPOT2.f":61 85 {*movdi_internal}
     (nil))
(insn 168 167 169 8 (set (reg:SF 203)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALPOT2.f":61 131 {*movsf_internal}
     (nil))
(insn 169 168 170 8 (set (mem:SF (plus:DI (mult:DI (reg:DI 132 [ _46 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 202)) [3 *theta_96(D) S4 A32])
        (reg:SF 203)) "CALPOT2.f":61 131 {*movsf_internal}
     (expr_list:REG_DEAD (reg:SF 203)
        (expr_list:REG_DEAD (reg/f:DI 202)
            (expr_list:REG_DEAD (reg:DI 132 [ _46 ])
                (nil)))))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158 160

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 13, flags: (RTL)
;;  pred:       8 (FALLTHRU)
;;              7 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158 160
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 170 169 171 9 6 (nil) [1 uses])
(note 171 170 172 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 172 171 195 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":56 221 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 195 172 196 9 (set (pc)
        (label_ref 173)) "CALPOT2.f":56 683 {jump}
     (nil)
 -> 173)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158 160

(barrier 196 195 203)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 9, next block 10, flags: (RTL)
;;  pred:       5
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 203 196 202 13 13 (nil) [1 uses])
(note 202 203 204 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 204 202 176 13 (const_int 0 [0]) "CALPOT2.f":57 718 {nop}
     (nil))
;;  succ:       10 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158

;; basic block 10, loop depth 0, maybe hot
;;  prev block 13, next block 12, flags: (RTL)
;;  pred:       13 [always]  (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 176 204 177 10 3 (nil) [0 uses])
(note 177 176 178 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 178 177 197 10 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALPOT2.f":55 221 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(jump_insn 197 178 198 10 (set (pc)
        (label_ref 179)) "CALPOT2.f":55 683 {jump}
     (nil)
 -> 179)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 134 140 142 148 150 156 158

(barrier 198 197 200)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 10, next block 11, flags: (RTL)
;;  pred:       3
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 200 198 199 12 12 (nil) [1 uses])
(note 199 200 201 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 201 199 182 12 (const_int 0 [0]) "CALPOT2.f":56 718 {nop}
     (nil))
;;  succ:       11 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, maybe hot
;;  prev block 12, next block 1, flags: (RTL)
;;  pred:       12 [always]  (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 182 201 183 11 2 (nil) [0 uses])
(note 183 182 191 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 191 183 0 11 (const_int 0 [0]) "CALPOT2.f":73 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

