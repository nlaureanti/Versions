
;; Function collect (collect_, funcdef_no=0, decl_uid=3769, cgraph_uid=0, symbol_order=0)

starting the processing of deferred insns
ending the processing of deferred insns


collect

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 17 [flags] 37 [r8] 38 [r9]
;;  ref usage 	r0={3d,1u} r1={3d,1u} r2={3d,1u} r4={3d,1u} r5={3d,2u} r6={1d,12u} r7={6d,19u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,11u} r17={24d,6u} r18={1d} r19={1d} r20={1d,28u,1e} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={3d,1u} r38={3d,1u} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r77={1d} r78={1d} r79={1d} r80={1d} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u,1e} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} r118={1d,1u} r119={1d,1u} r120={1d,1u} r121={1d,1u} r122={1d,1u} 
;;    total ref usage 284{162d,120u,2e} in 69{68 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 a+0 S8 A64])
        (reg:DI 5 di [ a ])) "COLLECT.f":1 85 {*movdi_internal}
     (nil))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:SI 87 [ _1 ])
        (mem/c:SI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe1b632c2d0 parallel>) [1 parallel.num_procs+0 S4 A128])) "COLLECT.f":1 86 {*movsi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 87 [ _1 ])
            (const_int 1 [0x1]))) "COLLECT.f":44 11 {*cmpsi_1}
     (nil))
(jump_insn 8 7 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 94)
            (pc))) "COLLECT.f":44 682 {*jcc}
     (nil)
 -> 94)
;;  succ:       10
;;              3 (FALLTHRU)

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 13 8 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:SI 88 [ _2 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe1b632c2d0 parallel>)
                    (const_int 4 [0x4]))) [1 parallel.me+0 S4 A32])) "COLLECT.f":1 86 {*movsi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 89 [ _3 ])
        (sign_extend:DI (reg:SI 88 [ _2 ]))) "COLLECT.f":47 149 {*extendsidi2_rex64}
     (nil))
(insn 16 15 17 3 (parallel [
            (set (reg:DI 110)
                (plus:DI (reg:DI 89 [ _3 ])
                    (const_int 10 [0xa])))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":47 222 {*adddi_1}
     (nil))
(insn 17 16 18 3 (parallel [
            (set (reg:DI 111)
                (ashift:DI (reg:DI 110)
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":47 551 {*ashldi3_1}
     (nil))
(insn 18 17 19 3 (parallel [
            (set (reg/f:DI 90 [ _4 ])
                (plus:DI (reg:DI 111)
                    (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe1b632c2d0 parallel>)))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":47 222 {*adddi_1}
     (nil))
(insn 19 18 20 3 (set (reg:SI 91 [ _5 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe1b632c2d0 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "COLLECT.f":1 86 {*movsi_internal}
     (nil))
(insn 20 19 21 3 (set (reg:DI 92 [ _6 ])
        (sign_extend:DI (reg:SI 91 [ _5 ]))) "COLLECT.f":47 149 {*extendsidi2_rex64}
     (nil))
(insn 21 20 22 3 (parallel [
            (set (reg:DI 93 [ _7 ])
                (plus:DI (reg:DI 92 [ _6 ])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":47 222 {*adddi_1}
     (nil))
(insn 22 21 23 3 (parallel [
            (set (reg:DI 94 [ _8 ])
                (mult:DI (reg:DI 93 [ _7 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":47 349 {*muldi3_1}
     (nil))
(insn 23 22 24 3 (parallel [
            (set (reg:DI 112)
                (ashift:DI (reg:DI 94 [ _8 ])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":47 551 {*ashldi3_1}
     (nil))
(insn 24 23 25 3 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 a+0 S8 A64])) "COLLECT.f":47 85 {*movdi_internal}
     (nil))
(insn 25 24 26 3 (parallel [
            (set (reg/f:DI 95 [ _9 ])
                (plus:DI (reg:DI 112)
                    (reg/f:DI 113)))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":47 222 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [2 a+0 S8 A64])
            (reg:DI 112))
        (nil)))
(insn 26 25 27 3 (parallel [
            (set (reg:DI 114)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":47 222 {*adddi_1}
     (nil))
(insn 27 26 28 3 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (reg:DI 114)) "COLLECT.f":47 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 28 27 29 3 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fe1b5f4c090 *.LC1>)) "COLLECT.f":47 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 29 28 30 3 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fe1b5f4c090 *.LC1>)) "COLLECT.f":47 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 30 29 31 3 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [5  S8 A64])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fe1b5f4c000 *.LC0>)) "COLLECT.f":47 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 31 30 32 3 (set (reg:DI 38 r9)
        (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe1b632c2d0 parallel>)
                (const_int 4136 [0x1028])))) "COLLECT.f":47 85 {*movdi_internal}
     (nil))
(insn 32 31 33 3 (set (reg:DI 37 r8)
        (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe1b632c2d0 parallel>)
                (const_int 40 [0x28])))) "COLLECT.f":47 85 {*movdi_internal}
     (nil))
(insn 33 32 34 3 (set (reg:DI 2 cx)
        (symbol_ref:DI ("b.3886") [flags 0x202]  <var_decl 0x7fe1b632cb40 b>)) "COLLECT.f":47 85 {*movdi_internal}
     (nil))
(insn 34 33 35 3 (set (reg:DI 1 dx)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fe1b5f4c000 *.LC0>)) "COLLECT.f":47 85 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (reg:DI 4 si)
        (reg/f:DI 90 [ _4 ])) "COLLECT.f":47 85 {*movdi_internal}
     (nil))
(insn 36 35 37 3 (set (reg:DI 5 di)
        (reg/f:DI 95 [ _9 ])) "COLLECT.f":47 85 {*movdi_internal}
     (nil))
(insn 37 36 38 3 (set (reg:QI 0 ax)
        (const_int 0 [0])) "COLLECT.f":47 88 {*movqi_internal}
     (nil))
(call_insn 38 37 39 3 (call (mem:QI (symbol_ref:DI ("mpi_gatherv_") [flags 0x41]  <function_decl 0x7fe1b6302600 mpi_gatherv>) [0 mpi_gatherv S1 A8])
        (const_int 32 [0x20])) "COLLECT.f":47 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 39 38 40 3 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 32 [0x20])))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":47 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 40 39 41 3 (set (reg:SI 96 [ _10 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe1b632c2d0 parallel>)
                    (const_int 4 [0x4]))) [1 parallel.me+0 S4 A32])) "COLLECT.f":1 86 {*movsi_internal}
     (nil))
(insn 41 40 42 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 96 [ _10 ])
            (const_int 0 [0]))) "COLLECT.f":48 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 42 41 43 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 94)
            (pc))) "COLLECT.f":48 682 {*jcc}
     (nil)
 -> 94)
;;  succ:       4 (FALLTHRU)
;;              10

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 43 42 44 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 44 43 85 4 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (const_int 1 [0x1])) "COLLECT.f":49 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              9 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 85 44 45 5 8 (nil) [1 uses])
(note 45 85 46 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 249 [0xf9]))) "COLLECT.f":49 11 {*cmpsi_1}
     (nil))
(insn 47 46 48 5 (set (reg:QI 115)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "COLLECT.f":49 678 {*setcc_qi}
     (nil))
(insn 48 47 49 5 (set (reg:SI 108 [ _33 ])
        (zero_extend:SI (reg:QI 115))) "COLLECT.f":49 140 {*zero_extendqisi2}
     (nil))
(insn 49 48 50 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 108 [ _33 ])
            (const_int 0 [0]))) "COLLECT.f":49 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 50 49 51 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 101)
            (pc))) "COLLECT.f":49 682 {*jcc}
     (nil)
 -> 101)
;;  succ:       11
;;              6 (FALLTHRU)

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 51 50 52 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 79 6 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "COLLECT.f":50 86 {*movsi_internal}
     (nil))
;;  succ:       7 (FALLTHRU)

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;;              8 [always] 
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 79 52 53 7 7 (nil) [1 uses])
(note 53 79 54 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 54 53 55 7 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "COLLECT.f":50 11 {*cmpsi_1}
     (nil))
(insn 55 54 56 7 (set (reg:QI 116)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "COLLECT.f":50 678 {*setcc_qi}
     (nil))
(insn 56 55 57 7 (set (reg:SI 109 [ _35 ])
        (zero_extend:SI (reg:QI 116))) "COLLECT.f":50 140 {*zero_extendqisi2}
     (nil))
(insn 57 56 58 7 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 109 [ _35 ])
            (const_int 0 [0]))) "COLLECT.f":50 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 58 57 59 7 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 104)
            (pc))) "COLLECT.f":50 682 {*jcc}
     (nil)
 -> 104)
;;  succ:       12
;;              8 (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(note 59 58 60 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 8 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "COLLECT.f":51 86 {*movsi_internal}
     (nil))
(insn 61 60 62 8 (set (reg:DI 97 [ _11 ])
        (sign_extend:DI (reg:SI 117))) "COLLECT.f":51 149 {*extendsidi2_rex64}
     (nil))
(insn 62 61 63 8 (parallel [
            (set (reg:DI 98 [ _12 ])
                (mult:DI (reg:DI 97 [ _11 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":51 349 {*muldi3_1}
     (nil))
(insn 63 62 64 8 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "COLLECT.f":51 86 {*movsi_internal}
     (nil))
(insn 64 63 65 8 (set (reg:DI 99 [ _13 ])
        (sign_extend:DI (reg:SI 118))) "COLLECT.f":51 149 {*extendsidi2_rex64}
     (nil))
(insn 65 64 66 8 (parallel [
            (set (reg:DI 100 [ _14 ])
                (plus:DI (reg:DI 98 [ _12 ])
                    (reg:DI 99 [ _13 ])))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":51 222 {*adddi_1}
     (nil))
(insn 66 65 67 8 (parallel [
            (set (reg:DI 101 [ _15 ])
                (plus:DI (reg:DI 100 [ _14 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":51 222 {*adddi_1}
     (nil))
(insn 67 66 68 8 (set (reg:SI 119)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "COLLECT.f":51 86 {*movsi_internal}
     (nil))
(insn 68 67 69 8 (set (reg:DI 102 [ _16 ])
        (sign_extend:DI (reg:SI 119))) "COLLECT.f":51 149 {*extendsidi2_rex64}
     (nil))
(insn 69 68 70 8 (parallel [
            (set (reg:DI 103 [ _17 ])
                (mult:DI (reg:DI 102 [ _16 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":51 349 {*muldi3_1}
     (nil))
(insn 70 69 71 8 (set (reg:SI 120)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "COLLECT.f":51 86 {*movsi_internal}
     (nil))
(insn 71 70 72 8 (set (reg:DI 104 [ _18 ])
        (sign_extend:DI (reg:SI 120))) "COLLECT.f":51 149 {*extendsidi2_rex64}
     (nil))
(insn 72 71 73 8 (parallel [
            (set (reg:DI 105 [ _19 ])
                (plus:DI (reg:DI 103 [ _17 ])
                    (reg:DI 104 [ _18 ])))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":51 222 {*adddi_1}
     (nil))
(insn 73 72 74 8 (parallel [
            (set (reg:DI 106 [ _20 ])
                (plus:DI (reg:DI 105 [ _19 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":51 222 {*adddi_1}
     (nil))
(insn 74 73 75 8 (set (reg/f:DI 121)
        (symbol_ref:DI ("b.3886") [flags 0x202]  <var_decl 0x7fe1b632cb40 b>)) "COLLECT.f":51 85 {*movdi_internal}
     (nil))
(insn 75 74 76 8 (set (reg:SF 107 [ _21 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 101 [ _15 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 121)) [4 b S4 A32])) "COLLECT.f":51 131 {*movsf_internal}
     (nil))
(insn 76 75 77 8 (set (reg/f:DI 122)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 a+0 S8 A64])) "COLLECT.f":51 85 {*movdi_internal}
     (nil))
(insn 77 76 78 8 (set (mem:SF (plus:DI (mult:DI (reg:DI 106 [ _20 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 122)) [4 *a_30(D) S4 A32])
        (reg:SF 107 [ _21 ])) "COLLECT.f":51 131 {*movsf_internal}
     (nil))
(insn 78 77 96 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":50 221 {*addsi_1}
     (nil))
(jump_insn 96 78 97 8 (set (pc)
        (label_ref 79)) "COLLECT.f":50 -1
     (nil)
 -> 79)
;;  succ:       7 [always] 

(barrier 97 96 104)
;; basic block 12, loop depth 0, maybe hot
;;  prev block 8, next block 9, flags: (NEW, RTL, MODIFIED)
;;  pred:       7
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 104 97 103 12 10 (nil) [1 uses])
(note 103 104 105 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 105 103 82 12 (const_int 0 [0]) "COLLECT.f":51 -1
     (nil))
;;  succ:       9 [always]  (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 12, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       12 [always]  (FALLTHRU)
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 82 105 83 9 6 (nil) [0 uses])
(note 83 82 84 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 98 9 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "COLLECT.f":49 221 {*addsi_1}
     (nil))
(jump_insn 98 84 99 9 (set (pc)
        (label_ref 85)) "COLLECT.f":49 -1
     (nil)
 -> 85)
;;  succ:       5 [always] 

(barrier 99 98 101)
;; basic block 11, loop depth 0, maybe hot
;;  prev block 9, next block 10, flags: (NEW, RTL, MODIFIED)
;;  pred:       5
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 101 99 100 11 9 (nil) [1 uses])
(note 100 101 102 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 102 100 94 11 (const_int 0 [0]) "COLLECT.f":50 -1
     (nil))
;;  succ:       10 [always]  (FALLTHRU)

;; basic block 10, loop depth 0, maybe hot
;;  prev block 11, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       11 [always]  (FALLTHRU)
;;              2
;;              3
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
(code_label 94 102 95 10 1 (nil) [2 uses])
(note 95 94 0 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [always]  (FALLTHRU)

