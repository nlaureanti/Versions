
;; Function cetlih4 (cetlih4_, funcdef_no=0, decl_uid=3769, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=72, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=40, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) rm {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 23:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=734 from oldreg=453, assigning class GENERAL_REGS to r734
   23: {r734:DI=r734:DI*[frame:DI-0x38];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  962: r734:DI=r452:DI
    Inserting insn reload after:
  963: r453:DI=r734:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 25:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 30:  (0) r  (1) Z {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 34:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=735 from oldreg=458, assigning class GENERAL_REGS to r735
   34: r735:DI=~r735:DI
    Inserting insn reload before:
  964: r735:DI=r452:DI
    Inserting insn reload after:
  965: r458:DI=r735:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 35:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 38:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 39:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 40:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 41:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 43:  (0) rm  (1) re {*cmpdi_1}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 46:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=736 from oldreg=94, assigning class GENERAL_REGS to r736
   46: {r736:DI=r736:DI*r452:DI;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  966: r736:DI=r447:DI
    Inserting insn reload after:
  967: r94:DI=r736:DI

            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 47:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 48:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) rm  (1) re {*cmpdi_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 54:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 55:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 56:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 57:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 63:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 69:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 71:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 72:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 75:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 77:  (0) rm  (1) re {*cmpdi_1}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 80:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 81:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 82:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) rm  (1) re {*cmpdi_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 87:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 88:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 90:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 96:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 102:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 103:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 104:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 106:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 108:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 110:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 112:  (0) v  (1) r {*floatsisf2_mixed}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 113:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 114:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 115:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 116:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 121:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 125:  (0) r  (1) r  (2) le {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Small class reload: reject+=3
          alt=0,overall=21,losers=2,rld_nregs=2
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 126:  (0) rm  (1) 0 {ashrsi3_cvt}
      Creating newreg=737 from oldreg=510, assigning class GENERAL_REGS to r737
  126: {r737:SI=r737:SI>>0x1f;clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  968: r737:SI=r104:SI
    Inserting insn reload after:
  969: r510:SI=r737:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) =rm  (1) 0  (2) cI {*lshrsi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            alt=0,overall=8,losers=1 -- refuse
            1 Matching alt: reject+=2
            alt=1,overall=8,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) %0  (2) rme {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 129:  (0) =rm  (1) %0  (2) re {*andsi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 130:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=738 from oldreg=513, assigning class GENERAL_REGS to r738
  130: {r738:SI=r738:SI-r511:SI;clobber flags:CC;}
      REG_DEAD r513:SI
      REG_DEAD r511:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  970: r738:SI=r513:SI
    Inserting insn reload after:
  971: r514:SI=r738:SI

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 132:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 133:  (0) =rm  (1) 0  (2) re {*subsi_1}
      Creating newreg=739 from oldreg=515, assigning class GENERAL_REGS to r739
  133: {r739:SI=r739:SI-r105:SI;clobber flags:CC;}
      REG_DEAD r515:SI
      REG_DEAD r105:SI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  972: r739:SI=r515:SI
    Inserting insn reload after:
  973: r516:SI=r739:SI

            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 134:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 135:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 137:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 140:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 145:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 147:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 156:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 165:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 166:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 167:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 168:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 169
	 Choosing alt 0 in insn 169:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 170:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 171:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 172:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 173:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 175:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 176:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 178:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 179
	 Choosing alt 0 in insn 179:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 180:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 181:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 182:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 184:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 185:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 187:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 188
	 Choosing alt 0 in insn 188:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 189:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 190:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 191:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 193:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 194:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 196:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 197
	 Choosing alt 0 in insn 197:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 198:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 199:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 200:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 202:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 203:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 207:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 208:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 210:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 211
	 Choosing alt 0 in insn 211:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 212:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 213:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 214:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 215:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 216:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 218:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 219:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 221:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 222
	 Choosing alt 0 in insn 222:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 223:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 224:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 225:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 226:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 227:  (0) m  (1) v {*movsf_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 228:  (0) v  (1) m {*floatsisf2_mixed}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 229:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 230:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 231:  (0) v  (1) r {*floatsisf2_mixed}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 232:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 233
	 Choosing alt 1 in insn 233:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 235:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 236:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=740 from oldreg=140, assigning class SSE_REGS to r740
  236: r740:SF=r740:SF/r549:SF
      REG_DEAD r549:SF
      REG_DEAD r140:SF
    Inserting insn reload before:
  974: r740:SF=r140:SF
    Inserting insn reload after:
  975: r141:SF=r740:SF

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 237:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 239:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 240:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 241:  (0) m  (1) v {*movsf_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=1,overall=9,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 242:  (0) v  (1) m {*floatsisf2_mixed}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 243:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 244:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 245:  (0) v  (1) r {*floatsisf2_mixed}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 246:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 247
	 Choosing alt 1 in insn 247:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 249:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 250:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=741 from oldreg=148, assigning class SSE_REGS to r741
  250: r741:SF=r741:SF/r554:SF
      REG_DEAD r554:SF
      REG_DEAD r148:SF
    Inserting insn reload before:
  976: r741:SF=r148:SF
    Inserting insn reload after:
  977: r149:SF=r741:SF

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 251:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 253:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 254:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 255:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 256:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 257:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 258:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 259:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 260:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 261:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 262:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 266:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 267
	 Choosing alt 0 in insn 267:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 268:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 269:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 270:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 271:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 272:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 273:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 277:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 278
	 Choosing alt 0 in insn 278:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 279:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 280:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 281:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 282:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 283:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 284:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 285:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 286
	 Choosing alt 0 in insn 286:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 287:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 288:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 289:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 290:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 291:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 293:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 294:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=742 from oldreg=167, assigning class SSE_REGS to r742
  294: r742:SF=r742:SF+[frame:DI-0x50]
      REG_DEAD r167:SF
    Inserting insn reload before:
  978: r742:SF=r167:SF
    Inserting insn reload after:
  979: r168:SF=r742:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 295:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 296:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 297:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 298:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 299:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 300:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 301
	 Choosing alt 0 in insn 301:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 302:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 303:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 304:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 305:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 306:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 308:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 309:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 310:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 311:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 312:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 313:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 314:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 315:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 316
	 Choosing alt 0 in insn 316:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 317:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 318:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 319:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 320:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 321:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 322:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 324:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 325:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 326:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 327:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 328:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 329
	 Choosing alt 0 in insn 329:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 330:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 331:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 332:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 333:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 334:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=743 from oldreg=187, assigning class SSE_REGS to r743
  334: r743:SF=r743:SF-r194:SF
      REG_DEAD r194:SF
      REG_DEAD r187:SF
    Inserting insn reload before:
  980: r743:SF=r187:SF
    Inserting insn reload after:
  981: r195:SF=r743:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 335:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 336:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 337:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 338:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 339:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 340:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 341
	 Choosing alt 0 in insn 341:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 342:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 343:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 344:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 345:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 346
	 Choosing alt 1 in insn 346:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 348:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 349:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 350:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 351:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 352:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 353:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 354
	 Choosing alt 0 in insn 354:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 355:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 356
	 Choosing alt 1 in insn 356:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 357:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 358:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 359:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 360:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 361:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 362:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 363:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 364:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 365
	 Choosing alt 0 in insn 365:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 366:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 367:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 368:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 369:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 370:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 372:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 373:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=744 from oldreg=221, assigning class SSE_REGS to r744
  373: r744:SF=r744:SF+[frame:DI-0x54]
      REG_DEAD r221:SF
    Inserting insn reload before:
  982: r744:SF=r221:SF
    Inserting insn reload after:
  983: r222:SF=r744:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 374:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 375:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 376:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 377:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 378:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 379:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 380
	 Choosing alt 0 in insn 380:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 381:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 382:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 383:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 384:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 385:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 387:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 388:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 389:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 390:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 391:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 392:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 393:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 394:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 395
	 Choosing alt 0 in insn 395:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 396:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 397:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 398:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 399:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 400:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 401:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 402:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 403:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 404:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 405:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 406:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 407:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 408
	 Choosing alt 0 in insn 408:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 409:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 410:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 411:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 412:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 413:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=745 from oldreg=241, assigning class SSE_REGS to r745
  413: r745:SF=r745:SF-r248:SF
      REG_DEAD r248:SF
      REG_DEAD r241:SF
    Inserting insn reload before:
  984: r745:SF=r241:SF
    Inserting insn reload after:
  985: r249:SF=r745:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 414:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 415:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 416:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 417:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 418:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 419:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 420
	 Choosing alt 0 in insn 420:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 421:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 422:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 423:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 424:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 425
	 Choosing alt 1 in insn 425:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 427:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 428:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 429:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 430:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 431:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 432:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 433
	 Choosing alt 0 in insn 433:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 434:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 435
	 Choosing alt 1 in insn 435:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 436:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 437:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 440:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 446:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 447:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 448:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 450:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 451:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 452:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 453:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 456:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 457:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 458:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 460:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 461:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 462:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 463:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 466:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 467:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 469:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 470:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 471:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 472:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 475:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 476:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 477:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 478:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 479:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 480
	 Choosing alt 0 in insn 480:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 481:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 482:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 483:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 484:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 485:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 486:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 489:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 490:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 491:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 492:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 493:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 494
	 Choosing alt 0 in insn 494:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 495:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 496:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 497:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 498:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 499:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 500:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 501:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 502:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 506:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 507:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 508:  (0) m  (1) re {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 509:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 510:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 511:  (0) r  (1) r  (2) le {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 515:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 516:  (0) =rm  (1) 0  (2) re {*subsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 517:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 518:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 519:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 520
	 Choosing alt 0 in insn 520:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 521:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 522:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 523:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 524:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 525
	 Choosing alt 0 in insn 525:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 526:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 527
	 Choosing alt 0 in insn 527:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 528:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 529:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 530:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 531:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 532:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 533:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 534:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 535:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 536:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 537
	 Choosing alt 0 in insn 537:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 538:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 539:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 540:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 541:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 1 in insn 543:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=746 from oldreg=478, assigning class SSE_REGS to r746
  543: r746:SF=r746:SF*r478:SF
      REG_DEAD r478:SF
    Inserting insn reload before:
  986: r746:SF=r478:SF
    Inserting insn reload after:
  987: r479:SF=r746:SF

          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 544:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 545:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 546
	 Choosing alt 0 in insn 546:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 547:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 548:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 549:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 550:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 551
	 Choosing alt 0 in insn 551:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 552:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 553
	 Choosing alt 0 in insn 553:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 554:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 555:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 556:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 557:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 558:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 559:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 560:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 561:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 562:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 563
	 Choosing alt 0 in insn 563:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 564:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 565:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 566:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 567:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=1,overall=0,losers=0,rld_nregs=0
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 569:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 570
	 Choosing alt 1 in insn 570:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 571:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 572:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 573:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 574:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 575:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 576:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 577
	 Choosing alt 0 in insn 577:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 578:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 579:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 580:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 581:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 587:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 588:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 589:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 590:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 591:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 592
	 Choosing alt 0 in insn 592:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 593:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 594:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 595:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 596:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 597:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 598:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 599:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 600:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 601:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 602
	 Choosing alt 0 in insn 602:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 603:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 604:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 605:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 606:  (0) =r  (1) %0  (2) rme {*addsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 607:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 608:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 609:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 610:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 611:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 612:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 613:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 614
	 Choosing alt 0 in insn 614:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 615:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 616:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 617:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 618:  (0) =r  (1) %0  (2) rme {*addsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 619:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 620:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 623:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 629:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 635:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 641:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 642:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 644:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 645:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 646:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 647:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 650:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 651:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 652:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 653:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 654:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 655
	 Choosing alt 0 in insn 655:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 656:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 657:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 658:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 659:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 662:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 663:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 664:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 665:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 666:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 667
	 Choosing alt 0 in insn 667:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 668:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 669:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 670:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 671:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 672
	 Choosing alt 2 in insn 672:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 673:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 674:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 675:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 676:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 677:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 678:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 679
	 Choosing alt 0 in insn 679:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 680:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 681:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 682:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 683:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 684:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 685:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 686:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 687:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 688:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 689:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 690:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 691:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 692
	 Choosing alt 0 in insn 692:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 693:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 694:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 695:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 696:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 697:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 698:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 699:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 700:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 701
	 Choosing alt 0 in insn 701:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 702:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 703:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 704:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 705:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 706
	 Choosing alt 2 in insn 706:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 707:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 708:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 709:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 710:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 711:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 712:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 713
	 Choosing alt 0 in insn 713:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 714:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 715:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 716:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 717:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 718:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 719
	 Choosing alt 1 in insn 719:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 720:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 721:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 722:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 723:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 724:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 725:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 726:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 727
	 Choosing alt 0 in insn 727:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 728:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 729:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 730:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 731:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 732:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 733:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 734:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 735:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 736:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 737:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 738
	 Choosing alt 0 in insn 738:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 739:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 740:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 741:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 742:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 743
	 Choosing alt 0 in insn 743:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 744:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 745:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 746:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 747:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 748:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 749:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 750:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 751:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 752
	 Choosing alt 0 in insn 752:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 753:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 754:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 755:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 756:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 757:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 758:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 759:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 760:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 761:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 762:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 763
	 Choosing alt 0 in insn 763:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 764:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 765:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 766:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 767:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 768
	 Choosing alt 0 in insn 768:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 769:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 770:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 771:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 772:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 775:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 781:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 787:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 793:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 799:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 800:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 801:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 803:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 804:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 805:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 806:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 809:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 810:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 811:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 813:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 814:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 815:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 816:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 819:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 820:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 821:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 822:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 823:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 824
	 Choosing alt 0 in insn 824:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 825:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 826:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 827:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 828:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 831:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 832:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 833
	 Choosing alt 2 in insn 833:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 834:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 835:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 836:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 837:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 838:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 839:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 840:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 841:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 842:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 843:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 844:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 845
	 Choosing alt 0 in insn 845:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 846:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 847:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 848:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 849:  (0) v  (1) r {*floatsisf2_mixed}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 850:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 851:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 852
	 Choosing alt 2 in insn 852:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 853:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 854:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 855:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 856:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 857:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 858:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 859:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 864:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 865:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 866
	 Choosing alt 2 in insn 866:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 867:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 868:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 869:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 870:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 871:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 872:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 873:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 876:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 882:  (0) rm  (1) 0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 7
EBB 8
EBB 9 10
EBB 11 12
EBB 13
EBB 14
EBB 15 16
EBB 17 18
EBB 19 20
EBB 21 22 23
EBB 59
EBB 24
EBB 58
EBB 25
EBB 26 27
EBB 28 29
EBB 30 31 32 33
EBB 34
EBB 62
EBB 35
EBB 61
EBB 36
EBB 60
EBB 37
EBB 38 39 40
EBB 41
EBB 63
EBB 42
EBB 57
EBB 43
EBB 56
EBB 44
EBB 55
EBB 45
EBB 46 47
EBB 48 49 50
EBB 51
EBB 52
EBB 65
EBB 53
EBB 64
EBB 54

********** Pseudo live ranges #1: **********

  BB 54
   Insn 895: point = 0, n_alt = -1
  BB 64
   Insn 957: point = 0, n_alt = -1
  BB 46
   Insn 807: point = 0, n_alt = -1
   Insn 806: point = 0, n_alt = 0
   Insn 805: point = 1, n_alt = 0
   Insn 804: point = 3, n_alt = 0
   Insn 803: point = 4, n_alt = 0
  BB 53
   Insn 924: point = 5, n_alt = -1
   Insn 882: point = 5, n_alt = 1
  BB 65
   Insn 960: point = 6, n_alt = -1
  BB 48
   Insn 817: point = 7, n_alt = -1
   Insn 816: point = 7, n_alt = 0
   Insn 815: point = 8, n_alt = 0
   Insn 814: point = 10, n_alt = 0
   Insn 813: point = 11, n_alt = 0
  BB 52
   Insn 922: point = 12, n_alt = -1
   Insn 876: point = 12, n_alt = 1
  BB 50
   Insn 920: point = 13, n_alt = -1
   Insn 859: point = 13, n_alt = 8
   Insn 858: point = 14, n_alt = 3
   Insn 857: point = 15, n_alt = 2
   Insn 856: point = 17, n_alt = 0
   Insn 855: point = 19, n_alt = 1
   Insn 854: point = 21, n_alt = 0
   Insn 853: point = 22, n_alt = 3
   Insn 852: point = 24, n_alt = 2
   Insn 851: point = 26, n_alt = 1
   Insn 850: point = 28, n_alt = 0
   Insn 849: point = 29, n_alt = 1
   Insn 848: point = 31, n_alt = 0
   Insn 847: point = 33, n_alt = 4
   Insn 846: point = 34, n_alt = 3
   Insn 845: point = 36, n_alt = 0
   Insn 844: point = 38, n_alt = 1
   Insn 843: point = 40, n_alt = 0
   Insn 842: point = 41, n_alt = 1
   Insn 841: point = 43, n_alt = 1
   Insn 840: point = 45, n_alt = 0
   Insn 839: point = 46, n_alt = 7
   Insn 838: point = 48, n_alt = 3
   Insn 837: point = 49, n_alt = 0
   Insn 836: point = 51, n_alt = 1
   Insn 835: point = 53, n_alt = 0
   Insn 834: point = 54, n_alt = 3
   Insn 833: point = 56, n_alt = 2
   Insn 832: point = 58, n_alt = 1
   Insn 831: point = 60, n_alt = 0
  BB 51
   Insn 873: point = 62, n_alt = 8
   Insn 872: point = 63, n_alt = 7
   Insn 871: point = 64, n_alt = 3
   Insn 870: point = 65, n_alt = 0
   Insn 869: point = 67, n_alt = 1
   Insn 868: point = 69, n_alt = 0
   Insn 867: point = 70, n_alt = 3
   Insn 866: point = 72, n_alt = 2
   Insn 865: point = 74, n_alt = 1
   Insn 864: point = 76, n_alt = 0
  BB 49
   Insn 829: point = 78, n_alt = -1
   Insn 828: point = 78, n_alt = 0
   Insn 827: point = 79, n_alt = 0
   Insn 826: point = 81, n_alt = 4
   Insn 825: point = 82, n_alt = 3
   Insn 824: point = 84, n_alt = 0
   Insn 823: point = 86, n_alt = 1
   Insn 822: point = 88, n_alt = 0
   Insn 821: point = 89, n_alt = 1
   Insn 820: point = 91, n_alt = 1
   Insn 819: point = 93, n_alt = 0
  BB 47
   Insn 811: point = 95, n_alt = 1
   Insn 810: point = 95, n_alt = 0
   Insn 809: point = 97, n_alt = 3
  BB 45
   Insn 801: point = 99, n_alt = 1
   Insn 800: point = 99, n_alt = 0
   Insn 799: point = 101, n_alt = 3
  BB 55
   Insn 928: point = 103, n_alt = -1
  BB 15
   Insn 122: point = 104, n_alt = -1
   Insn 121: point = 104, n_alt = 0
   Insn 120: point = 105, n_alt = 0
   Insn 119: point = 107, n_alt = 0
   Insn 118: point = 108, n_alt = 0
  BB 44
   Insn 918: point = 109, n_alt = -1
   Insn 793: point = 109, n_alt = 1
  BB 56
   Insn 931: point = 110, n_alt = -1
  BB 17
   Insn 143: point = 111, n_alt = -1
   Insn 142: point = 111, n_alt = 0
   Insn 141: point = 112, n_alt = 0
   Insn 140: point = 114, n_alt = 0
   Insn 139: point = 115, n_alt = 0
  BB 43
   Insn 916: point = 116, n_alt = -1
   Insn 787: point = 116, n_alt = 1
  BB 57
   Insn 934: point = 117, n_alt = -1
  BB 19
   Insn 153: point = 118, n_alt = -1
   Insn 152: point = 118, n_alt = 0
   Insn 151: point = 119, n_alt = 0
   Insn 150: point = 121, n_alt = 0
   Insn 149: point = 122, n_alt = 0
  BB 42
   Insn 914: point = 123, n_alt = -1
   Insn 781: point = 123, n_alt = 1
  BB 63
   Insn 954: point = 124, n_alt = -1
  BB 38
   Insn 648: point = 125, n_alt = -1
   Insn 647: point = 125, n_alt = 0
   Insn 646: point = 126, n_alt = 0
   Insn 645: point = 128, n_alt = 0
   Insn 644: point = 129, n_alt = 0
  BB 41
   Insn 912: point = 130, n_alt = -1
   Insn 775: point = 130, n_alt = 1
  BB 40
   Insn 772: point = 131, n_alt = 1
   Insn 771: point = 132, n_alt = 4
   Insn 770: point = 133, n_alt = 3
   Insn 769: point = 135, n_alt = 0
   Insn 768: point = 137, n_alt = 0
   Insn 767: point = 139, n_alt = 1
   Insn 766: point = 141, n_alt = 0
   Insn 765: point = 143, n_alt = 4
   Insn 764: point = 144, n_alt = 3
   Insn 763: point = 146, n_alt = 0
   Insn 762: point = 148, n_alt = 1
   Insn 761: point = 150, n_alt = 0
   Insn 760: point = 151, n_alt = 0
   Insn 759: point = 153, n_alt = 1
   Insn 758: point = 155, n_alt = 0
   Insn 757: point = 156, n_alt = 1
   Insn 756: point = 158, n_alt = 1
   Insn 755: point = 160, n_alt = 0
   Insn 754: point = 162, n_alt = 4
   Insn 753: point = 163, n_alt = 3
   Insn 752: point = 165, n_alt = 0
   Insn 751: point = 167, n_alt = 1
   Insn 750: point = 169, n_alt = 0
   Insn 749: point = 170, n_alt = 0
   Insn 748: point = 172, n_alt = 1
   Insn 747: point = 174, n_alt = 0
   Insn 746: point = 175, n_alt = 0
   Insn 745: point = 177, n_alt = 4
   Insn 744: point = 178, n_alt = 3
   Insn 743: point = 180, n_alt = 0
   Insn 742: point = 182, n_alt = 1
   Insn 741: point = 184, n_alt = 0
   Insn 740: point = 186, n_alt = 4
   Insn 739: point = 187, n_alt = 3
   Insn 738: point = 189, n_alt = 0
   Insn 737: point = 191, n_alt = 1
   Insn 736: point = 193, n_alt = 0
   Insn 735: point = 194, n_alt = 0
   Insn 734: point = 196, n_alt = 1
   Insn 733: point = 198, n_alt = 0
   Insn 732: point = 199, n_alt = 1
   Insn 731: point = 201, n_alt = 1
   Insn 730: point = 203, n_alt = 0
   Insn 729: point = 205, n_alt = 4
   Insn 728: point = 206, n_alt = 3
   Insn 727: point = 208, n_alt = 0
   Insn 726: point = 210, n_alt = 1
   Insn 725: point = 212, n_alt = 0
   Insn 724: point = 213, n_alt = 0
   Insn 723: point = 215, n_alt = 1
   Insn 722: point = 217, n_alt = 0
   Insn 721: point = 218, n_alt = 8
   Insn 720: point = 219, n_alt = 3
   Insn 719: point = 220, n_alt = 1
   Insn 718: point = 222, n_alt = 3
   Insn 717: point = 224, n_alt = 1
   Insn 716: point = 226, n_alt = 0
   Insn 715: point = 228, n_alt = 4
   Insn 714: point = 229, n_alt = 3
   Insn 713: point = 231, n_alt = 0
   Insn 712: point = 233, n_alt = 1
   Insn 711: point = 235, n_alt = 0
   Insn 710: point = 236, n_alt = 0
   Insn 709: point = 238, n_alt = 1
   Insn 708: point = 240, n_alt = 0
   Insn 707: point = 241, n_alt = 3
   Insn 706: point = 243, n_alt = 2
   Insn 705: point = 245, n_alt = 1
   Insn 704: point = 247, n_alt = 0
   Insn 703: point = 249, n_alt = 4
   Insn 702: point = 250, n_alt = 3
   Insn 701: point = 252, n_alt = 0
   Insn 700: point = 254, n_alt = 1
   Insn 699: point = 256, n_alt = 0
   Insn 698: point = 257, n_alt = 0
   Insn 697: point = 259, n_alt = 1
   Insn 696: point = 261, n_alt = 0
   Insn 695: point = 262, n_alt = 7
   Insn 694: point = 264, n_alt = 3
   Insn 693: point = 265, n_alt = 3
   Insn 692: point = 267, n_alt = 0
   Insn 691: point = 269, n_alt = 1
   Insn 690: point = 271, n_alt = 0
   Insn 689: point = 272, n_alt = 0
   Insn 688: point = 274, n_alt = 1
   Insn 687: point = 276, n_alt = 0
   Insn 686: point = 277, n_alt = 7
   Insn 685: point = 279, n_alt = 3
   Insn 684: point = 280, n_alt = 3
   Insn 683: point = 282, n_alt = 1
   Insn 682: point = 284, n_alt = 0
   Insn 681: point = 286, n_alt = 4
   Insn 680: point = 287, n_alt = 3
   Insn 679: point = 289, n_alt = 0
   Insn 678: point = 291, n_alt = 1
   Insn 677: point = 293, n_alt = 0
   Insn 676: point = 294, n_alt = 0
   Insn 675: point = 296, n_alt = 1
   Insn 674: point = 298, n_alt = 0
   Insn 673: point = 299, n_alt = 3
   Insn 672: point = 301, n_alt = 2
   Insn 671: point = 303, n_alt = 1
   Insn 670: point = 305, n_alt = 0
   Insn 669: point = 307, n_alt = 4
   Insn 668: point = 308, n_alt = 3
   Insn 667: point = 310, n_alt = 0
   Insn 666: point = 312, n_alt = 1
   Insn 665: point = 314, n_alt = 0
   Insn 664: point = 315, n_alt = 0
   Insn 663: point = 317, n_alt = 1
   Insn 662: point = 319, n_alt = 0
  BB 39
   Insn 660: point = 321, n_alt = -1
   Insn 659: point = 321, n_alt = 0
   Insn 658: point = 322, n_alt = 0
   Insn 657: point = 324, n_alt = 4
   Insn 656: point = 325, n_alt = 3
   Insn 655: point = 327, n_alt = 0
   Insn 654: point = 329, n_alt = 1
   Insn 653: point = 331, n_alt = 0
   Insn 652: point = 332, n_alt = 0
   Insn 651: point = 334, n_alt = 1
   Insn 650: point = 336, n_alt = 0
  BB 37
   Insn 642: point = 338, n_alt = 1
   Insn 641: point = 338, n_alt = 0
  BB 60
   Insn 945: point = 340, n_alt = -1
  BB 26
   Insn 454: point = 341, n_alt = -1
   Insn 453: point = 341, n_alt = 0
   Insn 452: point = 342, n_alt = 0
   Insn 451: point = 344, n_alt = 0
   Insn 450: point = 345, n_alt = 0
  BB 36
   Insn 910: point = 346, n_alt = -1
   Insn 635: point = 346, n_alt = 1
  BB 61
   Insn 948: point = 347, n_alt = -1
  BB 28
   Insn 464: point = 348, n_alt = -1
   Insn 463: point = 348, n_alt = 0
   Insn 462: point = 349, n_alt = 0
   Insn 461: point = 351, n_alt = 0
   Insn 460: point = 352, n_alt = 0
  BB 35
   Insn 908: point = 353, n_alt = -1
   Insn 629: point = 353, n_alt = 1
  BB 62
   Insn 951: point = 354, n_alt = -1
  BB 30
   Insn 473: point = 355, n_alt = -1
   Insn 472: point = 355, n_alt = 0
   Insn 471: point = 356, n_alt = 0
   Insn 470: point = 358, n_alt = 0
   Insn 469: point = 359, n_alt = 0
  BB 34
   Insn 906: point = 360, n_alt = -1
   Insn 623: point = 360, n_alt = 1
  BB 33
   Insn 620: point = 361, n_alt = 1
   Insn 619: point = 362, n_alt = 4
   Insn 618: point = 363, n_alt = 0
   Insn 617: point = 365, n_alt = 0
   Insn 616: point = 366, n_alt = 0
   Insn 615: point = 367, n_alt = 3
   Insn 614: point = 369, n_alt = 0
   Insn 613: point = 371, n_alt = 1
   Insn 612: point = 373, n_alt = 0
   Insn 611: point = 374, n_alt = 0
   Insn 610: point = 376, n_alt = 1
   Insn 609: point = 378, n_alt = 0
   Insn 608: point = 379, n_alt = 1
   Insn 607: point = 380, n_alt = 4
   Insn 606: point = 381, n_alt = 0
   Insn 605: point = 383, n_alt = 0
   Insn 604: point = 384, n_alt = 0
   Insn 603: point = 385, n_alt = 3
   Insn 602: point = 387, n_alt = 0
   Insn 601: point = 389, n_alt = 1
   Insn 600: point = 391, n_alt = 0
   Insn 599: point = 392, n_alt = 0
   Insn 598: point = 394, n_alt = 1
   Insn 597: point = 396, n_alt = 0
   Insn 596: point = 397, n_alt = 8
   Insn 595: point = 398, n_alt = 7
   Insn 594: point = 399, n_alt = 4
   Insn 593: point = 400, n_alt = 3
   Insn 592: point = 402, n_alt = 0
   Insn 591: point = 404, n_alt = 1
   Insn 590: point = 406, n_alt = 0
   Insn 589: point = 407, n_alt = 0
   Insn 588: point = 409, n_alt = 1
   Insn 587: point = 411, n_alt = 0
  BB 32
   Insn 582: point = 413, n_alt = -1
   Insn 581: point = 413, n_alt = 1
   Insn 580: point = 414, n_alt = 7
   Insn 579: point = 416, n_alt = 4
   Insn 578: point = 417, n_alt = 3
   Insn 577: point = 419, n_alt = 0
   Insn 576: point = 421, n_alt = 1
   Insn 575: point = 423, n_alt = 0
   Insn 574: point = 424, n_alt = 0
   Insn 573: point = 426, n_alt = 1
   Insn 572: point = 428, n_alt = 0
   Insn 571: point = 429, n_alt = 8
   Insn 570: point = 430, n_alt = 1
   Insn 569: point = 432, n_alt = 1
   Insn 568: point = 434, n_alt = -2
   Insn 567: point = 436, n_alt = 2
   Insn 566: point = 438, n_alt = 7
   Insn 565: point = 440, n_alt = 4
   Insn 564: point = 441, n_alt = 3
   Insn 563: point = 443, n_alt = 0
   Insn 562: point = 445, n_alt = 1
   Insn 561: point = 447, n_alt = 0
   Insn 560: point = 448, n_alt = 0
   Insn 559: point = 450, n_alt = 1
   Insn 558: point = 452, n_alt = 0
   Insn 557: point = 453, n_alt = 7
   Insn 556: point = 455, n_alt = 0
   Insn 555: point = 457, n_alt = 4
   Insn 554: point = 458, n_alt = 3
   Insn 553: point = 460, n_alt = 0
   Insn 552: point = 462, n_alt = 1
   Insn 551: point = 464, n_alt = 0
   Insn 550: point = 466, n_alt = 0
   Insn 549: point = 467, n_alt = 0
   Insn 548: point = 468, n_alt = 1
   Insn 547: point = 470, n_alt = 1
   Insn 546: point = 472, n_alt = 0
   Insn 545: point = 474, n_alt = 0
   Insn 544: point = 475, n_alt = 0
   Insn 987: point = 476, n_alt = -2
	Hard reg 22 is preferable by r746 with profit 1000
   Insn 543: point = 478, n_alt = 1
   Insn 986: point = 479, n_alt = -2
	Hard reg 22 is preferable by r746 with profit 1000
	Hard reg 21 is preferable by r746 with profit 1000
   Insn 542: point = 480, n_alt = -2
   Insn 541: point = 482, n_alt = 2
   Insn 540: point = 484, n_alt = 7
   Insn 539: point = 486, n_alt = 4
   Insn 538: point = 487, n_alt = 3
   Insn 537: point = 489, n_alt = 0
   Insn 536: point = 491, n_alt = 1
   Insn 535: point = 493, n_alt = 0
   Insn 534: point = 494, n_alt = 0
   Insn 533: point = 496, n_alt = 1
   Insn 532: point = 498, n_alt = 0
   Insn 531: point = 499, n_alt = 7
   Insn 530: point = 501, n_alt = 0
   Insn 529: point = 503, n_alt = 4
   Insn 528: point = 504, n_alt = 3
   Insn 527: point = 506, n_alt = 0
   Insn 526: point = 508, n_alt = 1
   Insn 525: point = 510, n_alt = 0
   Insn 524: point = 512, n_alt = 0
   Insn 523: point = 513, n_alt = 0
   Insn 522: point = 514, n_alt = 1
   Insn 521: point = 516, n_alt = 1
   Insn 520: point = 518, n_alt = 0
   Insn 519: point = 520, n_alt = 0
   Insn 518: point = 521, n_alt = 0
   Insn 517: point = 522, n_alt = 1
   Insn 516: point = 523, n_alt = 0
   Insn 515: point = 525, n_alt = 0
   Insn 511: point = 526, n_alt = 3
   Insn 510: point = 528, n_alt = 0
   Insn 509: point = 530, n_alt = 3
   Insn 508: point = 531, n_alt = 1
   Insn 507: point = 532, n_alt = 0
   Insn 506: point = 534, n_alt = 0
   Insn 502: point = 535, n_alt = 3
   Insn 501: point = 537, n_alt = 0
   Insn 500: point = 539, n_alt = 3
   Insn 499: point = 540, n_alt = 1
   Insn 498: point = 541, n_alt = 0
   Insn 497: point = 543, n_alt = 0
   Insn 496: point = 545, n_alt = 4
   Insn 495: point = 546, n_alt = 3
   Insn 494: point = 548, n_alt = 0
   Insn 493: point = 550, n_alt = 1
   Insn 492: point = 552, n_alt = 0
   Insn 491: point = 553, n_alt = 0
   Insn 490: point = 555, n_alt = 1
   Insn 489: point = 557, n_alt = 0
  BB 31
   Insn 487: point = 559, n_alt = -1
   Insn 486: point = 559, n_alt = 1
   Insn 485: point = 559, n_alt = 1
   Insn 484: point = 560, n_alt = 0
   Insn 483: point = 562, n_alt = 0
   Insn 482: point = 564, n_alt = 4
   Insn 481: point = 565, n_alt = 3
   Insn 480: point = 567, n_alt = 0
   Insn 479: point = 569, n_alt = 1
   Insn 478: point = 571, n_alt = 0
   Insn 477: point = 572, n_alt = 0
   Insn 476: point = 574, n_alt = 1
   Insn 475: point = 576, n_alt = 0
  BB 29
   Insn 467: point = 578, n_alt = 1
   Insn 466: point = 578, n_alt = 0
  BB 27
   Insn 458: point = 580, n_alt = 1
   Insn 457: point = 580, n_alt = 0
   Insn 456: point = 582, n_alt = 3
  BB 25
   Insn 448: point = 584, n_alt = 1
   Insn 447: point = 584, n_alt = 0
   Insn 446: point = 586, n_alt = 3
  BB 58
   Insn 937: point = 588, n_alt = -1
  BB 21
   Insn 162: point = 589, n_alt = -1
   Insn 161: point = 589, n_alt = 0
   Insn 160: point = 590, n_alt = 0
   Insn 159: point = 592, n_alt = 0
   Insn 158: point = 593, n_alt = 0
  BB 24
   Insn 904: point = 594, n_alt = -1
   Insn 440: point = 594, n_alt = 1
  BB 23
   Insn 938: point = 595, n_alt = -1
   Insn 437: point = 595, n_alt = 8
   Insn 436: point = 596, n_alt = 4
   Insn 435: point = 597, n_alt = 1
   Insn 434: point = 599, n_alt = 3
   Insn 433: point = 601, n_alt = 0
   Insn 432: point = 603, n_alt = 1
   Insn 431: point = 605, n_alt = 0
   Insn 430: point = 606, n_alt = 0
   Insn 429: point = 608, n_alt = 1
   Insn 428: point = 610, n_alt = 0
   Insn 427: point = 611, n_alt = 1
   Insn 426: point = 613, n_alt = -2
   Insn 425: point = 615, n_alt = 1
   Insn 424: point = 617, n_alt = 7
   Insn 423: point = 619, n_alt = 0
   Insn 422: point = 621, n_alt = 4
   Insn 421: point = 622, n_alt = 3
   Insn 420: point = 624, n_alt = 0
   Insn 419: point = 626, n_alt = 1
   Insn 418: point = 628, n_alt = 0
   Insn 417: point = 629, n_alt = 0
   Insn 416: point = 631, n_alt = 1
   Insn 415: point = 633, n_alt = 0
   Insn 414: point = 635, n_alt = 0
   Insn 985: point = 636, n_alt = -2
	Hard reg 23 is preferable by r745 with profit 1000
   Insn 413: point = 638, n_alt = 2
   Insn 984: point = 639, n_alt = -2
	Hard reg 23 is preferable by r745 with profit 1000
	Hard reg 21 is preferable by r745 with profit 1000
   Insn 412: point = 641, n_alt = 7
   Insn 411: point = 643, n_alt = 0
   Insn 410: point = 645, n_alt = 4
   Insn 409: point = 646, n_alt = 3
   Insn 408: point = 648, n_alt = 0
   Insn 407: point = 650, n_alt = 1
   Insn 406: point = 652, n_alt = 0
   Insn 405: point = 653, n_alt = 0
   Insn 404: point = 655, n_alt = 1
   Insn 403: point = 657, n_alt = 0
   Insn 402: point = 659, n_alt = 0
   Insn 401: point = 660, n_alt = 2
   Insn 400: point = 662, n_alt = 7
   Insn 399: point = 663, n_alt = 7
   Insn 398: point = 665, n_alt = 0
   Insn 397: point = 667, n_alt = 4
   Insn 396: point = 668, n_alt = 3
   Insn 395: point = 670, n_alt = 0
   Insn 394: point = 672, n_alt = 1
   Insn 393: point = 674, n_alt = 0
   Insn 392: point = 675, n_alt = 0
   Insn 391: point = 677, n_alt = 1
   Insn 390: point = 679, n_alt = 0
   Insn 389: point = 681, n_alt = 0
   Insn 388: point = 682, n_alt = 1
   Insn 387: point = 684, n_alt = 1
   Insn 386: point = 686, n_alt = -2
   Insn 385: point = 688, n_alt = 2
   Insn 384: point = 690, n_alt = 7
   Insn 383: point = 692, n_alt = 0
   Insn 382: point = 694, n_alt = 4
   Insn 381: point = 695, n_alt = 3
   Insn 380: point = 697, n_alt = 0
   Insn 379: point = 699, n_alt = 1
   Insn 378: point = 701, n_alt = 0
   Insn 377: point = 702, n_alt = 0
   Insn 376: point = 704, n_alt = 1
   Insn 375: point = 706, n_alt = 0
   Insn 374: point = 708, n_alt = 0
   Insn 983: point = 709, n_alt = -2
	Hard reg 22 is preferable by r744 with profit 1000
   Insn 373: point = 711, n_alt = 1
   Insn 982: point = 711, n_alt = -2
	Hard reg 22 is preferable by r744 with profit 1000
	Hard reg 21 is preferable by r744 with profit 1000
   Insn 372: point = 713, n_alt = 1
   Insn 371: point = 715, n_alt = -2
   Insn 370: point = 717, n_alt = 2
   Insn 369: point = 719, n_alt = 7
   Insn 368: point = 721, n_alt = 0
   Insn 367: point = 723, n_alt = 4
   Insn 366: point = 724, n_alt = 3
   Insn 365: point = 726, n_alt = 0
   Insn 364: point = 728, n_alt = 1
   Insn 363: point = 730, n_alt = 0
   Insn 362: point = 731, n_alt = 0
   Insn 361: point = 733, n_alt = 1
   Insn 360: point = 735, n_alt = 0
   Insn 359: point = 737, n_alt = 0
   Insn 358: point = 738, n_alt = 8
   Insn 357: point = 739, n_alt = 4
   Insn 356: point = 740, n_alt = 1
   Insn 355: point = 742, n_alt = 3
   Insn 354: point = 744, n_alt = 0
   Insn 353: point = 746, n_alt = 1
   Insn 352: point = 748, n_alt = 0
   Insn 351: point = 749, n_alt = 0
   Insn 350: point = 751, n_alt = 1
   Insn 349: point = 753, n_alt = 0
   Insn 348: point = 754, n_alt = 1
   Insn 347: point = 756, n_alt = -2
   Insn 346: point = 758, n_alt = 1
   Insn 345: point = 760, n_alt = 7
   Insn 344: point = 762, n_alt = 0
   Insn 343: point = 764, n_alt = 4
   Insn 342: point = 765, n_alt = 3
   Insn 341: point = 767, n_alt = 0
   Insn 340: point = 769, n_alt = 1
   Insn 339: point = 771, n_alt = 0
   Insn 338: point = 772, n_alt = 0
   Insn 337: point = 774, n_alt = 1
   Insn 336: point = 776, n_alt = 0
   Insn 335: point = 778, n_alt = 0
   Insn 981: point = 779, n_alt = -2
	Hard reg 23 is preferable by r743 with profit 1000
   Insn 334: point = 781, n_alt = 2
   Insn 980: point = 782, n_alt = -2
	Hard reg 23 is preferable by r743 with profit 1000
	Hard reg 21 is preferable by r743 with profit 1000
   Insn 333: point = 784, n_alt = 7
   Insn 332: point = 786, n_alt = 0
   Insn 331: point = 788, n_alt = 4
   Insn 330: point = 789, n_alt = 3
   Insn 329: point = 791, n_alt = 0
   Insn 328: point = 793, n_alt = 1
   Insn 327: point = 795, n_alt = 0
   Insn 326: point = 796, n_alt = 0
   Insn 325: point = 798, n_alt = 1
   Insn 324: point = 800, n_alt = 0
   Insn 323: point = 802, n_alt = 0
   Insn 322: point = 803, n_alt = 2
   Insn 321: point = 805, n_alt = 7
   Insn 320: point = 806, n_alt = 7
   Insn 319: point = 808, n_alt = 0
   Insn 318: point = 810, n_alt = 4
   Insn 317: point = 811, n_alt = 3
   Insn 316: point = 813, n_alt = 0
   Insn 315: point = 815, n_alt = 1
   Insn 314: point = 817, n_alt = 0
   Insn 313: point = 818, n_alt = 0
   Insn 312: point = 820, n_alt = 1
   Insn 311: point = 822, n_alt = 0
   Insn 310: point = 824, n_alt = 0
   Insn 309: point = 825, n_alt = 1
   Insn 308: point = 827, n_alt = 1
   Insn 307: point = 829, n_alt = -2
   Insn 306: point = 831, n_alt = 2
   Insn 305: point = 833, n_alt = 7
   Insn 304: point = 835, n_alt = 0
   Insn 303: point = 837, n_alt = 4
   Insn 302: point = 838, n_alt = 3
   Insn 301: point = 840, n_alt = 0
   Insn 300: point = 842, n_alt = 1
   Insn 299: point = 844, n_alt = 0
   Insn 298: point = 845, n_alt = 0
   Insn 297: point = 847, n_alt = 1
   Insn 296: point = 849, n_alt = 0
   Insn 295: point = 851, n_alt = 0
   Insn 979: point = 852, n_alt = -2
	Hard reg 22 is preferable by r742 with profit 1000
   Insn 294: point = 854, n_alt = 1
   Insn 978: point = 854, n_alt = -2
	Hard reg 22 is preferable by r742 with profit 1000
	Hard reg 21 is preferable by r742 with profit 1000
   Insn 293: point = 856, n_alt = 1
   Insn 292: point = 858, n_alt = -2
   Insn 291: point = 860, n_alt = 2
   Insn 290: point = 862, n_alt = 7
   Insn 289: point = 864, n_alt = 0
   Insn 288: point = 866, n_alt = 4
   Insn 287: point = 867, n_alt = 3
   Insn 286: point = 869, n_alt = 0
   Insn 285: point = 871, n_alt = 1
   Insn 284: point = 873, n_alt = 0
   Insn 283: point = 874, n_alt = 0
   Insn 282: point = 876, n_alt = 1
   Insn 281: point = 878, n_alt = 0
   Insn 280: point = 880, n_alt = 0
   Insn 279: point = 881, n_alt = 1
   Insn 278: point = 882, n_alt = 0
   Insn 277: point = 884, n_alt = 0
   Insn 273: point = 885, n_alt = 0
   Insn 272: point = 887, n_alt = 0
   Insn 271: point = 889, n_alt = 0
   Insn 270: point = 891, n_alt = 1
   Insn 269: point = 893, n_alt = 0
   Insn 268: point = 894, n_alt = 1
   Insn 267: point = 895, n_alt = 0
   Insn 266: point = 897, n_alt = 0
   Insn 262: point = 898, n_alt = 0
   Insn 261: point = 900, n_alt = 0
   Insn 260: point = 902, n_alt = 1
   Insn 259: point = 904, n_alt = 0
   Insn 258: point = 905, n_alt = 8
   Insn 257: point = 906, n_alt = 1
   Insn 256: point = 908, n_alt = 7
   Insn 255: point = 909, n_alt = 8
   Insn 254: point = 910, n_alt = 1
   Insn 253: point = 912, n_alt = 7
   Insn 252: point = 913, n_alt = -2
   Insn 251: point = 915, n_alt = 2
   Insn 977: point = 917, n_alt = -2
	Hard reg 22 is preferable by r741 with profit 1000
   Insn 250: point = 919, n_alt = 2
   Insn 976: point = 920, n_alt = -2
	Hard reg 22 is preferable by r741 with profit 1000
	Hard reg 23 is preferable by r741 with profit 1000
   Insn 249: point = 922, n_alt = 7
   Insn 248: point = 923, n_alt = -2
   Insn 247: point = 925, n_alt = 1
   Insn 246: point = 927, n_alt = 7
   Insn 245: point = 928, n_alt = 1
   Insn 244: point = 930, n_alt = 0
   Insn 243: point = 932, n_alt = 3
   Insn 242: point = 933, n_alt = 2
   Insn 241: point = 934, n_alt = 8
   Insn 240: point = 935, n_alt = 1
   Insn 239: point = 937, n_alt = 7
   Insn 238: point = 938, n_alt = -2
   Insn 237: point = 940, n_alt = 2
   Insn 975: point = 942, n_alt = -2
	Hard reg 22 is preferable by r740 with profit 1000
   Insn 236: point = 944, n_alt = 2
   Insn 974: point = 945, n_alt = -2
	Hard reg 22 is preferable by r740 with profit 1000
	Hard reg 23 is preferable by r740 with profit 1000
   Insn 235: point = 947, n_alt = 7
   Insn 234: point = 948, n_alt = -2
   Insn 233: point = 950, n_alt = 1
   Insn 232: point = 952, n_alt = 7
   Insn 231: point = 953, n_alt = 1
   Insn 230: point = 955, n_alt = 0
   Insn 229: point = 957, n_alt = 3
   Insn 228: point = 958, n_alt = 2
   Insn 227: point = 959, n_alt = 8
   Insn 226: point = 960, n_alt = 7
   Insn 225: point = 962, n_alt = 0
   Insn 224: point = 964, n_alt = 4
   Insn 223: point = 965, n_alt = 3
   Insn 222: point = 967, n_alt = 0
   Insn 221: point = 969, n_alt = 1
   Insn 220: point = 971, n_alt = 0
   Insn 219: point = 972, n_alt = 0
   Insn 218: point = 974, n_alt = 1
   Insn 217: point = 976, n_alt = 0
   Insn 216: point = 977, n_alt = 8
   Insn 215: point = 978, n_alt = 7
   Insn 214: point = 980, n_alt = 0
   Insn 213: point = 982, n_alt = 4
   Insn 212: point = 983, n_alt = 3
   Insn 211: point = 985, n_alt = 0
   Insn 210: point = 987, n_alt = 1
   Insn 209: point = 989, n_alt = 0
   Insn 208: point = 990, n_alt = 0
   Insn 207: point = 992, n_alt = 1
   Insn 206: point = 994, n_alt = 0
  BB 59
   Insn 942: point = 996, n_alt = -1
  BB 22
   Insn 204: point = 997, n_alt = -1
   Insn 203: point = 997, n_alt = 1
   Insn 202: point = 997, n_alt = 1
   Insn 201: point = 998, n_alt = 0
   Insn 200: point = 1000, n_alt = 0
   Insn 199: point = 1002, n_alt = 4
   Insn 198: point = 1003, n_alt = 3
   Insn 197: point = 1005, n_alt = 0
   Insn 196: point = 1007, n_alt = 1
   Insn 195: point = 1009, n_alt = 0
   Insn 194: point = 1010, n_alt = 0
   Insn 193: point = 1012, n_alt = 1
   Insn 192: point = 1014, n_alt = 0
   Insn 191: point = 1015, n_alt = 1
   Insn 190: point = 1016, n_alt = 4
   Insn 189: point = 1017, n_alt = 3
   Insn 188: point = 1019, n_alt = 0
   Insn 187: point = 1021, n_alt = 1
   Insn 186: point = 1023, n_alt = 0
   Insn 185: point = 1024, n_alt = 0
   Insn 184: point = 1026, n_alt = 1
   Insn 183: point = 1028, n_alt = 0
   Insn 182: point = 1029, n_alt = 1
   Insn 181: point = 1030, n_alt = 4
   Insn 180: point = 1031, n_alt = 3
   Insn 179: point = 1033, n_alt = 0
   Insn 178: point = 1035, n_alt = 1
   Insn 177: point = 1037, n_alt = 0
   Insn 176: point = 1038, n_alt = 0
   Insn 175: point = 1040, n_alt = 1
   Insn 174: point = 1042, n_alt = 0
   Insn 173: point = 1043, n_alt = 8
   Insn 172: point = 1044, n_alt = 7
   Insn 171: point = 1045, n_alt = 4
   Insn 170: point = 1046, n_alt = 3
   Insn 169: point = 1048, n_alt = 0
   Insn 168: point = 1050, n_alt = 1
   Insn 167: point = 1052, n_alt = 0
   Insn 166: point = 1053, n_alt = 0
   Insn 165: point = 1055, n_alt = 1
   Insn 164: point = 1057, n_alt = 0
  BB 20
   Insn 156: point = 1059, n_alt = 1
   Insn 155: point = 1059, n_alt = 0
  BB 18
   Insn 147: point = 1061, n_alt = 1
   Insn 146: point = 1061, n_alt = 0
   Insn 145: point = 1063, n_alt = 3
  BB 16
   Insn 137: point = 1065, n_alt = 1
   Insn 136: point = 1065, n_alt = 0
   Insn 135: point = 1067, n_alt = 3
   Insn 134: point = 1068, n_alt = 1
   Insn 973: point = 1069, n_alt = -2
	Hard reg 2 is preferable by r739 with profit 1000
   Insn 133: point = 1071, n_alt = 0
   Insn 972: point = 1072, n_alt = -2
	Hard reg 2 is preferable by r739 with profit 1000
	Hard reg 4 is preferable by r739 with profit 1000
   Insn 132: point = 1074, n_alt = 0
   Insn 131: point = 1075, n_alt = -2
   Insn 971: point = 1077, n_alt = -2
	Hard reg 2 is preferable by r738 with profit 1000
   Insn 130: point = 1079, n_alt = 0
   Insn 970: point = 1080, n_alt = -2
	Hard reg 2 is preferable by r738 with profit 1000
	Hard reg 4 is preferable by r738 with profit 1000
   Insn 129: point = 1082, n_alt = 0
   Insn 128: point = 1084, n_alt = 0
   Insn 127: point = 1086, n_alt = 0
   Insn 969: point = 1088, n_alt = -2
	Hard reg 2 is preferable by r737 with profit 1000
   Insn 126: point = 1090, n_alt = 1
   Insn 968: point = 1090, n_alt = -2
   Insn 125: point = 1091, n_alt = 3
   Insn 124: point = 1093, n_alt = 0
  BB 14
   Insn 116: point = 1095, n_alt = 1
   Insn 115: point = 1095, n_alt = 8
   Insn 114: point = 1096, n_alt = 2
   Insn 113: point = 1098, n_alt = 7
   Insn 112: point = 1099, n_alt = 1
   Insn 111: point = 1101, n_alt = 0
   Insn 110: point = 1103, n_alt = 3
   Insn 109: point = 1104, n_alt = 1
   Insn 108: point = 1105, n_alt = 0
   Insn 107: point = 1107, n_alt = 0
   Insn 106: point = 1109, n_alt = 3
   Insn 105: point = 1110, n_alt = 1
   Insn 104: point = 1111, n_alt = 0
   Insn 103: point = 1113, n_alt = 0
   Insn 102: point = 1115, n_alt = 3
  BB 9
   Insn 78: point = 1117, n_alt = -1
   Insn 77: point = 1117, n_alt = 0
  BB 13
   Insn 902: point = 1118, n_alt = -1
   Insn 96: point = 1118, n_alt = 0
  BB 11
   Insn 85: point = 1119, n_alt = -1
   Insn 84: point = 1119, n_alt = 0
  BB 12
   Insn 900: point = 1120, n_alt = -1
   Insn 90: point = 1120, n_alt = 0
   Insn 89: point = 1120, n_alt = 1
   Insn 88: point = 1121, n_alt = 4
   Insn 87: point = 1122, n_alt = 3
  BB 10
   Insn 82: point = 1124, n_alt = 2
   Insn 81: point = 1125, n_alt = 3
   Insn 80: point = 1127, n_alt = 1
  BB 8
   Insn 75: point = 1129, n_alt = 2
   Insn 74: point = 1130, n_alt = 1
   Insn 73: point = 1132, n_alt = 0
   Insn 72: point = 1134, n_alt = 3
   Insn 71: point = 1135, n_alt = 1
   Insn 70: point = 1137, n_alt = 0
   Insn 69: point = 1139, n_alt = 3
  BB 3
   Insn 44: point = 1141, n_alt = -1
   Insn 43: point = 1141, n_alt = 0
  BB 7
   Insn 898: point = 1142, n_alt = -1
   Insn 63: point = 1142, n_alt = 0
  BB 5
   Insn 51: point = 1143, n_alt = -1
   Insn 50: point = 1143, n_alt = 0
  BB 6
   Insn 896: point = 1144, n_alt = -1
   Insn 57: point = 1144, n_alt = 0
   Insn 56: point = 1144, n_alt = 8
   Insn 55: point = 1145, n_alt = 7
   Insn 54: point = 1146, n_alt = 3
   Insn 53: point = 1147, n_alt = 3
  BB 4
   Insn 48: point = 1149, n_alt = 2
   Insn 47: point = 1150, n_alt = 3
   Insn 967: point = 1152, n_alt = -2
	Hard reg 2 is preferable by r736 with profit 1000
   Insn 46: point = 1154, n_alt = 2
   Insn 966: point = 1154, n_alt = -2
  BB 2
   Insn 41: point = 1156, n_alt = 2
   Insn 40: point = 1157, n_alt = 1
   Insn 39: point = 1159, n_alt = 0
   Insn 38: point = 1161, n_alt = 3
   Insn 37: point = 1162, n_alt = 1
   Insn 36: point = 1164, n_alt = 0
   Insn 35: point = 1166, n_alt = 3
   Insn 965: point = 1167, n_alt = -2
	Hard reg 1 is preferable by r735 with profit 1000
   Insn 34: point = 1169, n_alt = 0
   Insn 964: point = 1169, n_alt = -2
   Insn 30: point = 1170, n_alt = 2
   Insn 29: point = 1171, n_alt = 3
   Insn 28: point = 1172, n_alt = -2
   Insn 26: point = 1174, n_alt = 1
   Insn 24: point = 1176, n_alt = 0
   Insn 25: point = 1176, n_alt = 2
   Insn 963: point = 1177, n_alt = -2
	Hard reg 1 is preferable by r734 with profit 1000
   Insn 23: point = 1179, n_alt = 2
   Insn 962: point = 1179, n_alt = -2
   Insn 22: point = 1180, n_alt = 5
   Insn 21: point = 1181, n_alt = 1
   Insn 20: point = 1183, n_alt = 0
   Insn 19: point = 1185, n_alt = 3
   Insn 18: point = 1186, n_alt = 1
   Insn 16: point = 1188, n_alt = 0
   Insn 17: point = 1188, n_alt = 2
   Insn 15: point = 1189, n_alt = 3
   Insn 14: point = 1190, n_alt = 5
   Insn 13: point = 1191, n_alt = 0
   Insn 12: point = 1193, n_alt = 0
   Insn 11: point = 1195, n_alt = 3
   Insn 7: point = 1196, n_alt = 5
   Insn 6: point = 1196, n_alt = 5
   Insn 5: point = 1196, n_alt = 5
   Insn 4: point = 1196, n_alt = 5
   Insn 3: point = 1196, n_alt = 5
   Insn 2: point = 1196, n_alt = 5
 r87: [1192..1193]
 r88: [1182..1183]
 r89: [1171..1172]
 r90: [1170..1196]
 r92: [1163..1164]
 r93: [1158..1159]
 r94: [1151..1152]
 r95: [1144..1147]
 r96: [1136..1137]
 r97: [1131..1132]
 r98: [1126..1127]
 r99: [1120..1122]
 r100: [1112..1113]
 r101: [1106..1107]
 r102: [1100..1101]
 r103: [1097..1099]
 r104: [1085..1091]
 r105: [1071..1075]
 r106: [1054..1055]
 r107: [1049..1053]
 r108: [1049..1050]
 r109: [1047..1048]
 r110: [1043..1046]
 r111: [1039..1040]
 r112: [1034..1038]
 r113: [1034..1035]
 r114: [1032..1033]
 r115: [1029..1031]
 r116: [1025..1026]
 r117: [1020..1024]
 r118: [1020..1021]
 r119: [1018..1019]
 r120: [1015..1017]
 r121: [1011..1012]
 r122: [1006..1010]
 r123: [1006..1007]
 r124: [1004..1005]
 r125: [1001..1003]
 r126: [991..992]
 r127: [986..990]
 r128: [986..987]
 r129: [984..985]
 r130: [981..983]
 r131: [973..974]
 r132: [968..972]
 r133: [968..969]
 r134: [966..967]
 r135: [963..965]
 r136: [941..958]
 r137: [954..955]
 r138: [951..953]
 r139: [949..950]
 r140: [946..948]
 r141: [941..942]
 r142: [939..940]
 r143: [936..938]
 r144: [916..933]
 r145: [929..930]
 r146: [926..928]
 r147: [924..925]
 r148: [921..923]
 r149: [916..917]
 r150: [914..915]
 r151: [911..913]
 r152: [901..902]
 r153: [899..900]
 r154: [896..898]
 r155: [890..891]
 r156: [888..889]
 r157: [883..885]
 r158: [877..878]
 r159: [875..876]
 r160: [870..874]
 r161: [870..871]
 r162: [868..869]
 r163: [865..867]
 r164: [861..862]
 r165: [859..860]
 r166: [857..858]
 r167: [855..856]
 r168: [826..852]
 r169: [848..849]
 r170: [846..847]
 r171: [841..845]
 r172: [841..842]
 r173: [839..840]
 r174: [836..838]
 r175: [832..833]
 r176: [830..831]
 r177: [828..829]
 r178: [826..827]
 r179: [741..825]
 r180: [821..822]
 r181: [819..820]
 r182: [814..818]
 r183: [814..815]
 r184: [812..813]
 r185: [809..811]
 r186: [804..806]
 r187: [783..803]
 r188: [799..800]
 r189: [797..798]
 r190: [792..796]
 r191: [792..793]
 r192: [790..791]
 r193: [787..789]
 r194: [781..784]
 r195: [759..779]
 r196: [775..776]
 r197: [773..774]
 r198: [768..772]
 r199: [768..769]
 r200: [766..767]
 r201: [763..765]
 r202: [759..760]
 r203: [757..758]
 r204: [755..756]
 r205: [741..754]
 r206: [750..751]
 r207: [745..749]
 r208: [745..746]
 r209: [743..744]
 r210: [738..742]
 r211: [738..740]
 r212: [734..735]
 r213: [732..733]
 r214: [727..731]
 r215: [727..728]
 r216: [725..726]
 r217: [722..724]
 r218: [718..719]
 r219: [716..717]
 r220: [714..715]
 r221: [712..713]
 r222: [683..709]
 r223: [705..706]
 r224: [703..704]
 r225: [698..702]
 r226: [698..699]
 r227: [696..697]
 r228: [693..695]
 r229: [689..690]
 r230: [687..688]
 r231: [685..686]
 r232: [683..684]
 r233: [598..682]
 r234: [678..679]
 r235: [676..677]
 r236: [671..675]
 r237: [671..672]
 r238: [669..670]
 r239: [666..668]
 r240: [661..663]
 r241: [640..660]
 r242: [656..657]
 r243: [654..655]
 r244: [649..653]
 r245: [649..650]
 r246: [647..648]
 r247: [644..646]
 r248: [638..641]
 r249: [616..636]
 r250: [632..633]
 r251: [630..631]
 r252: [625..629]
 r253: [625..626]
 r254: [623..624]
 r255: [620..622]
 r256: [616..617]
 r257: [614..615]
 r258: [612..613]
 r259: [598..611]
 r260: [607..608]
 r261: [602..606]
 r262: [602..603]
 r263: [600..601]
 r264: [595..599]
 r265: [595..597]
 r266: [573..574]
 r267: [568..572]
 r268: [568..569]
 r269: [566..567]
 r270: [563..565]
 r271: [554..555]
 r272: [549..553]
 r273: [549..550]
 r274: [547..548]
 r275: [544..546]
 r276: [536..537]
 r277: [533..535]
 r278: [527..528]
 r279: [524..526]
 r280: [517..518]
 r281: [515..516]
 r282: [507..514]
 r283: [509..510]
 r284: [507..508]
 r285: [505..506]
 r286: [502..504]
 r287: [483..499]
 r288: [495..496]
 r289: [490..494]
 r290: [490..491]
 r291: [488..489]
 r292: [485..487]
 r293: [483..484]
 r294: [481..482]
 r295: [471..472]
 r296: [469..470]
 r297: [461..468]
 r298: [463..464]
 r299: [461..462]
 r300: [459..460]
 r301: [456..458]
 r302: [437..453]
 r303: [449..450]
 r304: [444..448]
 r305: [444..445]
 r306: [442..443]
 r307: [439..441]
 r308: [437..438]
 r309: [435..436]
 r310: [425..426]
 r311: [420..424]
 r312: [420..421]
 r313: [418..419]
 r314: [415..417]
 r315: [413..414]
 r316: [408..409]
 r317: [403..407]
 r318: [403..404]
 r319: [401..402]
 r320: [397..400]
 r321: [393..394]
 r322: [388..392]
 r323: [388..389]
 r324: [386..387]
 r325: [379..385]
 r326: [379..381]
 r327: [375..376]
 r328: [370..374]
 r329: [370..371]
 r330: [368..369]
 r331: [361..367]
 r332: [361..363]
 r333: [333..334]
 r334: [328..332]
 r335: [328..329]
 r336: [326..327]
 r337: [323..325]
 r338: [321..322]
 r339: [316..317]
 r340: [311..315]
 r341: [311..312]
 r342: [309..310]
 r343: [306..308]
 r344: [304..305]
 r345: [302..303]
 r346: [300..301]
 r347: [281..299]
 r348: [295..296]
 r349: [290..294]
 r350: [290..291]
 r351: [288..289]
 r352: [285..287]
 r353: [283..284]
 r354: [281..282]
 r355: [278..280]
 r356: [221..277]
 r357: [273..274]
 r358: [268..272]
 r359: [268..269]
 r360: [266..267]
 r361: [263..265]
 r362: [221..262]
 r363: [258..259]
 r364: [253..257]
 r365: [253..254]
 r366: [251..252]
 r367: [248..250]
 r368: [246..247]
 r369: [244..245]
 r370: [242..243]
 r371: [223..241]
 r372: [237..238]
 r373: [232..236]
 r374: [232..233]
 r375: [230..231]
 r376: [227..229]
 r377: [225..226]
 r378: [223..224]
 r379: [218..222]
 r380: [218..220]
 r381: [214..215]
 r382: [209..213]
 r383: [209..210]
 r384: [207..208]
 r385: [204..206]
 r386: [202..203]
 r387: [200..201]
 r388: [181..199]
 r389: [195..196]
 r390: [190..194]
 r391: [190..191]
 r392: [188..189]
 r393: [185..187]
 r394: [183..184]
 r395: [181..182]
 r396: [179..180]
 r397: [176..178]
 r398: [134..175]
 r399: [171..172]
 r400: [166..170]
 r401: [166..167]
 r402: [164..165]
 r403: [161..163]
 r404: [159..160]
 r405: [157..158]
 r406: [138..156]
 r407: [152..153]
 r408: [147..151]
 r409: [147..148]
 r410: [145..146]
 r411: [142..144]
 r412: [140..141]
 r413: [138..139]
 r414: [136..137]
 r415: [131..135]
 r416: [131..133]
 r417: [90..91]
 r418: [85..89]
 r419: [85..86]
 r420: [83..84]
 r421: [80..82]
 r422: [78..79]
 r423: [57..58]
 r424: [55..56]
 r425: [50..54]
 r426: [50..51]
 r427: [47..49]
 r428: [16..46]
 r429: [42..43]
 r430: [37..41]
 r431: [37..38]
 r432: [35..36]
 r433: [32..34]
 r434: [30..31]
 r435: [16..29]
 r436: [25..26]
 r437: [23..24]
 r438: [18..22]
 r439: [18..19]
 r440: [13..17]
 r441: [13..15]
 r442: [73..74]
 r443: [71..72]
 r444: [66..70]
 r445: [66..67]
 r446: [62..65]
 r447: [1141..1156]
 r448: [1143..1149]
 r449: [1117..1129]
 r450: [1119..1124]
 r451: [1187..1189]
 r452: [0..1186]
 r453: [1175..1177]
 r454: [1173..1174]
 r458: [0..1167]
 r459: [1141..1162]
 r460: [1141..1157]
 r461: [1143..1150]
 r462: [1117..1135]
 r463: [1117..1130]
 r464: [1119..1125]
 r465: [104..105]
 r466: [111..1065]
 r467: [111..112]
 r468: [118..1061]
 r469: [118..119]
 r470: [589..1059]
 r471: [589..590]
 r472: [341..584]
 r473: [341..342]
 r474: [348..580]
 r475: [348..349]
 r476: [355..578]
 r477: [355..356]
 r478: [478..480]
 r479: [431..476]
 r480: [433..434]
 r481: [431..432]
 r482: [125..338]
 r483: [125..126]
 r484: [0..99]
 r485: [0..1]
 r486: [7..95]
 r487: [7..8]
 r488: [1194..1195]
 r489: [1190..1191]
 r490: [1187..1188]
 r491: [1184..1185]
 r492: [1180..1181]
 r493: [1175..1176]
 r494: [1165..1166]
 r495: [1160..1161]
 r496: [1144..1146]
 r497: [1144..1145]
 r498: [1138..1139]
 r499: [1133..1134]
 r500: [1120..1121]
 r501: [1114..1115]
 r502: [1110..1111]
 r503: [1108..1109]
 r504: [1104..1105]
 r505: [1102..1103]
 r506: [1095..1096]
 r507: [1097..1098]
 r508: [106..107]
 r509: [1092..1093]
 r510: [1087..1088]
 r511: [1079..1086]
 r512: [1083..1084]
 r513: [1081..1082]
 r514: [1076..1077]
 r515: [1073..1074]
 r516: [1068..1069]
 r517: [1066..1067]
 r518: [113..114]
 r519: [1062..1063]
 r520: [120..121]
 r521: [591..592]
 r522: [1056..1057]
 r523: [1051..1052]
 r524: [1043..1045]
 r525: [1043..1044]
 r526: [1041..1042]
 r527: [1036..1037]
 r528: [1029..1030]
 r529: [1027..1028]
 r530: [1022..1023]
 r531: [1015..1016]
 r532: [1013..1014]
 r533: [1008..1009]
 r534: [999..1002]
 r535: [999..1000]
 r536: [997..998]
 r537: [993..994]
 r538: [988..989]
 r539: [979..982]
 r540: [979..980]
 r541: [977..978]
 r542: [975..976]
 r543: [970..971]
 r544: [961..964]
 r545: [961..962]
 r546: [959..960]
 r547: [956..957]
 r548: [951..952]
 r549: [944..947]
 r550: [934..935]
 r551: [936..937]
 r552: [931..932]
 r553: [926..927]
 r554: [919..922]
 r555: [909..910]
 r556: [911..912]
 r557: [905..906]
 r558: [907..908]
 r559: [903..904]
 r562: [894..895]
 r563: [896..897]
 r564: [892..893]
 r565: [886..887]
 r568: [881..882]
 r569: [883..884]
 r570: [879..880]
 r571: [872..873]
 r572: [863..866]
 r573: [863..864]
 r574: [850..851]
 r575: [843..844]
 r576: [834..837]
 r577: [834..835]
 r578: [823..824]
 r579: [816..817]
 r580: [807..810]
 r581: [807..808]
 r582: [804..805]
 r583: [801..802]
 r584: [794..795]
 r585: [785..788]
 r586: [785..786]
 r587: [777..778]
 r588: [770..771]
 r589: [761..764]
 r590: [761..762]
 r591: [752..753]
 r592: [747..748]
 r593: [738..739]
 r594: [736..737]
 r595: [729..730]
 r596: [720..723]
 r597: [720..721]
 r598: [707..708]
 r599: [700..701]
 r600: [691..694]
 r601: [691..692]
 r602: [680..681]
 r603: [673..674]
 r604: [664..667]
 r605: [664..665]
 r606: [661..662]
 r607: [658..659]
 r608: [651..652]
 r609: [642..645]
 r610: [642..643]
 r611: [634..635]
 r612: [627..628]
 r613: [618..621]
 r614: [618..619]
 r615: [609..610]
 r616: [604..605]
 r617: [595..596]
 r618: [585..586]
 r619: [343..344]
 r620: [581..582]
 r621: [350..351]
 r622: [357..358]
 r623: [575..576]
 r624: [570..571]
 r625: [561..564]
 r626: [561..562]
 r627: [559..560]
 r628: [556..557]
 r629: [551..552]
 r630: [542..545]
 r631: [542..543]
 r632: [540..541]
 r633: [538..539]
 r636: [531..532]
 r637: [533..534]
 r638: [529..530]
 r641: [522..523]
 r642: [524..525]
 r643: [519..521]
 r644: [519..520]
 r645: [511..513]
 r646: [511..512]
 r647: [500..503]
 r648: [500..501]
 r649: [497..498]
 r650: [492..493]
 r651: [485..486]
 r652: [473..475]
 r653: [473..474]
 r654: [465..467]
 r655: [465..466]
 r656: [454..457]
 r657: [454..455]
 r658: [451..452]
 r659: [446..447]
 r660: [439..440]
 r661: [429..430]
 r662: [427..428]
 r663: [422..423]
 r664: [415..416]
 r665: [410..411]
 r666: [405..406]
 r667: [397..399]
 r668: [397..398]
 r669: [395..396]
 r670: [390..391]
 r671: [382..384]
 r672: [382..383]
 r673: [379..380]
 r674: [377..378]
 r675: [372..373]
 r676: [364..366]
 r677: [364..365]
 r678: [361..362]
 r679: [127..128]
 r680: [335..336]
 r681: [330..331]
 r682: [323..324]
 r683: [318..319]
 r684: [313..314]
 r685: [306..307]
 r686: [297..298]
 r687: [292..293]
 r688: [285..286]
 r689: [278..279]
 r690: [275..276]
 r691: [270..271]
 r692: [263..264]
 r693: [260..261]
 r694: [255..256]
 r695: [248..249]
 r696: [239..240]
 r697: [234..235]
 r698: [227..228]
 r699: [218..219]
 r700: [216..217]
 r701: [211..212]
 r702: [204..205]
 r703: [197..198]
 r704: [192..193]
 r705: [185..186]
 r706: [176..177]
 r707: [173..174]
 r708: [168..169]
 r709: [161..162]
 r710: [154..155]
 r711: [149..150]
 r712: [142..143]
 r713: [131..132]
 r714: [100..101]
 r715: [2..3]
 r716: [96..97]
 r717: [9..10]
 r718: [92..93]
 r719: [87..88]
 r720: [80..81]
 r721: [59..60]
 r722: [52..53]
 r723: [47..48]
 r724: [44..45]
 r725: [39..40]
 r726: [32..33]
 r727: [27..28]
 r728: [20..21]
 r729: [13..14]
 r730: [75..76]
 r731: [68..69]
 r732: [62..64]
 r733: [62..63]
 r734: [1178..1179]
 r735: [1168..1169]
 r736: [1153..1154]
 r737: [1089..1090]
 r738: [1078..1080]
 r739: [1070..1072]
 r740: [943..945]
 r741: [918..920]
 r742: [853..854]
 r743: [780..782]
 r744: [710..711]
 r745: [637..639]
 r746: [477..479]
Compressing live ranges: from 1197 to 960 - 80%
Ranges after the compression:
 r87: [956..957]
 r88: [948..949]
 r89: [938..939]
 r90: [938..959]
 r92: [932..933]
 r93: [928..929]
 r94: [924..925]
 r95: [922..923]
 r96: [918..919]
 r97: [914..915]
 r98: [912..913]
 r99: [910..911]
 r100: [906..907]
 r101: [900..901]
 r102: [894..895]
 r103: [892..893]
 r104: [882..887]
 r105: [870..873]
 r106: [860..861]
 r107: [856..859]
 r108: [856..857]
 r109: [854..855]
 r110: [852..853]
 r111: [848..849]
 r112: [844..847]
 r113: [844..845]
 r114: [842..843]
 r115: [840..841]
 r116: [836..837]
 r117: [832..835]
 r118: [832..833]
 r119: [830..831]
 r120: [828..829]
 r121: [824..825]
 r122: [820..823]
 r123: [820..821]
 r124: [818..819]
 r125: [816..817]
 r126: [808..809]
 r127: [804..807]
 r128: [804..805]
 r129: [802..803]
 r130: [800..801]
 r131: [792..793]
 r132: [788..791]
 r133: [788..789]
 r134: [786..787]
 r135: [784..785]
 r136: [766..779]
 r137: [776..777]
 r138: [774..775]
 r139: [772..773]
 r140: [770..771]
 r141: [766..767]
 r142: [764..765]
 r143: [762..763]
 r144: [746..759]
 r145: [756..757]
 r146: [754..755]
 r147: [752..753]
 r148: [750..751]
 r149: [746..747]
 r150: [744..745]
 r151: [742..743]
 r152: [732..733]
 r153: [730..731]
 r154: [728..729]
 r155: [722..723]
 r156: [720..721]
 r157: [716..717]
 r158: [710..711]
 r159: [708..709]
 r160: [704..707]
 r161: [704..705]
 r162: [702..703]
 r163: [700..701]
 r164: [696..697]
 r165: [694..695]
 r166: [692..693]
 r167: [690..691]
 r168: [664..687]
 r169: [684..685]
 r170: [682..683]
 r171: [678..681]
 r172: [678..679]
 r173: [676..677]
 r174: [674..675]
 r175: [670..671]
 r176: [668..669]
 r177: [666..667]
 r178: [664..665]
 r179: [592..663]
 r180: [660..661]
 r181: [658..659]
 r182: [654..657]
 r183: [654..655]
 r184: [652..653]
 r185: [650..651]
 r186: [646..647]
 r187: [628..645]
 r188: [642..643]
 r189: [640..641]
 r190: [636..639]
 r191: [636..637]
 r192: [634..635]
 r193: [632..633]
 r194: [626..629]
 r195: [608..625]
 r196: [622..623]
 r197: [620..621]
 r198: [616..619]
 r199: [616..617]
 r200: [614..615]
 r201: [612..613]
 r202: [608..609]
 r203: [606..607]
 r204: [604..605]
 r205: [592..603]
 r206: [600..601]
 r207: [596..599]
 r208: [596..597]
 r209: [594..595]
 r210: [590..593]
 r211: [590..591]
 r212: [586..587]
 r213: [584..585]
 r214: [580..583]
 r215: [580..581]
 r216: [578..579]
 r217: [576..577]
 r218: [572..573]
 r219: [570..571]
 r220: [568..569]
 r221: [566..567]
 r222: [540..563]
 r223: [560..561]
 r224: [558..559]
 r225: [554..557]
 r226: [554..555]
 r227: [552..553]
 r228: [550..551]
 r229: [546..547]
 r230: [544..545]
 r231: [542..543]
 r232: [540..541]
 r233: [468..539]
 r234: [536..537]
 r235: [534..535]
 r236: [530..533]
 r237: [530..531]
 r238: [528..529]
 r239: [526..527]
 r240: [522..523]
 r241: [504..521]
 r242: [518..519]
 r243: [516..517]
 r244: [512..515]
 r245: [512..513]
 r246: [510..511]
 r247: [508..509]
 r248: [502..505]
 r249: [484..501]
 r250: [498..499]
 r251: [496..497]
 r252: [492..495]
 r253: [492..493]
 r254: [490..491]
 r255: [488..489]
 r256: [484..485]
 r257: [482..483]
 r258: [480..481]
 r259: [468..479]
 r260: [476..477]
 r261: [472..475]
 r262: [472..473]
 r263: [470..471]
 r264: [466..469]
 r265: [466..467]
 r266: [454..455]
 r267: [450..453]
 r268: [450..451]
 r269: [448..449]
 r270: [446..447]
 r271: [438..439]
 r272: [434..437]
 r273: [434..435]
 r274: [432..433]
 r275: [430..431]
 r276: [422..423]
 r277: [420..421]
 r278: [414..415]
 r279: [412..413]
 r280: [406..407]
 r281: [404..405]
 r282: [398..403]
 r283: [400..401]
 r284: [398..399]
 r285: [396..397]
 r286: [394..395]
 r287: [378..391]
 r288: [388..389]
 r289: [384..387]
 r290: [384..385]
 r291: [382..383]
 r292: [380..381]
 r293: [378..379]
 r294: [376..377]
 r295: [370..371]
 r296: [368..369]
 r297: [362..367]
 r298: [364..365]
 r299: [362..363]
 r300: [360..361]
 r301: [358..359]
 r302: [342..355]
 r303: [352..353]
 r304: [348..351]
 r305: [348..349]
 r306: [346..347]
 r307: [344..345]
 r308: [342..343]
 r309: [340..341]
 r310: [330..331]
 r311: [326..329]
 r312: [326..327]
 r313: [324..325]
 r314: [322..323]
 r315: [320..321]
 r316: [316..317]
 r317: [312..315]
 r318: [312..313]
 r319: [310..311]
 r320: [308..309]
 r321: [304..305]
 r322: [300..303]
 r323: [300..301]
 r324: [298..299]
 r325: [294..297]
 r326: [294..295]
 r327: [290..291]
 r328: [286..289]
 r329: [286..287]
 r330: [284..285]
 r331: [280..283]
 r332: [280..281]
 r333: [264..265]
 r334: [260..263]
 r335: [260..261]
 r336: [258..259]
 r337: [256..257]
 r338: [254..255]
 r339: [250..251]
 r340: [246..249]
 r341: [246..247]
 r342: [244..245]
 r343: [242..243]
 r344: [240..241]
 r345: [238..239]
 r346: [236..237]
 r347: [220..235]
 r348: [232..233]
 r349: [228..231]
 r350: [228..229]
 r351: [226..227]
 r352: [224..225]
 r353: [222..223]
 r354: [220..221]
 r355: [218..219]
 r356: [170..217]
 r357: [214..215]
 r358: [210..213]
 r359: [210..211]
 r360: [208..209]
 r361: [206..207]
 r362: [170..205]
 r363: [202..203]
 r364: [198..201]
 r365: [198..199]
 r366: [196..197]
 r367: [194..195]
 r368: [192..193]
 r369: [190..191]
 r370: [188..189]
 r371: [172..187]
 r372: [184..185]
 r373: [180..183]
 r374: [180..181]
 r375: [178..179]
 r376: [176..177]
 r377: [174..175]
 r378: [172..173]
 r379: [168..171]
 r380: [168..169]
 r381: [164..165]
 r382: [160..163]
 r383: [160..161]
 r384: [158..159]
 r385: [156..157]
 r386: [154..155]
 r387: [152..153]
 r388: [136..151]
 r389: [148..149]
 r390: [144..147]
 r391: [144..145]
 r392: [142..143]
 r393: [140..141]
 r394: [138..139]
 r395: [136..137]
 r396: [134..135]
 r397: [132..133]
 r398: [96..131]
 r399: [128..129]
 r400: [124..127]
 r401: [124..125]
 r402: [122..123]
 r403: [120..121]
 r404: [118..119]
 r405: [116..117]
 r406: [100..115]
 r407: [112..113]
 r408: [108..111]
 r409: [108..109]
 r410: [106..107]
 r411: [104..105]
 r412: [102..103]
 r413: [100..101]
 r414: [98..99]
 r415: [94..97]
 r416: [94..95]
 r417: [70..71]
 r418: [66..69]
 r419: [66..67]
 r420: [64..65]
 r421: [62..63]
 r422: [60..61]
 r423: [44..45]
 r424: [42..43]
 r425: [38..41]
 r426: [38..39]
 r427: [36..37]
 r428: [10..35]
 r429: [32..33]
 r430: [28..31]
 r431: [28..29]
 r432: [26..27]
 r433: [24..25]
 r434: [22..23]
 r435: [10..21]
 r436: [18..19]
 r437: [16..17]
 r438: [12..15]
 r439: [12..13]
 r440: [8..11]
 r441: [8..9]
 r442: [56..57]
 r443: [54..55]
 r444: [50..53]
 r445: [50..51]
 r446: [48..49]
 r447: [922..927]
 r448: [922..923]
 r449: [910..913]
 r450: [910..911]
 r451: [952..953]
 r452: [0..951]
 r453: [942..943]
 r454: [940..941]
 r458: [0..935]
 r459: [922..931]
 r460: [922..927]
 r461: [922..923]
 r462: [910..917]
 r463: [910..913]
 r464: [910..911]
 r465: [78..79]
 r466: [82..865]
 r467: [82..83]
 r468: [86..863]
 r469: [86..87]
 r470: [462..863]
 r471: [462..463]
 r472: [268..459]
 r473: [268..269]
 r474: [272..457]
 r475: [272..273]
 r476: [276..457]
 r477: [276..277]
 r478: [374..375]
 r479: [336..373]
 r480: [338..339]
 r481: [336..337]
 r482: [90..267]
 r483: [90..91]
 r484: [0..75]
 r485: [0..1]
 r486: [4..73]
 r487: [4..5]
 r488: [958..959]
 r489: [954..955]
 r490: [952..953]
 r491: [950..951]
 r492: [946..947]
 r493: [942..943]
 r494: [934..935]
 r495: [930..931]
 r496: [922..923]
 r497: [922..923]
 r498: [920..921]
 r499: [916..917]
 r500: [910..911]
 r501: [908..909]
 r502: [904..905]
 r503: [902..903]
 r504: [898..899]
 r505: [896..897]
 r506: [890..891]
 r507: [892..893]
 r508: [80..81]
 r509: [888..889]
 r510: [884..885]
 r511: [876..883]
 r512: [880..881]
 r513: [878..879]
 r514: [874..875]
 r515: [872..873]
 r516: [868..869]
 r517: [866..867]
 r518: [84..85]
 r519: [864..865]
 r520: [88..89]
 r521: [464..465]
 r522: [862..863]
 r523: [858..859]
 r524: [852..853]
 r525: [852..853]
 r526: [850..851]
 r527: [846..847]
 r528: [840..841]
 r529: [838..839]
 r530: [834..835]
 r531: [828..829]
 r532: [826..827]
 r533: [822..823]
 r534: [814..817]
 r535: [814..815]
 r536: [812..813]
 r537: [810..811]
 r538: [806..807]
 r539: [798..801]
 r540: [798..799]
 r541: [796..797]
 r542: [794..795]
 r543: [790..791]
 r544: [782..785]
 r545: [782..783]
 r546: [780..781]
 r547: [778..779]
 r548: [774..775]
 r549: [768..771]
 r550: [760..761]
 r551: [762..763]
 r552: [758..759]
 r553: [754..755]
 r554: [748..751]
 r555: [740..741]
 r556: [742..743]
 r557: [736..737]
 r558: [738..739]
 r559: [734..735]
 r562: [726..727]
 r563: [728..729]
 r564: [724..725]
 r565: [718..719]
 r568: [714..715]
 r569: [716..717]
 r570: [712..713]
 r571: [706..707]
 r572: [698..701]
 r573: [698..699]
 r574: [686..687]
 r575: [680..681]
 r576: [672..675]
 r577: [672..673]
 r578: [662..663]
 r579: [656..657]
 r580: [648..651]
 r581: [648..649]
 r582: [646..647]
 r583: [644..645]
 r584: [638..639]
 r585: [630..633]
 r586: [630..631]
 r587: [624..625]
 r588: [618..619]
 r589: [610..613]
 r590: [610..611]
 r591: [602..603]
 r592: [598..599]
 r593: [590..591]
 r594: [588..589]
 r595: [582..583]
 r596: [574..577]
 r597: [574..575]
 r598: [562..563]
 r599: [556..557]
 r600: [548..551]
 r601: [548..549]
 r602: [538..539]
 r603: [532..533]
 r604: [524..527]
 r605: [524..525]
 r606: [522..523]
 r607: [520..521]
 r608: [514..515]
 r609: [506..509]
 r610: [506..507]
 r611: [500..501]
 r612: [494..495]
 r613: [486..489]
 r614: [486..487]
 r615: [478..479]
 r616: [474..475]
 r617: [466..467]
 r618: [460..461]
 r619: [270..271]
 r620: [458..459]
 r621: [274..275]
 r622: [278..279]
 r623: [456..457]
 r624: [452..453]
 r625: [444..447]
 r626: [444..445]
 r627: [442..443]
 r628: [440..441]
 r629: [436..437]
 r630: [428..431]
 r631: [428..429]
 r632: [426..427]
 r633: [424..425]
 r636: [418..419]
 r637: [420..421]
 r638: [416..417]
 r641: [410..411]
 r642: [412..413]
 r643: [408..409]
 r644: [408..409]
 r645: [402..403]
 r646: [402..403]
 r647: [392..395]
 r648: [392..393]
 r649: [390..391]
 r650: [386..387]
 r651: [380..381]
 r652: [372..373]
 r653: [372..373]
 r654: [366..367]
 r655: [366..367]
 r656: [356..359]
 r657: [356..357]
 r658: [354..355]
 r659: [350..351]
 r660: [344..345]
 r661: [334..335]
 r662: [332..333]
 r663: [328..329]
 r664: [322..323]
 r665: [318..319]
 r666: [314..315]
 r667: [308..309]
 r668: [308..309]
 r669: [306..307]
 r670: [302..303]
 r671: [296..297]
 r672: [296..297]
 r673: [294..295]
 r674: [292..293]
 r675: [288..289]
 r676: [282..283]
 r677: [282..283]
 r678: [280..281]
 r679: [92..93]
 r680: [266..267]
 r681: [262..263]
 r682: [256..257]
 r683: [252..253]
 r684: [248..249]
 r685: [242..243]
 r686: [234..235]
 r687: [230..231]
 r688: [224..225]
 r689: [218..219]
 r690: [216..217]
 r691: [212..213]
 r692: [206..207]
 r693: [204..205]
 r694: [200..201]
 r695: [194..195]
 r696: [186..187]
 r697: [182..183]
 r698: [176..177]
 r699: [168..169]
 r700: [166..167]
 r701: [162..163]
 r702: [156..157]
 r703: [150..151]
 r704: [146..147]
 r705: [140..141]
 r706: [132..133]
 r707: [130..131]
 r708: [126..127]
 r709: [120..121]
 r710: [114..115]
 r711: [110..111]
 r712: [104..105]
 r713: [94..95]
 r714: [76..77]
 r715: [2..3]
 r716: [74..75]
 r717: [6..7]
 r718: [72..73]
 r719: [68..69]
 r720: [62..63]
 r721: [46..47]
 r722: [40..41]
 r723: [36..37]
 r724: [34..35]
 r725: [30..31]
 r726: [24..25]
 r727: [20..21]
 r728: [14..15]
 r729: [8..9]
 r730: [58..59]
 r731: [52..53]
 r732: [48..49]
 r733: [48..49]
 r734: [944..945]
 r735: [936..937]
 r736: [926..927]
 r737: [886..887]
 r738: [876..877]
 r739: [870..871]
 r740: [768..769]
 r741: [748..749]
 r742: [688..689]
 r743: [626..627]
 r744: [564..565]
 r745: [502..503]
 r746: [374..375]

********** Assignment #1: **********

	 Assigning to 734 (cl=GENERAL_REGS, orig=453, freq=3000, tfirst=734, tfreq=3000)...
	   Assign 1 to reload r734 (freq=3000)
	 Assigning to 735 (cl=GENERAL_REGS, orig=458, freq=3000, tfirst=735, tfreq=3000)...
	   Assign 1 to reload r735 (freq=3000)
	 Assigning to 736 (cl=GENERAL_REGS, orig=94, freq=3000, tfirst=736, tfreq=3000)...
	   Assign 2 to reload r736 (freq=3000)
	 Assigning to 737 (cl=GENERAL_REGS, orig=510, freq=3000, tfirst=737, tfreq=3000)...
	   Assign 2 to reload r737 (freq=3000)
	 Assigning to 738 (cl=GENERAL_REGS, orig=513, freq=3000, tfirst=738, tfreq=3000)...
	   Assign 4 to reload r738 (freq=3000)
	 Assigning to 739 (cl=GENERAL_REGS, orig=515, freq=3000, tfirst=739, tfreq=3000)...
	   Assign 4 to reload r739 (freq=3000)
	 Assigning to 740 (cl=SSE_REGS, orig=140, freq=3000, tfirst=740, tfreq=3000)...
	   Assign 23 to reload r740 (freq=3000)
	 Assigning to 741 (cl=SSE_REGS, orig=148, freq=3000, tfirst=741, tfreq=3000)...
	   Assign 23 to reload r741 (freq=3000)
	 Assigning to 742 (cl=SSE_REGS, orig=167, freq=3000, tfirst=742, tfreq=3000)...
	   Assign 22 to reload r742 (freq=3000)
	 Assigning to 743 (cl=SSE_REGS, orig=187, freq=3000, tfirst=743, tfreq=3000)...
	   Assign 21 to reload r743 (freq=3000)
	 Assigning to 744 (cl=SSE_REGS, orig=221, freq=3000, tfirst=744, tfreq=3000)...
	   Assign 22 to reload r744 (freq=3000)
	 Assigning to 745 (cl=SSE_REGS, orig=241, freq=3000, tfirst=745, tfreq=3000)...
	   Assign 21 to reload r745 (freq=3000)
	 Assigning to 746 (cl=SSE_REGS, orig=478, freq=3000, tfirst=746, tfreq=3000)...
	   Assign 22 to reload r746 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=72, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=40, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 12
changing reg in insn 13
changing reg in insn 20
changing reg in insn 21
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 29
changing reg in insn 36
changing reg in insn 37
changing reg in insn 39
changing reg in insn 40
changing reg in insn 47
changing reg in insn 53
changing reg in insn 56
changing reg in insn 70
changing reg in insn 71
changing reg in insn 73
changing reg in insn 74
changing reg in insn 80
changing reg in insn 81
changing reg in insn 87
changing reg in insn 89
changing reg in insn 103
changing reg in insn 104
changing reg in insn 107
changing reg in insn 108
changing reg in insn 111
changing reg in insn 112
changing reg in insn 112
changing reg in insn 114
changing reg in insn 125
changing reg in insn 128
changing reg in insn 131
changing reg in insn 133
changing reg in insn 165
changing reg in insn 166
changing reg in insn 166
changing reg in insn 168
changing reg in insn 169
changing reg in insn 170
changing reg in insn 170
changing reg in insn 173
changing reg in insn 175
changing reg in insn 176
changing reg in insn 176
changing reg in insn 178
changing reg in insn 179
changing reg in insn 180
changing reg in insn 180
changing reg in insn 182
changing reg in insn 184
changing reg in insn 185
changing reg in insn 185
changing reg in insn 187
changing reg in insn 188
changing reg in insn 189
changing reg in insn 189
changing reg in insn 191
changing reg in insn 193
changing reg in insn 194
changing reg in insn 194
changing reg in insn 196
changing reg in insn 197
changing reg in insn 198
changing reg in insn 198
changing reg in insn 200
changing reg in insn 207
changing reg in insn 208
changing reg in insn 208
changing reg in insn 210
changing reg in insn 211
changing reg in insn 212
changing reg in insn 212
changing reg in insn 214
changing reg in insn 218
changing reg in insn 219
changing reg in insn 219
changing reg in insn 221
changing reg in insn 222
changing reg in insn 223
changing reg in insn 223
changing reg in insn 225
changing reg in insn 228
changing reg in insn 237
changing reg in insn 230
changing reg in insn 231
changing reg in insn 231
changing reg in insn 233
changing reg in insn 234
changing reg in insn 234
changing reg in insn 237
changing reg in insn 237
changing reg in insn 238
changing reg in insn 238
changing reg in insn 240
changing reg in insn 242
changing reg in insn 251
changing reg in insn 244
changing reg in insn 245
changing reg in insn 245
changing reg in insn 247
changing reg in insn 248
changing reg in insn 248
changing reg in insn 251
changing reg in insn 251
changing reg in insn 252
changing reg in insn 252
changing reg in insn 254
changing reg in insn 260
changing reg in insn 261
changing reg in insn 261
changing reg in insn 262
changing reg in insn 262
changing reg in insn 267
changing reg in insn 270
changing reg in insn 271
changing reg in insn 271
changing reg in insn 272
changing reg in insn 273
changing reg in insn 278
changing reg in insn 281
changing reg in insn 282
changing reg in insn 282
changing reg in insn 283
changing reg in insn 283
changing reg in insn 285
changing reg in insn 286
changing reg in insn 287
changing reg in insn 287
changing reg in insn 289
changing reg in insn 290
changing reg in insn 291
changing reg in insn 291
changing reg in insn 292
changing reg in insn 292
changing reg in insn 293
changing reg in insn 293
changing reg in insn 309
changing reg in insn 296
changing reg in insn 297
changing reg in insn 297
changing reg in insn 298
changing reg in insn 298
changing reg in insn 300
changing reg in insn 301
changing reg in insn 302
changing reg in insn 302
changing reg in insn 304
changing reg in insn 305
changing reg in insn 306
changing reg in insn 306
changing reg in insn 307
changing reg in insn 307
changing reg in insn 308
changing reg in insn 308
changing reg in insn 309
changing reg in insn 309
changing reg in insn 311
changing reg in insn 312
changing reg in insn 312
changing reg in insn 313
changing reg in insn 313
changing reg in insn 315
changing reg in insn 316
changing reg in insn 317
changing reg in insn 317
changing reg in insn 319
changing reg in insn 320
changing reg in insn 322
changing reg in insn 322
changing reg in insn 324
changing reg in insn 325
changing reg in insn 325
changing reg in insn 326
changing reg in insn 326
changing reg in insn 328
changing reg in insn 329
changing reg in insn 330
changing reg in insn 330
changing reg in insn 332
changing reg in insn 333
changing reg in insn 334
changing reg in insn 336
changing reg in insn 337
changing reg in insn 337
changing reg in insn 338
changing reg in insn 338
changing reg in insn 340
changing reg in insn 341
changing reg in insn 342
changing reg in insn 342
changing reg in insn 344
changing reg in insn 345
changing reg in insn 346
changing reg in insn 347
changing reg in insn 347
changing reg in insn 348
changing reg in insn 348
changing reg in insn 350
changing reg in insn 351
changing reg in insn 351
changing reg in insn 353
changing reg in insn 354
changing reg in insn 355
changing reg in insn 355
changing reg in insn 358
changing reg in insn 356
changing reg in insn 358
changing reg in insn 360
changing reg in insn 361
changing reg in insn 361
changing reg in insn 362
changing reg in insn 362
changing reg in insn 364
changing reg in insn 365
changing reg in insn 366
changing reg in insn 366
changing reg in insn 368
changing reg in insn 369
changing reg in insn 370
changing reg in insn 370
changing reg in insn 371
changing reg in insn 371
changing reg in insn 372
changing reg in insn 372
changing reg in insn 388
changing reg in insn 375
changing reg in insn 376
changing reg in insn 376
changing reg in insn 377
changing reg in insn 377
changing reg in insn 379
changing reg in insn 380
changing reg in insn 381
changing reg in insn 381
changing reg in insn 383
changing reg in insn 384
changing reg in insn 385
changing reg in insn 385
changing reg in insn 386
changing reg in insn 386
changing reg in insn 387
changing reg in insn 387
changing reg in insn 388
changing reg in insn 388
changing reg in insn 390
changing reg in insn 391
changing reg in insn 391
changing reg in insn 392
changing reg in insn 392
changing reg in insn 394
changing reg in insn 395
changing reg in insn 396
changing reg in insn 396
changing reg in insn 398
changing reg in insn 399
changing reg in insn 401
changing reg in insn 401
changing reg in insn 403
changing reg in insn 404
changing reg in insn 404
changing reg in insn 405
changing reg in insn 405
changing reg in insn 407
changing reg in insn 408
changing reg in insn 409
changing reg in insn 409
changing reg in insn 411
changing reg in insn 412
changing reg in insn 413
changing reg in insn 415
changing reg in insn 416
changing reg in insn 416
changing reg in insn 417
changing reg in insn 417
changing reg in insn 419
changing reg in insn 420
changing reg in insn 421
changing reg in insn 421
changing reg in insn 423
changing reg in insn 424
changing reg in insn 425
changing reg in insn 426
changing reg in insn 426
changing reg in insn 427
changing reg in insn 427
changing reg in insn 429
changing reg in insn 430
changing reg in insn 430
changing reg in insn 432
changing reg in insn 433
changing reg in insn 434
changing reg in insn 434
changing reg in insn 437
changing reg in insn 435
changing reg in insn 437
changing reg in insn 476
changing reg in insn 477
changing reg in insn 477
changing reg in insn 479
changing reg in insn 480
changing reg in insn 481
changing reg in insn 481
changing reg in insn 483
changing reg in insn 490
changing reg in insn 491
changing reg in insn 491
changing reg in insn 493
changing reg in insn 494
changing reg in insn 495
changing reg in insn 495
changing reg in insn 497
changing reg in insn 501
changing reg in insn 502
changing reg in insn 502
changing reg in insn 507
changing reg in insn 507
changing reg in insn 510
changing reg in insn 511
changing reg in insn 511
changing reg in insn 516
changing reg in insn 516
changing reg in insn 520
changing reg in insn 521
changing reg in insn 521
changing reg in insn 522
changing reg in insn 522
changing reg in insn 525
changing reg in insn 526
changing reg in insn 526
changing reg in insn 527
changing reg in insn 528
changing reg in insn 528
changing reg in insn 530
changing reg in insn 531
changing reg in insn 541
changing reg in insn 533
changing reg in insn 534
changing reg in insn 534
changing reg in insn 536
changing reg in insn 537
changing reg in insn 538
changing reg in insn 538
changing reg in insn 540
changing reg in insn 540
changing reg in insn 541
changing reg in insn 541
changing reg in insn 542
changing reg in insn 546
changing reg in insn 547
changing reg in insn 547
changing reg in insn 548
changing reg in insn 548
changing reg in insn 551
changing reg in insn 552
changing reg in insn 552
changing reg in insn 553
changing reg in insn 554
changing reg in insn 554
changing reg in insn 556
changing reg in insn 557
changing reg in insn 567
changing reg in insn 559
changing reg in insn 560
changing reg in insn 560
changing reg in insn 562
changing reg in insn 563
changing reg in insn 564
changing reg in insn 564
changing reg in insn 566
changing reg in insn 566
changing reg in insn 567
changing reg in insn 567
changing reg in insn 568
changing reg in insn 573
changing reg in insn 574
changing reg in insn 574
changing reg in insn 576
changing reg in insn 577
changing reg in insn 578
changing reg in insn 578
changing reg in insn 580
changing reg in insn 580
changing reg in insn 581
changing reg in insn 588
changing reg in insn 589
changing reg in insn 589
changing reg in insn 591
changing reg in insn 592
changing reg in insn 593
changing reg in insn 593
changing reg in insn 596
changing reg in insn 598
changing reg in insn 599
changing reg in insn 599
changing reg in insn 601
changing reg in insn 602
changing reg in insn 603
changing reg in insn 603
changing reg in insn 608
changing reg in insn 606
changing reg in insn 608
changing reg in insn 610
changing reg in insn 611
changing reg in insn 611
changing reg in insn 613
changing reg in insn 614
changing reg in insn 615
changing reg in insn 615
changing reg in insn 620
changing reg in insn 618
changing reg in insn 620
changing reg in insn 651
changing reg in insn 652
changing reg in insn 652
changing reg in insn 654
changing reg in insn 655
changing reg in insn 656
changing reg in insn 656
changing reg in insn 658
changing reg in insn 658
changing reg in insn 659
changing reg in insn 663
changing reg in insn 664
changing reg in insn 664
changing reg in insn 666
changing reg in insn 667
changing reg in insn 668
changing reg in insn 668
changing reg in insn 670
changing reg in insn 670
changing reg in insn 671
changing reg in insn 671
changing reg in insn 672
changing reg in insn 673
changing reg in insn 673
changing reg in insn 684
changing reg in insn 675
changing reg in insn 676
changing reg in insn 676
changing reg in insn 678
changing reg in insn 679
changing reg in insn 680
changing reg in insn 680
changing reg in insn 682
changing reg in insn 682
changing reg in insn 683
changing reg in insn 683
changing reg in insn 684
changing reg in insn 684
changing reg in insn 686
changing reg in insn 686
changing reg in insn 688
changing reg in insn 689
changing reg in insn 689
changing reg in insn 691
changing reg in insn 692
changing reg in insn 693
changing reg in insn 693
changing reg in insn 695
changing reg in insn 695
changing reg in insn 697
changing reg in insn 698
changing reg in insn 698
changing reg in insn 700
changing reg in insn 701
changing reg in insn 702
changing reg in insn 702
changing reg in insn 704
changing reg in insn 704
changing reg in insn 705
changing reg in insn 705
changing reg in insn 706
changing reg in insn 707
changing reg in insn 707
changing reg in insn 718
changing reg in insn 709
changing reg in insn 710
changing reg in insn 710
changing reg in insn 712
changing reg in insn 713
changing reg in insn 714
changing reg in insn 714
changing reg in insn 716
changing reg in insn 716
changing reg in insn 717
changing reg in insn 717
changing reg in insn 718
changing reg in insn 718
changing reg in insn 721
changing reg in insn 719
changing reg in insn 721
changing reg in insn 723
changing reg in insn 724
changing reg in insn 724
changing reg in insn 726
changing reg in insn 727
changing reg in insn 728
changing reg in insn 728
changing reg in insn 730
changing reg in insn 730
changing reg in insn 731
changing reg in insn 731
changing reg in insn 732
changing reg in insn 732
changing reg in insn 734
changing reg in insn 735
changing reg in insn 735
changing reg in insn 737
changing reg in insn 738
changing reg in insn 739
changing reg in insn 739
changing reg in insn 741
changing reg in insn 741
changing reg in insn 742
changing reg in insn 742
changing reg in insn 743
changing reg in insn 744
changing reg in insn 744
changing reg in insn 746
changing reg in insn 746
changing reg in insn 770
changing reg in insn 748
changing reg in insn 749
changing reg in insn 749
changing reg in insn 751
changing reg in insn 752
changing reg in insn 753
changing reg in insn 753
changing reg in insn 755
changing reg in insn 755
changing reg in insn 756
changing reg in insn 756
changing reg in insn 757
changing reg in insn 757
changing reg in insn 759
changing reg in insn 760
changing reg in insn 760
changing reg in insn 762
changing reg in insn 763
changing reg in insn 764
changing reg in insn 764
changing reg in insn 766
changing reg in insn 766
changing reg in insn 767
changing reg in insn 767
changing reg in insn 768
changing reg in insn 769
changing reg in insn 769
changing reg in insn 772
changing reg in insn 770
changing reg in insn 772
changing reg in insn 820
changing reg in insn 821
changing reg in insn 821
changing reg in insn 823
changing reg in insn 824
changing reg in insn 825
changing reg in insn 825
changing reg in insn 827
changing reg in insn 827
changing reg in insn 828
changing reg in insn 832
changing reg in insn 833
changing reg in insn 834
changing reg in insn 834
changing reg in insn 837
changing reg in insn 836
changing reg in insn 837
changing reg in insn 837
changing reg in insn 839
changing reg in insn 839
changing reg in insn 857
changing reg in insn 841
changing reg in insn 842
changing reg in insn 842
changing reg in insn 844
changing reg in insn 845
changing reg in insn 846
changing reg in insn 846
changing reg in insn 848
changing reg in insn 848
changing reg in insn 849
changing reg in insn 849
changing reg in insn 857
changing reg in insn 851
changing reg in insn 852
changing reg in insn 853
changing reg in insn 853
changing reg in insn 856
changing reg in insn 855
changing reg in insn 856
changing reg in insn 856
changing reg in insn 859
changing reg in insn 857
changing reg in insn 859
changing reg in insn 865
changing reg in insn 866
changing reg in insn 867
changing reg in insn 867
changing reg in insn 870
changing reg in insn 869
changing reg in insn 870
changing reg in insn 870
changing reg in insn 873
changing reg in insn 63
changing reg in insn 41
changing reg in insn 63
changing reg in insn 43
changing reg in insn 57
changing reg in insn 48
changing reg in insn 57
changing reg in insn 53
changing reg in insn 50
changing reg in insn 96
changing reg in insn 75
changing reg in insn 96
changing reg in insn 80
changing reg in insn 77
changing reg in insn 90
changing reg in insn 82
changing reg in insn 90
changing reg in insn 87
changing reg in insn 84
changing reg in insn 15
changing reg in insn 18
changing reg in insn 16
changing reg in insn 18
changing reg in insn 46
changing reg in insn 26
changing reg in insn 24
changing reg in insn 26
changing reg in insn 28
changing reg in insn 867
changing reg in insn 853
changing reg in insn 834
changing reg in insn 707
changing reg in insn 673
changing reg in insn 47
changing reg in insn 37
changing reg in insn 50
changing reg in insn 40
changing reg in insn 43
changing reg in insn 47
changing reg in insn 53
changing reg in insn 71
changing reg in insn 84
changing reg in insn 74
changing reg in insn 77
changing reg in insn 81
changing reg in insn 87
changing reg in insn 120
changing reg in insn 121
changing reg in insn 136
changing reg in insn 139
changing reg in insn 141
changing reg in insn 142
changing reg in insn 146
changing reg in insn 149
changing reg in insn 151
changing reg in insn 152
changing reg in insn 155
changing reg in insn 158
changing reg in insn 160
changing reg in insn 161
changing reg in insn 447
changing reg in insn 450
changing reg in insn 452
changing reg in insn 453
changing reg in insn 457
changing reg in insn 460
changing reg in insn 462
changing reg in insn 463
changing reg in insn 466
changing reg in insn 469
changing reg in insn 471
changing reg in insn 472
changing reg in insn 542
changing reg in insn 543
changing reg in insn 568
changing reg in insn 569
changing reg in insn 569
changing reg in insn 569
changing reg in insn 641
changing reg in insn 644
changing reg in insn 646
changing reg in insn 647
changing reg in insn 800
changing reg in insn 803
changing reg in insn 805
changing reg in insn 806
changing reg in insn 810
changing reg in insn 813
changing reg in insn 815
changing reg in insn 816
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 26
changing reg in insn 35
changing reg in insn 36
changing reg in insn 38
changing reg in insn 39
changing reg in insn 54
changing reg in insn 56
changing reg in insn 55
changing reg in insn 56
changing reg in insn 69
changing reg in insn 70
changing reg in insn 72
changing reg in insn 73
changing reg in insn 88
changing reg in insn 89
changing reg in insn 102
changing reg in insn 103
changing reg in insn 104
changing reg in insn 105
changing reg in insn 106
changing reg in insn 107
changing reg in insn 108
changing reg in insn 109
changing reg in insn 110
changing reg in insn 111
changing reg in insn 114
changing reg in insn 115
changing reg in insn 113
changing reg in insn 114
changing reg in insn 119
changing reg in insn 120
changing reg in insn 124
changing reg in insn 125
changing reg in insn 127
changing reg in insn 127
changing reg in insn 130
changing reg in insn 128
changing reg in insn 128
changing reg in insn 129
changing reg in insn 129
changing reg in insn 131
changing reg in insn 132
changing reg in insn 134
changing reg in insn 135
changing reg in insn 136
changing reg in insn 140
changing reg in insn 141
changing reg in insn 145
changing reg in insn 146
changing reg in insn 150
changing reg in insn 151
changing reg in insn 159
changing reg in insn 160
changing reg in insn 164
changing reg in insn 165
changing reg in insn 167
changing reg in insn 168
changing reg in insn 171
changing reg in insn 173
changing reg in insn 172
changing reg in insn 173
changing reg in insn 174
changing reg in insn 175
changing reg in insn 177
changing reg in insn 178
changing reg in insn 181
changing reg in insn 182
changing reg in insn 183
changing reg in insn 184
changing reg in insn 186
changing reg in insn 187
changing reg in insn 190
changing reg in insn 191
changing reg in insn 192
changing reg in insn 193
changing reg in insn 195
changing reg in insn 196
changing reg in insn 199
changing reg in insn 201
changing reg in insn 200
changing reg in insn 201
changing reg in insn 201
changing reg in insn 202
changing reg in insn 206
changing reg in insn 207
changing reg in insn 209
changing reg in insn 210
changing reg in insn 213
changing reg in insn 215
changing reg in insn 214
changing reg in insn 215
changing reg in insn 215
changing reg in insn 216
changing reg in insn 217
changing reg in insn 218
changing reg in insn 220
changing reg in insn 221
changing reg in insn 224
changing reg in insn 226
changing reg in insn 225
changing reg in insn 226
changing reg in insn 226
changing reg in insn 227
changing reg in insn 229
changing reg in insn 230
changing reg in insn 232
changing reg in insn 235
changing reg in insn 236
changing reg in insn 240
changing reg in insn 241
changing reg in insn 239
changing reg in insn 240
changing reg in insn 243
changing reg in insn 244
changing reg in insn 246
changing reg in insn 249
changing reg in insn 250
changing reg in insn 254
changing reg in insn 255
changing reg in insn 253
changing reg in insn 254
changing reg in insn 257
changing reg in insn 258
changing reg in insn 256
changing reg in insn 257
changing reg in insn 259
changing reg in insn 260
changing reg in insn 267
changing reg in insn 268
changing reg in insn 266
changing reg in insn 269
changing reg in insn 270
changing reg in insn 272
changing reg in insn 273
changing reg in insn 278
changing reg in insn 279
changing reg in insn 277
changing reg in insn 280
changing reg in insn 281
changing reg in insn 284
changing reg in insn 285
changing reg in insn 288
changing reg in insn 290
changing reg in insn 289
changing reg in insn 290
changing reg in insn 295
changing reg in insn 296
changing reg in insn 299
changing reg in insn 300
changing reg in insn 303
changing reg in insn 305
changing reg in insn 304
changing reg in insn 305
changing reg in insn 310
changing reg in insn 311
changing reg in insn 314
changing reg in insn 315
changing reg in insn 318
changing reg in insn 320
changing reg in insn 319
changing reg in insn 320
changing reg in insn 321
changing reg in insn 322
changing reg in insn 323
changing reg in insn 324
changing reg in insn 327
changing reg in insn 328
changing reg in insn 331
changing reg in insn 333
changing reg in insn 332
changing reg in insn 333
changing reg in insn 335
changing reg in insn 336
changing reg in insn 339
changing reg in insn 340
changing reg in insn 343
changing reg in insn 345
changing reg in insn 344
changing reg in insn 345
changing reg in insn 349
changing reg in insn 350
changing reg in insn 352
changing reg in insn 353
changing reg in insn 357
changing reg in insn 358
changing reg in insn 359
changing reg in insn 360
changing reg in insn 363
changing reg in insn 364
changing reg in insn 367
changing reg in insn 369
changing reg in insn 368
changing reg in insn 369
changing reg in insn 374
changing reg in insn 375
changing reg in insn 378
changing reg in insn 379
changing reg in insn 382
changing reg in insn 384
changing reg in insn 383
changing reg in insn 384
changing reg in insn 389
changing reg in insn 390
changing reg in insn 393
changing reg in insn 394
changing reg in insn 397
changing reg in insn 399
changing reg in insn 398
changing reg in insn 399
changing reg in insn 400
changing reg in insn 401
changing reg in insn 402
changing reg in insn 403
changing reg in insn 406
changing reg in insn 407
changing reg in insn 410
changing reg in insn 412
changing reg in insn 411
changing reg in insn 412
changing reg in insn 414
changing reg in insn 415
changing reg in insn 418
changing reg in insn 419
changing reg in insn 422
changing reg in insn 424
changing reg in insn 423
changing reg in insn 424
changing reg in insn 428
changing reg in insn 429
changing reg in insn 431
changing reg in insn 432
changing reg in insn 436
changing reg in insn 437
changing reg in insn 446
changing reg in insn 447
changing reg in insn 451
changing reg in insn 452
changing reg in insn 456
changing reg in insn 457
changing reg in insn 461
changing reg in insn 462
changing reg in insn 470
changing reg in insn 471
changing reg in insn 475
changing reg in insn 476
changing reg in insn 478
changing reg in insn 479
changing reg in insn 482
changing reg in insn 484
changing reg in insn 483
changing reg in insn 484
changing reg in insn 484
changing reg in insn 485
changing reg in insn 489
changing reg in insn 490
changing reg in insn 492
changing reg in insn 493
changing reg in insn 496
changing reg in insn 498
changing reg in insn 497
changing reg in insn 498
changing reg in insn 498
changing reg in insn 499
changing reg in insn 500
changing reg in insn 501
changing reg in insn 507
changing reg in insn 508
changing reg in insn 506
changing reg in insn 507
changing reg in insn 509
changing reg in insn 510
changing reg in insn 516
changing reg in insn 517
changing reg in insn 515
changing reg in insn 516
changing reg in insn 518
changing reg in insn 519
changing reg in insn 523
changing reg in insn 524
changing reg in insn 529
changing reg in insn 531
changing reg in insn 530
changing reg in insn 531
changing reg in insn 532
changing reg in insn 533
changing reg in insn 535
changing reg in insn 536
changing reg in insn 539
changing reg in insn 540
changing reg in insn 544
changing reg in insn 545
changing reg in insn 549
changing reg in insn 550
changing reg in insn 555
changing reg in insn 557
changing reg in insn 556
changing reg in insn 557
changing reg in insn 558
changing reg in insn 559
changing reg in insn 561
changing reg in insn 562
changing reg in insn 565
changing reg in insn 566
changing reg in insn 570
changing reg in insn 571
changing reg in insn 572
changing reg in insn 573
changing reg in insn 575
changing reg in insn 576
changing reg in insn 579
changing reg in insn 580
changing reg in insn 587
changing reg in insn 588
changing reg in insn 590
changing reg in insn 591
changing reg in insn 594
changing reg in insn 596
changing reg in insn 595
changing reg in insn 596
changing reg in insn 597
changing reg in insn 598
changing reg in insn 600
changing reg in insn 601
changing reg in insn 604
changing reg in insn 606
changing reg in insn 605
changing reg in insn 606
changing reg in insn 607
changing reg in insn 608
changing reg in insn 609
changing reg in insn 610
changing reg in insn 612
changing reg in insn 613
changing reg in insn 616
changing reg in insn 618
changing reg in insn 617
changing reg in insn 618
changing reg in insn 619
changing reg in insn 620
changing reg in insn 645
changing reg in insn 646
changing reg in insn 650
changing reg in insn 651
changing reg in insn 653
changing reg in insn 654
changing reg in insn 657
changing reg in insn 658
changing reg in insn 662
changing reg in insn 663
changing reg in insn 665
changing reg in insn 666
changing reg in insn 669
changing reg in insn 670
changing reg in insn 674
changing reg in insn 675
changing reg in insn 677
changing reg in insn 678
changing reg in insn 681
changing reg in insn 682
changing reg in insn 685
changing reg in insn 686
changing reg in insn 687
changing reg in insn 688
changing reg in insn 690
changing reg in insn 691
changing reg in insn 694
changing reg in insn 695
changing reg in insn 696
changing reg in insn 697
changing reg in insn 699
changing reg in insn 700
changing reg in insn 703
changing reg in insn 704
changing reg in insn 708
changing reg in insn 709
changing reg in insn 711
changing reg in insn 712
changing reg in insn 715
changing reg in insn 716
changing reg in insn 720
changing reg in insn 721
changing reg in insn 722
changing reg in insn 723
changing reg in insn 725
changing reg in insn 726
changing reg in insn 729
changing reg in insn 730
changing reg in insn 733
changing reg in insn 734
changing reg in insn 736
changing reg in insn 737
changing reg in insn 740
changing reg in insn 741
changing reg in insn 745
changing reg in insn 746
changing reg in insn 747
changing reg in insn 748
changing reg in insn 750
changing reg in insn 751
changing reg in insn 754
changing reg in insn 755
changing reg in insn 758
changing reg in insn 759
changing reg in insn 761
changing reg in insn 762
changing reg in insn 765
changing reg in insn 766
changing reg in insn 771
changing reg in insn 772
changing reg in insn 799
changing reg in insn 800
changing reg in insn 804
changing reg in insn 805
changing reg in insn 809
changing reg in insn 810
changing reg in insn 814
changing reg in insn 815
changing reg in insn 819
changing reg in insn 820
changing reg in insn 822
changing reg in insn 823
changing reg in insn 826
changing reg in insn 827
changing reg in insn 831
changing reg in insn 832
changing reg in insn 835
changing reg in insn 836
changing reg in insn 838
changing reg in insn 839
changing reg in insn 840
changing reg in insn 841
changing reg in insn 843
changing reg in insn 844
changing reg in insn 847
changing reg in insn 848
changing reg in insn 850
changing reg in insn 851
changing reg in insn 854
changing reg in insn 855
changing reg in insn 858
changing reg in insn 859
changing reg in insn 864
changing reg in insn 865
changing reg in insn 868
changing reg in insn 869
changing reg in insn 871
changing reg in insn 873
changing reg in insn 872
changing reg in insn 873
deleting insn with uid = 963.
deleting insn with uid = 28.
deleting insn with uid = 965.
deleting insn with uid = 967.
deleting insn with uid = 969.
deleting insn with uid = 970.
deleting insn with uid = 131.
deleting insn with uid = 972.
deleting insn with uid = 974.
deleting insn with uid = 976.
deleting insn with uid = 292.
deleting insn with uid = 979.
deleting insn with uid = 307.
deleting insn with uid = 980.
deleting insn with uid = 347.
deleting insn with uid = 371.
deleting insn with uid = 983.
deleting insn with uid = 386.
deleting insn with uid = 984.
deleting insn with uid = 426.
deleting insn with uid = 542.
deleting insn with uid = 987.
deleting insn with uid = 568.
starting the processing of deferred insns
ending the processing of deferred insns


cetlih4

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;;  ref usage 	r0={6d,13u} r1={10d,16u} r2={37d,40u} r3={6d,6u} r4={19d,22u} r5={43d,43u} r6={1d,286u} r7={1d,65u} r17={245d,31u} r20={1d,1u,27e} r21={56d,57u} r22={23d,22u} r23={14d,13u} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={224d,224u} r38={93d,93u,2e} r39={89d,88u} r40={33d,32u,2e} 
;;    total ref usage 1989{906d,1052u,31e} in 780{780 regular + 0 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 90
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 90
;; lr  def 	 17 [flags] 87 88 89 92 93 447 451 452 453 454 458 459 460 488 489 490 491 492 493 494 495
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [4 he+0 S8 A64])
        (reg:DI 5 di [ he ])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [4 hx+0 S8 A64])
        (reg:DI 4 si [ hx ])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [5 imot+0 S8 A64])
        (reg:DI 1 dx [ imot ])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [5 jmot+0 S8 A64])
        (reg:DI 2 cx [ jmot ])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [5 ksb+0 S8 A64])
        (reg:DI 37 r8 [ ksb ])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [5 ioffs+0 S8 A64])
        (reg:DI 38 r9 [ ioffs ])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [488])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [5 imot+0 S8 A64])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [488]) [1 *imot_394(D)+0 S4 A32])) "CETLIH4.f":1 86 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 0 ax [489])
        (sign_extend:DI (reg:SI 0 ax [orig:87 _1 ] [87]))) "CETLIH4.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.0+0 S8 A64])
        (reg:DI 0 ax [489])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 15 14 17 2 (set (reg:DI 0 ax [orig:451 stride.2_396 ] [451])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 ubound.0+0 S8 A64])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 17 15 16 2 (set (reg:DI 1 dx [490])
        (const_int 0 [0])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 16 17 18 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:451 stride.2_396 ] [451])
            (const_int 0 [0]))) "CETLIH4.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 18 16 19 2 (set (reg:DI 0 ax [orig:452 stride.2_397 ] [452])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:451 stride.2_396 ] [451])
            (reg:DI 1 dx [490]))) "CETLIH4.f":1 1003 {*movdicc_noc}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 1 dx [491])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [5 jmot+0 S8 A64])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 1 dx [orig:88 _2 ] [88])
        (mem:SI (reg/f:DI 1 dx [491]) [1 *jmot_398(D)+0 S4 A32])) "CETLIH4.f":1 86 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 1 dx [492])
        (sign_extend:DI (reg:SI 1 dx [orig:88 _2 ] [88]))) "CETLIH4.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 22 21 962 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [2 ubound.1+0 S8 A64])
        (reg:DI 1 dx [492])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 962 22 23 2 (set (reg:DI 1 dx [orig:453 size.4_400 ] [453])
        (reg:DI 0 ax [orig:452 stride.2_397 ] [452])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 23 962 25 2 (parallel [
            (set (reg:DI 1 dx [orig:453 size.4_400 ] [453])
                (mult:DI (reg:DI 1 dx [orig:453 size.4_400 ] [453])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -56 [0xffffffffffffffc8])) [2 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":1 349 {*muldi3_1}
     (nil))
(insn 25 23 24 2 (set (reg:DI 2 cx [493])
        (const_int 0 [0])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 24 25 26 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 1 dx [orig:453 size.4_400 ] [453])
            (const_int 0 [0]))) "CETLIH4.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 26 24 29 2 (set (reg:DI 1 dx [orig:454 size.4_401 ] [454])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 1 dx [orig:453 size.4_400 ] [453])
            (reg:DI 2 cx [493]))) "CETLIH4.f":1 1003 {*movdicc_noc}
     (nil))
(insn 29 26 30 2 (set (reg:DI 39 r10 [orig:90 _4 ] [90])
        (reg:DI 1 dx [orig:89 size.9_3 ] [89])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 30 29 964 2 (set (reg:DI 40 r11 [ _4+8 ])
        (const_int 0 [0])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 964 30 34 2 (set (reg:DI 1 dx [orig:458 offset.3_405 ] [458])
        (reg:DI 0 ax [orig:452 stride.2_397 ] [452])) "CETLIH4.f":1 85 {*movdi_internal}
     (nil))
(insn 34 964 35 2 (set (reg:DI 1 dx [orig:458 offset.3_405 ] [458])
        (not:DI (reg:DI 1 dx [orig:458 offset.3_405 ] [458]))) "CETLIH4.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 35 34 36 2 (set (reg/f:DI 2 cx [494])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [5 imot+0 S8 A64])) "CETLIH4.f":79 85 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:SI 2 cx [orig:92 _6 ] [92])
        (mem:SI (reg/f:DI 2 cx [494]) [1 *imot_394(D)+0 S4 A32])) "CETLIH4.f":79 86 {*movsi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:DI 38 r9 [orig:459 _407 ] [459])
        (sign_extend:DI (reg:SI 2 cx [orig:92 _6 ] [92]))) "CETLIH4.f":79 149 {*extendsidi2_rex64}
     (nil))
(insn 38 37 39 2 (set (reg/f:DI 2 cx [495])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [5 jmot+0 S8 A64])) "CETLIH4.f":79 85 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:SI 2 cx [orig:93 _7 ] [93])
        (mem:SI (reg/f:DI 2 cx [495]) [1 *jmot_398(D)+0 S4 A32])) "CETLIH4.f":79 86 {*movsi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:DI 39 r10 [orig:460 _408 ] [460])
        (sign_extend:DI (reg:SI 2 cx [orig:93 _7 ] [93]))) "CETLIH4.f":79 149 {*extendsidi2_rex64}
     (nil))
(insn 41 40 64 2 (set (reg:DI 4 si [orig:447 S.5_371 ] [447])
        (const_int 1 [0x1])) "CETLIH4.f":79 85 {*movdi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 447 452 458 459 460

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 447 452 458 459 460
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 447 460
;; lr  def 	 17 [flags]
(code_label 64 41 42 3 5 (nil) [1 uses])
(note 42 64 43 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 43 42 44 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 4 si [orig:447 S.5_371 ] [447])
            (reg:DI 39 r10 [orig:460 _408 ] [460]))) "CETLIH4.f":79 12 {*cmpdi_1}
     (nil))
(jump_insn 44 43 45 3 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "CETLIH4.f":79 682 {*jcc}
     (nil)
 -> 67)
;;  succ:       8
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 447 452 458 459 460

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 447 452 458 459 460
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 447 452 458
;; lr  def 	 17 [flags] 94 448 461
(note 45 44 966 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 966 45 46 4 (set (reg:DI 2 cx [orig:94 _8 ] [94])
        (reg:DI 4 si [orig:447 S.5_371 ] [447])) "CETLIH4.f":79 85 {*movdi_internal}
     (nil))
(insn 46 966 47 4 (parallel [
            (set (reg:DI 2 cx [orig:94 _8 ] [94])
                (mult:DI (reg:DI 2 cx [orig:94 _8 ] [94])
                    (reg:DI 0 ax [orig:452 stride.2_397 ] [452])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":79 349 {*muldi3_1}
     (nil))
(insn 47 46 48 4 (parallel [
            (set (reg:DI 40 r11 [orig:461 _410 ] [461])
                (plus:DI (reg:DI 1 dx [orig:458 offset.3_405 ] [458])
                    (reg:DI 2 cx [orig:94 _8 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":79 222 {*adddi_1}
     (nil))
(insn 48 47 58 4 (set (reg:DI 2 cx [orig:448 S.6_372 ] [448])
        (const_int 1 [0x1])) "CETLIH4.f":79 85 {*movdi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 447 448 452 458 459 460 461

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 447 448 452 458 459 460 461
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 448 459
;; lr  def 	 17 [flags]
(code_label 58 48 49 5 4 (nil) [1 uses])
(note 49 58 50 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 50 49 51 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 2 cx [orig:448 S.6_372 ] [448])
            (reg:DI 38 r9 [orig:459 _407 ] [459]))) "CETLIH4.f":79 12 {*cmpdi_1}
     (nil))
(jump_insn 51 50 52 5 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "CETLIH4.f":79 682 {*jcc}
     (nil)
 -> 61)
;;  succ:       7
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 447 448 452 458 459 460 461

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 447 448 452 458 459 460 461
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 448 461
;; lr  def 	 17 [flags] 95 448 496 497
(note 52 51 53 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 53 52 54 6 (parallel [
            (set (reg:DI 37 r8 [orig:95 _9 ] [95])
                (plus:DI (reg:DI 2 cx [orig:448 S.6_372 ] [448])
                    (reg:DI 40 r11 [orig:461 _410 ] [461])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":79 222 {*adddi_1}
     (nil))
(insn 54 53 55 6 (set (reg/f:DI 5 di [496])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [4 hx+0 S8 A64])) "CETLIH4.f":79 85 {*movdi_internal}
     (nil))
(insn 55 54 56 6 (set (reg:SF 21 xmm0 [497])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CETLIH4.f":79 131 {*movsf_internal}
     (nil))
(insn 56 55 57 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 37 r8 [orig:95 _9 ] [95])
                    (const_int 4 [0x4]))
                (reg/f:DI 5 di [496])) [3 *hx_412(D) S4 A32])
        (reg:SF 21 xmm0 [497])) "CETLIH4.f":79 131 {*movsf_internal}
     (nil))
(insn 57 56 896 6 (parallel [
            (set (reg:DI 2 cx [orig:448 S.6_372 ] [448])
                (plus:DI (reg:DI 2 cx [orig:448 S.6_372 ] [448])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":79 222 {*adddi_1}
     (nil))
(jump_insn 896 57 897 6 (set (pc)
        (label_ref 58)) "CETLIH4.f":79 683 {jump}
     (nil)
 -> 58)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 447 448 452 458 459 460 461

(barrier 897 896 61)
;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 447 452 458 459 460
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 447
;; lr  def 	 17 [flags] 447
(code_label 61 897 62 7 3 (nil) [1 uses])
(note 62 61 63 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 898 7 (parallel [
            (set (reg:DI 4 si [orig:447 S.5_371 ] [447])
                (plus:DI (reg:DI 4 si [orig:447 S.5_371 ] [447])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":79 222 {*adddi_1}
     (nil))
(jump_insn 898 63 899 7 (set (pc)
        (label_ref 64)) "CETLIH4.f":79 683 {jump}
     (nil)
 -> 64)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 447 452 458 459 460

(barrier 899 898 67)
;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 96 97 449 462 463 498 499
(code_label 67 899 68 8 2 (nil) [1 uses])
(note 68 67 69 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 8 (set (reg/f:DI 2 cx [498])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [5 imot+0 S8 A64])) "CETLIH4.f":80 85 {*movdi_internal}
     (nil))
(insn 70 69 71 8 (set (reg:SI 2 cx [orig:96 _10 ] [96])
        (mem:SI (reg/f:DI 2 cx [498]) [1 *imot_394(D)+0 S4 A32])) "CETLIH4.f":80 86 {*movsi_internal}
     (nil))
(insn 71 70 72 8 (set (reg:DI 37 r8 [orig:462 _416 ] [462])
        (sign_extend:DI (reg:SI 2 cx [orig:96 _10 ] [96]))) "CETLIH4.f":80 149 {*extendsidi2_rex64}
     (nil))
(insn 72 71 73 8 (set (reg/f:DI 2 cx [499])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [5 jmot+0 S8 A64])) "CETLIH4.f":80 85 {*movdi_internal}
     (nil))
(insn 73 72 74 8 (set (reg:SI 2 cx [orig:97 _11 ] [97])
        (mem:SI (reg/f:DI 2 cx [499]) [1 *jmot_398(D)+0 S4 A32])) "CETLIH4.f":80 86 {*movsi_internal}
     (nil))
(insn 74 73 75 8 (set (reg:DI 38 r9 [orig:463 _417 ] [463])
        (sign_extend:DI (reg:SI 2 cx [orig:97 _11 ] [97]))) "CETLIH4.f":80 149 {*extendsidi2_rex64}
     (nil))
(insn 75 74 97 8 (set (reg:DI 4 si [orig:449 S.7_373 ] [449])
        (const_int 1 [0x1])) "CETLIH4.f":80 85 {*movdi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449 452 458 462 463

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              13 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449 452 458 462 463
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449 463
;; lr  def 	 17 [flags]
(code_label 97 75 76 9 9 (nil) [1 uses])
(note 76 97 77 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 77 76 78 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 4 si [orig:449 S.7_373 ] [449])
            (reg:DI 38 r9 [orig:463 _417 ] [463]))) "CETLIH4.f":80 12 {*cmpdi_1}
     (nil))
(jump_insn 78 77 79 9 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 100)
            (pc))) "CETLIH4.f":80 682 {*jcc}
     (nil)
 -> 100)
;;  succ:       14
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449 452 458 462 463

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449 452 458 462 463
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449
;; lr  def 	 17 [flags] 98 450 464
(note 79 78 80 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 80 79 81 10 (parallel [
            (set (reg:DI 2 cx [orig:98 _12 ] [98])
                (mult:DI (reg:DI 4 si [orig:449 S.7_373 ] [449])
                    (const_int 4000 [0xfa0])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":80 349 {*muldi3_1}
     (nil))
(insn 81 80 82 10 (parallel [
            (set (reg:DI 40 r11 [orig:464 _419 ] [464])
                (plus:DI (reg:DI 2 cx [orig:98 _12 ] [98])
                    (const_int -4001 [0xfffffffffffff05f])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":80 222 {*adddi_1}
     (nil))
(insn 82 81 91 10 (set (reg:DI 2 cx [orig:450 S.8_374 ] [450])
        (const_int 1 [0x1])) "CETLIH4.f":80 85 {*movdi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449 450 452 458 462 463 464

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              12 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449 450 452 458 462 463 464
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 450 462
;; lr  def 	 17 [flags]
(code_label 91 82 83 11 8 (nil) [1 uses])
(note 83 91 84 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 84 83 85 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:DI 2 cx [orig:450 S.8_374 ] [450])
            (reg:DI 37 r8 [orig:462 _416 ] [462]))) "CETLIH4.f":80 12 {*cmpdi_1}
     (nil))
(jump_insn 85 84 86 11 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 94)
            (pc))) "CETLIH4.f":80 682 {*jcc}
     (nil)
 -> 94)
;;  succ:       13
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449 450 452 458 462 463 464

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449 450 452 458 462 463 464
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 450 464
;; lr  def 	 17 [flags] 99 450 500
(note 86 85 87 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 87 86 88 12 (parallel [
            (set (reg:DI 5 di [orig:99 _13 ] [99])
                (plus:DI (reg:DI 2 cx [orig:450 S.8_374 ] [450])
                    (reg:DI 40 r11 [orig:464 _419 ] [464])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":80 222 {*adddi_1}
     (nil))
(insn 88 87 89 12 (set (reg/f:DI 39 r10 [500])
        (symbol_ref:DI ("nz.3888") [flags 0x202]  <var_decl 0x7f6500cb8990 nz>)) "CETLIH4.f":80 85 {*movdi_internal}
     (nil))
(insn 89 88 90 12 (set (mem:SI (plus:DI (mult:DI (reg:DI 5 di [orig:99 _13 ] [99])
                    (const_int 4 [0x4]))
                (reg/f:DI 39 r10 [500])) [1 nz S4 A32])
        (const_int 0 [0])) "CETLIH4.f":80 86 {*movsi_internal}
     (nil))
(insn 90 89 900 12 (parallel [
            (set (reg:DI 2 cx [orig:450 S.8_374 ] [450])
                (plus:DI (reg:DI 2 cx [orig:450 S.8_374 ] [450])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":80 222 {*adddi_1}
     (nil))
(jump_insn 900 90 901 12 (set (pc)
        (label_ref 91)) "CETLIH4.f":80 683 {jump}
     (nil)
 -> 91)
;;  succ:       11 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449 450 452 458 462 463 464

(barrier 901 900 94)
;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449 452 458 462 463
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449
;; lr  def 	 17 [flags] 449
(code_label 94 901 95 13 7 (nil) [1 uses])
(note 95 94 96 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 902 13 (parallel [
            (set (reg:DI 4 si [orig:449 S.7_373 ] [449])
                (plus:DI (reg:DI 4 si [orig:449 S.7_373 ] [449])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":80 222 {*adddi_1}
     (nil))
(jump_insn 902 96 903 13 (set (pc)
        (label_ref 97)) "CETLIH4.f":80 683 {jump}
     (nil)
 -> 97)
;;  succ:       9 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 449 452 458 462 463

(barrier 903 902 100)
;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 100 101 102 103 501 502 503 504 505 506 507
(code_label 100 903 101 14 6 (nil) [1 uses])
(note 101 100 102 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 103 14 (set (reg/f:DI 2 cx [501])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [5 jmot+0 S8 A64])) "CETLIH4.f":83 85 {*movdi_internal}
     (nil))
(insn 103 102 104 14 (set (reg:SI 2 cx [orig:100 _14 ] [100])
        (mem:SI (reg/f:DI 2 cx [501]) [1 *jmot_398(D)+0 S4 A32])) "CETLIH4.f":83 86 {*movsi_internal}
     (nil))
(insn 104 103 105 14 (parallel [
            (set (reg:SI 2 cx [502])
                (plus:SI (reg:SI 2 cx [orig:100 _14 ] [100])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":83 221 {*addsi_1}
     (nil))
(insn 105 104 106 14 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 jmot2+0 S4 A32])
        (reg:SI 2 cx [502])) "CETLIH4.f":83 86 {*movsi_internal}
     (nil))
(insn 106 105 107 14 (set (reg/f:DI 2 cx [503])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [5 imot+0 S8 A64])) "CETLIH4.f":84 85 {*movdi_internal}
     (nil))
(insn 107 106 108 14 (set (reg:SI 2 cx [orig:101 _15 ] [101])
        (mem:SI (reg/f:DI 2 cx [503]) [1 *imot_394(D)+0 S4 A32])) "CETLIH4.f":84 86 {*movsi_internal}
     (nil))
(insn 108 107 109 14 (parallel [
            (set (reg:SI 2 cx [504])
                (plus:SI (reg:SI 2 cx [orig:101 _15 ] [101])
                    (const_int -2 [0xfffffffffffffffe])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":84 221 {*addsi_1}
     (nil))
(insn 109 108 110 14 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 imot2+0 S4 A32])
        (reg:SI 2 cx [504])) "CETLIH4.f":84 86 {*movsi_internal}
     (nil))
(insn 110 109 111 14 (set (reg/f:DI 2 cx [505])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [5 ksb+0 S8 A64])) "CETLIH4.f":85 85 {*movdi_internal}
     (nil))
(insn 111 110 112 14 (set (reg:SI 2 cx [orig:102 _16 ] [102])
        (mem:SI (reg/f:DI 2 cx [505]) [1 *ksb_426(D)+0 S4 A32])) "CETLIH4.f":85 86 {*movsi_internal}
     (nil))
(insn 112 111 113 14 (set (reg:SF 22 xmm1 [orig:103 _17 ] [103])
        (float:SF (reg:SI 2 cx [orig:102 _16 ] [102]))) "CETLIH4.f":85 203 {*floatsisf2_mixed}
     (nil))
(insn 113 112 114 14 (set (reg:SF 21 xmm0 [507])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CETLIH4.f":85 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 114 113 115 14 (set (reg:SF 21 xmm0 [506])
        (div:SF (reg:SF 21 xmm0 [507])
            (reg:SF 22 xmm1 [orig:103 _17 ] [103]))) "CETLIH4.f":85 841 {*fop_sf_1}
     (nil))
(insn 115 114 116 14 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [3 sbs+0 S4 A32])
        (reg:SF 21 xmm0 [506])) "CETLIH4.f":85 131 {*movsf_internal}
     (nil))
(insn 116 115 794 14 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])
        (const_int 3 [0x3])) "CETLIH4.f":94 86 {*movsi_internal}
     (nil))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;;              44 [always] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 465 508
(code_label 794 116 117 15 29 (nil) [1 uses])
(note 117 794 118 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])
            (const_int 247 [0xf7]))) "CETLIH4.f":94 11 {*cmpsi_1}
     (nil))
(insn 119 118 120 15 (set (reg:QI 2 cx [508])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CETLIH4.f":94 678 {*setcc_qi}
     (nil))
(insn 120 119 121 15 (set (reg:SI 2 cx [orig:465 _429 ] [465])
        (zero_extend:SI (reg:QI 2 cx [508]))) "CETLIH4.f":94 140 {*zero_extendqisi2}
     (nil))
(insn 121 120 122 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 2 cx [orig:465 _429 ] [465])
            (const_int 0 [0]))) "CETLIH4.f":94 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 122 121 123 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 927)
            (pc))) "CETLIH4.f":94 682 {*jcc}
     (nil)
 -> 927)
;;  succ:       55
;;              16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 104 105 466 509 510 511 512 513 514 515 516 517
(note 123 122 124 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 124 123 125 16 (set (reg:SI 2 cx [509])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":96 86 {*movsi_internal}
     (nil))
(insn 125 124 968 16 (parallel [
            (set (reg:SI 4 si [orig:104 _18 ] [104])
                (plus:SI (reg:SI 2 cx [509])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":96 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 968 125 126 16 (set (reg:SI 2 cx [510])
        (reg:SI 4 si [orig:104 _18 ] [104])) "CETLIH4.f":96 86 {*movsi_internal}
     (nil))
(insn 126 968 127 16 (parallel [
            (set (reg:SI 2 cx [510])
                (ashiftrt:SI (reg:SI 2 cx [510])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":96 582 {ashrsi3_cvt}
     (nil))
(insn 127 126 128 16 (parallel [
            (set (reg:SI 2 cx [511])
                (lshiftrt:SI (reg:SI 2 cx [510])
                    (const_int 31 [0x1f])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":96 587 {*lshrsi3_1}
     (nil))
(insn 128 127 129 16 (parallel [
            (set (reg:SI 4 si [512])
                (plus:SI (reg:SI 4 si [orig:104 _18 ] [104])
                    (reg:SI 2 cx [511])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":96 221 {*addsi_1}
     (nil))
(insn 129 128 130 16 (parallel [
            (set (reg:SI 4 si [513])
                (and:SI (reg:SI 4 si [512])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":96 426 {*andsi_1}
     (nil))
(insn 130 129 971 16 (parallel [
            (set (reg:SI 4 si [513])
                (minus:SI (reg:SI 4 si [513])
                    (reg:SI 2 cx [511])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":96 277 {*subsi_1}
     (nil))
(insn 971 130 132 16 (set (reg:SI 2 cx [514])
        (reg:SI 4 si [513])) "CETLIH4.f":96 86 {*movsi_internal}
     (nil))
(insn 132 971 133 16 (set (reg:SI 4 si [515])
        (const_int 118 [0x76])) "CETLIH4.f":96 86 {*movsi_internal}
     (nil))
(insn 133 132 973 16 (parallel [
            (set (reg:SI 4 si [515])
                (minus:SI (reg:SI 4 si [515])
                    (reg:SI 2 cx [orig:105 _19 ] [105])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":96 277 {*subsi_1}
     (nil))
(insn 973 133 134 16 (set (reg:SI 2 cx [516])
        (reg:SI 4 si [515])) "CETLIH4.f":96 86 {*movsi_internal}
     (nil))
(insn 134 973 135 16 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 iend+0 S4 A32])
        (reg:SI 2 cx [516])) "CETLIH4.f":96 86 {*movsi_internal}
     (nil))
(insn 135 134 136 16 (set (reg/f:DI 2 cx [517])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [5 ksb+0 S8 A64])) "CETLIH4.f":101 85 {*movdi_internal}
     (nil))
(insn 136 135 137 16 (set (reg:SI 2 cx [orig:466 _431 ] [466])
        (mem:SI (reg/f:DI 2 cx [517]) [1 *ksb_426(D)+0 S4 A32])) "CETLIH4.f":101 86 {*movsi_internal}
     (nil))
(insn 137 136 788 16 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [1 jb+0 S4 A32])
        (const_int 1 [0x1])) "CETLIH4.f":101 86 {*movsi_internal}
     (nil))
;;  succ:       17 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;;              43 [always] 
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 466
;; lr  def 	 17 [flags] 467 518
(code_label 788 137 138 17 28 (nil) [1 uses])
(note 138 788 139 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 139 138 140 17 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 jb+0 S4 A32])
            (reg:SI 2 cx [orig:466 _431 ] [466]))) "CETLIH4.f":101 11 {*cmpsi_1}
     (nil))
(insn 140 139 141 17 (set (reg:QI 4 si [518])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CETLIH4.f":101 678 {*setcc_qi}
     (nil))
(insn 141 140 142 17 (set (reg:SI 4 si [orig:467 _433 ] [467])
        (zero_extend:SI (reg:QI 4 si [518]))) "CETLIH4.f":101 140 {*zero_extendqisi2}
     (nil))
(insn 142 141 143 17 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [orig:467 _433 ] [467])
            (const_int 0 [0]))) "CETLIH4.f":101 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 143 142 144 17 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 930)
            (pc))) "CETLIH4.f":101 682 {*jcc}
     (nil)
 -> 930)
;;  succ:       56
;;              18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 468 519
(note 144 143 145 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 145 144 146 18 (set (reg/f:DI 4 si [519])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [5 ksb+0 S8 A64])) "CETLIH4.f":102 85 {*movdi_internal}
     (nil))
(insn 146 145 147 18 (set (reg:SI 4 si [orig:468 _434 ] [468])
        (mem:SI (reg/f:DI 4 si [519]) [1 *ksb_426(D)+0 S4 A32])) "CETLIH4.f":102 86 {*movsi_internal}
     (nil))
(insn 147 146 782 18 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 ib+0 S4 A32])
        (const_int 1 [0x1])) "CETLIH4.f":102 86 {*movsi_internal}
     (nil))
;;  succ:       19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;;              42 [always] 
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 468
;; lr  def 	 17 [flags] 469 520
(code_label 782 147 148 19 27 (nil) [1 uses])
(note 148 782 149 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 149 148 150 19 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 ib+0 S4 A32])
            (reg:SI 4 si [orig:468 _434 ] [468]))) "CETLIH4.f":102 11 {*cmpsi_1}
     (nil))
(insn 150 149 151 19 (set (reg:QI 5 di [520])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CETLIH4.f":102 678 {*setcc_qi}
     (nil))
(insn 151 150 152 19 (set (reg:SI 5 di [orig:469 _436 ] [469])
        (zero_extend:SI (reg:QI 5 di [520]))) "CETLIH4.f":102 140 {*zero_extendqisi2}
     (nil))
(insn 152 151 153 19 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 5 di [orig:469 _436 ] [469])
            (const_int 0 [0]))) "CETLIH4.f":102 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 153 152 154 19 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 933)
            (pc))) "CETLIH4.f":102 682 {*jcc}
     (nil)
 -> 933)
;;  succ:       57
;;              20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 470
(note 154 153 155 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 155 154 156 20 (set (reg:SI 5 di [orig:470 _437 ] [470])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 iend+0 S4 A32])) "CETLIH4.f":103 86 {*movsi_internal}
     (nil))
(insn 156 155 441 20 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CETLIH4.f":103 86 {*movsi_internal}
     (nil))
;;  succ:       21 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 470

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;;              24 [always] 
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 470
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 470
;; lr  def 	 17 [flags] 471 521
(code_label 441 156 157 21 15 (nil) [1 uses])
(note 157 441 158 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 158 157 159 21 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (reg:SI 5 di [orig:470 _437 ] [470]))) "CETLIH4.f":103 11 {*cmpsi_1}
     (nil))
(insn 159 158 160 21 (set (reg:QI 37 r8 [521])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CETLIH4.f":103 678 {*setcc_qi}
     (nil))
(insn 160 159 161 21 (set (reg:SI 37 r8 [orig:471 _439 ] [471])
        (zero_extend:SI (reg:QI 37 r8 [521]))) "CETLIH4.f":103 140 {*zero_extendqisi2}
     (nil))
(insn 161 160 162 21 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 37 r8 [orig:471 _439 ] [471])
            (const_int 0 [0]))) "CETLIH4.f":103 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 162 161 163 21 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 936)
            (pc))) "CETLIH4.f":103 682 {*jcc}
     (nil)
 -> 936)
;;  succ:       58
;;              22 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 470

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 470
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 106 107 108 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536
(note 163 162 164 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 164 163 165 22 (set (reg:SI 37 r8 [522])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":109 86 {*movsi_internal}
     (nil))
(insn 165 164 166 22 (set (reg:DI 37 r8 [orig:106 _20 ] [106])
        (sign_extend:DI (reg:SI 37 r8 [522]))) "CETLIH4.f":109 149 {*extendsidi2_rex64}
     (nil))
(insn 166 165 167 22 (parallel [
            (set (reg:DI 38 r9 [orig:107 _21 ] [107])
                (mult:DI (reg:DI 37 r8 [orig:106 _20 ] [106])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":109 349 {*muldi3_1}
     (nil))
(insn 167 166 168 22 (set (reg:SI 37 r8 [523])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":109 86 {*movsi_internal}
     (nil))
(insn 168 167 169 22 (set (reg:DI 37 r8 [orig:108 _22 ] [108])
        (sign_extend:DI (reg:SI 37 r8 [523]))) "CETLIH4.f":109 149 {*extendsidi2_rex64}
     (nil))
(insn 169 168 170 22 (parallel [
            (set (reg:DI 37 r8 [orig:109 _23 ] [109])
                (plus:DI (reg:DI 37 r8 [orig:108 _22 ] [108])
                    (reg:DI 38 r9 [orig:107 _21 ] [107])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":109 222 {*adddi_1}
     (nil))
(insn 170 169 171 22 (parallel [
            (set (reg:DI 38 r9 [orig:110 _24 ] [110])
                (plus:DI (reg:DI 37 r8 [orig:109 _23 ] [109])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":109 222 {*adddi_1}
     (nil))
(insn 171 170 172 22 (set (reg/f:DI 37 r8 [524])
        (symbol_ref:DI ("dsqmn.3861") [flags 0x202]  <var_decl 0x7f6500cb5c60 dsqmn>)) "CETLIH4.f":109 85 {*movdi_internal}
     (nil))
(insn 172 171 173 22 (set (reg:SF 21 xmm0 [525])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CETLIH4.f":109 131 {*movsf_internal}
     (nil))
(insn 173 172 174 22 (set (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [orig:110 _24 ] [110])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [524])) [3 dsqmn S4 A32])
        (reg:SF 21 xmm0 [525])) "CETLIH4.f":109 131 {*movsf_internal}
     (nil))
(insn 174 173 175 22 (set (reg:SI 37 r8 [526])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":110 86 {*movsi_internal}
     (nil))
(insn 175 174 176 22 (set (reg:DI 37 r8 [orig:111 _25 ] [111])
        (sign_extend:DI (reg:SI 37 r8 [526]))) "CETLIH4.f":110 149 {*extendsidi2_rex64}
     (nil))
(insn 176 175 177 22 (parallel [
            (set (reg:DI 38 r9 [orig:112 _26 ] [112])
                (mult:DI (reg:DI 37 r8 [orig:111 _25 ] [111])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":110 349 {*muldi3_1}
     (nil))
(insn 177 176 178 22 (set (reg:SI 37 r8 [527])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":110 86 {*movsi_internal}
     (nil))
(insn 178 177 179 22 (set (reg:DI 37 r8 [orig:113 _27 ] [113])
        (sign_extend:DI (reg:SI 37 r8 [527]))) "CETLIH4.f":110 149 {*extendsidi2_rex64}
     (nil))
(insn 179 178 180 22 (parallel [
            (set (reg:DI 37 r8 [orig:114 _28 ] [114])
                (plus:DI (reg:DI 37 r8 [orig:113 _27 ] [113])
                    (reg:DI 38 r9 [orig:112 _26 ] [112])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":110 222 {*adddi_1}
     (nil))
(insn 180 179 181 22 (parallel [
            (set (reg:DI 38 r9 [orig:115 _29 ] [115])
                (plus:DI (reg:DI 37 r8 [orig:114 _28 ] [114])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":110 222 {*adddi_1}
     (nil))
(insn 181 180 182 22 (set (reg/f:DI 37 r8 [528])
        (symbol_ref:DI ("iisb.3874") [flags 0x202]  <var_decl 0x7f6500cb82d0 iisb>)) "CETLIH4.f":110 85 {*movdi_internal}
     (nil))
(insn 182 181 183 22 (set (mem:SI (plus:DI (mult:DI (reg:DI 38 r9 [orig:115 _29 ] [115])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [528])) [1 iisb S4 A32])
        (const_int -1 [0xffffffffffffffff])) "CETLIH4.f":110 86 {*movsi_internal}
     (nil))
(insn 183 182 184 22 (set (reg:SI 37 r8 [529])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":111 86 {*movsi_internal}
     (nil))
(insn 184 183 185 22 (set (reg:DI 37 r8 [orig:116 _30 ] [116])
        (sign_extend:DI (reg:SI 37 r8 [529]))) "CETLIH4.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 185 184 186 22 (parallel [
            (set (reg:DI 38 r9 [orig:117 _31 ] [117])
                (mult:DI (reg:DI 37 r8 [orig:116 _30 ] [116])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":111 349 {*muldi3_1}
     (nil))
(insn 186 185 187 22 (set (reg:SI 37 r8 [530])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":111 86 {*movsi_internal}
     (nil))
(insn 187 186 188 22 (set (reg:DI 37 r8 [orig:118 _32 ] [118])
        (sign_extend:DI (reg:SI 37 r8 [530]))) "CETLIH4.f":111 149 {*extendsidi2_rex64}
     (nil))
(insn 188 187 189 22 (parallel [
            (set (reg:DI 37 r8 [orig:119 _33 ] [119])
                (plus:DI (reg:DI 37 r8 [orig:118 _32 ] [118])
                    (reg:DI 38 r9 [orig:117 _31 ] [117])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":111 222 {*adddi_1}
     (nil))
(insn 189 188 190 22 (parallel [
            (set (reg:DI 38 r9 [orig:120 _34 ] [120])
                (plus:DI (reg:DI 37 r8 [orig:119 _33 ] [119])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":111 222 {*adddi_1}
     (nil))
(insn 190 189 191 22 (set (reg/f:DI 37 r8 [531])
        (symbol_ref:DI ("jjsb.3883") [flags 0x202]  <var_decl 0x7f6500cb8750 jjsb>)) "CETLIH4.f":111 85 {*movdi_internal}
     (nil))
(insn 191 190 192 22 (set (mem:SI (plus:DI (mult:DI (reg:DI 38 r9 [orig:120 _34 ] [120])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [531])) [1 jjsb S4 A32])
        (const_int -1 [0xffffffffffffffff])) "CETLIH4.f":111 86 {*movsi_internal}
     (nil))
(insn 192 191 193 22 (set (reg:SI 37 r8 [532])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":112 86 {*movsi_internal}
     (nil))
(insn 193 192 194 22 (set (reg:DI 37 r8 [orig:121 _35 ] [121])
        (sign_extend:DI (reg:SI 37 r8 [532]))) "CETLIH4.f":112 149 {*extendsidi2_rex64}
     (nil))
(insn 194 193 195 22 (parallel [
            (set (reg:DI 38 r9 [orig:122 _36 ] [122])
                (mult:DI (reg:DI 37 r8 [orig:121 _35 ] [121])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":112 349 {*muldi3_1}
     (nil))
(insn 195 194 196 22 (set (reg:SI 37 r8 [533])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":112 86 {*movsi_internal}
     (nil))
(insn 196 195 197 22 (set (reg:DI 37 r8 [orig:123 _37 ] [123])
        (sign_extend:DI (reg:SI 37 r8 [533]))) "CETLIH4.f":112 149 {*extendsidi2_rex64}
     (nil))
(insn 197 196 198 22 (parallel [
            (set (reg:DI 37 r8 [orig:124 _38 ] [124])
                (plus:DI (reg:DI 37 r8 [orig:123 _37 ] [123])
                    (reg:DI 38 r9 [orig:122 _36 ] [122])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":112 222 {*adddi_1}
     (nil))
(insn 198 197 199 22 (parallel [
            (set (reg:DI 38 r9 [orig:125 _39 ] [125])
                (plus:DI (reg:DI 37 r8 [orig:124 _38 ] [124])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":112 222 {*adddi_1}
     (nil))
(insn 199 198 200 22 (set (reg/f:DI 37 r8 [534])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":112 85 {*movdi_internal}
     (nil))
(insn 200 199 201 22 (parallel [
            (set (reg:DI 38 r9 [535])
                (plus:DI (reg:DI 38 r9 [orig:125 _39 ] [125])
                    (const_int 48088893 [0x2ddc73d])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":112 222 {*adddi_1}
     (nil))
(insn 201 200 202 22 (set (reg:SI 37 r8 [536])
        (mem:SI (plus:DI (mult:DI (reg:DI 38 r9 [535])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [534])) [1 llgrds.jegrdk S4 A32])) "CETLIH4.f":112 86 {*movsi_internal}
     (nil))
(insn 202 201 203 22 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 jp+0 S4 A32])
        (reg:SI 37 r8 [536])) "CETLIH4.f":112 86 {*movsi_internal}
     (nil))
(insn 203 202 204 22 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [1 jp+0 S4 A32])
            (const_int 0 [0]))) "CETLIH4.f":113 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 204 203 205 22 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 941)
            (pc))) "CETLIH4.f":113 682 {*jcc}
     (nil)
 -> 941)
;;  succ:       59
;;              23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 470

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 59, flags: (RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 470
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags
(note 205 204 206 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 206 205 207 23 (set (reg:SI 37 r8 [537])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":114 86 {*movsi_internal}
     (nil))
(insn 207 206 208 23 (set (reg:DI 37 r8 [orig:126 _40 ] [126])
        (sign_extend:DI (reg:SI 37 r8 [537]))) "CETLIH4.f":114 149 {*extendsidi2_rex64}
     (nil))
(insn 208 207 209 23 (parallel [
            (set (reg:DI 38 r9 [orig:127 _41 ] [127])
                (mult:DI (reg:DI 37 r8 [orig:126 _40 ] [126])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":114 349 {*muldi3_1}
     (nil))
(insn 209 208 210 23 (set (reg:SI 37 r8 [538])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":114 86 {*movsi_internal}
     (nil))
(insn 210 209 211 23 (set (reg:DI 37 r8 [orig:128 _42 ] [128])
        (sign_extend:DI (reg:SI 37 r8 [538]))) "CETLIH4.f":114 149 {*extendsidi2_rex64}
     (nil))
(insn 211 210 212 23 (parallel [
            (set (reg:DI 37 r8 [orig:129 _43 ] [129])
                (plus:DI (reg:DI 37 r8 [orig:128 _42 ] [128])
                    (reg:DI 38 r9 [orig:127 _41 ] [127])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":114 222 {*adddi_1}
     (nil))
(insn 212 211 213 23 (parallel [
            (set (reg:DI 38 r9 [orig:130 _44 ] [130])
                (plus:DI (reg:DI 37 r8 [orig:129 _43 ] [129])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":114 222 {*adddi_1}
     (nil))
(insn 213 212 214 23 (set (reg/f:DI 37 r8 [539])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":114 85 {*movdi_internal}
     (nil))
(insn 214 213 215 23 (parallel [
            (set (reg:DI 38 r9 [540])
                (plus:DI (reg:DI 38 r9 [orig:130 _44 ] [130])
                    (const_int 48029631 [0x2dcdfbf])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":114 222 {*adddi_1}
     (nil))
(insn 215 214 216 23 (set (reg:SF 21 xmm0 [541])
        (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [540])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [539])) [3 llgrds.htlon S4 A32])) "CETLIH4.f":114 131 {*movsf_internal}
     (nil))
(insn 216 215 217 23 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [3 clon+0 S4 A32])
        (reg:SF 21 xmm0 [541])) "CETLIH4.f":114 131 {*movsf_internal}
     (nil))
(insn 217 216 218 23 (set (reg:SI 37 r8 [542])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":115 86 {*movsi_internal}
     (nil))
(insn 218 217 219 23 (set (reg:DI 37 r8 [orig:131 _45 ] [131])
        (sign_extend:DI (reg:SI 37 r8 [542]))) "CETLIH4.f":115 149 {*extendsidi2_rex64}
     (nil))
(insn 219 218 220 23 (parallel [
            (set (reg:DI 38 r9 [orig:132 _46 ] [132])
                (mult:DI (reg:DI 37 r8 [orig:131 _45 ] [131])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":115 349 {*muldi3_1}
     (nil))
(insn 220 219 221 23 (set (reg:SI 37 r8 [543])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":115 86 {*movsi_internal}
     (nil))
(insn 221 220 222 23 (set (reg:DI 37 r8 [orig:133 _47 ] [133])
        (sign_extend:DI (reg:SI 37 r8 [543]))) "CETLIH4.f":115 149 {*extendsidi2_rex64}
     (nil))
(insn 222 221 223 23 (parallel [
            (set (reg:DI 37 r8 [orig:134 _48 ] [134])
                (plus:DI (reg:DI 37 r8 [orig:133 _47 ] [133])
                    (reg:DI 38 r9 [orig:132 _46 ] [132])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":115 222 {*adddi_1}
     (nil))
(insn 223 222 224 23 (parallel [
            (set (reg:DI 38 r9 [orig:135 _49 ] [135])
                (plus:DI (reg:DI 37 r8 [orig:134 _48 ] [134])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":115 222 {*adddi_1}
     (nil))
(insn 224 223 225 23 (set (reg/f:DI 37 r8 [544])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":115 85 {*movdi_internal}
     (nil))
(insn 225 224 226 23 (parallel [
            (set (reg:DI 38 r9 [545])
                (plus:DI (reg:DI 38 r9 [orig:135 _49 ] [135])
                    (const_int 48000000 [0x2dc6c00])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":115 222 {*adddi_1}
     (nil))
(insn 226 225 227 23 (set (reg:SF 21 xmm0 [546])
        (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [545])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [544])) [3 llgrds.htlat S4 A32])) "CETLIH4.f":115 131 {*movsf_internal}
     (nil))
(insn 227 226 228 23 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [3 clat+0 S4 A32])
        (reg:SF 21 xmm0 [546])) "CETLIH4.f":115 131 {*movsf_internal}
     (nil))
(insn 228 227 229 23 (set (reg:SF 21 xmm0 [orig:136 _50 ] [136])
        (float:SF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 ib+0 S4 A32]))) "CETLIH4.f":127 203 {*floatsisf2_mixed}
     (nil))
(insn 229 228 230 23 (set (reg/f:DI 37 r8 [547])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [5 ksb+0 S8 A64])) "CETLIH4.f":127 85 {*movdi_internal}
     (nil))
(insn 230 229 231 23 (set (reg:SI 37 r8 [orig:137 _51 ] [137])
        (mem:SI (reg/f:DI 37 r8 [547]) [1 *ksb_426(D)+0 S4 A32])) "CETLIH4.f":127 86 {*movsi_internal}
     (nil))
(insn 231 230 232 23 (set (reg:SF 23 xmm2 [orig:138 _52 ] [138])
        (float:SF (reg:SI 37 r8 [orig:137 _51 ] [137]))) "CETLIH4.f":127 203 {*floatsisf2_mixed}
     (nil))
(insn 232 231 233 23 (set (reg:SF 22 xmm1 [548])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CETLIH4.f":127 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 233 232 234 23 (set (reg:SF 22 xmm1 [orig:139 _53 ] [139])
        (plus:SF (reg:SF 22 xmm1 [548])
            (reg:SF 23 xmm2 [orig:138 _52 ] [138]))) "CETLIH4.f":127 838 {*fop_sf_comm}
     (nil))
(insn 234 233 235 23 (set (reg:SF 23 xmm2 [orig:140 _54 ] [140])
        (reg:SF 22 xmm1 [orig:139 _53 ] [139])) "CETLIH4.f":127 131 {*movsf_internal}
     (nil))
(insn 235 234 236 23 (set (reg:SF 22 xmm1 [549])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CETLIH4.f":127 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 236 235 975 23 (set (reg:SF 23 xmm2 [orig:140 _54 ] [140])
        (div:SF (reg:SF 23 xmm2 [orig:140 _54 ] [140])
            (reg:SF 22 xmm1 [549]))) "CETLIH4.f":127 841 {*fop_sf_1}
     (nil))
(insn 975 236 237 23 (set (reg:SF 22 xmm1 [orig:141 _55 ] [141])
        (reg:SF 23 xmm2 [orig:140 _54 ] [140])) "CETLIH4.f":127 131 {*movsf_internal}
     (nil))
(insn 237 975 238 23 (set (reg:SF 21 xmm0 [orig:142 _56 ] [142])
        (minus:SF (reg:SF 21 xmm0 [orig:136 _50 ] [136])
            (reg:SF 22 xmm1 [orig:141 _55 ] [141]))) "CETLIH4.f":127 841 {*fop_sf_1}
     (nil))
(insn 238 237 239 23 (set (reg:SF 22 xmm1 [orig:143 _57 ] [143])
        (reg:SF 21 xmm0 [orig:142 _56 ] [142])) "CETLIH4.f":127 131 {*movsf_internal}
     (nil))
(insn 239 238 240 23 (set (reg:SF 21 xmm0 [551])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [3 sbs+0 S4 A32])) "CETLIH4.f":127 131 {*movsf_internal}
     (nil))
(insn 240 239 241 23 (set (reg:SF 21 xmm0 [550])
        (mult:SF (reg:SF 21 xmm0 [551])
            (reg:SF 22 xmm1 [orig:143 _57 ] [143]))) "CETLIH4.f":127 838 {*fop_sf_comm}
     (nil))
(insn 241 240 242 23 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 p+0 S4 A32])
        (reg:SF 21 xmm0 [550])) "CETLIH4.f":127 131 {*movsf_internal}
     (nil))
(insn 242 241 243 23 (set (reg:SF 21 xmm0 [orig:144 _58 ] [144])
        (float:SF (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [1 jb+0 S4 A32]))) "CETLIH4.f":128 203 {*floatsisf2_mixed}
     (nil))
(insn 243 242 244 23 (set (reg/f:DI 37 r8 [552])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [5 ksb+0 S8 A64])) "CETLIH4.f":128 85 {*movdi_internal}
     (nil))
(insn 244 243 245 23 (set (reg:SI 37 r8 [orig:145 _59 ] [145])
        (mem:SI (reg/f:DI 37 r8 [552]) [1 *ksb_426(D)+0 S4 A32])) "CETLIH4.f":128 86 {*movsi_internal}
     (nil))
(insn 245 244 246 23 (set (reg:SF 23 xmm2 [orig:146 _60 ] [146])
        (float:SF (reg:SI 37 r8 [orig:145 _59 ] [145]))) "CETLIH4.f":128 203 {*floatsisf2_mixed}
     (nil))
(insn 246 245 247 23 (set (reg:SF 22 xmm1 [553])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CETLIH4.f":128 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 247 246 248 23 (set (reg:SF 22 xmm1 [orig:147 _61 ] [147])
        (plus:SF (reg:SF 22 xmm1 [553])
            (reg:SF 23 xmm2 [orig:146 _60 ] [146]))) "CETLIH4.f":128 838 {*fop_sf_comm}
     (nil))
(insn 248 247 249 23 (set (reg:SF 23 xmm2 [orig:148 _62 ] [148])
        (reg:SF 22 xmm1 [orig:147 _61 ] [147])) "CETLIH4.f":128 131 {*movsf_internal}
     (nil))
(insn 249 248 250 23 (set (reg:SF 22 xmm1 [554])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CETLIH4.f":128 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 250 249 977 23 (set (reg:SF 23 xmm2 [orig:148 _62 ] [148])
        (div:SF (reg:SF 23 xmm2 [orig:148 _62 ] [148])
            (reg:SF 22 xmm1 [554]))) "CETLIH4.f":128 841 {*fop_sf_1}
     (nil))
(insn 977 250 251 23 (set (reg:SF 22 xmm1 [orig:149 _63 ] [149])
        (reg:SF 23 xmm2 [orig:148 _62 ] [148])) "CETLIH4.f":128 131 {*movsf_internal}
     (nil))
(insn 251 977 252 23 (set (reg:SF 21 xmm0 [orig:150 _64 ] [150])
        (minus:SF (reg:SF 21 xmm0 [orig:144 _58 ] [144])
            (reg:SF 22 xmm1 [orig:149 _63 ] [149]))) "CETLIH4.f":128 841 {*fop_sf_1}
     (nil))
(insn 252 251 253 23 (set (reg:SF 22 xmm1 [orig:151 _65 ] [151])
        (reg:SF 21 xmm0 [orig:150 _64 ] [150])) "CETLIH4.f":128 131 {*movsf_internal}
     (nil))
(insn 253 252 254 23 (set (reg:SF 21 xmm0 [556])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [3 sbs+0 S4 A32])) "CETLIH4.f":128 131 {*movsf_internal}
     (nil))
(insn 254 253 255 23 (set (reg:SF 21 xmm0 [555])
        (mult:SF (reg:SF 21 xmm0 [556])
            (reg:SF 22 xmm1 [orig:151 _65 ] [151]))) "CETLIH4.f":128 838 {*fop_sf_comm}
     (nil))
(insn 255 254 256 23 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [3 q+0 S4 A32])
        (reg:SF 21 xmm0 [555])) "CETLIH4.f":128 131 {*movsf_internal}
     (nil))
(insn 256 255 257 23 (set (reg:SF 21 xmm0 [558])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [3 p+0 S4 A32])) "CETLIH4.f":129 131 {*movsf_internal}
     (nil))
(insn 257 256 258 23 (set (reg:SF 21 xmm0 [557])
        (mult:SF (reg:SF 21 xmm0 [558])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -92 [0xffffffffffffffa4])) [3 q+0 S4 A32]))) "CETLIH4.f":129 838 {*fop_sf_comm}
     (nil))
(insn 258 257 259 23 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [3 pq+0 S4 A32])
        (reg:SF 21 xmm0 [557])) "CETLIH4.f":129 131 {*movsf_internal}
     (nil))
(insn 259 258 260 23 (set (reg:SI 37 r8 [559])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":130 86 {*movsi_internal}
     (nil))
(insn 260 259 261 23 (set (reg:DI 37 r8 [orig:152 _66 ] [152])
        (sign_extend:DI (reg:SI 37 r8 [559]))) "CETLIH4.f":130 149 {*extendsidi2_rex64}
     (nil))
(insn 261 260 262 23 (parallel [
            (set (reg:DI 37 r8 [orig:153 _67 ] [153])
                (plus:DI (reg:DI 37 r8 [orig:152 _66 ] [152])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":130 222 {*adddi_1}
     (nil))
(insn 262 261 266 23 (set (reg:SI 38 r9 [orig:154 _68 ] [154])
        (mem:SI (plus:DI (mult:DI (reg:DI 37 r8 [orig:153 _67 ] [153])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f6507d1aab0 indx>)) [1 indx.ihe S4 A32])) "CETLIH4.f":130 86 {*movsi_internal}
     (nil))
(insn 266 262 267 23 (set (reg:SI 37 r8 [563])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":130 86 {*movsi_internal}
     (nil))
(insn 267 266 268 23 (parallel [
            (set (reg:SI 37 r8 [562])
                (plus:SI (reg:SI 37 r8 [563])
                    (reg:SI 38 r9 [orig:154 _68 ] [154])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":130 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 38 r9 [orig:154 _68 ] [154])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 268 267 269 23 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [1 ie+0 S4 A32])
        (reg:SI 37 r8 [562])) "CETLIH4.f":130 86 {*movsi_internal}
     (nil))
(insn 269 268 270 23 (set (reg:SI 37 r8 [564])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":131 86 {*movsi_internal}
     (nil))
(insn 270 269 271 23 (set (reg:DI 37 r8 [orig:155 _69 ] [155])
        (sign_extend:DI (reg:SI 37 r8 [564]))) "CETLIH4.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 271 270 272 23 (parallel [
            (set (reg:DI 37 r8 [orig:156 _70 ] [156])
                (plus:DI (reg:DI 37 r8 [orig:155 _69 ] [155])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":131 222 {*adddi_1}
     (nil))
(insn 272 271 273 23 (parallel [
            (set (reg:DI 37 r8 [565])
                (plus:DI (reg:DI 37 r8 [orig:156 _70 ] [156])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":131 222 {*adddi_1}
     (nil))
(insn 273 272 277 23 (set (reg:SI 38 r9 [orig:157 _71 ] [157])
        (mem:SI (plus:DI (mult:DI (reg:DI 37 r8 [565])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7f6507d1aab0 indx>)) [1 indx.ihw S4 A32])) "CETLIH4.f":131 86 {*movsi_internal}
     (nil))
(insn 277 273 278 23 (set (reg:SI 37 r8 [569])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":131 86 {*movsi_internal}
     (nil))
(insn 278 277 279 23 (parallel [
            (set (reg:SI 37 r8 [568])
                (plus:SI (reg:SI 37 r8 [569])
                    (reg:SI 38 r9 [orig:157 _71 ] [157])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":131 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 38 r9 [orig:157 _71 ] [157])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 279 278 280 23 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [1 iw+0 S4 A32])
        (reg:SI 37 r8 [568])) "CETLIH4.f":131 86 {*movsi_internal}
     (nil))
(insn 280 279 281 23 (set (reg:SI 37 r8 [570])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":134 86 {*movsi_internal}
     (nil))
(insn 281 280 282 23 (parallel [
            (set (reg:SI 37 r8 [orig:158 _72 ] [158])
                (plus:SI (reg:SI 37 r8 [570])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 282 281 283 23 (set (reg:DI 37 r8 [orig:159 _73 ] [159])
        (sign_extend:DI (reg:SI 37 r8 [orig:158 _72 ] [158]))) "CETLIH4.f":134 149 {*extendsidi2_rex64}
     (nil))
(insn 283 282 284 23 (parallel [
            (set (reg:DI 38 r9 [orig:160 _74 ] [160])
                (mult:DI (reg:DI 37 r8 [orig:159 _73 ] [159])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 349 {*muldi3_1}
     (nil))
(insn 284 283 285 23 (set (reg:SI 37 r8 [571])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [1 ie+0 S4 A32])) "CETLIH4.f":134 86 {*movsi_internal}
     (nil))
(insn 285 284 286 23 (set (reg:DI 37 r8 [orig:161 _75 ] [161])
        (sign_extend:DI (reg:SI 37 r8 [571]))) "CETLIH4.f":134 149 {*extendsidi2_rex64}
     (nil))
(insn 286 285 287 23 (parallel [
            (set (reg:DI 37 r8 [orig:162 _76 ] [162])
                (plus:DI (reg:DI 37 r8 [orig:161 _75 ] [161])
                    (reg:DI 38 r9 [orig:160 _74 ] [160])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 287 286 288 23 (parallel [
            (set (reg:DI 38 r9 [orig:163 _77 ] [163])
                (plus:DI (reg:DI 37 r8 [orig:162 _76 ] [162])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 288 287 289 23 (set (reg/f:DI 37 r8 [572])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":134 85 {*movdi_internal}
     (nil))
(insn 289 288 290 23 (parallel [
            (set (reg:DI 38 r9 [573])
                (plus:DI (reg:DI 38 r9 [orig:163 _77 ] [163])
                    (const_int 48029631 [0x2dcdfbf])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 290 289 291 23 (set (reg:SF 21 xmm0 [orig:164 _78 ] [164])
        (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [573])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [572])) [3 llgrds.htlon S4 A32])) "CETLIH4.f":134 131 {*movsf_internal}
     (nil))
(insn 291 290 293 23 (set (reg:SF 21 xmm0 [orig:165 _79 ] [165])
        (minus:SF (reg:SF 21 xmm0 [orig:164 _78 ] [164])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [3 clon+0 S4 A32]))) "CETLIH4.f":134 841 {*fop_sf_1}
     (nil))
(insn 293 291 978 23 (set (reg:SF 21 xmm0 [orig:167 _81 ] [167])
        (mult:SF (reg:SF 21 xmm0 [orig:166 _80 ] [166])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])) [3 p+0 S4 A32]))) "CETLIH4.f":134 838 {*fop_sf_comm}
     (nil))
(insn 978 293 294 23 (set (reg:SF 22 xmm1 [orig:167 _81 ] [167])
        (reg:SF 21 xmm0 [orig:167 _81 ] [167])) "CETLIH4.f":134 131 {*movsf_internal}
     (nil))
(insn 294 978 295 23 (set (reg:SF 22 xmm1 [orig:167 _81 ] [167])
        (plus:SF (reg:SF 22 xmm1 [orig:167 _81 ] [167])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [3 clon+0 S4 A32]))) "CETLIH4.f":134 838 {*fop_sf_comm}
     (nil))
(insn 295 294 296 23 (set (reg:SI 37 r8 [574])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":134 86 {*movsi_internal}
     (nil))
(insn 296 295 297 23 (parallel [
            (set (reg:SI 37 r8 [orig:169 _83 ] [169])
                (plus:SI (reg:SI 37 r8 [574])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 297 296 298 23 (set (reg:DI 37 r8 [orig:170 _84 ] [170])
        (sign_extend:DI (reg:SI 37 r8 [orig:169 _83 ] [169]))) "CETLIH4.f":134 149 {*extendsidi2_rex64}
     (nil))
(insn 298 297 299 23 (parallel [
            (set (reg:DI 38 r9 [orig:171 _85 ] [171])
                (mult:DI (reg:DI 37 r8 [orig:170 _84 ] [170])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 349 {*muldi3_1}
     (nil))
(insn 299 298 300 23 (set (reg:SI 37 r8 [575])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [1 iw+0 S4 A32])) "CETLIH4.f":134 86 {*movsi_internal}
     (nil))
(insn 300 299 301 23 (set (reg:DI 37 r8 [orig:172 _86 ] [172])
        (sign_extend:DI (reg:SI 37 r8 [575]))) "CETLIH4.f":134 149 {*extendsidi2_rex64}
     (nil))
(insn 301 300 302 23 (parallel [
            (set (reg:DI 37 r8 [orig:173 _87 ] [173])
                (plus:DI (reg:DI 37 r8 [orig:172 _86 ] [172])
                    (reg:DI 38 r9 [orig:171 _85 ] [171])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 302 301 303 23 (parallel [
            (set (reg:DI 38 r9 [orig:174 _88 ] [174])
                (plus:DI (reg:DI 37 r8 [orig:173 _87 ] [173])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 303 302 304 23 (set (reg/f:DI 37 r8 [576])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":134 85 {*movdi_internal}
     (nil))
(insn 304 303 305 23 (parallel [
            (set (reg:DI 38 r9 [577])
                (plus:DI (reg:DI 38 r9 [orig:174 _88 ] [174])
                    (const_int 48029631 [0x2dcdfbf])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 305 304 306 23 (set (reg:SF 21 xmm0 [orig:175 _89 ] [175])
        (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [577])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [576])) [3 llgrds.htlon S4 A32])) "CETLIH4.f":134 131 {*movsf_internal}
     (nil))
(insn 306 305 308 23 (set (reg:SF 21 xmm0 [orig:176 _90 ] [176])
        (minus:SF (reg:SF 21 xmm0 [orig:175 _89 ] [175])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [3 clon+0 S4 A32]))) "CETLIH4.f":134 841 {*fop_sf_1}
     (nil))
(insn 308 306 309 23 (set (reg:SF 21 xmm0 [orig:178 _92 ] [178])
        (mult:SF (reg:SF 21 xmm0 [orig:177 _91 ] [177])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -92 [0xffffffffffffffa4])) [3 q+0 S4 A32]))) "CETLIH4.f":134 838 {*fop_sf_comm}
     (nil))
(insn 309 308 310 23 (set (reg:SF 22 xmm1 [orig:179 _93 ] [179])
        (plus:SF (reg:SF 22 xmm1 [orig:168 _82 ] [168])
            (reg:SF 21 xmm0 [orig:178 _92 ] [178]))) "CETLIH4.f":134 838 {*fop_sf_comm}
     (nil))
(insn 310 309 311 23 (set (reg:SI 37 r8 [578])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":134 86 {*movsi_internal}
     (nil))
(insn 311 310 312 23 (parallel [
            (set (reg:SI 37 r8 [orig:180 _94 ] [180])
                (plus:SI (reg:SI 37 r8 [578])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 312 311 313 23 (set (reg:DI 37 r8 [orig:181 _95 ] [181])
        (sign_extend:DI (reg:SI 37 r8 [orig:180 _94 ] [180]))) "CETLIH4.f":134 149 {*extendsidi2_rex64}
     (nil))
(insn 313 312 314 23 (parallel [
            (set (reg:DI 38 r9 [orig:182 _96 ] [182])
                (mult:DI (reg:DI 37 r8 [orig:181 _95 ] [181])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 349 {*muldi3_1}
     (nil))
(insn 314 313 315 23 (set (reg:SI 37 r8 [579])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [1 ie+0 S4 A32])) "CETLIH4.f":134 86 {*movsi_internal}
     (nil))
(insn 315 314 316 23 (set (reg:DI 37 r8 [orig:183 _97 ] [183])
        (sign_extend:DI (reg:SI 37 r8 [579]))) "CETLIH4.f":134 149 {*extendsidi2_rex64}
     (nil))
(insn 316 315 317 23 (parallel [
            (set (reg:DI 37 r8 [orig:184 _98 ] [184])
                (plus:DI (reg:DI 37 r8 [orig:183 _97 ] [183])
                    (reg:DI 38 r9 [orig:182 _96 ] [182])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 317 316 318 23 (parallel [
            (set (reg:DI 38 r9 [orig:185 _99 ] [185])
                (plus:DI (reg:DI 37 r8 [orig:184 _98 ] [184])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 318 317 319 23 (set (reg/f:DI 37 r8 [580])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":134 85 {*movdi_internal}
     (nil))
(insn 319 318 320 23 (parallel [
            (set (reg:DI 38 r9 [581])
                (plus:DI (reg:DI 38 r9 [orig:185 _99 ] [185])
                    (const_int 48029631 [0x2dcdfbf])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 320 319 321 23 (set (reg:SF 23 xmm2 [orig:186 _100 ] [186])
        (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [581])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [580])) [3 llgrds.htlon S4 A32])) "CETLIH4.f":134 131 {*movsf_internal}
     (nil))
(insn 321 320 322 23 (set (reg:SF 21 xmm0 [582])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [3 clon+0 S4 A32])) "CETLIH4.f":134 131 {*movsf_internal}
     (nil))
(insn 322 321 323 23 (set (reg:SF 21 xmm0 [orig:187 _101 ] [187])
        (minus:SF (reg:SF 21 xmm0 [582])
            (reg:SF 23 xmm2 [orig:186 _100 ] [186]))) "CETLIH4.f":134 841 {*fop_sf_1}
     (nil))
(insn 323 322 324 23 (set (reg:SI 37 r8 [583])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":134 86 {*movsi_internal}
     (nil))
(insn 324 323 325 23 (parallel [
            (set (reg:SI 37 r8 [orig:188 _102 ] [188])
                (plus:SI (reg:SI 37 r8 [583])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 325 324 326 23 (set (reg:DI 37 r8 [orig:189 _103 ] [189])
        (sign_extend:DI (reg:SI 37 r8 [orig:188 _102 ] [188]))) "CETLIH4.f":134 149 {*extendsidi2_rex64}
     (nil))
(insn 326 325 327 23 (parallel [
            (set (reg:DI 38 r9 [orig:190 _104 ] [190])
                (mult:DI (reg:DI 37 r8 [orig:189 _103 ] [189])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 349 {*muldi3_1}
     (nil))
(insn 327 326 328 23 (set (reg:SI 37 r8 [584])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [1 iw+0 S4 A32])) "CETLIH4.f":134 86 {*movsi_internal}
     (nil))
(insn 328 327 329 23 (set (reg:DI 37 r8 [orig:191 _105 ] [191])
        (sign_extend:DI (reg:SI 37 r8 [584]))) "CETLIH4.f":134 149 {*extendsidi2_rex64}
     (nil))
(insn 329 328 330 23 (parallel [
            (set (reg:DI 37 r8 [orig:192 _106 ] [192])
                (plus:DI (reg:DI 37 r8 [orig:191 _105 ] [191])
                    (reg:DI 38 r9 [orig:190 _104 ] [190])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 330 329 331 23 (parallel [
            (set (reg:DI 38 r9 [orig:193 _107 ] [193])
                (plus:DI (reg:DI 37 r8 [orig:192 _106 ] [192])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 331 330 332 23 (set (reg/f:DI 37 r8 [585])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":134 85 {*movdi_internal}
     (nil))
(insn 332 331 333 23 (parallel [
            (set (reg:DI 38 r9 [586])
                (plus:DI (reg:DI 38 r9 [orig:193 _107 ] [193])
                    (const_int 48029631 [0x2dcdfbf])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 333 332 334 23 (set (reg:SF 23 xmm2 [orig:194 _108 ] [194])
        (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [586])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [585])) [3 llgrds.htlon S4 A32])) "CETLIH4.f":134 131 {*movsf_internal}
     (nil))
(insn 334 333 981 23 (set (reg:SF 21 xmm0 [orig:187 _101 ] [187])
        (minus:SF (reg:SF 21 xmm0 [orig:187 _101 ] [187])
            (reg:SF 23 xmm2 [orig:194 _108 ] [194]))) "CETLIH4.f":134 841 {*fop_sf_1}
     (nil))
(insn 981 334 335 23 (set (reg:SF 23 xmm2 [orig:195 _109 ] [195])
        (reg:SF 21 xmm0 [orig:187 _101 ] [187])) "CETLIH4.f":134 131 {*movsf_internal}
     (nil))
(insn 335 981 336 23 (set (reg:SI 37 r8 [587])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":134 86 {*movsi_internal}
     (nil))
(insn 336 335 337 23 (parallel [
            (set (reg:SI 37 r8 [orig:196 _110 ] [196])
                (plus:SI (reg:SI 37 r8 [587])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 j+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 337 336 338 23 (set (reg:DI 37 r8 [orig:197 _111 ] [197])
        (sign_extend:DI (reg:SI 37 r8 [orig:196 _110 ] [196]))) "CETLIH4.f":134 149 {*extendsidi2_rex64}
     (nil))
(insn 338 337 339 23 (parallel [
            (set (reg:DI 38 r9 [orig:198 _112 ] [198])
                (mult:DI (reg:DI 37 r8 [orig:197 _111 ] [197])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 349 {*muldi3_1}
     (nil))
(insn 339 338 340 23 (set (reg:SI 37 r8 [588])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":134 86 {*movsi_internal}
     (nil))
(insn 340 339 341 23 (set (reg:DI 37 r8 [orig:199 _113 ] [199])
        (sign_extend:DI (reg:SI 37 r8 [588]))) "CETLIH4.f":134 149 {*extendsidi2_rex64}
     (nil))
(insn 341 340 342 23 (parallel [
            (set (reg:DI 37 r8 [orig:200 _114 ] [200])
                (plus:DI (reg:DI 37 r8 [orig:199 _113 ] [199])
                    (reg:DI 38 r9 [orig:198 _112 ] [198])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 342 341 343 23 (parallel [
            (set (reg:DI 38 r9 [orig:201 _115 ] [201])
                (plus:DI (reg:DI 37 r8 [orig:200 _114 ] [200])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 343 342 344 23 (set (reg/f:DI 37 r8 [589])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":134 85 {*movdi_internal}
     (nil))
(insn 344 343 345 23 (parallel [
            (set (reg:DI 38 r9 [590])
                (plus:DI (reg:DI 38 r9 [orig:201 _115 ] [201])
                    (const_int 48029631 [0x2dcdfbf])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 345 344 346 23 (set (reg:SF 21 xmm0 [orig:202 _116 ] [202])
        (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [590])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [589])) [3 llgrds.htlon S4 A32])) "CETLIH4.f":134 131 {*movsf_internal}
     (nil))
(insn 346 345 348 23 (set (reg:SF 21 xmm0 [orig:203 _117 ] [203])
        (plus:SF (reg:SF 21 xmm0 [orig:202 _116 ] [202])
            (reg:SF 23 xmm2 [orig:195 _109 ] [195]))) "CETLIH4.f":134 838 {*fop_sf_comm}
     (nil))
(insn 348 346 349 23 (set (reg:SF 21 xmm0 [orig:205 _119 ] [205])
        (mult:SF (reg:SF 21 xmm0 [orig:204 _118 ] [204])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -96 [0xffffffffffffffa0])) [3 pq+0 S4 A32]))) "CETLIH4.f":134 838 {*fop_sf_comm}
     (nil))
(insn 349 348 350 23 (set (reg:SI 37 r8 [591])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":134 86 {*movsi_internal}
     (nil))
(insn 350 349 351 23 (set (reg:DI 37 r8 [orig:206 _120 ] [206])
        (sign_extend:DI (reg:SI 37 r8 [591]))) "CETLIH4.f":134 149 {*extendsidi2_rex64}
     (nil))
(insn 351 350 352 23 (parallel [
            (set (reg:DI 38 r9 [orig:207 _121 ] [207])
                (mult:DI (reg:DI 37 r8 [orig:206 _120 ] [206])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 349 {*muldi3_1}
     (nil))
(insn 352 351 353 23 (set (reg:SI 37 r8 [592])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":134 86 {*movsi_internal}
     (nil))
(insn 353 352 354 23 (set (reg:DI 37 r8 [orig:208 _122 ] [208])
        (sign_extend:DI (reg:SI 37 r8 [592]))) "CETLIH4.f":134 149 {*extendsidi2_rex64}
     (nil))
(insn 354 353 355 23 (parallel [
            (set (reg:DI 37 r8 [orig:209 _123 ] [209])
                (plus:DI (reg:DI 37 r8 [orig:208 _122 ] [208])
                    (reg:DI 38 r9 [orig:207 _121 ] [207])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 355 354 356 23 (parallel [
            (set (reg:DI 38 r9 [orig:210 _124 ] [210])
                (plus:DI (reg:DI 37 r8 [orig:209 _123 ] [209])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":134 222 {*adddi_1}
     (nil))
(insn 356 355 357 23 (set (reg:SF 21 xmm0 [orig:211 _125 ] [211])
        (plus:SF (reg:SF 21 xmm0 [orig:205 _119 ] [205])
            (reg:SF 22 xmm1 [orig:179 _93 ] [179]))) "CETLIH4.f":134 838 {*fop_sf_comm}
     (nil))
(insn 357 356 358 23 (set (reg/f:DI 37 r8 [593])
        (symbol_ref:DI ("sblon.3895") [flags 0x202]  <var_decl 0x7f6500cb8c60 sblon>)) "CETLIH4.f":134 85 {*movdi_internal}
     (nil))
(insn 358 357 359 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [orig:210 _124 ] [210])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [593])) [3 sblon S4 A32])
        (reg:SF 21 xmm0 [orig:211 _125 ] [211])) "CETLIH4.f":134 131 {*movsf_internal}
     (nil))
(insn 359 358 360 23 (set (reg:SI 37 r8 [594])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":137 86 {*movsi_internal}
     (nil))
(insn 360 359 361 23 (parallel [
            (set (reg:SI 37 r8 [orig:212 _126 ] [212])
                (plus:SI (reg:SI 37 r8 [594])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 361 360 362 23 (set (reg:DI 37 r8 [orig:213 _127 ] [213])
        (sign_extend:DI (reg:SI 37 r8 [orig:212 _126 ] [212]))) "CETLIH4.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 362 361 363 23 (parallel [
            (set (reg:DI 38 r9 [orig:214 _128 ] [214])
                (mult:DI (reg:DI 37 r8 [orig:213 _127 ] [213])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 349 {*muldi3_1}
     (nil))
(insn 363 362 364 23 (set (reg:SI 37 r8 [595])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [1 ie+0 S4 A32])) "CETLIH4.f":137 86 {*movsi_internal}
     (nil))
(insn 364 363 365 23 (set (reg:DI 37 r8 [orig:215 _129 ] [215])
        (sign_extend:DI (reg:SI 37 r8 [595]))) "CETLIH4.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 365 364 366 23 (parallel [
            (set (reg:DI 37 r8 [orig:216 _130 ] [216])
                (plus:DI (reg:DI 37 r8 [orig:215 _129 ] [215])
                    (reg:DI 38 r9 [orig:214 _128 ] [214])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 366 365 367 23 (parallel [
            (set (reg:DI 38 r9 [orig:217 _131 ] [217])
                (plus:DI (reg:DI 37 r8 [orig:216 _130 ] [216])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 367 366 368 23 (set (reg/f:DI 37 r8 [596])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":137 85 {*movdi_internal}
     (nil))
(insn 368 367 369 23 (parallel [
            (set (reg:DI 38 r9 [597])
                (plus:DI (reg:DI 38 r9 [orig:217 _131 ] [217])
                    (const_int 48000000 [0x2dc6c00])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 369 368 370 23 (set (reg:SF 21 xmm0 [orig:218 _132 ] [218])
        (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [597])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [596])) [3 llgrds.htlat S4 A32])) "CETLIH4.f":137 131 {*movsf_internal}
     (nil))
(insn 370 369 372 23 (set (reg:SF 21 xmm0 [orig:219 _133 ] [219])
        (minus:SF (reg:SF 21 xmm0 [orig:218 _132 ] [218])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])) [3 clat+0 S4 A32]))) "CETLIH4.f":137 841 {*fop_sf_1}
     (nil))
(insn 372 370 982 23 (set (reg:SF 21 xmm0 [orig:221 _135 ] [221])
        (mult:SF (reg:SF 21 xmm0 [orig:220 _134 ] [220])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])) [3 p+0 S4 A32]))) "CETLIH4.f":137 838 {*fop_sf_comm}
     (nil))
(insn 982 372 373 23 (set (reg:SF 22 xmm1 [orig:221 _135 ] [221])
        (reg:SF 21 xmm0 [orig:221 _135 ] [221])) "CETLIH4.f":137 131 {*movsf_internal}
     (nil))
(insn 373 982 374 23 (set (reg:SF 22 xmm1 [orig:221 _135 ] [221])
        (plus:SF (reg:SF 22 xmm1 [orig:221 _135 ] [221])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])) [3 clat+0 S4 A32]))) "CETLIH4.f":137 838 {*fop_sf_comm}
     (nil))
(insn 374 373 375 23 (set (reg:SI 37 r8 [598])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":137 86 {*movsi_internal}
     (nil))
(insn 375 374 376 23 (parallel [
            (set (reg:SI 37 r8 [orig:223 _137 ] [223])
                (plus:SI (reg:SI 37 r8 [598])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 376 375 377 23 (set (reg:DI 37 r8 [orig:224 _138 ] [224])
        (sign_extend:DI (reg:SI 37 r8 [orig:223 _137 ] [223]))) "CETLIH4.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 377 376 378 23 (parallel [
            (set (reg:DI 38 r9 [orig:225 _139 ] [225])
                (mult:DI (reg:DI 37 r8 [orig:224 _138 ] [224])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 349 {*muldi3_1}
     (nil))
(insn 378 377 379 23 (set (reg:SI 37 r8 [599])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [1 iw+0 S4 A32])) "CETLIH4.f":137 86 {*movsi_internal}
     (nil))
(insn 379 378 380 23 (set (reg:DI 37 r8 [orig:226 _140 ] [226])
        (sign_extend:DI (reg:SI 37 r8 [599]))) "CETLIH4.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 380 379 381 23 (parallel [
            (set (reg:DI 37 r8 [orig:227 _141 ] [227])
                (plus:DI (reg:DI 37 r8 [orig:226 _140 ] [226])
                    (reg:DI 38 r9 [orig:225 _139 ] [225])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 381 380 382 23 (parallel [
            (set (reg:DI 38 r9 [orig:228 _142 ] [228])
                (plus:DI (reg:DI 37 r8 [orig:227 _141 ] [227])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 382 381 383 23 (set (reg/f:DI 37 r8 [600])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":137 85 {*movdi_internal}
     (nil))
(insn 383 382 384 23 (parallel [
            (set (reg:DI 38 r9 [601])
                (plus:DI (reg:DI 38 r9 [orig:228 _142 ] [228])
                    (const_int 48000000 [0x2dc6c00])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 384 383 385 23 (set (reg:SF 21 xmm0 [orig:229 _143 ] [229])
        (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [601])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [600])) [3 llgrds.htlat S4 A32])) "CETLIH4.f":137 131 {*movsf_internal}
     (nil))
(insn 385 384 387 23 (set (reg:SF 21 xmm0 [orig:230 _144 ] [230])
        (minus:SF (reg:SF 21 xmm0 [orig:229 _143 ] [229])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])) [3 clat+0 S4 A32]))) "CETLIH4.f":137 841 {*fop_sf_1}
     (nil))
(insn 387 385 388 23 (set (reg:SF 21 xmm0 [orig:232 _146 ] [232])
        (mult:SF (reg:SF 21 xmm0 [orig:231 _145 ] [231])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -92 [0xffffffffffffffa4])) [3 q+0 S4 A32]))) "CETLIH4.f":137 838 {*fop_sf_comm}
     (nil))
(insn 388 387 389 23 (set (reg:SF 22 xmm1 [orig:233 _147 ] [233])
        (plus:SF (reg:SF 22 xmm1 [orig:222 _136 ] [222])
            (reg:SF 21 xmm0 [orig:232 _146 ] [232]))) "CETLIH4.f":137 838 {*fop_sf_comm}
     (nil))
(insn 389 388 390 23 (set (reg:SI 37 r8 [602])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":137 86 {*movsi_internal}
     (nil))
(insn 390 389 391 23 (parallel [
            (set (reg:SI 37 r8 [orig:234 _148 ] [234])
                (plus:SI (reg:SI 37 r8 [602])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 391 390 392 23 (set (reg:DI 37 r8 [orig:235 _149 ] [235])
        (sign_extend:DI (reg:SI 37 r8 [orig:234 _148 ] [234]))) "CETLIH4.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 392 391 393 23 (parallel [
            (set (reg:DI 38 r9 [orig:236 _150 ] [236])
                (mult:DI (reg:DI 37 r8 [orig:235 _149 ] [235])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 349 {*muldi3_1}
     (nil))
(insn 393 392 394 23 (set (reg:SI 37 r8 [603])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [1 ie+0 S4 A32])) "CETLIH4.f":137 86 {*movsi_internal}
     (nil))
(insn 394 393 395 23 (set (reg:DI 37 r8 [orig:237 _151 ] [237])
        (sign_extend:DI (reg:SI 37 r8 [603]))) "CETLIH4.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 395 394 396 23 (parallel [
            (set (reg:DI 37 r8 [orig:238 _152 ] [238])
                (plus:DI (reg:DI 37 r8 [orig:237 _151 ] [237])
                    (reg:DI 38 r9 [orig:236 _150 ] [236])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 396 395 397 23 (parallel [
            (set (reg:DI 38 r9 [orig:239 _153 ] [239])
                (plus:DI (reg:DI 37 r8 [orig:238 _152 ] [238])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 397 396 398 23 (set (reg/f:DI 37 r8 [604])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":137 85 {*movdi_internal}
     (nil))
(insn 398 397 399 23 (parallel [
            (set (reg:DI 38 r9 [605])
                (plus:DI (reg:DI 38 r9 [orig:239 _153 ] [239])
                    (const_int 48000000 [0x2dc6c00])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 399 398 400 23 (set (reg:SF 23 xmm2 [orig:240 _154 ] [240])
        (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [605])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [604])) [3 llgrds.htlat S4 A32])) "CETLIH4.f":137 131 {*movsf_internal}
     (nil))
(insn 400 399 401 23 (set (reg:SF 21 xmm0 [606])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [3 clat+0 S4 A32])) "CETLIH4.f":137 131 {*movsf_internal}
     (nil))
(insn 401 400 402 23 (set (reg:SF 21 xmm0 [orig:241 _155 ] [241])
        (minus:SF (reg:SF 21 xmm0 [606])
            (reg:SF 23 xmm2 [orig:240 _154 ] [240]))) "CETLIH4.f":137 841 {*fop_sf_1}
     (nil))
(insn 402 401 403 23 (set (reg:SI 37 r8 [607])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":137 86 {*movsi_internal}
     (nil))
(insn 403 402 404 23 (parallel [
            (set (reg:SI 37 r8 [orig:242 _156 ] [242])
                (plus:SI (reg:SI 37 r8 [607])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 404 403 405 23 (set (reg:DI 37 r8 [orig:243 _157 ] [243])
        (sign_extend:DI (reg:SI 37 r8 [orig:242 _156 ] [242]))) "CETLIH4.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 405 404 406 23 (parallel [
            (set (reg:DI 38 r9 [orig:244 _158 ] [244])
                (mult:DI (reg:DI 37 r8 [orig:243 _157 ] [243])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 349 {*muldi3_1}
     (nil))
(insn 406 405 407 23 (set (reg:SI 37 r8 [608])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [1 iw+0 S4 A32])) "CETLIH4.f":137 86 {*movsi_internal}
     (nil))
(insn 407 406 408 23 (set (reg:DI 37 r8 [orig:245 _159 ] [245])
        (sign_extend:DI (reg:SI 37 r8 [608]))) "CETLIH4.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 408 407 409 23 (parallel [
            (set (reg:DI 37 r8 [orig:246 _160 ] [246])
                (plus:DI (reg:DI 37 r8 [orig:245 _159 ] [245])
                    (reg:DI 38 r9 [orig:244 _158 ] [244])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 409 408 410 23 (parallel [
            (set (reg:DI 38 r9 [orig:247 _161 ] [247])
                (plus:DI (reg:DI 37 r8 [orig:246 _160 ] [246])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 410 409 411 23 (set (reg/f:DI 37 r8 [609])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":137 85 {*movdi_internal}
     (nil))
(insn 411 410 412 23 (parallel [
            (set (reg:DI 38 r9 [610])
                (plus:DI (reg:DI 38 r9 [orig:247 _161 ] [247])
                    (const_int 48000000 [0x2dc6c00])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 412 411 413 23 (set (reg:SF 23 xmm2 [orig:248 _162 ] [248])
        (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [610])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [609])) [3 llgrds.htlat S4 A32])) "CETLIH4.f":137 131 {*movsf_internal}
     (nil))
(insn 413 412 985 23 (set (reg:SF 21 xmm0 [orig:241 _155 ] [241])
        (minus:SF (reg:SF 21 xmm0 [orig:241 _155 ] [241])
            (reg:SF 23 xmm2 [orig:248 _162 ] [248]))) "CETLIH4.f":137 841 {*fop_sf_1}
     (nil))
(insn 985 413 414 23 (set (reg:SF 23 xmm2 [orig:249 _163 ] [249])
        (reg:SF 21 xmm0 [orig:241 _155 ] [241])) "CETLIH4.f":137 131 {*movsf_internal}
     (nil))
(insn 414 985 415 23 (set (reg:SI 37 r8 [611])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":137 86 {*movsi_internal}
     (nil))
(insn 415 414 416 23 (parallel [
            (set (reg:SI 37 r8 [orig:250 _164 ] [250])
                (plus:SI (reg:SI 37 r8 [611])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])) [1 j+0 S4 A32])
            (const_int 2 [0x2]))
        (nil)))
(insn 416 415 417 23 (set (reg:DI 37 r8 [orig:251 _165 ] [251])
        (sign_extend:DI (reg:SI 37 r8 [orig:250 _164 ] [250]))) "CETLIH4.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 417 416 418 23 (parallel [
            (set (reg:DI 38 r9 [orig:252 _166 ] [252])
                (mult:DI (reg:DI 37 r8 [orig:251 _165 ] [251])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 349 {*muldi3_1}
     (nil))
(insn 418 417 419 23 (set (reg:SI 37 r8 [612])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":137 86 {*movsi_internal}
     (nil))
(insn 419 418 420 23 (set (reg:DI 37 r8 [orig:253 _167 ] [253])
        (sign_extend:DI (reg:SI 37 r8 [612]))) "CETLIH4.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 420 419 421 23 (parallel [
            (set (reg:DI 37 r8 [orig:254 _168 ] [254])
                (plus:DI (reg:DI 37 r8 [orig:253 _167 ] [253])
                    (reg:DI 38 r9 [orig:252 _166 ] [252])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 421 420 422 23 (parallel [
            (set (reg:DI 38 r9 [orig:255 _169 ] [255])
                (plus:DI (reg:DI 37 r8 [orig:254 _168 ] [254])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 422 421 423 23 (set (reg/f:DI 37 r8 [613])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":137 85 {*movdi_internal}
     (nil))
(insn 423 422 424 23 (parallel [
            (set (reg:DI 38 r9 [614])
                (plus:DI (reg:DI 38 r9 [orig:255 _169 ] [255])
                    (const_int 48000000 [0x2dc6c00])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 424 423 425 23 (set (reg:SF 21 xmm0 [orig:256 _170 ] [256])
        (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [614])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [613])) [3 llgrds.htlat S4 A32])) "CETLIH4.f":137 131 {*movsf_internal}
     (nil))
(insn 425 424 427 23 (set (reg:SF 21 xmm0 [orig:257 _171 ] [257])
        (plus:SF (reg:SF 21 xmm0 [orig:256 _170 ] [256])
            (reg:SF 23 xmm2 [orig:249 _163 ] [249]))) "CETLIH4.f":137 838 {*fop_sf_comm}
     (nil))
(insn 427 425 428 23 (set (reg:SF 21 xmm0 [orig:259 _173 ] [259])
        (mult:SF (reg:SF 21 xmm0 [orig:258 _172 ] [258])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -96 [0xffffffffffffffa0])) [3 pq+0 S4 A32]))) "CETLIH4.f":137 838 {*fop_sf_comm}
     (nil))
(insn 428 427 429 23 (set (reg:SI 37 r8 [615])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":137 86 {*movsi_internal}
     (nil))
(insn 429 428 430 23 (set (reg:DI 37 r8 [orig:260 _174 ] [260])
        (sign_extend:DI (reg:SI 37 r8 [615]))) "CETLIH4.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 430 429 431 23 (parallel [
            (set (reg:DI 38 r9 [orig:261 _175 ] [261])
                (mult:DI (reg:DI 37 r8 [orig:260 _174 ] [260])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 349 {*muldi3_1}
     (nil))
(insn 431 430 432 23 (set (reg:SI 37 r8 [616])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":137 86 {*movsi_internal}
     (nil))
(insn 432 431 433 23 (set (reg:DI 37 r8 [orig:262 _176 ] [262])
        (sign_extend:DI (reg:SI 37 r8 [616]))) "CETLIH4.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 433 432 434 23 (parallel [
            (set (reg:DI 37 r8 [orig:263 _177 ] [263])
                (plus:DI (reg:DI 37 r8 [orig:262 _176 ] [262])
                    (reg:DI 38 r9 [orig:261 _175 ] [261])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 434 433 435 23 (parallel [
            (set (reg:DI 38 r9 [orig:264 _178 ] [264])
                (plus:DI (reg:DI 37 r8 [orig:263 _177 ] [263])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":137 222 {*adddi_1}
     (nil))
(insn 435 434 436 23 (set (reg:SF 21 xmm0 [orig:265 _179 ] [265])
        (plus:SF (reg:SF 21 xmm0 [orig:259 _173 ] [259])
            (reg:SF 22 xmm1 [orig:233 _147 ] [233]))) "CETLIH4.f":137 838 {*fop_sf_comm}
     (nil))
(insn 436 435 437 23 (set (reg/f:DI 37 r8 [617])
        (symbol_ref:DI ("sblat.3893") [flags 0x202]  <var_decl 0x7f6500cb8bd0 sblat>)) "CETLIH4.f":137 85 {*movdi_internal}
     (nil))
(insn 437 436 938 23 (set (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [orig:264 _178 ] [264])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [617])) [3 sblat S4 A32])
        (reg:SF 21 xmm0 [orig:265 _179 ] [265])) "CETLIH4.f":137 131 {*movsf_internal}
     (nil))
(jump_insn 938 437 939 23 (set (pc)
        (label_ref 438)) 683 {jump}
     (nil)
 -> 438)
;;  succ:       24
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 470

(barrier 939 938 941)
;; basic block 59, loop depth 0, maybe hot
;;  prev block 23, next block 24, flags: (RTL, MODIFIED)
;;  pred:       22
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 470
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 941 939 940 59 42 (nil) [1 uses])
(note 940 941 942 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 942 940 438 59 (const_int 0 [0]) "CETLIH4.f":137 718 {nop}
     (nil))
;;  succ:       24 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 470

;; basic block 24, loop depth 0, maybe hot
;;  prev block 59, next block 58, flags: (RTL, MODIFIED)
;;  pred:       59 [always]  (FALLTHRU)
;;              23
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 470
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 438 942 439 24 14 (nil) [1 uses])
(note 439 438 440 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 440 439 904 24 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":103 221 {*addsi_1}
     (nil))
(jump_insn 904 440 905 24 (set (pc)
        (label_ref 441)) "CETLIH4.f":103 683 {jump}
     (nil)
 -> 441)
;;  succ:       21 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 470

(barrier 905 904 936)
;; basic block 58, loop depth 0, maybe hot
;;  prev block 24, next block 25, flags: (RTL, MODIFIED)
;;  pred:       21
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 936 905 935 58 41 (nil) [1 uses])
(note 935 936 937 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 937 935 444 58 (const_int 0 [0]) "CETLIH4.f":137 718 {nop}
     (nil))
;;  succ:       25 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468

;; basic block 25, loop depth 0, maybe hot
;;  prev block 58, next block 26, flags: (RTL, MODIFIED)
;;  pred:       58 [always]  (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 472 618
(code_label 444 937 445 25 13 (nil) [0 uses])
(note 445 444 446 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 446 445 447 25 (set (reg/f:DI 5 di [618])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [5 ioffs+0 S8 A64])) "CETLIH4.f":140 85 {*movdi_internal}
     (nil))
(insn 447 446 448 25 (set (reg:SI 5 di [orig:472 _455 ] [472])
        (mem:SI (reg/f:DI 5 di [618]) [1 *ioffs_454(D)+0 S4 A32])) "CETLIH4.f":140 86 {*movsi_internal}
     (nil))
(insn 448 447 636 25 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])
        (const_int 0 [0])) "CETLIH4.f":140 86 {*movsi_internal}
     (nil))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;;              36 [always] 
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 472
;; lr  def 	 17 [flags] 473 619
(code_label 636 448 449 26 23 (nil) [1 uses])
(note 449 636 450 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 450 449 451 26 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])
            (reg:SI 5 di [orig:472 _455 ] [472]))) "CETLIH4.f":140 11 {*cmpsi_1}
     (nil))
(insn 451 450 452 26 (set (reg:QI 37 r8 [619])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CETLIH4.f":140 678 {*setcc_qi}
     (nil))
(insn 452 451 453 26 (set (reg:SI 37 r8 [orig:473 _457 ] [473])
        (zero_extend:SI (reg:QI 37 r8 [619]))) "CETLIH4.f":140 140 {*zero_extendqisi2}
     (nil))
(insn 453 452 454 26 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 37 r8 [orig:473 _457 ] [473])
            (const_int 0 [0]))) "CETLIH4.f":140 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 454 453 455 26 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 944)
            (pc))) "CETLIH4.f":140 682 {*jcc}
     (nil)
 -> 944)
;;  succ:       60
;;              27 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 474 620
(note 455 454 456 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 456 455 457 27 (set (reg/f:DI 37 r8 [620])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [5 ioffs+0 S8 A64])) "CETLIH4.f":141 85 {*movdi_internal}
     (nil))
(insn 457 456 458 27 (set (reg:SI 37 r8 [orig:474 _458 ] [474])
        (mem:SI (reg/f:DI 37 r8 [620]) [1 *ioffs_454(D)+0 S4 A32])) "CETLIH4.f":141 86 {*movsi_internal}
     (nil))
(insn 458 457 630 27 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])
        (const_int 0 [0])) "CETLIH4.f":141 86 {*movsi_internal}
     (nil))
;;  succ:       28 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;;              35 [always] 
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 474
;; lr  def 	 17 [flags] 475 621
(code_label 630 458 459 28 22 (nil) [1 uses])
(note 459 630 460 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 460 459 461 28 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])
            (reg:SI 37 r8 [orig:474 _458 ] [474]))) "CETLIH4.f":141 11 {*cmpsi_1}
     (nil))
(insn 461 460 462 28 (set (reg:QI 38 r9 [621])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CETLIH4.f":141 678 {*setcc_qi}
     (nil))
(insn 462 461 463 28 (set (reg:SI 38 r9 [orig:475 _460 ] [475])
        (zero_extend:SI (reg:QI 38 r9 [621]))) "CETLIH4.f":141 140 {*zero_extendqisi2}
     (nil))
(insn 463 462 464 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 38 r9 [orig:475 _460 ] [475])
            (const_int 0 [0]))) "CETLIH4.f":141 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 464 463 465 28 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 947)
            (pc))) "CETLIH4.f":141 682 {*jcc}
     (nil)
 -> 947)
;;  succ:       61
;;              29 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 30, flags: (RTL, MODIFIED)
;;  pred:       28 (FALLTHRU)
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 476
(note 465 464 466 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 466 465 467 29 (set (reg:SI 38 r9 [orig:476 _461 ] [476])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 iend+0 S4 A32])) "CETLIH4.f":143 86 {*movsi_internal}
     (nil))
(insn 467 466 624 29 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CETLIH4.f":143 86 {*movsi_internal}
     (nil))
;;  succ:       30 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474 476

;; basic block 30, loop depth 0, maybe hot
;;  prev block 29, next block 31, flags: (RTL, MODIFIED)
;;  pred:       29 (FALLTHRU)
;;              34 [always] 
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474 476
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 476
;; lr  def 	 17 [flags] 477 622
(code_label 624 467 468 30 21 (nil) [1 uses])
(note 468 624 469 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 469 468 470 30 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (reg:SI 38 r9 [orig:476 _461 ] [476]))) "CETLIH4.f":143 11 {*cmpsi_1}
     (nil))
(insn 470 469 471 30 (set (reg:QI 39 r10 [622])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CETLIH4.f":143 678 {*setcc_qi}
     (nil))
(insn 471 470 472 30 (set (reg:SI 39 r10 [orig:477 _463 ] [477])
        (zero_extend:SI (reg:QI 39 r10 [622]))) "CETLIH4.f":143 140 {*zero_extendqisi2}
     (nil))
(insn 472 471 473 30 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 39 r10 [orig:477 _463 ] [477])
            (const_int 0 [0]))) "CETLIH4.f":143 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 473 472 474 30 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 950)
            (pc))) "CETLIH4.f":143 682 {*jcc}
     (nil)
 -> 950)
;;  succ:       62
;;              31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474 476

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474 476
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 266 267 268 269 270 623 624 625 626 627
(note 474 473 475 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 475 474 476 31 (set (reg:SI 39 r10 [623])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":144 86 {*movsi_internal}
     (nil))
(insn 476 475 477 31 (set (reg:DI 39 r10 [orig:266 _180 ] [266])
        (sign_extend:DI (reg:SI 39 r10 [623]))) "CETLIH4.f":144 149 {*extendsidi2_rex64}
     (nil))
(insn 477 476 478 31 (parallel [
            (set (reg:DI 40 r11 [orig:267 _181 ] [267])
                (mult:DI (reg:DI 39 r10 [orig:266 _180 ] [266])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":144 349 {*muldi3_1}
     (nil))
(insn 478 477 479 31 (set (reg:SI 39 r10 [624])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":144 86 {*movsi_internal}
     (nil))
(insn 479 478 480 31 (set (reg:DI 39 r10 [orig:268 _182 ] [268])
        (sign_extend:DI (reg:SI 39 r10 [624]))) "CETLIH4.f":144 149 {*extendsidi2_rex64}
     (nil))
(insn 480 479 481 31 (parallel [
            (set (reg:DI 39 r10 [orig:269 _183 ] [269])
                (plus:DI (reg:DI 39 r10 [orig:268 _182 ] [268])
                    (reg:DI 40 r11 [orig:267 _181 ] [267])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":144 222 {*adddi_1}
     (nil))
(insn 481 480 482 31 (parallel [
            (set (reg:DI 40 r11 [orig:270 _184 ] [270])
                (plus:DI (reg:DI 39 r10 [orig:269 _183 ] [269])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":144 222 {*adddi_1}
     (nil))
(insn 482 481 483 31 (set (reg/f:DI 39 r10 [625])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":144 85 {*movdi_internal}
     (nil))
(insn 483 482 484 31 (parallel [
            (set (reg:DI 40 r11 [626])
                (plus:DI (reg:DI 40 r11 [orig:270 _184 ] [270])
                    (const_int 48088893 [0x2ddc73d])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":144 222 {*adddi_1}
     (nil))
(insn 484 483 485 31 (set (reg:SI 39 r10 [627])
        (mem:SI (plus:DI (mult:DI (reg:DI 40 r11 [626])
                    (const_int 4 [0x4]))
                (reg/f:DI 39 r10 [625])) [1 llgrds.jegrdk S4 A32])) "CETLIH4.f":144 86 {*movsi_internal}
     (nil))
(insn 485 484 486 31 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 jp+0 S4 A32])
        (reg:SI 39 r10 [627])) "CETLIH4.f":144 86 {*movsi_internal}
     (nil))
(insn 486 485 487 31 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [1 jp+0 S4 A32])
            (const_int 0 [0]))) "CETLIH4.f":145 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 487 486 488 31 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 621)
            (pc))) "CETLIH4.f":145 682 {*jcc}
     (nil)
 -> 621)
;;  succ:       34
;;              32 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474 476

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474 476
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 289 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313 314 315 478 479 480 481 628 629 630 631 632 633 636 637 638 641 642 643 644 645 646 647 648 649 650 651 652 653 654 655 656 657 658 659 660 661 662 663 664
(note 488 487 489 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 489 488 490 32 (set (reg:SI 39 r10 [628])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":146 86 {*movsi_internal}
     (nil))
(insn 490 489 491 32 (set (reg:DI 39 r10 [orig:271 _185 ] [271])
        (sign_extend:DI (reg:SI 39 r10 [628]))) "CETLIH4.f":146 149 {*extendsidi2_rex64}
     (nil))
(insn 491 490 492 32 (parallel [
            (set (reg:DI 40 r11 [orig:272 _186 ] [272])
                (mult:DI (reg:DI 39 r10 [orig:271 _185 ] [271])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":146 349 {*muldi3_1}
     (nil))
(insn 492 491 493 32 (set (reg:SI 39 r10 [629])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":146 86 {*movsi_internal}
     (nil))
(insn 493 492 494 32 (set (reg:DI 39 r10 [orig:273 _187 ] [273])
        (sign_extend:DI (reg:SI 39 r10 [629]))) "CETLIH4.f":146 149 {*extendsidi2_rex64}
     (nil))
(insn 494 493 495 32 (parallel [
            (set (reg:DI 39 r10 [orig:274 _188 ] [274])
                (plus:DI (reg:DI 39 r10 [orig:273 _187 ] [273])
                    (reg:DI 40 r11 [orig:272 _186 ] [272])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":146 222 {*adddi_1}
     (nil))
(insn 495 494 496 32 (parallel [
            (set (reg:DI 40 r11 [orig:275 _189 ] [275])
                (plus:DI (reg:DI 39 r10 [orig:274 _188 ] [274])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":146 222 {*adddi_1}
     (nil))
(insn 496 495 497 32 (set (reg/f:DI 39 r10 [630])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":146 85 {*movdi_internal}
     (nil))
(insn 497 496 498 32 (parallel [
            (set (reg:DI 40 r11 [631])
                (plus:DI (reg:DI 40 r11 [orig:275 _189 ] [275])
                    (const_int 48059262 [0x2dd537e])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":146 222 {*adddi_1}
     (nil))
(insn 498 497 499 32 (set (reg:SI 39 r10 [632])
        (mem:SI (plus:DI (mult:DI (reg:DI 40 r11 [631])
                    (const_int 4 [0x4]))
                (reg/f:DI 39 r10 [630])) [1 llgrds.iegrdk S4 A32])) "CETLIH4.f":146 86 {*movsi_internal}
     (nil))
(insn 499 498 500 32 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [1 ip+0 S4 A32])
        (reg:SI 39 r10 [632])) "CETLIH4.f":146 86 {*movsi_internal}
     (nil))
(insn 500 499 501 32 (set (reg/f:DI 39 r10 [633])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [5 ioffs+0 S8 A64])) "CETLIH4.f":150 85 {*movdi_internal}
     (nil))
(insn 501 500 502 32 (set (reg:SI 39 r10 [orig:276 _190 ] [276])
        (mem:SI (reg/f:DI 39 r10 [633]) [1 *ioffs_454(D)+0 S4 A32])) "CETLIH4.f":150 86 {*movsi_internal}
     (nil))
(insn 502 501 506 32 (parallel [
            (set (reg:SI 40 r11 [orig:277 _191 ] [277])
                (plus:SI (reg:SI 39 r10 [orig:276 _190 ] [276])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":150 221 {*addsi_1}
     (nil))
(insn 506 502 507 32 (set (reg:SI 39 r10 [637])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [1 ip+0 S4 A32])) "CETLIH4.f":150 86 {*movsi_internal}
     (nil))
(insn 507 506 508 32 (parallel [
            (set (reg:SI 39 r10 [636])
                (minus:SI (reg:SI 39 r10 [637])
                    (reg:SI 40 r11 [orig:277 _191 ] [277])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":150 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -92 [0xffffffffffffffa4])) [1 ip+0 S4 A32])
            (reg:SI 40 r11 [orig:277 _191 ] [277]))
        (nil)))
(insn 508 507 509 32 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [1 is+0 S4 A32])
        (reg:SI 39 r10 [636])) "CETLIH4.f":150 86 {*movsi_internal}
     (nil))
(insn 509 508 510 32 (set (reg/f:DI 39 r10 [638])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [5 ioffs+0 S8 A64])) "CETLIH4.f":151 85 {*movdi_internal}
     (nil))
(insn 510 509 511 32 (set (reg:SI 39 r10 [orig:278 _192 ] [278])
        (mem:SI (reg/f:DI 39 r10 [638]) [1 *ioffs_454(D)+0 S4 A32])) "CETLIH4.f":151 86 {*movsi_internal}
     (nil))
(insn 511 510 515 32 (parallel [
            (set (reg:SI 40 r11 [orig:279 _193 ] [279])
                (plus:SI (reg:SI 39 r10 [orig:278 _192 ] [278])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":151 221 {*addsi_1}
     (nil))
(insn 515 511 516 32 (set (reg:SI 39 r10 [642])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 jp+0 S4 A32])) "CETLIH4.f":151 86 {*movsi_internal}
     (nil))
(insn 516 515 517 32 (parallel [
            (set (reg:SI 39 r10 [641])
                (minus:SI (reg:SI 39 r10 [642])
                    (reg:SI 40 r11 [orig:279 _193 ] [279])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":151 277 {*subsi_1}
     (expr_list:REG_EQUAL (minus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -60 [0xffffffffffffffc4])) [1 jp+0 S4 A32])
            (reg:SI 40 r11 [orig:279 _193 ] [279]))
        (nil)))
(insn 517 516 518 32 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 js+0 S4 A32])
        (reg:SI 39 r10 [641])) "CETLIH4.f":151 86 {*movsi_internal}
     (nil))
(insn 518 517 519 32 (set (reg:SI 40 r11 [643])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 js+0 S4 A32])) "CETLIH4.f":157 86 {*movsi_internal}
     (nil))
(insn 519 518 520 32 (set (reg:SI 39 r10 [644])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])) "CETLIH4.f":157 86 {*movsi_internal}
     (nil))
(insn 520 519 521 32 (parallel [
            (set (reg:SI 39 r10 [orig:280 _194 ] [280])
                (plus:SI (reg:SI 39 r10 [644])
                    (reg:SI 40 r11 [643])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -100 [0xffffffffffffff9c])) [1 js+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [1 jj+0 S4 A32]))
        (nil)))
(insn 521 520 522 32 (set (reg:DI 39 r10 [orig:281 _195 ] [281])
        (sign_extend:DI (reg:SI 39 r10 [orig:280 _194 ] [280]))) "CETLIH4.f":157 149 {*extendsidi2_rex64}
     (nil))
(insn 522 521 523 32 (parallel [
            (set (reg:DI 40 r11 [orig:282 _196 ] [282])
                (mult:DI (reg:DI 39 r10 [orig:281 _195 ] [281])
                    (const_int 4000 [0xfa0])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 349 {*muldi3_1}
     (nil))
(insn 523 522 524 32 (set (reg:SI 3 bx [645])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [1 is+0 S4 A32])) "CETLIH4.f":157 86 {*movsi_internal}
     (nil))
(insn 524 523 525 32 (set (reg:SI 39 r10 [646])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])) "CETLIH4.f":157 86 {*movsi_internal}
     (nil))
(insn 525 524 526 32 (parallel [
            (set (reg:SI 39 r10 [orig:283 _197 ] [283])
                (plus:SI (reg:SI 39 r10 [646])
                    (reg:SI 3 bx [645])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [1 is+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 ii+0 S4 A32]))
        (nil)))
(insn 526 525 527 32 (set (reg:DI 39 r10 [orig:284 _198 ] [284])
        (sign_extend:DI (reg:SI 39 r10 [orig:283 _197 ] [283]))) "CETLIH4.f":157 149 {*extendsidi2_rex64}
     (nil))
(insn 527 526 528 32 (parallel [
            (set (reg:DI 39 r10 [orig:285 _199 ] [285])
                (plus:DI (reg:DI 39 r10 [orig:284 _198 ] [284])
                    (reg:DI 40 r11 [orig:282 _196 ] [282])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 222 {*adddi_1}
     (nil))
(insn 528 527 529 32 (parallel [
            (set (reg:DI 40 r11 [orig:286 _200 ] [286])
                (plus:DI (reg:DI 39 r10 [orig:285 _199 ] [285])
                    (const_int -4001 [0xfffffffffffff05f])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 222 {*adddi_1}
     (nil))
(insn 529 528 530 32 (set (reg/f:DI 39 r10 [647])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":157 85 {*movdi_internal}
     (nil))
(insn 530 529 531 32 (parallel [
            (set (reg:DI 40 r11 [648])
                (plus:DI (reg:DI 40 r11 [orig:286 _200 ] [286])
                    (const_int 36000000 [0x2255100])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 222 {*adddi_1}
     (nil))
(insn 531 530 532 32 (set (reg:SF 21 xmm0 [orig:287 _201 ] [287])
        (mem:SF (plus:DI (mult:DI (reg:DI 40 r11 [648])
                    (const_int 4 [0x4]))
                (reg/f:DI 39 r10 [647])) [3 llgrds.gdtlon S4 A32])) "CETLIH4.f":157 131 {*movsf_internal}
     (nil))
(insn 532 531 533 32 (set (reg:SI 39 r10 [649])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":157 86 {*movsi_internal}
     (nil))
(insn 533 532 534 32 (set (reg:DI 39 r10 [orig:288 _202 ] [288])
        (sign_extend:DI (reg:SI 39 r10 [649]))) "CETLIH4.f":157 149 {*extendsidi2_rex64}
     (nil))
(insn 534 533 535 32 (parallel [
            (set (reg:DI 40 r11 [orig:289 _203 ] [289])
                (mult:DI (reg:DI 39 r10 [orig:288 _202 ] [288])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 349 {*muldi3_1}
     (nil))
(insn 535 534 536 32 (set (reg:SI 39 r10 [650])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":157 86 {*movsi_internal}
     (nil))
(insn 536 535 537 32 (set (reg:DI 39 r10 [orig:290 _204 ] [290])
        (sign_extend:DI (reg:SI 39 r10 [650]))) "CETLIH4.f":157 149 {*extendsidi2_rex64}
     (nil))
(insn 537 536 538 32 (parallel [
            (set (reg:DI 39 r10 [orig:291 _205 ] [291])
                (plus:DI (reg:DI 39 r10 [orig:290 _204 ] [290])
                    (reg:DI 40 r11 [orig:289 _203 ] [289])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 222 {*adddi_1}
     (nil))
(insn 538 537 539 32 (parallel [
            (set (reg:DI 40 r11 [orig:292 _206 ] [292])
                (plus:DI (reg:DI 39 r10 [orig:291 _205 ] [291])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 222 {*adddi_1}
     (nil))
(insn 539 538 540 32 (set (reg/f:DI 39 r10 [651])
        (symbol_ref:DI ("sblon.3895") [flags 0x202]  <var_decl 0x7f6500cb8c60 sblon>)) "CETLIH4.f":157 85 {*movdi_internal}
     (nil))
(insn 540 539 541 32 (set (reg:SF 22 xmm1 [orig:293 _207 ] [293])
        (mem:SF (plus:DI (mult:DI (reg:DI 40 r11 [orig:292 _206 ] [292])
                    (const_int 4 [0x4]))
                (reg/f:DI 39 r10 [651])) [3 sblon S4 A32])) "CETLIH4.f":157 131 {*movsf_internal}
     (nil))
(insn 541 540 986 32 (set (reg:SF 21 xmm0 [orig:294 _208 ] [294])
        (minus:SF (reg:SF 21 xmm0 [orig:287 _201 ] [287])
            (reg:SF 22 xmm1 [orig:293 _207 ] [293]))) "CETLIH4.f":157 841 {*fop_sf_1}
     (nil))
(insn 986 541 543 32 (set (reg:SF 22 xmm1 [orig:478 _468 ] [478])
        (reg:SF 21 xmm0 [orig:478 _468 ] [478])) "CETLIH4.f":157 131 {*movsf_internal}
     (nil))
(insn 543 986 544 32 (set (reg:SF 22 xmm1 [orig:478 _468 ] [478])
        (mult:SF (reg:SF 22 xmm1 [orig:478 _468 ] [478])
            (reg:SF 21 xmm0 [orig:478 _468 ] [478]))) "CETLIH4.f":157 838 {*fop_sf_comm}
     (nil))
(insn 544 543 545 32 (set (reg:SI 40 r11 [652])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 js+0 S4 A32])) "CETLIH4.f":157 86 {*movsi_internal}
     (nil))
(insn 545 544 546 32 (set (reg:SI 39 r10 [653])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])) "CETLIH4.f":157 86 {*movsi_internal}
     (nil))
(insn 546 545 547 32 (parallel [
            (set (reg:SI 39 r10 [orig:295 _209 ] [295])
                (plus:SI (reg:SI 39 r10 [653])
                    (reg:SI 40 r11 [652])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -100 [0xffffffffffffff9c])) [1 js+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [1 jj+0 S4 A32]))
        (nil)))
(insn 547 546 548 32 (set (reg:DI 39 r10 [orig:296 _210 ] [296])
        (sign_extend:DI (reg:SI 39 r10 [orig:295 _209 ] [295]))) "CETLIH4.f":157 149 {*extendsidi2_rex64}
     (nil))
(insn 548 547 549 32 (parallel [
            (set (reg:DI 40 r11 [orig:297 _211 ] [297])
                (mult:DI (reg:DI 39 r10 [orig:296 _210 ] [296])
                    (const_int 4000 [0xfa0])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 349 {*muldi3_1}
     (nil))
(insn 549 548 550 32 (set (reg:SI 3 bx [654])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [1 is+0 S4 A32])) "CETLIH4.f":157 86 {*movsi_internal}
     (nil))
(insn 550 549 551 32 (set (reg:SI 39 r10 [655])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])) "CETLIH4.f":157 86 {*movsi_internal}
     (nil))
(insn 551 550 552 32 (parallel [
            (set (reg:SI 39 r10 [orig:298 _212 ] [298])
                (plus:SI (reg:SI 39 r10 [655])
                    (reg:SI 3 bx [654])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [1 is+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 ii+0 S4 A32]))
        (nil)))
(insn 552 551 553 32 (set (reg:DI 39 r10 [orig:299 _213 ] [299])
        (sign_extend:DI (reg:SI 39 r10 [orig:298 _212 ] [298]))) "CETLIH4.f":157 149 {*extendsidi2_rex64}
     (nil))
(insn 553 552 554 32 (parallel [
            (set (reg:DI 39 r10 [orig:300 _214 ] [300])
                (plus:DI (reg:DI 39 r10 [orig:299 _213 ] [299])
                    (reg:DI 40 r11 [orig:297 _211 ] [297])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 222 {*adddi_1}
     (nil))
(insn 554 553 555 32 (parallel [
            (set (reg:DI 40 r11 [orig:301 _215 ] [301])
                (plus:DI (reg:DI 39 r10 [orig:300 _214 ] [300])
                    (const_int -4001 [0xfffffffffffff05f])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 222 {*adddi_1}
     (nil))
(insn 555 554 556 32 (set (reg/f:DI 39 r10 [656])
        (symbol_ref:DI ("llgrds_") [flags 0x202]  <var_decl 0x7f6507d1ad80 llgrds>)) "CETLIH4.f":157 85 {*movdi_internal}
     (nil))
(insn 556 555 557 32 (parallel [
            (set (reg:DI 40 r11 [657])
                (plus:DI (reg:DI 40 r11 [orig:301 _215 ] [301])
                    (const_int 24000000 [0x16e3600])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 222 {*adddi_1}
     (nil))
(insn 557 556 558 32 (set (reg:SF 21 xmm0 [orig:302 _216 ] [302])
        (mem:SF (plus:DI (mult:DI (reg:DI 40 r11 [657])
                    (const_int 4 [0x4]))
                (reg/f:DI 39 r10 [656])) [3 llgrds.gdtlat S4 A32])) "CETLIH4.f":157 131 {*movsf_internal}
     (nil))
(insn 558 557 559 32 (set (reg:SI 39 r10 [658])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":157 86 {*movsi_internal}
     (nil))
(insn 559 558 560 32 (set (reg:DI 39 r10 [orig:303 _217 ] [303])
        (sign_extend:DI (reg:SI 39 r10 [658]))) "CETLIH4.f":157 149 {*extendsidi2_rex64}
     (nil))
(insn 560 559 561 32 (parallel [
            (set (reg:DI 40 r11 [orig:304 _218 ] [304])
                (mult:DI (reg:DI 39 r10 [orig:303 _217 ] [303])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 349 {*muldi3_1}
     (nil))
(insn 561 560 562 32 (set (reg:SI 39 r10 [659])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":157 86 {*movsi_internal}
     (nil))
(insn 562 561 563 32 (set (reg:DI 39 r10 [orig:305 _219 ] [305])
        (sign_extend:DI (reg:SI 39 r10 [659]))) "CETLIH4.f":157 149 {*extendsidi2_rex64}
     (nil))
(insn 563 562 564 32 (parallel [
            (set (reg:DI 39 r10 [orig:306 _220 ] [306])
                (plus:DI (reg:DI 39 r10 [orig:305 _219 ] [305])
                    (reg:DI 40 r11 [orig:304 _218 ] [304])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 222 {*adddi_1}
     (nil))
(insn 564 563 565 32 (parallel [
            (set (reg:DI 40 r11 [orig:307 _221 ] [307])
                (plus:DI (reg:DI 39 r10 [orig:306 _220 ] [306])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":157 222 {*adddi_1}
     (nil))
(insn 565 564 566 32 (set (reg/f:DI 39 r10 [660])
        (symbol_ref:DI ("sblat.3893") [flags 0x202]  <var_decl 0x7f6500cb8bd0 sblat>)) "CETLIH4.f":157 85 {*movdi_internal}
     (nil))
(insn 566 565 567 32 (set (reg:SF 23 xmm2 [orig:308 _222 ] [308])
        (mem:SF (plus:DI (mult:DI (reg:DI 40 r11 [orig:307 _221 ] [307])
                    (const_int 4 [0x4]))
                (reg/f:DI 39 r10 [660])) [3 sblat S4 A32])) "CETLIH4.f":157 131 {*movsf_internal}
     (nil))
(insn 567 566 569 32 (set (reg:SF 21 xmm0 [orig:309 _223 ] [309])
        (minus:SF (reg:SF 21 xmm0 [orig:302 _216 ] [302])
            (reg:SF 23 xmm2 [orig:308 _222 ] [308]))) "CETLIH4.f":157 841 {*fop_sf_1}
     (nil))
(insn 569 567 570 32 (set (reg:SF 21 xmm0 [orig:481 _471 ] [481])
        (mult:SF (reg:SF 21 xmm0 [orig:480 _470 ] [480])
            (reg:SF 21 xmm0 [orig:480 _470 ] [480]))) "CETLIH4.f":157 838 {*fop_sf_comm}
     (nil))
(insn 570 569 571 32 (set (reg:SF 21 xmm0 [661])
        (plus:SF (reg:SF 21 xmm0 [orig:481 _471 ] [481])
            (reg:SF 22 xmm1 [orig:479 _469 ] [479]))) "CETLIH4.f":157 838 {*fop_sf_comm}
     (nil))
(insn 571 570 572 32 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [3 dsq+0 S4 A32])
        (reg:SF 21 xmm0 [661])) "CETLIH4.f":157 131 {*movsf_internal}
     (nil))
(insn 572 571 573 32 (set (reg:SI 39 r10 [662])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":158 86 {*movsi_internal}
     (nil))
(insn 573 572 574 32 (set (reg:DI 39 r10 [orig:310 _224 ] [310])
        (sign_extend:DI (reg:SI 39 r10 [662]))) "CETLIH4.f":158 149 {*extendsidi2_rex64}
     (nil))
(insn 574 573 575 32 (parallel [
            (set (reg:DI 40 r11 [orig:311 _225 ] [311])
                (mult:DI (reg:DI 39 r10 [orig:310 _224 ] [310])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":158 349 {*muldi3_1}
     (nil))
(insn 575 574 576 32 (set (reg:SI 39 r10 [663])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":158 86 {*movsi_internal}
     (nil))
(insn 576 575 577 32 (set (reg:DI 39 r10 [orig:312 _226 ] [312])
        (sign_extend:DI (reg:SI 39 r10 [663]))) "CETLIH4.f":158 149 {*extendsidi2_rex64}
     (nil))
(insn 577 576 578 32 (parallel [
            (set (reg:DI 39 r10 [orig:313 _227 ] [313])
                (plus:DI (reg:DI 39 r10 [orig:312 _226 ] [312])
                    (reg:DI 40 r11 [orig:311 _225 ] [311])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":158 222 {*adddi_1}
     (nil))
(insn 578 577 579 32 (parallel [
            (set (reg:DI 40 r11 [orig:314 _228 ] [314])
                (plus:DI (reg:DI 39 r10 [orig:313 _227 ] [313])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":158 222 {*adddi_1}
     (nil))
(insn 579 578 580 32 (set (reg/f:DI 39 r10 [664])
        (symbol_ref:DI ("dsqmn.3861") [flags 0x202]  <var_decl 0x7f6500cb5c60 dsqmn>)) "CETLIH4.f":158 85 {*movdi_internal}
     (nil))
(insn 580 579 581 32 (set (reg:SF 21 xmm0 [orig:315 _229 ] [315])
        (mem:SF (plus:DI (mult:DI (reg:DI 40 r11 [orig:314 _228 ] [314])
                    (const_int 4 [0x4]))
                (reg/f:DI 39 r10 [664])) [3 dsqmn S4 A32])) "CETLIH4.f":158 131 {*movsf_internal}
     (nil))
(insn 581 580 582 32 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:315 _229 ] [315])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -120 [0xffffffffffffff88])) [3 dsq+0 S4 A32]))) "CETLIH4.f":158 53 {*cmpisf}
     (nil))
(jump_insn 582 581 586 32 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 621)
            (pc))) "CETLIH4.f":158 682 {*jcc}
     (nil)
 -> 621)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474 476

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474 476
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 316 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 665 666 667 668 669 670 671 672 673 674 675 676 677 678
(note 586 582 587 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 587 586 588 33 (set (reg:SI 39 r10 [665])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":159 86 {*movsi_internal}
     (nil))
(insn 588 587 589 33 (set (reg:DI 39 r10 [orig:316 _230 ] [316])
        (sign_extend:DI (reg:SI 39 r10 [665]))) "CETLIH4.f":159 149 {*extendsidi2_rex64}
     (nil))
(insn 589 588 590 33 (parallel [
            (set (reg:DI 40 r11 [orig:317 _231 ] [317])
                (mult:DI (reg:DI 39 r10 [orig:316 _230 ] [316])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":159 349 {*muldi3_1}
     (nil))
(insn 590 589 591 33 (set (reg:SI 39 r10 [666])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":159 86 {*movsi_internal}
     (nil))
(insn 591 590 592 33 (set (reg:DI 39 r10 [orig:318 _232 ] [318])
        (sign_extend:DI (reg:SI 39 r10 [666]))) "CETLIH4.f":159 149 {*extendsidi2_rex64}
     (nil))
(insn 592 591 593 33 (parallel [
            (set (reg:DI 39 r10 [orig:319 _233 ] [319])
                (plus:DI (reg:DI 39 r10 [orig:318 _232 ] [318])
                    (reg:DI 40 r11 [orig:317 _231 ] [317])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":159 222 {*adddi_1}
     (nil))
(insn 593 592 594 33 (parallel [
            (set (reg:DI 40 r11 [orig:320 _234 ] [320])
                (plus:DI (reg:DI 39 r10 [orig:319 _233 ] [319])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":159 222 {*adddi_1}
     (nil))
(insn 594 593 595 33 (set (reg/f:DI 39 r10 [667])
        (symbol_ref:DI ("dsqmn.3861") [flags 0x202]  <var_decl 0x7f6500cb5c60 dsqmn>)) "CETLIH4.f":159 85 {*movdi_internal}
     (nil))
(insn 595 594 596 33 (set (reg:SF 21 xmm0 [668])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [3 dsq+0 S4 A32])) "CETLIH4.f":159 131 {*movsf_internal}
     (nil))
(insn 596 595 597 33 (set (mem:SF (plus:DI (mult:DI (reg:DI 40 r11 [orig:320 _234 ] [320])
                    (const_int 4 [0x4]))
                (reg/f:DI 39 r10 [667])) [3 dsqmn S4 A32])
        (reg:SF 21 xmm0 [668])) "CETLIH4.f":159 131 {*movsf_internal}
     (nil))
(insn 597 596 598 33 (set (reg:SI 39 r10 [669])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":160 86 {*movsi_internal}
     (nil))
(insn 598 597 599 33 (set (reg:DI 39 r10 [orig:321 _235 ] [321])
        (sign_extend:DI (reg:SI 39 r10 [669]))) "CETLIH4.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 599 598 600 33 (parallel [
            (set (reg:DI 40 r11 [orig:322 _236 ] [322])
                (mult:DI (reg:DI 39 r10 [orig:321 _235 ] [321])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":160 349 {*muldi3_1}
     (nil))
(insn 600 599 601 33 (set (reg:SI 39 r10 [670])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":160 86 {*movsi_internal}
     (nil))
(insn 601 600 602 33 (set (reg:DI 39 r10 [orig:323 _237 ] [323])
        (sign_extend:DI (reg:SI 39 r10 [670]))) "CETLIH4.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 602 601 603 33 (parallel [
            (set (reg:DI 39 r10 [orig:324 _238 ] [324])
                (plus:DI (reg:DI 39 r10 [orig:323 _237 ] [323])
                    (reg:DI 40 r11 [orig:322 _236 ] [322])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":160 222 {*adddi_1}
     (nil))
(insn 603 602 604 33 (parallel [
            (set (reg:DI 40 r11 [orig:325 _239 ] [325])
                (plus:DI (reg:DI 39 r10 [orig:324 _238 ] [324])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":160 222 {*adddi_1}
     (nil))
(insn 604 603 605 33 (set (reg:SI 3 bx [671])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [1 is+0 S4 A32])) "CETLIH4.f":160 86 {*movsi_internal}
     (nil))
(insn 605 604 606 33 (set (reg:SI 39 r10 [672])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])) "CETLIH4.f":160 86 {*movsi_internal}
     (nil))
(insn 606 605 607 33 (parallel [
            (set (reg:SI 3 bx [orig:326 _240 ] [326])
                (plus:SI (reg:SI 3 bx [671])
                    (reg:SI 39 r10 [672])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":160 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -96 [0xffffffffffffffa0])) [1 is+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 ii+0 S4 A32]))
        (nil)))
(insn 607 606 608 33 (set (reg/f:DI 39 r10 [673])
        (symbol_ref:DI ("iisb.3874") [flags 0x202]  <var_decl 0x7f6500cb82d0 iisb>)) "CETLIH4.f":160 85 {*movdi_internal}
     (nil))
(insn 608 607 609 33 (set (mem:SI (plus:DI (mult:DI (reg:DI 40 r11 [orig:325 _239 ] [325])
                    (const_int 4 [0x4]))
                (reg/f:DI 39 r10 [673])) [1 iisb S4 A32])
        (reg:SI 3 bx [orig:326 _240 ] [326])) "CETLIH4.f":160 86 {*movsi_internal}
     (nil))
(insn 609 608 610 33 (set (reg:SI 39 r10 [674])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":161 86 {*movsi_internal}
     (nil))
(insn 610 609 611 33 (set (reg:DI 39 r10 [orig:327 _241 ] [327])
        (sign_extend:DI (reg:SI 39 r10 [674]))) "CETLIH4.f":161 149 {*extendsidi2_rex64}
     (nil))
(insn 611 610 612 33 (parallel [
            (set (reg:DI 40 r11 [orig:328 _242 ] [328])
                (mult:DI (reg:DI 39 r10 [orig:327 _241 ] [327])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":161 349 {*muldi3_1}
     (nil))
(insn 612 611 613 33 (set (reg:SI 39 r10 [675])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":161 86 {*movsi_internal}
     (nil))
(insn 613 612 614 33 (set (reg:DI 39 r10 [orig:329 _243 ] [329])
        (sign_extend:DI (reg:SI 39 r10 [675]))) "CETLIH4.f":161 149 {*extendsidi2_rex64}
     (nil))
(insn 614 613 615 33 (parallel [
            (set (reg:DI 39 r10 [orig:330 _244 ] [330])
                (plus:DI (reg:DI 39 r10 [orig:329 _243 ] [329])
                    (reg:DI 40 r11 [orig:328 _242 ] [328])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":161 222 {*adddi_1}
     (nil))
(insn 615 614 616 33 (parallel [
            (set (reg:DI 40 r11 [orig:331 _245 ] [331])
                (plus:DI (reg:DI 39 r10 [orig:330 _244 ] [330])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":161 222 {*adddi_1}
     (nil))
(insn 616 615 617 33 (set (reg:SI 3 bx [676])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 js+0 S4 A32])) "CETLIH4.f":161 86 {*movsi_internal}
     (nil))
(insn 617 616 618 33 (set (reg:SI 39 r10 [677])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])) "CETLIH4.f":161 86 {*movsi_internal}
     (nil))
(insn 618 617 619 33 (parallel [
            (set (reg:SI 3 bx [orig:332 _246 ] [332])
                (plus:SI (reg:SI 3 bx [676])
                    (reg:SI 39 r10 [677])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":161 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -100 [0xffffffffffffff9c])) [1 js+0 S4 A32])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -24 [0xffffffffffffffe8])) [1 jj+0 S4 A32]))
        (nil)))
(insn 619 618 620 33 (set (reg/f:DI 39 r10 [678])
        (symbol_ref:DI ("jjsb.3883") [flags 0x202]  <var_decl 0x7f6500cb8750 jjsb>)) "CETLIH4.f":161 85 {*movdi_internal}
     (nil))
(insn 620 619 621 33 (set (mem:SI (plus:DI (mult:DI (reg:DI 40 r11 [orig:331 _245 ] [331])
                    (const_int 4 [0x4]))
                (reg/f:DI 39 r10 [678])) [1 jjsb S4 A32])
        (reg:SI 3 bx [orig:332 _246 ] [332])) "CETLIH4.f":161 86 {*movsi_internal}
     (nil))
;;  succ:       34 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474 476

;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 62, flags: (RTL, MODIFIED)
;;  pred:       31
;;              33 (FALLTHRU)
;;              32
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474 476
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 621 620 622 34 19 (nil) [2 uses])
(note 622 621 623 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 623 622 906 34 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":143 221 {*addsi_1}
     (nil))
(jump_insn 906 623 907 34 (set (pc)
        (label_ref 624)) "CETLIH4.f":143 683 {jump}
     (nil)
 -> 624)
;;  succ:       30 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474 476

(barrier 907 906 950)
;; basic block 62, loop depth 0, maybe hot
;;  prev block 34, next block 35, flags: (RTL, MODIFIED)
;;  pred:       30
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 950 907 949 62 45 (nil) [1 uses])
(note 949 950 951 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 951 949 627 62 (const_int 0 [0]) "CETLIH4.f":158 718 {nop}
     (nil))
;;  succ:       35 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474

;; basic block 35, loop depth 0, maybe hot
;;  prev block 62, next block 61, flags: (RTL, MODIFIED)
;;  pred:       62 [always]  (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 627 951 628 35 18 (nil) [0 uses])
(note 628 627 629 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 629 628 908 35 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":141 221 {*addsi_1}
     (nil))
(jump_insn 908 629 909 35 (set (pc)
        (label_ref 630)) "CETLIH4.f":141 683 {jump}
     (nil)
 -> 630)
;;  succ:       28 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472 474

(barrier 909 908 947)
;; basic block 61, loop depth 0, maybe hot
;;  prev block 35, next block 36, flags: (RTL, MODIFIED)
;;  pred:       28
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 947 909 946 61 44 (nil) [1 uses])
(note 946 947 948 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 948 946 633 61 (const_int 0 [0]) "CETLIH4.f":143 718 {nop}
     (nil))
;;  succ:       36 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472

;; basic block 36, loop depth 0, maybe hot
;;  prev block 61, next block 60, flags: (RTL, MODIFIED)
;;  pred:       61 [always]  (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 633 948 634 36 17 (nil) [0 uses])
(note 634 633 635 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 635 634 910 36 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":140 221 {*addsi_1}
     (nil))
(jump_insn 910 635 911 36 (set (pc)
        (label_ref 636)) "CETLIH4.f":140 683 {jump}
     (nil)
 -> 636)
;;  succ:       26 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 472

(barrier 911 910 944)
;; basic block 60, loop depth 0, maybe hot
;;  prev block 36, next block 37, flags: (RTL, MODIFIED)
;;  pred:       26
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 944 911 943 60 43 (nil) [1 uses])
(note 943 944 945 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 945 943 639 60 (const_int 0 [0]) "CETLIH4.f":141 718 {nop}
     (nil))
;;  succ:       37 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468

;; basic block 37, loop depth 0, maybe hot
;;  prev block 60, next block 38, flags: (RTL, MODIFIED)
;;  pred:       60 [always]  (FALLTHRU)
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 482
(code_label 639 945 640 37 16 (nil) [0 uses])
(note 640 639 641 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 641 640 642 37 (set (reg:SI 5 di [orig:482 _479 ] [482])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 iend+0 S4 A32])) "CETLIH4.f":171 86 {*movsi_internal}
     (nil))
(insn 642 641 776 37 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CETLIH4.f":171 86 {*movsi_internal}
     (nil))
;;  succ:       38 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 482

;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;;              41 [always] 
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 482
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 482
;; lr  def 	 17 [flags] 483 679
(code_label 776 642 643 38 26 (nil) [1 uses])
(note 643 776 644 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 644 643 645 38 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (reg:SI 5 di [orig:482 _479 ] [482]))) "CETLIH4.f":171 11 {*cmpsi_1}
     (nil))
(insn 645 644 646 38 (set (reg:QI 37 r8 [679])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CETLIH4.f":171 678 {*setcc_qi}
     (nil))
(insn 646 645 647 38 (set (reg:SI 37 r8 [orig:483 _481 ] [483])
        (zero_extend:SI (reg:QI 37 r8 [679]))) "CETLIH4.f":171 140 {*zero_extendqisi2}
     (nil))
(insn 647 646 648 38 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 37 r8 [orig:483 _481 ] [483])
            (const_int 0 [0]))) "CETLIH4.f":171 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 648 647 649 38 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 953)
            (pc))) "CETLIH4.f":171 682 {*jcc}
     (nil)
 -> 953)
;;  succ:       63
;;              39 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 482

;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 482
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 333 334 335 336 337 338 680 681 682
(note 649 648 650 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 650 649 651 39 (set (reg:SI 37 r8 [680])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":172 86 {*movsi_internal}
     (nil))
(insn 651 650 652 39 (set (reg:DI 37 r8 [orig:333 _247 ] [333])
        (sign_extend:DI (reg:SI 37 r8 [680]))) "CETLIH4.f":172 149 {*extendsidi2_rex64}
     (nil))
(insn 652 651 653 39 (parallel [
            (set (reg:DI 38 r9 [orig:334 _248 ] [334])
                (mult:DI (reg:DI 37 r8 [orig:333 _247 ] [333])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":172 349 {*muldi3_1}
     (nil))
(insn 653 652 654 39 (set (reg:SI 37 r8 [681])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":172 86 {*movsi_internal}
     (nil))
(insn 654 653 655 39 (set (reg:DI 37 r8 [orig:335 _249 ] [335])
        (sign_extend:DI (reg:SI 37 r8 [681]))) "CETLIH4.f":172 149 {*extendsidi2_rex64}
     (nil))
(insn 655 654 656 39 (parallel [
            (set (reg:DI 37 r8 [orig:336 _250 ] [336])
                (plus:DI (reg:DI 37 r8 [orig:335 _249 ] [335])
                    (reg:DI 38 r9 [orig:334 _248 ] [334])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":172 222 {*adddi_1}
     (nil))
(insn 656 655 657 39 (parallel [
            (set (reg:DI 38 r9 [orig:337 _251 ] [337])
                (plus:DI (reg:DI 37 r8 [orig:336 _250 ] [336])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":172 222 {*adddi_1}
     (nil))
(insn 657 656 658 39 (set (reg/f:DI 37 r8 [682])
        (symbol_ref:DI ("iisb.3874") [flags 0x202]  <var_decl 0x7f6500cb82d0 iisb>)) "CETLIH4.f":172 85 {*movdi_internal}
     (nil))
(insn 658 657 659 39 (set (reg:SI 37 r8 [orig:338 _252 ] [338])
        (mem:SI (plus:DI (mult:DI (reg:DI 38 r9 [orig:337 _251 ] [337])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [682])) [1 iisb S4 A32])) "CETLIH4.f":172 86 {*movsi_internal}
     (nil))
(insn 659 658 660 39 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 37 r8 [orig:338 _252 ] [338])
            (const_int 0 [0]))) "CETLIH4.f":172 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 660 659 661 39 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 773)
            (pc))) "CETLIH4.f":172 682 {*jcc}
     (nil)
 -> 773)
;;  succ:       40 (FALLTHRU)
;;              41
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 482

;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 41, flags: (RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 482
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458
;; lr  def 	 17 [flags] 339 340 341 342 343 344 345 346 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 403 404 405 406 407 408 409 410 411 412 413 414 415 416 683 684 685 686 687 688 689 690 691 692 693 694 695 696 697 698 699 700 701 702 703 704 705 706 707 708 709 710 711 712 713
(note 661 660 662 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 662 661 663 40 (set (reg:SI 37 r8 [683])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":177 86 {*movsi_internal}
     (nil))
(insn 663 662 664 40 (set (reg:DI 37 r8 [orig:339 _253 ] [339])
        (sign_extend:DI (reg:SI 37 r8 [683]))) "CETLIH4.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 664 663 665 40 (parallel [
            (set (reg:DI 38 r9 [orig:340 _254 ] [340])
                (mult:DI (reg:DI 37 r8 [orig:339 _253 ] [339])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 349 {*muldi3_1}
     (nil))
(insn 665 664 666 40 (set (reg:SI 37 r8 [684])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":177 86 {*movsi_internal}
     (nil))
(insn 666 665 667 40 (set (reg:DI 37 r8 [orig:341 _255 ] [341])
        (sign_extend:DI (reg:SI 37 r8 [684]))) "CETLIH4.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 667 666 668 40 (parallel [
            (set (reg:DI 37 r8 [orig:342 _256 ] [342])
                (plus:DI (reg:DI 37 r8 [orig:341 _255 ] [341])
                    (reg:DI 38 r9 [orig:340 _254 ] [340])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 222 {*adddi_1}
     (nil))
(insn 668 667 669 40 (parallel [
            (set (reg:DI 38 r9 [orig:343 _257 ] [343])
                (plus:DI (reg:DI 37 r8 [orig:342 _256 ] [342])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 222 {*adddi_1}
     (nil))
(insn 669 668 670 40 (set (reg/f:DI 37 r8 [685])
        (symbol_ref:DI ("jjsb.3883") [flags 0x202]  <var_decl 0x7f6500cb8750 jjsb>)) "CETLIH4.f":177 85 {*movdi_internal}
     (nil))
(insn 670 669 671 40 (set (reg:SI 37 r8 [orig:344 _258 ] [344])
        (mem:SI (plus:DI (mult:DI (reg:DI 38 r9 [orig:343 _257 ] [343])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [685])) [1 jjsb S4 A32])) "CETLIH4.f":177 86 {*movsi_internal}
     (nil))
(insn 671 670 672 40 (set (reg:DI 37 r8 [orig:345 _259 ] [345])
        (sign_extend:DI (reg:SI 37 r8 [orig:344 _258 ] [344]))) "CETLIH4.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 672 671 673 40 (parallel [
            (set (reg:DI 37 r8 [orig:346 _260 ] [346])
                (mult:DI (reg:DI 37 r8 [orig:345 _259 ] [345])
                    (reg:DI 0 ax [orig:452 stride.2_397 ] [452])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 349 {*muldi3_1}
     (nil))
(insn 673 672 674 40 (parallel [
            (set (reg:DI 39 r10 [orig:347 _261 ] [347])
                (plus:DI (reg:DI 1 dx [orig:458 offset.3_405 ] [458])
                    (reg:DI 37 r8 [orig:346 _260 ] [346])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 222 {*adddi_1}
     (nil))
(insn 674 673 675 40 (set (reg:SI 37 r8 [686])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":177 86 {*movsi_internal}
     (nil))
(insn 675 674 676 40 (set (reg:DI 37 r8 [orig:348 _262 ] [348])
        (sign_extend:DI (reg:SI 37 r8 [686]))) "CETLIH4.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 676 675 677 40 (parallel [
            (set (reg:DI 38 r9 [orig:349 _263 ] [349])
                (mult:DI (reg:DI 37 r8 [orig:348 _262 ] [348])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 349 {*muldi3_1}
     (nil))
(insn 677 676 678 40 (set (reg:SI 37 r8 [687])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":177 86 {*movsi_internal}
     (nil))
(insn 678 677 679 40 (set (reg:DI 37 r8 [orig:350 _264 ] [350])
        (sign_extend:DI (reg:SI 37 r8 [687]))) "CETLIH4.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 679 678 680 40 (parallel [
            (set (reg:DI 37 r8 [orig:351 _265 ] [351])
                (plus:DI (reg:DI 37 r8 [orig:350 _264 ] [350])
                    (reg:DI 38 r9 [orig:349 _263 ] [349])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 222 {*adddi_1}
     (nil))
(insn 680 679 681 40 (parallel [
            (set (reg:DI 38 r9 [orig:352 _266 ] [352])
                (plus:DI (reg:DI 37 r8 [orig:351 _265 ] [351])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 222 {*adddi_1}
     (nil))
(insn 681 680 682 40 (set (reg/f:DI 37 r8 [688])
        (symbol_ref:DI ("iisb.3874") [flags 0x202]  <var_decl 0x7f6500cb82d0 iisb>)) "CETLIH4.f":177 85 {*movdi_internal}
     (nil))
(insn 682 681 683 40 (set (reg:SI 37 r8 [orig:353 _267 ] [353])
        (mem:SI (plus:DI (mult:DI (reg:DI 38 r9 [orig:352 _266 ] [352])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [688])) [1 iisb S4 A32])) "CETLIH4.f":177 86 {*movsi_internal}
     (nil))
(insn 683 682 684 40 (set (reg:DI 37 r8 [orig:354 _268 ] [354])
        (sign_extend:DI (reg:SI 37 r8 [orig:353 _267 ] [353]))) "CETLIH4.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 684 683 685 40 (parallel [
            (set (reg:DI 38 r9 [orig:355 _269 ] [355])
                (plus:DI (reg:DI 39 r10 [orig:347 _261 ] [347])
                    (reg:DI 37 r8 [orig:354 _268 ] [354])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 222 {*adddi_1}
     (nil))
(insn 685 684 686 40 (set (reg/f:DI 37 r8 [689])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [4 hx+0 S8 A64])) "CETLIH4.f":177 85 {*movdi_internal}
     (nil))
(insn 686 685 687 40 (set (reg:SF 22 xmm1 [orig:356 _270 ] [356])
        (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [orig:355 _269 ] [355])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [689])) [3 *hx_412(D) S4 A32])) "CETLIH4.f":177 131 {*movsf_internal}
     (nil))
(insn 687 686 688 40 (set (reg:SI 37 r8 [690])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":177 86 {*movsi_internal}
     (nil))
(insn 688 687 689 40 (set (reg:DI 37 r8 [orig:357 _271 ] [357])
        (sign_extend:DI (reg:SI 37 r8 [690]))) "CETLIH4.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 689 688 690 40 (parallel [
            (set (reg:DI 38 r9 [orig:358 _272 ] [358])
                (mult:DI (reg:DI 37 r8 [orig:357 _271 ] [357])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 349 {*muldi3_1}
     (nil))
(insn 690 689 691 40 (set (reg:SI 37 r8 [691])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":177 86 {*movsi_internal}
     (nil))
(insn 691 690 692 40 (set (reg:DI 37 r8 [orig:359 _273 ] [359])
        (sign_extend:DI (reg:SI 37 r8 [691]))) "CETLIH4.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 692 691 693 40 (parallel [
            (set (reg:DI 37 r8 [orig:360 _274 ] [360])
                (plus:DI (reg:DI 37 r8 [orig:359 _273 ] [359])
                    (reg:DI 38 r9 [orig:358 _272 ] [358])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 222 {*adddi_1}
     (nil))
(insn 693 692 694 40 (parallel [
            (set (reg:DI 38 r9 [orig:361 _275 ] [361])
                (plus:DI (reg:DI 37 r8 [orig:360 _274 ] [360])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 222 {*adddi_1}
     (nil))
(insn 694 693 695 40 (set (reg/f:DI 37 r8 [692])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [4 he+0 S8 A64])) "CETLIH4.f":177 85 {*movdi_internal}
     (nil))
(insn 695 694 696 40 (set (reg:SF 21 xmm0 [orig:362 _276 ] [362])
        (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [orig:361 _275 ] [361])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [692])) [3 *he_482(D) S4 A32])) "CETLIH4.f":177 131 {*movsf_internal}
     (nil))
(insn 696 695 697 40 (set (reg:SI 37 r8 [693])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":177 86 {*movsi_internal}
     (nil))
(insn 697 696 698 40 (set (reg:DI 37 r8 [orig:363 _277 ] [363])
        (sign_extend:DI (reg:SI 37 r8 [693]))) "CETLIH4.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 698 697 699 40 (parallel [
            (set (reg:DI 38 r9 [orig:364 _278 ] [364])
                (mult:DI (reg:DI 37 r8 [orig:363 _277 ] [363])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 349 {*muldi3_1}
     (nil))
(insn 699 698 700 40 (set (reg:SI 37 r8 [694])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":177 86 {*movsi_internal}
     (nil))
(insn 700 699 701 40 (set (reg:DI 37 r8 [orig:365 _279 ] [365])
        (sign_extend:DI (reg:SI 37 r8 [694]))) "CETLIH4.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 701 700 702 40 (parallel [
            (set (reg:DI 37 r8 [orig:366 _280 ] [366])
                (plus:DI (reg:DI 37 r8 [orig:365 _279 ] [365])
                    (reg:DI 38 r9 [orig:364 _278 ] [364])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 222 {*adddi_1}
     (nil))
(insn 702 701 703 40 (parallel [
            (set (reg:DI 38 r9 [orig:367 _281 ] [367])
                (plus:DI (reg:DI 37 r8 [orig:366 _280 ] [366])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 222 {*adddi_1}
     (nil))
(insn 703 702 704 40 (set (reg/f:DI 37 r8 [695])
        (symbol_ref:DI ("jjsb.3883") [flags 0x202]  <var_decl 0x7f6500cb8750 jjsb>)) "CETLIH4.f":177 85 {*movdi_internal}
     (nil))
(insn 704 703 705 40 (set (reg:SI 37 r8 [orig:368 _282 ] [368])
        (mem:SI (plus:DI (mult:DI (reg:DI 38 r9 [orig:367 _281 ] [367])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [695])) [1 jjsb S4 A32])) "CETLIH4.f":177 86 {*movsi_internal}
     (nil))
(insn 705 704 706 40 (set (reg:DI 37 r8 [orig:369 _283 ] [369])
        (sign_extend:DI (reg:SI 37 r8 [orig:368 _282 ] [368]))) "CETLIH4.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 706 705 707 40 (parallel [
            (set (reg:DI 37 r8 [orig:370 _284 ] [370])
                (mult:DI (reg:DI 37 r8 [orig:369 _283 ] [369])
                    (reg:DI 0 ax [orig:452 stride.2_397 ] [452])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 349 {*muldi3_1}
     (nil))
(insn 707 706 708 40 (parallel [
            (set (reg:DI 39 r10 [orig:371 _285 ] [371])
                (plus:DI (reg:DI 1 dx [orig:458 offset.3_405 ] [458])
                    (reg:DI 37 r8 [orig:370 _284 ] [370])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 222 {*adddi_1}
     (nil))
(insn 708 707 709 40 (set (reg:SI 37 r8 [696])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":177 86 {*movsi_internal}
     (nil))
(insn 709 708 710 40 (set (reg:DI 37 r8 [orig:372 _286 ] [372])
        (sign_extend:DI (reg:SI 37 r8 [696]))) "CETLIH4.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 710 709 711 40 (parallel [
            (set (reg:DI 38 r9 [orig:373 _287 ] [373])
                (mult:DI (reg:DI 37 r8 [orig:372 _286 ] [372])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 349 {*muldi3_1}
     (nil))
(insn 711 710 712 40 (set (reg:SI 37 r8 [697])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":177 86 {*movsi_internal}
     (nil))
(insn 712 711 713 40 (set (reg:DI 37 r8 [orig:374 _288 ] [374])
        (sign_extend:DI (reg:SI 37 r8 [697]))) "CETLIH4.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 713 712 714 40 (parallel [
            (set (reg:DI 37 r8 [orig:375 _289 ] [375])
                (plus:DI (reg:DI 37 r8 [orig:374 _288 ] [374])
                    (reg:DI 38 r9 [orig:373 _287 ] [373])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 222 {*adddi_1}
     (nil))
(insn 714 713 715 40 (parallel [
            (set (reg:DI 38 r9 [orig:376 _290 ] [376])
                (plus:DI (reg:DI 37 r8 [orig:375 _289 ] [375])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 222 {*adddi_1}
     (nil))
(insn 715 714 716 40 (set (reg/f:DI 37 r8 [698])
        (symbol_ref:DI ("iisb.3874") [flags 0x202]  <var_decl 0x7f6500cb82d0 iisb>)) "CETLIH4.f":177 85 {*movdi_internal}
     (nil))
(insn 716 715 717 40 (set (reg:SI 37 r8 [orig:377 _291 ] [377])
        (mem:SI (plus:DI (mult:DI (reg:DI 38 r9 [orig:376 _290 ] [376])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [698])) [1 iisb S4 A32])) "CETLIH4.f":177 86 {*movsi_internal}
     (nil))
(insn 717 716 718 40 (set (reg:DI 37 r8 [orig:378 _292 ] [378])
        (sign_extend:DI (reg:SI 37 r8 [orig:377 _291 ] [377]))) "CETLIH4.f":177 149 {*extendsidi2_rex64}
     (nil))
(insn 718 717 719 40 (parallel [
            (set (reg:DI 38 r9 [orig:379 _293 ] [379])
                (plus:DI (reg:DI 39 r10 [orig:371 _285 ] [371])
                    (reg:DI 37 r8 [orig:378 _292 ] [378])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":177 222 {*adddi_1}
     (nil))
(insn 719 718 720 40 (set (reg:SF 21 xmm0 [orig:380 _294 ] [380])
        (plus:SF (reg:SF 21 xmm0 [orig:362 _276 ] [362])
            (reg:SF 22 xmm1 [orig:356 _270 ] [356]))) "CETLIH4.f":177 838 {*fop_sf_comm}
     (nil))
(insn 720 719 721 40 (set (reg/f:DI 37 r8 [699])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [4 hx+0 S8 A64])) "CETLIH4.f":177 85 {*movdi_internal}
     (nil))
(insn 721 720 722 40 (set (mem:SF (plus:DI (mult:DI (reg:DI 38 r9 [orig:379 _293 ] [379])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [699])) [3 *hx_412(D) S4 A32])
        (reg:SF 21 xmm0 [orig:380 _294 ] [380])) "CETLIH4.f":177 131 {*movsf_internal}
     (nil))
(insn 722 721 723 40 (set (reg:SI 37 r8 [700])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":178 86 {*movsi_internal}
     (nil))
(insn 723 722 724 40 (set (reg:DI 37 r8 [orig:381 _295 ] [381])
        (sign_extend:DI (reg:SI 37 r8 [700]))) "CETLIH4.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 724 723 725 40 (parallel [
            (set (reg:DI 38 r9 [orig:382 _296 ] [382])
                (mult:DI (reg:DI 37 r8 [orig:381 _295 ] [381])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 349 {*muldi3_1}
     (nil))
(insn 725 724 726 40 (set (reg:SI 37 r8 [701])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":178 86 {*movsi_internal}
     (nil))
(insn 726 725 727 40 (set (reg:DI 37 r8 [orig:383 _297 ] [383])
        (sign_extend:DI (reg:SI 37 r8 [701]))) "CETLIH4.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 727 726 728 40 (parallel [
            (set (reg:DI 37 r8 [orig:384 _298 ] [384])
                (plus:DI (reg:DI 37 r8 [orig:383 _297 ] [383])
                    (reg:DI 38 r9 [orig:382 _296 ] [382])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 222 {*adddi_1}
     (nil))
(insn 728 727 729 40 (parallel [
            (set (reg:DI 38 r9 [orig:385 _299 ] [385])
                (plus:DI (reg:DI 37 r8 [orig:384 _298 ] [384])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 222 {*adddi_1}
     (nil))
(insn 729 728 730 40 (set (reg/f:DI 37 r8 [702])
        (symbol_ref:DI ("jjsb.3883") [flags 0x202]  <var_decl 0x7f6500cb8750 jjsb>)) "CETLIH4.f":178 85 {*movdi_internal}
     (nil))
(insn 730 729 731 40 (set (reg:SI 37 r8 [orig:386 _300 ] [386])
        (mem:SI (plus:DI (mult:DI (reg:DI 38 r9 [orig:385 _299 ] [385])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [702])) [1 jjsb S4 A32])) "CETLIH4.f":178 86 {*movsi_internal}
     (nil))
(insn 731 730 732 40 (set (reg:DI 37 r8 [orig:387 _301 ] [387])
        (sign_extend:DI (reg:SI 37 r8 [orig:386 _300 ] [386]))) "CETLIH4.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 732 731 733 40 (parallel [
            (set (reg:DI 38 r9 [orig:388 _302 ] [388])
                (mult:DI (reg:DI 37 r8 [orig:387 _301 ] [387])
                    (const_int 4000 [0xfa0])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 349 {*muldi3_1}
     (nil))
(insn 733 732 734 40 (set (reg:SI 37 r8 [703])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":178 86 {*movsi_internal}
     (nil))
(insn 734 733 735 40 (set (reg:DI 37 r8 [orig:389 _303 ] [389])
        (sign_extend:DI (reg:SI 37 r8 [703]))) "CETLIH4.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 735 734 736 40 (parallel [
            (set (reg:DI 39 r10 [orig:390 _304 ] [390])
                (mult:DI (reg:DI 37 r8 [orig:389 _303 ] [389])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 349 {*muldi3_1}
     (nil))
(insn 736 735 737 40 (set (reg:SI 37 r8 [704])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":178 86 {*movsi_internal}
     (nil))
(insn 737 736 738 40 (set (reg:DI 37 r8 [orig:391 _305 ] [391])
        (sign_extend:DI (reg:SI 37 r8 [704]))) "CETLIH4.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 738 737 739 40 (parallel [
            (set (reg:DI 37 r8 [orig:392 _306 ] [392])
                (plus:DI (reg:DI 37 r8 [orig:391 _305 ] [391])
                    (reg:DI 39 r10 [orig:390 _304 ] [390])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 222 {*adddi_1}
     (nil))
(insn 739 738 740 40 (parallel [
            (set (reg:DI 39 r10 [orig:393 _307 ] [393])
                (plus:DI (reg:DI 37 r8 [orig:392 _306 ] [392])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 222 {*adddi_1}
     (nil))
(insn 740 739 741 40 (set (reg/f:DI 37 r8 [705])
        (symbol_ref:DI ("iisb.3874") [flags 0x202]  <var_decl 0x7f6500cb82d0 iisb>)) "CETLIH4.f":178 85 {*movdi_internal}
     (nil))
(insn 741 740 742 40 (set (reg:SI 37 r8 [orig:394 _308 ] [394])
        (mem:SI (plus:DI (mult:DI (reg:DI 39 r10 [orig:393 _307 ] [393])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [705])) [1 iisb S4 A32])) "CETLIH4.f":178 86 {*movsi_internal}
     (nil))
(insn 742 741 743 40 (set (reg:DI 37 r8 [orig:395 _309 ] [395])
        (sign_extend:DI (reg:SI 37 r8 [orig:394 _308 ] [394]))) "CETLIH4.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 743 742 744 40 (parallel [
            (set (reg:DI 37 r8 [orig:396 _310 ] [396])
                (plus:DI (reg:DI 37 r8 [orig:395 _309 ] [395])
                    (reg:DI 38 r9 [orig:388 _302 ] [388])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 222 {*adddi_1}
     (nil))
(insn 744 743 745 40 (parallel [
            (set (reg:DI 38 r9 [orig:397 _311 ] [397])
                (plus:DI (reg:DI 37 r8 [orig:396 _310 ] [396])
                    (const_int -4001 [0xfffffffffffff05f])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 222 {*adddi_1}
     (nil))
(insn 745 744 746 40 (set (reg/f:DI 37 r8 [706])
        (symbol_ref:DI ("nz.3888") [flags 0x202]  <var_decl 0x7f6500cb8990 nz>)) "CETLIH4.f":178 85 {*movdi_internal}
     (nil))
(insn 746 745 747 40 (set (reg:SI 37 r8 [orig:398 _312 ] [398])
        (mem:SI (plus:DI (mult:DI (reg:DI 38 r9 [orig:397 _311 ] [397])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [706])) [1 nz S4 A32])) "CETLIH4.f":178 86 {*movsi_internal}
     (nil))
(insn 747 746 748 40 (set (reg:SI 38 r9 [707])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":178 86 {*movsi_internal}
     (nil))
(insn 748 747 749 40 (set (reg:DI 38 r9 [orig:399 _313 ] [399])
        (sign_extend:DI (reg:SI 38 r9 [707]))) "CETLIH4.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 749 748 750 40 (parallel [
            (set (reg:DI 39 r10 [orig:400 _314 ] [400])
                (mult:DI (reg:DI 38 r9 [orig:399 _313 ] [399])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 349 {*muldi3_1}
     (nil))
(insn 750 749 751 40 (set (reg:SI 38 r9 [708])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":178 86 {*movsi_internal}
     (nil))
(insn 751 750 752 40 (set (reg:DI 38 r9 [orig:401 _315 ] [401])
        (sign_extend:DI (reg:SI 38 r9 [708]))) "CETLIH4.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 752 751 753 40 (parallel [
            (set (reg:DI 38 r9 [orig:402 _316 ] [402])
                (plus:DI (reg:DI 38 r9 [orig:401 _315 ] [401])
                    (reg:DI 39 r10 [orig:400 _314 ] [400])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 222 {*adddi_1}
     (nil))
(insn 753 752 754 40 (parallel [
            (set (reg:DI 39 r10 [orig:403 _317 ] [403])
                (plus:DI (reg:DI 38 r9 [orig:402 _316 ] [402])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 222 {*adddi_1}
     (nil))
(insn 754 753 755 40 (set (reg/f:DI 38 r9 [709])
        (symbol_ref:DI ("jjsb.3883") [flags 0x202]  <var_decl 0x7f6500cb8750 jjsb>)) "CETLIH4.f":178 85 {*movdi_internal}
     (nil))
(insn 755 754 756 40 (set (reg:SI 38 r9 [orig:404 _318 ] [404])
        (mem:SI (plus:DI (mult:DI (reg:DI 39 r10 [orig:403 _317 ] [403])
                    (const_int 4 [0x4]))
                (reg/f:DI 38 r9 [709])) [1 jjsb S4 A32])) "CETLIH4.f":178 86 {*movsi_internal}
     (nil))
(insn 756 755 757 40 (set (reg:DI 38 r9 [orig:405 _319 ] [405])
        (sign_extend:DI (reg:SI 38 r9 [orig:404 _318 ] [404]))) "CETLIH4.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 757 756 758 40 (parallel [
            (set (reg:DI 39 r10 [orig:406 _320 ] [406])
                (mult:DI (reg:DI 38 r9 [orig:405 _319 ] [405])
                    (const_int 4000 [0xfa0])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 349 {*muldi3_1}
     (nil))
(insn 758 757 759 40 (set (reg:SI 38 r9 [710])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])) "CETLIH4.f":178 86 {*movsi_internal}
     (nil))
(insn 759 758 760 40 (set (reg:DI 38 r9 [orig:407 _321 ] [407])
        (sign_extend:DI (reg:SI 38 r9 [710]))) "CETLIH4.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 760 759 761 40 (parallel [
            (set (reg:DI 40 r11 [orig:408 _322 ] [408])
                (mult:DI (reg:DI 38 r9 [orig:407 _321 ] [407])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 349 {*muldi3_1}
     (nil))
(insn 761 760 762 40 (set (reg:SI 38 r9 [711])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CETLIH4.f":178 86 {*movsi_internal}
     (nil))
(insn 762 761 763 40 (set (reg:DI 38 r9 [orig:409 _323 ] [409])
        (sign_extend:DI (reg:SI 38 r9 [711]))) "CETLIH4.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 763 762 764 40 (parallel [
            (set (reg:DI 38 r9 [orig:410 _324 ] [410])
                (plus:DI (reg:DI 38 r9 [orig:409 _323 ] [409])
                    (reg:DI 40 r11 [orig:408 _322 ] [408])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 222 {*adddi_1}
     (nil))
(insn 764 763 765 40 (parallel [
            (set (reg:DI 40 r11 [orig:411 _325 ] [411])
                (plus:DI (reg:DI 38 r9 [orig:410 _324 ] [410])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 222 {*adddi_1}
     (nil))
(insn 765 764 766 40 (set (reg/f:DI 38 r9 [712])
        (symbol_ref:DI ("iisb.3874") [flags 0x202]  <var_decl 0x7f6500cb82d0 iisb>)) "CETLIH4.f":178 85 {*movdi_internal}
     (nil))
(insn 766 765 767 40 (set (reg:SI 38 r9 [orig:412 _326 ] [412])
        (mem:SI (plus:DI (mult:DI (reg:DI 40 r11 [orig:411 _325 ] [411])
                    (const_int 4 [0x4]))
                (reg/f:DI 38 r9 [712])) [1 iisb S4 A32])) "CETLIH4.f":178 86 {*movsi_internal}
     (nil))
(insn 767 766 768 40 (set (reg:DI 38 r9 [orig:413 _327 ] [413])
        (sign_extend:DI (reg:SI 38 r9 [orig:412 _326 ] [412]))) "CETLIH4.f":178 149 {*extendsidi2_rex64}
     (nil))
(insn 768 767 769 40 (parallel [
            (set (reg:DI 38 r9 [orig:414 _328 ] [414])
                (plus:DI (reg:DI 38 r9 [orig:413 _327 ] [413])
                    (reg:DI 39 r10 [orig:406 _320 ] [406])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 222 {*adddi_1}
     (nil))
(insn 769 768 770 40 (parallel [
            (set (reg:DI 38 r9 [orig:415 _329 ] [415])
                (plus:DI (reg:DI 38 r9 [orig:414 _328 ] [414])
                    (const_int -4001 [0xfffffffffffff05f])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 222 {*adddi_1}
     (nil))
(insn 770 769 771 40 (parallel [
            (set (reg:SI 39 r10 [orig:416 _330 ] [416])
                (plus:SI (reg:SI 37 r8 [orig:398 _312 ] [398])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":178 221 {*addsi_1}
     (nil))
(insn 771 770 772 40 (set (reg/f:DI 37 r8 [713])
        (symbol_ref:DI ("nz.3888") [flags 0x202]  <var_decl 0x7f6500cb8990 nz>)) "CETLIH4.f":178 85 {*movdi_internal}
     (nil))
(insn 772 771 773 40 (set (mem:SI (plus:DI (mult:DI (reg:DI 38 r9 [orig:415 _329 ] [415])
                    (const_int 4 [0x4]))
                (reg/f:DI 37 r8 [713])) [1 nz S4 A32])
        (reg:SI 39 r10 [orig:416 _330 ] [416])) "CETLIH4.f":178 86 {*movsi_internal}
     (nil))
;;  succ:       41 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 482

;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 63, flags: (RTL, MODIFIED)
;;  pred:       39
;;              40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 482
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 773 772 774 41 25 (nil) [1 uses])
(note 774 773 775 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 775 774 912 41 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":171 221 {*addsi_1}
     (nil))
(jump_insn 912 775 913 41 (set (pc)
        (label_ref 776)) "CETLIH4.f":171 683 {jump}
     (nil)
 -> 776)
;;  succ:       38 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468 482

(barrier 913 912 953)
;; basic block 63, loop depth 0, maybe hot
;;  prev block 41, next block 42, flags: (RTL, MODIFIED)
;;  pred:       38
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 953 913 952 63 46 (nil) [1 uses])
(note 952 953 954 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 954 952 779 63 (const_int 0 [0]) "CETLIH4.f":172 718 {nop}
     (nil))
;;  succ:       42 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468

;; basic block 42, loop depth 0, maybe hot
;;  prev block 63, next block 57, flags: (RTL, MODIFIED)
;;  pred:       63 [always]  (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 779 954 780 42 24 (nil) [0 uses])
(note 780 779 781 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 781 780 914 42 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 ib+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 ib+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":102 221 {*addsi_1}
     (nil))
(jump_insn 914 781 915 42 (set (pc)
        (label_ref 782)) "CETLIH4.f":102 683 {jump}
     (nil)
 -> 782)
;;  succ:       19 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466 468

(barrier 915 914 933)
;; basic block 57, loop depth 0, maybe hot
;;  prev block 42, next block 43, flags: (RTL, MODIFIED)
;;  pred:       19
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 933 915 932 57 40 (nil) [1 uses])
(note 932 933 934 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 934 932 785 57 (const_int 0 [0]) "CETLIH4.f":171 718 {nop}
     (nil))
;;  succ:       43 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466

;; basic block 43, loop depth 0, maybe hot
;;  prev block 57, next block 56, flags: (RTL, MODIFIED)
;;  pred:       57 [always]  (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 785 934 786 43 12 (nil) [0 uses])
(note 786 785 787 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 787 786 916 43 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -36 [0xffffffffffffffdc])) [1 jb+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -36 [0xffffffffffffffdc])) [1 jb+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":101 221 {*addsi_1}
     (nil))
(jump_insn 916 787 917 43 (set (pc)
        (label_ref 788)) "CETLIH4.f":101 683 {jump}
     (nil)
 -> 788)
;;  succ:       17 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 466

(barrier 917 916 930)
;; basic block 56, loop depth 0, maybe hot
;;  prev block 43, next block 44, flags: (RTL, MODIFIED)
;;  pred:       17
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 930 917 929 56 39 (nil) [1 uses])
(note 929 930 931 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 931 929 791 56 (const_int 0 [0]) "CETLIH4.f":102 718 {nop}
     (nil))
;;  succ:       44 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458

;; basic block 44, loop depth 0, maybe hot
;;  prev block 56, next block 55, flags: (RTL, MODIFIED)
;;  pred:       56 [always]  (FALLTHRU)
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 791 931 792 44 11 (nil) [0 uses])
(note 792 791 793 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 793 792 918 44 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":94 221 {*addsi_1}
     (nil))
(jump_insn 918 793 919 44 (set (pc)
        (label_ref 794)) "CETLIH4.f":94 683 {jump}
     (nil)
 -> 794)
;;  succ:       15 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458

(barrier 919 918 927)
;; basic block 55, loop depth 0, maybe hot
;;  prev block 44, next block 45, flags: (RTL, MODIFIED)
;;  pred:       15
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 927 919 926 55 38 (nil) [1 uses])
(note 926 927 928 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 928 926 797 55 (const_int 0 [0]) "CETLIH4.f":101 718 {nop}
     (nil))
;;  succ:       45 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458

;; basic block 45, loop depth 0, maybe hot
;;  prev block 55, next block 46, flags: (RTL, MODIFIED)
;;  pred:       55 [always]  (FALLTHRU)
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 484 714
(code_label 797 928 798 45 10 (nil) [0 uses])
(note 798 797 799 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 799 798 800 45 (set (reg/f:DI 2 cx [714])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [5 jmot+0 S8 A64])) "CETLIH4.f":195 85 {*movdi_internal}
     (nil))
(insn 800 799 801 45 (set (reg:SI 2 cx [orig:484 _489 ] [484])
        (mem:SI (reg/f:DI 2 cx [714]) [1 *jmot_398(D)+0 S4 A32])) "CETLIH4.f":195 86 {*movsi_internal}
     (nil))
(insn 801 800 883 45 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])
        (const_int 1 [0x1])) "CETLIH4.f":195 86 {*movsi_internal}
     (nil))
;;  succ:       46 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484

;; basic block 46, loop depth 0, maybe hot
;;  prev block 45, next block 47, flags: (RTL, MODIFIED)
;;  pred:       45 (FALLTHRU)
;;              53 [always] 
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 484
;; lr  def 	 17 [flags] 485 715
(code_label 883 801 802 46 35 (nil) [1 uses])
(note 802 883 803 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 803 802 804 46 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])
            (reg:SI 2 cx [orig:484 _489 ] [484]))) "CETLIH4.f":195 11 {*cmpsi_1}
     (nil))
(insn 804 803 805 46 (set (reg:QI 4 si [715])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CETLIH4.f":195 678 {*setcc_qi}
     (nil))
(insn 805 804 806 46 (set (reg:SI 4 si [orig:485 _491 ] [485])
        (zero_extend:SI (reg:QI 4 si [715]))) "CETLIH4.f":195 140 {*zero_extendqisi2}
     (nil))
(insn 806 805 807 46 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 4 si [orig:485 _491 ] [485])
            (const_int 0 [0]))) "CETLIH4.f":195 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 807 806 808 46 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 956)
            (pc))) "CETLIH4.f":195 682 {*jcc}
     (nil)
 -> 956)
;;  succ:       64
;;              47 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484

;; basic block 47, loop depth 0, maybe hot
;;  prev block 46, next block 48, flags: (RTL, MODIFIED)
;;  pred:       46 (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 486 716
(note 808 807 809 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 809 808 810 47 (set (reg/f:DI 4 si [716])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [5 imot+0 S8 A64])) "CETLIH4.f":196 85 {*movdi_internal}
     (nil))
(insn 810 809 811 47 (set (reg:SI 4 si [orig:486 _492 ] [486])
        (mem:SI (reg/f:DI 4 si [716]) [1 *imot_394(D)+0 S4 A32])) "CETLIH4.f":196 86 {*movsi_internal}
     (nil))
(insn 811 810 877 47 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])
        (const_int 1 [0x1])) "CETLIH4.f":196 86 {*movsi_internal}
     (nil))
;;  succ:       48 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484 486

;; basic block 48, loop depth 0, maybe hot
;;  prev block 47, next block 49, flags: (RTL, MODIFIED)
;;  pred:       47 (FALLTHRU)
;;              52 [always] 
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484 486
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 486
;; lr  def 	 17 [flags] 487 717
(code_label 877 811 812 48 34 (nil) [1 uses])
(note 812 877 813 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 813 812 814 48 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])
            (reg:SI 4 si [orig:486 _492 ] [486]))) "CETLIH4.f":196 11 {*cmpsi_1}
     (nil))
(insn 814 813 815 48 (set (reg:QI 5 di [717])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CETLIH4.f":196 678 {*setcc_qi}
     (nil))
(insn 815 814 816 48 (set (reg:SI 5 di [orig:487 _494 ] [487])
        (zero_extend:SI (reg:QI 5 di [717]))) "CETLIH4.f":196 140 {*zero_extendqisi2}
     (nil))
(insn 816 815 817 48 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 5 di [orig:487 _494 ] [487])
            (const_int 0 [0]))) "CETLIH4.f":196 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 817 816 818 48 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 959)
            (pc))) "CETLIH4.f":196 682 {*jcc}
     (nil)
 -> 959)
;;  succ:       65
;;              49 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484 486

;; basic block 49, loop depth 0, maybe hot
;;  prev block 48, next block 50, flags: (RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484 486
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 417 418 419 420 421 422 718 719 720
(note 818 817 819 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 819 818 820 49 (set (reg:SI 5 di [718])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])) "CETLIH4.f":204 86 {*movsi_internal}
     (nil))
(insn 820 819 821 49 (set (reg:DI 5 di [orig:417 _331 ] [417])
        (sign_extend:DI (reg:SI 5 di [718]))) "CETLIH4.f":204 149 {*extendsidi2_rex64}
     (nil))
(insn 821 820 822 49 (parallel [
            (set (reg:DI 37 r8 [orig:418 _332 ] [418])
                (mult:DI (reg:DI 5 di [orig:417 _331 ] [417])
                    (const_int 4000 [0xfa0])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":204 349 {*muldi3_1}
     (nil))
(insn 822 821 823 49 (set (reg:SI 5 di [719])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])) "CETLIH4.f":204 86 {*movsi_internal}
     (nil))
(insn 823 822 824 49 (set (reg:DI 5 di [orig:419 _333 ] [419])
        (sign_extend:DI (reg:SI 5 di [719]))) "CETLIH4.f":204 149 {*extendsidi2_rex64}
     (nil))
(insn 824 823 825 49 (parallel [
            (set (reg:DI 5 di [orig:420 _334 ] [420])
                (plus:DI (reg:DI 5 di [orig:419 _333 ] [419])
                    (reg:DI 37 r8 [orig:418 _332 ] [418])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":204 222 {*adddi_1}
     (nil))
(insn 825 824 826 49 (parallel [
            (set (reg:DI 37 r8 [orig:421 _335 ] [421])
                (plus:DI (reg:DI 5 di [orig:420 _334 ] [420])
                    (const_int -4001 [0xfffffffffffff05f])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":204 222 {*adddi_1}
     (nil))
(insn 826 825 827 49 (set (reg/f:DI 5 di [720])
        (symbol_ref:DI ("nz.3888") [flags 0x202]  <var_decl 0x7f6500cb8990 nz>)) "CETLIH4.f":204 85 {*movdi_internal}
     (nil))
(insn 827 826 828 49 (set (reg:SI 5 di [orig:422 _336 ] [422])
        (mem:SI (plus:DI (mult:DI (reg:DI 37 r8 [orig:421 _335 ] [421])
                    (const_int 4 [0x4]))
                (reg/f:DI 5 di [720])) [1 nz S4 A32])) "CETLIH4.f":204 86 {*movsi_internal}
     (nil))
(insn 828 827 829 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 5 di [orig:422 _336 ] [422])
            (const_int 0 [0]))) "CETLIH4.f":204 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 829 828 830 49 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 862)
            (pc))) "CETLIH4.f":204 682 {*jcc}
     (nil)
 -> 862)
;;  succ:       50 (FALLTHRU)
;;              51
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484 486

;; basic block 50, loop depth 0, maybe hot
;;  prev block 49, next block 51, flags: (RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484 486
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458
;; lr  def 	 17 [flags] 423 424 425 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 721 722 723 724 725 726 727 728 729
(note 830 829 831 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 831 830 832 50 (set (reg:SI 5 di [721])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])) "CETLIH4.f":205 86 {*movsi_internal}
     (nil))
(insn 832 831 833 50 (set (reg:DI 5 di [orig:423 _337 ] [423])
        (sign_extend:DI (reg:SI 5 di [721]))) "CETLIH4.f":205 149 {*extendsidi2_rex64}
     (nil))
(insn 833 832 834 50 (parallel [
            (set (reg:DI 5 di [orig:424 _338 ] [424])
                (mult:DI (reg:DI 5 di [orig:423 _337 ] [423])
                    (reg:DI 0 ax [orig:452 stride.2_397 ] [452])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":205 349 {*muldi3_1}
     (nil))
(insn 834 833 835 50 (parallel [
            (set (reg:DI 37 r8 [orig:425 _339 ] [425])
                (plus:DI (reg:DI 1 dx [orig:458 offset.3_405 ] [458])
                    (reg:DI 5 di [orig:424 _338 ] [424])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":205 222 {*adddi_1}
     (nil))
(insn 835 834 836 50 (set (reg:SI 5 di [722])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])) "CETLIH4.f":205 86 {*movsi_internal}
     (nil))
(insn 836 835 837 50 (set (reg:DI 5 di [orig:426 _340 ] [426])
        (sign_extend:DI (reg:SI 5 di [722]))) "CETLIH4.f":205 149 {*extendsidi2_rex64}
     (nil))
(insn 837 836 838 50 (parallel [
            (set (reg:DI 37 r8 [orig:427 _341 ] [427])
                (plus:DI (reg:DI 37 r8 [orig:425 _339 ] [425])
                    (reg:DI 5 di [orig:426 _340 ] [426])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":205 222 {*adddi_1}
     (nil))
(insn 838 837 839 50 (set (reg/f:DI 5 di [723])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [4 hx+0 S8 A64])) "CETLIH4.f":205 85 {*movdi_internal}
     (nil))
(insn 839 838 840 50 (set (reg:SF 21 xmm0 [orig:428 _342 ] [428])
        (mem:SF (plus:DI (mult:DI (reg:DI 37 r8 [orig:427 _341 ] [427])
                    (const_int 4 [0x4]))
                (reg/f:DI 5 di [723])) [3 *hx_412(D) S4 A32])) "CETLIH4.f":205 131 {*movsf_internal}
     (nil))
(insn 840 839 841 50 (set (reg:SI 5 di [724])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])) "CETLIH4.f":205 86 {*movsi_internal}
     (nil))
(insn 841 840 842 50 (set (reg:DI 5 di [orig:429 _343 ] [429])
        (sign_extend:DI (reg:SI 5 di [724]))) "CETLIH4.f":205 149 {*extendsidi2_rex64}
     (nil))
(insn 842 841 843 50 (parallel [
            (set (reg:DI 37 r8 [orig:430 _344 ] [430])
                (mult:DI (reg:DI 5 di [orig:429 _343 ] [429])
                    (const_int 4000 [0xfa0])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":205 349 {*muldi3_1}
     (nil))
(insn 843 842 844 50 (set (reg:SI 5 di [725])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])) "CETLIH4.f":205 86 {*movsi_internal}
     (nil))
(insn 844 843 845 50 (set (reg:DI 5 di [orig:431 _345 ] [431])
        (sign_extend:DI (reg:SI 5 di [725]))) "CETLIH4.f":205 149 {*extendsidi2_rex64}
     (nil))
(insn 845 844 846 50 (parallel [
            (set (reg:DI 5 di [orig:432 _346 ] [432])
                (plus:DI (reg:DI 5 di [orig:431 _345 ] [431])
                    (reg:DI 37 r8 [orig:430 _344 ] [430])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":205 222 {*adddi_1}
     (nil))
(insn 846 845 847 50 (parallel [
            (set (reg:DI 37 r8 [orig:433 _347 ] [433])
                (plus:DI (reg:DI 5 di [orig:432 _346 ] [432])
                    (const_int -4001 [0xfffffffffffff05f])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":205 222 {*adddi_1}
     (nil))
(insn 847 846 848 50 (set (reg/f:DI 5 di [726])
        (symbol_ref:DI ("nz.3888") [flags 0x202]  <var_decl 0x7f6500cb8990 nz>)) "CETLIH4.f":205 85 {*movdi_internal}
     (nil))
(insn 848 847 849 50 (set (reg:SI 5 di [orig:434 _348 ] [434])
        (mem:SI (plus:DI (mult:DI (reg:DI 37 r8 [orig:433 _347 ] [433])
                    (const_int 4 [0x4]))
                (reg/f:DI 5 di [726])) [1 nz S4 A32])) "CETLIH4.f":205 86 {*movsi_internal}
     (nil))
(insn 849 848 850 50 (set (reg:SF 22 xmm1 [orig:435 _349 ] [435])
        (float:SF (reg:SI 5 di [orig:434 _348 ] [434]))) "CETLIH4.f":205 203 {*floatsisf2_mixed}
     (nil))
(insn 850 849 851 50 (set (reg:SI 5 di [727])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])) "CETLIH4.f":205 86 {*movsi_internal}
     (nil))
(insn 851 850 852 50 (set (reg:DI 5 di [orig:436 _350 ] [436])
        (sign_extend:DI (reg:SI 5 di [727]))) "CETLIH4.f":205 149 {*extendsidi2_rex64}
     (nil))
(insn 852 851 853 50 (parallel [
            (set (reg:DI 5 di [orig:437 _351 ] [437])
                (mult:DI (reg:DI 5 di [orig:436 _350 ] [436])
                    (reg:DI 0 ax [orig:452 stride.2_397 ] [452])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":205 349 {*muldi3_1}
     (nil))
(insn 853 852 854 50 (parallel [
            (set (reg:DI 37 r8 [orig:438 _352 ] [438])
                (plus:DI (reg:DI 1 dx [orig:458 offset.3_405 ] [458])
                    (reg:DI 5 di [orig:437 _351 ] [437])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":205 222 {*adddi_1}
     (nil))
(insn 854 853 855 50 (set (reg:SI 5 di [728])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])) "CETLIH4.f":205 86 {*movsi_internal}
     (nil))
(insn 855 854 856 50 (set (reg:DI 5 di [orig:439 _353 ] [439])
        (sign_extend:DI (reg:SI 5 di [728]))) "CETLIH4.f":205 149 {*extendsidi2_rex64}
     (nil))
(insn 856 855 857 50 (parallel [
            (set (reg:DI 37 r8 [orig:440 _354 ] [440])
                (plus:DI (reg:DI 37 r8 [orig:438 _352 ] [438])
                    (reg:DI 5 di [orig:439 _353 ] [439])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":205 222 {*adddi_1}
     (nil))
(insn 857 856 858 50 (set (reg:SF 21 xmm0 [orig:441 _355 ] [441])
        (div:SF (reg:SF 21 xmm0 [orig:428 _342 ] [428])
            (reg:SF 22 xmm1 [orig:435 _349 ] [435]))) "CETLIH4.f":205 841 {*fop_sf_1}
     (nil))
(insn 858 857 859 50 (set (reg/f:DI 5 di [729])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [4 hx+0 S8 A64])) "CETLIH4.f":205 85 {*movdi_internal}
     (nil))
(insn 859 858 920 50 (set (mem:SF (plus:DI (mult:DI (reg:DI 37 r8 [orig:440 _354 ] [440])
                    (const_int 4 [0x4]))
                (reg/f:DI 5 di [729])) [3 *hx_412(D) S4 A32])
        (reg:SF 21 xmm0 [orig:441 _355 ] [441])) "CETLIH4.f":205 131 {*movsf_internal}
     (nil))
(jump_insn 920 859 921 50 (set (pc)
        (label_ref 874)) 683 {jump}
     (nil)
 -> 874)
;;  succ:       52 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484 486

(barrier 921 920 862)
;; basic block 51, loop depth 0, maybe hot
;;  prev block 50, next block 52, flags: (RTL, MODIFIED)
;;  pred:       49
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484 486
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458
;; lr  def 	 17 [flags] 442 443 444 445 446 730 731 732 733
(code_label 862 921 863 51 32 (nil) [1 uses])
(note 863 862 864 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 864 863 865 51 (set (reg:SI 5 di [730])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])) "CETLIH4.f":208 86 {*movsi_internal}
     (nil))
(insn 865 864 866 51 (set (reg:DI 5 di [orig:442 _356 ] [442])
        (sign_extend:DI (reg:SI 5 di [730]))) "CETLIH4.f":208 149 {*extendsidi2_rex64}
     (nil))
(insn 866 865 867 51 (parallel [
            (set (reg:DI 5 di [orig:443 _357 ] [443])
                (mult:DI (reg:DI 5 di [orig:442 _356 ] [442])
                    (reg:DI 0 ax [orig:452 stride.2_397 ] [452])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":208 349 {*muldi3_1}
     (nil))
(insn 867 866 868 51 (parallel [
            (set (reg:DI 37 r8 [orig:444 _358 ] [444])
                (plus:DI (reg:DI 1 dx [orig:458 offset.3_405 ] [458])
                    (reg:DI 5 di [orig:443 _357 ] [443])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":208 222 {*adddi_1}
     (nil))
(insn 868 867 869 51 (set (reg:SI 5 di [731])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])) "CETLIH4.f":208 86 {*movsi_internal}
     (nil))
(insn 869 868 870 51 (set (reg:DI 5 di [orig:445 _359 ] [445])
        (sign_extend:DI (reg:SI 5 di [731]))) "CETLIH4.f":208 149 {*extendsidi2_rex64}
     (nil))
(insn 870 869 871 51 (parallel [
            (set (reg:DI 37 r8 [orig:446 _360 ] [446])
                (plus:DI (reg:DI 37 r8 [orig:444 _358 ] [444])
                    (reg:DI 5 di [orig:445 _359 ] [445])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":208 222 {*adddi_1}
     (nil))
(insn 871 870 872 51 (set (reg/f:DI 5 di [732])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [4 hx+0 S8 A64])) "CETLIH4.f":208 85 {*movdi_internal}
     (nil))
(insn 872 871 873 51 (set (reg:SF 21 xmm0 [733])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CETLIH4.f":208 131 {*movsf_internal}
     (nil))
(insn 873 872 874 51 (set (mem:SF (plus:DI (mult:DI (reg:DI 37 r8 [orig:446 _360 ] [446])
                    (const_int 4 [0x4]))
                (reg/f:DI 5 di [732])) [3 *hx_412(D) S4 A32])
        (reg:SF 21 xmm0 [733])) "CETLIH4.f":208 131 {*movsf_internal}
     (nil))
;;  succ:       52 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484 486

;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 65, flags: (RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;;              50 [always] 
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484 486
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 874 873 875 52 33 (nil) [1 uses])
(note 875 874 876 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 876 875 922 52 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -28 [0xffffffffffffffe4])) [1 ii+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":196 221 {*addsi_1}
     (nil))
(jump_insn 922 876 923 52 (set (pc)
        (label_ref 877)) "CETLIH4.f":196 683 {jump}
     (nil)
 -> 877)
;;  succ:       48 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484 486

(barrier 923 922 959)
;; basic block 65, loop depth 0, maybe hot
;;  prev block 52, next block 53, flags: (RTL, MODIFIED)
;;  pred:       48
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 959 923 958 65 48 (nil) [1 uses])
(note 958 959 960 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 960 958 880 65 (const_int 0 [0]) "CETLIH4.f":204 718 {nop}
     (nil))
;;  succ:       53 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484

;; basic block 53, loop depth 0, maybe hot
;;  prev block 65, next block 64, flags: (RTL, MODIFIED)
;;  pred:       65 [always]  (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 880 960 881 53 31 (nil) [0 uses])
(note 881 880 882 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 882 881 924 53 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -40 [0xffffffffffffffd8])) [1 jj+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CETLIH4.f":195 221 {*addsi_1}
     (nil))
(jump_insn 924 882 925 53 (set (pc)
        (label_ref 883)) "CETLIH4.f":195 683 {jump}
     (nil)
 -> 883)
;;  succ:       46 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 452 458 484

(barrier 925 924 956)
;; basic block 64, loop depth 0, maybe hot
;;  prev block 53, next block 54, flags: (RTL, MODIFIED)
;;  pred:       46
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 956 925 955 64 47 (nil) [1 uses])
(note 955 956 957 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 957 955 886 64 (const_int 0 [0]) "CETLIH4.f":196 718 {nop}
     (nil))
;;  succ:       54 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 54, loop depth 0, maybe hot
;;  prev block 64, next block 1, flags: (RTL, MODIFIED)
;;  pred:       64 [always]  (FALLTHRU)
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 886 957 887 54 30 (nil) [0 uses])
(note 887 886 895 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 895 887 961 54 (const_int 0 [0]) "CETLIH4.f":216 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 961 895 0 NOTE_INSN_DELETED)
