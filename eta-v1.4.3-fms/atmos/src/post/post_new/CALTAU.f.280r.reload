
;; Function caltau (caltau_, funcdef_no=0, decl_uid=3770, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=112, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=96, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 7:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 8:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
      Creating newreg=633, assigning class GENERAL_REGS to r633
    8: [--sp:DI]=r633:DI
      REG_ARGS_SIZE 0x10
    Inserting insn reload before:
  706: r633:DI=`egrid5.4154'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 706:  (0) r  (1) i {*movdi_internal} (sp_off=-8)
      Change to class INDEX_REGS for r633
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 9:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-16)
      Creating newreg=634, assigning class GENERAL_REGS to r634
    9: [--sp:DI]=r634:DI
      REG_ARGS_SIZE 0x18
    Inserting insn reload before:
  707: r634:DI=`egrid4.4152'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 707:  (0) r  (1) i {*movdi_internal} (sp_off=-16)
      Change to class INDEX_REGS for r634
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 10:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-24)
      Creating newreg=635, assigning class GENERAL_REGS to r635
   10: [--sp:DI]=r635:DI
      REG_ARGS_SIZE 0x20
    Inserting insn reload before:
  708: r635:DI=`egridv.4158'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 708:  (0) r  (1) i {*movdi_internal} (sp_off=-24)
      Change to class INDEX_REGS for r635
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 11:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-32)
      Creating newreg=636, assigning class GENERAL_REGS to r636
   11: [--sp:DI]=r636:DI
      REG_ARGS_SIZE 0x28
    Inserting insn reload before:
  709: r636:DI=`egridu.4156'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 709:  (0) r  (1) i {*movdi_internal} (sp_off=-32)
      Change to class INDEX_REGS for r636
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 12:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-40)
      Creating newreg=637, assigning class GENERAL_REGS to r637
   12: [--sp:DI]=r637:DI
      REG_ARGS_SIZE 0x30
    Inserting insn reload before:
  710: r637:DI=`el0.4162'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 710:  (0) r  (1) i {*movdi_internal} (sp_off=-40)
      Change to class INDEX_REGS for r637
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-48)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 14:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-56)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-64)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-72)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 17:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-80)
      Creating newreg=638, assigning class GENERAL_REGS to r638
   17: [--sp:DI]=r638:DI
      REG_ARGS_SIZE 0x58
    Inserting insn reload before:
  711: r638:DI=const(`loops_'+0x25d0)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 711:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
      Change to class INDEX_REGS for r638
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 18:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-88)
      Creating newreg=639, assigning class GENERAL_REGS to r639
   18: [--sp:DI]=r639:DI
      REG_ARGS_SIZE 0x60
    Inserting insn reload before:
  712: r639:DI=const(`extra_'+0xd1ca30)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 712:  (0) r  (1) i {*movdi_internal} (sp_off=-88)
      Change to class INDEX_REGS for r639
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 19:  (0) r  (1) i {*movdi_internal} (sp_off=-96)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 20:  (0) r  (1) i {*movdi_internal} (sp_off=-96)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 21:  (0) r  (1) i {*movdi_internal} (sp_off=-96)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 22:  (0) r  (1) i {*movdi_internal} (sp_off=-96)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 23:  (0) r  (1) i {*movdi_internal} (sp_off=-96)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 24:  (0) r  (1) i {*movdi_internal} (sp_off=-96)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 25:  (0) q  (1) n {*movqi_internal} (sp_off=-96)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) rBwBz {*call} (sp_off=-96)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 27:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-96)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 28:  (0) =r  (1) %0  (2) rme {*adddi_1}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 29:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-8)
      Creating newreg=640, assigning class GENERAL_REGS to r640
   29: [--sp:DI]=r640:DI
      REG_ARGS_SIZE 0x10
    Inserting insn reload before:
  713: r640:DI=`el.4160'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 713:  (0) r  (1) i {*movdi_internal} (sp_off=-8)
      Change to class INDEX_REGS for r640
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 30:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-16)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 31:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-24)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-32)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 33:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-40)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 34:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-48)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 35:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-56)
      Creating newreg=641, assigning class GENERAL_REGS to r641
   35: [--sp:DI]=r641:DI
      REG_ARGS_SIZE 0x40
    Inserting insn reload before:
  714: r641:DI=`el0.4162'

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 714:  (0) r  (1) i {*movdi_internal} (sp_off=-56)
      Change to class INDEX_REGS for r641
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 36:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-64)
      Creating newreg=642, assigning class GENERAL_REGS to r642
   36: [--sp:DI]=r642:DI
      REG_ARGS_SIZE 0x48
    Inserting insn reload before:
  715: r642:DI=const(`masks_'+0x90aec)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 715:  (0) r  (1) i {*movdi_internal} (sp_off=-64)
      Change to class INDEX_REGS for r642
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=600
            alt=1: Bad operand -- refuse
	 Choosing alt 0 in insn 37:  (0) =<  (1) re*m {*pushdi2_rex64} (sp_off=-72)
      Creating newreg=643, assigning class GENERAL_REGS to r643
   37: [--sp:DI]=r643:DI
      REG_ARGS_SIZE 0x50
    Inserting insn reload before:
  716: r643:DI=const(`extra_'+0xd1ca30)

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=610,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=4,overall=1,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 716:  (0) r  (1) i {*movdi_internal} (sp_off=-72)
      Change to class INDEX_REGS for r643
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 38:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 39:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 40:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 41:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 42:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 43:  (0) r  (1) i {*movdi_internal} (sp_off=-80)
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 44:  (0) q  (1) n {*movqi_internal} (sp_off=-80)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) rBwBz {*call} (sp_off=-80)
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 46:  (0) =r  (1) %0  (2) rme {*adddi_1} (sp_off=-80)
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 52:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 53:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 54:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 62:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 67:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 69:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 70
	 Choosing alt 0 in insn 70:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 71:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 72:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 73:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 74:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 76:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 77:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 79:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 80
	 Choosing alt 0 in insn 80:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 81:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 82:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 83:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 84:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 86:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 87:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 89:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 90
	 Choosing alt 0 in insn 90:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 91:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 92:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 93:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 94:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 96:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 97:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 99:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 100
	 Choosing alt 0 in insn 100:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 101:  (0) r  (1) r  (2) le {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 102:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 103:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 104:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 105:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 111:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 117:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 118:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) rBwBz {*call}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 120:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 121:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 125:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 133:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 137:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 142:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 143:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 145:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 146
	 Choosing alt 0 in insn 146:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 147:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 148:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 149:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 151:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 153:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 154:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 156:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 157:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 160:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 161
	 Choosing alt 0 in insn 161:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 162:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 163:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 164:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 165:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 167:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 168:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 169:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 171:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 172:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 175:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 176
	 Choosing alt 0 in insn 176:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 177:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 178:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 179:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 180:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 181:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 183:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 184
	 Choosing alt 1 in insn 184:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 185:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 187:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 188:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 190:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 191
	 Choosing alt 0 in insn 191:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 192:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 193:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 194:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 195:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 196:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 197:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 198:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 199:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 200:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 202:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 203:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 205:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 206
	 Choosing alt 0 in insn 206:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 207:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 208:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 209:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 210:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 211:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 212
	 Choosing alt 1 in insn 212:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 213:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 215:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 216:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 218:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 219:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 220:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 222:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 223
	 Choosing alt 0 in insn 223:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 224:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 225:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 226:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 227:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 228:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 229:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 230:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 231
	 Choosing alt 1 in insn 231:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 234:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 235:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 237:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 238:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 239:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 240:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 241:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 242
	 Choosing alt 0 in insn 242:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 243:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 244:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 245:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 246:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 247
	 Choosing alt 1 in insn 247:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 248:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 249:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 250:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 251
	 Choosing alt 1 in insn 251:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 253:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 254:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 255:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 257:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 258:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 259:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 260:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 261
	 Choosing alt 0 in insn 261:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 262:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 263:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 264:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 265:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 266:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 267:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 268:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 269:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 270:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 275
	 Choosing alt 0 in insn 275:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 276:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 277:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 278:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 279:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 280:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 281:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 285:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 286
	 Choosing alt 0 in insn 286:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 287:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 289:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 290:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 291:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 292:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 293
	 Choosing alt 0 in insn 293:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 294:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 295:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 296:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 298:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 299:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 300:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 301:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 302:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 303:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 304:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 305:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 306
	 Choosing alt 0 in insn 306:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 307:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 308:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 309:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 310:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 311:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 312:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 313:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 314:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 315:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 316
	 Choosing alt 0 in insn 316:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 317:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 318:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 319:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 320:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 321:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 322:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 324:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 325:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 326:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 327:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 328:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 329
	 Choosing alt 0 in insn 329:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 330:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 331:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 332:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 333:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 334:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 335:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 336:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 337:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 338:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 339:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 340:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 341
	 Choosing alt 0 in insn 341:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 342:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 343:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 344:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 345:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 346:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 347:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 348:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 349:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 350:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 351:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 352:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 353:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 354:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 355
	 Choosing alt 0 in insn 355:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 356:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 357:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 358:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 359:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 360:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 361:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 362:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 363:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 364:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 365:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 366:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 367
	 Choosing alt 0 in insn 367:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 368:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 369:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 370:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 371:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 372:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 373:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 374:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 375:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 376:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 377:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 378:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 379:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 380:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 381
	 Choosing alt 0 in insn 381:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 382:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 383:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 384:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 385:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 386
	 Choosing alt 1 in insn 386:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 387:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 388:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 389:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 390:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 391:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 392:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 393
	 Choosing alt 0 in insn 393:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 394:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 395:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 396:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 397:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 398:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 399:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 400:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 401:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 402:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 403:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 404:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 405:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 406
	 Choosing alt 0 in insn 406:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 407:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 408:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 409:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 410:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 411:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 412:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 413:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 414:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 415:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 416
	 Choosing alt 0 in insn 416:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 417:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 418:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 419:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 420:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 421:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 422:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 423:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 424:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 425:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 426:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 427:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 428:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 429
	 Choosing alt 0 in insn 429:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 430:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 431:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 432:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 433:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 434:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 435:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 436:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 437:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 438:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 439:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 440:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 441
	 Choosing alt 0 in insn 441:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 442:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 443:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 444:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 445:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 446:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 447:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 448:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 449:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 450:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 451:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 452:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 453:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 454:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 455
	 Choosing alt 0 in insn 455:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 456:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 457:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 458:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 459:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 460:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 461:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 462:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 463:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 464:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 465:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 466:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 467
	 Choosing alt 0 in insn 467:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 468:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 469:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 470:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 471:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 472:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 473:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 474:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 475:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 476:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 477:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 478:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 479:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 480:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 481
	 Choosing alt 0 in insn 481:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 482:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 483:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 484:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 485:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 486
	 Choosing alt 1 in insn 486:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 487:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 488:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 489:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 490
	 Choosing alt 1 in insn 490:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 491:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 492:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 493:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 494
	 Choosing alt 1 in insn 494:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 495:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 496:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 497:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 498:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 499:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 500:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 501:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 502
	 Choosing alt 0 in insn 502:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 503:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 504:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 505:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 506:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 507:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 508:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 509:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 510:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 511:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 512
	 Choosing alt 0 in insn 512:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 513:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 514:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 515:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 516:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 517:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 518:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 519:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 520:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 521:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 522:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 523
	 Choosing alt 0 in insn 523:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 524:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 525:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 526:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 527:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 528:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 530:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 531:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 532:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 533:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 534:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 535
	 Choosing alt 0 in insn 535:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 536:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 537:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 538:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 539:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 540
	 Choosing alt 1 in insn 540:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 542:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 543
	 Choosing alt 1 in insn 543:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 544:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 545:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 546:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 547:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 548:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 549:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 550:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 551
	 Choosing alt 0 in insn 551:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 552:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 553:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 554:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 555:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 556:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 557:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 558:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 559:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 560:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 561
	 Choosing alt 0 in insn 561:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 562:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 563:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 564:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 565:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 566:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 567:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 568:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 569:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 570:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 571:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 572
	 Choosing alt 0 in insn 572:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 573:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 574:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 575:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 576:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 577:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 578:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 579:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 580:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 581:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 582:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 583:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 584
	 Choosing alt 0 in insn 584:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 585:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 586:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 587:  (0) =r  (1) %0  (2) rme {*adddi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 588:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 589
	 Choosing alt 1 in insn 589:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 591:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 592
	 Choosing alt 1 in insn 592:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 593:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 594:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 595:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 597:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 598:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 599:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 600:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 601:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 603:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 604:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 605:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 606:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 607:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 608:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 609:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 610:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 611:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 612:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 613:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 614:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 615
	 Choosing alt 0 in insn 615:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 616:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 617:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 618:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 619:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 620:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 621:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 622:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 623:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 624:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 625:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 626:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 627:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 628
	 Choosing alt 0 in insn 628:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 629:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 630:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 631:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 632
	 Choosing alt 1 in insn 632:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 633:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 634:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 635:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 636:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 637:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 638:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 639:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 640:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 641:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 642
	 Choosing alt 0 in insn 642:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 643:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 644:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 645:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 646:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 647:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 648:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 649:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 650:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 651:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 652:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 653:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 654:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 655
	 Choosing alt 0 in insn 655:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 656:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 657:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 658:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 659:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 660:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 666:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 672:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 673:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 676:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 677:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 678:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 679:  (0) rBwBz {*call}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=644 from oldreg=639, assigning class INDEX_REGS to invariant inheritance r644
  712: r639:DI=const(`extra_'+0xd1ca30)
    Add invariant inheritance<-original after:
  717: r644:DI=r639:DI

  716: r643:DI=const(`extra_'+0xd1ca30)
    Changing reload<-inheritance after:
  718: r643:DI=r644:DI

deleting insn with uid = 716.
    Invariant inheritance reuse change 644 (bb2):
  716: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
    [[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[[
      Creating newreg=645 from oldreg=637, assigning class INDEX_REGS to invariant inheritance r645
  710: r637:DI=`el0.4162'
    Add invariant inheritance<-original after:
  719: r645:DI=r637:DI

  714: r641:DI=`el0.4162'
    Changing reload<-inheritance after:
  720: r641:DI=r645:DI

deleting insn with uid = 714.
    Invariant inheritance reuse change 645 (bb2):
  714: NOTE_INSN_DELETED
	  ]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]]
EBB 3 4
EBB 5 6
EBB 16
EBB 7
EBB 15
EBB 8
EBB 9 10
EBB 11 12
EBB 18
EBB 13
EBB 17
EBB 14

********** Pseudo live ranges #1: **********

  BB 14
   Insn 684: point = 0, n_alt = -1
   Insn 679: point = 0, n_alt = 0
   Insn 678: point = 0, n_alt = 3
   Insn 677: point = 0, n_alt = 4
   Insn 676: point = 0, n_alt = 4
   Insn 675: point = 0, n_alt = -2
   Insn 674: point = 1, n_alt = -2
   Insn 673: point = 2, n_alt = 3
   Insn 672: point = 3, n_alt = 3
  BB 17
   Insn 701: point = 4, n_alt = -1
  BB 9
   Insn 131: point = 4, n_alt = -1
   Insn 130: point = 4, n_alt = 0
   Insn 129: point = 5, n_alt = 0
   Insn 128: point = 7, n_alt = 0
   Insn 127: point = 8, n_alt = 0
  BB 13
   Insn 691: point = 9, n_alt = -1
   Insn 666: point = 9, n_alt = 1
  BB 18
   Insn 704: point = 10, n_alt = -1
  BB 11
   Insn 139: point = 11, n_alt = -1
   Insn 138: point = 11, n_alt = 0
   Insn 137: point = 12, n_alt = 0
   Insn 136: point = 14, n_alt = 0
   Insn 135: point = 15, n_alt = 0
  BB 12
   Insn 689: point = 16, n_alt = -1
   Insn 660: point = 16, n_alt = 1
   Insn 659: point = 16, n_alt = 8
   Insn 658: point = 17, n_alt = 4
   Insn 657: point = 18, n_alt = 1
   Insn 656: point = 20, n_alt = 3
   Insn 655: point = 22, n_alt = 0
   Insn 654: point = 24, n_alt = 1
   Insn 653: point = 26, n_alt = 0
   Insn 652: point = 27, n_alt = 0
   Insn 651: point = 29, n_alt = 1
   Insn 650: point = 31, n_alt = 0
   Insn 649: point = 32, n_alt = 1
   Insn 648: point = 34, n_alt = 1
   Insn 647: point = 36, n_alt = 7
   Insn 646: point = 37, n_alt = 8
   Insn 645: point = 38, n_alt = 4
   Insn 644: point = 39, n_alt = 1
   Insn 643: point = 41, n_alt = 3
   Insn 642: point = 43, n_alt = 0
   Insn 641: point = 45, n_alt = 1
   Insn 640: point = 47, n_alt = 0
   Insn 639: point = 48, n_alt = 0
   Insn 638: point = 50, n_alt = 1
   Insn 637: point = 52, n_alt = 0
   Insn 636: point = 53, n_alt = 1
   Insn 635: point = 55, n_alt = 1
   Insn 634: point = 57, n_alt = 7
   Insn 633: point = 58, n_alt = 8
   Insn 632: point = 59, n_alt = 1
   Insn 631: point = 61, n_alt = 7
   Insn 630: point = 63, n_alt = 4
   Insn 629: point = 64, n_alt = 3
   Insn 628: point = 66, n_alt = 0
   Insn 627: point = 68, n_alt = 1
   Insn 626: point = 70, n_alt = 0
   Insn 625: point = 71, n_alt = 0
   Insn 624: point = 73, n_alt = 0
   Insn 623: point = 75, n_alt = 1
   Insn 622: point = 77, n_alt = 0
   Insn 621: point = 78, n_alt = 1
   Insn 620: point = 80, n_alt = 1
   Insn 619: point = 82, n_alt = 0
   Insn 618: point = 83, n_alt = 7
   Insn 617: point = 85, n_alt = 4
   Insn 616: point = 86, n_alt = 3
   Insn 615: point = 88, n_alt = 0
   Insn 614: point = 90, n_alt = 1
   Insn 613: point = 92, n_alt = 0
   Insn 612: point = 93, n_alt = 0
   Insn 611: point = 95, n_alt = 0
   Insn 610: point = 97, n_alt = 1
   Insn 609: point = 99, n_alt = 0
   Insn 608: point = 100, n_alt = 1
   Insn 607: point = 102, n_alt = 1
   Insn 606: point = 104, n_alt = 0
   Insn 605: point = 105, n_alt = 8
   Insn 604: point = 106, n_alt = 1
   Insn 603: point = 108, n_alt = 7
   Insn 602: point = 109, n_alt = -2
   Insn 601: point = 111, n_alt = 2
   Insn 600: point = 113, n_alt = 7
   Insn 599: point = 114, n_alt = 8
   Insn 598: point = 115, n_alt = 1
   Insn 597: point = 117, n_alt = 7
   Insn 596: point = 118, n_alt = -2
   Insn 595: point = 120, n_alt = 2
   Insn 594: point = 122, n_alt = 7
   Insn 593: point = 123, n_alt = 8
   Insn 592: point = 124, n_alt = 1
   Insn 591: point = 126, n_alt = 7
   Insn 590: point = 127, n_alt = -2
   Insn 589: point = 129, n_alt = 1
   Insn 588: point = 131, n_alt = 7
   Insn 587: point = 133, n_alt = 0
   Insn 586: point = 135, n_alt = 4
   Insn 585: point = 136, n_alt = 3
   Insn 584: point = 138, n_alt = 0
   Insn 583: point = 140, n_alt = 1
   Insn 582: point = 142, n_alt = 0
   Insn 581: point = 143, n_alt = 0
   Insn 580: point = 145, n_alt = 1
   Insn 579: point = 147, n_alt = 0
   Insn 578: point = 149, n_alt = 0
   Insn 577: point = 150, n_alt = 1
   Insn 576: point = 152, n_alt = 7
   Insn 575: point = 154, n_alt = 0
   Insn 574: point = 156, n_alt = 4
   Insn 573: point = 157, n_alt = 3
   Insn 572: point = 159, n_alt = 0
   Insn 571: point = 161, n_alt = 1
   Insn 570: point = 163, n_alt = 0
   Insn 569: point = 164, n_alt = 0
   Insn 568: point = 166, n_alt = 1
   Insn 567: point = 168, n_alt = 0
   Insn 566: point = 169, n_alt = 1
   Insn 565: point = 171, n_alt = 7
   Insn 564: point = 173, n_alt = 0
   Insn 563: point = 175, n_alt = 4
   Insn 562: point = 176, n_alt = 3
   Insn 561: point = 178, n_alt = 0
   Insn 560: point = 180, n_alt = 1
   Insn 559: point = 182, n_alt = 0
   Insn 558: point = 183, n_alt = 0
   Insn 557: point = 185, n_alt = 1
   Insn 556: point = 187, n_alt = 0
   Insn 555: point = 188, n_alt = 7
   Insn 554: point = 190, n_alt = 0
   Insn 553: point = 192, n_alt = 4
   Insn 552: point = 193, n_alt = 3
   Insn 551: point = 195, n_alt = 0
   Insn 550: point = 197, n_alt = 1
   Insn 549: point = 199, n_alt = 0
   Insn 548: point = 200, n_alt = 0
   Insn 547: point = 202, n_alt = 1
   Insn 546: point = 204, n_alt = 0
   Insn 545: point = 206, n_alt = 0
   Insn 544: point = 207, n_alt = 8
   Insn 543: point = 208, n_alt = 1
   Insn 542: point = 210, n_alt = 7
   Insn 541: point = 211, n_alt = -2
   Insn 540: point = 213, n_alt = 1
   Insn 539: point = 215, n_alt = 7
   Insn 538: point = 217, n_alt = 0
   Insn 537: point = 219, n_alt = 4
   Insn 536: point = 220, n_alt = 3
   Insn 535: point = 222, n_alt = 0
   Insn 534: point = 224, n_alt = 1
   Insn 533: point = 226, n_alt = 0
   Insn 532: point = 227, n_alt = 0
   Insn 531: point = 229, n_alt = 1
   Insn 530: point = 231, n_alt = 0
   Insn 529: point = 233, n_alt = 0
   Insn 528: point = 234, n_alt = 1
   Insn 527: point = 236, n_alt = 7
   Insn 526: point = 238, n_alt = 0
   Insn 525: point = 240, n_alt = 4
   Insn 524: point = 241, n_alt = 3
   Insn 523: point = 243, n_alt = 0
   Insn 522: point = 245, n_alt = 1
   Insn 521: point = 247, n_alt = 0
   Insn 520: point = 248, n_alt = 0
   Insn 519: point = 250, n_alt = 1
   Insn 518: point = 252, n_alt = 0
   Insn 517: point = 253, n_alt = 1
   Insn 516: point = 255, n_alt = 7
   Insn 515: point = 257, n_alt = 0
   Insn 514: point = 259, n_alt = 4
   Insn 513: point = 260, n_alt = 3
   Insn 512: point = 262, n_alt = 0
   Insn 511: point = 264, n_alt = 1
   Insn 510: point = 266, n_alt = 0
   Insn 509: point = 267, n_alt = 0
   Insn 508: point = 269, n_alt = 1
   Insn 507: point = 271, n_alt = 0
   Insn 506: point = 272, n_alt = 7
   Insn 505: point = 274, n_alt = 0
   Insn 504: point = 276, n_alt = 4
   Insn 503: point = 277, n_alt = 3
   Insn 502: point = 279, n_alt = 0
   Insn 501: point = 281, n_alt = 1
   Insn 500: point = 283, n_alt = 0
   Insn 499: point = 284, n_alt = 0
   Insn 498: point = 286, n_alt = 1
   Insn 497: point = 288, n_alt = 0
   Insn 496: point = 290, n_alt = 0
   Insn 495: point = 291, n_alt = 8
   Insn 494: point = 292, n_alt = 1
   Insn 493: point = 294, n_alt = 7
   Insn 492: point = 295, n_alt = 7
   Insn 491: point = 296, n_alt = 8
   Insn 490: point = 297, n_alt = 1
   Insn 489: point = 299, n_alt = 7
   Insn 488: point = 300, n_alt = 7
   Insn 487: point = 301, n_alt = 8
   Insn 486: point = 302, n_alt = 1
   Insn 485: point = 304, n_alt = 7
   Insn 484: point = 306, n_alt = 0
   Insn 483: point = 308, n_alt = 4
   Insn 482: point = 309, n_alt = 3
   Insn 481: point = 311, n_alt = 0
   Insn 480: point = 313, n_alt = 1
   Insn 479: point = 315, n_alt = 0
   Insn 478: point = 316, n_alt = 0
   Insn 477: point = 318, n_alt = 0
   Insn 476: point = 320, n_alt = 1
   Insn 475: point = 322, n_alt = 0
   Insn 474: point = 324, n_alt = 0
   Insn 473: point = 325, n_alt = 1
   Insn 472: point = 327, n_alt = 1
   Insn 471: point = 329, n_alt = 0
   Insn 470: point = 331, n_alt = 0
   Insn 469: point = 333, n_alt = 4
   Insn 468: point = 334, n_alt = 3
   Insn 467: point = 336, n_alt = 0
   Insn 466: point = 338, n_alt = 1
   Insn 465: point = 340, n_alt = 0
   Insn 464: point = 341, n_alt = 0
   Insn 463: point = 343, n_alt = 1
   Insn 462: point = 345, n_alt = 0
   Insn 461: point = 347, n_alt = 0
   Insn 460: point = 348, n_alt = 1
   Insn 459: point = 350, n_alt = 7
   Insn 458: point = 352, n_alt = 0
   Insn 457: point = 354, n_alt = 4
   Insn 456: point = 355, n_alt = 3
   Insn 455: point = 357, n_alt = 0
   Insn 454: point = 359, n_alt = 1
   Insn 453: point = 361, n_alt = 0
   Insn 452: point = 362, n_alt = 0
   Insn 451: point = 364, n_alt = 0
   Insn 450: point = 366, n_alt = 1
   Insn 449: point = 368, n_alt = 0
   Insn 448: point = 370, n_alt = 0
   Insn 447: point = 371, n_alt = 1
   Insn 446: point = 373, n_alt = 1
   Insn 445: point = 375, n_alt = 0
   Insn 444: point = 377, n_alt = 0
   Insn 443: point = 379, n_alt = 4
   Insn 442: point = 380, n_alt = 3
   Insn 441: point = 382, n_alt = 0
   Insn 440: point = 384, n_alt = 1
   Insn 439: point = 386, n_alt = 0
   Insn 438: point = 387, n_alt = 0
   Insn 437: point = 389, n_alt = 1
   Insn 436: point = 391, n_alt = 0
   Insn 435: point = 393, n_alt = 0
   Insn 434: point = 394, n_alt = 1
   Insn 433: point = 396, n_alt = 7
   Insn 432: point = 398, n_alt = 0
   Insn 431: point = 400, n_alt = 4
   Insn 430: point = 401, n_alt = 3
   Insn 429: point = 403, n_alt = 0
   Insn 428: point = 405, n_alt = 1
   Insn 427: point = 407, n_alt = 0
   Insn 426: point = 408, n_alt = 0
   Insn 425: point = 410, n_alt = 0
   Insn 424: point = 412, n_alt = 1
   Insn 423: point = 414, n_alt = 0
   Insn 422: point = 415, n_alt = 1
   Insn 421: point = 417, n_alt = 1
   Insn 420: point = 419, n_alt = 0
   Insn 419: point = 421, n_alt = 0
   Insn 418: point = 423, n_alt = 4
   Insn 417: point = 424, n_alt = 3
   Insn 416: point = 426, n_alt = 0
   Insn 415: point = 428, n_alt = 1
   Insn 414: point = 430, n_alt = 0
   Insn 413: point = 431, n_alt = 0
   Insn 412: point = 433, n_alt = 1
   Insn 411: point = 435, n_alt = 0
   Insn 410: point = 436, n_alt = 7
   Insn 409: point = 438, n_alt = 0
   Insn 408: point = 440, n_alt = 4
   Insn 407: point = 441, n_alt = 3
   Insn 406: point = 443, n_alt = 0
   Insn 405: point = 445, n_alt = 1
   Insn 404: point = 447, n_alt = 0
   Insn 403: point = 448, n_alt = 0
   Insn 402: point = 450, n_alt = 0
   Insn 401: point = 452, n_alt = 1
   Insn 400: point = 454, n_alt = 0
   Insn 399: point = 455, n_alt = 1
   Insn 398: point = 457, n_alt = 1
   Insn 397: point = 459, n_alt = 0
   Insn 396: point = 461, n_alt = 0
   Insn 395: point = 463, n_alt = 4
   Insn 394: point = 464, n_alt = 3
   Insn 393: point = 466, n_alt = 0
   Insn 392: point = 468, n_alt = 1
   Insn 391: point = 470, n_alt = 0
   Insn 390: point = 471, n_alt = 0
   Insn 389: point = 473, n_alt = 1
   Insn 388: point = 475, n_alt = 0
   Insn 387: point = 476, n_alt = 8
   Insn 386: point = 477, n_alt = 1
   Insn 385: point = 479, n_alt = 7
   Insn 384: point = 481, n_alt = 0
   Insn 383: point = 483, n_alt = 4
   Insn 382: point = 484, n_alt = 3
   Insn 381: point = 486, n_alt = 0
   Insn 380: point = 488, n_alt = 1
   Insn 379: point = 490, n_alt = 0
   Insn 378: point = 491, n_alt = 0
   Insn 377: point = 493, n_alt = 0
   Insn 376: point = 495, n_alt = 1
   Insn 375: point = 497, n_alt = 0
   Insn 374: point = 499, n_alt = 0
   Insn 373: point = 500, n_alt = 1
   Insn 372: point = 502, n_alt = 1
   Insn 371: point = 504, n_alt = 0
   Insn 370: point = 506, n_alt = 0
   Insn 369: point = 508, n_alt = 4
   Insn 368: point = 509, n_alt = 3
   Insn 367: point = 511, n_alt = 0
   Insn 366: point = 513, n_alt = 1
   Insn 365: point = 515, n_alt = 0
   Insn 364: point = 516, n_alt = 0
   Insn 363: point = 518, n_alt = 1
   Insn 362: point = 520, n_alt = 0
   Insn 361: point = 522, n_alt = 0
   Insn 360: point = 523, n_alt = 1
   Insn 359: point = 525, n_alt = 7
   Insn 358: point = 527, n_alt = 0
   Insn 357: point = 529, n_alt = 4
   Insn 356: point = 530, n_alt = 3
   Insn 355: point = 532, n_alt = 0
   Insn 354: point = 534, n_alt = 1
   Insn 353: point = 536, n_alt = 0
   Insn 352: point = 537, n_alt = 0
   Insn 351: point = 539, n_alt = 0
   Insn 350: point = 541, n_alt = 1
   Insn 349: point = 543, n_alt = 0
   Insn 348: point = 545, n_alt = 0
   Insn 347: point = 546, n_alt = 1
   Insn 346: point = 548, n_alt = 1
   Insn 345: point = 550, n_alt = 0
   Insn 344: point = 552, n_alt = 0
   Insn 343: point = 554, n_alt = 4
   Insn 342: point = 555, n_alt = 3
   Insn 341: point = 557, n_alt = 0
   Insn 340: point = 559, n_alt = 1
   Insn 339: point = 561, n_alt = 0
   Insn 338: point = 562, n_alt = 0
   Insn 337: point = 564, n_alt = 1
   Insn 336: point = 566, n_alt = 0
   Insn 335: point = 568, n_alt = 0
   Insn 334: point = 569, n_alt = 1
   Insn 333: point = 571, n_alt = 7
   Insn 332: point = 573, n_alt = 0
   Insn 331: point = 575, n_alt = 4
   Insn 330: point = 576, n_alt = 3
   Insn 329: point = 578, n_alt = 0
   Insn 328: point = 580, n_alt = 1
   Insn 327: point = 582, n_alt = 0
   Insn 326: point = 583, n_alt = 0
   Insn 325: point = 585, n_alt = 0
   Insn 324: point = 587, n_alt = 1
   Insn 323: point = 589, n_alt = 0
   Insn 322: point = 590, n_alt = 1
   Insn 321: point = 592, n_alt = 1
   Insn 320: point = 594, n_alt = 0
   Insn 319: point = 596, n_alt = 0
   Insn 318: point = 598, n_alt = 4
   Insn 317: point = 599, n_alt = 3
   Insn 316: point = 601, n_alt = 0
   Insn 315: point = 603, n_alt = 1
   Insn 314: point = 605, n_alt = 0
   Insn 313: point = 606, n_alt = 0
   Insn 312: point = 608, n_alt = 1
   Insn 311: point = 610, n_alt = 0
   Insn 310: point = 611, n_alt = 7
   Insn 309: point = 613, n_alt = 0
   Insn 308: point = 615, n_alt = 4
   Insn 307: point = 616, n_alt = 3
   Insn 306: point = 618, n_alt = 0
   Insn 305: point = 620, n_alt = 1
   Insn 304: point = 622, n_alt = 0
   Insn 303: point = 623, n_alt = 0
   Insn 302: point = 625, n_alt = 0
   Insn 301: point = 627, n_alt = 1
   Insn 300: point = 629, n_alt = 0
   Insn 299: point = 630, n_alt = 1
   Insn 298: point = 632, n_alt = 1
   Insn 297: point = 634, n_alt = 0
   Insn 296: point = 636, n_alt = 0
   Insn 295: point = 638, n_alt = 4
   Insn 294: point = 639, n_alt = 3
   Insn 293: point = 641, n_alt = 0
   Insn 292: point = 643, n_alt = 1
   Insn 291: point = 645, n_alt = 0
   Insn 290: point = 646, n_alt = 0
   Insn 289: point = 648, n_alt = 1
   Insn 288: point = 650, n_alt = 0
   Insn 287: point = 651, n_alt = 1
   Insn 286: point = 652, n_alt = 0
   Insn 285: point = 654, n_alt = 0
   Insn 281: point = 655, n_alt = 0
   Insn 280: point = 657, n_alt = 0
   Insn 279: point = 659, n_alt = 0
   Insn 278: point = 661, n_alt = 1
   Insn 277: point = 663, n_alt = 0
   Insn 276: point = 664, n_alt = 1
   Insn 275: point = 665, n_alt = 0
   Insn 274: point = 667, n_alt = 0
   Insn 270: point = 668, n_alt = 0
   Insn 269: point = 670, n_alt = 0
   Insn 268: point = 672, n_alt = 1
   Insn 267: point = 674, n_alt = 0
   Insn 266: point = 675, n_alt = 1
   Insn 265: point = 676, n_alt = 0
   Insn 264: point = 678, n_alt = 0
   Insn 263: point = 680, n_alt = 4
   Insn 262: point = 681, n_alt = 3
   Insn 261: point = 683, n_alt = 0
   Insn 260: point = 685, n_alt = 1
   Insn 259: point = 687, n_alt = 0
   Insn 258: point = 688, n_alt = 0
   Insn 257: point = 690, n_alt = 1
   Insn 256: point = 692, n_alt = 0
   Insn 255: point = 693, n_alt = 8
   Insn 254: point = 694, n_alt = 2
   Insn 253: point = 696, n_alt = 7
   Insn 252: point = 697, n_alt = -2
   Insn 251: point = 699, n_alt = 1
   Insn 250: point = 701, n_alt = 7
   Insn 249: point = 702, n_alt = 7
   Insn 248: point = 703, n_alt = 8
   Insn 247: point = 704, n_alt = 1
   Insn 246: point = 706, n_alt = 7
   Insn 245: point = 708, n_alt = 0
   Insn 244: point = 710, n_alt = 4
   Insn 243: point = 711, n_alt = 3
   Insn 242: point = 713, n_alt = 0
   Insn 241: point = 715, n_alt = 1
   Insn 240: point = 717, n_alt = 0
   Insn 239: point = 718, n_alt = 0
   Insn 238: point = 720, n_alt = 0
   Insn 237: point = 722, n_alt = 1
   Insn 236: point = 724, n_alt = 0
   Insn 235: point = 725, n_alt = 1
   Insn 234: point = 727, n_alt = 1
   Insn 233: point = 729, n_alt = 0
   Insn 232: point = 730, n_alt = -2
   Insn 231: point = 732, n_alt = 1
   Insn 230: point = 734, n_alt = 7
   Insn 229: point = 735, n_alt = 1
   Insn 228: point = 737, n_alt = 7
   Insn 227: point = 738, n_alt = 7
   Insn 226: point = 740, n_alt = 0
   Insn 225: point = 742, n_alt = 4
   Insn 224: point = 743, n_alt = 3
   Insn 223: point = 745, n_alt = 0
   Insn 222: point = 747, n_alt = 1
   Insn 221: point = 749, n_alt = 0
   Insn 220: point = 750, n_alt = 0
   Insn 219: point = 752, n_alt = 0
   Insn 218: point = 754, n_alt = 1
   Insn 217: point = 756, n_alt = 0
   Insn 216: point = 757, n_alt = 1
   Insn 215: point = 759, n_alt = 1
   Insn 214: point = 761, n_alt = 0
   Insn 213: point = 762, n_alt = 8
   Insn 212: point = 763, n_alt = 1
   Insn 211: point = 765, n_alt = 7
   Insn 210: point = 767, n_alt = 4
   Insn 209: point = 768, n_alt = 7
   Insn 208: point = 770, n_alt = 4
   Insn 207: point = 771, n_alt = 3
   Insn 206: point = 773, n_alt = 0
   Insn 205: point = 775, n_alt = 1
   Insn 204: point = 777, n_alt = 0
   Insn 203: point = 778, n_alt = 0
   Insn 202: point = 780, n_alt = 1
   Insn 201: point = 782, n_alt = 0
   Insn 200: point = 783, n_alt = 8
   Insn 199: point = 784, n_alt = 2
   Insn 198: point = 786, n_alt = 7
   Insn 197: point = 787, n_alt = 8
   Insn 196: point = 788, n_alt = 2
   Insn 195: point = 790, n_alt = 7
   Insn 194: point = 791, n_alt = 7
   Insn 193: point = 793, n_alt = 4
   Insn 192: point = 794, n_alt = 3
   Insn 191: point = 796, n_alt = 0
   Insn 190: point = 798, n_alt = 1
   Insn 189: point = 800, n_alt = 0
   Insn 188: point = 801, n_alt = 0
   Insn 187: point = 803, n_alt = 1
   Insn 186: point = 805, n_alt = 0
   Insn 185: point = 806, n_alt = 8
   Insn 184: point = 807, n_alt = 1
   Insn 183: point = 809, n_alt = 7
   Insn 182: point = 810, n_alt = -2
   Insn 181: point = 812, n_alt = 2
   Insn 180: point = 814, n_alt = 7
   Insn 179: point = 816, n_alt = 0
   Insn 178: point = 818, n_alt = 4
   Insn 177: point = 819, n_alt = 3
   Insn 176: point = 821, n_alt = 0
   Insn 175: point = 823, n_alt = 1
   Insn 174: point = 825, n_alt = 0
   Insn 173: point = 826, n_alt = 0
   Insn 172: point = 828, n_alt = 0
   Insn 171: point = 830, n_alt = 1
   Insn 170: point = 832, n_alt = 0
   Insn 169: point = 833, n_alt = 1
   Insn 168: point = 835, n_alt = 1
   Insn 167: point = 837, n_alt = 0
   Insn 166: point = 839, n_alt = 0
   Insn 165: point = 840, n_alt = 7
   Insn 164: point = 842, n_alt = 0
   Insn 163: point = 844, n_alt = 4
   Insn 162: point = 845, n_alt = 3
   Insn 161: point = 847, n_alt = 0
   Insn 160: point = 849, n_alt = 1
   Insn 159: point = 851, n_alt = 0
   Insn 158: point = 852, n_alt = 0
   Insn 157: point = 854, n_alt = 0
   Insn 156: point = 856, n_alt = 1
   Insn 155: point = 858, n_alt = 0
   Insn 154: point = 859, n_alt = 1
   Insn 153: point = 861, n_alt = 1
   Insn 152: point = 863, n_alt = 0
   Insn 151: point = 864, n_alt = 1
   Insn 150: point = 865, n_alt = 0
   Insn 149: point = 867, n_alt = 0
   Insn 148: point = 869, n_alt = 4
   Insn 147: point = 870, n_alt = 3
   Insn 146: point = 872, n_alt = 0
   Insn 145: point = 874, n_alt = 1
   Insn 144: point = 876, n_alt = 0
   Insn 143: point = 877, n_alt = 0
   Insn 142: point = 879, n_alt = 1
   Insn 141: point = 881, n_alt = 0
  BB 10
   Insn 133: point = 883, n_alt = 1
  BB 8
   Insn 125: point = 884, n_alt = 1
   Insn 124: point = 885, n_alt = 0
   Insn 123: point = 886, n_alt = 0
   Insn 122: point = 887, n_alt = 0
   Insn 121: point = 887, n_alt = 3
   Insn 120: point = 887, n_alt = 4
   Insn 119: point = 887, n_alt = 0
   Insn 118: point = 887, n_alt = 3
   Insn 117: point = 887, n_alt = 4
  BB 15
   Insn 695: point = 887, n_alt = -1
  BB 3
   Insn 55: point = 887, n_alt = -1
   Insn 54: point = 887, n_alt = 0
   Insn 53: point = 888, n_alt = 0
   Insn 52: point = 890, n_alt = 0
   Insn 51: point = 891, n_alt = 0
  BB 7
   Insn 687: point = 892, n_alt = -1
   Insn 111: point = 892, n_alt = 1
  BB 16
   Insn 698: point = 893, n_alt = -1
  BB 5
   Insn 63: point = 894, n_alt = -1
   Insn 62: point = 894, n_alt = 0
   Insn 61: point = 895, n_alt = 0
   Insn 60: point = 897, n_alt = 0
   Insn 59: point = 898, n_alt = 0
  BB 6
   Insn 685: point = 899, n_alt = -1
   Insn 105: point = 899, n_alt = 1
   Insn 104: point = 899, n_alt = 8
   Insn 103: point = 900, n_alt = 3
   Insn 102: point = 901, n_alt = 7
   Insn 101: point = 902, n_alt = 3
   Insn 100: point = 904, n_alt = 0
   Insn 99: point = 906, n_alt = 1
   Insn 98: point = 908, n_alt = 0
   Insn 97: point = 909, n_alt = 0
   Insn 96: point = 911, n_alt = 1
   Insn 95: point = 913, n_alt = 0
   Insn 94: point = 914, n_alt = 8
   Insn 93: point = 915, n_alt = 3
   Insn 92: point = 916, n_alt = 7
   Insn 91: point = 917, n_alt = 3
   Insn 90: point = 919, n_alt = 0
   Insn 89: point = 921, n_alt = 1
   Insn 88: point = 923, n_alt = 0
   Insn 87: point = 924, n_alt = 0
   Insn 86: point = 926, n_alt = 1
   Insn 85: point = 928, n_alt = 0
   Insn 84: point = 929, n_alt = 8
   Insn 83: point = 930, n_alt = 7
   Insn 82: point = 931, n_alt = 4
   Insn 81: point = 932, n_alt = 3
   Insn 80: point = 934, n_alt = 0
   Insn 79: point = 936, n_alt = 1
   Insn 78: point = 938, n_alt = 0
   Insn 77: point = 939, n_alt = 0
   Insn 76: point = 941, n_alt = 1
   Insn 75: point = 943, n_alt = 0
   Insn 74: point = 944, n_alt = 8
   Insn 73: point = 945, n_alt = 7
   Insn 72: point = 946, n_alt = 4
   Insn 71: point = 947, n_alt = 3
   Insn 70: point = 949, n_alt = 0
   Insn 69: point = 951, n_alt = 1
   Insn 68: point = 953, n_alt = 0
   Insn 67: point = 954, n_alt = 0
   Insn 66: point = 956, n_alt = 1
   Insn 65: point = 958, n_alt = 0
  BB 4
   Insn 57: point = 960, n_alt = 1
  BB 2
   Insn 49: point = 961, n_alt = 1
   Insn 48: point = 962, n_alt = 0
   Insn 47: point = 963, n_alt = 0
   Insn 46: point = 964, n_alt = 0
   Insn 45: point = 964, n_alt = 0
   Insn 44: point = 964, n_alt = 3
   Insn 43: point = 964, n_alt = 4
   Insn 42: point = 964, n_alt = 4
   Insn 41: point = 964, n_alt = 4
   Insn 40: point = 964, n_alt = 4
   Insn 39: point = 964, n_alt = 4
   Insn 38: point = 964, n_alt = 4
   Insn 37: point = 964, n_alt = 0
   Insn 718: point = 965, n_alt = -1
	   Creating copy r643<-r644@1000
   Insn 36: point = 967, n_alt = 0
   Insn 715: point = 968, n_alt = 4
   Insn 35: point = 969, n_alt = 0
   Insn 720: point = 970, n_alt = -1
	   Creating copy r641<-r645@1000
   Insn 34: point = 972, n_alt = 0
   Insn 33: point = 972, n_alt = 0
   Insn 32: point = 972, n_alt = 0
   Insn 31: point = 972, n_alt = 0
   Insn 30: point = 972, n_alt = 0
   Insn 29: point = 972, n_alt = 0
   Insn 713: point = 973, n_alt = 4
   Insn 28: point = 974, n_alt = 0
   Insn 27: point = 974, n_alt = 0
   Insn 26: point = 974, n_alt = 0
   Insn 25: point = 974, n_alt = 3
   Insn 24: point = 974, n_alt = 4
   Insn 23: point = 974, n_alt = 4
   Insn 22: point = 974, n_alt = 4
   Insn 21: point = 974, n_alt = 4
   Insn 20: point = 974, n_alt = 4
   Insn 19: point = 974, n_alt = 4
   Insn 18: point = 974, n_alt = 0
   Insn 717: point = 975, n_alt = -1
	   Creating copy r639->r644@1000
   Insn 712: point = 976, n_alt = 4
   Insn 17: point = 977, n_alt = 0
   Insn 711: point = 978, n_alt = 4
   Insn 16: point = 979, n_alt = 0
   Insn 15: point = 979, n_alt = 0
   Insn 14: point = 979, n_alt = 0
   Insn 13: point = 979, n_alt = 0
   Insn 12: point = 979, n_alt = 0
   Insn 719: point = 980, n_alt = -1
	   Creating copy r637->r645@1000
   Insn 710: point = 981, n_alt = 4
   Insn 11: point = 982, n_alt = 0
   Insn 709: point = 983, n_alt = 4
   Insn 10: point = 984, n_alt = 0
   Insn 708: point = 985, n_alt = 4
   Insn 9: point = 986, n_alt = 0
   Insn 707: point = 987, n_alt = 4
   Insn 8: point = 988, n_alt = 0
   Insn 706: point = 989, n_alt = 4
   Insn 7: point = 990, n_alt = 0
   Insn 3: point = 990, n_alt = 5
   Insn 2: point = 990, n_alt = 5
 r87: [955..956]
 r88: [950..954]
 r89: [950..951]
 r90: [948..949]
 r91: [944..947]
 r92: [940..941]
 r93: [935..939]
 r94: [935..936]
 r95: [933..934]
 r96: [929..932]
 r97: [925..926]
 r98: [920..924]
 r99: [920..921]
 r100: [918..919]
 r101: [914..917]
 r102: [914..916]
 r103: [910..911]
 r104: [905..909]
 r105: [905..906]
 r106: [903..904]
 r107: [899..902]
 r108: [899..901]
 r109: [878..879]
 r110: [873..877]
 r111: [873..874]
 r112: [871..872]
 r113: [868..870]
 r114: [860..861]
 r115: [853..859]
 r116: [855..856]
 r117: [853..854]
 r118: [848..852]
 r119: [848..849]
 r120: [846..847]
 r121: [843..845]
 r122: [813..840]
 r123: [836..837]
 r124: [834..835]
 r125: [827..833]
 r126: [829..830]
 r127: [827..828]
 r128: [822..826]
 r129: [822..823]
 r130: [820..821]
 r131: [817..819]
 r132: [813..814]
 r133: [811..812]
 r134: [808..810]
 r135: [802..803]
 r136: [797..801]
 r137: [797..798]
 r138: [795..796]
 r139: [792..794]
 r140: [789..791]
 r141: [779..780]
 r142: [774..778]
 r143: [774..775]
 r144: [772..773]
 r145: [769..771]
 r146: [764..768]
 r147: [764..765]
 r148: [758..759]
 r149: [751..757]
 r150: [753..754]
 r151: [751..752]
 r152: [746..750]
 r153: [746..747]
 r154: [744..745]
 r155: [741..743]
 r156: [736..738]
 r157: [733..735]
 r158: [731..732]
 r159: [705..730]
 r160: [726..727]
 r161: [719..725]
 r162: [721..722]
 r163: [719..720]
 r164: [714..718]
 r165: [714..715]
 r166: [712..713]
 r167: [709..711]
 r168: [705..706]
 r169: [698..699]
 r170: [695..697]
 r171: [689..690]
 r172: [684..688]
 r173: [684..685]
 r174: [682..683]
 r175: [679..681]
 r176: [671..672]
 r177: [669..670]
 r178: [666..668]
 r179: [660..661]
 r180: [658..659]
 r181: [653..655]
 r182: [647..648]
 r183: [642..646]
 r184: [642..643]
 r185: [640..641]
 r186: [637..639]
 r187: [633..634]
 r188: [631..632]
 r189: [624..630]
 r190: [626..627]
 r191: [624..625]
 r192: [619..623]
 r193: [619..620]
 r194: [617..618]
 r195: [614..616]
 r196: [570..611]
 r197: [607..608]
 r198: [602..606]
 r199: [602..603]
 r200: [600..601]
 r201: [597..599]
 r202: [593..594]
 r203: [591..592]
 r204: [584..590]
 r205: [586..587]
 r206: [584..585]
 r207: [579..583]
 r208: [579..580]
 r209: [577..578]
 r210: [574..576]
 r211: [570..571]
 r212: [524..569]
 r213: [565..566]
 r214: [563..564]
 r215: [558..562]
 r216: [558..559]
 r217: [556..557]
 r218: [553..555]
 r219: [549..550]
 r220: [547..548]
 r221: [538..546]
 r222: [542..543]
 r223: [540..541]
 r224: [538..539]
 r225: [533..537]
 r226: [533..534]
 r227: [531..532]
 r228: [528..530]
 r229: [524..525]
 r230: [478..523]
 r231: [519..520]
 r232: [517..518]
 r233: [512..516]
 r234: [512..513]
 r235: [510..511]
 r236: [507..509]
 r237: [503..504]
 r238: [501..502]
 r239: [492..500]
 r240: [496..497]
 r241: [494..495]
 r242: [492..493]
 r243: [487..491]
 r244: [487..488]
 r245: [485..486]
 r246: [482..484]
 r247: [478..479]
 r248: [472..473]
 r249: [467..471]
 r250: [467..468]
 r251: [465..466]
 r252: [462..464]
 r253: [458..459]
 r254: [456..457]
 r255: [449..455]
 r256: [451..452]
 r257: [449..450]
 r258: [444..448]
 r259: [444..445]
 r260: [442..443]
 r261: [439..441]
 r262: [395..436]
 r263: [432..433]
 r264: [427..431]
 r265: [427..428]
 r266: [425..426]
 r267: [422..424]
 r268: [418..419]
 r269: [416..417]
 r270: [409..415]
 r271: [411..412]
 r272: [409..410]
 r273: [404..408]
 r274: [404..405]
 r275: [402..403]
 r276: [399..401]
 r277: [395..396]
 r278: [349..394]
 r279: [390..391]
 r280: [388..389]
 r281: [383..387]
 r282: [383..384]
 r283: [381..382]
 r284: [378..380]
 r285: [374..375]
 r286: [372..373]
 r287: [363..371]
 r288: [367..368]
 r289: [365..366]
 r290: [363..364]
 r291: [358..362]
 r292: [358..359]
 r293: [356..357]
 r294: [353..355]
 r295: [349..350]
 r296: [303..348]
 r297: [344..345]
 r298: [342..343]
 r299: [337..341]
 r300: [337..338]
 r301: [335..336]
 r302: [332..334]
 r303: [328..329]
 r304: [326..327]
 r305: [317..325]
 r306: [321..322]
 r307: [319..320]
 r308: [317..318]
 r309: [312..316]
 r310: [312..313]
 r311: [310..311]
 r312: [307..309]
 r313: [303..304]
 r314: [287..288]
 r315: [285..286]
 r316: [280..284]
 r317: [280..281]
 r318: [278..279]
 r319: [275..277]
 r320: [254..272]
 r321: [268..269]
 r322: [263..267]
 r323: [263..264]
 r324: [261..262]
 r325: [258..260]
 r326: [254..255]
 r327: [235..253]
 r328: [249..250]
 r329: [244..248]
 r330: [244..245]
 r331: [242..243]
 r332: [239..241]
 r333: [235..236]
 r334: [214..234]
 r335: [230..231]
 r336: [228..229]
 r337: [223..227]
 r338: [223..224]
 r339: [221..222]
 r340: [218..220]
 r341: [214..215]
 r342: [212..213]
 r343: [209..211]
 r344: [203..204]
 r345: [201..202]
 r346: [196..200]
 r347: [196..197]
 r348: [194..195]
 r349: [191..193]
 r350: [170..188]
 r351: [184..185]
 r352: [179..183]
 r353: [179..180]
 r354: [177..178]
 r355: [174..176]
 r356: [170..171]
 r357: [151..169]
 r358: [165..166]
 r359: [160..164]
 r360: [160..161]
 r361: [158..159]
 r362: [155..157]
 r363: [151..152]
 r364: [130..150]
 r365: [146..147]
 r366: [144..145]
 r367: [139..143]
 r368: [139..140]
 r369: [137..138]
 r370: [134..136]
 r371: [130..131]
 r372: [128..129]
 r373: [125..127]
 r374: [119..120]
 r375: [116..118]
 r376: [110..111]
 r377: [107..109]
 r378: [101..102]
 r379: [94..100]
 r380: [96..97]
 r381: [94..95]
 r382: [89..93]
 r383: [89..90]
 r384: [87..88]
 r385: [84..86]
 r386: [60..83]
 r387: [79..80]
 r388: [72..78]
 r389: [74..75]
 r390: [72..73]
 r391: [67..71]
 r392: [67..68]
 r393: [65..66]
 r394: [62..64]
 r395: [60..61]
 r396: [54..55]
 r397: [40..53]
 r398: [49..50]
 r399: [44..48]
 r400: [44..45]
 r401: [42..43]
 r402: [37..41]
 r403: [37..39]
 r404: [33..34]
 r405: [19..32]
 r406: [28..29]
 r407: [23..27]
 r408: [23..24]
 r409: [21..22]
 r410: [16..20]
 r411: [16..18]
 r412: [961..963]
 r413: [887..962]
 r414: [887..888]
 r415: [894..895]
 r416: [884..886]
 r417: [4..885]
 r418: [4..5]
 r419: [11..12]
 r420: [889..890]
 r421: [896..897]
 r422: [957..958]
 r423: [952..953]
 r424: [944..946]
 r425: [944..945]
 r426: [942..943]
 r427: [937..938]
 r428: [929..931]
 r429: [929..930]
 r430: [927..928]
 r431: [922..923]
 r432: [914..915]
 r433: [912..913]
 r434: [907..908]
 r435: [899..900]
 r436: [6..7]
 r437: [13..14]
 r438: [880..881]
 r439: [875..876]
 r440: [866..869]
 r441: [866..867]
 r442: [864..865]
 r443: [862..863]
 r444: [857..858]
 r445: [850..851]
 r446: [841..844]
 r447: [841..842]
 r448: [838..839]
 r449: [831..832]
 r450: [824..825]
 r451: [815..818]
 r452: [815..816]
 r453: [806..807]
 r454: [808..809]
 r455: [804..805]
 r456: [799..800]
 r457: [792..793]
 r458: [787..788]
 r459: [789..790]
 r460: [783..784]
 r461: [785..786]
 r462: [781..782]
 r463: [776..777]
 r464: [769..770]
 r465: [766..767]
 r466: [762..763]
 r467: [760..761]
 r468: [755..756]
 r469: [748..749]
 r470: [739..742]
 r471: [739..740]
 r472: [736..737]
 r473: [733..734]
 r474: [728..729]
 r475: [723..724]
 r476: [716..717]
 r477: [707..710]
 r478: [707..708]
 r479: [703..704]
 r480: [700..702]
 r481: [700..701]
 r482: [693..694]
 r483: [695..696]
 r484: [691..692]
 r485: [686..687]
 r486: [677..680]
 r487: [677..678]
 r488: [675..676]
 r489: [673..674]
 r492: [664..665]
 r493: [666..667]
 r494: [662..663]
 r495: [656..657]
 r498: [651..652]
 r499: [653..654]
 r500: [649..650]
 r501: [644..645]
 r502: [635..638]
 r503: [635..636]
 r504: [628..629]
 r505: [621..622]
 r506: [612..615]
 r507: [612..613]
 r508: [609..610]
 r509: [604..605]
 r510: [595..598]
 r511: [595..596]
 r512: [588..589]
 r513: [581..582]
 r514: [572..575]
 r515: [572..573]
 r516: [567..568]
 r517: [560..561]
 r518: [551..554]
 r519: [551..552]
 r520: [544..545]
 r521: [535..536]
 r522: [526..529]
 r523: [526..527]
 r524: [521..522]
 r525: [514..515]
 r526: [505..508]
 r527: [505..506]
 r528: [498..499]
 r529: [489..490]
 r530: [480..483]
 r531: [480..481]
 r532: [476..477]
 r533: [474..475]
 r534: [469..470]
 r535: [460..463]
 r536: [460..461]
 r537: [453..454]
 r538: [446..447]
 r539: [437..440]
 r540: [437..438]
 r541: [434..435]
 r542: [429..430]
 r543: [420..423]
 r544: [420..421]
 r545: [413..414]
 r546: [406..407]
 r547: [397..400]
 r548: [397..398]
 r549: [392..393]
 r550: [385..386]
 r551: [376..379]
 r552: [376..377]
 r553: [369..370]
 r554: [360..361]
 r555: [351..354]
 r556: [351..352]
 r557: [346..347]
 r558: [339..340]
 r559: [330..333]
 r560: [330..331]
 r561: [323..324]
 r562: [314..315]
 r563: [305..308]
 r564: [305..306]
 r565: [301..302]
 r566: [296..297]
 r567: [298..300]
 r568: [298..299]
 r569: [291..292]
 r570: [293..295]
 r571: [293..294]
 r572: [289..290]
 r573: [282..283]
 r574: [273..276]
 r575: [273..274]
 r576: [270..271]
 r577: [265..266]
 r578: [256..259]
 r579: [256..257]
 r580: [251..252]
 r581: [246..247]
 r582: [237..240]
 r583: [237..238]
 r584: [232..233]
 r585: [225..226]
 r586: [216..219]
 r587: [216..217]
 r588: [207..208]
 r589: [209..210]
 r590: [205..206]
 r591: [198..199]
 r592: [189..192]
 r593: [189..190]
 r594: [186..187]
 r595: [181..182]
 r596: [172..175]
 r597: [172..173]
 r598: [167..168]
 r599: [162..163]
 r600: [153..156]
 r601: [153..154]
 r602: [148..149]
 r603: [141..142]
 r604: [132..135]
 r605: [132..133]
 r606: [123..124]
 r607: [125..126]
 r608: [121..122]
 r609: [114..115]
 r610: [116..117]
 r611: [112..113]
 r612: [105..106]
 r613: [107..108]
 r614: [103..104]
 r615: [98..99]
 r616: [91..92]
 r617: [84..85]
 r618: [81..82]
 r619: [76..77]
 r620: [69..70]
 r621: [62..63]
 r622: [58..59]
 r623: [56..57]
 r624: [51..52]
 r625: [46..47]
 r626: [37..38]
 r627: [35..36]
 r628: [30..31]
 r629: [25..26]
 r630: [16..17]
 r631: [1..3]
 r632: [0..2]
 r633: [988..989]
 r634: [986..987]
 r635: [984..985]
 r636: [982..983]
 r637: [979..981]
 r638: [977..978]
 r639: [974..976]
 r640: [972..973]
 r641: [969..970]
 r642: [967..968]
 r643: [964..965]
 r644: [966..975]
 r645: [971..980]
Compressing live ranges: from 990 to 840 - 84%
Ranges after the compression:
 r87: [812..813]
 r88: [808..811]
 r89: [808..809]
 r90: [806..807]
 r91: [804..805]
 r92: [800..801]
 r93: [796..799]
 r94: [796..797]
 r95: [794..795]
 r96: [792..793]
 r97: [788..789]
 r98: [784..787]
 r99: [784..785]
 r100: [782..783]
 r101: [780..781]
 r102: [780..781]
 r103: [776..777]
 r104: [772..775]
 r105: [772..773]
 r106: [770..771]
 r107: [768..769]
 r108: [768..769]
 r109: [754..755]
 r110: [750..753]
 r111: [750..751]
 r112: [748..749]
 r113: [746..747]
 r114: [738..739]
 r115: [732..737]
 r116: [734..735]
 r117: [732..733]
 r118: [728..731]
 r119: [728..729]
 r120: [726..727]
 r121: [724..725]
 r122: [698..721]
 r123: [718..719]
 r124: [716..717]
 r125: [710..715]
 r126: [712..713]
 r127: [710..711]
 r128: [706..709]
 r129: [706..707]
 r130: [704..705]
 r131: [702..703]
 r132: [698..699]
 r133: [696..697]
 r134: [694..695]
 r135: [688..689]
 r136: [684..687]
 r137: [684..685]
 r138: [682..683]
 r139: [680..681]
 r140: [678..679]
 r141: [668..669]
 r142: [664..667]
 r143: [664..665]
 r144: [662..663]
 r145: [660..661]
 r146: [656..659]
 r147: [656..657]
 r148: [650..651]
 r149: [644..649]
 r150: [646..647]
 r151: [644..645]
 r152: [640..643]
 r153: [640..641]
 r154: [638..639]
 r155: [636..637]
 r156: [632..633]
 r157: [630..631]
 r158: [628..629]
 r159: [606..627]
 r160: [624..625]
 r161: [618..623]
 r162: [620..621]
 r163: [618..619]
 r164: [614..617]
 r165: [614..615]
 r166: [612..613]
 r167: [610..611]
 r168: [606..607]
 r169: [600..601]
 r170: [598..599]
 r171: [592..593]
 r172: [588..591]
 r173: [588..589]
 r174: [586..587]
 r175: [584..585]
 r176: [576..577]
 r177: [574..575]
 r178: [572..573]
 r179: [566..567]
 r180: [564..565]
 r181: [560..561]
 r182: [554..555]
 r183: [550..553]
 r184: [550..551]
 r185: [548..549]
 r186: [546..547]
 r187: [542..543]
 r188: [540..541]
 r189: [534..539]
 r190: [536..537]
 r191: [534..535]
 r192: [530..533]
 r193: [530..531]
 r194: [528..529]
 r195: [526..527]
 r196: [488..523]
 r197: [520..521]
 r198: [516..519]
 r199: [516..517]
 r200: [514..515]
 r201: [512..513]
 r202: [508..509]
 r203: [506..507]
 r204: [500..505]
 r205: [502..503]
 r206: [500..501]
 r207: [496..499]
 r208: [496..497]
 r209: [494..495]
 r210: [492..493]
 r211: [488..489]
 r212: [448..487]
 r213: [484..485]
 r214: [482..483]
 r215: [478..481]
 r216: [478..479]
 r217: [476..477]
 r218: [474..475]
 r219: [470..471]
 r220: [468..469]
 r221: [460..467]
 r222: [464..465]
 r223: [462..463]
 r224: [460..461]
 r225: [456..459]
 r226: [456..457]
 r227: [454..455]
 r228: [452..453]
 r229: [448..449]
 r230: [408..447]
 r231: [444..445]
 r232: [442..443]
 r233: [438..441]
 r234: [438..439]
 r235: [436..437]
 r236: [434..435]
 r237: [430..431]
 r238: [428..429]
 r239: [420..427]
 r240: [424..425]
 r241: [422..423]
 r242: [420..421]
 r243: [416..419]
 r244: [416..417]
 r245: [414..415]
 r246: [412..413]
 r247: [408..409]
 r248: [402..403]
 r249: [398..401]
 r250: [398..399]
 r251: [396..397]
 r252: [394..395]
 r253: [390..391]
 r254: [388..389]
 r255: [382..387]
 r256: [384..385]
 r257: [382..383]
 r258: [378..381]
 r259: [378..379]
 r260: [376..377]
 r261: [374..375]
 r262: [336..371]
 r263: [368..369]
 r264: [364..367]
 r265: [364..365]
 r266: [362..363]
 r267: [360..361]
 r268: [356..357]
 r269: [354..355]
 r270: [348..353]
 r271: [350..351]
 r272: [348..349]
 r273: [344..347]
 r274: [344..345]
 r275: [342..343]
 r276: [340..341]
 r277: [336..337]
 r278: [296..335]
 r279: [332..333]
 r280: [330..331]
 r281: [326..329]
 r282: [326..327]
 r283: [324..325]
 r284: [322..323]
 r285: [318..319]
 r286: [316..317]
 r287: [308..315]
 r288: [312..313]
 r289: [310..311]
 r290: [308..309]
 r291: [304..307]
 r292: [304..305]
 r293: [302..303]
 r294: [300..301]
 r295: [296..297]
 r296: [256..295]
 r297: [292..293]
 r298: [290..291]
 r299: [286..289]
 r300: [286..287]
 r301: [284..285]
 r302: [282..283]
 r303: [278..279]
 r304: [276..277]
 r305: [268..275]
 r306: [272..273]
 r307: [270..271]
 r308: [268..269]
 r309: [264..267]
 r310: [264..265]
 r311: [262..263]
 r312: [260..261]
 r313: [256..257]
 r314: [242..243]
 r315: [240..241]
 r316: [236..239]
 r317: [236..237]
 r318: [234..235]
 r319: [232..233]
 r320: [214..229]
 r321: [226..227]
 r322: [222..225]
 r323: [222..223]
 r324: [220..221]
 r325: [218..219]
 r326: [214..215]
 r327: [198..213]
 r328: [210..211]
 r329: [206..209]
 r330: [206..207]
 r331: [204..205]
 r332: [202..203]
 r333: [198..199]
 r334: [180..197]
 r335: [194..195]
 r336: [192..193]
 r337: [188..191]
 r338: [188..189]
 r339: [186..187]
 r340: [184..185]
 r341: [180..181]
 r342: [178..179]
 r343: [176..177]
 r344: [170..171]
 r345: [168..169]
 r346: [164..167]
 r347: [164..165]
 r348: [162..163]
 r349: [160..161]
 r350: [142..157]
 r351: [154..155]
 r352: [150..153]
 r353: [150..151]
 r354: [148..149]
 r355: [146..147]
 r356: [142..143]
 r357: [126..141]
 r358: [138..139]
 r359: [134..137]
 r360: [134..135]
 r361: [132..133]
 r362: [130..131]
 r363: [126..127]
 r364: [108..125]
 r365: [122..123]
 r366: [120..121]
 r367: [116..119]
 r368: [116..117]
 r369: [114..115]
 r370: [112..113]
 r371: [108..109]
 r372: [106..107]
 r373: [104..105]
 r374: [98..99]
 r375: [96..97]
 r376: [90..91]
 r377: [88..89]
 r378: [82..83]
 r379: [76..81]
 r380: [78..79]
 r381: [76..77]
 r382: [72..75]
 r383: [72..73]
 r384: [70..71]
 r385: [68..69]
 r386: [48..67]
 r387: [64..65]
 r388: [58..63]
 r389: [60..61]
 r390: [58..59]
 r391: [54..57]
 r392: [54..55]
 r393: [52..53]
 r394: [50..51]
 r395: [48..49]
 r396: [42..43]
 r397: [30..41]
 r398: [38..39]
 r399: [34..37]
 r400: [34..35]
 r401: [32..33]
 r402: [28..31]
 r403: [28..29]
 r404: [24..25]
 r405: [12..23]
 r406: [20..21]
 r407: [16..19]
 r408: [16..17]
 r409: [14..15]
 r410: [10..13]
 r411: [10..11]
 r412: [816..817]
 r413: [760..817]
 r414: [760..761]
 r415: [764..765]
 r416: [758..759]
 r417: [2..759]
 r418: [2..3]
 r419: [6..7]
 r420: [762..763]
 r421: [766..767]
 r422: [814..815]
 r423: [810..811]
 r424: [804..805]
 r425: [804..805]
 r426: [802..803]
 r427: [798..799]
 r428: [792..793]
 r429: [792..793]
 r430: [790..791]
 r431: [786..787]
 r432: [780..781]
 r433: [778..779]
 r434: [774..775]
 r435: [768..769]
 r436: [4..5]
 r437: [8..9]
 r438: [756..757]
 r439: [752..753]
 r440: [744..747]
 r441: [744..745]
 r442: [742..743]
 r443: [740..741]
 r444: [736..737]
 r445: [730..731]
 r446: [722..725]
 r447: [722..723]
 r448: [720..721]
 r449: [714..715]
 r450: [708..709]
 r451: [700..703]
 r452: [700..701]
 r453: [692..693]
 r454: [694..695]
 r455: [690..691]
 r456: [686..687]
 r457: [680..681]
 r458: [676..677]
 r459: [678..679]
 r460: [672..673]
 r461: [674..675]
 r462: [670..671]
 r463: [666..667]
 r464: [660..661]
 r465: [658..659]
 r466: [654..655]
 r467: [652..653]
 r468: [648..649]
 r469: [642..643]
 r470: [634..637]
 r471: [634..635]
 r472: [632..633]
 r473: [630..631]
 r474: [626..627]
 r475: [622..623]
 r476: [616..617]
 r477: [608..611]
 r478: [608..609]
 r479: [604..605]
 r480: [602..603]
 r481: [602..603]
 r482: [596..597]
 r483: [598..599]
 r484: [594..595]
 r485: [590..591]
 r486: [582..585]
 r487: [582..583]
 r488: [580..581]
 r489: [578..579]
 r492: [570..571]
 r493: [572..573]
 r494: [568..569]
 r495: [562..563]
 r498: [558..559]
 r499: [560..561]
 r500: [556..557]
 r501: [552..553]
 r502: [544..547]
 r503: [544..545]
 r504: [538..539]
 r505: [532..533]
 r506: [524..527]
 r507: [524..525]
 r508: [522..523]
 r509: [518..519]
 r510: [510..513]
 r511: [510..511]
 r512: [504..505]
 r513: [498..499]
 r514: [490..493]
 r515: [490..491]
 r516: [486..487]
 r517: [480..481]
 r518: [472..475]
 r519: [472..473]
 r520: [466..467]
 r521: [458..459]
 r522: [450..453]
 r523: [450..451]
 r524: [446..447]
 r525: [440..441]
 r526: [432..435]
 r527: [432..433]
 r528: [426..427]
 r529: [418..419]
 r530: [410..413]
 r531: [410..411]
 r532: [406..407]
 r533: [404..405]
 r534: [400..401]
 r535: [392..395]
 r536: [392..393]
 r537: [386..387]
 r538: [380..381]
 r539: [372..375]
 r540: [372..373]
 r541: [370..371]
 r542: [366..367]
 r543: [358..361]
 r544: [358..359]
 r545: [352..353]
 r546: [346..347]
 r547: [338..341]
 r548: [338..339]
 r549: [334..335]
 r550: [328..329]
 r551: [320..323]
 r552: [320..321]
 r553: [314..315]
 r554: [306..307]
 r555: [298..301]
 r556: [298..299]
 r557: [294..295]
 r558: [288..289]
 r559: [280..283]
 r560: [280..281]
 r561: [274..275]
 r562: [266..267]
 r563: [258..261]
 r564: [258..259]
 r565: [254..255]
 r566: [250..251]
 r567: [252..253]
 r568: [252..253]
 r569: [246..247]
 r570: [248..249]
 r571: [248..249]
 r572: [244..245]
 r573: [238..239]
 r574: [230..233]
 r575: [230..231]
 r576: [228..229]
 r577: [224..225]
 r578: [216..219]
 r579: [216..217]
 r580: [212..213]
 r581: [208..209]
 r582: [200..203]
 r583: [200..201]
 r584: [196..197]
 r585: [190..191]
 r586: [182..185]
 r587: [182..183]
 r588: [174..175]
 r589: [176..177]
 r590: [172..173]
 r591: [166..167]
 r592: [158..161]
 r593: [158..159]
 r594: [156..157]
 r595: [152..153]
 r596: [144..147]
 r597: [144..145]
 r598: [140..141]
 r599: [136..137]
 r600: [128..131]
 r601: [128..129]
 r602: [124..125]
 r603: [118..119]
 r604: [110..113]
 r605: [110..111]
 r606: [102..103]
 r607: [104..105]
 r608: [100..101]
 r609: [94..95]
 r610: [96..97]
 r611: [92..93]
 r612: [86..87]
 r613: [88..89]
 r614: [84..85]
 r615: [80..81]
 r616: [74..75]
 r617: [68..69]
 r618: [66..67]
 r619: [62..63]
 r620: [56..57]
 r621: [50..51]
 r622: [46..47]
 r623: [44..45]
 r624: [40..41]
 r625: [36..37]
 r626: [28..29]
 r627: [26..27]
 r628: [22..23]
 r629: [18..19]
 r630: [10..11]
 r631: [0..1]
 r632: [0..1]
 r633: [838..839]
 r634: [836..837]
 r635: [834..835]
 r636: [832..833]
 r637: [830..831]
 r638: [828..829]
 r639: [826..827]
 r640: [824..825]
 r641: [822..823]
 r642: [820..821]
 r643: [818..819]
 r644: [820..827]
 r645: [824..831]

********** Assignment #1: **********

	 Assigning to 645 (cl=INDEX_REGS, orig=637, freq=2000, tfirst=637, tfreq=3000)...
	   Assign 3 to inheritance r645 (freq=2000)
	Hard reg 3 is preferable by r637 with profit 1000
	Hard reg 3 is preferable by r641 with profit 1000
	 Assigning to 637 (cl=INDEX_REGS, orig=637, freq=3000, tfirst=637, tfreq=3000)...
	   Assign 3 to reload r637 (freq=3000)
	 Assigning to 641 (cl=INDEX_REGS, orig=641, freq=2000, tfirst=637, tfreq=3000)...
	   Assign 3 to reload r641 (freq=2000)
	 Assigning to 644 (cl=INDEX_REGS, orig=639, freq=2000, tfirst=639, tfreq=3000)...
	   Assign 43 to inheritance r644 (freq=2000)
	Hard reg 43 is preferable by r639 with profit 1000
	Hard reg 43 is preferable by r643 with profit 1000
	 Assigning to 639 (cl=INDEX_REGS, orig=639, freq=3000, tfirst=639, tfreq=3000)...
	   Assign 43 to reload r639 (freq=3000)
	 Assigning to 643 (cl=INDEX_REGS, orig=643, freq=2000, tfirst=639, tfreq=3000)...
	   Assign 43 to reload r643 (freq=2000)
	 Assigning to 633 (cl=INDEX_REGS, orig=633, freq=2000, tfirst=633, tfreq=2000)...
	   Assign 0 to reload r633 (freq=2000)
	 Assigning to 634 (cl=INDEX_REGS, orig=634, freq=2000, tfirst=634, tfreq=2000)...
	   Assign 0 to reload r634 (freq=2000)
	 Assigning to 635 (cl=INDEX_REGS, orig=635, freq=2000, tfirst=635, tfreq=2000)...
	   Assign 0 to reload r635 (freq=2000)
	 Assigning to 636 (cl=INDEX_REGS, orig=636, freq=2000, tfirst=636, tfreq=2000)...
	   Assign 0 to reload r636 (freq=2000)
	 Assigning to 638 (cl=INDEX_REGS, orig=638, freq=2000, tfirst=638, tfreq=2000)...
	   Assign 0 to reload r638 (freq=2000)
	 Assigning to 640 (cl=INDEX_REGS, orig=640, freq=2000, tfirst=640, tfreq=2000)...
	   Assign 0 to reload r640 (freq=2000)
	 Assigning to 642 (cl=INDEX_REGS, orig=642, freq=2000, tfirst=642, tfreq=2000)...
	   Assign 0 to reload r642 (freq=2000)

********** Undoing inheritance #1: **********

Inherit 2 out of 2 (100.00%)

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=128, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=96, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 673:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 672:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 666:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 660:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 657:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 653:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 650:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 649:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 648:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 647:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 644:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 640:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 637:  (0) =r  (1) g {*movsi_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 636:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 635:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 634:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 633:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 626:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 622:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 619:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 613:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 609:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 606:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 605:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 603:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 601:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 600:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 599:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 597:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 595:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 594:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 593:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 582:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 578:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 570:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 567:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 559:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 556:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 549:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 545:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 544:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 533:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 529:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 521:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 518:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 510:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 507:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 500:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 496:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 495:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 492:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 491:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 488:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 487:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 479:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 474:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 465:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 461:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 453:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 448:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 439:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 435:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 427:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 423:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 414:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 411:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 404:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 400:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 391:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 388:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 387:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 379:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 374:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 365:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 361:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 353:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 348:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 339:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 335:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 327:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 314:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 311:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 304:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 300:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 291:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 287:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 285:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 277:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 276:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 267:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 266:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 259:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 255:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 253:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 249:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 248:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 240:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 217:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 213:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 200:  (0) m  (1) v {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 199:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 197:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 195:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 185:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 174:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 170:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 166:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 155:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 151:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 144:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 133:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 127:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 125:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 111:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 105:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 103:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 98:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 95:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 93:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 75:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 51:  (0) rm  (1) re {*cmpsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 49:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=128, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=96, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 66
changing reg in insn 67
changing reg in insn 67
changing reg in insn 69
changing reg in insn 70
changing reg in insn 71
changing reg in insn 71
changing reg in insn 74
changing reg in insn 76
changing reg in insn 77
changing reg in insn 77
changing reg in insn 79
changing reg in insn 80
changing reg in insn 81
changing reg in insn 81
changing reg in insn 84
changing reg in insn 86
changing reg in insn 87
changing reg in insn 87
changing reg in insn 89
changing reg in insn 90
changing reg in insn 91
changing reg in insn 91
changing reg in insn 94
changing reg in insn 92
changing reg in insn 94
changing reg in insn 96
changing reg in insn 97
changing reg in insn 97
changing reg in insn 99
changing reg in insn 100
changing reg in insn 101
changing reg in insn 101
changing reg in insn 104
changing reg in insn 102
changing reg in insn 104
changing reg in insn 142
changing reg in insn 143
changing reg in insn 143
changing reg in insn 145
changing reg in insn 146
changing reg in insn 147
changing reg in insn 147
changing reg in insn 149
changing reg in insn 153
changing reg in insn 154
changing reg in insn 154
changing reg in insn 158
changing reg in insn 156
changing reg in insn 157
changing reg in insn 157
changing reg in insn 158
changing reg in insn 158
changing reg in insn 160
changing reg in insn 161
changing reg in insn 162
changing reg in insn 162
changing reg in insn 164
changing reg in insn 165
changing reg in insn 181
changing reg in insn 167
changing reg in insn 168
changing reg in insn 168
changing reg in insn 169
changing reg in insn 169
changing reg in insn 173
changing reg in insn 171
changing reg in insn 172
changing reg in insn 172
changing reg in insn 173
changing reg in insn 173
changing reg in insn 175
changing reg in insn 176
changing reg in insn 177
changing reg in insn 177
changing reg in insn 179
changing reg in insn 180
changing reg in insn 181
changing reg in insn 181
changing reg in insn 182
changing reg in insn 182
changing reg in insn 187
changing reg in insn 188
changing reg in insn 188
changing reg in insn 190
changing reg in insn 191
changing reg in insn 192
changing reg in insn 192
changing reg in insn 194
changing reg in insn 194
changing reg in insn 196
changing reg in insn 202
changing reg in insn 203
changing reg in insn 203
changing reg in insn 205
changing reg in insn 206
changing reg in insn 207
changing reg in insn 207
changing reg in insn 209
changing reg in insn 209
changing reg in insn 211
changing reg in insn 215
changing reg in insn 216
changing reg in insn 216
changing reg in insn 220
changing reg in insn 218
changing reg in insn 219
changing reg in insn 219
changing reg in insn 220
changing reg in insn 220
changing reg in insn 222
changing reg in insn 223
changing reg in insn 224
changing reg in insn 224
changing reg in insn 226
changing reg in insn 227
changing reg in insn 229
changing reg in insn 229
changing reg in insn 231
changing reg in insn 232
changing reg in insn 232
changing reg in insn 234
changing reg in insn 235
changing reg in insn 235
changing reg in insn 239
changing reg in insn 237
changing reg in insn 238
changing reg in insn 238
changing reg in insn 239
changing reg in insn 239
changing reg in insn 241
changing reg in insn 242
changing reg in insn 243
changing reg in insn 243
changing reg in insn 245
changing reg in insn 246
changing reg in insn 251
changing reg in insn 252
changing reg in insn 252
changing reg in insn 254
changing reg in insn 257
changing reg in insn 258
changing reg in insn 258
changing reg in insn 260
changing reg in insn 261
changing reg in insn 262
changing reg in insn 262
changing reg in insn 264
changing reg in insn 268
changing reg in insn 269
changing reg in insn 269
changing reg in insn 270
changing reg in insn 270
changing reg in insn 275
changing reg in insn 278
changing reg in insn 279
changing reg in insn 279
changing reg in insn 280
changing reg in insn 281
changing reg in insn 286
changing reg in insn 289
changing reg in insn 290
changing reg in insn 290
changing reg in insn 292
changing reg in insn 293
changing reg in insn 294
changing reg in insn 294
changing reg in insn 296
changing reg in insn 297
changing reg in insn 298
changing reg in insn 298
changing reg in insn 299
changing reg in insn 299
changing reg in insn 303
changing reg in insn 301
changing reg in insn 302
changing reg in insn 302
changing reg in insn 303
changing reg in insn 303
changing reg in insn 305
changing reg in insn 306
changing reg in insn 307
changing reg in insn 307
changing reg in insn 309
changing reg in insn 310
changing reg in insn 334
changing reg in insn 312
changing reg in insn 313
changing reg in insn 313
changing reg in insn 315
changing reg in insn 316
changing reg in insn 317
changing reg in insn 317
changing reg in insn 319
changing reg in insn 320
changing reg in insn 321
changing reg in insn 321
changing reg in insn 322
changing reg in insn 322
changing reg in insn 326
changing reg in insn 324
changing reg in insn 325
changing reg in insn 325
changing reg in insn 326
changing reg in insn 326
changing reg in insn 328
changing reg in insn 329
changing reg in insn 330
changing reg in insn 330
changing reg in insn 332
changing reg in insn 333
changing reg in insn 334
changing reg in insn 334
changing reg in insn 360
changing reg in insn 336
changing reg in insn 337
changing reg in insn 337
changing reg in insn 338
changing reg in insn 338
changing reg in insn 340
changing reg in insn 341
changing reg in insn 342
changing reg in insn 342
changing reg in insn 344
changing reg in insn 345
changing reg in insn 346
changing reg in insn 346
changing reg in insn 347
changing reg in insn 347
changing reg in insn 352
changing reg in insn 349
changing reg in insn 350
changing reg in insn 350
changing reg in insn 351
changing reg in insn 351
changing reg in insn 352
changing reg in insn 352
changing reg in insn 354
changing reg in insn 355
changing reg in insn 356
changing reg in insn 356
changing reg in insn 358
changing reg in insn 359
changing reg in insn 360
changing reg in insn 360
changing reg in insn 362
changing reg in insn 363
changing reg in insn 363
changing reg in insn 364
changing reg in insn 364
changing reg in insn 366
changing reg in insn 367
changing reg in insn 368
changing reg in insn 368
changing reg in insn 370
changing reg in insn 371
changing reg in insn 372
changing reg in insn 372
changing reg in insn 373
changing reg in insn 373
changing reg in insn 378
changing reg in insn 375
changing reg in insn 376
changing reg in insn 376
changing reg in insn 377
changing reg in insn 377
changing reg in insn 378
changing reg in insn 378
changing reg in insn 380
changing reg in insn 381
changing reg in insn 382
changing reg in insn 382
changing reg in insn 384
changing reg in insn 385
changing reg in insn 389
changing reg in insn 390
changing reg in insn 390
changing reg in insn 392
changing reg in insn 393
changing reg in insn 394
changing reg in insn 394
changing reg in insn 396
changing reg in insn 397
changing reg in insn 398
changing reg in insn 398
changing reg in insn 399
changing reg in insn 399
changing reg in insn 403
changing reg in insn 401
changing reg in insn 402
changing reg in insn 402
changing reg in insn 403
changing reg in insn 403
changing reg in insn 405
changing reg in insn 406
changing reg in insn 407
changing reg in insn 407
changing reg in insn 409
changing reg in insn 410
changing reg in insn 434
changing reg in insn 412
changing reg in insn 413
changing reg in insn 413
changing reg in insn 415
changing reg in insn 416
changing reg in insn 417
changing reg in insn 417
changing reg in insn 419
changing reg in insn 420
changing reg in insn 421
changing reg in insn 421
changing reg in insn 422
changing reg in insn 422
changing reg in insn 426
changing reg in insn 424
changing reg in insn 425
changing reg in insn 425
changing reg in insn 426
changing reg in insn 426
changing reg in insn 428
changing reg in insn 429
changing reg in insn 430
changing reg in insn 430
changing reg in insn 432
changing reg in insn 433
changing reg in insn 434
changing reg in insn 434
changing reg in insn 460
changing reg in insn 436
changing reg in insn 437
changing reg in insn 437
changing reg in insn 438
changing reg in insn 438
changing reg in insn 440
changing reg in insn 441
changing reg in insn 442
changing reg in insn 442
changing reg in insn 444
changing reg in insn 445
changing reg in insn 446
changing reg in insn 446
changing reg in insn 447
changing reg in insn 447
changing reg in insn 452
changing reg in insn 449
changing reg in insn 450
changing reg in insn 450
changing reg in insn 451
changing reg in insn 451
changing reg in insn 452
changing reg in insn 452
changing reg in insn 454
changing reg in insn 455
changing reg in insn 456
changing reg in insn 456
changing reg in insn 458
changing reg in insn 459
changing reg in insn 460
changing reg in insn 460
changing reg in insn 462
changing reg in insn 463
changing reg in insn 463
changing reg in insn 464
changing reg in insn 464
changing reg in insn 466
changing reg in insn 467
changing reg in insn 468
changing reg in insn 468
changing reg in insn 470
changing reg in insn 471
changing reg in insn 472
changing reg in insn 472
changing reg in insn 473
changing reg in insn 473
changing reg in insn 478
changing reg in insn 475
changing reg in insn 476
changing reg in insn 476
changing reg in insn 477
changing reg in insn 477
changing reg in insn 478
changing reg in insn 478
changing reg in insn 480
changing reg in insn 481
changing reg in insn 482
changing reg in insn 482
changing reg in insn 484
changing reg in insn 485
changing reg in insn 497
changing reg in insn 498
changing reg in insn 498
changing reg in insn 499
changing reg in insn 499
changing reg in insn 501
changing reg in insn 502
changing reg in insn 503
changing reg in insn 503
changing reg in insn 505
changing reg in insn 506
changing reg in insn 517
changing reg in insn 508
changing reg in insn 509
changing reg in insn 509
changing reg in insn 511
changing reg in insn 512
changing reg in insn 513
changing reg in insn 513
changing reg in insn 515
changing reg in insn 516
changing reg in insn 517
changing reg in insn 517
changing reg in insn 528
changing reg in insn 519
changing reg in insn 520
changing reg in insn 520
changing reg in insn 522
changing reg in insn 523
changing reg in insn 524
changing reg in insn 524
changing reg in insn 526
changing reg in insn 527
changing reg in insn 528
changing reg in insn 528
changing reg in insn 530
changing reg in insn 531
changing reg in insn 531
changing reg in insn 532
changing reg in insn 532
changing reg in insn 534
changing reg in insn 535
changing reg in insn 536
changing reg in insn 536
changing reg in insn 538
changing reg in insn 539
changing reg in insn 540
changing reg in insn 541
changing reg in insn 541
changing reg in insn 546
changing reg in insn 547
changing reg in insn 547
changing reg in insn 548
changing reg in insn 548
changing reg in insn 550
changing reg in insn 551
changing reg in insn 552
changing reg in insn 552
changing reg in insn 554
changing reg in insn 555
changing reg in insn 566
changing reg in insn 557
changing reg in insn 558
changing reg in insn 558
changing reg in insn 560
changing reg in insn 561
changing reg in insn 562
changing reg in insn 562
changing reg in insn 564
changing reg in insn 565
changing reg in insn 566
changing reg in insn 566
changing reg in insn 577
changing reg in insn 568
changing reg in insn 569
changing reg in insn 569
changing reg in insn 571
changing reg in insn 572
changing reg in insn 573
changing reg in insn 573
changing reg in insn 575
changing reg in insn 576
changing reg in insn 577
changing reg in insn 577
changing reg in insn 579
changing reg in insn 580
changing reg in insn 580
changing reg in insn 581
changing reg in insn 581
changing reg in insn 583
changing reg in insn 584
changing reg in insn 585
changing reg in insn 585
changing reg in insn 587
changing reg in insn 588
changing reg in insn 589
changing reg in insn 590
changing reg in insn 590
changing reg in insn 595
changing reg in insn 596
changing reg in insn 596
changing reg in insn 598
changing reg in insn 601
changing reg in insn 602
changing reg in insn 602
changing reg in insn 604
changing reg in insn 607
changing reg in insn 608
changing reg in insn 608
changing reg in insn 612
changing reg in insn 610
changing reg in insn 611
changing reg in insn 611
changing reg in insn 612
changing reg in insn 612
changing reg in insn 614
changing reg in insn 615
changing reg in insn 616
changing reg in insn 616
changing reg in insn 618
changing reg in insn 618
changing reg in insn 620
changing reg in insn 621
changing reg in insn 621
changing reg in insn 625
changing reg in insn 623
changing reg in insn 624
changing reg in insn 624
changing reg in insn 625
changing reg in insn 625
changing reg in insn 627
changing reg in insn 628
changing reg in insn 629
changing reg in insn 629
changing reg in insn 631
changing reg in insn 631
changing reg in insn 635
changing reg in insn 636
changing reg in insn 636
changing reg in insn 644
changing reg in insn 638
changing reg in insn 639
changing reg in insn 639
changing reg in insn 641
changing reg in insn 642
changing reg in insn 643
changing reg in insn 643
changing reg in insn 646
changing reg in insn 644
changing reg in insn 646
changing reg in insn 648
changing reg in insn 649
changing reg in insn 649
changing reg in insn 657
changing reg in insn 651
changing reg in insn 652
changing reg in insn 652
changing reg in insn 654
changing reg in insn 655
changing reg in insn 656
changing reg in insn 656
changing reg in insn 659
changing reg in insn 657
changing reg in insn 659
changing reg in insn 47
changing reg in insn 49
changing reg in insn 48
changing reg in insn 51
changing reg in insn 53
changing reg in insn 54
changing reg in insn 61
changing reg in insn 62
changing reg in insn 123
changing reg in insn 125
changing reg in insn 124
changing reg in insn 127
changing reg in insn 129
changing reg in insn 130
changing reg in insn 137
changing reg in insn 138
changing reg in insn 52
changing reg in insn 53
changing reg in insn 60
changing reg in insn 61
changing reg in insn 65
changing reg in insn 66
changing reg in insn 68
changing reg in insn 69
changing reg in insn 72
changing reg in insn 74
changing reg in insn 73
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 78
changing reg in insn 79
changing reg in insn 82
changing reg in insn 84
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 88
changing reg in insn 89
changing reg in insn 93
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
changing reg in insn 98
changing reg in insn 99
changing reg in insn 103
changing reg in insn 104
changing reg in insn 128
changing reg in insn 129
changing reg in insn 136
changing reg in insn 137
changing reg in insn 141
changing reg in insn 142
changing reg in insn 144
changing reg in insn 145
changing reg in insn 148
changing reg in insn 150
changing reg in insn 149
changing reg in insn 150
changing reg in insn 150
changing reg in insn 151
changing reg in insn 152
changing reg in insn 153
changing reg in insn 155
changing reg in insn 156
changing reg in insn 159
changing reg in insn 160
changing reg in insn 163
changing reg in insn 165
changing reg in insn 164
changing reg in insn 165
changing reg in insn 166
changing reg in insn 167
changing reg in insn 170
changing reg in insn 171
changing reg in insn 174
changing reg in insn 175
changing reg in insn 178
changing reg in insn 180
changing reg in insn 179
changing reg in insn 180
changing reg in insn 184
changing reg in insn 185
changing reg in insn 183
changing reg in insn 186
changing reg in insn 187
changing reg in insn 189
changing reg in insn 190
changing reg in insn 193
changing reg in insn 194
changing reg in insn 196
changing reg in insn 197
changing reg in insn 195
changing reg in insn 196
changing reg in insn 199
changing reg in insn 200
changing reg in insn 198
changing reg in insn 199
changing reg in insn 201
changing reg in insn 202
changing reg in insn 204
changing reg in insn 205
changing reg in insn 208
changing reg in insn 209
changing reg in insn 210
changing reg in insn 211
changing reg in insn 212
changing reg in insn 213
changing reg in insn 214
changing reg in insn 215
changing reg in insn 217
changing reg in insn 218
changing reg in insn 221
changing reg in insn 222
changing reg in insn 225
changing reg in insn 227
changing reg in insn 226
changing reg in insn 227
changing reg in insn 228
changing reg in insn 229
changing reg in insn 230
changing reg in insn 233
changing reg in insn 234
changing reg in insn 236
changing reg in insn 237
changing reg in insn 240
changing reg in insn 241
changing reg in insn 244
changing reg in insn 246
changing reg in insn 245
changing reg in insn 246
changing reg in insn 247
changing reg in insn 248
changing reg in insn 249
changing reg in insn 250
changing reg in insn 254
changing reg in insn 255
changing reg in insn 253
changing reg in insn 254
changing reg in insn 256
changing reg in insn 257
changing reg in insn 259
changing reg in insn 260
changing reg in insn 263
changing reg in insn 265
changing reg in insn 264
changing reg in insn 265
changing reg in insn 265
changing reg in insn 266
changing reg in insn 267
changing reg in insn 268
changing reg in insn 275
changing reg in insn 276
changing reg in insn 274
changing reg in insn 277
changing reg in insn 278
changing reg in insn 280
changing reg in insn 281
changing reg in insn 286
changing reg in insn 287
changing reg in insn 285
changing reg in insn 288
changing reg in insn 289
changing reg in insn 291
changing reg in insn 292
changing reg in insn 295
changing reg in insn 297
changing reg in insn 296
changing reg in insn 297
changing reg in insn 300
changing reg in insn 301
changing reg in insn 304
changing reg in insn 305
changing reg in insn 308
changing reg in insn 310
changing reg in insn 309
changing reg in insn 310
changing reg in insn 311
changing reg in insn 312
changing reg in insn 314
changing reg in insn 315
changing reg in insn 318
changing reg in insn 320
changing reg in insn 319
changing reg in insn 320
changing reg in insn 323
changing reg in insn 324
changing reg in insn 327
changing reg in insn 328
changing reg in insn 331
changing reg in insn 333
changing reg in insn 332
changing reg in insn 333
changing reg in insn 335
changing reg in insn 336
changing reg in insn 339
changing reg in insn 340
changing reg in insn 343
changing reg in insn 345
changing reg in insn 344
changing reg in insn 345
changing reg in insn 348
changing reg in insn 349
changing reg in insn 353
changing reg in insn 354
changing reg in insn 357
changing reg in insn 359
changing reg in insn 358
changing reg in insn 359
changing reg in insn 361
changing reg in insn 362
changing reg in insn 365
changing reg in insn 366
changing reg in insn 369
changing reg in insn 371
changing reg in insn 370
changing reg in insn 371
changing reg in insn 374
changing reg in insn 375
changing reg in insn 379
changing reg in insn 380
changing reg in insn 383
changing reg in insn 385
changing reg in insn 384
changing reg in insn 385
changing reg in insn 386
changing reg in insn 387
changing reg in insn 388
changing reg in insn 389
changing reg in insn 391
changing reg in insn 392
changing reg in insn 395
changing reg in insn 397
changing reg in insn 396
changing reg in insn 397
changing reg in insn 400
changing reg in insn 401
changing reg in insn 404
changing reg in insn 405
changing reg in insn 408
changing reg in insn 410
changing reg in insn 409
changing reg in insn 410
changing reg in insn 411
changing reg in insn 412
changing reg in insn 414
changing reg in insn 415
changing reg in insn 418
changing reg in insn 420
changing reg in insn 419
changing reg in insn 420
changing reg in insn 423
changing reg in insn 424
changing reg in insn 427
changing reg in insn 428
changing reg in insn 431
changing reg in insn 433
changing reg in insn 432
changing reg in insn 433
changing reg in insn 435
changing reg in insn 436
changing reg in insn 439
changing reg in insn 440
changing reg in insn 443
changing reg in insn 445
changing reg in insn 444
changing reg in insn 445
changing reg in insn 448
changing reg in insn 449
changing reg in insn 453
changing reg in insn 454
changing reg in insn 457
changing reg in insn 459
changing reg in insn 458
changing reg in insn 459
changing reg in insn 461
changing reg in insn 462
changing reg in insn 465
changing reg in insn 466
changing reg in insn 469
changing reg in insn 471
changing reg in insn 470
changing reg in insn 471
changing reg in insn 474
changing reg in insn 475
changing reg in insn 479
changing reg in insn 480
changing reg in insn 483
changing reg in insn 485
changing reg in insn 484
changing reg in insn 485
changing reg in insn 486
changing reg in insn 487
changing reg in insn 490
changing reg in insn 491
changing reg in insn 488
changing reg in insn 489
changing reg in insn 494
changing reg in insn 495
changing reg in insn 492
changing reg in insn 493
changing reg in insn 496
changing reg in insn 497
changing reg in insn 500
changing reg in insn 501
changing reg in insn 504
changing reg in insn 506
changing reg in insn 505
changing reg in insn 506
changing reg in insn 507
changing reg in insn 508
changing reg in insn 510
changing reg in insn 511
changing reg in insn 514
changing reg in insn 516
changing reg in insn 515
changing reg in insn 516
changing reg in insn 518
changing reg in insn 519
changing reg in insn 521
changing reg in insn 522
changing reg in insn 525
changing reg in insn 527
changing reg in insn 526
changing reg in insn 527
changing reg in insn 529
changing reg in insn 530
changing reg in insn 533
changing reg in insn 534
changing reg in insn 537
changing reg in insn 539
changing reg in insn 538
changing reg in insn 539
changing reg in insn 543
changing reg in insn 544
changing reg in insn 542
changing reg in insn 545
changing reg in insn 546
changing reg in insn 549
changing reg in insn 550
changing reg in insn 553
changing reg in insn 555
changing reg in insn 554
changing reg in insn 555
changing reg in insn 556
changing reg in insn 557
changing reg in insn 559
changing reg in insn 560
changing reg in insn 563
changing reg in insn 565
changing reg in insn 564
changing reg in insn 565
changing reg in insn 567
changing reg in insn 568
changing reg in insn 570
changing reg in insn 571
changing reg in insn 574
changing reg in insn 576
changing reg in insn 575
changing reg in insn 576
changing reg in insn 578
changing reg in insn 579
changing reg in insn 582
changing reg in insn 583
changing reg in insn 586
changing reg in insn 588
changing reg in insn 587
changing reg in insn 588
changing reg in insn 592
changing reg in insn 593
changing reg in insn 591
changing reg in insn 594
changing reg in insn 595
changing reg in insn 598
changing reg in insn 599
changing reg in insn 597
changing reg in insn 598
changing reg in insn 600
changing reg in insn 601
changing reg in insn 604
changing reg in insn 605
changing reg in insn 603
changing reg in insn 604
changing reg in insn 606
changing reg in insn 607
changing reg in insn 609
changing reg in insn 610
changing reg in insn 613
changing reg in insn 614
changing reg in insn 617
changing reg in insn 618
changing reg in insn 619
changing reg in insn 620
changing reg in insn 622
changing reg in insn 623
changing reg in insn 626
changing reg in insn 627
changing reg in insn 630
changing reg in insn 631
changing reg in insn 632
changing reg in insn 633
changing reg in insn 634
changing reg in insn 635
changing reg in insn 637
changing reg in insn 638
changing reg in insn 640
changing reg in insn 641
changing reg in insn 645
changing reg in insn 646
changing reg in insn 647
changing reg in insn 648
changing reg in insn 650
changing reg in insn 651
changing reg in insn 653
changing reg in insn 654
changing reg in insn 658
changing reg in insn 659
changing reg in insn 672
changing reg in insn 674
changing reg in insn 673
changing reg in insn 675
deleting insn with uid = 719.
deleting insn with uid = 717.
deleting insn with uid = 720.
deleting insn with uid = 718.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 45.
verify found no changes in insn with uid = 119.
verify found no changes in insn with uid = 122.
verify found no changes in insn with uid = 679.


caltau

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 37 [r8] 38 [r9] 43 [r14]
;;  ref usage 	r0={21d,15u} r1={329d,323u} r2={135d,129u,2e} r3={1d,2u} r4={9d,4u} r5={11d,6u} r6={1d,169u} r7={25d,51u} r8={5d} r9={5d} r10={5d} r11={5d} r12={5d} r13={5d} r14={5d} r15={5d} r17={217d,8u} r18={5d} r19={5d} r20={1d,1u,15e} r21={71d,65u} r22={34d,28u} r23={6d} r24={6d} r25={6d} r26={6d} r27={6d} r28={6d} r29={5d} r30={5d} r31={5d} r32={5d} r33={5d} r34={5d} r35={5d} r36={5d} r37={8d,2u} r38={8d,2u} r39={5d} r40={5d} r43={1d,2u} r45={5d} r46={5d} r47={5d} r48={5d} r49={5d} r50={5d} r51={5d} r52={5d} r53={5d} r54={5d} r55={5d} r56={5d} r57={5d} r58={5d} r59={5d} r60={5d} r61={5d} r62={5d} r63={5d} r64={5d} r65={5d} r66={5d} r67={5d} r68={5d} r69={5d} r70={5d} r71={5d} r72={5d} r73={5d} r74={5d} r75={5d} r76={5d} r77={5d} r78={5d} r79={5d} r80={5d} 
;;    total ref usage 2012{1188d,807u,17e} in 659{654 regular + 5 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 7 [sp] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 412 413
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 taux+0 S8 A64])
        (reg:DI 5 di [ taux ])) "CALTAU.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 tauy+0 S8 A64])
        (reg:DI 4 si [ tauy ])) "CALTAU.f":1 85 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 706 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":83 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 706 7 8 2 (set (reg:DI 0 ax [633])
        (symbol_ref:DI ("egrid5.4154") [flags 0x202]  <var_decl 0x7fc26db2f510 egrid5>)) "CALTAU.f":83 85 {*movdi_internal}
     (nil))
(insn 8 706 707 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg:DI 0 ax [633])) "CALTAU.f":83 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 707 8 9 2 (set (reg:DI 0 ax [634])
        (symbol_ref:DI ("egrid4.4152") [flags 0x202]  <var_decl 0x7fc26db2f480 egrid4>)) "CALTAU.f":83 85 {*movdi_internal}
     (nil))
(insn 9 707 708 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg:DI 0 ax [634])) "CALTAU.f":83 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 708 9 10 2 (set (reg:DI 0 ax [635])
        (symbol_ref:DI ("egridv.4158") [flags 0x202]  <var_decl 0x7fc26db2f630 egridv>)) "CALTAU.f":83 85 {*movdi_internal}
     (nil))
(insn 10 708 709 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg:DI 0 ax [635])) "CALTAU.f":83 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 709 10 11 2 (set (reg:DI 0 ax [636])
        (symbol_ref:DI ("egridu.4156") [flags 0x202]  <var_decl 0x7fc26db2f5a0 egridu>)) "CALTAU.f":83 85 {*movdi_internal}
     (nil))
(insn 11 709 710 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg:DI 0 ax [636])) "CALTAU.f":83 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 710 11 12 2 (set (reg:DI 3 bx [637])
        (symbol_ref:DI ("el0.4162") [flags 0x202]  <var_decl 0x7fc26db2f750 el0>)) "CALTAU.f":83 85 {*movdi_internal}
     (nil))
(insn 12 710 13 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg:DI 3 bx [637])) "CALTAU.f":83 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 13 12 14 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fc26db31990 *.LC0>)) "CALTAU.f":83 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(insn 14 13 15 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fc26db31ab0 *.LC1>)) "CALTAU.f":83 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 15 14 16 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fc26db31b40 *.LC2>)) "CALTAU.f":83 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 72 [0x48])
        (nil)))
(insn 16 15 711 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fc26db31bd0 *.LC3>)) "CALTAU.f":83 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 80 [0x50])
        (nil)))
(insn 711 16 17 2 (set (reg:DI 0 ax [638])
        (const:DI (plus:DI (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fc26db18900 loops>)
                (const_int 9680 [0x25d0])))) "CALTAU.f":83 85 {*movdi_internal}
     (nil))
(insn 17 711 712 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (reg:DI 0 ax [638])) "CALTAU.f":83 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 88 [0x58])
        (nil)))
(insn 712 17 18 2 (set (reg:DI 43 r14 [639])
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fc26db11870 extra>)
                (const_int 13748784 [0xd1ca30])))) "CALTAU.f":83 85 {*movdi_internal}
     (nil))
(insn 18 712 19 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg:DI 43 r14 [639])) "CALTAU.f":83 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 96 [0x60])
        (nil)))
(insn 19 18 20 2 (set (reg:DI 38 r9)
        (const:DI (plus:DI (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fc26db21120 masks>)
                (const_int 355572 [0x56cf4])))) "CALTAU.f":83 85 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:DI 37 r8)
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fc26db11870 extra>)
                (const_int 9244872 [0x8d10c8])))) "CALTAU.f":83 85 {*movdi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fc26db27240 pvrbls>)
                (const_int 2251956 [0x225cb4])))) "CALTAU.f":83 85 {*movdi_internal}
     (nil))
(insn 22 21 23 2 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fc26db21120 masks>)
                (const_int 592620 [0x90aec])))) "CALTAU.f":83 85 {*movdi_internal}
     (nil))
(insn 23 22 24 2 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fc26db11870 extra>)
                (const_int 18589572 [0x11ba784])))) "CALTAU.f":83 85 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7fc26db18d80 mapot>)
                (const_int 4000244 [0x3d09f4])))) "CALTAU.f":83 85 {*movdi_internal}
     (nil))
(insn 25 24 26 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALTAU.f":83 88 {*movqi_internal}
     (nil))
(call_insn 26 25 27 2 (call (mem:QI (symbol_ref:DI ("clmax_") [flags 0x41]  <function_decl 0x7fc26db08600 clmax>) [0 clmax S1 A8])
        (const_int 96 [0x60])) "CALTAU.f":83 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 27 26 28 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 96 [0x60])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":83 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 28 27 713 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int -8 [0xfffffffffffffff8])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":85 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 8 [0x8])
        (nil)))
(insn 713 28 29 2 (set (reg:DI 0 ax [640])
        (symbol_ref:DI ("el.4160") [flags 0x202]  <var_decl 0x7fc26db2f6c0 el>)) "CALTAU.f":85 85 {*movdi_internal}
     (nil))
(insn 29 713 30 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg:DI 0 ax [640])) "CALTAU.f":85 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 16 [0x10])
        (nil)))
(insn 30 29 31 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fc26db31b40 *.LC2>)) "CALTAU.f":85 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 24 [0x18])
        (nil)))
(insn 31 30 32 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fc26db31bd0 *.LC3>)) "CALTAU.f":85 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 32 [0x20])
        (nil)))
(insn 32 31 33 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fc26db31990 *.LC0>)) "CALTAU.f":85 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 40 [0x28])
        (nil)))
(insn 33 32 34 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC4") [flags 0x2]  <var_decl 0x7fc26db31c60 *.LC4>)) "CALTAU.f":85 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 48 [0x30])
        (nil)))
(insn 34 33 714 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [8  S8 A64])
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fc26db31ab0 *.LC1>)) "CALTAU.f":85 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 56 [0x38])
        (nil)))
(note 714 34 35 2 NOTE_INSN_DELETED)
(insn 35 714 715 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg:DI 3 bx [641])) "CALTAU.f":85 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 64 [0x40])
        (nil)))
(insn 715 35 36 2 (set (reg:DI 0 ax [642])
        (const:DI (plus:DI (symbol_ref:DI ("masks_") [flags 0x202]  <var_decl 0x7fc26db21120 masks>)
                (const_int 592620 [0x90aec])))) "CALTAU.f":85 85 {*movdi_internal}
     (nil))
(insn 36 715 716 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg:DI 0 ax [642])) "CALTAU.f":85 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 72 [0x48])
        (nil)))
(note 716 36 37 2 NOTE_INSN_DELETED)
(insn 37 716 38 2 (set (mem/f:DI (pre_dec:DI (reg/f:DI 7 sp)) [3  S8 A64])
        (reg:DI 43 r14 [643])) "CALTAU.f":85 61 {*pushdi2_rex64}
     (expr_list:REG_ARGS_SIZE (const_int 80 [0x50])
        (nil)))
(insn 38 37 39 2 (set (reg:DI 38 r9)
        (const:DI (plus:DI (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fc26db27240 pvrbls>)
                (const_int 2251956 [0x225cb4])))) "CALTAU.f":85 85 {*movdi_internal}
     (nil))
(insn 39 38 40 2 (set (reg:DI 37 r8)
        (const:DI (plus:DI (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7fc26db18d80 mapot>)
                (const_int 4000012 [0x3d090c])))) "CALTAU.f":85 85 {*movdi_internal}
     (nil))
(insn 40 39 41 2 (set (reg:DI 2 cx)
        (const:DI (plus:DI (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7fc26db18d80 mapot>)
                (const_int 4000396 [0x3d0a8c])))) "CALTAU.f":85 85 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:DI 1 dx)
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fc26db11870 extra>)
                (const_int 18589572 [0x11ba784])))) "CALTAU.f":85 85 {*movdi_internal}
     (nil))
(insn 42 41 43 2 (set (reg:DI 4 si)
        (const:DI (plus:DI (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fc26db27e10 vrbls>)
                (const_int 9363396 [0x8edfc4])))) "CALTAU.f":85 85 {*movdi_internal}
     (nil))
(insn 43 42 44 2 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fc26db11870 extra>)
                (const_int 9244872 [0x8d10c8])))) "CALTAU.f":85 85 {*movdi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALTAU.f":85 88 {*movqi_internal}
     (nil))
(call_insn 45 44 46 2 (call (mem:QI (symbol_ref:DI ("mixlen_") [flags 0x41]  <function_decl 0x7fc26db08800 mixlen>) [0 mixlen S1 A8])
        (const_int 80 [0x50])) "CALTAU.f":85 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 46 45 47 2 (parallel [
            (set (reg/f:DI 7 sp)
                (plus:DI (reg/f:DI 7 sp)
                    (const_int 80 [0x50])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":85 222 {*adddi_1}
     (expr_list:REG_ARGS_SIZE (const_int 0 [0])
        (nil)))
(insn 47 46 48 2 (set (reg:SI 1 dx [orig:412 _337 ] [412])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fc26db21990 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALTAU.f":89 86 {*movsi_internal}
     (nil))
(insn 48 47 49 2 (set (reg:SI 0 ax [orig:413 _338 ] [413])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fc26db21990 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALTAU.f":89 86 {*movsi_internal}
     (nil))
(insn 49 48 112 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:412 _337 ] [412])) "CALTAU.f":89 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 413

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 413
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 413
;; lr  def 	 17 [flags] 414 420
(code_label 112 49 50 3 5 (nil) [1 uses])
(note 50 112 51 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 51 50 52 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:413 _338 ] [413]))) "CALTAU.f":89 11 {*cmpsi_1}
     (nil))
(insn 52 51 53 3 (set (reg:QI 1 dx [420])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALTAU.f":89 678 {*setcc_qi}
     (nil))
(insn 53 52 54 3 (set (reg:SI 1 dx [orig:414 _340 ] [414])
        (zero_extend:SI (reg:QI 1 dx [420]))) "CALTAU.f":89 140 {*zero_extendqisi2}
     (nil))
(insn 54 53 55 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:414 _340 ] [414])
            (const_int 0 [0]))) "CALTAU.f":89 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 55 54 56 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 694)
            (pc))) "CALTAU.f":89 682 {*jcc}
     (nil)
 -> 694)
;;  succ:       15
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 413

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 413
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 56 55 57 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 57 56 106 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALTAU.f":90 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 413

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 413
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 415 421
(code_label 106 57 58 5 4 (nil) [1 uses])
(note 58 106 59 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALTAU.f":90 11 {*cmpsi_1}
     (nil))
(insn 60 59 61 5 (set (reg:QI 1 dx [421])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALTAU.f":90 678 {*setcc_qi}
     (nil))
(insn 61 60 62 5 (set (reg:SI 1 dx [orig:415 _342 ] [415])
        (zero_extend:SI (reg:QI 1 dx [421]))) "CALTAU.f":90 140 {*zero_extendqisi2}
     (nil))
(insn 62 61 63 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:415 _342 ] [415])
            (const_int 0 [0]))) "CALTAU.f":90 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 63 62 64 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 697)
            (pc))) "CALTAU.f":90 682 {*jcc}
     (nil)
 -> 697)
;;  succ:       16
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 413

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 16, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 413
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 422 423 424 425 426 427 428 429 430 431 432 433 434 435
(note 64 63 65 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 65 64 66 6 (set (reg:SI 1 dx [422])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":91 86 {*movsi_internal}
     (nil))
(insn 66 65 67 6 (set (reg:DI 1 dx [orig:87 _1 ] [87])
        (sign_extend:DI (reg:SI 1 dx [422]))) "CALTAU.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 67 66 68 6 (parallel [
            (set (reg:DI 2 cx [orig:88 _2 ] [88])
                (mult:DI (reg:DI 1 dx [orig:87 _1 ] [87])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":91 349 {*muldi3_1}
     (nil))
(insn 68 67 69 6 (set (reg:SI 1 dx [423])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":91 86 {*movsi_internal}
     (nil))
(insn 69 68 70 6 (set (reg:DI 1 dx [orig:89 _3 ] [89])
        (sign_extend:DI (reg:SI 1 dx [423]))) "CALTAU.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 70 69 71 6 (parallel [
            (set (reg:DI 1 dx [orig:90 _4 ] [90])
                (plus:DI (reg:DI 1 dx [orig:89 _3 ] [89])
                    (reg:DI 2 cx [orig:88 _2 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":91 222 {*adddi_1}
     (nil))
(insn 71 70 72 6 (parallel [
            (set (reg:DI 2 cx [orig:91 _5 ] [91])
                (plus:DI (reg:DI 1 dx [orig:90 _4 ] [90])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":91 222 {*adddi_1}
     (nil))
(insn 72 71 73 6 (set (reg/f:DI 1 dx [424])
        (symbol_ref:DI ("egridu.4156") [flags 0x202]  <var_decl 0x7fc26db2f5a0 egridu>)) "CALTAU.f":91 85 {*movdi_internal}
     (nil))
(insn 73 72 74 6 (set (reg:SF 21 xmm0 [425])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALTAU.f":91 131 {*movsf_internal}
     (nil))
(insn 74 73 75 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:91 _5 ] [91])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [424])) [2 egridu S4 A32])
        (reg:SF 21 xmm0 [425])) "CALTAU.f":91 131 {*movsf_internal}
     (nil))
(insn 75 74 76 6 (set (reg:SI 1 dx [426])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":92 86 {*movsi_internal}
     (nil))
(insn 76 75 77 6 (set (reg:DI 1 dx [orig:92 _6 ] [92])
        (sign_extend:DI (reg:SI 1 dx [426]))) "CALTAU.f":92 149 {*extendsidi2_rex64}
     (nil))
(insn 77 76 78 6 (parallel [
            (set (reg:DI 2 cx [orig:93 _7 ] [93])
                (mult:DI (reg:DI 1 dx [orig:92 _6 ] [92])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":92 349 {*muldi3_1}
     (nil))
(insn 78 77 79 6 (set (reg:SI 1 dx [427])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":92 86 {*movsi_internal}
     (nil))
(insn 79 78 80 6 (set (reg:DI 1 dx [orig:94 _8 ] [94])
        (sign_extend:DI (reg:SI 1 dx [427]))) "CALTAU.f":92 149 {*extendsidi2_rex64}
     (nil))
(insn 80 79 81 6 (parallel [
            (set (reg:DI 1 dx [orig:95 _9 ] [95])
                (plus:DI (reg:DI 1 dx [orig:94 _8 ] [94])
                    (reg:DI 2 cx [orig:93 _7 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":92 222 {*adddi_1}
     (nil))
(insn 81 80 82 6 (parallel [
            (set (reg:DI 2 cx [orig:96 _10 ] [96])
                (plus:DI (reg:DI 1 dx [orig:95 _9 ] [95])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":92 222 {*adddi_1}
     (nil))
(insn 82 81 83 6 (set (reg/f:DI 1 dx [428])
        (symbol_ref:DI ("egridv.4158") [flags 0x202]  <var_decl 0x7fc26db2f630 egridv>)) "CALTAU.f":92 85 {*movdi_internal}
     (nil))
(insn 83 82 84 6 (set (reg:SF 21 xmm0 [429])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALTAU.f":92 131 {*movsf_internal}
     (nil))
(insn 84 83 85 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:96 _10 ] [96])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [428])) [2 egridv S4 A32])
        (reg:SF 21 xmm0 [429])) "CALTAU.f":92 131 {*movsf_internal}
     (nil))
(insn 85 84 86 6 (set (reg:SI 1 dx [430])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":93 86 {*movsi_internal}
     (nil))
(insn 86 85 87 6 (set (reg:DI 1 dx [orig:97 _11 ] [97])
        (sign_extend:DI (reg:SI 1 dx [430]))) "CALTAU.f":93 149 {*extendsidi2_rex64}
     (nil))
(insn 87 86 88 6 (parallel [
            (set (reg:DI 2 cx [orig:98 _12 ] [98])
                (mult:DI (reg:DI 1 dx [orig:97 _11 ] [97])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":93 349 {*muldi3_1}
     (nil))
(insn 88 87 89 6 (set (reg:SI 1 dx [431])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":93 86 {*movsi_internal}
     (nil))
(insn 89 88 90 6 (set (reg:DI 1 dx [orig:99 _13 ] [99])
        (sign_extend:DI (reg:SI 1 dx [431]))) "CALTAU.f":93 149 {*extendsidi2_rex64}
     (nil))
(insn 90 89 91 6 (parallel [
            (set (reg:DI 1 dx [orig:100 _14 ] [100])
                (plus:DI (reg:DI 1 dx [orig:99 _13 ] [99])
                    (reg:DI 2 cx [orig:98 _12 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":93 222 {*adddi_1}
     (nil))
(insn 91 90 92 6 (parallel [
            (set (reg:DI 2 cx [orig:101 _15 ] [101])
                (plus:DI (reg:DI 1 dx [orig:100 _14 ] [100])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":93 222 {*adddi_1}
     (nil))
(insn 92 91 93 6 (set (reg:SF 21 xmm0 [orig:102 _16 ] [102])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7fc26db215a0 options>) [2 options.spval+0 S4 A128])) "CALTAU.f":1 131 {*movsf_internal}
     (nil))
(insn 93 92 94 6 (set (reg/f:DI 1 dx [432])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 taux+0 S8 A64])) "CALTAU.f":93 85 {*movdi_internal}
     (nil))
(insn 94 93 95 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:101 _15 ] [101])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [432])) [2 *taux_345(D) S4 A32])
        (reg:SF 21 xmm0 [orig:102 _16 ] [102])) "CALTAU.f":93 131 {*movsf_internal}
     (nil))
(insn 95 94 96 6 (set (reg:SI 1 dx [433])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":94 86 {*movsi_internal}
     (nil))
(insn 96 95 97 6 (set (reg:DI 1 dx [orig:103 _17 ] [103])
        (sign_extend:DI (reg:SI 1 dx [433]))) "CALTAU.f":94 149 {*extendsidi2_rex64}
     (nil))
(insn 97 96 98 6 (parallel [
            (set (reg:DI 2 cx [orig:104 _18 ] [104])
                (mult:DI (reg:DI 1 dx [orig:103 _17 ] [103])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":94 349 {*muldi3_1}
     (nil))
(insn 98 97 99 6 (set (reg:SI 1 dx [434])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":94 86 {*movsi_internal}
     (nil))
(insn 99 98 100 6 (set (reg:DI 1 dx [orig:105 _19 ] [105])
        (sign_extend:DI (reg:SI 1 dx [434]))) "CALTAU.f":94 149 {*extendsidi2_rex64}
     (nil))
(insn 100 99 101 6 (parallel [
            (set (reg:DI 1 dx [orig:106 _20 ] [106])
                (plus:DI (reg:DI 1 dx [orig:105 _19 ] [105])
                    (reg:DI 2 cx [orig:104 _18 ] [104])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":94 222 {*adddi_1}
     (nil))
(insn 101 100 102 6 (parallel [
            (set (reg:DI 2 cx [orig:107 _21 ] [107])
                (plus:DI (reg:DI 1 dx [orig:106 _20 ] [106])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":94 222 {*adddi_1}
     (nil))
(insn 102 101 103 6 (set (reg:SF 21 xmm0 [orig:108 _22 ] [108])
        (mem/c:SF (symbol_ref:DI ("options_") [flags 0x2]  <var_decl 0x7fc26db215a0 options>) [2 options.spval+0 S4 A128])) "CALTAU.f":1 131 {*movsf_internal}
     (nil))
(insn 103 102 104 6 (set (reg/f:DI 1 dx [435])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 tauy+0 S8 A64])) "CALTAU.f":94 85 {*movdi_internal}
     (nil))
(insn 104 103 105 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:107 _21 ] [107])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [435])) [2 *tauy_347(D) S4 A32])
        (reg:SF 21 xmm0 [orig:108 _22 ] [108])) "CALTAU.f":94 131 {*movsf_internal}
     (nil))
(insn 105 104 685 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":90 221 {*addsi_1}
     (nil))
(jump_insn 685 105 686 6 (set (pc)
        (label_ref 106)) "CALTAU.f":90 683 {jump}
     (nil)
 -> 106)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 413

(barrier 686 685 697)
;; basic block 16, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 413
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 697 686 696 16 12 (nil) [1 uses])
(note 696 697 698 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 698 696 109 16 (const_int 0 [0]) "CALTAU.f":94 718 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 413

;; basic block 7, loop depth 0, maybe hot
;;  prev block 16, next block 15, flags: (RTL, MODIFIED)
;;  pred:       16 [always]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 413
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 109 698 110 7 3 (nil) [0 uses])
(note 110 109 111 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 687 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":89 221 {*addsi_1}
     (nil))
(jump_insn 687 111 688 7 (set (pc)
        (label_ref 112)) "CALTAU.f":89 683 {jump}
     (nil)
 -> 112)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 413

(barrier 688 687 694)
;; basic block 15, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 694 688 693 15 11 (nil) [1 uses])
(note 693 694 695 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 695 693 115 15 (const_int 0 [0]) "CALTAU.f":90 718 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 15, next block 9, flags: (RTL, MODIFIED)
;;  pred:       15 [always]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 416 417
(code_label 115 695 116 8 2 (nil) [0 uses])
(note 116 115 117 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 117 116 118 8 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fc26db27240 pvrbls>)
                (const_int 592620 [0x90aec])))) "CALTAU.f":98 85 {*movdi_internal}
     (nil))
(insn 118 117 119 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALTAU.f":98 88 {*movqi_internal}
     (nil))
(call_insn 119 118 120 8 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7fc26db08900 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALTAU.f":98 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 120 119 121 8 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fc26db27240 pvrbls>)
                (const_int 711144 [0xad9e8])))) "CALTAU.f":99 85 {*movdi_internal}
     (nil))
(insn 121 120 122 8 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALTAU.f":99 88 {*movqi_internal}
     (nil))
(call_insn 122 121 123 8 (call (mem:QI (symbol_ref:DI ("exch_") [flags 0x41]  <function_decl 0x7fc26db08900 exch>) [0 exch S1 A8])
        (const_int 0 [0])) "CALTAU.f":99 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (nil))))
(insn 123 122 124 8 (set (reg:SI 1 dx [orig:416 _353 ] [416])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fc26db21990 parallel>)
                    (const_int 16 [0x10]))) [1 parallel.jsta_m+0 S4 A128])) "CALTAU.f":105 86 {*movsi_internal}
     (nil))
(insn 124 123 125 8 (set (reg:SI 0 ax [orig:417 _354 ] [417])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fc26db21990 parallel>)
                    (const_int 20 [0x14]))) [1 parallel.jend_m+0 S4 A32])) "CALTAU.f":105 86 {*movsi_internal}
     (nil))
(insn 125 124 667 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
        (reg:SI 1 dx [orig:416 _353 ] [416])) "CALTAU.f":105 86 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 417

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              13 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 417
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 417
;; lr  def 	 17 [flags] 418 436
(code_label 667 125 126 9 9 (nil) [1 uses])
(note 126 667 127 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 127 126 128 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
            (reg:SI 0 ax [orig:417 _354 ] [417]))) "CALTAU.f":105 11 {*cmpsi_1}
     (nil))
(insn 128 127 129 9 (set (reg:QI 1 dx [436])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALTAU.f":105 678 {*setcc_qi}
     (nil))
(insn 129 128 130 9 (set (reg:SI 1 dx [orig:418 _356 ] [418])
        (zero_extend:SI (reg:QI 1 dx [436]))) "CALTAU.f":105 140 {*zero_extendqisi2}
     (nil))
(insn 130 129 131 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:418 _356 ] [418])
            (const_int 0 [0]))) "CALTAU.f":105 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 131 130 132 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 700)
            (pc))) "CALTAU.f":105 682 {*jcc}
     (nil)
 -> 700)
;;  succ:       17
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 417

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 417
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 132 131 133 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 133 132 661 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
        (const_int 2 [0x2])) "CALTAU.f":106 86 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 417

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              12 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 417
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 419 437
(code_label 661 133 134 11 8 (nil) [1 uses])
(note 134 661 135 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALTAU.f":106 11 {*cmpsi_1}
     (nil))
(insn 136 135 137 11 (set (reg:QI 1 dx [437])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALTAU.f":106 678 {*setcc_qi}
     (nil))
(insn 137 136 138 11 (set (reg:SI 1 dx [orig:419 _358 ] [419])
        (zero_extend:SI (reg:QI 1 dx [437]))) "CALTAU.f":106 140 {*zero_extendqisi2}
     (nil))
(insn 138 137 139 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:419 _358 ] [419])
            (const_int 0 [0]))) "CALTAU.f":106 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 139 138 140 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 703)
            (pc))) "CALTAU.f":106 682 {*jcc}
     (nil)
 -> 703)
;;  succ:       18
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 417

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 18, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 417
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags
(note 140 139 141 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 141 140 142 12 (set (reg:SI 1 dx [438])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":108 86 {*movsi_internal}
     (nil))
(insn 142 141 143 12 (set (reg:DI 1 dx [orig:109 _23 ] [109])
        (sign_extend:DI (reg:SI 1 dx [438]))) "CALTAU.f":108 149 {*extendsidi2_rex64}
     (nil))
(insn 143 142 144 12 (parallel [
            (set (reg:DI 2 cx [orig:110 _24 ] [110])
                (mult:DI (reg:DI 1 dx [orig:109 _23 ] [109])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":108 349 {*muldi3_1}
     (nil))
(insn 144 143 145 12 (set (reg:SI 1 dx [439])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":108 86 {*movsi_internal}
     (nil))
(insn 145 144 146 12 (set (reg:DI 1 dx [orig:111 _25 ] [111])
        (sign_extend:DI (reg:SI 1 dx [439]))) "CALTAU.f":108 149 {*extendsidi2_rex64}
     (nil))
(insn 146 145 147 12 (parallel [
            (set (reg:DI 1 dx [orig:112 _26 ] [112])
                (plus:DI (reg:DI 1 dx [orig:111 _25 ] [111])
                    (reg:DI 2 cx [orig:110 _24 ] [110])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":108 222 {*adddi_1}
     (nil))
(insn 147 146 148 12 (parallel [
            (set (reg:DI 2 cx [orig:113 _27 ] [113])
                (plus:DI (reg:DI 1 dx [orig:112 _26 ] [112])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":108 222 {*adddi_1}
     (nil))
(insn 148 147 149 12 (set (reg/f:DI 1 dx [440])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fc26db18900 loops>)) "CALTAU.f":108 85 {*movdi_internal}
     (nil))
(insn 149 148 150 12 (parallel [
            (set (reg:DI 2 cx [441])
                (plus:DI (reg:DI 2 cx [orig:113 _27 ] [113])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":108 222 {*adddi_1}
     (nil))
(insn 150 149 151 12 (set (reg:SI 1 dx [442])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [441])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [440])) [1 loops.lmh S4 A32])) "CALTAU.f":108 86 {*movsi_internal}
     (nil))
(insn 151 150 152 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 lmhk+0 S4 A32])
        (reg:SI 1 dx [442])) "CALTAU.f":108 86 {*movsi_internal}
     (nil))
(insn 152 151 153 12 (set (reg:SI 1 dx [443])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 lmhk+0 S4 A32])) "CALTAU.f":112 86 {*movsi_internal}
     (nil))
(insn 153 152 154 12 (set (reg:DI 1 dx [orig:114 _28 ] [114])
        (sign_extend:DI (reg:SI 1 dx [443]))) "CALTAU.f":112 149 {*extendsidi2_rex64}
     (nil))
(insn 154 153 155 12 (parallel [
            (set (reg:DI 2 cx [orig:115 _29 ] [115])
                (mult:DI (reg:DI 1 dx [orig:114 _28 ] [114])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":112 349 {*muldi3_1}
     (nil))
(insn 155 154 156 12 (set (reg:SI 1 dx [444])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":112 86 {*movsi_internal}
     (nil))
(insn 156 155 157 12 (set (reg:DI 1 dx [orig:116 _30 ] [116])
        (sign_extend:DI (reg:SI 1 dx [444]))) "CALTAU.f":112 149 {*extendsidi2_rex64}
     (nil))
(insn 157 156 158 12 (parallel [
            (set (reg:DI 1 dx [orig:117 _31 ] [117])
                (mult:DI (reg:DI 1 dx [orig:116 _30 ] [116])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":112 349 {*muldi3_1}
     (nil))
(insn 158 157 159 12 (parallel [
            (set (reg:DI 2 cx [orig:118 _32 ] [118])
                (plus:DI (reg:DI 2 cx [orig:115 _29 ] [115])
                    (reg:DI 1 dx [orig:117 _31 ] [117])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":112 222 {*adddi_1}
     (nil))
(insn 159 158 160 12 (set (reg:SI 1 dx [445])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":112 86 {*movsi_internal}
     (nil))
(insn 160 159 161 12 (set (reg:DI 1 dx [orig:119 _33 ] [119])
        (sign_extend:DI (reg:SI 1 dx [445]))) "CALTAU.f":112 149 {*extendsidi2_rex64}
     (nil))
(insn 161 160 162 12 (parallel [
            (set (reg:DI 1 dx [orig:120 _34 ] [120])
                (plus:DI (reg:DI 1 dx [orig:119 _33 ] [119])
                    (reg:DI 2 cx [orig:118 _32 ] [118])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":112 222 {*adddi_1}
     (nil))
(insn 162 161 163 12 (parallel [
            (set (reg:DI 2 cx [orig:121 _35 ] [121])
                (plus:DI (reg:DI 1 dx [orig:120 _34 ] [120])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":112 222 {*adddi_1}
     (nil))
(insn 163 162 164 12 (set (reg/f:DI 1 dx [446])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fc26db11870 extra>)) "CALTAU.f":112 85 {*movdi_internal}
     (nil))
(insn 164 163 165 12 (parallel [
            (set (reg:DI 2 cx [447])
                (plus:DI (reg:DI 2 cx [orig:121 _35 ] [121])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":112 222 {*adddi_1}
     (nil))
(insn 165 164 166 12 (set (reg:SF 21 xmm0 [orig:122 _36 ] [122])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [447])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [446])) [2 extra.zint S4 A32])) "CALTAU.f":112 131 {*movsf_internal}
     (nil))
(insn 166 165 167 12 (set (reg:SI 1 dx [448])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 lmhk+0 S4 A32])) "CALTAU.f":112 86 {*movsi_internal}
     (nil))
(insn 167 166 168 12 (parallel [
            (set (reg:SI 1 dx [orig:123 _37 ] [123])
                (plus:SI (reg:SI 1 dx [448])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":112 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -12 [0xfffffffffffffff4])) [1 lmhk+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 168 167 169 12 (set (reg:DI 1 dx [orig:124 _38 ] [124])
        (sign_extend:DI (reg:SI 1 dx [orig:123 _37 ] [123]))) "CALTAU.f":112 149 {*extendsidi2_rex64}
     (nil))
(insn 169 168 170 12 (parallel [
            (set (reg:DI 2 cx [orig:125 _39 ] [125])
                (mult:DI (reg:DI 1 dx [orig:124 _38 ] [124])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":112 349 {*muldi3_1}
     (nil))
(insn 170 169 171 12 (set (reg:SI 1 dx [449])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":112 86 {*movsi_internal}
     (nil))
(insn 171 170 172 12 (set (reg:DI 1 dx [orig:126 _40 ] [126])
        (sign_extend:DI (reg:SI 1 dx [449]))) "CALTAU.f":112 149 {*extendsidi2_rex64}
     (nil))
(insn 172 171 173 12 (parallel [
            (set (reg:DI 1 dx [orig:127 _41 ] [127])
                (mult:DI (reg:DI 1 dx [orig:126 _40 ] [126])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":112 349 {*muldi3_1}
     (nil))
(insn 173 172 174 12 (parallel [
            (set (reg:DI 2 cx [orig:128 _42 ] [128])
                (plus:DI (reg:DI 2 cx [orig:125 _39 ] [125])
                    (reg:DI 1 dx [orig:127 _41 ] [127])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":112 222 {*adddi_1}
     (nil))
(insn 174 173 175 12 (set (reg:SI 1 dx [450])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":112 86 {*movsi_internal}
     (nil))
(insn 175 174 176 12 (set (reg:DI 1 dx [orig:129 _43 ] [129])
        (sign_extend:DI (reg:SI 1 dx [450]))) "CALTAU.f":112 149 {*extendsidi2_rex64}
     (nil))
(insn 176 175 177 12 (parallel [
            (set (reg:DI 1 dx [orig:130 _44 ] [130])
                (plus:DI (reg:DI 1 dx [orig:129 _43 ] [129])
                    (reg:DI 2 cx [orig:128 _42 ] [128])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":112 222 {*adddi_1}
     (nil))
(insn 177 176 178 12 (parallel [
            (set (reg:DI 2 cx [orig:131 _45 ] [131])
                (plus:DI (reg:DI 1 dx [orig:130 _44 ] [130])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":112 222 {*adddi_1}
     (nil))
(insn 178 177 179 12 (set (reg/f:DI 1 dx [451])
        (symbol_ref:DI ("extra_") [flags 0x202]  <var_decl 0x7fc26db11870 extra>)) "CALTAU.f":112 85 {*movdi_internal}
     (nil))
(insn 179 178 180 12 (parallel [
            (set (reg:DI 2 cx [452])
                (plus:DI (reg:DI 2 cx [orig:131 _45 ] [131])
                    (const_int 2311218 [0x234432])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":112 222 {*adddi_1}
     (nil))
(insn 180 179 181 12 (set (reg:SF 22 xmm1 [orig:132 _46 ] [132])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [452])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [451])) [2 extra.zint S4 A32])) "CALTAU.f":112 131 {*movsf_internal}
     (nil))
(insn 181 180 182 12 (set (reg:SF 21 xmm0 [orig:133 _47 ] [133])
        (minus:SF (reg:SF 21 xmm0 [orig:122 _36 ] [122])
            (reg:SF 22 xmm1 [orig:132 _46 ] [132]))) "CALTAU.f":112 841 {*fop_sf_1}
     (nil))
(insn 182 181 183 12 (set (reg:SF 22 xmm1 [orig:134 _48 ] [134])
        (reg:SF 21 xmm0 [orig:133 _47 ] [133])) "CALTAU.f":112 131 {*movsf_internal}
     (nil))
(insn 183 182 184 12 (set (reg:SF 21 xmm0 [454])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALTAU.f":112 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 184 183 185 12 (set (reg:SF 21 xmm0 [453])
        (mult:SF (reg:SF 21 xmm0 [454])
            (reg:SF 22 xmm1 [orig:134 _48 ] [134]))) "CALTAU.f":112 838 {*fop_sf_comm}
     (nil))
(insn 185 184 186 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 dz+0 S4 A32])
        (reg:SF 21 xmm0 [453])) "CALTAU.f":112 131 {*movsf_internal}
     (nil))
(insn 186 185 187 12 (set (reg:SI 1 dx [455])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":113 86 {*movsi_internal}
     (nil))
(insn 187 186 188 12 (set (reg:DI 1 dx [orig:135 _49 ] [135])
        (sign_extend:DI (reg:SI 1 dx [455]))) "CALTAU.f":113 149 {*extendsidi2_rex64}
     (nil))
(insn 188 187 189 12 (parallel [
            (set (reg:DI 2 cx [orig:136 _50 ] [136])
                (mult:DI (reg:DI 1 dx [orig:135 _49 ] [135])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":113 349 {*muldi3_1}
     (nil))
(insn 189 188 190 12 (set (reg:SI 1 dx [456])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":113 86 {*movsi_internal}
     (nil))
(insn 190 189 191 12 (set (reg:DI 1 dx [orig:137 _51 ] [137])
        (sign_extend:DI (reg:SI 1 dx [456]))) "CALTAU.f":113 149 {*extendsidi2_rex64}
     (nil))
(insn 191 190 192 12 (parallel [
            (set (reg:DI 1 dx [orig:138 _52 ] [138])
                (plus:DI (reg:DI 1 dx [orig:137 _51 ] [137])
                    (reg:DI 2 cx [orig:136 _50 ] [136])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":113 222 {*adddi_1}
     (nil))
(insn 192 191 193 12 (parallel [
            (set (reg:DI 2 cx [orig:139 _53 ] [139])
                (plus:DI (reg:DI 1 dx [orig:138 _52 ] [138])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":113 222 {*adddi_1}
     (nil))
(insn 193 192 194 12 (set (reg/f:DI 1 dx [457])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fc26db27240 pvrbls>)) "CALTAU.f":113 85 {*movdi_internal}
     (nil))
(insn 194 193 195 12 (set (reg:SF 22 xmm1 [orig:140 _54 ] [140])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:139 _53 ] [139])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [457])) [2 pvrbls.z0 S4 A32])) "CALTAU.f":113 131 {*movsf_internal}
     (nil))
(insn 195 194 196 12 (set (reg:SF 21 xmm0 [459])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 dz+0 S4 A32])) "CALTAU.f":113 131 {*movsf_internal}
     (nil))
(insn 196 195 197 12 (set (reg:SF 21 xmm0 [458])
        (minus:SF (reg:SF 21 xmm0 [459])
            (reg:SF 22 xmm1 [orig:140 _54 ] [140]))) "CALTAU.f":113 841 {*fop_sf_1}
     (nil))
(insn 197 196 198 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 dz+0 S4 A32])
        (reg:SF 21 xmm0 [458])) "CALTAU.f":113 131 {*movsf_internal}
     (nil))
(insn 198 197 199 12 (set (reg:SF 21 xmm0 [461])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALTAU.f":114 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 199 198 200 12 (set (reg:SF 21 xmm0 [460])
        (div:SF (reg:SF 21 xmm0 [461])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 dz+0 S4 A32]))) "CALTAU.f":114 841 {*fop_sf_1}
     (nil))
(insn 200 199 201 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 rdz+0 S4 A32])
        (reg:SF 21 xmm0 [460])) "CALTAU.f":114 131 {*movsf_internal}
     (nil))
(insn 201 200 202 12 (set (reg:SI 1 dx [462])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":118 86 {*movsi_internal}
     (nil))
(insn 202 201 203 12 (set (reg:DI 1 dx [orig:141 _55 ] [141])
        (sign_extend:DI (reg:SI 1 dx [462]))) "CALTAU.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 203 202 204 12 (parallel [
            (set (reg:DI 2 cx [orig:142 _56 ] [142])
                (mult:DI (reg:DI 1 dx [orig:141 _55 ] [141])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":118 349 {*muldi3_1}
     (nil))
(insn 204 203 205 12 (set (reg:SI 1 dx [463])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":118 86 {*movsi_internal}
     (nil))
(insn 205 204 206 12 (set (reg:DI 1 dx [orig:143 _57 ] [143])
        (sign_extend:DI (reg:SI 1 dx [463]))) "CALTAU.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 206 205 207 12 (parallel [
            (set (reg:DI 1 dx [orig:144 _58 ] [144])
                (plus:DI (reg:DI 1 dx [orig:143 _57 ] [143])
                    (reg:DI 2 cx [orig:142 _56 ] [142])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":118 222 {*adddi_1}
     (nil))
(insn 207 206 208 12 (parallel [
            (set (reg:DI 2 cx [orig:145 _59 ] [145])
                (plus:DI (reg:DI 1 dx [orig:144 _58 ] [144])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":118 222 {*adddi_1}
     (nil))
(insn 208 207 209 12 (set (reg/f:DI 1 dx [464])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fc26db27e10 vrbls>)) "CALTAU.f":118 85 {*movdi_internal}
     (nil))
(insn 209 208 210 12 (set (reg:SF 22 xmm1 [orig:146 _60 ] [146])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:145 _59 ] [145])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [464])) [2 vrbls.pd S4 A32])) "CALTAU.f":118 131 {*movsf_internal}
     (nil))
(insn 210 209 211 12 (set (reg/f:DI 1 dx [465])
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7fc26db18d80 mapot>)) "CALTAU.f":1 85 {*movdi_internal}
     (nil))
(insn 211 210 212 12 (set (reg:SF 21 xmm0 [orig:147 _61 ] [147])
        (mem/c:SF (plus:DI (reg/f:DI 1 dx [465])
                (const_int 4000012 [0x3d090c])) [2 mapot.pt+0 S4 A32])) "CALTAU.f":1 131 {*movsf_internal}
     (nil))
(insn 212 211 213 12 (set (reg:SF 21 xmm0 [466])
        (plus:SF (reg:SF 21 xmm0 [orig:147 _61 ] [147])
            (reg:SF 22 xmm1 [orig:146 _60 ] [146]))) "CALTAU.f":118 838 {*fop_sf_comm}
     (nil))
(insn 213 212 214 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 psfc+0 S4 A32])
        (reg:SF 21 xmm0 [466])) "CALTAU.f":118 131 {*movsf_internal}
     (nil))
(insn 214 213 215 12 (set (reg:SI 1 dx [467])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 lmhk+0 S4 A32])) "CALTAU.f":119 86 {*movsi_internal}
     (nil))
(insn 215 214 216 12 (set (reg:DI 1 dx [orig:148 _62 ] [148])
        (sign_extend:DI (reg:SI 1 dx [467]))) "CALTAU.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 216 215 217 12 (parallel [
            (set (reg:DI 2 cx [orig:149 _63 ] [149])
                (mult:DI (reg:DI 1 dx [orig:148 _62 ] [148])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":119 349 {*muldi3_1}
     (nil))
(insn 217 216 218 12 (set (reg:SI 1 dx [468])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":119 86 {*movsi_internal}
     (nil))
(insn 218 217 219 12 (set (reg:DI 1 dx [orig:150 _64 ] [150])
        (sign_extend:DI (reg:SI 1 dx [468]))) "CALTAU.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 219 218 220 12 (parallel [
            (set (reg:DI 1 dx [orig:151 _65 ] [151])
                (mult:DI (reg:DI 1 dx [orig:150 _64 ] [150])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":119 349 {*muldi3_1}
     (nil))
(insn 220 219 221 12 (parallel [
            (set (reg:DI 2 cx [orig:152 _66 ] [152])
                (plus:DI (reg:DI 2 cx [orig:149 _63 ] [149])
                    (reg:DI 1 dx [orig:151 _65 ] [151])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":119 222 {*adddi_1}
     (nil))
(insn 221 220 222 12 (set (reg:SI 1 dx [469])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":119 86 {*movsi_internal}
     (nil))
(insn 222 221 223 12 (set (reg:DI 1 dx [orig:153 _67 ] [153])
        (sign_extend:DI (reg:SI 1 dx [469]))) "CALTAU.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 223 222 224 12 (parallel [
            (set (reg:DI 1 dx [orig:154 _68 ] [154])
                (plus:DI (reg:DI 1 dx [orig:153 _67 ] [153])
                    (reg:DI 2 cx [orig:152 _66 ] [152])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":119 222 {*adddi_1}
     (nil))
(insn 224 223 225 12 (parallel [
            (set (reg:DI 2 cx [orig:155 _69 ] [155])
                (plus:DI (reg:DI 1 dx [orig:154 _68 ] [154])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":119 222 {*adddi_1}
     (nil))
(insn 225 224 226 12 (set (reg/f:DI 1 dx [470])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fc26db27e10 vrbls>)) "CALTAU.f":119 85 {*movdi_internal}
     (nil))
(insn 226 225 227 12 (parallel [
            (set (reg:DI 2 cx [471])
                (plus:DI (reg:DI 2 cx [orig:155 _69 ] [155])
                    (const_int 3466827 [0x34e64b])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":119 222 {*adddi_1}
     (nil))
(insn 227 226 228 12 (set (reg:SF 22 xmm1 [orig:156 _70 ] [156])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [471])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [470])) [2 vrbls.q S4 A32])) "CALTAU.f":119 131 {*movsf_internal}
     (nil))
(insn 228 227 229 12 (set (reg:SF 21 xmm0 [472])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALTAU.f":119 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 229 228 230 12 (set (reg:SF 22 xmm1 [orig:157 _71 ] [157])
        (mult:SF (reg:SF 22 xmm1 [orig:156 _70 ] [156])
            (reg:SF 21 xmm0 [472]))) "CALTAU.f":119 838 {*fop_sf_comm}
     (nil))
(insn 230 229 231 12 (set (reg:SF 21 xmm0 [473])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALTAU.f":119 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 231 230 232 12 (set (reg:SF 21 xmm0 [orig:158 _72 ] [158])
        (plus:SF (reg:SF 21 xmm0 [473])
            (reg:SF 22 xmm1 [orig:157 _71 ] [157]))) "CALTAU.f":119 838 {*fop_sf_comm}
     (nil))
(insn 232 231 233 12 (set (reg:SF 22 xmm1 [orig:159 _73 ] [159])
        (reg:SF 21 xmm0 [orig:158 _72 ] [158])) "CALTAU.f":119 131 {*movsf_internal}
     (nil))
(insn 233 232 234 12 (set (reg:SI 1 dx [474])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 lmhk+0 S4 A32])) "CALTAU.f":119 86 {*movsi_internal}
     (nil))
(insn 234 233 235 12 (set (reg:DI 1 dx [orig:160 _74 ] [160])
        (sign_extend:DI (reg:SI 1 dx [474]))) "CALTAU.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 235 234 236 12 (parallel [
            (set (reg:DI 2 cx [orig:161 _75 ] [161])
                (mult:DI (reg:DI 1 dx [orig:160 _74 ] [160])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":119 349 {*muldi3_1}
     (nil))
(insn 236 235 237 12 (set (reg:SI 1 dx [475])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":119 86 {*movsi_internal}
     (nil))
(insn 237 236 238 12 (set (reg:DI 1 dx [orig:162 _76 ] [162])
        (sign_extend:DI (reg:SI 1 dx [475]))) "CALTAU.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 238 237 239 12 (parallel [
            (set (reg:DI 1 dx [orig:163 _77 ] [163])
                (mult:DI (reg:DI 1 dx [orig:162 _76 ] [162])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":119 349 {*muldi3_1}
     (nil))
(insn 239 238 240 12 (parallel [
            (set (reg:DI 2 cx [orig:164 _78 ] [164])
                (plus:DI (reg:DI 2 cx [orig:161 _75 ] [161])
                    (reg:DI 1 dx [orig:163 _77 ] [163])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":119 222 {*adddi_1}
     (nil))
(insn 240 239 241 12 (set (reg:SI 1 dx [476])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":119 86 {*movsi_internal}
     (nil))
(insn 241 240 242 12 (set (reg:DI 1 dx [orig:165 _79 ] [165])
        (sign_extend:DI (reg:SI 1 dx [476]))) "CALTAU.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 242 241 243 12 (parallel [
            (set (reg:DI 1 dx [orig:166 _80 ] [166])
                (plus:DI (reg:DI 1 dx [orig:165 _79 ] [165])
                    (reg:DI 2 cx [orig:164 _78 ] [164])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":119 222 {*adddi_1}
     (nil))
(insn 243 242 244 12 (parallel [
            (set (reg:DI 2 cx [orig:167 _81 ] [167])
                (plus:DI (reg:DI 1 dx [orig:166 _80 ] [166])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":119 222 {*adddi_1}
     (nil))
(insn 244 243 245 12 (set (reg/f:DI 1 dx [477])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fc26db27e10 vrbls>)) "CALTAU.f":119 85 {*movdi_internal}
     (nil))
(insn 245 244 246 12 (parallel [
            (set (reg:DI 2 cx [478])
                (plus:DI (reg:DI 2 cx [orig:167 _81 ] [167])
                    (const_int 2340849 [0x23b7f1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":119 222 {*adddi_1}
     (nil))
(insn 246 245 247 12 (set (reg:SF 21 xmm0 [orig:168 _82 ] [168])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [478])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [477])) [2 vrbls.t S4 A32])) "CALTAU.f":119 131 {*movsf_internal}
     (nil))
(insn 247 246 248 12 (set (reg:SF 21 xmm0 [479])
        (mult:SF (reg:SF 21 xmm0 [orig:168 _82 ] [168])
            (reg:SF 22 xmm1 [orig:159 _73 ] [159]))) "CALTAU.f":119 838 {*fop_sf_comm}
     (nil))
(insn 248 247 249 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 tv+0 S4 A32])
        (reg:SF 21 xmm0 [479])) "CALTAU.f":119 131 {*movsf_internal}
     (nil))
(insn 249 248 250 12 (set (reg:SF 22 xmm1 [480])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 tv+0 S4 A32])) "CALTAU.f":120 131 {*movsf_internal}
     (nil))
(insn 250 249 251 12 (set (reg:SF 21 xmm0 [481])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALTAU.f":120 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.87040008544921875e+2 [0x0.8f851fp+9])
        (nil)))
(insn 251 250 252 12 (set (reg:SF 21 xmm0 [orig:169 _83 ] [169])
        (mult:SF (reg:SF 21 xmm0 [481])
            (reg:SF 22 xmm1 [480]))) "CALTAU.f":120 838 {*fop_sf_comm}
     (nil))
(insn 252 251 253 12 (set (reg:SF 22 xmm1 [orig:170 _84 ] [170])
        (reg:SF 21 xmm0 [orig:169 _83 ] [169])) "CALTAU.f":120 131 {*movsf_internal}
     (nil))
(insn 253 252 254 12 (set (reg:SF 21 xmm0 [483])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 psfc+0 S4 A32])) "CALTAU.f":120 131 {*movsf_internal}
     (nil))
(insn 254 253 255 12 (set (reg:SF 21 xmm0 [482])
        (div:SF (reg:SF 21 xmm0 [483])
            (reg:SF 22 xmm1 [orig:170 _84 ] [170]))) "CALTAU.f":120 841 {*fop_sf_1}
     (nil))
(insn 255 254 256 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 rho+0 S4 A32])
        (reg:SF 21 xmm0 [482])) "CALTAU.f":120 131 {*movsf_internal}
     (nil))
(insn 256 255 257 12 (set (reg:SI 1 dx [484])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":125 86 {*movsi_internal}
     (nil))
(insn 257 256 258 12 (set (reg:DI 1 dx [orig:171 _85 ] [171])
        (sign_extend:DI (reg:SI 1 dx [484]))) "CALTAU.f":125 149 {*extendsidi2_rex64}
     (nil))
(insn 258 257 259 12 (parallel [
            (set (reg:DI 2 cx [orig:172 _86 ] [172])
                (mult:DI (reg:DI 1 dx [orig:171 _85 ] [171])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":125 349 {*muldi3_1}
     (nil))
(insn 259 258 260 12 (set (reg:SI 1 dx [485])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":125 86 {*movsi_internal}
     (nil))
(insn 260 259 261 12 (set (reg:DI 1 dx [orig:173 _87 ] [173])
        (sign_extend:DI (reg:SI 1 dx [485]))) "CALTAU.f":125 149 {*extendsidi2_rex64}
     (nil))
(insn 261 260 262 12 (parallel [
            (set (reg:DI 1 dx [orig:174 _88 ] [174])
                (plus:DI (reg:DI 1 dx [orig:173 _87 ] [173])
                    (reg:DI 2 cx [orig:172 _86 ] [172])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":125 222 {*adddi_1}
     (nil))
(insn 262 261 263 12 (parallel [
            (set (reg:DI 2 cx [orig:175 _89 ] [175])
                (plus:DI (reg:DI 1 dx [orig:174 _88 ] [174])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":125 222 {*adddi_1}
     (nil))
(insn 263 262 264 12 (set (reg/f:DI 1 dx [486])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fc26db18900 loops>)) "CALTAU.f":125 85 {*movdi_internal}
     (nil))
(insn 264 263 265 12 (parallel [
            (set (reg:DI 2 cx [487])
                (plus:DI (reg:DI 2 cx [orig:175 _89 ] [175])
                    (const_int 2420 [0x974])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":125 222 {*adddi_1}
     (nil))
(insn 265 264 266 12 (set (reg:SI 1 dx [488])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [487])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [486])) [1 loops.lmh S4 A32])) "CALTAU.f":125 86 {*movsi_internal}
     (nil))
(insn 266 265 267 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 lmhk+0 S4 A32])
        (reg:SI 1 dx [488])) "CALTAU.f":125 86 {*movsi_internal}
     (nil))
(insn 267 266 268 12 (set (reg:SI 1 dx [489])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":126 86 {*movsi_internal}
     (nil))
(insn 268 267 269 12 (set (reg:DI 1 dx [orig:176 _90 ] [176])
        (sign_extend:DI (reg:SI 1 dx [489]))) "CALTAU.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 269 268 270 12 (parallel [
            (set (reg:DI 1 dx [orig:177 _91 ] [177])
                (plus:DI (reg:DI 1 dx [orig:176 _90 ] [176])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":126 222 {*adddi_1}
     (nil))
(insn 270 269 274 12 (set (reg:SI 2 cx [orig:178 _92 ] [178])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:177 _91 ] [177])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fc26db18630 indx>)) [1 indx.ihe S4 A32])) "CALTAU.f":126 86 {*movsi_internal}
     (nil))
(insn 274 270 275 12 (set (reg:SI 1 dx [493])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":126 86 {*movsi_internal}
     (nil))
(insn 275 274 276 12 (parallel [
            (set (reg:SI 1 dx [492])
                (plus:SI (reg:SI 1 dx [493])
                    (reg:SI 2 cx [orig:178 _92 ] [178])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":126 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:178 _92 ] [178])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 276 275 277 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 ie+0 S4 A32])
        (reg:SI 1 dx [492])) "CALTAU.f":126 86 {*movsi_internal}
     (nil))
(insn 277 276 278 12 (set (reg:SI 1 dx [494])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":127 86 {*movsi_internal}
     (nil))
(insn 278 277 279 12 (set (reg:DI 1 dx [orig:179 _93 ] [179])
        (sign_extend:DI (reg:SI 1 dx [494]))) "CALTAU.f":127 149 {*extendsidi2_rex64}
     (nil))
(insn 279 278 280 12 (parallel [
            (set (reg:DI 1 dx [orig:180 _94 ] [180])
                (plus:DI (reg:DI 1 dx [orig:179 _93 ] [179])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":127 222 {*adddi_1}
     (nil))
(insn 280 279 281 12 (parallel [
            (set (reg:DI 1 dx [495])
                (plus:DI (reg:DI 1 dx [orig:180 _94 ] [180])
                    (const_int 249 [0xf9])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":127 222 {*adddi_1}
     (nil))
(insn 281 280 285 12 (set (reg:SI 2 cx [orig:181 _95 ] [181])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [495])
                    (const_int 4 [0x4]))
                (symbol_ref:DI ("indx_") [flags 0x2]  <var_decl 0x7fc26db18630 indx>)) [1 indx.ihw S4 A32])) "CALTAU.f":127 86 {*movsi_internal}
     (nil))
(insn 285 281 286 12 (set (reg:SI 1 dx [499])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":127 86 {*movsi_internal}
     (nil))
(insn 286 285 287 12 (parallel [
            (set (reg:SI 1 dx [498])
                (plus:SI (reg:SI 1 dx [499])
                    (reg:SI 2 cx [orig:181 _95 ] [181])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":127 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (reg:SI 2 cx [orig:181 _95 ] [181])
            (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32]))
        (nil)))
(insn 287 286 288 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 iw+0 S4 A32])
        (reg:SI 1 dx [498])) "CALTAU.f":127 86 {*movsi_internal}
     (nil))
(insn 288 287 289 12 (set (reg:SI 1 dx [500])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 289 288 290 12 (set (reg:DI 1 dx [orig:182 _96 ] [182])
        (sign_extend:DI (reg:SI 1 dx [500]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 290 289 291 12 (parallel [
            (set (reg:DI 2 cx [orig:183 _97 ] [183])
                (mult:DI (reg:DI 1 dx [orig:182 _96 ] [182])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 349 {*muldi3_1}
     (nil))
(insn 291 290 292 12 (set (reg:SI 1 dx [501])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 ie+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 292 291 293 12 (set (reg:DI 1 dx [orig:184 _98 ] [184])
        (sign_extend:DI (reg:SI 1 dx [501]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 293 292 294 12 (parallel [
            (set (reg:DI 1 dx [orig:185 _99 ] [185])
                (plus:DI (reg:DI 1 dx [orig:184 _98 ] [184])
                    (reg:DI 2 cx [orig:183 _97 ] [183])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 294 293 295 12 (parallel [
            (set (reg:DI 2 cx [orig:186 _100 ] [186])
                (plus:DI (reg:DI 1 dx [orig:185 _99 ] [185])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 295 294 296 12 (set (reg/f:DI 1 dx [502])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fc26db18900 loops>)) "CALTAU.f":129 85 {*movdi_internal}
     (nil))
(insn 296 295 297 12 (parallel [
            (set (reg:DI 2 cx [503])
                (plus:DI (reg:DI 2 cx [orig:186 _100 ] [186])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 297 296 298 12 (set (reg:SI 1 dx [orig:187 _101 ] [187])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [503])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [502])) [1 loops.lmv S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 298 297 299 12 (set (reg:DI 1 dx [orig:188 _102 ] [188])
        (sign_extend:DI (reg:SI 1 dx [orig:187 _101 ] [187]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 299 298 300 12 (parallel [
            (set (reg:DI 2 cx [orig:189 _103 ] [189])
                (mult:DI (reg:DI 1 dx [orig:188 _102 ] [188])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 349 {*muldi3_1}
     (nil))
(insn 300 299 301 12 (set (reg:SI 1 dx [504])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 301 300 302 12 (set (reg:DI 1 dx [orig:190 _104 ] [190])
        (sign_extend:DI (reg:SI 1 dx [504]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 302 301 303 12 (parallel [
            (set (reg:DI 1 dx [orig:191 _105 ] [191])
                (mult:DI (reg:DI 1 dx [orig:190 _104 ] [190])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 349 {*muldi3_1}
     (nil))
(insn 303 302 304 12 (parallel [
            (set (reg:DI 2 cx [orig:192 _106 ] [192])
                (plus:DI (reg:DI 2 cx [orig:189 _103 ] [189])
                    (reg:DI 1 dx [orig:191 _105 ] [191])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 304 303 305 12 (set (reg:SI 1 dx [505])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 ie+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 305 304 306 12 (set (reg:DI 1 dx [orig:193 _107 ] [193])
        (sign_extend:DI (reg:SI 1 dx [505]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 306 305 307 12 (parallel [
            (set (reg:DI 1 dx [orig:194 _108 ] [194])
                (plus:DI (reg:DI 1 dx [orig:193 _107 ] [193])
                    (reg:DI 2 cx [orig:192 _106 ] [192])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 307 306 308 12 (parallel [
            (set (reg:DI 2 cx [orig:195 _109 ] [195])
                (plus:DI (reg:DI 1 dx [orig:194 _108 ] [194])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 308 307 309 12 (set (reg/f:DI 1 dx [506])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fc26db27e10 vrbls>)) "CALTAU.f":129 85 {*movdi_internal}
     (nil))
(insn 309 308 310 12 (parallel [
            (set (reg:DI 2 cx [507])
                (plus:DI (reg:DI 2 cx [orig:195 _109 ] [195])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 310 309 311 12 (set (reg:SF 22 xmm1 [orig:196 _110 ] [196])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [507])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [506])) [2 vrbls.u S4 A32])) "CALTAU.f":129 131 {*movsf_internal}
     (nil))
(insn 311 310 312 12 (set (reg:SI 1 dx [508])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 312 311 313 12 (set (reg:DI 1 dx [orig:197 _111 ] [197])
        (sign_extend:DI (reg:SI 1 dx [508]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 313 312 314 12 (parallel [
            (set (reg:DI 2 cx [orig:198 _112 ] [198])
                (mult:DI (reg:DI 1 dx [orig:197 _111 ] [197])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 349 {*muldi3_1}
     (nil))
(insn 314 313 315 12 (set (reg:SI 1 dx [509])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 iw+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 315 314 316 12 (set (reg:DI 1 dx [orig:199 _113 ] [199])
        (sign_extend:DI (reg:SI 1 dx [509]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 316 315 317 12 (parallel [
            (set (reg:DI 1 dx [orig:200 _114 ] [200])
                (plus:DI (reg:DI 1 dx [orig:199 _113 ] [199])
                    (reg:DI 2 cx [orig:198 _112 ] [198])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 317 316 318 12 (parallel [
            (set (reg:DI 2 cx [orig:201 _115 ] [201])
                (plus:DI (reg:DI 1 dx [orig:200 _114 ] [200])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 318 317 319 12 (set (reg/f:DI 1 dx [510])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fc26db18900 loops>)) "CALTAU.f":129 85 {*movdi_internal}
     (nil))
(insn 319 318 320 12 (parallel [
            (set (reg:DI 2 cx [511])
                (plus:DI (reg:DI 2 cx [orig:201 _115 ] [201])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 320 319 321 12 (set (reg:SI 1 dx [orig:202 _116 ] [202])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [511])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [510])) [1 loops.lmv S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 321 320 322 12 (set (reg:DI 1 dx [orig:203 _117 ] [203])
        (sign_extend:DI (reg:SI 1 dx [orig:202 _116 ] [202]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 322 321 323 12 (parallel [
            (set (reg:DI 2 cx [orig:204 _118 ] [204])
                (mult:DI (reg:DI 1 dx [orig:203 _117 ] [203])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 349 {*muldi3_1}
     (nil))
(insn 323 322 324 12 (set (reg:SI 1 dx [512])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 324 323 325 12 (set (reg:DI 1 dx [orig:205 _119 ] [205])
        (sign_extend:DI (reg:SI 1 dx [512]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 325 324 326 12 (parallel [
            (set (reg:DI 1 dx [orig:206 _120 ] [206])
                (mult:DI (reg:DI 1 dx [orig:205 _119 ] [205])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 349 {*muldi3_1}
     (nil))
(insn 326 325 327 12 (parallel [
            (set (reg:DI 2 cx [orig:207 _121 ] [207])
                (plus:DI (reg:DI 2 cx [orig:204 _118 ] [204])
                    (reg:DI 1 dx [orig:206 _120 ] [206])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 327 326 328 12 (set (reg:SI 1 dx [513])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 iw+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 328 327 329 12 (set (reg:DI 1 dx [orig:208 _122 ] [208])
        (sign_extend:DI (reg:SI 1 dx [513]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 329 328 330 12 (parallel [
            (set (reg:DI 1 dx [orig:209 _123 ] [209])
                (plus:DI (reg:DI 1 dx [orig:208 _122 ] [208])
                    (reg:DI 2 cx [orig:207 _121 ] [207])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 330 329 331 12 (parallel [
            (set (reg:DI 2 cx [orig:210 _124 ] [210])
                (plus:DI (reg:DI 1 dx [orig:209 _123 ] [209])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 331 330 332 12 (set (reg/f:DI 1 dx [514])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fc26db27e10 vrbls>)) "CALTAU.f":129 85 {*movdi_internal}
     (nil))
(insn 332 331 333 12 (parallel [
            (set (reg:DI 2 cx [515])
                (plus:DI (reg:DI 2 cx [orig:210 _124 ] [210])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 333 332 334 12 (set (reg:SF 21 xmm0 [orig:211 _125 ] [211])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [515])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [514])) [2 vrbls.u S4 A32])) "CALTAU.f":129 131 {*movsf_internal}
     (nil))
(insn 334 333 335 12 (set (reg:SF 22 xmm1 [orig:212 _126 ] [212])
        (plus:SF (reg:SF 22 xmm1 [orig:196 _110 ] [196])
            (reg:SF 21 xmm0 [orig:211 _125 ] [211]))) "CALTAU.f":129 838 {*fop_sf_comm}
     (nil))
(insn 335 334 336 12 (set (reg:SI 1 dx [516])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 336 335 337 12 (parallel [
            (set (reg:SI 1 dx [orig:213 _127 ] [213])
                (plus:SI (reg:SI 1 dx [516])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 337 336 338 12 (set (reg:DI 1 dx [orig:214 _128 ] [214])
        (sign_extend:DI (reg:SI 1 dx [orig:213 _127 ] [213]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 338 337 339 12 (parallel [
            (set (reg:DI 2 cx [orig:215 _129 ] [215])
                (mult:DI (reg:DI 1 dx [orig:214 _128 ] [214])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 349 {*muldi3_1}
     (nil))
(insn 339 338 340 12 (set (reg:SI 1 dx [517])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 340 339 341 12 (set (reg:DI 1 dx [orig:216 _130 ] [216])
        (sign_extend:DI (reg:SI 1 dx [517]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 341 340 342 12 (parallel [
            (set (reg:DI 1 dx [orig:217 _131 ] [217])
                (plus:DI (reg:DI 1 dx [orig:216 _130 ] [216])
                    (reg:DI 2 cx [orig:215 _129 ] [215])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 342 341 343 12 (parallel [
            (set (reg:DI 2 cx [orig:218 _132 ] [218])
                (plus:DI (reg:DI 1 dx [orig:217 _131 ] [217])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 343 342 344 12 (set (reg/f:DI 1 dx [518])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fc26db18900 loops>)) "CALTAU.f":129 85 {*movdi_internal}
     (nil))
(insn 344 343 345 12 (parallel [
            (set (reg:DI 2 cx [519])
                (plus:DI (reg:DI 2 cx [orig:218 _132 ] [218])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 345 344 346 12 (set (reg:SI 1 dx [orig:219 _133 ] [219])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [519])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [518])) [1 loops.lmv S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 346 345 347 12 (set (reg:DI 1 dx [orig:220 _134 ] [220])
        (sign_extend:DI (reg:SI 1 dx [orig:219 _133 ] [219]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 347 346 348 12 (parallel [
            (set (reg:DI 2 cx [orig:221 _135 ] [221])
                (mult:DI (reg:DI 1 dx [orig:220 _134 ] [220])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 349 {*muldi3_1}
     (nil))
(insn 348 347 349 12 (set (reg:SI 1 dx [520])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 349 348 350 12 (parallel [
            (set (reg:SI 1 dx [orig:222 _136 ] [222])
                (plus:SI (reg:SI 1 dx [520])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 350 349 351 12 (set (reg:DI 1 dx [orig:223 _137 ] [223])
        (sign_extend:DI (reg:SI 1 dx [orig:222 _136 ] [222]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 351 350 352 12 (parallel [
            (set (reg:DI 1 dx [orig:224 _138 ] [224])
                (mult:DI (reg:DI 1 dx [orig:223 _137 ] [223])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 349 {*muldi3_1}
     (nil))
(insn 352 351 353 12 (parallel [
            (set (reg:DI 2 cx [orig:225 _139 ] [225])
                (plus:DI (reg:DI 2 cx [orig:221 _135 ] [221])
                    (reg:DI 1 dx [orig:224 _138 ] [224])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 353 352 354 12 (set (reg:SI 1 dx [521])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 354 353 355 12 (set (reg:DI 1 dx [orig:226 _140 ] [226])
        (sign_extend:DI (reg:SI 1 dx [521]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 355 354 356 12 (parallel [
            (set (reg:DI 1 dx [orig:227 _141 ] [227])
                (plus:DI (reg:DI 1 dx [orig:226 _140 ] [226])
                    (reg:DI 2 cx [orig:225 _139 ] [225])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 356 355 357 12 (parallel [
            (set (reg:DI 2 cx [orig:228 _142 ] [228])
                (plus:DI (reg:DI 1 dx [orig:227 _141 ] [227])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 357 356 358 12 (set (reg/f:DI 1 dx [522])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fc26db27e10 vrbls>)) "CALTAU.f":129 85 {*movdi_internal}
     (nil))
(insn 358 357 359 12 (parallel [
            (set (reg:DI 2 cx [523])
                (plus:DI (reg:DI 2 cx [orig:228 _142 ] [228])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 359 358 360 12 (set (reg:SF 21 xmm0 [orig:229 _143 ] [229])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [523])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [522])) [2 vrbls.u S4 A32])) "CALTAU.f":129 131 {*movsf_internal}
     (nil))
(insn 360 359 361 12 (set (reg:SF 22 xmm1 [orig:230 _144 ] [230])
        (plus:SF (reg:SF 22 xmm1 [orig:212 _126 ] [212])
            (reg:SF 21 xmm0 [orig:229 _143 ] [229]))) "CALTAU.f":129 838 {*fop_sf_comm}
     (nil))
(insn 361 360 362 12 (set (reg:SI 1 dx [524])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 362 361 363 12 (parallel [
            (set (reg:SI 1 dx [orig:231 _145 ] [231])
                (plus:SI (reg:SI 1 dx [524])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 363 362 364 12 (set (reg:DI 1 dx [orig:232 _146 ] [232])
        (sign_extend:DI (reg:SI 1 dx [orig:231 _145 ] [231]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 364 363 365 12 (parallel [
            (set (reg:DI 2 cx [orig:233 _147 ] [233])
                (mult:DI (reg:DI 1 dx [orig:232 _146 ] [232])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 349 {*muldi3_1}
     (nil))
(insn 365 364 366 12 (set (reg:SI 1 dx [525])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 366 365 367 12 (set (reg:DI 1 dx [orig:234 _148 ] [234])
        (sign_extend:DI (reg:SI 1 dx [525]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 367 366 368 12 (parallel [
            (set (reg:DI 1 dx [orig:235 _149 ] [235])
                (plus:DI (reg:DI 1 dx [orig:234 _148 ] [234])
                    (reg:DI 2 cx [orig:233 _147 ] [233])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 368 367 369 12 (parallel [
            (set (reg:DI 2 cx [orig:236 _150 ] [236])
                (plus:DI (reg:DI 1 dx [orig:235 _149 ] [235])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 369 368 370 12 (set (reg/f:DI 1 dx [526])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fc26db18900 loops>)) "CALTAU.f":129 85 {*movdi_internal}
     (nil))
(insn 370 369 371 12 (parallel [
            (set (reg:DI 2 cx [527])
                (plus:DI (reg:DI 2 cx [orig:236 _150 ] [236])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 371 370 372 12 (set (reg:SI 1 dx [orig:237 _151 ] [237])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [527])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [526])) [1 loops.lmv S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 372 371 373 12 (set (reg:DI 1 dx [orig:238 _152 ] [238])
        (sign_extend:DI (reg:SI 1 dx [orig:237 _151 ] [237]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 373 372 374 12 (parallel [
            (set (reg:DI 2 cx [orig:239 _153 ] [239])
                (mult:DI (reg:DI 1 dx [orig:238 _152 ] [238])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 349 {*muldi3_1}
     (nil))
(insn 374 373 375 12 (set (reg:SI 1 dx [528])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 375 374 376 12 (parallel [
            (set (reg:SI 1 dx [orig:240 _154 ] [240])
                (plus:SI (reg:SI 1 dx [528])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 376 375 377 12 (set (reg:DI 1 dx [orig:241 _155 ] [241])
        (sign_extend:DI (reg:SI 1 dx [orig:240 _154 ] [240]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 377 376 378 12 (parallel [
            (set (reg:DI 1 dx [orig:242 _156 ] [242])
                (mult:DI (reg:DI 1 dx [orig:241 _155 ] [241])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 349 {*muldi3_1}
     (nil))
(insn 378 377 379 12 (parallel [
            (set (reg:DI 2 cx [orig:243 _157 ] [243])
                (plus:DI (reg:DI 2 cx [orig:239 _153 ] [239])
                    (reg:DI 1 dx [orig:242 _156 ] [242])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 379 378 380 12 (set (reg:SI 1 dx [529])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":129 86 {*movsi_internal}
     (nil))
(insn 380 379 381 12 (set (reg:DI 1 dx [orig:244 _158 ] [244])
        (sign_extend:DI (reg:SI 1 dx [529]))) "CALTAU.f":129 149 {*extendsidi2_rex64}
     (nil))
(insn 381 380 382 12 (parallel [
            (set (reg:DI 1 dx [orig:245 _159 ] [245])
                (plus:DI (reg:DI 1 dx [orig:244 _158 ] [244])
                    (reg:DI 2 cx [orig:243 _157 ] [243])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 382 381 383 12 (parallel [
            (set (reg:DI 2 cx [orig:246 _160 ] [246])
                (plus:DI (reg:DI 1 dx [orig:245 _159 ] [245])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 383 382 384 12 (set (reg/f:DI 1 dx [530])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fc26db27e10 vrbls>)) "CALTAU.f":129 85 {*movdi_internal}
     (nil))
(insn 384 383 385 12 (parallel [
            (set (reg:DI 2 cx [531])
                (plus:DI (reg:DI 2 cx [orig:246 _160 ] [246])
                    (const_int 88893 [0x15b3d])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":129 222 {*adddi_1}
     (nil))
(insn 385 384 386 12 (set (reg:SF 21 xmm0 [orig:247 _161 ] [247])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [531])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [530])) [2 vrbls.u S4 A32])) "CALTAU.f":129 131 {*movsf_internal}
     (nil))
(insn 386 385 387 12 (set (reg:SF 21 xmm0 [532])
        (plus:SF (reg:SF 21 xmm0 [orig:247 _161 ] [247])
            (reg:SF 22 xmm1 [orig:230 _144 ] [230]))) "CALTAU.f":129 838 {*fop_sf_comm}
     (nil))
(insn 387 386 388 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 sumu+0 S4 A32])
        (reg:SF 21 xmm0 [532])) "CALTAU.f":129 131 {*movsf_internal}
     (nil))
(insn 388 387 389 12 (set (reg:SI 1 dx [533])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 389 388 390 12 (set (reg:DI 1 dx [orig:248 _162 ] [248])
        (sign_extend:DI (reg:SI 1 dx [533]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 390 389 391 12 (parallel [
            (set (reg:DI 2 cx [orig:249 _163 ] [249])
                (mult:DI (reg:DI 1 dx [orig:248 _162 ] [248])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 349 {*muldi3_1}
     (nil))
(insn 391 390 392 12 (set (reg:SI 1 dx [534])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 ie+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 392 391 393 12 (set (reg:DI 1 dx [orig:250 _164 ] [250])
        (sign_extend:DI (reg:SI 1 dx [534]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 393 392 394 12 (parallel [
            (set (reg:DI 1 dx [orig:251 _165 ] [251])
                (plus:DI (reg:DI 1 dx [orig:250 _164 ] [250])
                    (reg:DI 2 cx [orig:249 _163 ] [249])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 394 393 395 12 (parallel [
            (set (reg:DI 2 cx [orig:252 _166 ] [252])
                (plus:DI (reg:DI 1 dx [orig:251 _165 ] [251])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 395 394 396 12 (set (reg/f:DI 1 dx [535])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fc26db18900 loops>)) "CALTAU.f":131 85 {*movdi_internal}
     (nil))
(insn 396 395 397 12 (parallel [
            (set (reg:DI 2 cx [536])
                (plus:DI (reg:DI 2 cx [orig:252 _166 ] [252])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 397 396 398 12 (set (reg:SI 1 dx [orig:253 _167 ] [253])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [536])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [535])) [1 loops.lmv S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 398 397 399 12 (set (reg:DI 1 dx [orig:254 _168 ] [254])
        (sign_extend:DI (reg:SI 1 dx [orig:253 _167 ] [253]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 399 398 400 12 (parallel [
            (set (reg:DI 2 cx [orig:255 _169 ] [255])
                (mult:DI (reg:DI 1 dx [orig:254 _168 ] [254])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 349 {*muldi3_1}
     (nil))
(insn 400 399 401 12 (set (reg:SI 1 dx [537])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 401 400 402 12 (set (reg:DI 1 dx [orig:256 _170 ] [256])
        (sign_extend:DI (reg:SI 1 dx [537]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 402 401 403 12 (parallel [
            (set (reg:DI 1 dx [orig:257 _171 ] [257])
                (mult:DI (reg:DI 1 dx [orig:256 _170 ] [256])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 349 {*muldi3_1}
     (nil))
(insn 403 402 404 12 (parallel [
            (set (reg:DI 2 cx [orig:258 _172 ] [258])
                (plus:DI (reg:DI 2 cx [orig:255 _169 ] [255])
                    (reg:DI 1 dx [orig:257 _171 ] [257])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 404 403 405 12 (set (reg:SI 1 dx [538])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 ie+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 405 404 406 12 (set (reg:DI 1 dx [orig:259 _173 ] [259])
        (sign_extend:DI (reg:SI 1 dx [538]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 406 405 407 12 (parallel [
            (set (reg:DI 1 dx [orig:260 _174 ] [260])
                (plus:DI (reg:DI 1 dx [orig:259 _173 ] [259])
                    (reg:DI 2 cx [orig:258 _172 ] [258])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 407 406 408 12 (parallel [
            (set (reg:DI 2 cx [orig:261 _175 ] [261])
                (plus:DI (reg:DI 1 dx [orig:260 _174 ] [260])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 408 407 409 12 (set (reg/f:DI 1 dx [539])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fc26db27e10 vrbls>)) "CALTAU.f":131 85 {*movdi_internal}
     (nil))
(insn 409 408 410 12 (parallel [
            (set (reg:DI 2 cx [540])
                (plus:DI (reg:DI 2 cx [orig:261 _175 ] [261])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 410 409 411 12 (set (reg:SF 22 xmm1 [orig:262 _176 ] [262])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [540])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [539])) [2 vrbls.v S4 A32])) "CALTAU.f":131 131 {*movsf_internal}
     (nil))
(insn 411 410 412 12 (set (reg:SI 1 dx [541])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 412 411 413 12 (set (reg:DI 1 dx [orig:263 _177 ] [263])
        (sign_extend:DI (reg:SI 1 dx [541]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 413 412 414 12 (parallel [
            (set (reg:DI 2 cx [orig:264 _178 ] [264])
                (mult:DI (reg:DI 1 dx [orig:263 _177 ] [263])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 349 {*muldi3_1}
     (nil))
(insn 414 413 415 12 (set (reg:SI 1 dx [542])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 iw+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 415 414 416 12 (set (reg:DI 1 dx [orig:265 _179 ] [265])
        (sign_extend:DI (reg:SI 1 dx [542]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 416 415 417 12 (parallel [
            (set (reg:DI 1 dx [orig:266 _180 ] [266])
                (plus:DI (reg:DI 1 dx [orig:265 _179 ] [265])
                    (reg:DI 2 cx [orig:264 _178 ] [264])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 417 416 418 12 (parallel [
            (set (reg:DI 2 cx [orig:267 _181 ] [267])
                (plus:DI (reg:DI 1 dx [orig:266 _180 ] [266])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 418 417 419 12 (set (reg/f:DI 1 dx [543])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fc26db18900 loops>)) "CALTAU.f":131 85 {*movdi_internal}
     (nil))
(insn 419 418 420 12 (parallel [
            (set (reg:DI 2 cx [544])
                (plus:DI (reg:DI 2 cx [orig:267 _181 ] [267])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 420 419 421 12 (set (reg:SI 1 dx [orig:268 _182 ] [268])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [544])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [543])) [1 loops.lmv S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 421 420 422 12 (set (reg:DI 1 dx [orig:269 _183 ] [269])
        (sign_extend:DI (reg:SI 1 dx [orig:268 _182 ] [268]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 422 421 423 12 (parallel [
            (set (reg:DI 2 cx [orig:270 _184 ] [270])
                (mult:DI (reg:DI 1 dx [orig:269 _183 ] [269])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 349 {*muldi3_1}
     (nil))
(insn 423 422 424 12 (set (reg:SI 1 dx [545])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 424 423 425 12 (set (reg:DI 1 dx [orig:271 _185 ] [271])
        (sign_extend:DI (reg:SI 1 dx [545]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 425 424 426 12 (parallel [
            (set (reg:DI 1 dx [orig:272 _186 ] [272])
                (mult:DI (reg:DI 1 dx [orig:271 _185 ] [271])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 349 {*muldi3_1}
     (nil))
(insn 426 425 427 12 (parallel [
            (set (reg:DI 2 cx [orig:273 _187 ] [273])
                (plus:DI (reg:DI 2 cx [orig:270 _184 ] [270])
                    (reg:DI 1 dx [orig:272 _186 ] [272])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 427 426 428 12 (set (reg:SI 1 dx [546])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 iw+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 428 427 429 12 (set (reg:DI 1 dx [orig:274 _188 ] [274])
        (sign_extend:DI (reg:SI 1 dx [546]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 429 428 430 12 (parallel [
            (set (reg:DI 1 dx [orig:275 _189 ] [275])
                (plus:DI (reg:DI 1 dx [orig:274 _188 ] [274])
                    (reg:DI 2 cx [orig:273 _187 ] [273])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 430 429 431 12 (parallel [
            (set (reg:DI 2 cx [orig:276 _190 ] [276])
                (plus:DI (reg:DI 1 dx [orig:275 _189 ] [275])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 431 430 432 12 (set (reg/f:DI 1 dx [547])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fc26db27e10 vrbls>)) "CALTAU.f":131 85 {*movdi_internal}
     (nil))
(insn 432 431 433 12 (parallel [
            (set (reg:DI 2 cx [548])
                (plus:DI (reg:DI 2 cx [orig:276 _190 ] [276])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 433 432 434 12 (set (reg:SF 21 xmm0 [orig:277 _191 ] [277])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [548])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [547])) [2 vrbls.v S4 A32])) "CALTAU.f":131 131 {*movsf_internal}
     (nil))
(insn 434 433 435 12 (set (reg:SF 22 xmm1 [orig:278 _192 ] [278])
        (plus:SF (reg:SF 22 xmm1 [orig:262 _176 ] [262])
            (reg:SF 21 xmm0 [orig:277 _191 ] [277]))) "CALTAU.f":131 838 {*fop_sf_comm}
     (nil))
(insn 435 434 436 12 (set (reg:SI 1 dx [549])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 436 435 437 12 (parallel [
            (set (reg:SI 1 dx [orig:279 _193 ] [279])
                (plus:SI (reg:SI 1 dx [549])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 437 436 438 12 (set (reg:DI 1 dx [orig:280 _194 ] [280])
        (sign_extend:DI (reg:SI 1 dx [orig:279 _193 ] [279]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 438 437 439 12 (parallel [
            (set (reg:DI 2 cx [orig:281 _195 ] [281])
                (mult:DI (reg:DI 1 dx [orig:280 _194 ] [280])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 349 {*muldi3_1}
     (nil))
(insn 439 438 440 12 (set (reg:SI 1 dx [550])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 440 439 441 12 (set (reg:DI 1 dx [orig:282 _196 ] [282])
        (sign_extend:DI (reg:SI 1 dx [550]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 441 440 442 12 (parallel [
            (set (reg:DI 1 dx [orig:283 _197 ] [283])
                (plus:DI (reg:DI 1 dx [orig:282 _196 ] [282])
                    (reg:DI 2 cx [orig:281 _195 ] [281])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 442 441 443 12 (parallel [
            (set (reg:DI 2 cx [orig:284 _198 ] [284])
                (plus:DI (reg:DI 1 dx [orig:283 _197 ] [283])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 443 442 444 12 (set (reg/f:DI 1 dx [551])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fc26db18900 loops>)) "CALTAU.f":131 85 {*movdi_internal}
     (nil))
(insn 444 443 445 12 (parallel [
            (set (reg:DI 2 cx [552])
                (plus:DI (reg:DI 2 cx [orig:284 _198 ] [284])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 445 444 446 12 (set (reg:SI 1 dx [orig:285 _199 ] [285])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [552])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [551])) [1 loops.lmv S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 446 445 447 12 (set (reg:DI 1 dx [orig:286 _200 ] [286])
        (sign_extend:DI (reg:SI 1 dx [orig:285 _199 ] [285]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 447 446 448 12 (parallel [
            (set (reg:DI 2 cx [orig:287 _201 ] [287])
                (mult:DI (reg:DI 1 dx [orig:286 _200 ] [286])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 349 {*muldi3_1}
     (nil))
(insn 448 447 449 12 (set (reg:SI 1 dx [553])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 449 448 450 12 (parallel [
            (set (reg:SI 1 dx [orig:288 _202 ] [288])
                (plus:SI (reg:SI 1 dx [553])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 450 449 451 12 (set (reg:DI 1 dx [orig:289 _203 ] [289])
        (sign_extend:DI (reg:SI 1 dx [orig:288 _202 ] [288]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 451 450 452 12 (parallel [
            (set (reg:DI 1 dx [orig:290 _204 ] [290])
                (mult:DI (reg:DI 1 dx [orig:289 _203 ] [289])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 349 {*muldi3_1}
     (nil))
(insn 452 451 453 12 (parallel [
            (set (reg:DI 2 cx [orig:291 _205 ] [291])
                (plus:DI (reg:DI 2 cx [orig:287 _201 ] [287])
                    (reg:DI 1 dx [orig:290 _204 ] [290])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 453 452 454 12 (set (reg:SI 1 dx [554])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 454 453 455 12 (set (reg:DI 1 dx [orig:292 _206 ] [292])
        (sign_extend:DI (reg:SI 1 dx [554]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 455 454 456 12 (parallel [
            (set (reg:DI 1 dx [orig:293 _207 ] [293])
                (plus:DI (reg:DI 1 dx [orig:292 _206 ] [292])
                    (reg:DI 2 cx [orig:291 _205 ] [291])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 456 455 457 12 (parallel [
            (set (reg:DI 2 cx [orig:294 _208 ] [294])
                (plus:DI (reg:DI 1 dx [orig:293 _207 ] [293])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 457 456 458 12 (set (reg/f:DI 1 dx [555])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fc26db27e10 vrbls>)) "CALTAU.f":131 85 {*movdi_internal}
     (nil))
(insn 458 457 459 12 (parallel [
            (set (reg:DI 2 cx [556])
                (plus:DI (reg:DI 2 cx [orig:294 _208 ] [294])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 459 458 460 12 (set (reg:SF 21 xmm0 [orig:295 _209 ] [295])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [556])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [555])) [2 vrbls.v S4 A32])) "CALTAU.f":131 131 {*movsf_internal}
     (nil))
(insn 460 459 461 12 (set (reg:SF 22 xmm1 [orig:296 _210 ] [296])
        (plus:SF (reg:SF 22 xmm1 [orig:278 _192 ] [278])
            (reg:SF 21 xmm0 [orig:295 _209 ] [295]))) "CALTAU.f":131 838 {*fop_sf_comm}
     (nil))
(insn 461 460 462 12 (set (reg:SI 1 dx [557])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 462 461 463 12 (parallel [
            (set (reg:SI 1 dx [orig:297 _211 ] [297])
                (plus:SI (reg:SI 1 dx [557])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 463 462 464 12 (set (reg:DI 1 dx [orig:298 _212 ] [298])
        (sign_extend:DI (reg:SI 1 dx [orig:297 _211 ] [297]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 464 463 465 12 (parallel [
            (set (reg:DI 2 cx [orig:299 _213 ] [299])
                (mult:DI (reg:DI 1 dx [orig:298 _212 ] [298])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 349 {*muldi3_1}
     (nil))
(insn 465 464 466 12 (set (reg:SI 1 dx [558])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 466 465 467 12 (set (reg:DI 1 dx [orig:300 _214 ] [300])
        (sign_extend:DI (reg:SI 1 dx [558]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 467 466 468 12 (parallel [
            (set (reg:DI 1 dx [orig:301 _215 ] [301])
                (plus:DI (reg:DI 1 dx [orig:300 _214 ] [300])
                    (reg:DI 2 cx [orig:299 _213 ] [299])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 468 467 469 12 (parallel [
            (set (reg:DI 2 cx [orig:302 _216 ] [302])
                (plus:DI (reg:DI 1 dx [orig:301 _215 ] [301])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 469 468 470 12 (set (reg/f:DI 1 dx [559])
        (symbol_ref:DI ("loops_") [flags 0x202]  <var_decl 0x7fc26db18900 loops>)) "CALTAU.f":131 85 {*movdi_internal}
     (nil))
(insn 470 469 471 12 (parallel [
            (set (reg:DI 2 cx [560])
                (plus:DI (reg:DI 2 cx [orig:302 _216 ] [302])
                    (const_int 32051 [0x7d33])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 471 470 472 12 (set (reg:SI 1 dx [orig:303 _217 ] [303])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [560])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [559])) [1 loops.lmv S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 472 471 473 12 (set (reg:DI 1 dx [orig:304 _218 ] [304])
        (sign_extend:DI (reg:SI 1 dx [orig:303 _217 ] [303]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 473 472 474 12 (parallel [
            (set (reg:DI 2 cx [orig:305 _219 ] [305])
                (mult:DI (reg:DI 1 dx [orig:304 _218 ] [304])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 349 {*muldi3_1}
     (nil))
(insn 474 473 475 12 (set (reg:SI 1 dx [561])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 475 474 476 12 (parallel [
            (set (reg:SI 1 dx [orig:306 _220 ] [306])
                (plus:SI (reg:SI 1 dx [561])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 476 475 477 12 (set (reg:DI 1 dx [orig:307 _221 ] [307])
        (sign_extend:DI (reg:SI 1 dx [orig:306 _220 ] [306]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 477 476 478 12 (parallel [
            (set (reg:DI 1 dx [orig:308 _222 ] [308])
                (mult:DI (reg:DI 1 dx [orig:307 _221 ] [307])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 349 {*muldi3_1}
     (nil))
(insn 478 477 479 12 (parallel [
            (set (reg:DI 2 cx [orig:309 _223 ] [309])
                (plus:DI (reg:DI 2 cx [orig:305 _219 ] [305])
                    (reg:DI 1 dx [orig:308 _222 ] [308])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 479 478 480 12 (set (reg:SI 1 dx [562])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":131 86 {*movsi_internal}
     (nil))
(insn 480 479 481 12 (set (reg:DI 1 dx [orig:310 _224 ] [310])
        (sign_extend:DI (reg:SI 1 dx [562]))) "CALTAU.f":131 149 {*extendsidi2_rex64}
     (nil))
(insn 481 480 482 12 (parallel [
            (set (reg:DI 1 dx [orig:311 _225 ] [311])
                (plus:DI (reg:DI 1 dx [orig:310 _224 ] [310])
                    (reg:DI 2 cx [orig:309 _223 ] [309])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 482 481 483 12 (parallel [
            (set (reg:DI 2 cx [orig:312 _226 ] [312])
                (plus:DI (reg:DI 1 dx [orig:311 _225 ] [311])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 483 482 484 12 (set (reg/f:DI 1 dx [563])
        (symbol_ref:DI ("vrbls_") [flags 0x202]  <var_decl 0x7fc26db27e10 vrbls>)) "CALTAU.f":131 85 {*movdi_internal}
     (nil))
(insn 484 483 485 12 (parallel [
            (set (reg:DI 2 cx [564])
                (plus:DI (reg:DI 2 cx [orig:312 _226 ] [312])
                    (const_int 1214871 [0x128997])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":131 222 {*adddi_1}
     (nil))
(insn 485 484 486 12 (set (reg:SF 21 xmm0 [orig:313 _227 ] [313])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [564])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [563])) [2 vrbls.v S4 A32])) "CALTAU.f":131 131 {*movsf_internal}
     (nil))
(insn 486 485 487 12 (set (reg:SF 21 xmm0 [565])
        (plus:SF (reg:SF 21 xmm0 [orig:313 _227 ] [313])
            (reg:SF 22 xmm1 [orig:296 _210 ] [296]))) "CALTAU.f":131 838 {*fop_sf_comm}
     (nil))
(insn 487 486 488 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 sumv+0 S4 A32])
        (reg:SF 21 xmm0 [565])) "CALTAU.f":131 131 {*movsf_internal}
     (nil))
(insn 488 487 489 12 (set (reg:SF 22 xmm1 [567])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [2 sumu+0 S4 A32])) "CALTAU.f":132 131 {*movsf_internal}
     (nil))
(insn 489 488 490 12 (set (reg:SF 21 xmm0 [568])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALTAU.f":132 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 490 489 491 12 (set (reg:SF 21 xmm0 [566])
        (mult:SF (reg:SF 21 xmm0 [568])
            (reg:SF 22 xmm1 [567]))) "CALTAU.f":132 838 {*fop_sf_comm}
     (nil))
(insn 491 490 492 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 ulmh+0 S4 A32])
        (reg:SF 21 xmm0 [566])) "CALTAU.f":132 131 {*movsf_internal}
     (nil))
(insn 492 491 493 12 (set (reg:SF 22 xmm1 [570])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [2 sumv+0 S4 A32])) "CALTAU.f":133 131 {*movsf_internal}
     (nil))
(insn 493 492 494 12 (set (reg:SF 21 xmm0 [571])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALTAU.f":133 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 494 493 495 12 (set (reg:SF 21 xmm0 [569])
        (mult:SF (reg:SF 21 xmm0 [571])
            (reg:SF 22 xmm1 [570]))) "CALTAU.f":133 838 {*fop_sf_comm}
     (nil))
(insn 495 494 496 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 vlmh+0 S4 A32])
        (reg:SF 21 xmm0 [569])) "CALTAU.f":133 131 {*movsf_internal}
     (nil))
(insn 496 495 497 12 (set (reg:SI 1 dx [572])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":137 86 {*movsi_internal}
     (nil))
(insn 497 496 498 12 (parallel [
            (set (reg:SI 1 dx [orig:314 _228 ] [314])
                (plus:SI (reg:SI 1 dx [572])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 498 497 499 12 (set (reg:DI 1 dx [orig:315 _229 ] [315])
        (sign_extend:DI (reg:SI 1 dx [orig:314 _228 ] [314]))) "CALTAU.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 499 498 500 12 (parallel [
            (set (reg:DI 2 cx [orig:316 _230 ] [316])
                (mult:DI (reg:DI 1 dx [orig:315 _229 ] [315])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 349 {*muldi3_1}
     (nil))
(insn 500 499 501 12 (set (reg:SI 1 dx [573])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":137 86 {*movsi_internal}
     (nil))
(insn 501 500 502 12 (set (reg:DI 1 dx [orig:317 _231 ] [317])
        (sign_extend:DI (reg:SI 1 dx [573]))) "CALTAU.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 502 501 503 12 (parallel [
            (set (reg:DI 1 dx [orig:318 _232 ] [318])
                (plus:DI (reg:DI 1 dx [orig:317 _231 ] [317])
                    (reg:DI 2 cx [orig:316 _230 ] [316])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 222 {*adddi_1}
     (nil))
(insn 503 502 504 12 (parallel [
            (set (reg:DI 2 cx [orig:319 _233 ] [319])
                (plus:DI (reg:DI 1 dx [orig:318 _232 ] [318])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 222 {*adddi_1}
     (nil))
(insn 504 503 505 12 (set (reg/f:DI 1 dx [574])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fc26db27240 pvrbls>)) "CALTAU.f":137 85 {*movdi_internal}
     (nil))
(insn 505 504 506 12 (parallel [
            (set (reg:DI 2 cx [575])
                (plus:DI (reg:DI 2 cx [orig:319 _233 ] [319])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 222 {*adddi_1}
     (nil))
(insn 506 505 507 12 (set (reg:SF 22 xmm1 [orig:320 _234 ] [320])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [575])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [574])) [2 pvrbls.uz0 S4 A32])) "CALTAU.f":137 131 {*movsf_internal}
     (nil))
(insn 507 506 508 12 (set (reg:SI 1 dx [576])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":137 86 {*movsi_internal}
     (nil))
(insn 508 507 509 12 (set (reg:DI 1 dx [orig:321 _235 ] [321])
        (sign_extend:DI (reg:SI 1 dx [576]))) "CALTAU.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 509 508 510 12 (parallel [
            (set (reg:DI 2 cx [orig:322 _236 ] [322])
                (mult:DI (reg:DI 1 dx [orig:321 _235 ] [321])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 349 {*muldi3_1}
     (nil))
(insn 510 509 511 12 (set (reg:SI 1 dx [577])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 iw+0 S4 A32])) "CALTAU.f":137 86 {*movsi_internal}
     (nil))
(insn 511 510 512 12 (set (reg:DI 1 dx [orig:323 _237 ] [323])
        (sign_extend:DI (reg:SI 1 dx [577]))) "CALTAU.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 512 511 513 12 (parallel [
            (set (reg:DI 1 dx [orig:324 _238 ] [324])
                (plus:DI (reg:DI 1 dx [orig:323 _237 ] [323])
                    (reg:DI 2 cx [orig:322 _236 ] [322])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 222 {*adddi_1}
     (nil))
(insn 513 512 514 12 (parallel [
            (set (reg:DI 2 cx [orig:325 _239 ] [325])
                (plus:DI (reg:DI 1 dx [orig:324 _238 ] [324])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 222 {*adddi_1}
     (nil))
(insn 514 513 515 12 (set (reg/f:DI 1 dx [578])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fc26db27240 pvrbls>)) "CALTAU.f":137 85 {*movdi_internal}
     (nil))
(insn 515 514 516 12 (parallel [
            (set (reg:DI 2 cx [579])
                (plus:DI (reg:DI 2 cx [orig:325 _239 ] [325])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 222 {*adddi_1}
     (nil))
(insn 516 515 517 12 (set (reg:SF 21 xmm0 [orig:326 _240 ] [326])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [579])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [578])) [2 pvrbls.uz0 S4 A32])) "CALTAU.f":137 131 {*movsf_internal}
     (nil))
(insn 517 516 518 12 (set (reg:SF 22 xmm1 [orig:327 _241 ] [327])
        (plus:SF (reg:SF 22 xmm1 [orig:320 _234 ] [320])
            (reg:SF 21 xmm0 [orig:326 _240 ] [326]))) "CALTAU.f":137 838 {*fop_sf_comm}
     (nil))
(insn 518 517 519 12 (set (reg:SI 1 dx [580])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":137 86 {*movsi_internal}
     (nil))
(insn 519 518 520 12 (set (reg:DI 1 dx [orig:328 _242 ] [328])
        (sign_extend:DI (reg:SI 1 dx [580]))) "CALTAU.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 520 519 521 12 (parallel [
            (set (reg:DI 2 cx [orig:329 _243 ] [329])
                (mult:DI (reg:DI 1 dx [orig:328 _242 ] [328])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 349 {*muldi3_1}
     (nil))
(insn 521 520 522 12 (set (reg:SI 1 dx [581])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 ie+0 S4 A32])) "CALTAU.f":137 86 {*movsi_internal}
     (nil))
(insn 522 521 523 12 (set (reg:DI 1 dx [orig:330 _244 ] [330])
        (sign_extend:DI (reg:SI 1 dx [581]))) "CALTAU.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 523 522 524 12 (parallel [
            (set (reg:DI 1 dx [orig:331 _245 ] [331])
                (plus:DI (reg:DI 1 dx [orig:330 _244 ] [330])
                    (reg:DI 2 cx [orig:329 _243 ] [329])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 222 {*adddi_1}
     (nil))
(insn 524 523 525 12 (parallel [
            (set (reg:DI 2 cx [orig:332 _246 ] [332])
                (plus:DI (reg:DI 1 dx [orig:331 _245 ] [331])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 222 {*adddi_1}
     (nil))
(insn 525 524 526 12 (set (reg/f:DI 1 dx [582])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fc26db27240 pvrbls>)) "CALTAU.f":137 85 {*movdi_internal}
     (nil))
(insn 526 525 527 12 (parallel [
            (set (reg:DI 2 cx [583])
                (plus:DI (reg:DI 2 cx [orig:332 _246 ] [332])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 222 {*adddi_1}
     (nil))
(insn 527 526 528 12 (set (reg:SF 21 xmm0 [orig:333 _247 ] [333])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [583])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [582])) [2 pvrbls.uz0 S4 A32])) "CALTAU.f":137 131 {*movsf_internal}
     (nil))
(insn 528 527 529 12 (set (reg:SF 22 xmm1 [orig:334 _248 ] [334])
        (plus:SF (reg:SF 22 xmm1 [orig:327 _241 ] [327])
            (reg:SF 21 xmm0 [orig:333 _247 ] [333]))) "CALTAU.f":137 838 {*fop_sf_comm}
     (nil))
(insn 529 528 530 12 (set (reg:SI 1 dx [584])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":137 86 {*movsi_internal}
     (nil))
(insn 530 529 531 12 (parallel [
            (set (reg:SI 1 dx [orig:335 _249 ] [335])
                (plus:SI (reg:SI 1 dx [584])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 531 530 532 12 (set (reg:DI 1 dx [orig:336 _250 ] [336])
        (sign_extend:DI (reg:SI 1 dx [orig:335 _249 ] [335]))) "CALTAU.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 532 531 533 12 (parallel [
            (set (reg:DI 2 cx [orig:337 _251 ] [337])
                (mult:DI (reg:DI 1 dx [orig:336 _250 ] [336])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 349 {*muldi3_1}
     (nil))
(insn 533 532 534 12 (set (reg:SI 1 dx [585])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":137 86 {*movsi_internal}
     (nil))
(insn 534 533 535 12 (set (reg:DI 1 dx [orig:338 _252 ] [338])
        (sign_extend:DI (reg:SI 1 dx [585]))) "CALTAU.f":137 149 {*extendsidi2_rex64}
     (nil))
(insn 535 534 536 12 (parallel [
            (set (reg:DI 1 dx [orig:339 _253 ] [339])
                (plus:DI (reg:DI 1 dx [orig:338 _252 ] [338])
                    (reg:DI 2 cx [orig:337 _251 ] [337])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 222 {*adddi_1}
     (nil))
(insn 536 535 537 12 (parallel [
            (set (reg:DI 2 cx [orig:340 _254 ] [340])
                (plus:DI (reg:DI 1 dx [orig:339 _253 ] [339])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 222 {*adddi_1}
     (nil))
(insn 537 536 538 12 (set (reg/f:DI 1 dx [586])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fc26db27240 pvrbls>)) "CALTAU.f":137 85 {*movdi_internal}
     (nil))
(insn 538 537 539 12 (parallel [
            (set (reg:DI 2 cx [587])
                (plus:DI (reg:DI 2 cx [orig:340 _254 ] [340])
                    (const_int 148155 [0x242bb])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":137 222 {*adddi_1}
     (nil))
(insn 539 538 540 12 (set (reg:SF 21 xmm0 [orig:341 _255 ] [341])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [587])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [586])) [2 pvrbls.uz0 S4 A32])) "CALTAU.f":137 131 {*movsf_internal}
     (nil))
(insn 540 539 541 12 (set (reg:SF 21 xmm0 [orig:342 _256 ] [342])
        (plus:SF (reg:SF 21 xmm0 [orig:341 _255 ] [341])
            (reg:SF 22 xmm1 [orig:334 _248 ] [334]))) "CALTAU.f":137 838 {*fop_sf_comm}
     (nil))
(insn 541 540 542 12 (set (reg:SF 22 xmm1 [orig:343 _257 ] [343])
        (reg:SF 21 xmm0 [orig:342 _256 ] [342])) "CALTAU.f":137 131 {*movsf_internal}
     (nil))
(insn 542 541 543 12 (set (reg:SF 21 xmm0 [589])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALTAU.f":137 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 543 542 544 12 (set (reg:SF 21 xmm0 [588])
        (mult:SF (reg:SF 21 xmm0 [589])
            (reg:SF 22 xmm1 [orig:343 _257 ] [343]))) "CALTAU.f":137 838 {*fop_sf_comm}
     (nil))
(insn 544 543 545 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [2 uz0h+0 S4 A32])
        (reg:SF 21 xmm0 [588])) "CALTAU.f":137 131 {*movsf_internal}
     (nil))
(insn 545 544 546 12 (set (reg:SI 1 dx [590])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":138 86 {*movsi_internal}
     (nil))
(insn 546 545 547 12 (parallel [
            (set (reg:SI 1 dx [orig:344 _258 ] [344])
                (plus:SI (reg:SI 1 dx [590])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int -1 [0xffffffffffffffff]))
        (nil)))
(insn 547 546 548 12 (set (reg:DI 1 dx [orig:345 _259 ] [345])
        (sign_extend:DI (reg:SI 1 dx [orig:344 _258 ] [344]))) "CALTAU.f":138 149 {*extendsidi2_rex64}
     (nil))
(insn 548 547 549 12 (parallel [
            (set (reg:DI 2 cx [orig:346 _260 ] [346])
                (mult:DI (reg:DI 1 dx [orig:345 _259 ] [345])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 349 {*muldi3_1}
     (nil))
(insn 549 548 550 12 (set (reg:SI 1 dx [591])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":138 86 {*movsi_internal}
     (nil))
(insn 550 549 551 12 (set (reg:DI 1 dx [orig:347 _261 ] [347])
        (sign_extend:DI (reg:SI 1 dx [591]))) "CALTAU.f":138 149 {*extendsidi2_rex64}
     (nil))
(insn 551 550 552 12 (parallel [
            (set (reg:DI 1 dx [orig:348 _262 ] [348])
                (plus:DI (reg:DI 1 dx [orig:347 _261 ] [347])
                    (reg:DI 2 cx [orig:346 _260 ] [346])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 222 {*adddi_1}
     (nil))
(insn 552 551 553 12 (parallel [
            (set (reg:DI 2 cx [orig:349 _263 ] [349])
                (plus:DI (reg:DI 1 dx [orig:348 _262 ] [348])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 222 {*adddi_1}
     (nil))
(insn 553 552 554 12 (set (reg/f:DI 1 dx [592])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fc26db27240 pvrbls>)) "CALTAU.f":138 85 {*movdi_internal}
     (nil))
(insn 554 553 555 12 (parallel [
            (set (reg:DI 2 cx [593])
                (plus:DI (reg:DI 2 cx [orig:349 _263 ] [349])
                    (const_int 177786 [0x2b67a])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 222 {*adddi_1}
     (nil))
(insn 555 554 556 12 (set (reg:SF 22 xmm1 [orig:350 _264 ] [350])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [593])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [592])) [2 pvrbls.vz0 S4 A32])) "CALTAU.f":138 131 {*movsf_internal}
     (nil))
(insn 556 555 557 12 (set (reg:SI 1 dx [594])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":138 86 {*movsi_internal}
     (nil))
(insn 557 556 558 12 (set (reg:DI 1 dx [orig:351 _265 ] [351])
        (sign_extend:DI (reg:SI 1 dx [594]))) "CALTAU.f":138 149 {*extendsidi2_rex64}
     (nil))
(insn 558 557 559 12 (parallel [
            (set (reg:DI 2 cx [orig:352 _266 ] [352])
                (mult:DI (reg:DI 1 dx [orig:351 _265 ] [351])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 349 {*muldi3_1}
     (nil))
(insn 559 558 560 12 (set (reg:SI 1 dx [595])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 iw+0 S4 A32])) "CALTAU.f":138 86 {*movsi_internal}
     (nil))
(insn 560 559 561 12 (set (reg:DI 1 dx [orig:353 _267 ] [353])
        (sign_extend:DI (reg:SI 1 dx [595]))) "CALTAU.f":138 149 {*extendsidi2_rex64}
     (nil))
(insn 561 560 562 12 (parallel [
            (set (reg:DI 1 dx [orig:354 _268 ] [354])
                (plus:DI (reg:DI 1 dx [orig:353 _267 ] [353])
                    (reg:DI 2 cx [orig:352 _266 ] [352])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 222 {*adddi_1}
     (nil))
(insn 562 561 563 12 (parallel [
            (set (reg:DI 2 cx [orig:355 _269 ] [355])
                (plus:DI (reg:DI 1 dx [orig:354 _268 ] [354])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 222 {*adddi_1}
     (nil))
(insn 563 562 564 12 (set (reg/f:DI 1 dx [596])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fc26db27240 pvrbls>)) "CALTAU.f":138 85 {*movdi_internal}
     (nil))
(insn 564 563 565 12 (parallel [
            (set (reg:DI 2 cx [597])
                (plus:DI (reg:DI 2 cx [orig:355 _269 ] [355])
                    (const_int 177786 [0x2b67a])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 222 {*adddi_1}
     (nil))
(insn 565 564 566 12 (set (reg:SF 21 xmm0 [orig:356 _270 ] [356])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [597])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [596])) [2 pvrbls.vz0 S4 A32])) "CALTAU.f":138 131 {*movsf_internal}
     (nil))
(insn 566 565 567 12 (set (reg:SF 22 xmm1 [orig:357 _271 ] [357])
        (plus:SF (reg:SF 22 xmm1 [orig:350 _264 ] [350])
            (reg:SF 21 xmm0 [orig:356 _270 ] [356]))) "CALTAU.f":138 838 {*fop_sf_comm}
     (nil))
(insn 567 566 568 12 (set (reg:SI 1 dx [598])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":138 86 {*movsi_internal}
     (nil))
(insn 568 567 569 12 (set (reg:DI 1 dx [orig:358 _272 ] [358])
        (sign_extend:DI (reg:SI 1 dx [598]))) "CALTAU.f":138 149 {*extendsidi2_rex64}
     (nil))
(insn 569 568 570 12 (parallel [
            (set (reg:DI 2 cx [orig:359 _273 ] [359])
                (mult:DI (reg:DI 1 dx [orig:358 _272 ] [358])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 349 {*muldi3_1}
     (nil))
(insn 570 569 571 12 (set (reg:SI 1 dx [599])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 ie+0 S4 A32])) "CALTAU.f":138 86 {*movsi_internal}
     (nil))
(insn 571 570 572 12 (set (reg:DI 1 dx [orig:360 _274 ] [360])
        (sign_extend:DI (reg:SI 1 dx [599]))) "CALTAU.f":138 149 {*extendsidi2_rex64}
     (nil))
(insn 572 571 573 12 (parallel [
            (set (reg:DI 1 dx [orig:361 _275 ] [361])
                (plus:DI (reg:DI 1 dx [orig:360 _274 ] [360])
                    (reg:DI 2 cx [orig:359 _273 ] [359])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 222 {*adddi_1}
     (nil))
(insn 573 572 574 12 (parallel [
            (set (reg:DI 2 cx [orig:362 _276 ] [362])
                (plus:DI (reg:DI 1 dx [orig:361 _275 ] [361])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 222 {*adddi_1}
     (nil))
(insn 574 573 575 12 (set (reg/f:DI 1 dx [600])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fc26db27240 pvrbls>)) "CALTAU.f":138 85 {*movdi_internal}
     (nil))
(insn 575 574 576 12 (parallel [
            (set (reg:DI 2 cx [601])
                (plus:DI (reg:DI 2 cx [orig:362 _276 ] [362])
                    (const_int 177786 [0x2b67a])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 222 {*adddi_1}
     (nil))
(insn 576 575 577 12 (set (reg:SF 21 xmm0 [orig:363 _277 ] [363])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [601])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [600])) [2 pvrbls.vz0 S4 A32])) "CALTAU.f":138 131 {*movsf_internal}
     (nil))
(insn 577 576 578 12 (set (reg:SF 22 xmm1 [orig:364 _278 ] [364])
        (plus:SF (reg:SF 22 xmm1 [orig:357 _271 ] [357])
            (reg:SF 21 xmm0 [orig:363 _277 ] [363]))) "CALTAU.f":138 838 {*fop_sf_comm}
     (nil))
(insn 578 577 579 12 (set (reg:SI 1 dx [602])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":138 86 {*movsi_internal}
     (nil))
(insn 579 578 580 12 (parallel [
            (set (reg:SI 1 dx [orig:365 _279 ] [365])
                (plus:SI (reg:SI 1 dx [602])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 221 {*addsi_1}
     (expr_list:REG_EQUAL (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (const_int 1 [0x1]))
        (nil)))
(insn 580 579 581 12 (set (reg:DI 1 dx [orig:366 _280 ] [366])
        (sign_extend:DI (reg:SI 1 dx [orig:365 _279 ] [365]))) "CALTAU.f":138 149 {*extendsidi2_rex64}
     (nil))
(insn 581 580 582 12 (parallel [
            (set (reg:DI 2 cx [orig:367 _281 ] [367])
                (mult:DI (reg:DI 1 dx [orig:366 _280 ] [366])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 349 {*muldi3_1}
     (nil))
(insn 582 581 583 12 (set (reg:SI 1 dx [603])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":138 86 {*movsi_internal}
     (nil))
(insn 583 582 584 12 (set (reg:DI 1 dx [orig:368 _282 ] [368])
        (sign_extend:DI (reg:SI 1 dx [603]))) "CALTAU.f":138 149 {*extendsidi2_rex64}
     (nil))
(insn 584 583 585 12 (parallel [
            (set (reg:DI 1 dx [orig:369 _283 ] [369])
                (plus:DI (reg:DI 1 dx [orig:368 _282 ] [368])
                    (reg:DI 2 cx [orig:367 _281 ] [367])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 222 {*adddi_1}
     (nil))
(insn 585 584 586 12 (parallel [
            (set (reg:DI 2 cx [orig:370 _284 ] [370])
                (plus:DI (reg:DI 1 dx [orig:369 _283 ] [369])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 222 {*adddi_1}
     (nil))
(insn 586 585 587 12 (set (reg/f:DI 1 dx [604])
        (symbol_ref:DI ("pvrbls_") [flags 0x202]  <var_decl 0x7fc26db27240 pvrbls>)) "CALTAU.f":138 85 {*movdi_internal}
     (nil))
(insn 587 586 588 12 (parallel [
            (set (reg:DI 2 cx [605])
                (plus:DI (reg:DI 2 cx [orig:370 _284 ] [370])
                    (const_int 177786 [0x2b67a])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":138 222 {*adddi_1}
     (nil))
(insn 588 587 589 12 (set (reg:SF 21 xmm0 [orig:371 _285 ] [371])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [605])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [604])) [2 pvrbls.vz0 S4 A32])) "CALTAU.f":138 131 {*movsf_internal}
     (nil))
(insn 589 588 590 12 (set (reg:SF 21 xmm0 [orig:372 _286 ] [372])
        (plus:SF (reg:SF 21 xmm0 [orig:371 _285 ] [371])
            (reg:SF 22 xmm1 [orig:364 _278 ] [364]))) "CALTAU.f":138 838 {*fop_sf_comm}
     (nil))
(insn 590 589 591 12 (set (reg:SF 22 xmm1 [orig:373 _287 ] [373])
        (reg:SF 21 xmm0 [orig:372 _286 ] [372])) "CALTAU.f":138 131 {*movsf_internal}
     (nil))
(insn 591 590 592 12 (set (reg:SF 21 xmm0 [607])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALTAU.f":138 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.5e-1 [0x0.8p-1])
        (nil)))
(insn 592 591 593 12 (set (reg:SF 21 xmm0 [606])
        (mult:SF (reg:SF 21 xmm0 [607])
            (reg:SF 22 xmm1 [orig:373 _287 ] [373]))) "CALTAU.f":138 838 {*fop_sf_comm}
     (nil))
(insn 593 592 594 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [2 vz0h+0 S4 A32])
        (reg:SF 21 xmm0 [606])) "CALTAU.f":138 131 {*movsf_internal}
     (nil))
(insn 594 593 595 12 (set (reg:SF 21 xmm0 [608])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 ulmh+0 S4 A32])) "CALTAU.f":142 131 {*movsf_internal}
     (nil))
(insn 595 594 596 12 (set (reg:SF 21 xmm0 [orig:374 _288 ] [374])
        (minus:SF (reg:SF 21 xmm0 [608])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -76 [0xffffffffffffffb4])) [2 uz0h+0 S4 A32]))) "CALTAU.f":142 841 {*fop_sf_1}
     (nil))
(insn 596 595 597 12 (set (reg:SF 22 xmm1 [orig:375 _289 ] [375])
        (reg:SF 21 xmm0 [orig:374 _288 ] [374])) "CALTAU.f":142 131 {*movsf_internal}
     (nil))
(insn 597 596 598 12 (set (reg:SF 21 xmm0 [610])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 rdz+0 S4 A32])) "CALTAU.f":142 131 {*movsf_internal}
     (nil))
(insn 598 597 599 12 (set (reg:SF 21 xmm0 [609])
        (mult:SF (reg:SF 21 xmm0 [610])
            (reg:SF 22 xmm1 [orig:375 _289 ] [375]))) "CALTAU.f":142 838 {*fop_sf_comm}
     (nil))
(insn 599 598 600 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [2 deludz+0 S4 A32])
        (reg:SF 21 xmm0 [609])) "CALTAU.f":142 131 {*movsf_internal}
     (nil))
(insn 600 599 601 12 (set (reg:SF 21 xmm0 [611])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [2 vlmh+0 S4 A32])) "CALTAU.f":143 131 {*movsf_internal}
     (nil))
(insn 601 600 602 12 (set (reg:SF 21 xmm0 [orig:376 _290 ] [376])
        (minus:SF (reg:SF 21 xmm0 [611])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [2 vz0h+0 S4 A32]))) "CALTAU.f":143 841 {*fop_sf_1}
     (nil))
(insn 602 601 603 12 (set (reg:SF 22 xmm1 [orig:377 _291 ] [377])
        (reg:SF 21 xmm0 [orig:376 _290 ] [376])) "CALTAU.f":143 131 {*movsf_internal}
     (nil))
(insn 603 602 604 12 (set (reg:SF 21 xmm0 [613])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 rdz+0 S4 A32])) "CALTAU.f":143 131 {*movsf_internal}
     (nil))
(insn 604 603 605 12 (set (reg:SF 21 xmm0 [612])
        (mult:SF (reg:SF 21 xmm0 [613])
            (reg:SF 22 xmm1 [orig:377 _291 ] [377]))) "CALTAU.f":143 838 {*fop_sf_comm}
     (nil))
(insn 605 604 606 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [2 delvdz+0 S4 A32])
        (reg:SF 21 xmm0 [612])) "CALTAU.f":143 131 {*movsf_internal}
     (nil))
(insn 606 605 607 12 (set (reg:SI 1 dx [614])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 lmhk+0 S4 A32])) "CALTAU.f":147 86 {*movsi_internal}
     (nil))
(insn 607 606 608 12 (set (reg:DI 1 dx [orig:378 _292 ] [378])
        (sign_extend:DI (reg:SI 1 dx [614]))) "CALTAU.f":147 149 {*extendsidi2_rex64}
     (nil))
(insn 608 607 609 12 (parallel [
            (set (reg:DI 2 cx [orig:379 _293 ] [379])
                (mult:DI (reg:DI 1 dx [orig:378 _292 ] [378])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":147 349 {*muldi3_1}
     (nil))
(insn 609 608 610 12 (set (reg:SI 1 dx [615])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":147 86 {*movsi_internal}
     (nil))
(insn 610 609 611 12 (set (reg:DI 1 dx [orig:380 _294 ] [380])
        (sign_extend:DI (reg:SI 1 dx [615]))) "CALTAU.f":147 149 {*extendsidi2_rex64}
     (nil))
(insn 611 610 612 12 (parallel [
            (set (reg:DI 1 dx [orig:381 _295 ] [381])
                (mult:DI (reg:DI 1 dx [orig:380 _294 ] [380])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":147 349 {*muldi3_1}
     (nil))
(insn 612 611 613 12 (parallel [
            (set (reg:DI 2 cx [orig:382 _296 ] [382])
                (plus:DI (reg:DI 2 cx [orig:379 _293 ] [379])
                    (reg:DI 1 dx [orig:381 _295 ] [381])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":147 222 {*adddi_1}
     (nil))
(insn 613 612 614 12 (set (reg:SI 1 dx [616])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":147 86 {*movsi_internal}
     (nil))
(insn 614 613 615 12 (set (reg:DI 1 dx [orig:383 _297 ] [383])
        (sign_extend:DI (reg:SI 1 dx [616]))) "CALTAU.f":147 149 {*extendsidi2_rex64}
     (nil))
(insn 615 614 616 12 (parallel [
            (set (reg:DI 1 dx [orig:384 _298 ] [384])
                (plus:DI (reg:DI 1 dx [orig:383 _297 ] [383])
                    (reg:DI 2 cx [orig:382 _296 ] [382])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":147 222 {*adddi_1}
     (nil))
(insn 616 615 617 12 (parallel [
            (set (reg:DI 2 cx [orig:385 _299 ] [385])
                (plus:DI (reg:DI 1 dx [orig:384 _298 ] [384])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":147 222 {*adddi_1}
     (nil))
(insn 617 616 618 12 (set (reg/f:DI 1 dx [617])
        (symbol_ref:DI ("el.4160") [flags 0x202]  <var_decl 0x7fc26db2f6c0 el>)) "CALTAU.f":147 85 {*movdi_internal}
     (nil))
(insn 618 617 619 12 (set (reg:SF 22 xmm1 [orig:386 _300 ] [386])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:385 _299 ] [385])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [617])) [2 el S4 A32])) "CALTAU.f":147 131 {*movsf_internal}
     (nil))
(insn 619 618 620 12 (set (reg:SI 1 dx [618])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 lmhk+0 S4 A32])) "CALTAU.f":147 86 {*movsi_internal}
     (nil))
(insn 620 619 621 12 (set (reg:DI 1 dx [orig:387 _301 ] [387])
        (sign_extend:DI (reg:SI 1 dx [618]))) "CALTAU.f":147 149 {*extendsidi2_rex64}
     (nil))
(insn 621 620 622 12 (parallel [
            (set (reg:DI 2 cx [orig:388 _302 ] [388])
                (mult:DI (reg:DI 1 dx [orig:387 _301 ] [387])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":147 349 {*muldi3_1}
     (nil))
(insn 622 621 623 12 (set (reg:SI 1 dx [619])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":147 86 {*movsi_internal}
     (nil))
(insn 623 622 624 12 (set (reg:DI 1 dx [orig:389 _303 ] [389])
        (sign_extend:DI (reg:SI 1 dx [619]))) "CALTAU.f":147 149 {*extendsidi2_rex64}
     (nil))
(insn 624 623 625 12 (parallel [
            (set (reg:DI 1 dx [orig:390 _304 ] [390])
                (mult:DI (reg:DI 1 dx [orig:389 _303 ] [389])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":147 349 {*muldi3_1}
     (nil))
(insn 625 624 626 12 (parallel [
            (set (reg:DI 2 cx [orig:391 _305 ] [391])
                (plus:DI (reg:DI 2 cx [orig:388 _302 ] [388])
                    (reg:DI 1 dx [orig:390 _304 ] [390])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":147 222 {*adddi_1}
     (nil))
(insn 626 625 627 12 (set (reg:SI 1 dx [620])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":147 86 {*movsi_internal}
     (nil))
(insn 627 626 628 12 (set (reg:DI 1 dx [orig:392 _306 ] [392])
        (sign_extend:DI (reg:SI 1 dx [620]))) "CALTAU.f":147 149 {*extendsidi2_rex64}
     (nil))
(insn 628 627 629 12 (parallel [
            (set (reg:DI 1 dx [orig:393 _307 ] [393])
                (plus:DI (reg:DI 1 dx [orig:392 _306 ] [392])
                    (reg:DI 2 cx [orig:391 _305 ] [391])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":147 222 {*adddi_1}
     (nil))
(insn 629 628 630 12 (parallel [
            (set (reg:DI 2 cx [orig:394 _308 ] [394])
                (plus:DI (reg:DI 1 dx [orig:393 _307 ] [393])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":147 222 {*adddi_1}
     (nil))
(insn 630 629 631 12 (set (reg/f:DI 1 dx [621])
        (symbol_ref:DI ("el.4160") [flags 0x202]  <var_decl 0x7fc26db2f6c0 el>)) "CALTAU.f":147 85 {*movdi_internal}
     (nil))
(insn 631 630 632 12 (set (reg:SF 21 xmm0 [orig:395 _309 ] [395])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:394 _308 ] [394])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [621])) [2 el S4 A32])) "CALTAU.f":147 131 {*movsf_internal}
     (nil))
(insn 632 631 633 12 (set (reg:SF 21 xmm0 [622])
        (mult:SF (reg:SF 21 xmm0 [orig:395 _309 ] [395])
            (reg:SF 22 xmm1 [orig:386 _300 ] [386]))) "CALTAU.f":147 838 {*fop_sf_comm}
     (nil))
(insn 633 632 634 12 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [2 elsqr+0 S4 A32])
        (reg:SF 21 xmm0 [622])) "CALTAU.f":147 131 {*movsf_internal}
     (nil))
(insn 634 633 635 12 (set (reg:SF 21 xmm0 [623])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 rho+0 S4 A32])) "CALTAU.f":148 131 {*movsf_internal}
     (nil))
(insn 635 634 636 12 (set (reg:SF 21 xmm0 [orig:396 _310 ] [396])
        (mult:SF (reg:SF 21 xmm0 [623])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -92 [0xffffffffffffffa4])) [2 elsqr+0 S4 A32]))) "CALTAU.f":148 838 {*fop_sf_comm}
     (nil))
(insn 636 635 637 12 (set (reg:SF 21 xmm0 [orig:397 _311 ] [397])
        (mult:SF (reg:SF 21 xmm0 [orig:396 _310 ] [396])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])) [2 deludz+0 S4 A32]))) "CALTAU.f":148 838 {*fop_sf_comm}
     (nil))
(insn 637 636 638 12 (set (reg:SI 1 dx [624])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":148 86 {*movsi_internal}
     (nil))
(insn 638 637 639 12 (set (reg:DI 1 dx [orig:398 _312 ] [398])
        (sign_extend:DI (reg:SI 1 dx [624]))) "CALTAU.f":148 149 {*extendsidi2_rex64}
     (nil))
(insn 639 638 640 12 (parallel [
            (set (reg:DI 2 cx [orig:399 _313 ] [399])
                (mult:DI (reg:DI 1 dx [orig:398 _312 ] [398])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":148 349 {*muldi3_1}
     (nil))
(insn 640 639 641 12 (set (reg:SI 1 dx [625])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":148 86 {*movsi_internal}
     (nil))
(insn 641 640 642 12 (set (reg:DI 1 dx [orig:400 _314 ] [400])
        (sign_extend:DI (reg:SI 1 dx [625]))) "CALTAU.f":148 149 {*extendsidi2_rex64}
     (nil))
(insn 642 641 643 12 (parallel [
            (set (reg:DI 1 dx [orig:401 _315 ] [401])
                (plus:DI (reg:DI 1 dx [orig:400 _314 ] [400])
                    (reg:DI 2 cx [orig:399 _313 ] [399])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":148 222 {*adddi_1}
     (nil))
(insn 643 642 644 12 (parallel [
            (set (reg:DI 2 cx [orig:402 _316 ] [402])
                (plus:DI (reg:DI 1 dx [orig:401 _315 ] [401])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":148 222 {*adddi_1}
     (nil))
(insn 644 643 645 12 (set (reg:SF 21 xmm0 [orig:403 _317 ] [403])
        (mult:SF (reg:SF 21 xmm0 [orig:397 _311 ] [397])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])) [2 deludz+0 S4 A32]))) "CALTAU.f":148 838 {*fop_sf_comm}
     (nil))
(insn 645 644 646 12 (set (reg/f:DI 1 dx [626])
        (symbol_ref:DI ("egridu.4156") [flags 0x202]  <var_decl 0x7fc26db2f5a0 egridu>)) "CALTAU.f":148 85 {*movdi_internal}
     (nil))
(insn 646 645 647 12 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:402 _316 ] [402])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [626])) [2 egridu S4 A32])
        (reg:SF 21 xmm0 [orig:403 _317 ] [403])) "CALTAU.f":148 131 {*movsf_internal}
     (nil))
(insn 647 646 648 12 (set (reg:SF 21 xmm0 [627])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 rho+0 S4 A32])) "CALTAU.f":149 131 {*movsf_internal}
     (nil))
(insn 648 647 649 12 (set (reg:SF 21 xmm0 [orig:404 _318 ] [404])
        (mult:SF (reg:SF 21 xmm0 [627])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -92 [0xffffffffffffffa4])) [2 elsqr+0 S4 A32]))) "CALTAU.f":149 838 {*fop_sf_comm}
     (nil))
(insn 649 648 650 12 (set (reg:SF 21 xmm0 [orig:405 _319 ] [405])
        (mult:SF (reg:SF 21 xmm0 [orig:404 _318 ] [404])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])) [2 delvdz+0 S4 A32]))) "CALTAU.f":149 838 {*fop_sf_comm}
     (nil))
(insn 650 649 651 12 (set (reg:SI 1 dx [628])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])) "CALTAU.f":149 86 {*movsi_internal}
     (nil))
(insn 651 650 652 12 (set (reg:DI 1 dx [orig:406 _320 ] [406])
        (sign_extend:DI (reg:SI 1 dx [628]))) "CALTAU.f":149 149 {*extendsidi2_rex64}
     (nil))
(insn 652 651 653 12 (parallel [
            (set (reg:DI 2 cx [orig:407 _321 ] [407])
                (mult:DI (reg:DI 1 dx [orig:406 _320 ] [406])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":149 349 {*muldi3_1}
     (nil))
(insn 653 652 654 12 (set (reg:SI 1 dx [629])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])) "CALTAU.f":149 86 {*movsi_internal}
     (nil))
(insn 654 653 655 12 (set (reg:DI 1 dx [orig:408 _322 ] [408])
        (sign_extend:DI (reg:SI 1 dx [629]))) "CALTAU.f":149 149 {*extendsidi2_rex64}
     (nil))
(insn 655 654 656 12 (parallel [
            (set (reg:DI 1 dx [orig:409 _323 ] [409])
                (plus:DI (reg:DI 1 dx [orig:408 _322 ] [408])
                    (reg:DI 2 cx [orig:407 _321 ] [407])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":149 222 {*adddi_1}
     (nil))
(insn 656 655 657 12 (parallel [
            (set (reg:DI 2 cx [orig:410 _324 ] [410])
                (plus:DI (reg:DI 1 dx [orig:409 _323 ] [409])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":149 222 {*adddi_1}
     (nil))
(insn 657 656 658 12 (set (reg:SF 21 xmm0 [orig:411 _325 ] [411])
        (mult:SF (reg:SF 21 xmm0 [orig:405 _319 ] [405])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])) [2 delvdz+0 S4 A32]))) "CALTAU.f":149 838 {*fop_sf_comm}
     (nil))
(insn 658 657 659 12 (set (reg/f:DI 1 dx [630])
        (symbol_ref:DI ("egridv.4158") [flags 0x202]  <var_decl 0x7fc26db2f630 egridv>)) "CALTAU.f":149 85 {*movdi_internal}
     (nil))
(insn 659 658 660 12 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:410 _324 ] [410])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [630])) [2 egridv S4 A32])
        (reg:SF 21 xmm0 [orig:411 _325 ] [411])) "CALTAU.f":149 131 {*movsf_internal}
     (nil))
(insn 660 659 689 12 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -20 [0xffffffffffffffec])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":106 221 {*addsi_1}
     (nil))
(jump_insn 689 660 690 12 (set (pc)
        (label_ref 661)) "CALTAU.f":106 683 {jump}
     (nil)
 -> 661)
;;  succ:       11 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 417

(barrier 690 689 703)
;; basic block 18, loop depth 0, maybe hot
;;  prev block 12, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 417
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 703 690 702 18 14 (nil) [1 uses])
(note 702 703 704 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 704 702 664 18 (const_int 0 [0]) "CALTAU.f":149 718 {nop}
     (nil))
;;  succ:       13 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 417

;; basic block 13, loop depth 0, maybe hot
;;  prev block 18, next block 17, flags: (RTL, MODIFIED)
;;  pred:       18 [always]  (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 417
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 664 704 665 13 7 (nil) [0 uses])
(note 665 664 666 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 666 665 691 13 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -24 [0xffffffffffffffe8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALTAU.f":105 221 {*addsi_1}
     (nil))
(jump_insn 691 666 692 13 (set (pc)
        (label_ref 667)) "CALTAU.f":105 683 {jump}
     (nil)
 -> 667)
;;  succ:       9 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 417

(barrier 692 691 700)
;; basic block 17, loop depth 0, maybe hot
;;  prev block 13, next block 14, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 700 692 699 17 13 (nil) [1 uses])
(note 699 700 701 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 701 699 670 17 (const_int 0 [0]) "CALTAU.f":106 718 {nop}
     (nil))
;;  succ:       14 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 14, loop depth 0, maybe hot
;;  prev block 17, next block 1, flags: (RTL, MODIFIED)
;;  pred:       17 [always]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 631 632
(code_label 670 701 671 14 6 (nil) [0 uses])
(note 671 670 672 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 672 671 673 14 (set (reg:DI 1 dx [631])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [3 tauy+0 S8 A64])) "CALTAU.f":163 85 {*movdi_internal}
     (nil))
(insn 673 672 674 14 (set (reg:DI 0 ax [632])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [3 taux+0 S8 A64])) "CALTAU.f":163 85 {*movdi_internal}
     (nil))
(insn 674 673 675 14 (set (reg:DI 2 cx)
        (reg:DI 1 dx [631])) "CALTAU.f":163 85 {*movdi_internal}
     (nil))
(insn 675 674 676 14 (set (reg:DI 1 dx)
        (reg:DI 0 ax [632])) "CALTAU.f":163 85 {*movdi_internal}
     (nil))
(insn 676 675 677 14 (set (reg:DI 4 si)
        (symbol_ref:DI ("egridv.4158") [flags 0x202]  <var_decl 0x7fc26db2f630 egridv>)) "CALTAU.f":163 85 {*movdi_internal}
     (nil))
(insn 677 676 678 14 (set (reg:DI 5 di)
        (symbol_ref:DI ("egridu.4156") [flags 0x202]  <var_decl 0x7fc26db2f5a0 egridu>)) "CALTAU.f":163 85 {*movdi_internal}
     (nil))
(insn 678 677 679 14 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALTAU.f":163 88 {*movqi_internal}
     (nil))
(call_insn 679 678 684 14 (call (mem:QI (symbol_ref:DI ("h2v_") [flags 0x41]  <function_decl 0x7fc26db08a00 h2v>) [0 h2v S1 A8])
        (const_int 0 [0])) "CALTAU.f":163 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (nil)))))))
(insn 684 679 705 14 (const_int 0 [0]) "CALTAU.f":167 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 705 684 0 NOTE_INSN_DELETED)
