
;; Function coefi (coefi_, funcdef_no=0, decl_uid=3768, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 18:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) r  (1) rm {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 23:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=338 from oldreg=260, assigning class GENERAL_REGS to r338
   23: {r338:DI=r338:DI*[frame:DI-0x10];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  277: r338:DI=r259:DI
    Inserting insn reload after:
  278: r260:DI=r338:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 25:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 30:  (0) r  (1) Z {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 34:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=339 from oldreg=265, assigning class GENERAL_REGS to r339
   34: r339:DI=~r339:DI
    Inserting insn reload before:
  279: r339:DI=r259:DI
    Inserting insn reload after:
  280: r265:DI=r339:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 35:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 38
	 Choosing alt 2 in insn 38:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 40:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 42:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 43:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 46:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 47:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 48:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 49:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 52
	 Choosing alt 2 in insn 52:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 53:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 54:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 55:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 56:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 58:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 59:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 60:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 61:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 62
	 Choosing alt 1 in insn 62:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 63:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 64:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 65:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 66:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 67
	 Choosing alt 2 in insn 67:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 68:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 69:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 70:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 71:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 72:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 73:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 74:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 75:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 76:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 77
	 Choosing alt 1 in insn 77:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 78:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 79:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 80:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 81:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 82
	 Choosing alt 2 in insn 82:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 83:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 84:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 86:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 87:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 88:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 89:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 90:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 91
	 Choosing alt 1 in insn 91:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 92
	 Choosing alt 1 in insn 92:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 93:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 94:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 95:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 97:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 98
	 Choosing alt 2 in insn 98:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 99:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 100:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 101:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 102:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 103:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 105:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 106:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 107:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 108
	 Choosing alt 1 in insn 108:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 109:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 111:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 112
	 Choosing alt 2 in insn 112:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 113:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 114:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 116:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 117:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 118:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 119:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 120:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 121:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=340 from oldreg=143, assigning class SSE_REGS to r340
  121: r340:SF=r340:SF-r152:SF
      REG_DEAD r152:SF
      REG_DEAD r143:SF
    Inserting insn reload before:
  281: r340:SF=r143:SF
    Inserting insn reload after:
  282: r153:SF=r340:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 122:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 124:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 125
	 Choosing alt 2 in insn 125:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 126:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 127:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 128:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 129:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 130:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 131:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 132:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 133:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 134:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 135
	 Choosing alt 1 in insn 135:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 136:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 137:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 139:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 140
	 Choosing alt 2 in insn 140:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 141:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 142:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 144:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 145:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 146:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 147:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 148:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 149
	 Choosing alt 1 in insn 149:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 150
	 Choosing alt 1 in insn 150:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 151:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 152:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 153:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 154:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 155:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 156
	 Choosing alt 2 in insn 156:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 157:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 158:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 160:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 161:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 163:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 164:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 165:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 166:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 167:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 169:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 170
	 Choosing alt 2 in insn 170:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 171:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 172:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 174:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 175:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 177:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 178:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 179:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 180
	 Choosing alt 1 in insn 180:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 181:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 182:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 184:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 185
	 Choosing alt 2 in insn 185:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 186:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 187:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 188:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 189:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 190:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 191:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 192:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 193:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 194:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 195
	 Choosing alt 1 in insn 195:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 196:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 197:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 199:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 200
	 Choosing alt 2 in insn 200:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 201:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 202:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 203:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 204:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 206:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 207:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 208:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 209
	 Choosing alt 1 in insn 209:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 210
	 Choosing alt 1 in insn 210:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 211:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 212:  (0) m  (1) v {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 213:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 214:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 215:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 216
	 Choosing alt 2 in insn 216:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 217:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 218:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 220:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 221:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 222:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 223:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 224:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 225:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 226
	 Choosing alt 1 in insn 226:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 227:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 229:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 230
	 Choosing alt 2 in insn 230:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 231:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 232:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 233:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 234:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 235:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 237:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 238:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 239:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=341 from oldreg=226, assigning class SSE_REGS to r341
  239: r341:SF=r341:SF-r235:SF
      REG_DEAD r235:SF
      REG_DEAD r226:SF
    Inserting insn reload before:
  283: r341:SF=r226:SF
    Inserting insn reload after:
  284: r236:SF=r341:SF

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 240:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 242:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 243
	 Choosing alt 2 in insn 243:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 244:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 245:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 247:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 248:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 249:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 250:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 251:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 252:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 253
	 Choosing alt 1 in insn 253:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 254:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 255:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 256:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 257:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            alt=2,overall=6,losers=1 -- refuse
	 Choosing alt 2 in insn 258:  (0) r  (1) 0  (2) mr {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 259:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 260:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 262:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 264:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 265:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 266:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 267
	 Choosing alt 1 in insn 267:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 268
	 Choosing alt 1 in insn 268:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 269:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 270:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2

********** Pseudo live ranges #1: **********

  BB 2
   Insn 275: point = 0, n_alt = -1
   Insn 270: point = 0, n_alt = 8
   Insn 269: point = 1, n_alt = 3
   Insn 268: point = 2, n_alt = 1
   Insn 267: point = 4, n_alt = 1
   Insn 266: point = 6, n_alt = 7
   Insn 265: point = 7, n_alt = 7
   Insn 264: point = 9, n_alt = 3
   Insn 263: point = 10, n_alt = 0
   Insn 262: point = 12, n_alt = 0
   Insn 261: point = 14, n_alt = 0
   Insn 260: point = 16, n_alt = 3
   Insn 259: point = 17, n_alt = 0
   Insn 258: point = 19, n_alt = 2
   Insn 257: point = 21, n_alt = 1
   Insn 256: point = 23, n_alt = 0
   Insn 255: point = 25, n_alt = 3
   Insn 254: point = 26, n_alt = 1
   Insn 253: point = 28, n_alt = 1
   Insn 252: point = 30, n_alt = 7
   Insn 251: point = 31, n_alt = 7
   Insn 250: point = 33, n_alt = 3
   Insn 249: point = 34, n_alt = 0
   Insn 248: point = 36, n_alt = 1
   Insn 247: point = 38, n_alt = 0
   Insn 246: point = 40, n_alt = 0
   Insn 245: point = 42, n_alt = 3
   Insn 244: point = 43, n_alt = 3
   Insn 243: point = 45, n_alt = 2
   Insn 242: point = 47, n_alt = 1
   Insn 241: point = 49, n_alt = 0
   Insn 240: point = 51, n_alt = 3
   Insn 284: point = 52, n_alt = -2
	Hard reg 22 is preferable by r341 with profit 1000
   Insn 239: point = 54, n_alt = 2
   Insn 283: point = 55, n_alt = -2
	Hard reg 22 is preferable by r341 with profit 1000
	Hard reg 21 is preferable by r341 with profit 1000
   Insn 238: point = 57, n_alt = 7
   Insn 237: point = 59, n_alt = 3
   Insn 236: point = 60, n_alt = 0
   Insn 235: point = 62, n_alt = 1
   Insn 234: point = 64, n_alt = 0
   Insn 233: point = 66, n_alt = 0
   Insn 232: point = 68, n_alt = 3
   Insn 231: point = 69, n_alt = 3
   Insn 230: point = 71, n_alt = 2
   Insn 229: point = 73, n_alt = 1
   Insn 228: point = 75, n_alt = 0
   Insn 227: point = 77, n_alt = 3
   Insn 226: point = 78, n_alt = 1
   Insn 225: point = 80, n_alt = 7
   Insn 224: point = 81, n_alt = 7
   Insn 223: point = 83, n_alt = 3
   Insn 222: point = 84, n_alt = 0
   Insn 221: point = 86, n_alt = 1
   Insn 220: point = 88, n_alt = 0
   Insn 219: point = 90, n_alt = 0
   Insn 218: point = 92, n_alt = 3
   Insn 217: point = 93, n_alt = 3
   Insn 216: point = 95, n_alt = 2
   Insn 215: point = 97, n_alt = 1
   Insn 214: point = 99, n_alt = 0
   Insn 213: point = 101, n_alt = 3
   Insn 212: point = 102, n_alt = 8
   Insn 211: point = 103, n_alt = 3
   Insn 210: point = 104, n_alt = 1
   Insn 209: point = 106, n_alt = 1
   Insn 208: point = 108, n_alt = 7
   Insn 207: point = 109, n_alt = 7
   Insn 206: point = 111, n_alt = 3
   Insn 205: point = 112, n_alt = 0
   Insn 204: point = 114, n_alt = 1
   Insn 203: point = 116, n_alt = 0
   Insn 202: point = 118, n_alt = 3
   Insn 201: point = 119, n_alt = 3
   Insn 200: point = 121, n_alt = 2
   Insn 199: point = 123, n_alt = 1
   Insn 198: point = 125, n_alt = 0
   Insn 197: point = 127, n_alt = 3
   Insn 196: point = 128, n_alt = 1
   Insn 195: point = 130, n_alt = 1
   Insn 194: point = 132, n_alt = 7
   Insn 193: point = 133, n_alt = 7
   Insn 192: point = 135, n_alt = 3
   Insn 191: point = 136, n_alt = 0
   Insn 190: point = 138, n_alt = 1
   Insn 189: point = 140, n_alt = 0
   Insn 188: point = 142, n_alt = 0
   Insn 187: point = 144, n_alt = 3
   Insn 186: point = 145, n_alt = 3
   Insn 185: point = 147, n_alt = 2
   Insn 184: point = 149, n_alt = 1
   Insn 183: point = 151, n_alt = 0
   Insn 182: point = 153, n_alt = 3
   Insn 181: point = 154, n_alt = 1
   Insn 180: point = 156, n_alt = 1
   Insn 179: point = 158, n_alt = 7
   Insn 178: point = 159, n_alt = 7
   Insn 177: point = 161, n_alt = 3
   Insn 176: point = 162, n_alt = 0
   Insn 175: point = 164, n_alt = 1
   Insn 174: point = 166, n_alt = 0
   Insn 173: point = 168, n_alt = 0
   Insn 172: point = 170, n_alt = 3
   Insn 171: point = 171, n_alt = 3
   Insn 170: point = 173, n_alt = 2
   Insn 169: point = 175, n_alt = 1
   Insn 168: point = 177, n_alt = 0
   Insn 167: point = 179, n_alt = 3
   Insn 166: point = 180, n_alt = 1
   Insn 165: point = 182, n_alt = 7
   Insn 164: point = 183, n_alt = 7
   Insn 163: point = 185, n_alt = 3
   Insn 162: point = 186, n_alt = 0
   Insn 161: point = 188, n_alt = 1
   Insn 160: point = 190, n_alt = 0
   Insn 159: point = 192, n_alt = 0
   Insn 158: point = 194, n_alt = 3
   Insn 157: point = 195, n_alt = 3
   Insn 156: point = 197, n_alt = 2
   Insn 155: point = 199, n_alt = 1
   Insn 154: point = 201, n_alt = 0
   Insn 153: point = 203, n_alt = 3
   Insn 152: point = 204, n_alt = 8
   Insn 151: point = 205, n_alt = 3
   Insn 150: point = 206, n_alt = 1
   Insn 149: point = 208, n_alt = 1
   Insn 148: point = 210, n_alt = 7
   Insn 147: point = 211, n_alt = 7
   Insn 146: point = 213, n_alt = 3
   Insn 145: point = 214, n_alt = 0
   Insn 144: point = 216, n_alt = 1
   Insn 143: point = 218, n_alt = 0
   Insn 142: point = 220, n_alt = 3
   Insn 141: point = 221, n_alt = 3
   Insn 140: point = 223, n_alt = 2
   Insn 139: point = 225, n_alt = 1
   Insn 138: point = 227, n_alt = 0
   Insn 137: point = 229, n_alt = 3
   Insn 136: point = 230, n_alt = 1
   Insn 135: point = 232, n_alt = 1
   Insn 134: point = 234, n_alt = 7
   Insn 133: point = 235, n_alt = 7
   Insn 132: point = 237, n_alt = 3
   Insn 131: point = 238, n_alt = 0
   Insn 130: point = 240, n_alt = 1
   Insn 129: point = 242, n_alt = 0
   Insn 128: point = 244, n_alt = 0
   Insn 127: point = 246, n_alt = 3
   Insn 126: point = 247, n_alt = 3
   Insn 125: point = 249, n_alt = 2
   Insn 124: point = 251, n_alt = 1
   Insn 123: point = 253, n_alt = 0
   Insn 122: point = 255, n_alt = 3
   Insn 282: point = 256, n_alt = -2
	Hard reg 22 is preferable by r340 with profit 1000
   Insn 121: point = 258, n_alt = 2
   Insn 281: point = 259, n_alt = -2
	Hard reg 22 is preferable by r340 with profit 1000
	Hard reg 21 is preferable by r340 with profit 1000
   Insn 120: point = 261, n_alt = 7
   Insn 119: point = 263, n_alt = 3
   Insn 118: point = 264, n_alt = 0
   Insn 117: point = 266, n_alt = 1
   Insn 116: point = 268, n_alt = 0
   Insn 115: point = 270, n_alt = 0
   Insn 114: point = 272, n_alt = 3
   Insn 113: point = 273, n_alt = 3
   Insn 112: point = 275, n_alt = 2
   Insn 111: point = 277, n_alt = 1
   Insn 110: point = 279, n_alt = 0
   Insn 109: point = 281, n_alt = 3
   Insn 108: point = 282, n_alt = 1
   Insn 107: point = 284, n_alt = 7
   Insn 106: point = 285, n_alt = 7
   Insn 105: point = 287, n_alt = 3
   Insn 104: point = 288, n_alt = 0
   Insn 103: point = 290, n_alt = 1
   Insn 102: point = 292, n_alt = 0
   Insn 101: point = 294, n_alt = 0
   Insn 100: point = 296, n_alt = 3
   Insn 99: point = 297, n_alt = 3
   Insn 98: point = 299, n_alt = 2
   Insn 97: point = 301, n_alt = 1
   Insn 96: point = 303, n_alt = 0
   Insn 95: point = 305, n_alt = 3
   Insn 94: point = 306, n_alt = 8
   Insn 93: point = 307, n_alt = 3
   Insn 92: point = 308, n_alt = 1
   Insn 91: point = 310, n_alt = 1
   Insn 90: point = 312, n_alt = 7
   Insn 89: point = 313, n_alt = 7
   Insn 88: point = 315, n_alt = 3
   Insn 87: point = 316, n_alt = 0
   Insn 86: point = 318, n_alt = 1
   Insn 85: point = 320, n_alt = 0
   Insn 84: point = 322, n_alt = 3
   Insn 83: point = 323, n_alt = 3
   Insn 82: point = 325, n_alt = 2
   Insn 81: point = 327, n_alt = 1
   Insn 80: point = 329, n_alt = 0
   Insn 79: point = 331, n_alt = 3
   Insn 78: point = 332, n_alt = 1
   Insn 77: point = 334, n_alt = 1
   Insn 76: point = 336, n_alt = 7
   Insn 75: point = 337, n_alt = 7
   Insn 74: point = 339, n_alt = 3
   Insn 73: point = 340, n_alt = 0
   Insn 72: point = 342, n_alt = 1
   Insn 71: point = 344, n_alt = 0
   Insn 70: point = 346, n_alt = 0
   Insn 69: point = 348, n_alt = 3
   Insn 68: point = 349, n_alt = 3
   Insn 67: point = 351, n_alt = 2
   Insn 66: point = 353, n_alt = 1
   Insn 65: point = 355, n_alt = 0
   Insn 64: point = 357, n_alt = 3
   Insn 63: point = 358, n_alt = 1
   Insn 62: point = 360, n_alt = 1
   Insn 61: point = 362, n_alt = 7
   Insn 60: point = 363, n_alt = 7
   Insn 59: point = 365, n_alt = 3
   Insn 58: point = 366, n_alt = 0
   Insn 57: point = 368, n_alt = 1
   Insn 56: point = 370, n_alt = 0
   Insn 55: point = 372, n_alt = 0
   Insn 54: point = 374, n_alt = 3
   Insn 53: point = 375, n_alt = 3
   Insn 52: point = 377, n_alt = 2
   Insn 51: point = 379, n_alt = 1
   Insn 50: point = 381, n_alt = 0
   Insn 49: point = 383, n_alt = 3
   Insn 48: point = 384, n_alt = 1
   Insn 47: point = 386, n_alt = 7
   Insn 46: point = 387, n_alt = 7
   Insn 45: point = 389, n_alt = 3
   Insn 44: point = 390, n_alt = 0
   Insn 43: point = 392, n_alt = 1
   Insn 42: point = 394, n_alt = 0
   Insn 41: point = 396, n_alt = 0
   Insn 40: point = 398, n_alt = 3
   Insn 39: point = 399, n_alt = 3
   Insn 38: point = 401, n_alt = 2
   Insn 37: point = 403, n_alt = 1
   Insn 36: point = 405, n_alt = 0
   Insn 35: point = 407, n_alt = 3
   Insn 280: point = 408, n_alt = -2
	Hard reg 1 is preferable by r339 with profit 1000
   Insn 34: point = 410, n_alt = 0
   Insn 279: point = 410, n_alt = -2
   Insn 30: point = 411, n_alt = 2
   Insn 29: point = 412, n_alt = 3
   Insn 28: point = 413, n_alt = -2
   Insn 26: point = 415, n_alt = 1
   Insn 24: point = 417, n_alt = 0
   Insn 25: point = 417, n_alt = 2
   Insn 278: point = 418, n_alt = -2
	Hard reg 1 is preferable by r338 with profit 1000
   Insn 23: point = 420, n_alt = 2
   Insn 277: point = 420, n_alt = -2
   Insn 22: point = 421, n_alt = 5
   Insn 21: point = 422, n_alt = 1
   Insn 20: point = 424, n_alt = 0
   Insn 19: point = 426, n_alt = 3
   Insn 18: point = 427, n_alt = 1
   Insn 16: point = 429, n_alt = 0
   Insn 17: point = 429, n_alt = 2
   Insn 15: point = 430, n_alt = 3
   Insn 14: point = 431, n_alt = 5
   Insn 13: point = 432, n_alt = 0
   Insn 12: point = 434, n_alt = 0
   Insn 11: point = 436, n_alt = 3
   Insn 7: point = 437, n_alt = 5
   Insn 6: point = 437, n_alt = 5
   Insn 5: point = 437, n_alt = 5
   Insn 4: point = 437, n_alt = 5
   Insn 3: point = 437, n_alt = 5
   Insn 2: point = 437, n_alt = 5
 r87: [433..434]
 r88: [423..424]
 r89: [412..413]
 r90: [411..437]
 r92: [404..405]
 r93: [402..403]
 r94: [400..401]
 r95: [391..399]
 r96: [395..396]
 r97: [393..394]
 r98: [391..392]
 r99: [388..390]
 r100: [385..387]
 r101: [359..384]
 r102: [380..381]
 r103: [378..379]
 r104: [376..377]
 r105: [367..375]
 r106: [371..372]
 r107: [369..370]
 r108: [367..368]
 r109: [364..366]
 r110: [361..363]
 r111: [359..360]
 r112: [333..358]
 r113: [354..355]
 r114: [352..353]
 r115: [350..351]
 r116: [341..349]
 r117: [345..346]
 r118: [343..344]
 r119: [341..342]
 r120: [338..340]
 r121: [335..337]
 r122: [333..334]
 r123: [309..332]
 r124: [328..329]
 r125: [326..327]
 r126: [324..325]
 r127: [317..323]
 r128: [319..320]
 r129: [317..318]
 r130: [314..316]
 r131: [311..313]
 r132: [309..310]
 r133: [306..308]
 r134: [302..303]
 r135: [300..301]
 r136: [298..299]
 r137: [289..297]
 r138: [293..294]
 r139: [291..292]
 r140: [289..290]
 r141: [286..288]
 r142: [283..285]
 r143: [260..282]
 r144: [278..279]
 r145: [276..277]
 r146: [274..275]
 r147: [265..273]
 r148: [269..270]
 r149: [267..268]
 r150: [265..266]
 r151: [262..264]
 r152: [258..261]
 r153: [231..256]
 r154: [252..253]
 r155: [250..251]
 r156: [248..249]
 r157: [239..247]
 r158: [243..244]
 r159: [241..242]
 r160: [239..240]
 r161: [236..238]
 r162: [233..235]
 r163: [231..232]
 r164: [207..230]
 r165: [226..227]
 r166: [224..225]
 r167: [222..223]
 r168: [215..221]
 r169: [217..218]
 r170: [215..216]
 r171: [212..214]
 r172: [209..211]
 r173: [207..208]
 r174: [204..206]
 r175: [200..201]
 r176: [198..199]
 r177: [196..197]
 r178: [187..195]
 r179: [191..192]
 r180: [189..190]
 r181: [187..188]
 r182: [184..186]
 r183: [181..183]
 r184: [155..180]
 r185: [176..177]
 r186: [174..175]
 r187: [172..173]
 r188: [163..171]
 r189: [167..168]
 r190: [165..166]
 r191: [163..164]
 r192: [160..162]
 r193: [157..159]
 r194: [155..156]
 r195: [129..154]
 r196: [150..151]
 r197: [148..149]
 r198: [146..147]
 r199: [137..145]
 r200: [141..142]
 r201: [139..140]
 r202: [137..138]
 r203: [134..136]
 r204: [131..133]
 r205: [129..130]
 r206: [105..128]
 r207: [124..125]
 r208: [122..123]
 r209: [120..121]
 r210: [113..119]
 r211: [115..116]
 r212: [113..114]
 r213: [110..112]
 r214: [107..109]
 r215: [105..106]
 r216: [102..104]
 r217: [98..99]
 r218: [96..97]
 r219: [94..95]
 r220: [85..93]
 r221: [89..90]
 r222: [87..88]
 r223: [85..86]
 r224: [82..84]
 r225: [79..81]
 r226: [56..78]
 r227: [74..75]
 r228: [72..73]
 r229: [70..71]
 r230: [61..69]
 r231: [65..66]
 r232: [63..64]
 r233: [61..62]
 r234: [58..60]
 r235: [54..57]
 r236: [27..52]
 r237: [48..49]
 r238: [46..47]
 r239: [44..45]
 r240: [35..43]
 r241: [39..40]
 r242: [37..38]
 r243: [35..36]
 r244: [32..34]
 r245: [29..31]
 r246: [27..28]
 r247: [3..26]
 r248: [22..23]
 r249: [20..21]
 r250: [18..19]
 r251: [11..17]
 r252: [13..14]
 r253: [11..12]
 r254: [8..10]
 r255: [5..7]
 r256: [3..4]
 r257: [0..2]
 r258: [428..430]
 r259: [20..427]
 r260: [416..418]
 r261: [414..415]
 r265: [18..408]
 r266: [435..436]
 r267: [431..432]
 r268: [428..429]
 r269: [425..426]
 r270: [421..422]
 r271: [416..417]
 r272: [406..407]
 r273: [397..398]
 r274: [388..389]
 r275: [385..386]
 r276: [382..383]
 r277: [373..374]
 r278: [364..365]
 r279: [361..362]
 r280: [356..357]
 r281: [347..348]
 r282: [338..339]
 r283: [335..336]
 r284: [330..331]
 r285: [321..322]
 r286: [314..315]
 r287: [311..312]
 r288: [306..307]
 r289: [304..305]
 r290: [295..296]
 r291: [286..287]
 r292: [283..284]
 r293: [280..281]
 r294: [271..272]
 r295: [262..263]
 r296: [254..255]
 r297: [245..246]
 r298: [236..237]
 r299: [233..234]
 r300: [228..229]
 r301: [219..220]
 r302: [212..213]
 r303: [209..210]
 r304: [204..205]
 r305: [202..203]
 r306: [193..194]
 r307: [184..185]
 r308: [181..182]
 r309: [178..179]
 r310: [169..170]
 r311: [160..161]
 r312: [157..158]
 r313: [152..153]
 r314: [143..144]
 r315: [134..135]
 r316: [131..132]
 r317: [126..127]
 r318: [117..118]
 r319: [110..111]
 r320: [107..108]
 r321: [102..103]
 r322: [100..101]
 r323: [91..92]
 r324: [82..83]
 r325: [79..80]
 r326: [76..77]
 r327: [67..68]
 r328: [58..59]
 r329: [50..51]
 r330: [41..42]
 r331: [32..33]
 r332: [29..30]
 r333: [24..25]
 r334: [15..16]
 r335: [8..9]
 r336: [5..6]
 r337: [0..1]
 r338: [419..420]
 r339: [409..410]
 r340: [257..259]
 r341: [53..55]
Compressing live ranges: from 438 to 368 - 84%
Ranges after the compression:
 r87: [364..365]
 r88: [356..357]
 r89: [346..347]
 r90: [346..367]
 r92: [340..341]
 r93: [338..339]
 r94: [336..337]
 r95: [328..335]
 r96: [332..333]
 r97: [330..331]
 r98: [328..329]
 r99: [326..327]
 r100: [324..325]
 r101: [302..323]
 r102: [320..321]
 r103: [318..319]
 r104: [316..317]
 r105: [308..315]
 r106: [312..313]
 r107: [310..311]
 r108: [308..309]
 r109: [306..307]
 r110: [304..305]
 r111: [302..303]
 r112: [280..301]
 r113: [298..299]
 r114: [296..297]
 r115: [294..295]
 r116: [286..293]
 r117: [290..291]
 r118: [288..289]
 r119: [286..287]
 r120: [284..285]
 r121: [282..283]
 r122: [280..281]
 r123: [260..279]
 r124: [276..277]
 r125: [274..275]
 r126: [272..273]
 r127: [266..271]
 r128: [268..269]
 r129: [266..267]
 r130: [264..265]
 r131: [262..263]
 r132: [260..261]
 r133: [258..259]
 r134: [254..255]
 r135: [252..253]
 r136: [250..251]
 r137: [242..249]
 r138: [246..247]
 r139: [244..245]
 r140: [242..243]
 r141: [240..241]
 r142: [238..239]
 r143: [218..237]
 r144: [234..235]
 r145: [232..233]
 r146: [230..231]
 r147: [222..229]
 r148: [226..227]
 r149: [224..225]
 r150: [222..223]
 r151: [220..221]
 r152: [216..219]
 r153: [194..215]
 r154: [212..213]
 r155: [210..211]
 r156: [208..209]
 r157: [200..207]
 r158: [204..205]
 r159: [202..203]
 r160: [200..201]
 r161: [198..199]
 r162: [196..197]
 r163: [194..195]
 r164: [174..193]
 r165: [190..191]
 r166: [188..189]
 r167: [186..187]
 r168: [180..185]
 r169: [182..183]
 r170: [180..181]
 r171: [178..179]
 r172: [176..177]
 r173: [174..175]
 r174: [172..173]
 r175: [168..169]
 r176: [166..167]
 r177: [164..165]
 r178: [156..163]
 r179: [160..161]
 r180: [158..159]
 r181: [156..157]
 r182: [154..155]
 r183: [152..153]
 r184: [130..151]
 r185: [148..149]
 r186: [146..147]
 r187: [144..145]
 r188: [136..143]
 r189: [140..141]
 r190: [138..139]
 r191: [136..137]
 r192: [134..135]
 r193: [132..133]
 r194: [130..131]
 r195: [108..129]
 r196: [126..127]
 r197: [124..125]
 r198: [122..123]
 r199: [114..121]
 r200: [118..119]
 r201: [116..117]
 r202: [114..115]
 r203: [112..113]
 r204: [110..111]
 r205: [108..109]
 r206: [88..107]
 r207: [104..105]
 r208: [102..103]
 r209: [100..101]
 r210: [94..99]
 r211: [96..97]
 r212: [94..95]
 r213: [92..93]
 r214: [90..91]
 r215: [88..89]
 r216: [86..87]
 r217: [82..83]
 r218: [80..81]
 r219: [78..79]
 r220: [70..77]
 r221: [74..75]
 r222: [72..73]
 r223: [70..71]
 r224: [68..69]
 r225: [66..67]
 r226: [46..65]
 r227: [62..63]
 r228: [60..61]
 r229: [58..59]
 r230: [50..57]
 r231: [54..55]
 r232: [52..53]
 r233: [50..51]
 r234: [48..49]
 r235: [44..47]
 r236: [22..43]
 r237: [40..41]
 r238: [38..39]
 r239: [36..37]
 r240: [28..35]
 r241: [32..33]
 r242: [30..31]
 r243: [28..29]
 r244: [26..27]
 r245: [24..25]
 r246: [22..23]
 r247: [2..21]
 r248: [18..19]
 r249: [16..17]
 r250: [14..15]
 r251: [8..13]
 r252: [10..11]
 r253: [8..9]
 r254: [6..7]
 r255: [4..5]
 r256: [2..3]
 r257: [0..1]
 r258: [360..361]
 r259: [16..359]
 r260: [350..351]
 r261: [348..349]
 r265: [14..343]
 r266: [366..367]
 r267: [362..363]
 r268: [360..361]
 r269: [358..359]
 r270: [354..355]
 r271: [350..351]
 r272: [342..343]
 r273: [334..335]
 r274: [326..327]
 r275: [324..325]
 r276: [322..323]
 r277: [314..315]
 r278: [306..307]
 r279: [304..305]
 r280: [300..301]
 r281: [292..293]
 r282: [284..285]
 r283: [282..283]
 r284: [278..279]
 r285: [270..271]
 r286: [264..265]
 r287: [262..263]
 r288: [258..259]
 r289: [256..257]
 r290: [248..249]
 r291: [240..241]
 r292: [238..239]
 r293: [236..237]
 r294: [228..229]
 r295: [220..221]
 r296: [214..215]
 r297: [206..207]
 r298: [198..199]
 r299: [196..197]
 r300: [192..193]
 r301: [184..185]
 r302: [178..179]
 r303: [176..177]
 r304: [172..173]
 r305: [170..171]
 r306: [162..163]
 r307: [154..155]
 r308: [152..153]
 r309: [150..151]
 r310: [142..143]
 r311: [134..135]
 r312: [132..133]
 r313: [128..129]
 r314: [120..121]
 r315: [112..113]
 r316: [110..111]
 r317: [106..107]
 r318: [98..99]
 r319: [92..93]
 r320: [90..91]
 r321: [86..87]
 r322: [84..85]
 r323: [76..77]
 r324: [68..69]
 r325: [66..67]
 r326: [64..65]
 r327: [56..57]
 r328: [48..49]
 r329: [42..43]
 r330: [34..35]
 r331: [26..27]
 r332: [24..25]
 r333: [20..21]
 r334: [12..13]
 r335: [6..7]
 r336: [4..5]
 r337: [0..1]
 r338: [352..353]
 r339: [344..345]
 r340: [216..217]
 r341: [44..45]

********** Assignment #1: **********

	 Assigning to 338 (cl=GENERAL_REGS, orig=260, freq=3000, tfirst=338, tfreq=3000)...
	   Assign 1 to reload r338 (freq=3000)
	 Assigning to 339 (cl=GENERAL_REGS, orig=265, freq=3000, tfirst=339, tfreq=3000)...
	   Assign 1 to reload r339 (freq=3000)
	 Assigning to 340 (cl=SSE_REGS, orig=143, freq=3000, tfirst=340, tfreq=3000)...
	   Assign 21 to reload r340 (freq=3000)
	 Assigning to 341 (cl=SSE_REGS, orig=226, freq=3000, tfirst=341, tfreq=3000)...
	   Assign 21 to reload r341 (freq=3000)

********** Undoing inheritance #1: **********


********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=16, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=0, prev_offset=0)
Can eliminate 20 to 6 (offset=0, prev_offset=0)
changing reg in insn 12
changing reg in insn 13
changing reg in insn 20
changing reg in insn 21
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 29
changing reg in insn 36
changing reg in insn 37
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 39
changing reg in insn 44
changing reg in insn 41
changing reg in insn 42
changing reg in insn 42
changing reg in insn 43
changing reg in insn 43
changing reg in insn 44
changing reg in insn 44
changing reg in insn 46
changing reg in insn 46
changing reg in insn 48
changing reg in insn 48
changing reg in insn 63
changing reg in insn 50
changing reg in insn 51
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 53
changing reg in insn 58
changing reg in insn 55
changing reg in insn 56
changing reg in insn 56
changing reg in insn 57
changing reg in insn 57
changing reg in insn 58
changing reg in insn 58
changing reg in insn 60
changing reg in insn 60
changing reg in insn 62
changing reg in insn 63
changing reg in insn 63
changing reg in insn 78
changing reg in insn 65
changing reg in insn 66
changing reg in insn 66
changing reg in insn 67
changing reg in insn 68
changing reg in insn 68
changing reg in insn 73
changing reg in insn 70
changing reg in insn 71
changing reg in insn 71
changing reg in insn 72
changing reg in insn 72
changing reg in insn 73
changing reg in insn 73
changing reg in insn 75
changing reg in insn 75
changing reg in insn 77
changing reg in insn 78
changing reg in insn 78
changing reg in insn 80
changing reg in insn 81
changing reg in insn 81
changing reg in insn 82
changing reg in insn 83
changing reg in insn 83
changing reg in insn 87
changing reg in insn 85
changing reg in insn 86
changing reg in insn 86
changing reg in insn 87
changing reg in insn 87
changing reg in insn 89
changing reg in insn 89
changing reg in insn 91
changing reg in insn 92
changing reg in insn 94
changing reg in insn 96
changing reg in insn 97
changing reg in insn 97
changing reg in insn 98
changing reg in insn 99
changing reg in insn 99
changing reg in insn 104
changing reg in insn 101
changing reg in insn 102
changing reg in insn 102
changing reg in insn 103
changing reg in insn 103
changing reg in insn 104
changing reg in insn 104
changing reg in insn 106
changing reg in insn 106
changing reg in insn 108
changing reg in insn 110
changing reg in insn 111
changing reg in insn 111
changing reg in insn 112
changing reg in insn 113
changing reg in insn 113
changing reg in insn 118
changing reg in insn 115
changing reg in insn 116
changing reg in insn 116
changing reg in insn 117
changing reg in insn 117
changing reg in insn 118
changing reg in insn 118
changing reg in insn 120
changing reg in insn 120
changing reg in insn 121
changing reg in insn 136
changing reg in insn 123
changing reg in insn 124
changing reg in insn 124
changing reg in insn 125
changing reg in insn 126
changing reg in insn 126
changing reg in insn 131
changing reg in insn 128
changing reg in insn 129
changing reg in insn 129
changing reg in insn 130
changing reg in insn 130
changing reg in insn 131
changing reg in insn 131
changing reg in insn 133
changing reg in insn 133
changing reg in insn 135
changing reg in insn 136
changing reg in insn 136
changing reg in insn 138
changing reg in insn 139
changing reg in insn 139
changing reg in insn 140
changing reg in insn 141
changing reg in insn 141
changing reg in insn 145
changing reg in insn 143
changing reg in insn 144
changing reg in insn 144
changing reg in insn 145
changing reg in insn 145
changing reg in insn 147
changing reg in insn 147
changing reg in insn 149
changing reg in insn 150
changing reg in insn 152
changing reg in insn 154
changing reg in insn 155
changing reg in insn 155
changing reg in insn 156
changing reg in insn 157
changing reg in insn 157
changing reg in insn 162
changing reg in insn 159
changing reg in insn 160
changing reg in insn 160
changing reg in insn 161
changing reg in insn 161
changing reg in insn 162
changing reg in insn 162
changing reg in insn 164
changing reg in insn 164
changing reg in insn 166
changing reg in insn 166
changing reg in insn 181
changing reg in insn 168
changing reg in insn 169
changing reg in insn 169
changing reg in insn 170
changing reg in insn 171
changing reg in insn 171
changing reg in insn 176
changing reg in insn 173
changing reg in insn 174
changing reg in insn 174
changing reg in insn 175
changing reg in insn 175
changing reg in insn 176
changing reg in insn 176
changing reg in insn 178
changing reg in insn 178
changing reg in insn 180
changing reg in insn 181
changing reg in insn 181
changing reg in insn 196
changing reg in insn 183
changing reg in insn 184
changing reg in insn 184
changing reg in insn 185
changing reg in insn 186
changing reg in insn 186
changing reg in insn 191
changing reg in insn 188
changing reg in insn 189
changing reg in insn 189
changing reg in insn 190
changing reg in insn 190
changing reg in insn 191
changing reg in insn 191
changing reg in insn 193
changing reg in insn 193
changing reg in insn 195
changing reg in insn 196
changing reg in insn 196
changing reg in insn 198
changing reg in insn 199
changing reg in insn 199
changing reg in insn 200
changing reg in insn 201
changing reg in insn 201
changing reg in insn 205
changing reg in insn 203
changing reg in insn 204
changing reg in insn 204
changing reg in insn 205
changing reg in insn 205
changing reg in insn 207
changing reg in insn 207
changing reg in insn 209
changing reg in insn 210
changing reg in insn 212
changing reg in insn 214
changing reg in insn 215
changing reg in insn 215
changing reg in insn 216
changing reg in insn 217
changing reg in insn 217
changing reg in insn 222
changing reg in insn 219
changing reg in insn 220
changing reg in insn 220
changing reg in insn 221
changing reg in insn 221
changing reg in insn 222
changing reg in insn 222
changing reg in insn 224
changing reg in insn 224
changing reg in insn 226
changing reg in insn 228
changing reg in insn 229
changing reg in insn 229
changing reg in insn 230
changing reg in insn 231
changing reg in insn 231
changing reg in insn 236
changing reg in insn 233
changing reg in insn 234
changing reg in insn 234
changing reg in insn 235
changing reg in insn 235
changing reg in insn 236
changing reg in insn 236
changing reg in insn 238
changing reg in insn 238
changing reg in insn 239
changing reg in insn 254
changing reg in insn 241
changing reg in insn 242
changing reg in insn 242
changing reg in insn 243
changing reg in insn 244
changing reg in insn 244
changing reg in insn 249
changing reg in insn 246
changing reg in insn 247
changing reg in insn 247
changing reg in insn 248
changing reg in insn 248
changing reg in insn 249
changing reg in insn 249
changing reg in insn 251
changing reg in insn 251
changing reg in insn 253
changing reg in insn 254
changing reg in insn 254
changing reg in insn 256
changing reg in insn 257
changing reg in insn 257
changing reg in insn 258
changing reg in insn 258
changing reg in insn 259
changing reg in insn 259
changing reg in insn 263
changing reg in insn 261
changing reg in insn 262
changing reg in insn 262
changing reg in insn 263
changing reg in insn 263
changing reg in insn 265
changing reg in insn 265
changing reg in insn 267
changing reg in insn 268
changing reg in insn 270
changing reg in insn 15
changing reg in insn 18
changing reg in insn 16
changing reg in insn 18
changing reg in insn 258
changing reg in insn 26
changing reg in insn 24
changing reg in insn 26
changing reg in insn 28
changing reg in insn 259
changing reg in insn 244
changing reg in insn 231
changing reg in insn 217
changing reg in insn 201
changing reg in insn 186
changing reg in insn 171
changing reg in insn 157
changing reg in insn 141
changing reg in insn 126
changing reg in insn 113
changing reg in insn 99
changing reg in insn 83
changing reg in insn 68
changing reg in insn 53
changing reg in insn 39
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 17
changing reg in insn 18
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 26
changing reg in insn 35
changing reg in insn 36
changing reg in insn 40
changing reg in insn 41
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 49
changing reg in insn 50
changing reg in insn 54
changing reg in insn 55
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 64
changing reg in insn 65
changing reg in insn 69
changing reg in insn 70
changing reg in insn 74
changing reg in insn 75
changing reg in insn 76
changing reg in insn 79
changing reg in insn 80
changing reg in insn 84
changing reg in insn 85
changing reg in insn 88
changing reg in insn 89
changing reg in insn 90
changing reg in insn 93
changing reg in insn 94
changing reg in insn 95
changing reg in insn 96
changing reg in insn 100
changing reg in insn 101
changing reg in insn 105
changing reg in insn 106
changing reg in insn 107
changing reg in insn 109
changing reg in insn 110
changing reg in insn 114
changing reg in insn 115
changing reg in insn 119
changing reg in insn 120
changing reg in insn 122
changing reg in insn 123
changing reg in insn 127
changing reg in insn 128
changing reg in insn 132
changing reg in insn 133
changing reg in insn 134
changing reg in insn 137
changing reg in insn 138
changing reg in insn 142
changing reg in insn 143
changing reg in insn 146
changing reg in insn 147
changing reg in insn 148
changing reg in insn 151
changing reg in insn 152
changing reg in insn 153
changing reg in insn 154
changing reg in insn 158
changing reg in insn 159
changing reg in insn 163
changing reg in insn 164
changing reg in insn 165
changing reg in insn 166
changing reg in insn 167
changing reg in insn 168
changing reg in insn 172
changing reg in insn 173
changing reg in insn 177
changing reg in insn 178
changing reg in insn 179
changing reg in insn 182
changing reg in insn 183
changing reg in insn 187
changing reg in insn 188
changing reg in insn 192
changing reg in insn 193
changing reg in insn 194
changing reg in insn 197
changing reg in insn 198
changing reg in insn 202
changing reg in insn 203
changing reg in insn 206
changing reg in insn 207
changing reg in insn 208
changing reg in insn 211
changing reg in insn 212
changing reg in insn 213
changing reg in insn 214
changing reg in insn 218
changing reg in insn 219
changing reg in insn 223
changing reg in insn 224
changing reg in insn 225
changing reg in insn 227
changing reg in insn 228
changing reg in insn 232
changing reg in insn 233
changing reg in insn 237
changing reg in insn 238
changing reg in insn 240
changing reg in insn 241
changing reg in insn 245
changing reg in insn 246
changing reg in insn 250
changing reg in insn 251
changing reg in insn 252
changing reg in insn 255
changing reg in insn 256
changing reg in insn 260
changing reg in insn 261
changing reg in insn 264
changing reg in insn 265
changing reg in insn 266
changing reg in insn 269
changing reg in insn 270
deleting insn with uid = 278.
deleting insn with uid = 28.
deleting insn with uid = 280.
deleting insn with uid = 281.
deleting insn with uid = 283.
starting the processing of deferred insns
ending the processing of deferred insns


coefi

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 37 [r8] 38 [r9] 39 [r10] 40 [r11]
;;  ref usage 	r0={12d,29u} r1={12d,28u} r2={140d,140u} r4={31d,31u} r5={1d,1u} r6={1d,66u} r7={1d,2u} r17={63d,2u} r20={1d,1u} r21={33d,32u} r22={17d,16u} r23={11d,10u} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d,1u} r38={1d,1u} r39={1d} r40={1d} 
;;    total ref usage 692{332d,360u,0e} in 266{266 regular + 0 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 1, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 90
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 90
;; lr  def 	 17 [flags
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])
        (reg:DI 5 di [ arrx ])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [3 idim+0 S8 A64])
        (reg:DI 4 si [ idim ])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [3 jdim+0 S8 A64])
        (reg:DI 1 dx [ jdim ])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])
        (reg:DI 2 cx [ i ])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])
        (reg:DI 37 r8 [ j ])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [4 c1+0 S8 A64])
        (reg:DI 38 r9 [ c1 ])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [266])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [3 idim+0 S8 A64])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [266]) [5 *idim_173(D)+0 S4 A32])) "COEFI.f":1 86 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 0 ax [267])
        (sign_extend:DI (reg:SI 0 ax [orig:87 _1 ] [87]))) "COEFI.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 ubound.0+0 S8 A64])
        (reg:DI 0 ax [267])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 15 14 17 2 (set (reg:DI 0 ax [orig:258 stride.2_175 ] [258])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -8 [0xfffffffffffffff8])) [1 ubound.0+0 S8 A64])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 17 15 16 2 (set (reg:DI 1 dx [268])
        (const_int 0 [0])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 16 17 18 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:258 stride.2_175 ] [258])
            (const_int 0 [0]))) "COEFI.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 18 16 19 2 (set (reg:DI 0 ax [orig:259 stride.2_176 ] [259])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:258 stride.2_175 ] [258])
            (reg:DI 1 dx [268]))) "COEFI.f":1 1003 {*movdicc_noc}
     (nil))
(insn 19 18 20 2 (set (reg/f:DI 1 dx [269])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [3 jdim+0 S8 A64])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 1 dx [orig:88 _2 ] [88])
        (mem:SI (reg/f:DI 1 dx [269]) [5 *jdim_177(D)+0 S4 A32])) "COEFI.f":1 86 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 1 dx [270])
        (sign_extend:DI (reg:SI 1 dx [orig:88 _2 ] [88]))) "COEFI.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 22 21 277 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -16 [0xfffffffffffffff0])) [1 ubound.1+0 S8 A64])
        (reg:DI 1 dx [270])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 277 22 23 2 (set (reg:DI 1 dx [orig:260 size.4_179 ] [260])
        (reg:DI 0 ax [orig:259 stride.2_176 ] [259])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 23 277 25 2 (parallel [
            (set (reg:DI 1 dx [orig:260 size.4_179 ] [260])
                (mult:DI (reg:DI 1 dx [orig:260 size.4_179 ] [260])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -16 [0xfffffffffffffff0])) [1 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":1 349 {*muldi3_1}
     (nil))
(insn 25 23 24 2 (set (reg:DI 2 cx [271])
        (const_int 0 [0])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 24 25 26 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 1 dx [orig:260 size.4_179 ] [260])
            (const_int 0 [0]))) "COEFI.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 26 24 29 2 (set (reg:DI 1 dx [orig:261 size.4_180 ] [261])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 1 dx [orig:260 size.4_179 ] [260])
            (reg:DI 2 cx [271]))) "COEFI.f":1 1003 {*movdicc_noc}
     (nil))
(insn 29 26 30 2 (set (reg:DI 39 r10 [orig:90 _4 ] [90])
        (reg:DI 1 dx [orig:89 size.5_3 ] [89])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 30 29 279 2 (set (reg:DI 40 r11 [ _4+8 ])
        (const_int 0 [0])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 279 30 34 2 (set (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
        (reg:DI 0 ax [orig:259 stride.2_176 ] [259])) "COEFI.f":1 85 {*movdi_internal}
     (nil))
(insn 34 279 35 2 (set (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
        (not:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265]))) "COEFI.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 35 34 36 2 (set (reg/f:DI 2 cx [272])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":45 85 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:SI 2 cx [orig:92 _6 ] [92])
        (mem:SI (reg/f:DI 2 cx [272]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":45 86 {*movsi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:DI 2 cx [orig:93 _7 ] [93])
        (sign_extend:DI (reg:SI 2 cx [orig:92 _6 ] [92]))) "COEFI.f":45 149 {*extendsidi2_rex64}
     (nil))
(insn 38 37 39 2 (parallel [
            (set (reg:DI 2 cx [orig:94 _8 ] [94])
                (mult:DI (reg:DI 2 cx [orig:93 _7 ] [93])
                    (reg:DI 0 ax [orig:259 stride.2_176 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":45 349 {*muldi3_1}
     (nil))
(insn 39 38 40 2 (parallel [
            (set (reg:DI 4 si [orig:95 _9 ] [95])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 2 cx [orig:94 _8 ] [94])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":45 222 {*adddi_1}
     (nil))
(insn 40 39 41 2 (set (reg/f:DI 2 cx [273])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":45 85 {*movdi_internal}
     (nil))
(insn 41 40 42 2 (set (reg:SI 2 cx [orig:96 _10 ] [96])
        (mem:SI (reg/f:DI 2 cx [273]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":45 86 {*movsi_internal}
     (nil))
(insn 42 41 43 2 (parallel [
            (set (reg:SI 2 cx [orig:97 _11 ] [97])
                (plus:SI (reg:SI 2 cx [orig:96 _10 ] [96])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":45 221 {*addsi_1}
     (nil))
(insn 43 42 44 2 (set (reg:DI 2 cx [orig:98 _12 ] [98])
        (sign_extend:DI (reg:SI 2 cx [orig:97 _11 ] [97]))) "COEFI.f":45 149 {*extendsidi2_rex64}
     (nil))
(insn 44 43 45 2 (parallel [
            (set (reg:DI 4 si [orig:99 _13 ] [99])
                (plus:DI (reg:DI 4 si [orig:95 _9 ] [95])
                    (reg:DI 2 cx [orig:98 _12 ] [98])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":45 222 {*adddi_1}
     (nil))
(insn 45 44 46 2 (set (reg/f:DI 2 cx [274])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":45 85 {*movdi_internal}
     (nil))
(insn 46 45 47 2 (set (reg:SF 22 xmm1 [orig:100 _14 ] [100])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:99 _13 ] [99])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [274])) [6 *arrx_187(D) S4 A32])) "COEFI.f":45 131 {*movsf_internal}
     (nil))
(insn 47 46 48 2 (set (reg:SF 21 xmm0 [275])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "COEFI.f":45 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.6666699945926666259765625e-1 [0x0.aaaac1p-2])
        (nil)))
(insn 48 47 49 2 (set (reg:SF 22 xmm1 [orig:101 _15 ] [101])
        (mult:SF (reg:SF 22 xmm1 [orig:100 _14 ] [100])
            (reg:SF 21 xmm0 [275]))) "COEFI.f":45 838 {*fop_sf_comm}
     (nil))
(insn 49 48 50 2 (set (reg/f:DI 2 cx [276])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":45 85 {*movdi_internal}
     (nil))
(insn 50 49 51 2 (set (reg:SI 2 cx [orig:102 _16 ] [102])
        (mem:SI (reg/f:DI 2 cx [276]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":45 86 {*movsi_internal}
     (nil))
(insn 51 50 52 2 (set (reg:DI 2 cx [orig:103 _17 ] [103])
        (sign_extend:DI (reg:SI 2 cx [orig:102 _16 ] [102]))) "COEFI.f":45 149 {*extendsidi2_rex64}
     (nil))
(insn 52 51 53 2 (parallel [
            (set (reg:DI 2 cx [orig:104 _18 ] [104])
                (mult:DI (reg:DI 2 cx [orig:103 _17 ] [103])
                    (reg:DI 0 ax [orig:259 stride.2_176 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":45 349 {*muldi3_1}
     (nil))
(insn 53 52 54 2 (parallel [
            (set (reg:DI 4 si [orig:105 _19 ] [105])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 2 cx [orig:104 _18 ] [104])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":45 222 {*adddi_1}
     (nil))
(insn 54 53 55 2 (set (reg/f:DI 2 cx [277])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":45 85 {*movdi_internal}
     (nil))
(insn 55 54 56 2 (set (reg:SI 2 cx [orig:106 _20 ] [106])
        (mem:SI (reg/f:DI 2 cx [277]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":45 86 {*movsi_internal}
     (nil))
(insn 56 55 57 2 (parallel [
            (set (reg:SI 2 cx [orig:107 _21 ] [107])
                (plus:SI (reg:SI 2 cx [orig:106 _20 ] [106])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":45 221 {*addsi_1}
     (nil))
(insn 57 56 58 2 (set (reg:DI 2 cx [orig:108 _22 ] [108])
        (sign_extend:DI (reg:SI 2 cx [orig:107 _21 ] [107]))) "COEFI.f":45 149 {*extendsidi2_rex64}
     (nil))
(insn 58 57 59 2 (parallel [
            (set (reg:DI 4 si [orig:109 _23 ] [109])
                (plus:DI (reg:DI 4 si [orig:105 _19 ] [105])
                    (reg:DI 2 cx [orig:108 _22 ] [108])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":45 222 {*adddi_1}
     (nil))
(insn 59 58 60 2 (set (reg/f:DI 2 cx [278])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":45 85 {*movdi_internal}
     (nil))
(insn 60 59 61 2 (set (reg:SF 23 xmm2 [orig:110 _24 ] [110])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:109 _23 ] [109])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [278])) [6 *arrx_187(D) S4 A32])) "COEFI.f":45 131 {*movsf_internal}
     (nil))
(insn 61 60 62 2 (set (reg:SF 21 xmm0 [279])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "COEFI.f":45 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -5.0e-1 [-0x0.8p+0])
        (nil)))
(insn 62 61 63 2 (set (reg:SF 21 xmm0 [orig:111 _25 ] [111])
        (mult:SF (reg:SF 21 xmm0 [279])
            (reg:SF 23 xmm2 [orig:110 _24 ] [110]))) "COEFI.f":45 838 {*fop_sf_comm}
     (nil))
(insn 63 62 64 2 (set (reg:SF 22 xmm1 [orig:112 _26 ] [112])
        (plus:SF (reg:SF 22 xmm1 [orig:101 _15 ] [101])
            (reg:SF 21 xmm0 [orig:111 _25 ] [111]))) "COEFI.f":45 838 {*fop_sf_comm}
     (nil))
(insn 64 63 65 2 (set (reg/f:DI 2 cx [280])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":45 85 {*movdi_internal}
     (nil))
(insn 65 64 66 2 (set (reg:SI 2 cx [orig:113 _27 ] [113])
        (mem:SI (reg/f:DI 2 cx [280]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":45 86 {*movsi_internal}
     (nil))
(insn 66 65 67 2 (set (reg:DI 2 cx [orig:114 _28 ] [114])
        (sign_extend:DI (reg:SI 2 cx [orig:113 _27 ] [113]))) "COEFI.f":45 149 {*extendsidi2_rex64}
     (nil))
(insn 67 66 68 2 (parallel [
            (set (reg:DI 2 cx [orig:115 _29 ] [115])
                (mult:DI (reg:DI 2 cx [orig:114 _28 ] [114])
                    (reg:DI 0 ax [orig:259 stride.2_176 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":45 349 {*muldi3_1}
     (nil))
(insn 68 67 69 2 (parallel [
            (set (reg:DI 4 si [orig:116 _30 ] [116])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 2 cx [orig:115 _29 ] [115])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":45 222 {*adddi_1}
     (nil))
(insn 69 68 70 2 (set (reg/f:DI 2 cx [281])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":45 85 {*movdi_internal}
     (nil))
(insn 70 69 71 2 (set (reg:SI 2 cx [orig:117 _31 ] [117])
        (mem:SI (reg/f:DI 2 cx [281]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":45 86 {*movsi_internal}
     (nil))
(insn 71 70 72 2 (parallel [
            (set (reg:SI 2 cx [orig:118 _32 ] [118])
                (plus:SI (reg:SI 2 cx [orig:117 _31 ] [117])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":45 221 {*addsi_1}
     (nil))
(insn 72 71 73 2 (set (reg:DI 2 cx [orig:119 _33 ] [119])
        (sign_extend:DI (reg:SI 2 cx [orig:118 _32 ] [118]))) "COEFI.f":45 149 {*extendsidi2_rex64}
     (nil))
(insn 73 72 74 2 (parallel [
            (set (reg:DI 4 si [orig:120 _34 ] [120])
                (plus:DI (reg:DI 4 si [orig:116 _30 ] [116])
                    (reg:DI 2 cx [orig:119 _33 ] [119])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":45 222 {*adddi_1}
     (nil))
(insn 74 73 75 2 (set (reg/f:DI 2 cx [282])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":45 85 {*movdi_internal}
     (nil))
(insn 75 74 76 2 (set (reg:SF 23 xmm2 [orig:121 _35 ] [121])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:120 _34 ] [120])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [282])) [6 *arrx_187(D) S4 A32])) "COEFI.f":45 131 {*movsf_internal}
     (nil))
(insn 76 75 77 2 (set (reg:SF 21 xmm0 [283])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "COEFI.f":45 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e-1 [0x0.8p+0])
        (nil)))
(insn 77 76 78 2 (set (reg:SF 21 xmm0 [orig:122 _36 ] [122])
        (mult:SF (reg:SF 21 xmm0 [283])
            (reg:SF 23 xmm2 [orig:121 _35 ] [121]))) "COEFI.f":45 838 {*fop_sf_comm}
     (nil))
(insn 78 77 79 2 (set (reg:SF 22 xmm1 [orig:123 _37 ] [123])
        (plus:SF (reg:SF 22 xmm1 [orig:112 _26 ] [112])
            (reg:SF 21 xmm0 [orig:122 _36 ] [122]))) "COEFI.f":45 838 {*fop_sf_comm}
     (nil))
(insn 79 78 80 2 (set (reg/f:DI 2 cx [284])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":45 85 {*movdi_internal}
     (nil))
(insn 80 79 81 2 (set (reg:SI 2 cx [orig:124 _38 ] [124])
        (mem:SI (reg/f:DI 2 cx [284]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":45 86 {*movsi_internal}
     (nil))
(insn 81 80 82 2 (set (reg:DI 2 cx [orig:125 _39 ] [125])
        (sign_extend:DI (reg:SI 2 cx [orig:124 _38 ] [124]))) "COEFI.f":45 149 {*extendsidi2_rex64}
     (nil))
(insn 82 81 83 2 (parallel [
            (set (reg:DI 2 cx [orig:126 _40 ] [126])
                (mult:DI (reg:DI 2 cx [orig:125 _39 ] [125])
                    (reg:DI 0 ax [orig:259 stride.2_176 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":45 349 {*muldi3_1}
     (nil))
(insn 83 82 84 2 (parallel [
            (set (reg:DI 4 si [orig:127 _41 ] [127])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 2 cx [orig:126 _40 ] [126])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":45 222 {*adddi_1}
     (nil))
(insn 84 83 85 2 (set (reg/f:DI 2 cx [285])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":45 85 {*movdi_internal}
     (nil))
(insn 85 84 86 2 (set (reg:SI 2 cx [orig:128 _42 ] [128])
        (mem:SI (reg/f:DI 2 cx [285]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":45 86 {*movsi_internal}
     (nil))
(insn 86 85 87 2 (set (reg:DI 2 cx [orig:129 _43 ] [129])
        (sign_extend:DI (reg:SI 2 cx [orig:128 _42 ] [128]))) "COEFI.f":45 149 {*extendsidi2_rex64}
     (nil))
(insn 87 86 88 2 (parallel [
            (set (reg:DI 4 si [orig:130 _44 ] [130])
                (plus:DI (reg:DI 4 si [orig:127 _41 ] [127])
                    (reg:DI 2 cx [orig:129 _43 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":45 222 {*adddi_1}
     (nil))
(insn 88 87 89 2 (set (reg/f:DI 2 cx [286])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":45 85 {*movdi_internal}
     (nil))
(insn 89 88 90 2 (set (reg:SF 23 xmm2 [orig:131 _45 ] [131])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:130 _44 ] [130])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [286])) [6 *arrx_187(D) S4 A32])) "COEFI.f":45 131 {*movsf_internal}
     (nil))
(insn 90 89 91 2 (set (reg:SF 21 xmm0 [287])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "COEFI.f":45 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -1.6666699945926666259765625e-1 [-0x0.aaaac1p-2])
        (nil)))
(insn 91 90 92 2 (set (reg:SF 21 xmm0 [orig:132 _46 ] [132])
        (mult:SF (reg:SF 21 xmm0 [287])
            (reg:SF 23 xmm2 [orig:131 _45 ] [131]))) "COEFI.f":45 838 {*fop_sf_comm}
     (nil))
(insn 92 91 93 2 (set (reg:SF 21 xmm0 [orig:133 _47 ] [133])
        (plus:SF (reg:SF 21 xmm0 [orig:132 _46 ] [132])
            (reg:SF 22 xmm1 [orig:123 _37 ] [123]))) "COEFI.f":45 838 {*fop_sf_comm}
     (nil))
(insn 93 92 94 2 (set (reg/f:DI 2 cx [288])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [4 c1+0 S8 A64])) "COEFI.f":45 85 {*movdi_internal}
     (nil))
(insn 94 93 95 2 (set (mem:SF (reg/f:DI 2 cx [288]) [6 *c1_188(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:133 _47 ] [133])) "COEFI.f":45 131 {*movsf_internal}
     (nil))
(insn 95 94 96 2 (set (reg/f:DI 2 cx [289])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":46 85 {*movdi_internal}
     (nil))
(insn 96 95 97 2 (set (reg:SI 2 cx [orig:134 _48 ] [134])
        (mem:SI (reg/f:DI 2 cx [289]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":46 86 {*movsi_internal}
     (nil))
(insn 97 96 98 2 (set (reg:DI 2 cx [orig:135 _49 ] [135])
        (sign_extend:DI (reg:SI 2 cx [orig:134 _48 ] [134]))) "COEFI.f":46 149 {*extendsidi2_rex64}
     (nil))
(insn 98 97 99 2 (parallel [
            (set (reg:DI 2 cx [orig:136 _50 ] [136])
                (mult:DI (reg:DI 2 cx [orig:135 _49 ] [135])
                    (reg:DI 0 ax [orig:259 stride.2_176 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":46 349 {*muldi3_1}
     (nil))
(insn 99 98 100 2 (parallel [
            (set (reg:DI 4 si [orig:137 _51 ] [137])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 2 cx [orig:136 _50 ] [136])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":46 222 {*adddi_1}
     (nil))
(insn 100 99 101 2 (set (reg/f:DI 2 cx [290])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":46 85 {*movdi_internal}
     (nil))
(insn 101 100 102 2 (set (reg:SI 2 cx [orig:138 _52 ] [138])
        (mem:SI (reg/f:DI 2 cx [290]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":46 86 {*movsi_internal}
     (nil))
(insn 102 101 103 2 (parallel [
            (set (reg:SI 2 cx [orig:139 _53 ] [139])
                (plus:SI (reg:SI 2 cx [orig:138 _52 ] [138])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":46 221 {*addsi_1}
     (nil))
(insn 103 102 104 2 (set (reg:DI 2 cx [orig:140 _54 ] [140])
        (sign_extend:DI (reg:SI 2 cx [orig:139 _53 ] [139]))) "COEFI.f":46 149 {*extendsidi2_rex64}
     (nil))
(insn 104 103 105 2 (parallel [
            (set (reg:DI 4 si [orig:141 _55 ] [141])
                (plus:DI (reg:DI 4 si [orig:137 _51 ] [137])
                    (reg:DI 2 cx [orig:140 _54 ] [140])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":46 222 {*adddi_1}
     (nil))
(insn 105 104 106 2 (set (reg/f:DI 2 cx [291])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":46 85 {*movdi_internal}
     (nil))
(insn 106 105 107 2 (set (reg:SF 22 xmm1 [orig:142 _56 ] [142])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:141 _55 ] [141])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [291])) [6 *arrx_187(D) S4 A32])) "COEFI.f":46 131 {*movsf_internal}
     (nil))
(insn 107 106 108 2 (set (reg:SF 21 xmm0 [292])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "COEFI.f":46 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.5e+0 [0x0.ep+2])
        (nil)))
(insn 108 107 109 2 (set (reg:SF 21 xmm0 [orig:143 _57 ] [143])
        (mult:SF (reg:SF 21 xmm0 [292])
            (reg:SF 22 xmm1 [orig:142 _56 ] [142]))) "COEFI.f":46 838 {*fop_sf_comm}
     (nil))
(insn 109 108 110 2 (set (reg/f:DI 2 cx [293])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":46 85 {*movdi_internal}
     (nil))
(insn 110 109 111 2 (set (reg:SI 2 cx [orig:144 _58 ] [144])
        (mem:SI (reg/f:DI 2 cx [293]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":46 86 {*movsi_internal}
     (nil))
(insn 111 110 112 2 (set (reg:DI 2 cx [orig:145 _59 ] [145])
        (sign_extend:DI (reg:SI 2 cx [orig:144 _58 ] [144]))) "COEFI.f":46 149 {*extendsidi2_rex64}
     (nil))
(insn 112 111 113 2 (parallel [
            (set (reg:DI 2 cx [orig:146 _60 ] [146])
                (mult:DI (reg:DI 2 cx [orig:145 _59 ] [145])
                    (reg:DI 0 ax [orig:259 stride.2_176 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":46 349 {*muldi3_1}
     (nil))
(insn 113 112 114 2 (parallel [
            (set (reg:DI 4 si [orig:147 _61 ] [147])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 2 cx [orig:146 _60 ] [146])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":46 222 {*adddi_1}
     (nil))
(insn 114 113 115 2 (set (reg/f:DI 2 cx [294])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":46 85 {*movdi_internal}
     (nil))
(insn 115 114 116 2 (set (reg:SI 2 cx [orig:148 _62 ] [148])
        (mem:SI (reg/f:DI 2 cx [294]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":46 86 {*movsi_internal}
     (nil))
(insn 116 115 117 2 (parallel [
            (set (reg:SI 2 cx [orig:149 _63 ] [149])
                (plus:SI (reg:SI 2 cx [orig:148 _62 ] [148])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":46 221 {*addsi_1}
     (nil))
(insn 117 116 118 2 (set (reg:DI 2 cx [orig:150 _64 ] [150])
        (sign_extend:DI (reg:SI 2 cx [orig:149 _63 ] [149]))) "COEFI.f":46 149 {*extendsidi2_rex64}
     (nil))
(insn 118 117 119 2 (parallel [
            (set (reg:DI 4 si [orig:151 _65 ] [151])
                (plus:DI (reg:DI 4 si [orig:147 _61 ] [147])
                    (reg:DI 2 cx [orig:150 _64 ] [150])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":46 222 {*adddi_1}
     (nil))
(insn 119 118 120 2 (set (reg/f:DI 2 cx [295])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":46 85 {*movdi_internal}
     (nil))
(insn 120 119 121 2 (set (reg:SF 22 xmm1 [orig:152 _66 ] [152])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:151 _65 ] [151])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [295])) [6 *arrx_187(D) S4 A32])) "COEFI.f":46 131 {*movsf_internal}
     (nil))
(insn 121 120 282 2 (set (reg:SF 21 xmm0 [orig:143 _57 ] [143])
        (minus:SF (reg:SF 21 xmm0 [orig:143 _57 ] [143])
            (reg:SF 22 xmm1 [orig:152 _66 ] [152]))) "COEFI.f":46 841 {*fop_sf_1}
     (nil))
(insn 282 121 122 2 (set (reg:SF 22 xmm1 [orig:153 _67 ] [153])
        (reg:SF 21 xmm0 [orig:143 _57 ] [143])) "COEFI.f":46 131 {*movsf_internal}
     (nil))
(insn 122 282 123 2 (set (reg/f:DI 2 cx [296])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":46 85 {*movdi_internal}
     (nil))
(insn 123 122 124 2 (set (reg:SI 2 cx [orig:154 _68 ] [154])
        (mem:SI (reg/f:DI 2 cx [296]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":46 86 {*movsi_internal}
     (nil))
(insn 124 123 125 2 (set (reg:DI 2 cx [orig:155 _69 ] [155])
        (sign_extend:DI (reg:SI 2 cx [orig:154 _68 ] [154]))) "COEFI.f":46 149 {*extendsidi2_rex64}
     (nil))
(insn 125 124 126 2 (parallel [
            (set (reg:DI 2 cx [orig:156 _70 ] [156])
                (mult:DI (reg:DI 2 cx [orig:155 _69 ] [155])
                    (reg:DI 0 ax [orig:259 stride.2_176 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":46 349 {*muldi3_1}
     (nil))
(insn 126 125 127 2 (parallel [
            (set (reg:DI 4 si [orig:157 _71 ] [157])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 2 cx [orig:156 _70 ] [156])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":46 222 {*adddi_1}
     (nil))
(insn 127 126 128 2 (set (reg/f:DI 2 cx [297])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":46 85 {*movdi_internal}
     (nil))
(insn 128 127 129 2 (set (reg:SI 2 cx [orig:158 _72 ] [158])
        (mem:SI (reg/f:DI 2 cx [297]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":46 86 {*movsi_internal}
     (nil))
(insn 129 128 130 2 (parallel [
            (set (reg:SI 2 cx [orig:159 _73 ] [159])
                (plus:SI (reg:SI 2 cx [orig:158 _72 ] [158])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":46 221 {*addsi_1}
     (nil))
(insn 130 129 131 2 (set (reg:DI 2 cx [orig:160 _74 ] [160])
        (sign_extend:DI (reg:SI 2 cx [orig:159 _73 ] [159]))) "COEFI.f":46 149 {*extendsidi2_rex64}
     (nil))
(insn 131 130 132 2 (parallel [
            (set (reg:DI 4 si [orig:161 _75 ] [161])
                (plus:DI (reg:DI 4 si [orig:157 _71 ] [157])
                    (reg:DI 2 cx [orig:160 _74 ] [160])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":46 222 {*adddi_1}
     (nil))
(insn 132 131 133 2 (set (reg/f:DI 2 cx [298])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":46 85 {*movdi_internal}
     (nil))
(insn 133 132 134 2 (set (reg:SF 23 xmm2 [orig:162 _76 ] [162])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:161 _75 ] [161])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [298])) [6 *arrx_187(D) S4 A32])) "COEFI.f":46 131 {*movsf_internal}
     (nil))
(insn 134 133 135 2 (set (reg:SF 21 xmm0 [299])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "COEFI.f":46 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -4.0e+0 [-0x0.8p+3])
        (nil)))
(insn 135 134 136 2 (set (reg:SF 21 xmm0 [orig:163 _77 ] [163])
        (mult:SF (reg:SF 21 xmm0 [299])
            (reg:SF 23 xmm2 [orig:162 _76 ] [162]))) "COEFI.f":46 838 {*fop_sf_comm}
     (nil))
(insn 136 135 137 2 (set (reg:SF 22 xmm1 [orig:164 _78 ] [164])
        (plus:SF (reg:SF 22 xmm1 [orig:153 _67 ] [153])
            (reg:SF 21 xmm0 [orig:163 _77 ] [163]))) "COEFI.f":46 838 {*fop_sf_comm}
     (nil))
(insn 137 136 138 2 (set (reg/f:DI 2 cx [300])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":46 85 {*movdi_internal}
     (nil))
(insn 138 137 139 2 (set (reg:SI 2 cx [orig:165 _79 ] [165])
        (mem:SI (reg/f:DI 2 cx [300]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":46 86 {*movsi_internal}
     (nil))
(insn 139 138 140 2 (set (reg:DI 2 cx [orig:166 _80 ] [166])
        (sign_extend:DI (reg:SI 2 cx [orig:165 _79 ] [165]))) "COEFI.f":46 149 {*extendsidi2_rex64}
     (nil))
(insn 140 139 141 2 (parallel [
            (set (reg:DI 2 cx [orig:167 _81 ] [167])
                (mult:DI (reg:DI 2 cx [orig:166 _80 ] [166])
                    (reg:DI 0 ax [orig:259 stride.2_176 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":46 349 {*muldi3_1}
     (nil))
(insn 141 140 142 2 (parallel [
            (set (reg:DI 4 si [orig:168 _82 ] [168])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 2 cx [orig:167 _81 ] [167])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":46 222 {*adddi_1}
     (nil))
(insn 142 141 143 2 (set (reg/f:DI 2 cx [301])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":46 85 {*movdi_internal}
     (nil))
(insn 143 142 144 2 (set (reg:SI 2 cx [orig:169 _83 ] [169])
        (mem:SI (reg/f:DI 2 cx [301]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":46 86 {*movsi_internal}
     (nil))
(insn 144 143 145 2 (set (reg:DI 2 cx [orig:170 _84 ] [170])
        (sign_extend:DI (reg:SI 2 cx [orig:169 _83 ] [169]))) "COEFI.f":46 149 {*extendsidi2_rex64}
     (nil))
(insn 145 144 146 2 (parallel [
            (set (reg:DI 4 si [orig:171 _85 ] [171])
                (plus:DI (reg:DI 4 si [orig:168 _82 ] [168])
                    (reg:DI 2 cx [orig:170 _84 ] [170])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":46 222 {*adddi_1}
     (nil))
(insn 146 145 147 2 (set (reg/f:DI 2 cx [302])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":46 85 {*movdi_internal}
     (nil))
(insn 147 146 148 2 (set (reg:SF 23 xmm2 [orig:172 _86 ] [172])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:171 _85 ] [171])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [302])) [6 *arrx_187(D) S4 A32])) "COEFI.f":46 131 {*movsf_internal}
     (nil))
(insn 148 147 149 2 (set (reg:SF 21 xmm0 [303])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "COEFI.f":46 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.5e+0 [0x0.cp+1])
        (nil)))
(insn 149 148 150 2 (set (reg:SF 21 xmm0 [orig:173 _87 ] [173])
        (mult:SF (reg:SF 21 xmm0 [303])
            (reg:SF 23 xmm2 [orig:172 _86 ] [172]))) "COEFI.f":46 838 {*fop_sf_comm}
     (nil))
(insn 150 149 151 2 (set (reg:SF 21 xmm0 [orig:174 _88 ] [174])
        (plus:SF (reg:SF 21 xmm0 [orig:173 _87 ] [173])
            (reg:SF 22 xmm1 [orig:164 _78 ] [164]))) "COEFI.f":46 838 {*fop_sf_comm}
     (nil))
(insn 151 150 152 2 (set (reg/f:DI 2 cx [304])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [4 c2+0 S8 A64])) "COEFI.f":46 85 {*movdi_internal}
     (nil))
(insn 152 151 153 2 (set (mem:SF (reg/f:DI 2 cx [304]) [6 *c2_190(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:174 _88 ] [174])) "COEFI.f":46 131 {*movsf_internal}
     (nil))
(insn 153 152 154 2 (set (reg/f:DI 2 cx [305])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":47 85 {*movdi_internal}
     (nil))
(insn 154 153 155 2 (set (reg:SI 2 cx [orig:175 _89 ] [175])
        (mem:SI (reg/f:DI 2 cx [305]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":47 86 {*movsi_internal}
     (nil))
(insn 155 154 156 2 (set (reg:DI 2 cx [orig:176 _90 ] [176])
        (sign_extend:DI (reg:SI 2 cx [orig:175 _89 ] [175]))) "COEFI.f":47 149 {*extendsidi2_rex64}
     (nil))
(insn 156 155 157 2 (parallel [
            (set (reg:DI 2 cx [orig:177 _91 ] [177])
                (mult:DI (reg:DI 2 cx [orig:176 _90 ] [176])
                    (reg:DI 0 ax [orig:259 stride.2_176 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":47 349 {*muldi3_1}
     (nil))
(insn 157 156 158 2 (parallel [
            (set (reg:DI 4 si [orig:178 _92 ] [178])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 2 cx [orig:177 _91 ] [177])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":47 222 {*adddi_1}
     (nil))
(insn 158 157 159 2 (set (reg/f:DI 2 cx [306])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":47 85 {*movdi_internal}
     (nil))
(insn 159 158 160 2 (set (reg:SI 2 cx [orig:179 _93 ] [179])
        (mem:SI (reg/f:DI 2 cx [306]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":47 86 {*movsi_internal}
     (nil))
(insn 160 159 161 2 (parallel [
            (set (reg:SI 2 cx [orig:180 _94 ] [180])
                (plus:SI (reg:SI 2 cx [orig:179 _93 ] [179])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":47 221 {*addsi_1}
     (nil))
(insn 161 160 162 2 (set (reg:DI 2 cx [orig:181 _95 ] [181])
        (sign_extend:DI (reg:SI 2 cx [orig:180 _94 ] [180]))) "COEFI.f":47 149 {*extendsidi2_rex64}
     (nil))
(insn 162 161 163 2 (parallel [
            (set (reg:DI 4 si [orig:182 _96 ] [182])
                (plus:DI (reg:DI 4 si [orig:178 _92 ] [178])
                    (reg:DI 2 cx [orig:181 _95 ] [181])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":47 222 {*adddi_1}
     (nil))
(insn 163 162 164 2 (set (reg/f:DI 2 cx [307])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":47 85 {*movdi_internal}
     (nil))
(insn 164 163 165 2 (set (reg:SF 22 xmm1 [orig:183 _97 ] [183])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:182 _96 ] [182])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [307])) [6 *arrx_187(D) S4 A32])) "COEFI.f":47 131 {*movsf_internal}
     (nil))
(insn 165 164 166 2 (set (reg:SF 21 xmm0 [308])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "COEFI.f":47 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.83333301544189453125e+0 [0x0.eaaaa8p+1])
        (nil)))
(insn 166 165 167 2 (set (reg:SF 22 xmm1 [orig:184 _98 ] [184])
        (mult:SF (reg:SF 22 xmm1 [orig:183 _97 ] [183])
            (reg:SF 21 xmm0 [308]))) "COEFI.f":47 838 {*fop_sf_comm}
     (nil))
(insn 167 166 168 2 (set (reg/f:DI 2 cx [309])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":47 85 {*movdi_internal}
     (nil))
(insn 168 167 169 2 (set (reg:SI 2 cx [orig:185 _99 ] [185])
        (mem:SI (reg/f:DI 2 cx [309]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":47 86 {*movsi_internal}
     (nil))
(insn 169 168 170 2 (set (reg:DI 2 cx [orig:186 _100 ] [186])
        (sign_extend:DI (reg:SI 2 cx [orig:185 _99 ] [185]))) "COEFI.f":47 149 {*extendsidi2_rex64}
     (nil))
(insn 170 169 171 2 (parallel [
            (set (reg:DI 2 cx [orig:187 _101 ] [187])
                (mult:DI (reg:DI 2 cx [orig:186 _100 ] [186])
                    (reg:DI 0 ax [orig:259 stride.2_176 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":47 349 {*muldi3_1}
     (nil))
(insn 171 170 172 2 (parallel [
            (set (reg:DI 4 si [orig:188 _102 ] [188])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 2 cx [orig:187 _101 ] [187])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":47 222 {*adddi_1}
     (nil))
(insn 172 171 173 2 (set (reg/f:DI 2 cx [310])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":47 85 {*movdi_internal}
     (nil))
(insn 173 172 174 2 (set (reg:SI 2 cx [orig:189 _103 ] [189])
        (mem:SI (reg/f:DI 2 cx [310]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":47 86 {*movsi_internal}
     (nil))
(insn 174 173 175 2 (parallel [
            (set (reg:SI 2 cx [orig:190 _104 ] [190])
                (plus:SI (reg:SI 2 cx [orig:189 _103 ] [189])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":47 221 {*addsi_1}
     (nil))
(insn 175 174 176 2 (set (reg:DI 2 cx [orig:191 _105 ] [191])
        (sign_extend:DI (reg:SI 2 cx [orig:190 _104 ] [190]))) "COEFI.f":47 149 {*extendsidi2_rex64}
     (nil))
(insn 176 175 177 2 (parallel [
            (set (reg:DI 4 si [orig:192 _106 ] [192])
                (plus:DI (reg:DI 4 si [orig:188 _102 ] [188])
                    (reg:DI 2 cx [orig:191 _105 ] [191])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":47 222 {*adddi_1}
     (nil))
(insn 177 176 178 2 (set (reg/f:DI 2 cx [311])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":47 85 {*movdi_internal}
     (nil))
(insn 178 177 179 2 (set (reg:SF 23 xmm2 [orig:193 _107 ] [193])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:192 _106 ] [192])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [311])) [6 *arrx_187(D) S4 A32])) "COEFI.f":47 131 {*movsf_internal}
     (nil))
(insn 179 178 180 2 (set (reg:SF 21 xmm0 [312])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "COEFI.f":47 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -7.0e+0 [-0x0.ep+3])
        (nil)))
(insn 180 179 181 2 (set (reg:SF 21 xmm0 [orig:194 _108 ] [194])
        (mult:SF (reg:SF 21 xmm0 [312])
            (reg:SF 23 xmm2 [orig:193 _107 ] [193]))) "COEFI.f":47 838 {*fop_sf_comm}
     (nil))
(insn 181 180 182 2 (set (reg:SF 22 xmm1 [orig:195 _109 ] [195])
        (plus:SF (reg:SF 22 xmm1 [orig:184 _98 ] [184])
            (reg:SF 21 xmm0 [orig:194 _108 ] [194]))) "COEFI.f":47 838 {*fop_sf_comm}
     (nil))
(insn 182 181 183 2 (set (reg/f:DI 2 cx [313])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":47 85 {*movdi_internal}
     (nil))
(insn 183 182 184 2 (set (reg:SI 2 cx [orig:196 _110 ] [196])
        (mem:SI (reg/f:DI 2 cx [313]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":47 86 {*movsi_internal}
     (nil))
(insn 184 183 185 2 (set (reg:DI 2 cx [orig:197 _111 ] [197])
        (sign_extend:DI (reg:SI 2 cx [orig:196 _110 ] [196]))) "COEFI.f":47 149 {*extendsidi2_rex64}
     (nil))
(insn 185 184 186 2 (parallel [
            (set (reg:DI 2 cx [orig:198 _112 ] [198])
                (mult:DI (reg:DI 2 cx [orig:197 _111 ] [197])
                    (reg:DI 0 ax [orig:259 stride.2_176 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":47 349 {*muldi3_1}
     (nil))
(insn 186 185 187 2 (parallel [
            (set (reg:DI 4 si [orig:199 _113 ] [199])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 2 cx [orig:198 _112 ] [198])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":47 222 {*adddi_1}
     (nil))
(insn 187 186 188 2 (set (reg/f:DI 2 cx [314])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":47 85 {*movdi_internal}
     (nil))
(insn 188 187 189 2 (set (reg:SI 2 cx [orig:200 _114 ] [200])
        (mem:SI (reg/f:DI 2 cx [314]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":47 86 {*movsi_internal}
     (nil))
(insn 189 188 190 2 (parallel [
            (set (reg:SI 2 cx [orig:201 _115 ] [201])
                (plus:SI (reg:SI 2 cx [orig:200 _114 ] [200])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":47 221 {*addsi_1}
     (nil))
(insn 190 189 191 2 (set (reg:DI 2 cx [orig:202 _116 ] [202])
        (sign_extend:DI (reg:SI 2 cx [orig:201 _115 ] [201]))) "COEFI.f":47 149 {*extendsidi2_rex64}
     (nil))
(insn 191 190 192 2 (parallel [
            (set (reg:DI 4 si [orig:203 _117 ] [203])
                (plus:DI (reg:DI 4 si [orig:199 _113 ] [199])
                    (reg:DI 2 cx [orig:202 _116 ] [202])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":47 222 {*adddi_1}
     (nil))
(insn 192 191 193 2 (set (reg/f:DI 2 cx [315])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":47 85 {*movdi_internal}
     (nil))
(insn 193 192 194 2 (set (reg:SF 23 xmm2 [orig:204 _118 ] [204])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:203 _117 ] [203])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [315])) [6 *arrx_187(D) S4 A32])) "COEFI.f":47 131 {*movsf_internal}
     (nil))
(insn 194 193 195 2 (set (reg:SF 21 xmm0 [316])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "COEFI.f":47 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.5e+0 [0x0.98p+4])
        (nil)))
(insn 195 194 196 2 (set (reg:SF 21 xmm0 [orig:205 _119 ] [205])
        (mult:SF (reg:SF 21 xmm0 [316])
            (reg:SF 23 xmm2 [orig:204 _118 ] [204]))) "COEFI.f":47 838 {*fop_sf_comm}
     (nil))
(insn 196 195 197 2 (set (reg:SF 22 xmm1 [orig:206 _120 ] [206])
        (plus:SF (reg:SF 22 xmm1 [orig:195 _109 ] [195])
            (reg:SF 21 xmm0 [orig:205 _119 ] [205]))) "COEFI.f":47 838 {*fop_sf_comm}
     (nil))
(insn 197 196 198 2 (set (reg/f:DI 2 cx [317])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":47 85 {*movdi_internal}
     (nil))
(insn 198 197 199 2 (set (reg:SI 2 cx [orig:207 _121 ] [207])
        (mem:SI (reg/f:DI 2 cx [317]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":47 86 {*movsi_internal}
     (nil))
(insn 199 198 200 2 (set (reg:DI 2 cx [orig:208 _122 ] [208])
        (sign_extend:DI (reg:SI 2 cx [orig:207 _121 ] [207]))) "COEFI.f":47 149 {*extendsidi2_rex64}
     (nil))
(insn 200 199 201 2 (parallel [
            (set (reg:DI 2 cx [orig:209 _123 ] [209])
                (mult:DI (reg:DI 2 cx [orig:208 _122 ] [208])
                    (reg:DI 0 ax [orig:259 stride.2_176 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":47 349 {*muldi3_1}
     (nil))
(insn 201 200 202 2 (parallel [
            (set (reg:DI 4 si [orig:210 _124 ] [210])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 2 cx [orig:209 _123 ] [209])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":47 222 {*adddi_1}
     (nil))
(insn 202 201 203 2 (set (reg/f:DI 2 cx [318])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":47 85 {*movdi_internal}
     (nil))
(insn 203 202 204 2 (set (reg:SI 2 cx [orig:211 _125 ] [211])
        (mem:SI (reg/f:DI 2 cx [318]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":47 86 {*movsi_internal}
     (nil))
(insn 204 203 205 2 (set (reg:DI 2 cx [orig:212 _126 ] [212])
        (sign_extend:DI (reg:SI 2 cx [orig:211 _125 ] [211]))) "COEFI.f":47 149 {*extendsidi2_rex64}
     (nil))
(insn 205 204 206 2 (parallel [
            (set (reg:DI 4 si [orig:213 _127 ] [213])
                (plus:DI (reg:DI 4 si [orig:210 _124 ] [210])
                    (reg:DI 2 cx [orig:212 _126 ] [212])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":47 222 {*adddi_1}
     (nil))
(insn 206 205 207 2 (set (reg/f:DI 2 cx [319])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":47 85 {*movdi_internal}
     (nil))
(insn 207 206 208 2 (set (reg:SF 23 xmm2 [orig:214 _128 ] [214])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:213 _127 ] [213])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [319])) [6 *arrx_187(D) S4 A32])) "COEFI.f":47 131 {*movsf_internal}
     (nil))
(insn 208 207 209 2 (set (reg:SF 21 xmm0 [320])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "COEFI.f":47 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -4.33333301544189453125e+0 [-0x0.8aaaaap+3])
        (nil)))
(insn 209 208 210 2 (set (reg:SF 21 xmm0 [orig:215 _129 ] [215])
        (mult:SF (reg:SF 21 xmm0 [320])
            (reg:SF 23 xmm2 [orig:214 _128 ] [214]))) "COEFI.f":47 838 {*fop_sf_comm}
     (nil))
(insn 210 209 211 2 (set (reg:SF 21 xmm0 [orig:216 _130 ] [216])
        (plus:SF (reg:SF 21 xmm0 [orig:215 _129 ] [215])
            (reg:SF 22 xmm1 [orig:206 _120 ] [206]))) "COEFI.f":47 838 {*fop_sf_comm}
     (nil))
(insn 211 210 212 2 (set (reg/f:DI 2 cx [321])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [4 c3+0 S8 A64])) "COEFI.f":47 85 {*movdi_internal}
     (nil))
(insn 212 211 213 2 (set (mem:SF (reg/f:DI 2 cx [321]) [6 *c3_192(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:216 _130 ] [216])) "COEFI.f":47 131 {*movsf_internal}
     (nil))
(insn 213 212 214 2 (set (reg/f:DI 2 cx [322])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":48 85 {*movdi_internal}
     (nil))
(insn 214 213 215 2 (set (reg:SI 2 cx [orig:217 _131 ] [217])
        (mem:SI (reg/f:DI 2 cx [322]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":48 86 {*movsi_internal}
     (nil))
(insn 215 214 216 2 (set (reg:DI 2 cx [orig:218 _132 ] [218])
        (sign_extend:DI (reg:SI 2 cx [orig:217 _131 ] [217]))) "COEFI.f":48 149 {*extendsidi2_rex64}
     (nil))
(insn 216 215 217 2 (parallel [
            (set (reg:DI 2 cx [orig:219 _133 ] [219])
                (mult:DI (reg:DI 2 cx [orig:218 _132 ] [218])
                    (reg:DI 0 ax [orig:259 stride.2_176 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":48 349 {*muldi3_1}
     (nil))
(insn 217 216 218 2 (parallel [
            (set (reg:DI 4 si [orig:220 _134 ] [220])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 2 cx [orig:219 _133 ] [219])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":48 222 {*adddi_1}
     (nil))
(insn 218 217 219 2 (set (reg/f:DI 2 cx [323])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":48 85 {*movdi_internal}
     (nil))
(insn 219 218 220 2 (set (reg:SI 2 cx [orig:221 _135 ] [221])
        (mem:SI (reg/f:DI 2 cx [323]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":48 86 {*movsi_internal}
     (nil))
(insn 220 219 221 2 (parallel [
            (set (reg:SI 2 cx [orig:222 _136 ] [222])
                (plus:SI (reg:SI 2 cx [orig:221 _135 ] [221])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":48 221 {*addsi_1}
     (nil))
(insn 221 220 222 2 (set (reg:DI 2 cx [orig:223 _137 ] [223])
        (sign_extend:DI (reg:SI 2 cx [orig:222 _136 ] [222]))) "COEFI.f":48 149 {*extendsidi2_rex64}
     (nil))
(insn 222 221 223 2 (parallel [
            (set (reg:DI 4 si [orig:224 _138 ] [224])
                (plus:DI (reg:DI 4 si [orig:220 _134 ] [220])
                    (reg:DI 2 cx [orig:223 _137 ] [223])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":48 222 {*adddi_1}
     (nil))
(insn 223 222 224 2 (set (reg/f:DI 2 cx [324])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":48 85 {*movdi_internal}
     (nil))
(insn 224 223 225 2 (set (reg:SF 22 xmm1 [orig:225 _139 ] [225])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:224 _138 ] [224])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [324])) [6 *arrx_187(D) S4 A32])) "COEFI.f":48 131 {*movsf_internal}
     (nil))
(insn 225 224 226 2 (set (reg:SF 21 xmm0 [325])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "COEFI.f":48 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 226 225 227 2 (set (reg:SF 21 xmm0 [orig:226 _140 ] [226])
        (mult:SF (reg:SF 21 xmm0 [325])
            (reg:SF 22 xmm1 [orig:225 _139 ] [225]))) "COEFI.f":48 838 {*fop_sf_comm}
     (nil))
(insn 227 226 228 2 (set (reg/f:DI 2 cx [326])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":48 85 {*movdi_internal}
     (nil))
(insn 228 227 229 2 (set (reg:SI 2 cx [orig:227 _141 ] [227])
        (mem:SI (reg/f:DI 2 cx [326]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":48 86 {*movsi_internal}
     (nil))
(insn 229 228 230 2 (set (reg:DI 2 cx [orig:228 _142 ] [228])
        (sign_extend:DI (reg:SI 2 cx [orig:227 _141 ] [227]))) "COEFI.f":48 149 {*extendsidi2_rex64}
     (nil))
(insn 230 229 231 2 (parallel [
            (set (reg:DI 2 cx [orig:229 _143 ] [229])
                (mult:DI (reg:DI 2 cx [orig:228 _142 ] [228])
                    (reg:DI 0 ax [orig:259 stride.2_176 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":48 349 {*muldi3_1}
     (nil))
(insn 231 230 232 2 (parallel [
            (set (reg:DI 4 si [orig:230 _144 ] [230])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 2 cx [orig:229 _143 ] [229])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":48 222 {*adddi_1}
     (nil))
(insn 232 231 233 2 (set (reg/f:DI 2 cx [327])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":48 85 {*movdi_internal}
     (nil))
(insn 233 232 234 2 (set (reg:SI 2 cx [orig:231 _145 ] [231])
        (mem:SI (reg/f:DI 2 cx [327]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":48 86 {*movsi_internal}
     (nil))
(insn 234 233 235 2 (parallel [
            (set (reg:SI 2 cx [orig:232 _146 ] [232])
                (plus:SI (reg:SI 2 cx [orig:231 _145 ] [231])
                    (const_int 6 [0x6])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":48 221 {*addsi_1}
     (nil))
(insn 235 234 236 2 (set (reg:DI 2 cx [orig:233 _147 ] [233])
        (sign_extend:DI (reg:SI 2 cx [orig:232 _146 ] [232]))) "COEFI.f":48 149 {*extendsidi2_rex64}
     (nil))
(insn 236 235 237 2 (parallel [
            (set (reg:DI 4 si [orig:234 _148 ] [234])
                (plus:DI (reg:DI 4 si [orig:230 _144 ] [230])
                    (reg:DI 2 cx [orig:233 _147 ] [233])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":48 222 {*adddi_1}
     (nil))
(insn 237 236 238 2 (set (reg/f:DI 2 cx [328])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":48 85 {*movdi_internal}
     (nil))
(insn 238 237 239 2 (set (reg:SF 22 xmm1 [orig:235 _149 ] [235])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:234 _148 ] [234])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [328])) [6 *arrx_187(D) S4 A32])) "COEFI.f":48 131 {*movsf_internal}
     (nil))
(insn 239 238 284 2 (set (reg:SF 21 xmm0 [orig:226 _140 ] [226])
        (minus:SF (reg:SF 21 xmm0 [orig:226 _140 ] [226])
            (reg:SF 22 xmm1 [orig:235 _149 ] [235]))) "COEFI.f":48 841 {*fop_sf_1}
     (nil))
(insn 284 239 240 2 (set (reg:SF 22 xmm1 [orig:236 _150 ] [236])
        (reg:SF 21 xmm0 [orig:226 _140 ] [226])) "COEFI.f":48 131 {*movsf_internal}
     (nil))
(insn 240 284 241 2 (set (reg/f:DI 2 cx [329])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":48 85 {*movdi_internal}
     (nil))
(insn 241 240 242 2 (set (reg:SI 2 cx [orig:237 _151 ] [237])
        (mem:SI (reg/f:DI 2 cx [329]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":48 86 {*movsi_internal}
     (nil))
(insn 242 241 243 2 (set (reg:DI 2 cx [orig:238 _152 ] [238])
        (sign_extend:DI (reg:SI 2 cx [orig:237 _151 ] [237]))) "COEFI.f":48 149 {*extendsidi2_rex64}
     (nil))
(insn 243 242 244 2 (parallel [
            (set (reg:DI 2 cx [orig:239 _153 ] [239])
                (mult:DI (reg:DI 2 cx [orig:238 _152 ] [238])
                    (reg:DI 0 ax [orig:259 stride.2_176 ] [259])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":48 349 {*muldi3_1}
     (nil))
(insn 244 243 245 2 (parallel [
            (set (reg:DI 4 si [orig:240 _154 ] [240])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 2 cx [orig:239 _153 ] [239])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":48 222 {*adddi_1}
     (nil))
(insn 245 244 246 2 (set (reg/f:DI 2 cx [330])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":48 85 {*movdi_internal}
     (nil))
(insn 246 245 247 2 (set (reg:SI 2 cx [orig:241 _155 ] [241])
        (mem:SI (reg/f:DI 2 cx [330]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":48 86 {*movsi_internal}
     (nil))
(insn 247 246 248 2 (parallel [
            (set (reg:SI 2 cx [orig:242 _156 ] [242])
                (plus:SI (reg:SI 2 cx [orig:241 _155 ] [241])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":48 221 {*addsi_1}
     (nil))
(insn 248 247 249 2 (set (reg:DI 2 cx [orig:243 _157 ] [243])
        (sign_extend:DI (reg:SI 2 cx [orig:242 _156 ] [242]))) "COEFI.f":48 149 {*extendsidi2_rex64}
     (nil))
(insn 249 248 250 2 (parallel [
            (set (reg:DI 4 si [orig:244 _158 ] [244])
                (plus:DI (reg:DI 4 si [orig:240 _154 ] [240])
                    (reg:DI 2 cx [orig:243 _157 ] [243])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":48 222 {*adddi_1}
     (nil))
(insn 250 249 251 2 (set (reg/f:DI 2 cx [331])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":48 85 {*movdi_internal}
     (nil))
(insn 251 250 252 2 (set (reg:SF 23 xmm2 [orig:245 _159 ] [245])
        (mem:SF (plus:DI (mult:DI (reg:DI 4 si [orig:244 _158 ] [244])
                    (const_int 4 [0x4]))
                (reg/f:DI 2 cx [331])) [6 *arrx_187(D) S4 A32])) "COEFI.f":48 131 {*movsf_internal}
     (nil))
(insn 252 251 253 2 (set (reg:SF 21 xmm0 [332])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "COEFI.f":48 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -6.0e+0 [-0x0.cp+3])
        (nil)))
(insn 253 252 254 2 (set (reg:SF 21 xmm0 [orig:246 _160 ] [246])
        (mult:SF (reg:SF 21 xmm0 [332])
            (reg:SF 23 xmm2 [orig:245 _159 ] [245]))) "COEFI.f":48 838 {*fop_sf_comm}
     (nil))
(insn 254 253 255 2 (set (reg:SF 22 xmm1 [orig:247 _161 ] [247])
        (plus:SF (reg:SF 22 xmm1 [orig:236 _150 ] [236])
            (reg:SF 21 xmm0 [orig:246 _160 ] [246]))) "COEFI.f":48 838 {*fop_sf_comm}
     (nil))
(insn 255 254 256 2 (set (reg/f:DI 2 cx [333])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [3 j+0 S8 A64])) "COEFI.f":48 85 {*movdi_internal}
     (nil))
(insn 256 255 257 2 (set (reg:SI 2 cx [orig:248 _162 ] [248])
        (mem:SI (reg/f:DI 2 cx [333]) [5 *j_185(D)+0 S4 A32])) "COEFI.f":48 86 {*movsi_internal}
     (nil))
(insn 257 256 258 2 (set (reg:DI 2 cx [orig:249 _163 ] [249])
        (sign_extend:DI (reg:SI 2 cx [orig:248 _162 ] [248]))) "COEFI.f":48 149 {*extendsidi2_rex64}
     (nil))
(insn 258 257 259 2 (parallel [
            (set (reg:DI 0 ax [orig:250 _164 ] [250])
                (mult:DI (reg:DI 0 ax [orig:259 stride.2_176 ] [259])
                    (reg:DI 2 cx [orig:249 _163 ] [249])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":48 349 {*muldi3_1}
     (nil))
(insn 259 258 260 2 (parallel [
            (set (reg:DI 1 dx [orig:251 _165 ] [251])
                (plus:DI (reg:DI 1 dx [orig:265 offset.3_184 ] [265])
                    (reg:DI 0 ax [orig:250 _164 ] [250])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":48 222 {*adddi_1}
     (nil))
(insn 260 259 261 2 (set (reg/f:DI 0 ax [334])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [3 i+0 S8 A64])) "COEFI.f":48 85 {*movdi_internal}
     (nil))
(insn 261 260 262 2 (set (reg:SI 0 ax [orig:252 _166 ] [252])
        (mem:SI (reg/f:DI 0 ax [334]) [5 *i_186(D)+0 S4 A32])) "COEFI.f":48 86 {*movsi_internal}
     (nil))
(insn 262 261 263 2 (set (reg:DI 0 ax [orig:253 _167 ] [253])
        (sign_extend:DI (reg:SI 0 ax [orig:252 _166 ] [252]))) "COEFI.f":48 149 {*extendsidi2_rex64}
     (nil))
(insn 263 262 264 2 (parallel [
            (set (reg:DI 1 dx [orig:254 _168 ] [254])
                (plus:DI (reg:DI 1 dx [orig:251 _165 ] [251])
                    (reg:DI 0 ax [orig:253 _167 ] [253])))
            (clobber (reg:CC 17 flags))
        ]) "COEFI.f":48 222 {*adddi_1}
     (nil))
(insn 264 263 265 2 (set (reg/f:DI 0 ax [335])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [2 arrx+0 S8 A64])) "COEFI.f":48 85 {*movdi_internal}
     (nil))
(insn 265 264 266 2 (set (reg:SF 23 xmm2 [orig:255 _169 ] [255])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:254 _168 ] [254])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [335])) [6 *arrx_187(D) S4 A32])) "COEFI.f":48 131 {*movsf_internal}
     (nil))
(insn 266 265 267 2 (set (reg:SF 21 xmm0 [336])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "COEFI.f":48 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 4.0e+0 [0x0.8p+3])
        (nil)))
(insn 267 266 268 2 (set (reg:SF 21 xmm0 [orig:256 _170 ] [256])
        (mult:SF (reg:SF 21 xmm0 [336])
            (reg:SF 23 xmm2 [orig:255 _169 ] [255]))) "COEFI.f":48 838 {*fop_sf_comm}
     (nil))
(insn 268 267 269 2 (set (reg:SF 21 xmm0 [orig:257 _171 ] [257])
        (plus:SF (reg:SF 21 xmm0 [orig:256 _170 ] [256])
            (reg:SF 22 xmm1 [orig:247 _161 ] [247]))) "COEFI.f":48 838 {*fop_sf_comm}
     (nil))
(insn 269 268 270 2 (set (reg/f:DI 0 ax [337])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [4 c4+0 S8 A64])) "COEFI.f":48 85 {*movdi_internal}
     (nil))
(insn 270 269 275 2 (set (mem:SF (reg/f:DI 0 ax [337]) [6 *c4_194(D)+0 S4 A32])
        (reg:SF 21 xmm0 [orig:257 _171 ] [257])) "COEFI.f":48 131 {*movsf_internal}
     (nil))
(insn 275 270 276 2 (const_int 0 [0]) "COEFI.f":49 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 276 275 0 NOTE_INSN_DELETED)
