
;; Function dir (dir_, funcdef_no=0, decl_uid=3768, cgraph_uid=0, symbol_order=0)



try_optimize_cfg iteration 1

Redirecting fallthru edge 3->4 to 13
deleting block 4
Redirecting fallthru edge 5->6 to 8
deleting block 6
Removing jump 30.
Deleted label in block 8.
Redirecting fallthru edge 9->10 to 12
deleting block 10
Removing jump 48.
Removing jump 56.
Redirecting fallthru edge 13->14 to 16
deleting block 14
Redirecting fallthru edge 16->17 to 19
deleting block 17


try_optimize_cfg iteration 2



try_optimize_cfg iteration 1

fix_loop_structure: fixing up loops for function
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
(note 5 0 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 x+0 S8 A64])
        (reg:DI 5 di [ x ])) "DIR.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 y+0 S8 A64])
        (reg:DI 4 si [ y ])) "DIR.f":1 85 {*movdi_internal}
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 x+0 S8 A64])) "DIR.f":41 85 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:SF 87 [ _1 ])
        (mem:SF (reg/f:DI 104) [1 *x_20(D)+0 S4 A32])) "DIR.f":41 131 {*movsf_internal}
     (nil))
(insn 9 8 10 2 (set (reg:SF 105)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "DIR.f":41 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 10 9 11 2 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 87 [ _1 ])
                    (reg:SF 105))
            ] UNSPEC_NOTRAP)) "DIR.f":41 54 {*cmpiusf}
     (nil))
(jump_insn 11 10 112 2 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 58)
            (pc))) "DIR.f":41 682 {*jcc}
     (nil)
 -> 58)
;;  succ:       13
;;              3 (FALLTHRU)

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
(note 112 11 12 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 12 112 13 3 (set (reg:SF 106)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "DIR.f":41 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 13 12 14 3 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 87 [ _1 ])
                    (reg:SF 106))
            ] UNSPEC_NOTRAP)) "DIR.f":41 54 {*cmpiusf}
     (nil))
(jump_insn 14 13 124 3 (set (pc)
        (if_then_else (uneq (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 124)
            (pc))) "DIR.f":41 682 {*jcc}
     (nil)
 -> 124)
;;  succ:       5
;;              13 (FALLTHRU)

;; basic block 5, loop depth 0, maybe hot
;;  prev block 3, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
(code_label 124 14 18 5 14 (nil) [1 uses])
(note 18 124 19 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 19 18 20 5 (set (reg/f:DI 107)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 y+0 S8 A64])) "DIR.f":42 85 {*movdi_internal}
     (nil))
(insn 20 19 21 5 (set (reg:SF 88 [ _2 ])
        (mem:SF (reg/f:DI 107) [1 *y_21(D)+0 S4 A32])) "DIR.f":42 131 {*movsf_internal}
     (nil))
(insn 21 20 22 5 (set (reg:SF 108)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "DIR.f":42 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 22 21 23 5 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 88 [ _2 ])
            (reg:SF 108))) "DIR.f":42 53 {*cmpisf}
     (nil))
(jump_insn 23 22 125 5 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 125)
            (pc))) "DIR.f":42 682 {*jcc}
     (nil)
 -> 125)
;;  succ:       7
;;              8 (FALLTHRU)

;; basic block 7, loop depth 0, maybe hot
;;  prev block 5, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
(code_label 125 23 27 7 15 (nil) [1 uses])
(note 27 125 28 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 7 (set (reg:SF 109)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "DIR.f":43 131 {*movsf_internal}
     (nil))
(insn 29 28 33 7 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __result_dir+0 S4 A32])
        (reg:SF 109)) "DIR.f":43 131 {*movsf_internal}
     (nil))
;;  succ:       19 [always]  (FALLTHRU)

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
(note 33 29 34 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 8 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 x+0 S8 A64])) "DIR.f":44 85 {*movdi_internal}
     (nil))
(insn 35 34 36 8 (set (reg:SF 89 [ _3 ])
        (mem:SF (reg/f:DI 110) [1 *x_20(D)+0 S4 A32])) "DIR.f":44 131 {*movsf_internal}
     (nil))
(insn 36 35 37 8 (set (reg:SF 111)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "DIR.f":44 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 37 36 38 8 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 89 [ _3 ])
                    (reg:SF 111))
            ] UNSPEC_NOTRAP)) "DIR.f":44 54 {*cmpiusf}
     (nil))
(jump_insn 38 37 117 8 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 50)
            (pc))) "DIR.f":44 682 {*jcc}
     (nil)
 -> 50)
;;  succ:       12
;;              9 (FALLTHRU)

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
(note 117 38 39 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 39 117 40 9 (set (reg:SF 112)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "DIR.f":44 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 40 39 41 9 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 89 [ _3 ])
                    (reg:SF 112))
            ] UNSPEC_NOTRAP)) "DIR.f":44 54 {*cmpiusf}
     (nil))
(jump_insn 41 40 126 9 (set (pc)
        (if_then_else (uneq (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 126)
            (pc))) "DIR.f":44 682 {*jcc}
     (nil)
 -> 126)
;;  succ:       11
;;              12 (FALLTHRU)

;; basic block 11, loop depth 0, maybe hot
;;  prev block 9, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
(code_label 126 41 45 11 16 (nil) [1 uses])
(note 45 126 46 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 46 45 47 11 (set (reg:SF 113)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "DIR.f":45 131 {*movsf_internal}
     (nil))
(insn 47 46 50 11 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __result_dir+0 S4 A32])
        (reg:SF 113)) "DIR.f":45 131 {*movsf_internal}
     (nil))
;;  succ:       19 [always]  (FALLTHRU)

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (NEW, REACHABLE, RTL)
;;  pred:       8
;;              9 (FALLTHRU)
(code_label 50 47 51 12 7 (nil) [1 uses])
(note 51 50 52 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 52 51 53 12 (set (reg:SF 114)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "DIR.f":47 131 {*movsf_internal}
     (nil))
(insn 53 52 58 12 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __result_dir+0 S4 A32])
        (reg:SF 114)) "DIR.f":47 131 {*movsf_internal}
     (nil))
;;  succ:       19 [always]  (FALLTHRU)

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 15, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2
;;              3 (FALLTHRU)
(code_label 58 53 59 13 2 (nil) [1 uses])
(note 59 58 60 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 60 59 61 13 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [2 y+0 S8 A64])) "DIR.f":50 85 {*movdi_internal}
     (nil))
(insn 61 60 62 13 (set (reg:SF 90 [ _4 ])
        (mem:SF (reg/f:DI 115) [1 *y_21(D)+0 S4 A32])) "DIR.f":50 131 {*movsf_internal}
     (nil))
(insn 62 61 63 13 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 x+0 S8 A64])) "DIR.f":50 85 {*movdi_internal}
     (nil))
(insn 63 62 64 13 (set (reg:SF 91 [ _5 ])
        (mem:SF (reg/f:DI 116) [1 *x_20(D)+0 S4 A32])) "DIR.f":50 131 {*movsf_internal}
     (nil))
(insn 64 63 65 13 (set (reg:SF 92 [ _6 ])
        (div:SF (reg:SF 90 [ _4 ])
            (reg:SF 91 [ _5 ]))) "DIR.f":50 841 {*fop_sf_1}
     (nil))
(insn 65 64 66 13 (set (reg:SF 21 xmm0)
        (reg:SF 92 [ _6 ])) "DIR.f":50 131 {*movsf_internal}
     (nil))
(call_insn/u 66 65 67 13 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("atanf") [flags 0x41]  <function_decl 0x7f4276c49800 __builtin_atanf>) [0 __builtin_atanf S1 A8])
            (const_int 0 [0]))) "DIR.f":50 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 67 66 68 13 (set (reg:SF 93 [ _7 ])
        (reg:SF 21 xmm0)) "DIR.f":50 131 {*movsf_internal}
     (nil))
(insn 68 67 69 13 (set (reg:SF 117)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "DIR.f":50 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.8e+2 [0x0.b4p+8])
        (nil)))
(insn 69 68 70 13 (set (reg:SF 94 [ _8 ])
        (mult:SF (reg:SF 93 [ _7 ])
            (reg:SF 117))) "DIR.f":50 838 {*fop_sf_comm}
     (nil))
(insn 70 69 71 13 (set (reg:SF 118)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "DIR.f":50 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.141590118408203125e+0 [0x0.c90fdp+2])
        (nil)))
(insn 71 70 72 13 (set (reg:SF 95 [ _9 ])
        (div:SF (reg:SF 94 [ _8 ])
            (reg:SF 118))) "DIR.f":50 841 {*fop_sf_1}
     (nil))
(insn 72 71 73 13 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __result_dir+0 S4 A32])
        (reg:SF 95 [ _9 ])) "DIR.f":50 131 {*movsf_internal}
     (nil))
(insn 73 72 74 13 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [2 x+0 S8 A64])) "DIR.f":51 85 {*movdi_internal}
     (nil))
(insn 74 73 75 13 (set (reg:SF 96 [ _10 ])
        (mem:SF (reg/f:DI 119) [1 *x_20(D)+0 S4 A32])) "DIR.f":51 131 {*movsf_internal}
     (nil))
(insn 75 74 76 13 (set (reg:SF 120)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "DIR.f":51 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 76 75 77 13 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 120)
            (reg:SF 96 [ _10 ]))) "DIR.f":51 53 {*cmpisf}
     (nil))
(jump_insn 77 76 127 13 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 127)
            (pc))) "DIR.f":51 682 {*jcc}
     (nil)
 -> 127)
;;  succ:       15
;;              16 (FALLTHRU)

;; basic block 15, loop depth 0, maybe hot
;;  prev block 13, next block 16, flags: (NEW, REACHABLE, RTL)
;;  pred:       13
(code_label 127 77 81 15 17 (nil) [1 uses])
(note 81 127 82 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 15 (set (reg:SF 97 [ __result_dir.0_11 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __result_dir+0 S4 A32])) "DIR.f":52 131 {*movsf_internal}
     (nil))
(insn 83 82 84 15 (set (reg:SF 121)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "DIR.f":52 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.8e+2 [0x0.b4p+8])
        (nil)))
(insn 84 83 85 15 (set (reg:SF 98 [ _12 ])
        (plus:SF (reg:SF 97 [ __result_dir.0_11 ])
            (reg:SF 121))) "DIR.f":52 838 {*fop_sf_comm}
     (nil))
(insn 85 84 86 15 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __result_dir+0 S4 A32])
        (reg:SF 98 [ _12 ])) "DIR.f":52 131 {*movsf_internal}
     (nil))
;;  succ:       16 (FALLTHRU)

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 18, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;;              13 (FALLTHRU)
(code_label 86 85 87 16 10 (nil) [0 uses])
(note 87 86 88 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 89 16 (set (reg:SF 99 [ __result_dir.1_13 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __result_dir+0 S4 A32])) "DIR.f":54 131 {*movsf_internal}
     (nil))
(insn 89 88 90 16 (set (reg:SF 122)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "DIR.f":54 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 0.0 [0x0.0p+0])
        (nil)))
(insn 90 89 91 16 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 122)
            (reg:SF 99 [ __result_dir.1_13 ]))) "DIR.f":54 53 {*cmpisf}
     (nil))
(jump_insn 91 90 128 16 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 128)
            (pc))) "DIR.f":54 682 {*jcc}
     (nil)
 -> 128)
;;  succ:       18
;;              19 (FALLTHRU)

;; basic block 18, loop depth 0, maybe hot
;;  prev block 16, next block 19, flags: (NEW, REACHABLE, RTL)
;;  pred:       16
(code_label 128 91 95 18 18 (nil) [1 uses])
(note 95 128 96 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 18 (set (reg:SF 100 [ __result_dir.2_14 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __result_dir+0 S4 A32])) "DIR.f":55 131 {*movsf_internal}
     (nil))
(insn 97 96 98 18 (set (reg:SF 123)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "DIR.f":55 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.6e+2 [0x0.b4p+9])
        (nil)))
(insn 98 97 99 18 (set (reg:SF 101 [ _15 ])
        (plus:SF (reg:SF 100 [ __result_dir.2_14 ])
            (reg:SF 123))) "DIR.f":55 838 {*fop_sf_comm}
     (nil))
(insn 99 98 100 18 (set (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __result_dir+0 S4 A32])
        (reg:SF 101 [ _15 ])) "DIR.f":55 131 {*movsf_internal}
     (nil))
;;  succ:       19 (FALLTHRU)

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       12 [always]  (FALLTHRU)
;;              18 (FALLTHRU)
;;              16 (FALLTHRU)
;;              7 [always]  (FALLTHRU)
;;              11 [always]  (FALLTHRU)
(code_label 100 99 101 19 9 (nil) [0 uses])
(note 101 100 102 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 102 101 105 19 (set (reg:SF 102 [ _28 ])
        (mem/c:SF (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [1 __result_dir+0 S4 A32])) "DIR.f":58 131 {*movsf_internal}
     (nil))
(insn 105 102 109 19 (set (reg:SF 103 [ <retval> ])
        (reg:SF 102 [ _28 ])) 131 {*movsf_internal}
     (nil))
(insn 109 105 110 19 (set (reg/i:SF 21 xmm0)
        (reg:SF 103 [ <retval> ])) "DIR.f":59 131 {*movsf_internal}
     (nil))
(insn 110 109 0 19 (use (reg/i:SF 21 xmm0)) "DIR.f":59 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

