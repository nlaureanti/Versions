
;; Function calrh2 (calrh2_, funcdef_no=0, decl_uid=3768, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=720, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=656, prev_offset=0)
Can eliminate 20 to 6 (offset=-48, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 11:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 13:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 14:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 15:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 17:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 18:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=361 from oldreg=292, assigning class GENERAL_REGS to r361
   18: r361:DI={(flags:CCGOC>=0)?r253:DI:r361:DI}
      REG_DEAD r292:DI
      REG_DEAD r253:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  444: r361:DI=r292:DI
    Inserting insn reload after:
  445: r254:DI=r361:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 19:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 20:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 21:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 22:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 23:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=362 from oldreg=255, assigning class GENERAL_REGS to r362
   23: {r362:DI=r362:DI*[frame:DI-0x40];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  446: r362:DI=r254:DI
    Inserting insn reload after:
  447: r255:DI=r362:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 25:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 26:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 29:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 30:  (0) r  (1) Z {*movdi_internal}
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 34:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=363 from oldreg=260, assigning class GENERAL_REGS to r363
   34: r363:DI=~r363:DI
    Inserting insn reload before:
  448: r363:DI=r254:DI
    Inserting insn reload after:
  449: r260:DI=r363:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 449:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 35:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 36:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 37:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 38:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 39:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 41:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 40:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 42:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=364 from oldreg=298, assigning class GENERAL_REGS to r364
   42: r364:DI={(flags:CCGOC>=0)?r261:DI:r364:DI}
      REG_DEAD r298:DI
      REG_DEAD r261:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  450: r364:DI=r298:DI
    Inserting insn reload after:
  451: r262:DI=r364:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 43:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 44:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 45:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 46:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 47:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=365 from oldreg=263, assigning class GENERAL_REGS to r365
   47: {r365:DI=r365:DI*[frame:DI-0x50];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  452: r365:DI=r262:DI
    Inserting insn reload after:
  453: r263:DI=r365:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 49:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 48:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 50:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) m  (1) re {*movdi_internal}
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 58:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=366 from oldreg=268, assigning class GENERAL_REGS to r366
   58: r366:DI=~r366:DI
    Inserting insn reload before:
  454: r366:DI=r262:DI
    Inserting insn reload after:
  455: r268:DI=r366:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 455:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 59:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 60:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 61:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 62:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 63:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 65:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 64:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 66:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=367 from oldreg=304, assigning class GENERAL_REGS to r367
   66: r367:DI={(flags:CCGOC>=0)?r269:DI:r367:DI}
      REG_DEAD r304:DI
      REG_DEAD r269:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  456: r367:DI=r304:DI
    Inserting insn reload after:
  457: r270:DI=r367:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 67:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 68:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 69:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 70:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 71:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=368 from oldreg=271, assigning class GENERAL_REGS to r368
   71: {r368:DI=r368:DI*[frame:DI-0x60];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  458: r368:DI=r270:DI
    Inserting insn reload after:
  459: r271:DI=r368:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 73:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 72:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 74:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 77:  (0) m  (1) re {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=2,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=3,overall=7,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
          alt=4,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 78:  (0) m  (1) re {*movdi_internal}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 82:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=369 from oldreg=276, assigning class GENERAL_REGS to r369
   82: r369:DI=~r369:DI
    Inserting insn reload before:
  460: r369:DI=r270:DI
    Inserting insn reload after:
  461: r276:DI=r369:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 83:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 86:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 87:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 89:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 88:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
	 Choosing alt 0 in insn 90:  (0) =r  (2) rm  (3) 0 {*movdicc_noc}
      Creating newreg=370 from oldreg=310, assigning class GENERAL_REGS to r370
   90: r370:DI={(flags:CCGOC>=0)?r277:DI:r370:DI}
      REG_DEAD r310:DI
      REG_DEAD r277:DI
      REG_DEAD flags:CCGOC
    Inserting insn reload before:
  462: r370:DI=r310:DI
    Inserting insn reload after:
  463: r278:DI=r370:DI

            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 91:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 94:  (0) m  (1) re {*movdi_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 2 in insn 95:  (0) r  (1) 0  (2) mr {*muldi3_1}
      Creating newreg=371 from oldreg=279, assigning class GENERAL_REGS to r371
   95: {r371:DI=r371:DI*[frame:DI-0x70];clobber flags:CC;}
      REG_UNUSED flags:CC
    Inserting insn reload before:
  464: r371:DI=r278:DI
    Inserting insn reload after:
  465: r279:DI=r371:DI

          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 97:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) r {*cmpdi_ccno_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 98:  (0) r  (2) 0  (3) rm {*movdicc_noc}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 101:  (0) r  (1) rem {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 102:  (0) r  (1) Z {*movdi_internal}
            0 Non pseudo reload: reject++
            1 Matching alt: reject+=2
          alt=0,overall=15,losers=2,rld_nregs=2
	 Choosing alt 0 in insn 106:  (0) =rm  (1) 0 {*one_cmpldi2_1}
      Creating newreg=372 from oldreg=284, assigning class GENERAL_REGS to r372
  106: r372:DI=~r372:DI
    Inserting insn reload before:
  466: r372:DI=r278:DI
    Inserting insn reload after:
  467: r284:DI=r372:DI

            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=5,overall=2,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 467:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =r  (1) g {*movsi_internal}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=3,overall=8,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=4,overall=14,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=17,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=7: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=11,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=12,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            alt=15: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=16: Bad operand -- refuse
	 Choosing alt 0 in insn 108:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=373 from oldreg=286, assigning class GENERAL_REGS to r373
  108: r373:SI=[const(`parallel_'+0xc)]
    Inserting insn reload after:
  468: r286:SI=r373:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 468:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 109:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 111:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) rm  (1) re {*cmpsi_1}
      Creating newreg=374 from oldreg=286, assigning class GENERAL_REGS to r374
      Making reload reg 374 for reg 286 optional
  112: flags:CCGC=cmp(r374:SI,r107:SI)
      REG_DEAD r107:SI
    Inserting insn reload before:
  469: r374:SI=r286:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 469:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 113:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 114:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 115:  (0) r {*cmpsi_ccno_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 118:  (0) r  (1) rem {*movdi_internal}
            0 Non input pseudo reload: reject++
          alt=0,overall=7,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=10,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=2,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=3,overall=8,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=4,overall=14,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=5,overall=17,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=6,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=7: Bad operand -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=8,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=9,overall=8,losers=1 -- refuse
            0 Costly loser: reject++
            0 Non input pseudo reload: reject++
            alt=10,overall=8,losers=1 -- refuse
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=11,overall=11,losers=1 -- refuse
            Staticly defined alt reject+=6
            0 Non input pseudo reload: reject++
            alt=12,overall=13,losers=1 -- refuse
            Staticly defined alt reject+=6
            alt=13: Bad operand -- refuse
            alt=14: Bad operand -- refuse
            alt=15: Bad operand -- refuse
            0 Non pseudo reload: reject++
            alt=16: Bad operand -- refuse
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
      Creating newreg=375 from oldreg=288, assigning class GENERAL_REGS to r375
  119: r375:SI=[r315:DI]
      REG_DEAD r315:DI
    Inserting insn reload after:
  470: r288:SI=r375:SI

            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=608,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=1,overall=2,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 470:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 120:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) rm  (1) re {*cmpsi_1}
      Creating newreg=376 from oldreg=288, assigning class GENERAL_REGS to r376
      Making reload reg 376 for reg 288 optional
  123: flags:CCGC=cmp(r376:SI,r108:SI)
      REG_DEAD r108:SI
    Inserting insn reload before:
  471: r376:SI=r288:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 471:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 124:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 125:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 126:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 129:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 130:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 131
	 Choosing alt 2 in insn 131:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 132:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=377 from oldreg=260, assigning class GENERAL_REGS to r377
  132: {r112:DI=r377:DI+r111:DI;clobber flags:CC;}
      REG_DEAD r111:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  472: r377:DI=r260:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 472:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 133:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 134:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 136:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 137:  (0) v  (1) m {*movsf_internal}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 138:  (0) v  (1) vm {movv4sf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =Yv  (1) 0  (2) Yvm {*absnegsf2}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 140:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 141:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 148:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 149
	 Choosing alt 2 in insn 149:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 150:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=378 from oldreg=260, assigning class GENERAL_REGS to r378
  150: {r121:DI=r378:DI+r120:DI;clobber flags:CC;}
      REG_DEAD r120:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  473: r378:DI=r260:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 473:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 151:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 152:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 153:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 154:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 155:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 156:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=2,overall=8,losers=1,rld_nregs=2
	 Choosing alt 2 in insn 157:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=379 from oldreg=321, assigning class SSE_REGS to r379
  157: r379:SF=r379:SF/r125:SF
      REG_DEAD r321:SF
      REG_DEAD r125:SF
    Inserting insn reload before:
  474: r379:SF=r321:SF
    Inserting insn reload after:
  475: r126:SF=r379:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 475:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 159:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 160
	 Choosing alt 2 in insn 160:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 161:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=380 from oldreg=268, assigning class GENERAL_REGS to r380
  161: {r130:DI=r380:DI+r129:DI;clobber flags:CC;}
      REG_DEAD r129:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  476: r380:DI=r268:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 476:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 162:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 165:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 166:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 167:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 168:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 170:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 171
	 Choosing alt 1 in insn 171:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 173:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 174
	 Choosing alt 2 in insn 174:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 175:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=381 from oldreg=268, assigning class GENERAL_REGS to r381
  175: {r141:DI=r381:DI+r140:DI;clobber flags:CC;}
      REG_DEAD r140:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  477: r381:DI=r268:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 477:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 176:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 177:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 178:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 179:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 180:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 181:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 182:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 184:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 186:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 188
	 Choosing alt 1 in insn 188:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=382 from oldreg=126, assigning class SSE_REGS to r382
      Making reload reg 382 for reg 126 optional
  188: r150:SF=r149:SF*r382:SF
      REG_DEAD r149:SF
      REG_DEAD r126:SF
    Inserting insn reload before:
  478: r382:SF=r126:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 478:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 189:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 190:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 191:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 192:  (0) v  (1) vm {*cmpisf}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 198:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 199:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 200:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 201:  (0) m  (1) re {*movsi_internal}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 202:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 205:  (0) r  (1) r  (2) le {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 206:  (0) r  (1) Z {*movdi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 207:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 209:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 210:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 211:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 212:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 216:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 217:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 222:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 223:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 224:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 226:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 227:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 229
	 Choosing alt 2 in insn 229:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 230:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=383 from oldreg=260, assigning class GENERAL_REGS to r383
  230: {r155:DI=r383:DI+r154:DI;clobber flags:CC;}
      REG_DEAD r154:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  479: r383:DI=r260:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 479:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 231:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 233
	 Choosing alt 0 in insn 233:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 234:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 235:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 236:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 237:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 238:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 241:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 242:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 244:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 247:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 248:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 249
	 Choosing alt 2 in insn 249:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 250:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=384 from oldreg=268, assigning class GENERAL_REGS to r384
  250: {r163:DI=r384:DI+r162:DI;clobber flags:CC;}
      REG_DEAD r162:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  480: r384:DI=r268:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 480:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 251:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 252:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 253
	 Choosing alt 0 in insn 253:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 254:  (0) r  (1) l  (2) M {*ashldi3_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 255:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            alt=2,overall=6,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 256:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 257:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 258:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 261:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 262:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 263:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 264:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 266:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 267:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 268:  (0) =r  (1) g {*movsi_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 269:  (0) r  (1) Z {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 271:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 272:  (0) r  (1) r  (2) le {*adddi_1}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 273:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 274:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 277:  (0) rBwBz {*call}
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=0,overall=10,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
          alt=1,overall=10,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 278:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 280:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 283:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 284:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 285
	 Choosing alt 2 in insn 285:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 286:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=385 from oldreg=284, assigning class GENERAL_REGS to r385
  286: {r171:DI=r385:DI+r170:DI;clobber flags:CC;}
      REG_DEAD r170:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  481: r385:DI=r284:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 481:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 287:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 288:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 289:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 290:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 291:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 292:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 293:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 294:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 295
	 Choosing alt 2 in insn 295:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 296:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 297:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 298:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 299:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 300:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 301:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 302:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 303:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 304:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 305
	 Choosing alt 2 in insn 305:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 306:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 307:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 308:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 310:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 311:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 312:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 313:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 319:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 320:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 321
	 Choosing alt 2 in insn 321:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 322:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 323:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 325:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 326:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 327:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 328:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 329:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 330:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 331
	 Choosing alt 2 in insn 331:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 332:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 333:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 334:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 335:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 336:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 337:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 338:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 339:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 340:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 341
	 Choosing alt 2 in insn 341:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 342:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=386 from oldreg=284, assigning class GENERAL_REGS to r386
  342: {r212:DI=r386:DI+r211:DI;clobber flags:CC;}
      REG_DEAD r211:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  482: r386:DI=r284:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 482:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 343:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 344:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 345:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 346
	 Choosing alt 1 in insn 346:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 347:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 348:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 351:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 352:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 353
	 Choosing alt 2 in insn 353:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 354:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 355:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 356:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 357:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 358:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 359:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 360:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 361:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 367:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 368:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 369
	 Choosing alt 2 in insn 369:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 370:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 371:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 372:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 373:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 374:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 375:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 376:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 377:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 378:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 379
	 Choosing alt 2 in insn 379:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
          alt=2,overall=6,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 380:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 381:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 382:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 383:  (0) =r  (1) %0  (2) rme {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 384:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 385:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 386:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 387:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 388:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
            1 Matching alt: reject+=2
          alt=2,overall=8,losers=1,rld_nregs=1
            alt=0: Bad operand -- refuse
            alt=1: Bad operand -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 389
	 Choosing alt 2 in insn 389:  (0) r  (1) 0  (2) mr {*muldi3_1}
            1 Matching alt: reject+=2
          alt=0,overall=8,losers=1,rld_nregs=1
            1 Matching alt: reject+=2
          alt=1,overall=8,losers=1,rld_nregs=1
            alt=2,overall=12,losers=2 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
            alt=0,overall=7,losers=1 -- refuse
            alt=1,overall=12,losers=2 -- refuse
            2 Matching alt: reject+=2
            alt=2,overall=8,losers=1 -- refuse
          alt=3,overall=6,losers=1,rld_nregs=1
	 Choosing alt 3 in insn 390:  (0) r  (1) r  (2) le {*adddi_1}
      Creating newreg=387 from oldreg=284, assigning class GENERAL_REGS to r387
  390: {r244:DI=r387:DI+r243:DI;clobber flags:CC;}
      REG_DEAD r243:DI
      REG_UNUSED flags:CC
    Inserting insn reload before:
  483: r387:DI=r284:DI

            0 Non pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=3,overall=2,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 483:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 391:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 392:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 393:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 394
	 Choosing alt 1 in insn 394:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 395:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 396:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 399:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 400:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 401:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 407:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 408:  (0) =r  (1) %0  (2) rme {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 409:  (0) m  (1) re {*movsi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6 7 8
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=388 from oldreg=268, assigning class GENERAL_REGS to inheritance r388
    Original reg change 268->388 (bb7):
  477: r381:DI=r388:DI
    Add inheritance<-original before:
  484: r388:DI=r268:DI

    Inheritance reuse change 268->388 (bb8):
  480: r384:DI=r388:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=389 from oldreg=268, assigning class GENERAL_REGS to inheritance r389
    Original reg change 268->389 (bb7):
  476: r380:DI=r389:DI
    Add inheritance<-original before:
  485: r389:DI=r268:DI

    Inheritance reuse change 268->389 (bb7):
  484: r388:DI=r389:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=390 from oldreg=126, assigning class SSE_REGS to inheritance r390
    Original reg change 126->390 (bb7):
  475: r390:SF=r379:SF
    Add original<-inheritance after:
  486: r126:SF=r390:SF

    Inheritance reuse change 126->390 (bb7):
  478: r382:SF=r390:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=391 from oldreg=260, assigning class GENERAL_REGS to inheritance r391
    Original reg change 260->391 (bb7):
  473: r378:DI=r391:DI
    Add inheritance<-original before:
  487: r391:DI=r260:DI

    Inheritance reuse change 260->391 (bb8):
  479: r383:DI=r391:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=392 from oldreg=260, assigning class GENERAL_REGS to inheritance r392
    Original reg change 260->392 (bb6):
  472: r377:DI=r392:DI
    Add inheritance<-original before:
  488: r392:DI=r260:DI

    Inheritance reuse change 260->392 (bb7):
  487: r391:DI=r392:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   486: r126:SF=r390:SF
deleting insn with uid = 486.
EBB 9 10
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=393 from oldreg=284, assigning class GENERAL_REGS to inheritance r393
    Original reg change 284->393 (bb9):
  481: r385:DI=r393:DI
    Add inheritance<-original before:
  489: r393:DI=r284:DI

    Inheritance reuse change 284->393 (bb10):
  482: r386:DI=r393:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
EBB 11 12
EBB 13
EBB 17
EBB 14
EBB 16
EBB 15

********** Pseudo live ranges #1: **********

  BB 15
   Insn 432: point = 0, n_alt = -1
  BB 16
   Insn 439: point = 0, n_alt = -1
  BB 3
   Insn 116: point = 0, n_alt = -1
   Insn 115: point = 0, n_alt = 0
   Insn 114: point = 1, n_alt = 0
   Insn 113: point = 3, n_alt = 0
   Insn 112: point = 4, n_alt = 0
   Insn 469: point = 5, n_alt = 0
   Insn 111: point = 6, n_alt = 0
  BB 14
   Insn 435: point = 8, n_alt = -1
   Insn 409: point = 8, n_alt = 1
   Insn 408: point = 9, n_alt = 0
   Insn 407: point = 11, n_alt = 0
  BB 17
   Insn 442: point = 13, n_alt = -1
  BB 5
   Insn 127: point = 14, n_alt = -1
   Insn 126: point = 14, n_alt = 0
   Insn 125: point = 15, n_alt = 0
   Insn 124: point = 17, n_alt = 0
   Insn 123: point = 18, n_alt = 0
   Insn 471: point = 19, n_alt = 0
   Insn 122: point = 20, n_alt = 0
  BB 13
   Insn 433: point = 22, n_alt = -1
   Insn 401: point = 22, n_alt = 1
   Insn 400: point = 23, n_alt = 0
   Insn 399: point = 25, n_alt = 0
  BB 12
   Insn 396: point = 27, n_alt = 8
   Insn 395: point = 28, n_alt = 3
   Insn 394: point = 29, n_alt = 1
   Insn 393: point = 31, n_alt = 0
   Insn 392: point = 33, n_alt = 0
   Insn 391: point = 35, n_alt = 0
   Insn 390: point = 36, n_alt = 3
   Insn 483: point = 38, n_alt = 3
   Insn 389: point = 39, n_alt = 2
   Insn 388: point = 41, n_alt = 0
   Insn 387: point = 43, n_alt = 0
   Insn 386: point = 44, n_alt = 7
   Insn 385: point = 45, n_alt = 7
   Insn 384: point = 47, n_alt = 3
   Insn 383: point = 48, n_alt = 0
   Insn 382: point = 50, n_alt = 0
   Insn 381: point = 52, n_alt = 0
   Insn 380: point = 53, n_alt = 3
   Insn 379: point = 55, n_alt = 2
   Insn 378: point = 57, n_alt = 0
   Insn 377: point = 59, n_alt = 0
   Insn 376: point = 60, n_alt = 8
   Insn 375: point = 61, n_alt = 7
   Insn 374: point = 62, n_alt = 3
   Insn 373: point = 63, n_alt = 0
   Insn 372: point = 65, n_alt = 0
   Insn 371: point = 67, n_alt = 0
   Insn 370: point = 68, n_alt = 3
   Insn 369: point = 70, n_alt = 2
   Insn 368: point = 72, n_alt = 0
   Insn 367: point = 74, n_alt = 0
  BB 11
   Insn 362: point = 76, n_alt = -1
   Insn 361: point = 76, n_alt = 1
   Insn 360: point = 77, n_alt = 7
   Insn 359: point = 78, n_alt = 7
   Insn 358: point = 80, n_alt = 3
   Insn 357: point = 81, n_alt = 0
   Insn 356: point = 83, n_alt = 0
   Insn 355: point = 85, n_alt = 0
   Insn 354: point = 86, n_alt = 3
   Insn 353: point = 88, n_alt = 2
   Insn 352: point = 90, n_alt = 0
   Insn 351: point = 92, n_alt = 0
  BB 10
   Insn 348: point = 94, n_alt = 8
   Insn 347: point = 95, n_alt = 3
   Insn 346: point = 96, n_alt = 1
   Insn 345: point = 98, n_alt = 0
   Insn 344: point = 100, n_alt = 0
   Insn 343: point = 102, n_alt = 0
   Insn 342: point = 103, n_alt = 3
   Insn 482: point = 105, n_alt = 3
	   Creating copy r386<-r393@1000
   Insn 341: point = 107, n_alt = 2
   Insn 340: point = 109, n_alt = 0
   Insn 339: point = 111, n_alt = 0
   Insn 338: point = 112, n_alt = 7
   Insn 337: point = 113, n_alt = 7
   Insn 336: point = 115, n_alt = 3
   Insn 335: point = 116, n_alt = 0
   Insn 334: point = 118, n_alt = 0
   Insn 333: point = 120, n_alt = 0
   Insn 332: point = 121, n_alt = 3
   Insn 331: point = 123, n_alt = 2
   Insn 330: point = 125, n_alt = 0
   Insn 329: point = 127, n_alt = 0
   Insn 328: point = 128, n_alt = 8
   Insn 327: point = 129, n_alt = 7
   Insn 326: point = 130, n_alt = 3
   Insn 325: point = 131, n_alt = 0
   Insn 324: point = 133, n_alt = 0
   Insn 323: point = 135, n_alt = 0
   Insn 322: point = 136, n_alt = 3
   Insn 321: point = 138, n_alt = 2
   Insn 320: point = 140, n_alt = 0
   Insn 319: point = 142, n_alt = 0
  BB 9
   Insn 314: point = 144, n_alt = -1
   Insn 313: point = 144, n_alt = 1
   Insn 312: point = 145, n_alt = 7
   Insn 311: point = 146, n_alt = 7
   Insn 310: point = 148, n_alt = 3
   Insn 309: point = 149, n_alt = 0
   Insn 308: point = 151, n_alt = 0
   Insn 307: point = 153, n_alt = 0
   Insn 306: point = 154, n_alt = 3
   Insn 305: point = 156, n_alt = 2
   Insn 304: point = 158, n_alt = 0
   Insn 303: point = 160, n_alt = 0
   Insn 302: point = 161, n_alt = 8
   Insn 301: point = 162, n_alt = 3
   Insn 300: point = 163, n_alt = 2
   Insn 299: point = 165, n_alt = 0
   Insn 298: point = 167, n_alt = 0
   Insn 297: point = 169, n_alt = 0
   Insn 296: point = 170, n_alt = 3
   Insn 295: point = 172, n_alt = 2
   Insn 294: point = 174, n_alt = 0
   Insn 293: point = 176, n_alt = 0
   Insn 292: point = 177, n_alt = 7
   Insn 291: point = 178, n_alt = 7
   Insn 290: point = 180, n_alt = 3
   Insn 289: point = 181, n_alt = 0
   Insn 288: point = 183, n_alt = 0
   Insn 287: point = 185, n_alt = 0
   Insn 286: point = 186, n_alt = 3
   Insn 481: point = 188, n_alt = 3
	   Creating copy r385<-r393@1000
   Insn 489: point = 189, n_alt = -1
   Insn 285: point = 190, n_alt = 2
   Insn 284: point = 192, n_alt = 0
   Insn 283: point = 194, n_alt = 0
  BB 8
   Insn 280: point = 196, n_alt = 0
   Insn 279: point = 196, n_alt = -2
   Insn 278: point = 197, n_alt = 3
   Insn 277: point = 198, n_alt = 0
   Insn 276: point = 198, n_alt = -2
   Insn 275: point = 199, n_alt = -2
   Insn 274: point = 200, n_alt = 0
   Insn 273: point = 200, n_alt = 3
   Insn 272: point = 201, n_alt = 3
   Insn 271: point = 202, n_alt = 0
   Insn 270: point = 202, n_alt = -2
   Insn 269: point = 203, n_alt = 2
   Insn 268: point = 203, n_alt = 0
   Insn 267: point = 203, n_alt = 3
   Insn 266: point = 204, n_alt = 0
   Insn 265: point = 204, n_alt = -2
   Insn 264: point = 205, n_alt = 2
   Insn 263: point = 205, n_alt = 0
   Insn 262: point = 205, n_alt = 3
   Insn 261: point = 206, n_alt = 0
   Insn 260: point = 206, n_alt = -2
   Insn 259: point = 207, n_alt = -2
   Insn 258: point = 208, n_alt = 0
   Insn 257: point = 208, n_alt = 3
   Insn 256: point = 209, n_alt = 3
   Insn 255: point = 211, n_alt = 3
   Insn 254: point = 212, n_alt = 1
   Insn 253: point = 214, n_alt = 0
   Insn 252: point = 216, n_alt = 0
   Insn 251: point = 218, n_alt = 0
   Insn 250: point = 219, n_alt = 3
   Insn 480: point = 221, n_alt = 3
	   Creating copy r384<-r388@1000
   Insn 249: point = 223, n_alt = 2
   Insn 248: point = 225, n_alt = 0
   Insn 247: point = 227, n_alt = 0
   Insn 246: point = 228, n_alt = 0
   Insn 245: point = 228, n_alt = -2
   Insn 244: point = 229, n_alt = 2
   Insn 243: point = 229, n_alt = 0
   Insn 242: point = 229, n_alt = 3
   Insn 241: point = 230, n_alt = 0
   Insn 240: point = 230, n_alt = -2
   Insn 239: point = 231, n_alt = -2
   Insn 238: point = 232, n_alt = 0
   Insn 237: point = 232, n_alt = 3
   Insn 236: point = 233, n_alt = 3
   Insn 235: point = 235, n_alt = 3
   Insn 234: point = 236, n_alt = 1
   Insn 233: point = 238, n_alt = 0
   Insn 232: point = 240, n_alt = 0
   Insn 231: point = 242, n_alt = 0
   Insn 230: point = 243, n_alt = 3
   Insn 479: point = 245, n_alt = 3
	   Creating copy r383<-r391@1000
   Insn 229: point = 247, n_alt = 2
   Insn 228: point = 249, n_alt = 0
   Insn 227: point = 251, n_alt = 0
   Insn 226: point = 252, n_alt = 0
   Insn 225: point = 252, n_alt = -2
   Insn 224: point = 253, n_alt = 2
   Insn 223: point = 253, n_alt = 0
   Insn 222: point = 253, n_alt = 3
   Insn 221: point = 254, n_alt = 0
   Insn 220: point = 254, n_alt = -2
   Insn 219: point = 255, n_alt = -2
   Insn 218: point = 256, n_alt = 0
   Insn 217: point = 256, n_alt = 3
   Insn 216: point = 257, n_alt = 3
   Insn 215: point = 258, n_alt = 0
   Insn 214: point = 258, n_alt = -2
   Insn 213: point = 259, n_alt = -2
   Insn 212: point = 260, n_alt = 0
   Insn 211: point = 260, n_alt = 3
   Insn 210: point = 261, n_alt = 3
   Insn 209: point = 262, n_alt = 0
   Insn 208: point = 262, n_alt = -2
   Insn 207: point = 263, n_alt = 2
   Insn 206: point = 263, n_alt = 2
   Insn 205: point = 263, n_alt = 3
   Insn 204: point = 264, n_alt = 0
   Insn 203: point = 264, n_alt = -2
   Insn 202: point = 265, n_alt = 3
   Insn 201: point = 266, n_alt = 1
   Insn 200: point = 266, n_alt = 1
   Insn 199: point = 266, n_alt = 1
   Insn 198: point = 266, n_alt = 5
  BB 7
   Insn 193: point = 267, n_alt = -1
   Insn 192: point = 267, n_alt = 1
   Insn 191: point = 268, n_alt = 7
   Insn 190: point = 269, n_alt = 7
   Insn 189: point = 270, n_alt = 8
   Insn 188: point = 271, n_alt = 1
   Insn 478: point = 273, n_alt = 7
	   Creating copy r382<-r390@1000
   Insn 187: point = 275, n_alt = -2
   Insn 186: point = 276, n_alt = 0
   Insn 185: point = 276, n_alt = -2
   Insn 184: point = 277, n_alt = 2
   Insn 183: point = 279, n_alt = -2
   Insn 182: point = 281, n_alt = 2
   Insn 181: point = 283, n_alt = 7
   Insn 180: point = 284, n_alt = 7
   Insn 179: point = 286, n_alt = 3
   Insn 178: point = 287, n_alt = 0
   Insn 177: point = 289, n_alt = 0
   Insn 176: point = 291, n_alt = 0
   Insn 175: point = 292, n_alt = 3
   Insn 477: point = 294, n_alt = 3
	   Creating copy r381<-r388@1000
   Insn 484: point = 295, n_alt = -1
	   Creating copy r388<-r389@1000
   Insn 174: point = 297, n_alt = 2
   Insn 173: point = 299, n_alt = 0
   Insn 172: point = 301, n_alt = 0
   Insn 171: point = 302, n_alt = 1
   Insn 170: point = 304, n_alt = 7
   Insn 169: point = 305, n_alt = -2
   Insn 168: point = 307, n_alt = 2
   Insn 167: point = 309, n_alt = 7
   Insn 166: point = 310, n_alt = 7
   Insn 165: point = 312, n_alt = 3
   Insn 164: point = 313, n_alt = 0
   Insn 163: point = 315, n_alt = 0
   Insn 162: point = 317, n_alt = 0
   Insn 161: point = 318, n_alt = 3
   Insn 476: point = 320, n_alt = 3
	   Creating copy r380<-r389@1000
   Insn 485: point = 321, n_alt = -1
   Insn 160: point = 322, n_alt = 2
   Insn 159: point = 324, n_alt = 0
   Insn 158: point = 326, n_alt = 0
   Insn 475: point = 327, n_alt = 8
	   Creating copy r379->r390@1000
   Insn 157: point = 329, n_alt = 2
   Insn 474: point = 330, n_alt = -2
	Hard reg 21 is preferable by r379 with profit 1000
   Insn 156: point = 332, n_alt = 7
   Insn 155: point = 333, n_alt = 7
   Insn 154: point = 335, n_alt = 3
   Insn 153: point = 336, n_alt = 0
   Insn 152: point = 338, n_alt = 0
   Insn 151: point = 340, n_alt = 0
   Insn 150: point = 341, n_alt = 3
   Insn 473: point = 343, n_alt = 3
	   Creating copy r378<-r391@1000
   Insn 487: point = 344, n_alt = -1
	   Creating copy r391<-r392@1000
   Insn 149: point = 346, n_alt = 2
   Insn 148: point = 348, n_alt = 0
   Insn 147: point = 350, n_alt = 0
  BB 6
   Insn 142: point = 352, n_alt = -1
   Insn 141: point = 352, n_alt = 1
   Insn 140: point = 353, n_alt = 7
   Insn 139: point = 354, n_alt = 0
   Insn 138: point = 356, n_alt = 2
   Insn 137: point = 357, n_alt = 7
   Insn 136: point = 359, n_alt = 3
   Insn 135: point = 360, n_alt = 0
   Insn 134: point = 362, n_alt = 0
   Insn 133: point = 364, n_alt = 0
   Insn 132: point = 365, n_alt = 3
   Insn 472: point = 367, n_alt = 3
	   Creating copy r377<-r392@1000
   Insn 488: point = 368, n_alt = -1
   Insn 131: point = 369, n_alt = 2
   Insn 130: point = 371, n_alt = 0
   Insn 129: point = 373, n_alt = 0
  BB 4
   Insn 120: point = 375, n_alt = 1
   Insn 470: point = 375, n_alt = 1
   Insn 119: point = 377, n_alt = 0
   Insn 118: point = 379, n_alt = 3
  BB 2
   Insn 109: point = 381, n_alt = 1
   Insn 468: point = 382, n_alt = 1
   Insn 108: point = 384, n_alt = 0
   Insn 107: point = 385, n_alt = 0
   Insn 467: point = 386, n_alt = 5
   Insn 106: point = 388, n_alt = 0
   Insn 466: point = 388, n_alt = -2
   Insn 102: point = 389, n_alt = 2
   Insn 101: point = 390, n_alt = 3
   Insn 100: point = 391, n_alt = -2
   Insn 98: point = 393, n_alt = 1
   Insn 96: point = 395, n_alt = 0
   Insn 97: point = 395, n_alt = 2
   Insn 465: point = 396, n_alt = -2
	Hard reg 0 is preferable by r371 with profit 1000
   Insn 95: point = 398, n_alt = 2
   Insn 464: point = 398, n_alt = -2
   Insn 94: point = 399, n_alt = 5
   Insn 93: point = 400, n_alt = 0
   Insn 92: point = 402, n_alt = 0
   Insn 91: point = 404, n_alt = 3
   Insn 463: point = 405, n_alt = -2
	Hard reg 44 is preferable by r370 with profit 1000
   Insn 90: point = 407, n_alt = 0
   Insn 462: point = 408, n_alt = -2
	Hard reg 44 is preferable by r370 with profit 1000
	Hard reg 1 is preferable by r370 with profit 1000
   Insn 88: point = 410, n_alt = 0
   Insn 89: point = 410, n_alt = 2
   Insn 87: point = 411, n_alt = 3
   Insn 86: point = 412, n_alt = 5
   Insn 85: point = 413, n_alt = 0
   Insn 84: point = 415, n_alt = 0
   Insn 83: point = 417, n_alt = 3
   Insn 461: point = 418, n_alt = -2
	Hard reg 41 is preferable by r369 with profit 1000
   Insn 82: point = 420, n_alt = 0
   Insn 460: point = 420, n_alt = -2
   Insn 78: point = 421, n_alt = 5
   Insn 77: point = 422, n_alt = 5
   Insn 76: point = 423, n_alt = -2
   Insn 74: point = 425, n_alt = 1
   Insn 72: point = 427, n_alt = 0
   Insn 73: point = 427, n_alt = 2
   Insn 459: point = 428, n_alt = -2
	Hard reg 0 is preferable by r368 with profit 1000
   Insn 71: point = 430, n_alt = 2
   Insn 458: point = 430, n_alt = -2
   Insn 70: point = 431, n_alt = 5
   Insn 69: point = 432, n_alt = 0
   Insn 68: point = 434, n_alt = 0
   Insn 67: point = 436, n_alt = 3
   Insn 457: point = 437, n_alt = -2
	Hard reg 3 is preferable by r367 with profit 1000
   Insn 66: point = 439, n_alt = 0
   Insn 456: point = 440, n_alt = -2
	Hard reg 3 is preferable by r367 with profit 1000
	Hard reg 1 is preferable by r367 with profit 1000
   Insn 64: point = 442, n_alt = 0
   Insn 65: point = 442, n_alt = 2
   Insn 63: point = 443, n_alt = 3
   Insn 62: point = 444, n_alt = 5
   Insn 61: point = 445, n_alt = 0
   Insn 60: point = 447, n_alt = 0
   Insn 59: point = 449, n_alt = 3
   Insn 455: point = 450, n_alt = 5
   Insn 58: point = 452, n_alt = 0
   Insn 454: point = 452, n_alt = -2
   Insn 54: point = 453, n_alt = 5
   Insn 53: point = 454, n_alt = 5
   Insn 52: point = 455, n_alt = -2
   Insn 50: point = 457, n_alt = 1
   Insn 48: point = 459, n_alt = 0
   Insn 49: point = 459, n_alt = 2
   Insn 453: point = 460, n_alt = -2
	Hard reg 0 is preferable by r365 with profit 1000
   Insn 47: point = 462, n_alt = 2
   Insn 452: point = 462, n_alt = -2
   Insn 46: point = 463, n_alt = 5
   Insn 45: point = 464, n_alt = 0
   Insn 44: point = 466, n_alt = 0
   Insn 43: point = 468, n_alt = 3
   Insn 451: point = 469, n_alt = -2
	Hard reg 43 is preferable by r364 with profit 1000
   Insn 42: point = 471, n_alt = 0
   Insn 450: point = 472, n_alt = -2
	Hard reg 43 is preferable by r364 with profit 1000
	Hard reg 1 is preferable by r364 with profit 1000
   Insn 40: point = 474, n_alt = 0
   Insn 41: point = 474, n_alt = 2
   Insn 39: point = 475, n_alt = 3
   Insn 38: point = 476, n_alt = 5
   Insn 37: point = 477, n_alt = 0
   Insn 36: point = 479, n_alt = 0
   Insn 35: point = 481, n_alt = 3
   Insn 449: point = 482, n_alt = 5
   Insn 34: point = 484, n_alt = 0
   Insn 448: point = 484, n_alt = -2
   Insn 30: point = 485, n_alt = 2
   Insn 29: point = 486, n_alt = 3
   Insn 28: point = 487, n_alt = -2
   Insn 26: point = 489, n_alt = 1
   Insn 24: point = 491, n_alt = 0
   Insn 25: point = 491, n_alt = 2
   Insn 447: point = 492, n_alt = -2
	Hard reg 0 is preferable by r362 with profit 1000
   Insn 23: point = 494, n_alt = 2
   Insn 446: point = 494, n_alt = -2
   Insn 22: point = 495, n_alt = 5
   Insn 21: point = 496, n_alt = 0
   Insn 20: point = 498, n_alt = 0
   Insn 19: point = 500, n_alt = 3
   Insn 445: point = 501, n_alt = -2
	Hard reg 42 is preferable by r361 with profit 1000
   Insn 18: point = 503, n_alt = 0
   Insn 444: point = 504, n_alt = -2
	Hard reg 42 is preferable by r361 with profit 1000
	Hard reg 1 is preferable by r361 with profit 1000
   Insn 16: point = 506, n_alt = 0
   Insn 17: point = 506, n_alt = 2
   Insn 15: point = 507, n_alt = 3
   Insn 14: point = 508, n_alt = 5
   Insn 13: point = 509, n_alt = 0
   Insn 12: point = 511, n_alt = 0
   Insn 11: point = 513, n_alt = 3
   Insn 7: point = 514, n_alt = 5
   Insn 6: point = 514, n_alt = 5
   Insn 5: point = 514, n_alt = 5
   Insn 4: point = 514, n_alt = 5
   Insn 3: point = 514, n_alt = 5
   Insn 2: point = 514, n_alt = 5
 r87: [510..511]
 r88: [497..498]
 r89: [486..487]
 r90: [485..514]
 r92: [478..479]
 r93: [465..466]
 r94: [454..455]
 r95: [453..514]
 r97: [446..447]
 r98: [433..434]
 r99: [422..423]
 r100: [421..514]
 r102: [414..415]
 r103: [401..402]
 r104: [390..391]
 r105: [389..514]
 r107: [4..6]
 r108: [18..20]
 r109: [372..373]
 r110: [370..371]
 r111: [366..369]
 r112: [361..365]
 r113: [363..364]
 r114: [361..362]
 r115: [358..360]
 r116: [355..357]
 r117: [352..354]
 r118: [349..350]
 r119: [347..348]
 r120: [342..346]
 r121: [337..341]
 r122: [339..340]
 r123: [337..338]
 r124: [334..336]
 r125: [329..333]
 r127: [325..326]
 r128: [323..324]
 r129: [319..322]
 r130: [314..318]
 r131: [316..317]
 r132: [314..315]
 r133: [311..313]
 r134: [308..310]
 r135: [306..307]
 r136: [303..305]
 r137: [278..302]
 r138: [300..301]
 r139: [298..299]
 r140: [293..297]
 r141: [288..292]
 r142: [290..291]
 r143: [288..289]
 r144: [285..287]
 r145: [282..284]
 r146: [280..281]
 r147: [278..279]
 r148: [276..277]
 r149: [272..275]
 r150: [270..271]
 r151: [267..269]
 r152: [250..251]
 r153: [248..249]
 r154: [244..247]
 r155: [239..243]
 r156: [241..242]
 r157: [239..240]
 r158: [237..238]
 r159: [231..233]
 r160: [226..227]
 r161: [224..225]
 r162: [220..223]
 r163: [215..219]
 r164: [217..218]
 r165: [215..216]
 r166: [213..214]
 r167: [207..209]
 r168: [193..194]
 r169: [191..192]
 r170: [187..190]
 r171: [182..186]
 r172: [184..185]
 r173: [182..183]
 r174: [179..181]
 r175: [164..178]
 r176: [164..177]
 r177: [175..176]
 r178: [173..174]
 r179: [171..172]
 r180: [166..170]
 r181: [168..169]
 r182: [166..167]
 r183: [161..165]
 r184: [161..163]
 r185: [159..160]
 r186: [157..158]
 r187: [155..156]
 r188: [150..154]
 r189: [152..153]
 r190: [150..151]
 r191: [147..149]
 r192: [144..146]
 r193: [141..142]
 r194: [139..140]
 r195: [137..138]
 r196: [132..136]
 r197: [134..135]
 r198: [132..133]
 r199: [128..131]
 r200: [126..127]
 r201: [124..125]
 r202: [122..123]
 r203: [117..121]
 r204: [119..120]
 r205: [117..118]
 r206: [114..116]
 r207: [97..113]
 r208: [97..112]
 r209: [110..111]
 r210: [108..109]
 r211: [104..107]
 r212: [99..103]
 r213: [101..102]
 r214: [99..100]
 r215: [94..98]
 r216: [94..96]
 r217: [91..92]
 r218: [89..90]
 r219: [87..88]
 r220: [82..86]
 r221: [84..85]
 r222: [82..83]
 r223: [79..81]
 r224: [76..78]
 r225: [73..74]
 r226: [71..72]
 r227: [69..70]
 r228: [64..68]
 r229: [66..67]
 r230: [64..65]
 r231: [60..63]
 r232: [58..59]
 r233: [56..57]
 r234: [54..55]
 r235: [49..53]
 r236: [51..52]
 r237: [49..50]
 r238: [46..48]
 r239: [30..45]
 r240: [30..44]
 r241: [42..43]
 r242: [40..41]
 r243: [37..39]
 r244: [32..36]
 r245: [34..35]
 r246: [32..33]
 r247: [27..31]
 r248: [27..29]
 r249: [24..25]
 r250: [22..23]
 r251: [10..11]
 r252: [8..9]
 r253: [503..507]
 r254: [0..501]
 r255: [490..492]
 r256: [488..489]
 r260: [0..482]
 r261: [471..475]
 r262: [0..469]
 r263: [458..460]
 r264: [456..457]
 r268: [0..450]
 r269: [439..443]
 r270: [0..437]
 r271: [426..428]
 r272: [424..425]
 r276: [0..418]
 r277: [407..411]
 r278: [0..405]
 r279: [394..396]
 r280: [392..393]
 r284: [0..386]
 r285: [381..385]
 r286: [0..382]
 r287: [0..1]
 r288: [14..375]
 r289: [14..15]
 r290: [512..513]
 r291: [508..509]
 r292: [505..506]
 r293: [499..500]
 r294: [495..496]
 r295: [490..491]
 r296: [480..481]
 r297: [476..477]
 r298: [473..474]
 r299: [467..468]
 r300: [463..464]
 r301: [458..459]
 r302: [448..449]
 r303: [444..445]
 r304: [441..442]
 r305: [435..436]
 r306: [431..432]
 r307: [426..427]
 r308: [416..417]
 r309: [412..413]
 r310: [409..410]
 r311: [403..404]
 r312: [399..400]
 r313: [394..395]
 r314: [2..3]
 r315: [378..379]
 r316: [16..17]
 r317: [358..359]
 r318: [355..356]
 r319: [352..353]
 r320: [334..335]
 r321: [331..332]
 r322: [311..312]
 r323: [308..309]
 r324: [303..304]
 r325: [285..286]
 r326: [282..283]
 r327: [267..268]
 r328: [264..265]
 r329: [262..263]
 r330: [259..261]
 r331: [258..260]
 r332: [255..257]
 r333: [254..256]
 r334: [252..253]
 r335: [234..236]
 r336: [234..235]
 r337: [230..232]
 r338: [228..229]
 r339: [210..212]
 r340: [210..211]
 r341: [206..208]
 r342: [204..205]
 r343: [202..203]
 r344: [199..201]
 r345: [198..200]
 r346: [196..197]
 r347: [179..180]
 r348: [161..162]
 r349: [147..148]
 r350: [144..145]
 r351: [128..130]
 r352: [128..129]
 r353: [114..115]
 r354: [94..95]
 r355: [79..80]
 r356: [76..77]
 r357: [60..62]
 r358: [60..61]
 r359: [46..47]
 r360: [27..28]
 r361: [502..504]
 r362: [493..494]
 r363: [483..484]
 r364: [470..472]
 r365: [461..462]
 r366: [451..452]
 r367: [438..440]
 r368: [429..430]
 r369: [419..420]
 r370: [406..408]
 r371: [397..398]
 r372: [387..388]
 r373: [383..384]
 r374: [4..5]
 r375: [376..377]
 r376: [18..19]
 r377: [366..367]
 r378: [342..343]
 r379: [328..330]
 r380: [319..320]
 r381: [293..294]
 r382: [272..273]
 r383: [244..245]
 r384: [220..221]
 r385: [187..188]
 r386: [104..105]
 r387: [37..38]
 r388: [222..295]
 r389: [296..321]
 r390: [274..327]
 r391: [246..344]
 r392: [345..368]
 r393: [106..189]
Compressing live ranges: from 515 to 402 - 78%
Ranges after the compression:
 r87: [398..399]
 r88: [388..389]
 r89: [378..379]
 r90: [378..401]
 r92: [372..373]
 r93: [362..363]
 r94: [352..353]
 r95: [352..401]
 r97: [346..347]
 r98: [336..337]
 r99: [326..327]
 r100: [326..401]
 r102: [320..321]
 r103: [310..311]
 r104: [300..301]
 r105: [300..401]
 r107: [4..5]
 r108: [14..15]
 r109: [288..289]
 r110: [286..287]
 r111: [284..285]
 r112: [280..283]
 r113: [282..283]
 r114: [280..281]
 r115: [278..279]
 r116: [276..277]
 r117: [274..275]
 r118: [272..273]
 r119: [270..271]
 r120: [266..269]
 r121: [262..265]
 r122: [264..265]
 r123: [262..263]
 r124: [260..261]
 r125: [256..259]
 r127: [254..255]
 r128: [252..253]
 r129: [250..251]
 r130: [246..249]
 r131: [248..249]
 r132: [246..247]
 r133: [244..245]
 r134: [242..243]
 r135: [240..241]
 r136: [238..239]
 r137: [218..237]
 r138: [236..237]
 r139: [234..235]
 r140: [230..233]
 r141: [226..229]
 r142: [228..229]
 r143: [226..227]
 r144: [224..225]
 r145: [222..223]
 r146: [220..221]
 r147: [218..219]
 r148: [216..217]
 r149: [212..215]
 r150: [210..211]
 r151: [208..209]
 r152: [196..197]
 r153: [194..195]
 r154: [190..193]
 r155: [186..189]
 r156: [188..189]
 r157: [186..187]
 r158: [184..185]
 r159: [180..181]
 r160: [176..177]
 r161: [174..175]
 r162: [170..173]
 r163: [166..169]
 r164: [168..169]
 r165: [166..167]
 r166: [164..165]
 r167: [160..161]
 r168: [150..151]
 r169: [148..149]
 r170: [146..147]
 r171: [142..145]
 r172: [144..145]
 r173: [142..143]
 r174: [140..141]
 r175: [128..139]
 r176: [128..139]
 r177: [138..139]
 r178: [136..137]
 r179: [134..135]
 r180: [130..133]
 r181: [132..133]
 r182: [130..131]
 r183: [126..129]
 r184: [126..127]
 r185: [124..125]
 r186: [122..123]
 r187: [120..121]
 r188: [116..119]
 r189: [118..119]
 r190: [116..117]
 r191: [114..115]
 r192: [112..113]
 r193: [110..111]
 r194: [108..109]
 r195: [106..107]
 r196: [102..105]
 r197: [104..105]
 r198: [102..103]
 r199: [100..101]
 r200: [98..99]
 r201: [96..97]
 r202: [94..95]
 r203: [90..93]
 r204: [92..93]
 r205: [90..91]
 r206: [88..89]
 r207: [74..87]
 r208: [74..87]
 r209: [86..87]
 r210: [84..85]
 r211: [80..83]
 r212: [76..79]
 r213: [78..79]
 r214: [76..77]
 r215: [72..75]
 r216: [72..73]
 r217: [70..71]
 r218: [68..69]
 r219: [66..67]
 r220: [62..65]
 r221: [64..65]
 r222: [62..63]
 r223: [60..61]
 r224: [58..59]
 r225: [56..57]
 r226: [54..55]
 r227: [52..53]
 r228: [48..51]
 r229: [50..51]
 r230: [48..49]
 r231: [46..47]
 r232: [44..45]
 r233: [42..43]
 r234: [40..41]
 r235: [36..39]
 r236: [38..39]
 r237: [36..37]
 r238: [34..35]
 r239: [22..33]
 r240: [22..33]
 r241: [32..33]
 r242: [30..31]
 r243: [28..29]
 r244: [24..27]
 r245: [26..27]
 r246: [24..25]
 r247: [20..23]
 r248: [20..21]
 r249: [18..19]
 r250: [16..17]
 r251: [8..9]
 r252: [6..7]
 r253: [392..395]
 r254: [0..391]
 r255: [382..383]
 r256: [380..381]
 r260: [0..375]
 r261: [366..369]
 r262: [0..365]
 r263: [356..357]
 r264: [354..355]
 r268: [0..349]
 r269: [340..343]
 r270: [0..339]
 r271: [330..331]
 r272: [328..329]
 r276: [0..323]
 r277: [314..317]
 r278: [0..313]
 r279: [304..305]
 r280: [302..303]
 r284: [0..297]
 r285: [294..297]
 r286: [0..295]
 r287: [0..1]
 r288: [10..289]
 r289: [10..11]
 r290: [400..401]
 r291: [396..397]
 r292: [394..395]
 r293: [390..391]
 r294: [386..387]
 r295: [382..383]
 r296: [374..375]
 r297: [370..371]
 r298: [368..369]
 r299: [364..365]
 r300: [360..361]
 r301: [356..357]
 r302: [348..349]
 r303: [344..345]
 r304: [342..343]
 r305: [338..339]
 r306: [334..335]
 r307: [330..331]
 r308: [322..323]
 r309: [318..319]
 r310: [316..317]
 r311: [312..313]
 r312: [308..309]
 r313: [304..305]
 r314: [2..3]
 r315: [292..293]
 r316: [12..13]
 r317: [278..279]
 r318: [276..277]
 r319: [274..275]
 r320: [260..261]
 r321: [258..259]
 r322: [244..245]
 r323: [242..243]
 r324: [238..239]
 r325: [224..225]
 r326: [222..223]
 r327: [208..209]
 r328: [206..207]
 r329: [204..205]
 r330: [202..203]
 r331: [202..203]
 r332: [200..201]
 r333: [200..201]
 r334: [198..199]
 r335: [182..183]
 r336: [182..183]
 r337: [180..181]
 r338: [178..179]
 r339: [162..163]
 r340: [162..163]
 r341: [160..161]
 r342: [158..159]
 r343: [156..157]
 r344: [154..155]
 r345: [154..155]
 r346: [152..153]
 r347: [140..141]
 r348: [126..127]
 r349: [114..115]
 r350: [112..113]
 r351: [100..101]
 r352: [100..101]
 r353: [88..89]
 r354: [72..73]
 r355: [60..61]
 r356: [58..59]
 r357: [46..47]
 r358: [46..47]
 r359: [34..35]
 r360: [20..21]
 r361: [392..393]
 r362: [384..385]
 r363: [376..377]
 r364: [366..367]
 r365: [358..359]
 r366: [350..351]
 r367: [340..341]
 r368: [332..333]
 r369: [324..325]
 r370: [314..315]
 r371: [306..307]
 r372: [298..299]
 r373: [296..297]
 r374: [4..5]
 r375: [290..291]
 r376: [14..15]
 r377: [284..285]
 r378: [266..267]
 r379: [256..257]
 r380: [250..251]
 r381: [230..231]
 r382: [212..213]
 r383: [190..191]
 r384: [170..171]
 r385: [146..147]
 r386: [80..81]
 r387: [28..29]
 r388: [172..231]
 r389: [232..251]
 r390: [214..255]
 r391: [192..267]
 r392: [268..285]
 r393: [82..147]

********** Assignment #1: **********

	 Assigning to 391 (cl=GENERAL_REGS, orig=260, freq=3000, tfirst=377, tfreq=4000)...
	 Assigning to 392 (cl=GENERAL_REGS, orig=260, freq=3000, tfirst=377, tfreq=4000)...
	   Assign 2 to inheritance r392 (freq=3000)
	Hard reg 2 is preferable by r377 with profit 1000
	Hard reg 2 is preferable by r391 with profit 1000
	Hard reg 2 is preferable by r378 with profit 500
	Hard reg 2 is preferable by r383 with profit 500
	 Assigning to 377 (cl=GENERAL_REGS, orig=260, freq=2000, tfirst=377, tfreq=4000)...
	   Assign 2 to reload r377 (freq=2000)
	 Assigning to 378 (cl=GENERAL_REGS, orig=260, freq=2000, tfirst=377, tfreq=4000)...
	   Assign 2 to reload r378 (freq=2000)
	Hard reg 2 is preferable by r391 with profit 2000
	Hard reg 2 is preferable by r383 with profit 1000
	 Assigning to 383 (cl=GENERAL_REGS, orig=260, freq=2000, tfirst=377, tfreq=4000)...
	   Assign 2 to reload r383 (freq=2000)
	Hard reg 2 is preferable by r391 with profit 3000
	 Assigning to 388 (cl=GENERAL_REGS, orig=268, freq=3000, tfirst=380, tfreq=4000)...
	 Assigning to 389 (cl=GENERAL_REGS, orig=268, freq=3000, tfirst=380, tfreq=4000)...
	   Assign 4 to inheritance r389 (freq=3000)
	Hard reg 4 is preferable by r380 with profit 1000
	Hard reg 4 is preferable by r388 with profit 1000
	Hard reg 4 is preferable by r381 with profit 500
	Hard reg 4 is preferable by r384 with profit 500
	 Assigning to 380 (cl=GENERAL_REGS, orig=268, freq=2000, tfirst=380, tfreq=4000)...
	   Assign 4 to reload r380 (freq=2000)
	 Assigning to 381 (cl=GENERAL_REGS, orig=268, freq=2000, tfirst=380, tfreq=4000)...
	   Assign 4 to reload r381 (freq=2000)
	Hard reg 4 is preferable by r388 with profit 2000
	Hard reg 4 is preferable by r384 with profit 1000
	 Assigning to 384 (cl=GENERAL_REGS, orig=268, freq=2000, tfirst=380, tfreq=4000)...
	   Assign 4 to reload r384 (freq=2000)
	Hard reg 4 is preferable by r388 with profit 3000
	 Assigning to 361 (cl=GENERAL_REGS, orig=292, freq=3000, tfirst=361, tfreq=3000)...
	   Assign 1 to reload r361 (freq=3000)
	 Assigning to 362 (cl=GENERAL_REGS, orig=255, freq=3000, tfirst=362, tfreq=3000)...
	   Assign 0 to reload r362 (freq=3000)
	 Assigning to 363 (cl=GENERAL_REGS, orig=260, freq=3000, tfirst=363, tfreq=3000)...
	   Assign 0 to reload r363 (freq=3000)
	 Assigning to 364 (cl=GENERAL_REGS, orig=298, freq=3000, tfirst=364, tfreq=3000)...
	   Assign 1 to reload r364 (freq=3000)
	 Assigning to 365 (cl=GENERAL_REGS, orig=263, freq=3000, tfirst=365, tfreq=3000)...
	   Assign 0 to reload r365 (freq=3000)
	 Assigning to 366 (cl=GENERAL_REGS, orig=268, freq=3000, tfirst=366, tfreq=3000)...
	   Assign 0 to reload r366 (freq=3000)
	 Assigning to 367 (cl=GENERAL_REGS, orig=304, freq=3000, tfirst=367, tfreq=3000)...
	   Assign 3 to reload r367 (freq=3000)
	 Assigning to 368 (cl=GENERAL_REGS, orig=271, freq=3000, tfirst=368, tfreq=3000)...
	   Assign 0 to reload r368 (freq=3000)
	 Assigning to 369 (cl=GENERAL_REGS, orig=276, freq=3000, tfirst=369, tfreq=3000)...
	   Assign 41 to reload r369 (freq=3000)
	 Assigning to 370 (cl=GENERAL_REGS, orig=310, freq=3000, tfirst=370, tfreq=3000)...
	   Assign 1 to reload r370 (freq=3000)
	 Assigning to 371 (cl=GENERAL_REGS, orig=279, freq=3000, tfirst=371, tfreq=3000)...
	   Assign 0 to reload r371 (freq=3000)
	 Assigning to 372 (cl=GENERAL_REGS, orig=284, freq=3000, tfirst=372, tfreq=3000)...
	   Assign 0 to reload r372 (freq=3000)
	 Assigning to 393 (cl=GENERAL_REGS, orig=284, freq=3000, tfirst=385, tfreq=3000)...
	   Assign 5 to inheritance r393 (freq=3000)
	Hard reg 5 is preferable by r385 with profit 1000
	Hard reg 5 is preferable by r386 with profit 1000
	 Assigning to 385 (cl=GENERAL_REGS, orig=284, freq=2000, tfirst=385, tfreq=3000)...
	   Assign 5 to reload r385 (freq=2000)
	 Assigning to 386 (cl=GENERAL_REGS, orig=284, freq=2000, tfirst=385, tfreq=3000)...
	   Assign 5 to reload r386 (freq=2000)
	 Assigning to 373 (cl=GENERAL_REGS, orig=286, freq=2000, tfirst=373, tfreq=2000)...
	   Assign 2 to reload r373 (freq=2000)
	 Assigning to 374 (cl=GENERAL_REGS, orig=286, freq=2000, tfirst=374, tfreq=2000)...
	   Assign 4 to optional reload r374 (freq=2000)
	 Assigning to 375 (cl=GENERAL_REGS, orig=288, freq=2000, tfirst=375, tfreq=2000)...
	   Assign 0 to reload r375 (freq=2000)
	 Assigning to 376 (cl=GENERAL_REGS, orig=288, freq=2000, tfirst=376, tfreq=2000)...
	   Assign 5 to optional reload r376 (freq=2000)
	 Assigning to 387 (cl=GENERAL_REGS, orig=284, freq=2000, tfirst=387, tfreq=2000)...
	   Assign 2 to reload r387 (freq=2000)
	 Assigning to 390 (cl=SSE_REGS, orig=126, freq=2000, tfirst=379, tfreq=3000)...
	 Assigning to 379 (cl=SSE_REGS, orig=321, freq=3000, tfirst=379, tfreq=3000)...
	   Assign 21 to reload r379 (freq=3000)
	Hard reg 21 is preferable by r390 with profit 1000
	Hard reg 21 is preferable by r382 with profit 500
	 Assigning to 382 (cl=SSE_REGS, orig=126, freq=2000, tfirst=379, tfreq=3000)...
	   Assign 24 to optional reload r382 (freq=2000)
	Hard reg 21 is preferable by r390 with profit 1000
	Hard reg 24 is preferable by r390 with profit 1000
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 3 out of 6 (50.00%)
   Insn after restoring regs:
  478: r382:SF=r126:SF
      REG_DEAD r126:SF
    Change reload insn:
  477: r381:DI=r389:DI
   Insn after restoring regs:
  484: r268:DI=r389:DI
      REG_DEAD r389:DI
   Insn after restoring regs:
  475: r126:SF=r379:SF
      REG_DEAD r379:SF
    Change reload insn:
  473: r378:DI=r392:DI
   Insn after restoring regs:
  487: r260:DI=r392:DI
      REG_DEAD r392:DI
   Insn after restoring regs:
  480: r384:DI=r268:DI
      REG_DEAD r268:DI
   Insn after restoring regs:
  479: r383:DI=r260:DI
      REG_DEAD r260:DI
Remove optional reload reg 374
  Restoring original insn:
  112: flags:CCGC=cmp(r286:SI,r107:SI)
      REG_DEAD r286:SI
      REG_DEAD r107:SI
  Deleting move 469
  469: r374:SI=r286:SI
deleting insn with uid = 469.
Remove optional reload reg 376
  Restoring original insn:
  123: flags:CCGC=cmp(r288:SI,r108:SI)
      REG_DEAD r288:SI
      REG_DEAD r108:SI
  Deleting move 471
  471: r376:SI=r288:SI
deleting insn with uid = 471.
Remove optional reload reg 382
  Restoring original insn:
  188: r150:SF=r149:SF*r126:SF
      REG_DEAD r126:SF
      REG_DEAD r149:SF
  Deleting move 478
  478: r382:SF=r126:SF
      REG_DEAD r126:SF
deleting insn with uid = 478.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 188:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=394 from oldreg=126, assigning class SSE_REGS to r394
      Making reload reg 394 for reg 126 optional
  188: r150:SF=r149:SF*r394:SF
      REG_DEAD r126:SF
      REG_DEAD r149:SF
    Inserting insn reload before:
  490: r394:SF=r126:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 490:  (0) v  (1) m {*movsf_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) rm  (1) re {*cmpsi_1}
      Creating newreg=395 from oldreg=288, assigning class GENERAL_REGS to r395
      Making reload reg 395 for reg 288 optional
  123: flags:CCGC=cmp(r395:SI,r108:SI)
      REG_DEAD r288:SI
      REG_DEAD r108:SI
    Inserting insn reload before:
  491: r395:SI=r288:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 491:  (0) =r  (1) g {*movsi_internal}
            0 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) rm  (1) re {*cmpsi_1}
      Creating newreg=396 from oldreg=286, assigning class GENERAL_REGS to r396
      Making reload reg 396 for reg 286 optional
  112: flags:CCGC=cmp(r396:SI,r107:SI)
      REG_DEAD r286:SI
      REG_DEAD r107:SI
    Inserting insn reload before:
  492: r396:SI=r286:SI

            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=2,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 492:  (0) =r  (1) g {*movsi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 489:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 488:  (0) r  (1) rem {*movdi_internal}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 487:  (0) m  (1) re {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non pseudo reload: reject++
          alt=3,overall=1,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 485:  (0) r  (1) rem {*movdi_internal}
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
            0 Non pseudo reload: reject++
          alt=5,overall=1,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 484:  (0) m  (1) re {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3 4
EBB 5 6 7 8
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=397 from oldreg=268, assigning class GENERAL_REGS to inheritance r397
    Original reg change 268->397 (bb7):
  484: r397:DI=r389:DI
      REG_DEAD r389:DI
    Add original<-inheritance after:
  493: r268:DI=r397:DI

    Inheritance reuse change 268->397 (bb8):
  480: r384:DI=r397:DI
      REG_DEAD r397:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=398 from oldreg=126, assigning class SSE_REGS to inheritance r398
    Original reg change 126->398 (bb7):
  475: r398:SF=r379:SF
      REG_DEAD r379:SF
    Add original<-inheritance after:
  494: r126:SF=r398:SF

    Inheritance reuse change 126->398 (bb7):
  490: r394:SF=r398:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=399 from oldreg=260, assigning class GENERAL_REGS to inheritance r399
    Original reg change 260->399 (bb7):
  487: r399:DI=r392:DI
      REG_DEAD r392:DI
    Add original<-inheritance after:
  495: r260:DI=r399:DI

    Inheritance reuse change 260->399 (bb8):
  479: r383:DI=r399:DI
      REG_DEAD r399:DI
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
   494: r126:SF=r398:SF
deleting insn with uid = 494.
EBB 9 10
EBB 11 12
EBB 13
EBB 17
EBB 14
EBB 16
EBB 15

********** Pseudo live ranges #2: **********

  BB 15
   Insn 432: point = 0, n_alt = -1
  BB 16
   Insn 439: point = 0, n_alt = -1
  BB 3
   Insn 116: point = 0, n_alt = -1
   Insn 115: point = 0, n_alt = 0
   Insn 114: point = 1, n_alt = 0
   Insn 113: point = 3, n_alt = 0
   Insn 112: point = 4, n_alt = 0
   Insn 492: point = 5, n_alt = 0
   Insn 111: point = 6, n_alt = 0
  BB 14
   Insn 435: point = 8, n_alt = -1
   Insn 409: point = 8, n_alt = 1
   Insn 408: point = 9, n_alt = 0
   Insn 407: point = 11, n_alt = 0
  BB 17
   Insn 442: point = 13, n_alt = -1
  BB 5
   Insn 127: point = 14, n_alt = -1
   Insn 126: point = 14, n_alt = 0
   Insn 125: point = 15, n_alt = 0
   Insn 124: point = 17, n_alt = 0
   Insn 123: point = 18, n_alt = 0
   Insn 491: point = 19, n_alt = 0
   Insn 122: point = 20, n_alt = 0
  BB 13
   Insn 433: point = 22, n_alt = -1
   Insn 401: point = 22, n_alt = 1
   Insn 400: point = 23, n_alt = 0
   Insn 399: point = 25, n_alt = 0
  BB 12
   Insn 396: point = 27, n_alt = 8
   Insn 395: point = 28, n_alt = 3
   Insn 394: point = 29, n_alt = 1
   Insn 393: point = 31, n_alt = 0
   Insn 392: point = 33, n_alt = 0
   Insn 391: point = 35, n_alt = 0
   Insn 390: point = 36, n_alt = 3
   Insn 483: point = 38, n_alt = 3
   Insn 389: point = 39, n_alt = 2
   Insn 388: point = 41, n_alt = 0
   Insn 387: point = 43, n_alt = 0
   Insn 386: point = 44, n_alt = 7
   Insn 385: point = 45, n_alt = 7
   Insn 384: point = 47, n_alt = 3
   Insn 383: point = 48, n_alt = 0
   Insn 382: point = 50, n_alt = 0
   Insn 381: point = 52, n_alt = 0
   Insn 380: point = 53, n_alt = 3
   Insn 379: point = 55, n_alt = 2
   Insn 378: point = 57, n_alt = 0
   Insn 377: point = 59, n_alt = 0
   Insn 376: point = 60, n_alt = 8
   Insn 375: point = 61, n_alt = 7
   Insn 374: point = 62, n_alt = 3
   Insn 373: point = 63, n_alt = 0
   Insn 372: point = 65, n_alt = 0
   Insn 371: point = 67, n_alt = 0
   Insn 370: point = 68, n_alt = 3
   Insn 369: point = 70, n_alt = 2
   Insn 368: point = 72, n_alt = 0
   Insn 367: point = 74, n_alt = 0
  BB 11
   Insn 362: point = 76, n_alt = -1
   Insn 361: point = 76, n_alt = 1
   Insn 360: point = 77, n_alt = 7
   Insn 359: point = 78, n_alt = 7
   Insn 358: point = 80, n_alt = 3
   Insn 357: point = 81, n_alt = 0
   Insn 356: point = 83, n_alt = 0
   Insn 355: point = 85, n_alt = 0
   Insn 354: point = 86, n_alt = 3
   Insn 353: point = 88, n_alt = 2
   Insn 352: point = 90, n_alt = 0
   Insn 351: point = 92, n_alt = 0
  BB 10
   Insn 348: point = 94, n_alt = 8
   Insn 347: point = 95, n_alt = 3
   Insn 346: point = 96, n_alt = 1
   Insn 345: point = 98, n_alt = 0
   Insn 344: point = 100, n_alt = 0
   Insn 343: point = 102, n_alt = 0
   Insn 342: point = 103, n_alt = 3
   Insn 482: point = 105, n_alt = -2
	   Creating copy r386<-r393@1000
   Insn 341: point = 107, n_alt = 2
   Insn 340: point = 109, n_alt = 0
   Insn 339: point = 111, n_alt = 0
   Insn 338: point = 112, n_alt = 7
   Insn 337: point = 113, n_alt = 7
   Insn 336: point = 115, n_alt = 3
   Insn 335: point = 116, n_alt = 0
   Insn 334: point = 118, n_alt = 0
   Insn 333: point = 120, n_alt = 0
   Insn 332: point = 121, n_alt = 3
   Insn 331: point = 123, n_alt = 2
   Insn 330: point = 125, n_alt = 0
   Insn 329: point = 127, n_alt = 0
   Insn 328: point = 128, n_alt = 8
   Insn 327: point = 129, n_alt = 7
   Insn 326: point = 130, n_alt = 3
   Insn 325: point = 131, n_alt = 0
   Insn 324: point = 133, n_alt = 0
   Insn 323: point = 135, n_alt = 0
   Insn 322: point = 136, n_alt = 3
   Insn 321: point = 138, n_alt = 2
   Insn 320: point = 140, n_alt = 0
   Insn 319: point = 142, n_alt = 0
  BB 9
   Insn 314: point = 144, n_alt = -1
   Insn 313: point = 144, n_alt = 1
   Insn 312: point = 145, n_alt = 7
   Insn 311: point = 146, n_alt = 7
   Insn 310: point = 148, n_alt = 3
   Insn 309: point = 149, n_alt = 0
   Insn 308: point = 151, n_alt = 0
   Insn 307: point = 153, n_alt = 0
   Insn 306: point = 154, n_alt = 3
   Insn 305: point = 156, n_alt = 2
   Insn 304: point = 158, n_alt = 0
   Insn 303: point = 160, n_alt = 0
   Insn 302: point = 161, n_alt = 8
   Insn 301: point = 162, n_alt = 3
   Insn 300: point = 163, n_alt = 2
   Insn 299: point = 165, n_alt = 0
   Insn 298: point = 167, n_alt = 0
   Insn 297: point = 169, n_alt = 0
   Insn 296: point = 170, n_alt = 3
   Insn 295: point = 172, n_alt = 2
   Insn 294: point = 174, n_alt = 0
   Insn 293: point = 176, n_alt = 0
   Insn 292: point = 177, n_alt = 7
   Insn 291: point = 178, n_alt = 7
   Insn 290: point = 180, n_alt = 3
   Insn 289: point = 181, n_alt = 0
   Insn 288: point = 183, n_alt = 0
   Insn 287: point = 185, n_alt = 0
   Insn 286: point = 186, n_alt = 3
   Insn 481: point = 188, n_alt = -2
	   Creating copy r385<-r393@1000
   Insn 489: point = 189, n_alt = 3
   Insn 285: point = 190, n_alt = 2
   Insn 284: point = 192, n_alt = 0
   Insn 283: point = 194, n_alt = 0
  BB 8
   Insn 280: point = 196, n_alt = 0
   Insn 279: point = 196, n_alt = -2
   Insn 278: point = 197, n_alt = 3
   Insn 277: point = 198, n_alt = 0
   Insn 276: point = 198, n_alt = -2
   Insn 275: point = 199, n_alt = -2
   Insn 274: point = 200, n_alt = 0
   Insn 273: point = 200, n_alt = 3
   Insn 272: point = 201, n_alt = 3
   Insn 271: point = 202, n_alt = 0
   Insn 270: point = 202, n_alt = -2
   Insn 269: point = 203, n_alt = 2
   Insn 268: point = 203, n_alt = 0
   Insn 267: point = 203, n_alt = 3
   Insn 266: point = 204, n_alt = 0
   Insn 265: point = 204, n_alt = -2
   Insn 264: point = 205, n_alt = 2
   Insn 263: point = 205, n_alt = 0
   Insn 262: point = 205, n_alt = 3
   Insn 261: point = 206, n_alt = 0
   Insn 260: point = 206, n_alt = -2
   Insn 259: point = 207, n_alt = -2
   Insn 258: point = 208, n_alt = 0
   Insn 257: point = 208, n_alt = 3
   Insn 256: point = 209, n_alt = 3
   Insn 255: point = 211, n_alt = 3
   Insn 254: point = 212, n_alt = 1
   Insn 253: point = 214, n_alt = 0
   Insn 252: point = 216, n_alt = 0
   Insn 251: point = 218, n_alt = 0
   Insn 250: point = 219, n_alt = 3
   Insn 480: point = 221, n_alt = 3
	   Creating copy r384<-r397@1000
   Insn 249: point = 223, n_alt = 2
   Insn 248: point = 225, n_alt = 0
   Insn 247: point = 227, n_alt = 0
   Insn 246: point = 228, n_alt = 0
   Insn 245: point = 228, n_alt = -2
   Insn 244: point = 229, n_alt = 2
   Insn 243: point = 229, n_alt = 0
   Insn 242: point = 229, n_alt = 3
   Insn 241: point = 230, n_alt = 0
   Insn 240: point = 230, n_alt = -2
   Insn 239: point = 231, n_alt = -2
   Insn 238: point = 232, n_alt = 0
   Insn 237: point = 232, n_alt = 3
   Insn 236: point = 233, n_alt = 3
   Insn 235: point = 235, n_alt = 3
   Insn 234: point = 236, n_alt = 1
   Insn 233: point = 238, n_alt = 0
   Insn 232: point = 240, n_alt = 0
   Insn 231: point = 242, n_alt = 0
   Insn 230: point = 243, n_alt = 3
   Insn 479: point = 245, n_alt = 3
	   Creating copy r383<-r399@1000
   Insn 229: point = 247, n_alt = 2
   Insn 228: point = 249, n_alt = 0
   Insn 227: point = 251, n_alt = 0
   Insn 226: point = 252, n_alt = 0
   Insn 225: point = 252, n_alt = -2
   Insn 224: point = 253, n_alt = 2
   Insn 223: point = 253, n_alt = 0
   Insn 222: point = 253, n_alt = 3
   Insn 221: point = 254, n_alt = 0
   Insn 220: point = 254, n_alt = -2
   Insn 219: point = 255, n_alt = -2
   Insn 218: point = 256, n_alt = 0
   Insn 217: point = 256, n_alt = 3
   Insn 216: point = 257, n_alt = 3
   Insn 215: point = 258, n_alt = 0
   Insn 214: point = 258, n_alt = -2
   Insn 213: point = 259, n_alt = -2
   Insn 212: point = 260, n_alt = 0
   Insn 211: point = 260, n_alt = 3
   Insn 210: point = 261, n_alt = 3
   Insn 209: point = 262, n_alt = 0
   Insn 208: point = 262, n_alt = -2
   Insn 207: point = 263, n_alt = 2
   Insn 206: point = 263, n_alt = 2
   Insn 205: point = 263, n_alt = 3
   Insn 204: point = 264, n_alt = 0
   Insn 203: point = 264, n_alt = -2
   Insn 202: point = 265, n_alt = 3
   Insn 201: point = 266, n_alt = 1
   Insn 200: point = 266, n_alt = 1
   Insn 199: point = 266, n_alt = 1
   Insn 198: point = 266, n_alt = 5
  BB 7
   Insn 193: point = 267, n_alt = -1
   Insn 192: point = 267, n_alt = 1
   Insn 191: point = 268, n_alt = 7
   Insn 190: point = 269, n_alt = 7
   Insn 189: point = 270, n_alt = 8
   Insn 188: point = 271, n_alt = 1
   Insn 490: point = 273, n_alt = 7
	   Creating copy r394<-r398@1000
   Insn 187: point = 275, n_alt = -2
   Insn 186: point = 276, n_alt = 0
   Insn 185: point = 276, n_alt = -2
   Insn 184: point = 277, n_alt = 2
   Insn 183: point = 279, n_alt = -2
   Insn 182: point = 281, n_alt = 2
   Insn 181: point = 283, n_alt = 7
   Insn 180: point = 284, n_alt = 7
   Insn 179: point = 286, n_alt = 3
   Insn 178: point = 287, n_alt = 0
   Insn 177: point = 289, n_alt = 0
   Insn 176: point = 291, n_alt = 0
   Insn 175: point = 292, n_alt = 3
   Insn 477: point = 294, n_alt = -2
	   Creating copy r381<-r389@1000
   Insn 493: point = 296, n_alt = -1
   Insn 484: point = 297, n_alt = 5
	   Creating copy r389->r397@1000
   Insn 174: point = 298, n_alt = 2
   Insn 173: point = 300, n_alt = 0
   Insn 172: point = 302, n_alt = 0
   Insn 171: point = 303, n_alt = 1
   Insn 170: point = 305, n_alt = 7
   Insn 169: point = 306, n_alt = -2
   Insn 168: point = 308, n_alt = 2
   Insn 167: point = 310, n_alt = 7
   Insn 166: point = 311, n_alt = 7
   Insn 165: point = 313, n_alt = 3
   Insn 164: point = 314, n_alt = 0
   Insn 163: point = 316, n_alt = 0
   Insn 162: point = 318, n_alt = 0
   Insn 161: point = 319, n_alt = 3
   Insn 476: point = 321, n_alt = -2
	   Creating copy r380<-r389@1000
   Insn 485: point = 322, n_alt = 3
   Insn 160: point = 324, n_alt = 2
   Insn 159: point = 326, n_alt = 0
   Insn 158: point = 328, n_alt = 0
   Insn 475: point = 329, n_alt = 8
	   Creating copy r379->r398@1000
   Insn 157: point = 331, n_alt = 2
   Insn 474: point = 332, n_alt = -2
	Hard reg 21 is preferable by r379 with profit 1000
   Insn 156: point = 334, n_alt = 7
   Insn 155: point = 335, n_alt = 7
   Insn 154: point = 337, n_alt = 3
   Insn 153: point = 338, n_alt = 0
   Insn 152: point = 340, n_alt = 0
   Insn 151: point = 342, n_alt = 0
   Insn 150: point = 343, n_alt = 3
   Insn 473: point = 345, n_alt = -2
	   Creating copy r378<-r392@1000
   Insn 495: point = 347, n_alt = -1
   Insn 487: point = 348, n_alt = 5
	   Creating copy r392->r399@1000
   Insn 149: point = 349, n_alt = 2
   Insn 148: point = 351, n_alt = 0
   Insn 147: point = 353, n_alt = 0
  BB 6
   Insn 142: point = 355, n_alt = -1
   Insn 141: point = 355, n_alt = 1
   Insn 140: point = 356, n_alt = 7
   Insn 139: point = 357, n_alt = 0
   Insn 138: point = 359, n_alt = 2
   Insn 137: point = 360, n_alt = 7
   Insn 136: point = 362, n_alt = 3
   Insn 135: point = 363, n_alt = 0
   Insn 134: point = 365, n_alt = 0
   Insn 133: point = 367, n_alt = 0
   Insn 132: point = 368, n_alt = 3
   Insn 472: point = 370, n_alt = -2
	   Creating copy r377<-r392@1000
   Insn 488: point = 371, n_alt = 3
   Insn 131: point = 372, n_alt = 2
   Insn 130: point = 374, n_alt = 0
   Insn 129: point = 376, n_alt = 0
  BB 4
   Insn 120: point = 378, n_alt = 1
   Insn 470: point = 378, n_alt = 1
   Insn 119: point = 380, n_alt = 0
   Insn 118: point = 382, n_alt = 3
  BB 2
   Insn 109: point = 384, n_alt = 1
   Insn 468: point = 385, n_alt = 1
   Insn 108: point = 387, n_alt = 0
   Insn 107: point = 388, n_alt = 0
   Insn 467: point = 389, n_alt = 5
   Insn 106: point = 391, n_alt = 0
   Insn 466: point = 391, n_alt = -2
   Insn 102: point = 392, n_alt = 2
   Insn 101: point = 393, n_alt = 3
   Insn 100: point = 394, n_alt = -2
   Insn 98: point = 396, n_alt = 1
   Insn 96: point = 398, n_alt = 0
   Insn 97: point = 398, n_alt = 2
   Insn 465: point = 399, n_alt = -2
	Hard reg 0 is preferable by r371 with profit 1000
   Insn 95: point = 401, n_alt = 2
   Insn 464: point = 401, n_alt = -2
   Insn 94: point = 402, n_alt = 5
   Insn 93: point = 403, n_alt = 0
   Insn 92: point = 405, n_alt = 0
   Insn 91: point = 407, n_alt = 3
   Insn 463: point = 408, n_alt = -2
	Hard reg 44 is preferable by r370 with profit 1000
   Insn 90: point = 410, n_alt = 0
   Insn 462: point = 411, n_alt = -2
	Hard reg 44 is preferable by r370 with profit 1000
	Hard reg 1 is preferable by r370 with profit 1000
   Insn 88: point = 413, n_alt = 0
   Insn 89: point = 413, n_alt = 2
   Insn 87: point = 414, n_alt = 3
   Insn 86: point = 415, n_alt = 5
   Insn 85: point = 416, n_alt = 0
   Insn 84: point = 418, n_alt = 0
   Insn 83: point = 420, n_alt = 3
   Insn 461: point = 421, n_alt = -2
	Hard reg 41 is preferable by r369 with profit 1000
   Insn 82: point = 423, n_alt = 0
   Insn 460: point = 423, n_alt = -2
   Insn 78: point = 424, n_alt = 5
   Insn 77: point = 425, n_alt = 5
   Insn 76: point = 426, n_alt = -2
   Insn 74: point = 428, n_alt = 1
   Insn 72: point = 430, n_alt = 0
   Insn 73: point = 430, n_alt = 2
   Insn 459: point = 431, n_alt = -2
	Hard reg 0 is preferable by r368 with profit 1000
   Insn 71: point = 433, n_alt = 2
   Insn 458: point = 433, n_alt = -2
   Insn 70: point = 434, n_alt = 5
   Insn 69: point = 435, n_alt = 0
   Insn 68: point = 437, n_alt = 0
   Insn 67: point = 439, n_alt = 3
   Insn 457: point = 440, n_alt = -2
	Hard reg 3 is preferable by r367 with profit 1000
   Insn 66: point = 442, n_alt = 0
   Insn 456: point = 443, n_alt = -2
	Hard reg 3 is preferable by r367 with profit 1000
	Hard reg 1 is preferable by r367 with profit 1000
   Insn 64: point = 445, n_alt = 0
   Insn 65: point = 445, n_alt = 2
   Insn 63: point = 446, n_alt = 3
   Insn 62: point = 447, n_alt = 5
   Insn 61: point = 448, n_alt = 0
   Insn 60: point = 450, n_alt = 0
   Insn 59: point = 452, n_alt = 3
   Insn 455: point = 453, n_alt = 5
   Insn 58: point = 455, n_alt = 0
   Insn 454: point = 455, n_alt = -2
   Insn 54: point = 456, n_alt = 5
   Insn 53: point = 457, n_alt = 5
   Insn 52: point = 458, n_alt = -2
   Insn 50: point = 460, n_alt = 1
   Insn 48: point = 462, n_alt = 0
   Insn 49: point = 462, n_alt = 2
   Insn 453: point = 463, n_alt = -2
	Hard reg 0 is preferable by r365 with profit 1000
   Insn 47: point = 465, n_alt = 2
   Insn 452: point = 465, n_alt = -2
   Insn 46: point = 466, n_alt = 5
   Insn 45: point = 467, n_alt = 0
   Insn 44: point = 469, n_alt = 0
   Insn 43: point = 471, n_alt = 3
   Insn 451: point = 472, n_alt = -2
	Hard reg 43 is preferable by r364 with profit 1000
   Insn 42: point = 474, n_alt = 0
   Insn 450: point = 475, n_alt = -2
	Hard reg 43 is preferable by r364 with profit 1000
	Hard reg 1 is preferable by r364 with profit 1000
   Insn 40: point = 477, n_alt = 0
   Insn 41: point = 477, n_alt = 2
   Insn 39: point = 478, n_alt = 3
   Insn 38: point = 479, n_alt = 5
   Insn 37: point = 480, n_alt = 0
   Insn 36: point = 482, n_alt = 0
   Insn 35: point = 484, n_alt = 3
   Insn 449: point = 485, n_alt = 5
   Insn 34: point = 487, n_alt = 0
   Insn 448: point = 487, n_alt = -2
   Insn 30: point = 488, n_alt = 2
   Insn 29: point = 489, n_alt = 3
   Insn 28: point = 490, n_alt = -2
   Insn 26: point = 492, n_alt = 1
   Insn 24: point = 494, n_alt = 0
   Insn 25: point = 494, n_alt = 2
   Insn 447: point = 495, n_alt = -2
	Hard reg 0 is preferable by r362 with profit 1000
   Insn 23: point = 497, n_alt = 2
   Insn 446: point = 497, n_alt = -2
   Insn 22: point = 498, n_alt = 5
   Insn 21: point = 499, n_alt = 0
   Insn 20: point = 501, n_alt = 0
   Insn 19: point = 503, n_alt = 3
   Insn 445: point = 504, n_alt = -2
	Hard reg 42 is preferable by r361 with profit 1000
   Insn 18: point = 506, n_alt = 0
   Insn 444: point = 507, n_alt = -2
	Hard reg 42 is preferable by r361 with profit 1000
	Hard reg 1 is preferable by r361 with profit 1000
   Insn 16: point = 509, n_alt = 0
   Insn 17: point = 509, n_alt = 2
   Insn 15: point = 510, n_alt = 3
   Insn 14: point = 511, n_alt = 5
   Insn 13: point = 512, n_alt = 0
   Insn 12: point = 514, n_alt = 0
   Insn 11: point = 516, n_alt = 3
   Insn 7: point = 517, n_alt = 5
   Insn 6: point = 517, n_alt = 5
   Insn 5: point = 517, n_alt = 5
   Insn 4: point = 517, n_alt = 5
   Insn 3: point = 517, n_alt = 5
   Insn 2: point = 517, n_alt = 5
 r87: [513..514]
 r88: [500..501]
 r89: [489..490]
 r90: [488..517]
 r92: [481..482]
 r93: [468..469]
 r94: [457..458]
 r95: [456..517]
 r97: [449..450]
 r98: [436..437]
 r99: [425..426]
 r100: [424..517]
 r102: [417..418]
 r103: [404..405]
 r104: [393..394]
 r105: [392..517]
 r107: [4..6]
 r108: [18..20]
 r109: [375..376]
 r110: [373..374]
 r111: [369..372]
 r112: [364..368]
 r113: [366..367]
 r114: [364..365]
 r115: [361..363]
 r116: [358..360]
 r117: [355..357]
 r118: [352..353]
 r119: [350..351]
 r120: [344..349]
 r121: [339..343]
 r122: [341..342]
 r123: [339..340]
 r124: [336..338]
 r125: [331..335]
 r127: [327..328]
 r128: [325..326]
 r129: [320..324]
 r130: [315..319]
 r131: [317..318]
 r132: [315..316]
 r133: [312..314]
 r134: [309..311]
 r135: [307..308]
 r136: [304..306]
 r137: [278..303]
 r138: [301..302]
 r139: [299..300]
 r140: [293..298]
 r141: [288..292]
 r142: [290..291]
 r143: [288..289]
 r144: [285..287]
 r145: [282..284]
 r146: [280..281]
 r147: [278..279]
 r148: [276..277]
 r149: [272..275]
 r150: [270..271]
 r151: [267..269]
 r152: [250..251]
 r153: [248..249]
 r154: [244..247]
 r155: [239..243]
 r156: [241..242]
 r157: [239..240]
 r158: [237..238]
 r159: [231..233]
 r160: [226..227]
 r161: [224..225]
 r162: [220..223]
 r163: [215..219]
 r164: [217..218]
 r165: [215..216]
 r166: [213..214]
 r167: [207..209]
 r168: [193..194]
 r169: [191..192]
 r170: [187..190]
 r171: [182..186]
 r172: [184..185]
 r173: [182..183]
 r174: [179..181]
 r175: [164..178]
 r176: [164..177]
 r177: [175..176]
 r178: [173..174]
 r179: [171..172]
 r180: [166..170]
 r181: [168..169]
 r182: [166..167]
 r183: [161..165]
 r184: [161..163]
 r185: [159..160]
 r186: [157..158]
 r187: [155..156]
 r188: [150..154]
 r189: [152..153]
 r190: [150..151]
 r191: [147..149]
 r192: [144..146]
 r193: [141..142]
 r194: [139..140]
 r195: [137..138]
 r196: [132..136]
 r197: [134..135]
 r198: [132..133]
 r199: [128..131]
 r200: [126..127]
 r201: [124..125]
 r202: [122..123]
 r203: [117..121]
 r204: [119..120]
 r205: [117..118]
 r206: [114..116]
 r207: [97..113]
 r208: [97..112]
 r209: [110..111]
 r210: [108..109]
 r211: [104..107]
 r212: [99..103]
 r213: [101..102]
 r214: [99..100]
 r215: [94..98]
 r216: [94..96]
 r217: [91..92]
 r218: [89..90]
 r219: [87..88]
 r220: [82..86]
 r221: [84..85]
 r222: [82..83]
 r223: [79..81]
 r224: [76..78]
 r225: [73..74]
 r226: [71..72]
 r227: [69..70]
 r228: [64..68]
 r229: [66..67]
 r230: [64..65]
 r231: [60..63]
 r232: [58..59]
 r233: [56..57]
 r234: [54..55]
 r235: [49..53]
 r236: [51..52]
 r237: [49..50]
 r238: [46..48]
 r239: [30..45]
 r240: [30..44]
 r241: [42..43]
 r242: [40..41]
 r243: [37..39]
 r244: [32..36]
 r245: [34..35]
 r246: [32..33]
 r247: [27..31]
 r248: [27..29]
 r249: [24..25]
 r250: [22..23]
 r251: [10..11]
 r252: [8..9]
 r253: [506..510]
 r254: [0..504]
 r255: [493..495]
 r256: [491..492]
 r260: [355..485] [0..347]
 r261: [474..478]
 r262: [0..472]
 r263: [461..463]
 r264: [459..460]
 r268: [323..453] [0..296]
 r269: [442..446]
 r270: [0..440]
 r271: [429..431]
 r272: [427..428]
 r276: [0..421]
 r277: [410..414]
 r278: [0..408]
 r279: [397..399]
 r280: [395..396]
 r284: [0..389]
 r285: [384..388]
 r286: [0..385]
 r287: [0..1]
 r288: [14..378]
 r289: [14..15]
 r290: [515..516]
 r291: [511..512]
 r292: [508..509]
 r293: [502..503]
 r294: [498..499]
 r295: [493..494]
 r296: [483..484]
 r297: [479..480]
 r298: [476..477]
 r299: [470..471]
 r300: [466..467]
 r301: [461..462]
 r302: [451..452]
 r303: [447..448]
 r304: [444..445]
 r305: [438..439]
 r306: [434..435]
 r307: [429..430]
 r308: [419..420]
 r309: [415..416]
 r310: [412..413]
 r311: [406..407]
 r312: [402..403]
 r313: [397..398]
 r314: [2..3]
 r315: [381..382]
 r316: [16..17]
 r317: [361..362]
 r318: [358..359]
 r319: [355..356]
 r320: [336..337]
 r321: [333..334]
 r322: [312..313]
 r323: [309..310]
 r324: [304..305]
 r325: [285..286]
 r326: [282..283]
 r327: [267..268]
 r328: [264..265]
 r329: [262..263]
 r330: [259..261]
 r331: [258..260]
 r332: [255..257]
 r333: [254..256]
 r334: [252..253]
 r335: [234..236]
 r336: [234..235]
 r337: [230..232]
 r338: [228..229]
 r339: [210..212]
 r340: [210..211]
 r341: [206..208]
 r342: [204..205]
 r343: [202..203]
 r344: [199..201]
 r345: [198..200]
 r346: [196..197]
 r347: [179..180]
 r348: [161..162]
 r349: [147..148]
 r350: [144..145]
 r351: [128..130]
 r352: [128..129]
 r353: [114..115]
 r354: [94..95]
 r355: [79..80]
 r356: [76..77]
 r357: [60..62]
 r358: [60..61]
 r359: [46..47]
 r360: [27..28]
 r361: [505..507]
 r362: [496..497]
 r363: [486..487]
 r364: [473..475]
 r365: [464..465]
 r366: [454..455]
 r367: [441..443]
 r368: [432..433]
 r369: [422..423]
 r370: [409..411]
 r371: [400..401]
 r372: [390..391]
 r373: [386..387]
 r375: [379..380]
 r377: [369..370]
 r378: [344..345]
 r379: [330..332]
 r380: [320..321]
 r381: [293..294]
 r383: [244..245]
 r384: [220..221]
 r385: [187..188]
 r386: [104..105]
 r387: [37..38]
 r389: [295..322]
 r392: [346..371]
 r393: [106..189]
 r394: [272..273]
 r395: [18..19]
 r396: [4..5]
 r397: [222..297]
 r398: [274..329]
 r399: [246..348]
Compressing live ranges: from 518 to 404 - 77%
Ranges after the compression:
 r87: [400..401]
 r88: [390..391]
 r89: [380..381]
 r90: [380..403]
 r92: [374..375]
 r93: [364..365]
 r94: [354..355]
 r95: [354..403]
 r97: [348..349]
 r98: [338..339]
 r99: [328..329]
 r100: [328..403]
 r102: [322..323]
 r103: [312..313]
 r104: [302..303]
 r105: [302..403]
 r107: [4..5]
 r108: [14..15]
 r109: [290..291]
 r110: [288..289]
 r111: [286..287]
 r112: [282..285]
 r113: [284..285]
 r114: [282..283]
 r115: [280..281]
 r116: [278..279]
 r117: [276..277]
 r118: [274..275]
 r119: [272..273]
 r120: [268..271]
 r121: [264..267]
 r122: [266..267]
 r123: [264..265]
 r124: [262..263]
 r125: [258..261]
 r127: [256..257]
 r128: [254..255]
 r129: [250..253]
 r130: [246..249]
 r131: [248..249]
 r132: [246..247]
 r133: [244..245]
 r134: [242..243]
 r135: [240..241]
 r136: [238..239]
 r137: [218..237]
 r138: [236..237]
 r139: [234..235]
 r140: [230..233]
 r141: [226..229]
 r142: [228..229]
 r143: [226..227]
 r144: [224..225]
 r145: [222..223]
 r146: [220..221]
 r147: [218..219]
 r148: [216..217]
 r149: [212..215]
 r150: [210..211]
 r151: [208..209]
 r152: [196..197]
 r153: [194..195]
 r154: [190..193]
 r155: [186..189]
 r156: [188..189]
 r157: [186..187]
 r158: [184..185]
 r159: [180..181]
 r160: [176..177]
 r161: [174..175]
 r162: [170..173]
 r163: [166..169]
 r164: [168..169]
 r165: [166..167]
 r166: [164..165]
 r167: [160..161]
 r168: [150..151]
 r169: [148..149]
 r170: [146..147]
 r171: [142..145]
 r172: [144..145]
 r173: [142..143]
 r174: [140..141]
 r175: [128..139]
 r176: [128..139]
 r177: [138..139]
 r178: [136..137]
 r179: [134..135]
 r180: [130..133]
 r181: [132..133]
 r182: [130..131]
 r183: [126..129]
 r184: [126..127]
 r185: [124..125]
 r186: [122..123]
 r187: [120..121]
 r188: [116..119]
 r189: [118..119]
 r190: [116..117]
 r191: [114..115]
 r192: [112..113]
 r193: [110..111]
 r194: [108..109]
 r195: [106..107]
 r196: [102..105]
 r197: [104..105]
 r198: [102..103]
 r199: [100..101]
 r200: [98..99]
 r201: [96..97]
 r202: [94..95]
 r203: [90..93]
 r204: [92..93]
 r205: [90..91]
 r206: [88..89]
 r207: [74..87]
 r208: [74..87]
 r209: [86..87]
 r210: [84..85]
 r211: [80..83]
 r212: [76..79]
 r213: [78..79]
 r214: [76..77]
 r215: [72..75]
 r216: [72..73]
 r217: [70..71]
 r218: [68..69]
 r219: [66..67]
 r220: [62..65]
 r221: [64..65]
 r222: [62..63]
 r223: [60..61]
 r224: [58..59]
 r225: [56..57]
 r226: [54..55]
 r227: [52..53]
 r228: [48..51]
 r229: [50..51]
 r230: [48..49]
 r231: [46..47]
 r232: [44..45]
 r233: [42..43]
 r234: [40..41]
 r235: [36..39]
 r236: [38..39]
 r237: [36..37]
 r238: [34..35]
 r239: [22..33]
 r240: [22..33]
 r241: [32..33]
 r242: [30..31]
 r243: [28..29]
 r244: [24..27]
 r245: [26..27]
 r246: [24..25]
 r247: [20..23]
 r248: [20..21]
 r249: [18..19]
 r250: [16..17]
 r251: [8..9]
 r252: [6..7]
 r253: [394..397]
 r254: [0..393]
 r255: [384..385]
 r256: [382..383]
 r260: [276..377] [0..271]
 r261: [368..371]
 r262: [0..367]
 r263: [358..359]
 r264: [356..357]
 r268: [252..351] [0..233]
 r269: [342..345]
 r270: [0..341]
 r271: [332..333]
 r272: [330..331]
 r276: [0..325]
 r277: [316..319]
 r278: [0..315]
 r279: [306..307]
 r280: [304..305]
 r284: [0..299]
 r285: [296..299]
 r286: [0..297]
 r287: [0..1]
 r288: [10..291]
 r289: [10..11]
 r290: [402..403]
 r291: [398..399]
 r292: [396..397]
 r293: [392..393]
 r294: [388..389]
 r295: [384..385]
 r296: [376..377]
 r297: [372..373]
 r298: [370..371]
 r299: [366..367]
 r300: [362..363]
 r301: [358..359]
 r302: [350..351]
 r303: [346..347]
 r304: [344..345]
 r305: [340..341]
 r306: [336..337]
 r307: [332..333]
 r308: [324..325]
 r309: [320..321]
 r310: [318..319]
 r311: [314..315]
 r312: [310..311]
 r313: [306..307]
 r314: [2..3]
 r315: [294..295]
 r316: [12..13]
 r317: [280..281]
 r318: [278..279]
 r319: [276..277]
 r320: [262..263]
 r321: [260..261]
 r322: [244..245]
 r323: [242..243]
 r324: [238..239]
 r325: [224..225]
 r326: [222..223]
 r327: [208..209]
 r328: [206..207]
 r329: [204..205]
 r330: [202..203]
 r331: [202..203]
 r332: [200..201]
 r333: [200..201]
 r334: [198..199]
 r335: [182..183]
 r336: [182..183]
 r337: [180..181]
 r338: [178..179]
 r339: [162..163]
 r340: [162..163]
 r341: [160..161]
 r342: [158..159]
 r343: [156..157]
 r344: [154..155]
 r345: [154..155]
 r346: [152..153]
 r347: [140..141]
 r348: [126..127]
 r349: [114..115]
 r350: [112..113]
 r351: [100..101]
 r352: [100..101]
 r353: [88..89]
 r354: [72..73]
 r355: [60..61]
 r356: [58..59]
 r357: [46..47]
 r358: [46..47]
 r359: [34..35]
 r360: [20..21]
 r361: [394..395]
 r362: [386..387]
 r363: [378..379]
 r364: [368..369]
 r365: [360..361]
 r366: [352..353]
 r367: [342..343]
 r368: [334..335]
 r369: [326..327]
 r370: [316..317]
 r371: [308..309]
 r372: [300..301]
 r373: [298..299]
 r375: [292..293]
 r377: [286..287]
 r378: [268..269]
 r379: [258..259]
 r380: [250..251]
 r381: [230..231]
 r383: [190..191]
 r384: [170..171]
 r385: [146..147]
 r386: [80..81]
 r387: [28..29]
 r389: [232..251]
 r392: [270..287]
 r393: [82..147]
 r394: [212..213]
 r395: [14..15]
 r396: [4..5]
 r397: [172..233]
 r398: [214..257]
 r399: [192..271]

********** Assignment #2: **********

	 Assigning to 397 (cl=GENERAL_REGS, orig=268, freq=3000, tfirst=397, tfreq=3000)...
	 Assigning to 399 (cl=GENERAL_REGS, orig=260, freq=3000, tfirst=399, tfreq=3000)...
	 Assigning to 395 (cl=GENERAL_REGS, orig=288, freq=2000, tfirst=395, tfreq=2000)...
	   Assign 5 to optional reload r395 (freq=2000)
	 Assigning to 396 (cl=GENERAL_REGS, orig=286, freq=2000, tfirst=396, tfreq=2000)...
	   Assign 4 to optional reload r396 (freq=2000)
	 Assigning to 398 (cl=SSE_REGS, orig=126, freq=2000, tfirst=394, tfreq=2000)...
	 Assigning to 394 (cl=SSE_REGS, orig=126, freq=2000, tfirst=394, tfreq=2000)...
	   Assign 24 to optional reload r394 (freq=2000)
	Hard reg 24 is preferable by r398 with profit 1000
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Inherit 0 out of 3 (0.00%)
   Insn after restoring regs:
  490: r394:SF=r126:SF
      REG_DEAD r126:SF
	   Removing inheritance:
  493: r268:DI=r397:DI
deleting insn with uid = 493.
   Insn after restoring regs:
  484: r268:DI=r389:DI
   Insn after restoring regs:
  475: r126:SF=r379:SF
      REG_DEAD r379:SF
	   Removing inheritance:
  495: r260:DI=r399:DI
deleting insn with uid = 495.
   Insn after restoring regs:
  487: r260:DI=r392:DI
   Insn after restoring regs:
  480: r384:DI=r268:DI
      REG_DEAD r268:DI
   Insn after restoring regs:
  479: r383:DI=r260:DI
      REG_DEAD r260:DI
Keep optional reload reg 374
Keep optional reload reg 376
Keep optional reload reg 382
Remove optional reload reg 394
  Restoring original insn:
  188: r150:SF=r149:SF*r126:SF
      REG_DEAD r126:SF
      REG_DEAD r149:SF
  Deleting move 490
  490: r394:SF=r126:SF
      REG_DEAD r126:SF
deleting insn with uid = 490.
Remove optional reload reg 395
  Restoring original insn:
  123: flags:CCGC=cmp(r288:SI,r108:SI)
      REG_DEAD r288:SI
      REG_DEAD r108:SI
  Deleting move 491
  491: r395:SI=r288:SI
deleting insn with uid = 491.
Remove optional reload reg 396
  Restoring original insn:
  112: flags:CCGC=cmp(r286:SI,r107:SI)
      REG_DEAD r286:SI
      REG_DEAD r107:SI
  Deleting move 492
  492: r396:SI=r286:SI
deleting insn with uid = 492.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 188:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) rm  (1) re {*cmpsi_1}
            0 Non pseudo reload: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) rm  (1) re {*cmpsi_1}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 15
   Insn 432: point = 0, n_alt = -1
  BB 16
   Insn 439: point = 0, n_alt = -1
  BB 3
   Insn 116: point = 0, n_alt = -1
   Insn 115: point = 0, n_alt = 0
   Insn 114: point = 1, n_alt = 0
   Insn 113: point = 3, n_alt = 0
   Insn 112: point = 4, n_alt = 0
   Insn 111: point = 5, n_alt = 0
  BB 14
   Insn 435: point = 7, n_alt = -1
   Insn 409: point = 7, n_alt = 1
   Insn 408: point = 8, n_alt = 0
   Insn 407: point = 10, n_alt = 0
  BB 17
   Insn 442: point = 12, n_alt = -1
  BB 5
   Insn 127: point = 13, n_alt = -1
   Insn 126: point = 13, n_alt = 0
   Insn 125: point = 14, n_alt = 0
   Insn 124: point = 16, n_alt = 0
   Insn 123: point = 17, n_alt = 0
   Insn 122: point = 18, n_alt = 0
  BB 13
   Insn 433: point = 20, n_alt = -1
   Insn 401: point = 20, n_alt = 1
   Insn 400: point = 21, n_alt = 0
   Insn 399: point = 23, n_alt = 0
  BB 12
   Insn 396: point = 25, n_alt = 8
   Insn 395: point = 26, n_alt = 3
   Insn 394: point = 27, n_alt = 1
   Insn 393: point = 29, n_alt = 0
   Insn 392: point = 31, n_alt = 0
   Insn 391: point = 33, n_alt = 0
   Insn 390: point = 34, n_alt = 3
   Insn 483: point = 36, n_alt = 3
   Insn 389: point = 37, n_alt = 2
   Insn 388: point = 39, n_alt = 0
   Insn 387: point = 41, n_alt = 0
   Insn 386: point = 42, n_alt = 7
   Insn 385: point = 43, n_alt = 7
   Insn 384: point = 45, n_alt = 3
   Insn 383: point = 46, n_alt = 0
   Insn 382: point = 48, n_alt = 0
   Insn 381: point = 50, n_alt = 0
   Insn 380: point = 51, n_alt = 3
   Insn 379: point = 53, n_alt = 2
   Insn 378: point = 55, n_alt = 0
   Insn 377: point = 57, n_alt = 0
   Insn 376: point = 58, n_alt = 8
   Insn 375: point = 59, n_alt = 7
   Insn 374: point = 60, n_alt = 3
   Insn 373: point = 61, n_alt = 0
   Insn 372: point = 63, n_alt = 0
   Insn 371: point = 65, n_alt = 0
   Insn 370: point = 66, n_alt = 3
   Insn 369: point = 68, n_alt = 2
   Insn 368: point = 70, n_alt = 0
   Insn 367: point = 72, n_alt = 0
  BB 11
   Insn 362: point = 74, n_alt = -1
   Insn 361: point = 74, n_alt = 1
   Insn 360: point = 75, n_alt = 7
   Insn 359: point = 76, n_alt = 7
   Insn 358: point = 78, n_alt = 3
   Insn 357: point = 79, n_alt = 0
   Insn 356: point = 81, n_alt = 0
   Insn 355: point = 83, n_alt = 0
   Insn 354: point = 84, n_alt = 3
   Insn 353: point = 86, n_alt = 2
   Insn 352: point = 88, n_alt = 0
   Insn 351: point = 90, n_alt = 0
  BB 10
   Insn 348: point = 92, n_alt = 8
   Insn 347: point = 93, n_alt = 3
   Insn 346: point = 94, n_alt = 1
   Insn 345: point = 96, n_alt = 0
   Insn 344: point = 98, n_alt = 0
   Insn 343: point = 100, n_alt = 0
   Insn 342: point = 101, n_alt = 3
   Insn 482: point = 103, n_alt = -2
   Insn 341: point = 105, n_alt = 2
   Insn 340: point = 107, n_alt = 0
   Insn 339: point = 109, n_alt = 0
   Insn 338: point = 110, n_alt = 7
   Insn 337: point = 111, n_alt = 7
   Insn 336: point = 113, n_alt = 3
   Insn 335: point = 114, n_alt = 0
   Insn 334: point = 116, n_alt = 0
   Insn 333: point = 118, n_alt = 0
   Insn 332: point = 119, n_alt = 3
   Insn 331: point = 121, n_alt = 2
   Insn 330: point = 123, n_alt = 0
   Insn 329: point = 125, n_alt = 0
   Insn 328: point = 126, n_alt = 8
   Insn 327: point = 127, n_alt = 7
   Insn 326: point = 128, n_alt = 3
   Insn 325: point = 129, n_alt = 0
   Insn 324: point = 131, n_alt = 0
   Insn 323: point = 133, n_alt = 0
   Insn 322: point = 134, n_alt = 3
   Insn 321: point = 136, n_alt = 2
   Insn 320: point = 138, n_alt = 0
   Insn 319: point = 140, n_alt = 0
  BB 9
   Insn 314: point = 142, n_alt = -1
   Insn 313: point = 142, n_alt = 1
   Insn 312: point = 143, n_alt = 7
   Insn 311: point = 144, n_alt = 7
   Insn 310: point = 146, n_alt = 3
   Insn 309: point = 147, n_alt = 0
   Insn 308: point = 149, n_alt = 0
   Insn 307: point = 151, n_alt = 0
   Insn 306: point = 152, n_alt = 3
   Insn 305: point = 154, n_alt = 2
   Insn 304: point = 156, n_alt = 0
   Insn 303: point = 158, n_alt = 0
   Insn 302: point = 159, n_alt = 8
   Insn 301: point = 160, n_alt = 3
   Insn 300: point = 161, n_alt = 2
   Insn 299: point = 163, n_alt = 0
   Insn 298: point = 165, n_alt = 0
   Insn 297: point = 167, n_alt = 0
   Insn 296: point = 168, n_alt = 3
   Insn 295: point = 170, n_alt = 2
   Insn 294: point = 172, n_alt = 0
   Insn 293: point = 174, n_alt = 0
   Insn 292: point = 175, n_alt = 7
   Insn 291: point = 176, n_alt = 7
   Insn 290: point = 178, n_alt = 3
   Insn 289: point = 179, n_alt = 0
   Insn 288: point = 181, n_alt = 0
   Insn 287: point = 183, n_alt = 0
   Insn 286: point = 184, n_alt = 3
   Insn 481: point = 186, n_alt = -2
   Insn 489: point = 187, n_alt = 3
   Insn 285: point = 188, n_alt = 2
   Insn 284: point = 190, n_alt = 0
   Insn 283: point = 192, n_alt = 0
  BB 8
   Insn 280: point = 194, n_alt = 0
   Insn 279: point = 194, n_alt = -2
   Insn 278: point = 195, n_alt = 3
   Insn 277: point = 196, n_alt = 0
   Insn 276: point = 196, n_alt = -2
   Insn 275: point = 197, n_alt = -2
   Insn 274: point = 198, n_alt = 0
   Insn 273: point = 198, n_alt = 3
   Insn 272: point = 199, n_alt = 3
   Insn 271: point = 200, n_alt = 0
   Insn 270: point = 200, n_alt = -2
   Insn 269: point = 201, n_alt = 2
   Insn 268: point = 201, n_alt = 0
   Insn 267: point = 201, n_alt = 3
   Insn 266: point = 202, n_alt = 0
   Insn 265: point = 202, n_alt = -2
   Insn 264: point = 203, n_alt = 2
   Insn 263: point = 203, n_alt = 0
   Insn 262: point = 203, n_alt = 3
   Insn 261: point = 204, n_alt = 0
   Insn 260: point = 204, n_alt = -2
   Insn 259: point = 205, n_alt = -2
   Insn 258: point = 206, n_alt = 0
   Insn 257: point = 206, n_alt = 3
   Insn 256: point = 207, n_alt = 3
   Insn 255: point = 209, n_alt = 3
   Insn 254: point = 210, n_alt = 1
   Insn 253: point = 212, n_alt = 0
   Insn 252: point = 214, n_alt = 0
   Insn 251: point = 216, n_alt = 0
   Insn 250: point = 217, n_alt = 3
   Insn 480: point = 219, n_alt = 3
   Insn 249: point = 220, n_alt = 2
   Insn 248: point = 222, n_alt = 0
   Insn 247: point = 224, n_alt = 0
   Insn 246: point = 225, n_alt = 0
   Insn 245: point = 225, n_alt = -2
   Insn 244: point = 226, n_alt = 2
   Insn 243: point = 226, n_alt = 0
   Insn 242: point = 226, n_alt = 3
   Insn 241: point = 227, n_alt = 0
   Insn 240: point = 227, n_alt = -2
   Insn 239: point = 228, n_alt = -2
   Insn 238: point = 229, n_alt = 0
   Insn 237: point = 229, n_alt = 3
   Insn 236: point = 230, n_alt = 3
   Insn 235: point = 232, n_alt = 3
   Insn 234: point = 233, n_alt = 1
   Insn 233: point = 235, n_alt = 0
   Insn 232: point = 237, n_alt = 0
   Insn 231: point = 239, n_alt = 0
   Insn 230: point = 240, n_alt = 3
   Insn 479: point = 242, n_alt = 3
   Insn 229: point = 243, n_alt = 2
   Insn 228: point = 245, n_alt = 0
   Insn 227: point = 247, n_alt = 0
   Insn 226: point = 248, n_alt = 0
   Insn 225: point = 248, n_alt = -2
   Insn 224: point = 249, n_alt = 2
   Insn 223: point = 249, n_alt = 0
   Insn 222: point = 249, n_alt = 3
   Insn 221: point = 250, n_alt = 0
   Insn 220: point = 250, n_alt = -2
   Insn 219: point = 251, n_alt = -2
   Insn 218: point = 252, n_alt = 0
   Insn 217: point = 252, n_alt = 3
   Insn 216: point = 253, n_alt = 3
   Insn 215: point = 254, n_alt = 0
   Insn 214: point = 254, n_alt = -2
   Insn 213: point = 255, n_alt = -2
   Insn 212: point = 256, n_alt = 0
   Insn 211: point = 256, n_alt = 3
   Insn 210: point = 257, n_alt = 3
   Insn 209: point = 258, n_alt = 0
   Insn 208: point = 258, n_alt = -2
   Insn 207: point = 259, n_alt = 2
   Insn 206: point = 259, n_alt = 2
   Insn 205: point = 259, n_alt = 3
   Insn 204: point = 260, n_alt = 0
   Insn 203: point = 260, n_alt = -2
   Insn 202: point = 261, n_alt = 3
   Insn 201: point = 262, n_alt = 1
   Insn 200: point = 262, n_alt = 1
   Insn 199: point = 262, n_alt = 1
   Insn 198: point = 262, n_alt = 5
  BB 7
   Insn 193: point = 263, n_alt = -1
   Insn 192: point = 263, n_alt = 1
   Insn 191: point = 264, n_alt = 7
   Insn 190: point = 265, n_alt = 7
   Insn 189: point = 266, n_alt = 8
   Insn 188: point = 267, n_alt = 1
   Insn 187: point = 269, n_alt = -2
   Insn 186: point = 270, n_alt = 0
   Insn 185: point = 270, n_alt = -2
   Insn 184: point = 271, n_alt = 2
   Insn 183: point = 273, n_alt = -2
   Insn 182: point = 275, n_alt = 2
   Insn 181: point = 277, n_alt = 7
   Insn 180: point = 278, n_alt = 7
   Insn 179: point = 280, n_alt = 3
   Insn 178: point = 281, n_alt = 0
   Insn 177: point = 283, n_alt = 0
   Insn 176: point = 285, n_alt = 0
   Insn 175: point = 286, n_alt = 3
   Insn 477: point = 288, n_alt = -2
   Insn 484: point = 290, n_alt = 5
   Insn 174: point = 291, n_alt = 2
   Insn 173: point = 293, n_alt = 0
   Insn 172: point = 295, n_alt = 0
   Insn 171: point = 296, n_alt = 1
   Insn 170: point = 298, n_alt = 7
   Insn 169: point = 299, n_alt = -2
   Insn 168: point = 301, n_alt = 2
   Insn 167: point = 303, n_alt = 7
   Insn 166: point = 304, n_alt = 7
   Insn 165: point = 306, n_alt = 3
   Insn 164: point = 307, n_alt = 0
   Insn 163: point = 309, n_alt = 0
   Insn 162: point = 311, n_alt = 0
   Insn 161: point = 312, n_alt = 3
   Insn 476: point = 314, n_alt = -2
   Insn 485: point = 315, n_alt = 3
   Insn 160: point = 317, n_alt = 2
   Insn 159: point = 319, n_alt = 0
   Insn 158: point = 321, n_alt = 0
   Insn 475: point = 322, n_alt = 8
   Insn 157: point = 324, n_alt = 2
   Insn 474: point = 325, n_alt = -2
   Insn 156: point = 327, n_alt = 7
   Insn 155: point = 328, n_alt = 7
   Insn 154: point = 330, n_alt = 3
   Insn 153: point = 331, n_alt = 0
   Insn 152: point = 333, n_alt = 0
   Insn 151: point = 335, n_alt = 0
   Insn 150: point = 336, n_alt = 3
   Insn 473: point = 338, n_alt = -2
   Insn 487: point = 340, n_alt = 5
   Insn 149: point = 341, n_alt = 2
   Insn 148: point = 343, n_alt = 0
   Insn 147: point = 345, n_alt = 0
  BB 6
   Insn 142: point = 347, n_alt = -1
   Insn 141: point = 347, n_alt = 1
   Insn 140: point = 348, n_alt = 7
   Insn 139: point = 349, n_alt = 0
   Insn 138: point = 351, n_alt = 2
   Insn 137: point = 352, n_alt = 7
   Insn 136: point = 354, n_alt = 3
   Insn 135: point = 355, n_alt = 0
   Insn 134: point = 357, n_alt = 0
   Insn 133: point = 359, n_alt = 0
   Insn 132: point = 360, n_alt = 3
   Insn 472: point = 362, n_alt = -2
   Insn 488: point = 363, n_alt = 3
   Insn 131: point = 364, n_alt = 2
   Insn 130: point = 366, n_alt = 0
   Insn 129: point = 368, n_alt = 0
  BB 4
   Insn 120: point = 370, n_alt = 1
   Insn 470: point = 370, n_alt = 1
   Insn 119: point = 372, n_alt = 0
   Insn 118: point = 374, n_alt = 3
  BB 2
   Insn 109: point = 376, n_alt = 1
   Insn 468: point = 377, n_alt = 1
   Insn 108: point = 379, n_alt = 0
   Insn 107: point = 380, n_alt = 0
   Insn 467: point = 381, n_alt = 5
   Insn 106: point = 383, n_alt = 0
   Insn 466: point = 383, n_alt = -2
   Insn 102: point = 384, n_alt = 2
   Insn 101: point = 385, n_alt = 3
   Insn 100: point = 386, n_alt = -2
   Insn 98: point = 388, n_alt = 1
   Insn 96: point = 390, n_alt = 0
   Insn 97: point = 390, n_alt = 2
   Insn 465: point = 391, n_alt = -2
   Insn 95: point = 393, n_alt = 2
   Insn 464: point = 393, n_alt = -2
   Insn 94: point = 394, n_alt = 5
   Insn 93: point = 395, n_alt = 0
   Insn 92: point = 397, n_alt = 0
   Insn 91: point = 399, n_alt = 3
   Insn 463: point = 400, n_alt = -2
   Insn 90: point = 402, n_alt = 0
   Insn 462: point = 403, n_alt = -2
   Insn 88: point = 405, n_alt = 0
   Insn 89: point = 405, n_alt = 2
   Insn 87: point = 406, n_alt = 3
   Insn 86: point = 407, n_alt = 5
   Insn 85: point = 408, n_alt = 0
   Insn 84: point = 410, n_alt = 0
   Insn 83: point = 412, n_alt = 3
   Insn 461: point = 413, n_alt = -2
   Insn 82: point = 415, n_alt = 0
   Insn 460: point = 415, n_alt = -2
   Insn 78: point = 416, n_alt = 5
   Insn 77: point = 417, n_alt = 5
   Insn 76: point = 418, n_alt = -2
   Insn 74: point = 420, n_alt = 1
   Insn 72: point = 422, n_alt = 0
   Insn 73: point = 422, n_alt = 2
   Insn 459: point = 423, n_alt = -2
   Insn 71: point = 425, n_alt = 2
   Insn 458: point = 425, n_alt = -2
   Insn 70: point = 426, n_alt = 5
   Insn 69: point = 427, n_alt = 0
   Insn 68: point = 429, n_alt = 0
   Insn 67: point = 431, n_alt = 3
   Insn 457: point = 432, n_alt = -2
   Insn 66: point = 434, n_alt = 0
   Insn 456: point = 435, n_alt = -2
   Insn 64: point = 437, n_alt = 0
   Insn 65: point = 437, n_alt = 2
   Insn 63: point = 438, n_alt = 3
   Insn 62: point = 439, n_alt = 5
   Insn 61: point = 440, n_alt = 0
   Insn 60: point = 442, n_alt = 0
   Insn 59: point = 444, n_alt = 3
   Insn 455: point = 445, n_alt = 5
   Insn 58: point = 447, n_alt = 0
   Insn 454: point = 447, n_alt = -2
   Insn 54: point = 448, n_alt = 5
   Insn 53: point = 449, n_alt = 5
   Insn 52: point = 450, n_alt = -2
   Insn 50: point = 452, n_alt = 1
   Insn 48: point = 454, n_alt = 0
   Insn 49: point = 454, n_alt = 2
   Insn 453: point = 455, n_alt = -2
   Insn 47: point = 457, n_alt = 2
   Insn 452: point = 457, n_alt = -2
   Insn 46: point = 458, n_alt = 5
   Insn 45: point = 459, n_alt = 0
   Insn 44: point = 461, n_alt = 0
   Insn 43: point = 463, n_alt = 3
   Insn 451: point = 464, n_alt = -2
   Insn 42: point = 466, n_alt = 0
   Insn 450: point = 467, n_alt = -2
   Insn 40: point = 469, n_alt = 0
   Insn 41: point = 469, n_alt = 2
   Insn 39: point = 470, n_alt = 3
   Insn 38: point = 471, n_alt = 5
   Insn 37: point = 472, n_alt = 0
   Insn 36: point = 474, n_alt = 0
   Insn 35: point = 476, n_alt = 3
   Insn 449: point = 477, n_alt = 5
   Insn 34: point = 479, n_alt = 0
   Insn 448: point = 479, n_alt = -2
   Insn 30: point = 480, n_alt = 2
   Insn 29: point = 481, n_alt = 3
   Insn 28: point = 482, n_alt = -2
   Insn 26: point = 484, n_alt = 1
   Insn 24: point = 486, n_alt = 0
   Insn 25: point = 486, n_alt = 2
   Insn 447: point = 487, n_alt = -2
   Insn 23: point = 489, n_alt = 2
   Insn 446: point = 489, n_alt = -2
   Insn 22: point = 490, n_alt = 5
   Insn 21: point = 491, n_alt = 0
   Insn 20: point = 493, n_alt = 0
   Insn 19: point = 495, n_alt = 3
   Insn 445: point = 496, n_alt = -2
   Insn 18: point = 498, n_alt = 0
   Insn 444: point = 499, n_alt = -2
   Insn 16: point = 501, n_alt = 0
   Insn 17: point = 501, n_alt = 2
   Insn 15: point = 502, n_alt = 3
   Insn 14: point = 503, n_alt = 5
   Insn 13: point = 504, n_alt = 0
   Insn 12: point = 506, n_alt = 0
   Insn 11: point = 508, n_alt = 3
   Insn 7: point = 509, n_alt = 5
   Insn 6: point = 509, n_alt = 5
   Insn 5: point = 509, n_alt = 5
   Insn 4: point = 509, n_alt = 5
   Insn 3: point = 509, n_alt = 5
   Insn 2: point = 509, n_alt = 5
 r95: [448..509]
 r100: [416..509]
 r126: [268..322]
 r260: [347..477] [0..340]
 r268: [316..445] [0..290]
 r284: [0..381]
 r286: [0..377]
 r288: [13..370]
Compressing live ranges: from 510 to 10 - 1%
Ranges after the compression:
 r95: [8..9]
 r100: [6..9]
 r126: [0..3]
 r260: [0..9]
 r268: [0..7]
 r284: [0..5]
 r286: [0..5]
 r288: [0..5]
  Slot 0 regnos (width = 0):	 260
  Slot 1 regnos (width = 0):	 268	 95
  Slot 2 regnos (width = 0):	 284	 100
  Slot 3 regnos (width = 0):	 126
  Slot 4 regnos (width = 0):	 286
  Slot 5 regnos (width = 0):	 288
Changing spilled pseudos to memory in insn #449
Changing spilled pseudos to memory in insn #53
Changing spilled pseudos to memory in insn #54
Changing spilled pseudos to memory in insn #455
Changing spilled pseudos to memory in insn #77
Changing spilled pseudos to memory in insn #78
Changing spilled pseudos to memory in insn #467
Changing spilled pseudos to memory in insn #468
Changing spilled pseudos to memory in insn #112
Changing spilled pseudos to memory in insn #470
Changing spilled pseudos to memory in insn #123
Changing spilled pseudos to memory in insn #488
Changing spilled pseudos to memory in insn #487
Changing spilled pseudos to memory in insn #475
Changing spilled pseudos to memory in insn #485
Changing spilled pseudos to memory in insn #484
Changing spilled pseudos to memory in insn #188
Changing spilled pseudos to memory in insn #479
Changing spilled pseudos to memory in insn #480
Changing spilled pseudos to memory in insn #489
Changing spilled pseudos to memory in insn #483
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 3 for insn #483
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 483:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #489
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 489:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #480
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 480:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 3 for insn #479
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 479:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 1 for insn #188
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 188:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 5 for insn #484
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 484:  (0) m  (1) re {*movdi_internal}
Reusing alternative 3 for insn #485
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 485:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 8 for insn #475
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 475:  (0) m  (1) v {*movsf_internal}
Reusing alternative 5 for insn #487
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 487:  (0) m  (1) re {*movdi_internal}
Reusing alternative 3 for insn #488
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 488:  (0) r  (1) rem {*movdi_internal}
Reusing alternative 0 for insn #123
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) rm  (1) re {*cmpsi_1}
Reusing alternative 1 for insn #470
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 470:  (0) m  (1) re {*movsi_internal}
Reusing alternative 0 for insn #112
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 112:  (0) rm  (1) re {*cmpsi_1}
Reusing alternative 1 for insn #468
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 468:  (0) m  (1) re {*movsi_internal}
Reusing alternative 5 for insn #467
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 467:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 78:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 77:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #455
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 455:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=2,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=3,overall=9,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=4,overall=9,losers=1,rld_nregs=1
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 54:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 53:  (0) m  (1) re {*movdi_internal}
Reusing alternative 5 for insn #449
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 449:  (0) m  (1) re {*movdi_internal}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #4: **********

  BB 15
   Insn 432: point = 0, n_alt = -1
  BB 16
   Insn 439: point = 0, n_alt = -1
  BB 3
   Insn 116: point = 0, n_alt = -1
   Insn 115: point = 0, n_alt = 0
   Insn 114: point = 1, n_alt = 0
   Insn 113: point = 3, n_alt = 0
   Insn 112: point = 4, n_alt = 0
   Insn 111: point = 5, n_alt = 0
  BB 14
   Insn 435: point = 7, n_alt = -1
   Insn 409: point = 7, n_alt = 1
   Insn 408: point = 8, n_alt = 0
   Insn 407: point = 10, n_alt = 0
  BB 17
   Insn 442: point = 12, n_alt = -1
  BB 5
   Insn 127: point = 13, n_alt = -1
   Insn 126: point = 13, n_alt = 0
   Insn 125: point = 14, n_alt = 0
   Insn 124: point = 16, n_alt = 0
   Insn 123: point = 17, n_alt = 0
   Insn 122: point = 18, n_alt = 0
  BB 13
   Insn 433: point = 20, n_alt = -1
   Insn 401: point = 20, n_alt = 1
   Insn 400: point = 21, n_alt = 0
   Insn 399: point = 23, n_alt = 0
  BB 12
   Insn 396: point = 25, n_alt = 8
   Insn 395: point = 26, n_alt = 3
   Insn 394: point = 27, n_alt = 1
   Insn 393: point = 29, n_alt = 0
   Insn 392: point = 31, n_alt = 0
   Insn 391: point = 33, n_alt = 0
   Insn 390: point = 34, n_alt = 3
   Insn 483: point = 36, n_alt = 3
   Insn 389: point = 37, n_alt = 2
   Insn 388: point = 39, n_alt = 0
   Insn 387: point = 41, n_alt = 0
   Insn 386: point = 42, n_alt = 7
   Insn 385: point = 43, n_alt = 7
   Insn 384: point = 45, n_alt = 3
   Insn 383: point = 46, n_alt = 0
   Insn 382: point = 48, n_alt = 0
   Insn 381: point = 50, n_alt = 0
   Insn 380: point = 51, n_alt = 3
   Insn 379: point = 53, n_alt = 2
   Insn 378: point = 55, n_alt = 0
   Insn 377: point = 57, n_alt = 0
   Insn 376: point = 58, n_alt = 8
   Insn 375: point = 59, n_alt = 7
   Insn 374: point = 60, n_alt = 3
   Insn 373: point = 61, n_alt = 0
   Insn 372: point = 63, n_alt = 0
   Insn 371: point = 65, n_alt = 0
   Insn 370: point = 66, n_alt = 3
   Insn 369: point = 68, n_alt = 2
   Insn 368: point = 70, n_alt = 0
   Insn 367: point = 72, n_alt = 0
  BB 11
   Insn 362: point = 74, n_alt = -1
   Insn 361: point = 74, n_alt = 1
   Insn 360: point = 75, n_alt = 7
   Insn 359: point = 76, n_alt = 7
   Insn 358: point = 78, n_alt = 3
   Insn 357: point = 79, n_alt = 0
   Insn 356: point = 81, n_alt = 0
   Insn 355: point = 83, n_alt = 0
   Insn 354: point = 84, n_alt = 3
   Insn 353: point = 86, n_alt = 2
   Insn 352: point = 88, n_alt = 0
   Insn 351: point = 90, n_alt = 0
  BB 10
   Insn 348: point = 92, n_alt = 8
   Insn 347: point = 93, n_alt = 3
   Insn 346: point = 94, n_alt = 1
   Insn 345: point = 96, n_alt = 0
   Insn 344: point = 98, n_alt = 0
   Insn 343: point = 100, n_alt = 0
   Insn 342: point = 101, n_alt = 3
   Insn 482: point = 103, n_alt = -2
   Insn 341: point = 105, n_alt = 2
   Insn 340: point = 107, n_alt = 0
   Insn 339: point = 109, n_alt = 0
   Insn 338: point = 110, n_alt = 7
   Insn 337: point = 111, n_alt = 7
   Insn 336: point = 113, n_alt = 3
   Insn 335: point = 114, n_alt = 0
   Insn 334: point = 116, n_alt = 0
   Insn 333: point = 118, n_alt = 0
   Insn 332: point = 119, n_alt = 3
   Insn 331: point = 121, n_alt = 2
   Insn 330: point = 123, n_alt = 0
   Insn 329: point = 125, n_alt = 0
   Insn 328: point = 126, n_alt = 8
   Insn 327: point = 127, n_alt = 7
   Insn 326: point = 128, n_alt = 3
   Insn 325: point = 129, n_alt = 0
   Insn 324: point = 131, n_alt = 0
   Insn 323: point = 133, n_alt = 0
   Insn 322: point = 134, n_alt = 3
   Insn 321: point = 136, n_alt = 2
   Insn 320: point = 138, n_alt = 0
   Insn 319: point = 140, n_alt = 0
  BB 9
   Insn 314: point = 142, n_alt = -1
   Insn 313: point = 142, n_alt = 1
   Insn 312: point = 143, n_alt = 7
   Insn 311: point = 144, n_alt = 7
   Insn 310: point = 146, n_alt = 3
   Insn 309: point = 147, n_alt = 0
   Insn 308: point = 149, n_alt = 0
   Insn 307: point = 151, n_alt = 0
   Insn 306: point = 152, n_alt = 3
   Insn 305: point = 154, n_alt = 2
   Insn 304: point = 156, n_alt = 0
   Insn 303: point = 158, n_alt = 0
   Insn 302: point = 159, n_alt = 8
   Insn 301: point = 160, n_alt = 3
   Insn 300: point = 161, n_alt = 2
   Insn 299: point = 163, n_alt = 0
   Insn 298: point = 165, n_alt = 0
   Insn 297: point = 167, n_alt = 0
   Insn 296: point = 168, n_alt = 3
   Insn 295: point = 170, n_alt = 2
   Insn 294: point = 172, n_alt = 0
   Insn 293: point = 174, n_alt = 0
   Insn 292: point = 175, n_alt = 7
   Insn 291: point = 176, n_alt = 7
   Insn 290: point = 178, n_alt = 3
   Insn 289: point = 179, n_alt = 0
   Insn 288: point = 181, n_alt = 0
   Insn 287: point = 183, n_alt = 0
   Insn 286: point = 184, n_alt = 3
   Insn 481: point = 186, n_alt = -2
   Insn 489: point = 187, n_alt = 3
   Insn 285: point = 188, n_alt = 2
   Insn 284: point = 190, n_alt = 0
   Insn 283: point = 192, n_alt = 0
  BB 8
   Insn 280: point = 194, n_alt = 0
   Insn 279: point = 194, n_alt = -2
   Insn 278: point = 195, n_alt = 3
   Insn 277: point = 196, n_alt = 0
   Insn 276: point = 196, n_alt = -2
   Insn 275: point = 197, n_alt = -2
   Insn 274: point = 198, n_alt = 0
   Insn 273: point = 198, n_alt = 3
   Insn 272: point = 199, n_alt = 3
   Insn 271: point = 200, n_alt = 0
   Insn 270: point = 200, n_alt = -2
   Insn 269: point = 201, n_alt = 2
   Insn 268: point = 201, n_alt = 0
   Insn 267: point = 201, n_alt = 3
   Insn 266: point = 202, n_alt = 0
   Insn 265: point = 202, n_alt = -2
   Insn 264: point = 203, n_alt = 2
   Insn 263: point = 203, n_alt = 0
   Insn 262: point = 203, n_alt = 3
   Insn 261: point = 204, n_alt = 0
   Insn 260: point = 204, n_alt = -2
   Insn 259: point = 205, n_alt = -2
   Insn 258: point = 206, n_alt = 0
   Insn 257: point = 206, n_alt = 3
   Insn 256: point = 207, n_alt = 3
   Insn 255: point = 209, n_alt = 3
   Insn 254: point = 210, n_alt = 1
   Insn 253: point = 212, n_alt = 0
   Insn 252: point = 214, n_alt = 0
   Insn 251: point = 216, n_alt = 0
   Insn 250: point = 217, n_alt = 3
   Insn 480: point = 219, n_alt = 3
   Insn 249: point = 220, n_alt = 2
   Insn 248: point = 222, n_alt = 0
   Insn 247: point = 224, n_alt = 0
   Insn 246: point = 225, n_alt = 0
   Insn 245: point = 225, n_alt = -2
   Insn 244: point = 226, n_alt = 2
   Insn 243: point = 226, n_alt = 0
   Insn 242: point = 226, n_alt = 3
   Insn 241: point = 227, n_alt = 0
   Insn 240: point = 227, n_alt = -2
   Insn 239: point = 228, n_alt = -2
   Insn 238: point = 229, n_alt = 0
   Insn 237: point = 229, n_alt = 3
   Insn 236: point = 230, n_alt = 3
   Insn 235: point = 232, n_alt = 3
   Insn 234: point = 233, n_alt = 1
   Insn 233: point = 235, n_alt = 0
   Insn 232: point = 237, n_alt = 0
   Insn 231: point = 239, n_alt = 0
   Insn 230: point = 240, n_alt = 3
   Insn 479: point = 242, n_alt = 3
   Insn 229: point = 243, n_alt = 2
   Insn 228: point = 245, n_alt = 0
   Insn 227: point = 247, n_alt = 0
   Insn 226: point = 248, n_alt = 0
   Insn 225: point = 248, n_alt = -2
   Insn 224: point = 249, n_alt = 2
   Insn 223: point = 249, n_alt = 0
   Insn 222: point = 249, n_alt = 3
   Insn 221: point = 250, n_alt = 0
   Insn 220: point = 250, n_alt = -2
   Insn 219: point = 251, n_alt = -2
   Insn 218: point = 252, n_alt = 0
   Insn 217: point = 252, n_alt = 3
   Insn 216: point = 253, n_alt = 3
   Insn 215: point = 254, n_alt = 0
   Insn 214: point = 254, n_alt = -2
   Insn 213: point = 255, n_alt = -2
   Insn 212: point = 256, n_alt = 0
   Insn 211: point = 256, n_alt = 3
   Insn 210: point = 257, n_alt = 3
   Insn 209: point = 258, n_alt = 0
   Insn 208: point = 258, n_alt = -2
   Insn 207: point = 259, n_alt = 2
   Insn 206: point = 259, n_alt = 2
   Insn 205: point = 259, n_alt = 3
   Insn 204: point = 260, n_alt = 0
   Insn 203: point = 260, n_alt = -2
   Insn 202: point = 261, n_alt = 3
   Insn 201: point = 262, n_alt = 1
   Insn 200: point = 262, n_alt = 1
   Insn 199: point = 262, n_alt = 1
   Insn 198: point = 262, n_alt = 5
  BB 7
   Insn 193: point = 263, n_alt = -1
   Insn 192: point = 263, n_alt = 1
   Insn 191: point = 264, n_alt = 7
   Insn 190: point = 265, n_alt = 7
   Insn 189: point = 266, n_alt = 8
   Insn 188: point = 267, n_alt = 1
   Insn 187: point = 269, n_alt = -2
   Insn 186: point = 270, n_alt = 0
   Insn 185: point = 270, n_alt = -2
   Insn 184: point = 271, n_alt = 2
   Insn 183: point = 273, n_alt = -2
   Insn 182: point = 275, n_alt = 2
   Insn 181: point = 277, n_alt = 7
   Insn 180: point = 278, n_alt = 7
   Insn 179: point = 280, n_alt = 3
   Insn 178: point = 281, n_alt = 0
   Insn 177: point = 283, n_alt = 0
   Insn 176: point = 285, n_alt = 0
   Insn 175: point = 286, n_alt = 3
   Insn 477: point = 288, n_alt = -2
   Insn 484: point = 290, n_alt = 5
   Insn 174: point = 290, n_alt = 2
   Insn 173: point = 292, n_alt = 0
   Insn 172: point = 294, n_alt = 0
   Insn 171: point = 295, n_alt = 1
   Insn 170: point = 297, n_alt = 7
   Insn 169: point = 298, n_alt = -2
   Insn 168: point = 300, n_alt = 2
   Insn 167: point = 302, n_alt = 7
   Insn 166: point = 303, n_alt = 7
   Insn 165: point = 305, n_alt = 3
   Insn 164: point = 306, n_alt = 0
   Insn 163: point = 308, n_alt = 0
   Insn 162: point = 310, n_alt = 0
   Insn 161: point = 311, n_alt = 3
   Insn 476: point = 313, n_alt = -2
   Insn 485: point = 314, n_alt = 3
   Insn 160: point = 315, n_alt = 2
   Insn 159: point = 317, n_alt = 0
   Insn 158: point = 319, n_alt = 0
   Insn 475: point = 320, n_alt = 8
   Insn 157: point = 321, n_alt = 2
   Insn 474: point = 322, n_alt = -2
   Insn 156: point = 324, n_alt = 7
   Insn 155: point = 325, n_alt = 7
   Insn 154: point = 327, n_alt = 3
   Insn 153: point = 328, n_alt = 0
   Insn 152: point = 330, n_alt = 0
   Insn 151: point = 332, n_alt = 0
   Insn 150: point = 333, n_alt = 3
   Insn 473: point = 335, n_alt = -2
   Insn 487: point = 337, n_alt = 5
   Insn 149: point = 337, n_alt = 2
   Insn 148: point = 339, n_alt = 0
   Insn 147: point = 341, n_alt = 0
  BB 6
   Insn 142: point = 343, n_alt = -1
   Insn 141: point = 343, n_alt = 1
   Insn 140: point = 344, n_alt = 7
   Insn 139: point = 345, n_alt = 0
   Insn 138: point = 347, n_alt = 2
   Insn 137: point = 348, n_alt = 7
   Insn 136: point = 350, n_alt = 3
   Insn 135: point = 351, n_alt = 0
   Insn 134: point = 353, n_alt = 0
   Insn 133: point = 355, n_alt = 0
   Insn 132: point = 356, n_alt = 3
   Insn 472: point = 358, n_alt = -2
   Insn 488: point = 359, n_alt = 3
   Insn 131: point = 360, n_alt = 2
   Insn 130: point = 362, n_alt = 0
   Insn 129: point = 364, n_alt = 0
  BB 4
   Insn 120: point = 366, n_alt = 1
   Insn 470: point = 366, n_alt = 1
   Insn 119: point = 367, n_alt = 0
   Insn 118: point = 369, n_alt = 3
  BB 2
   Insn 109: point = 371, n_alt = 1
   Insn 468: point = 372, n_alt = 1
   Insn 108: point = 373, n_alt = 0
   Insn 107: point = 374, n_alt = 0
   Insn 467: point = 375, n_alt = 5
   Insn 106: point = 376, n_alt = 0
   Insn 466: point = 376, n_alt = -2
   Insn 102: point = 377, n_alt = 2
   Insn 101: point = 378, n_alt = 3
   Insn 100: point = 379, n_alt = -2
   Insn 98: point = 381, n_alt = 1
   Insn 96: point = 383, n_alt = 0
   Insn 97: point = 383, n_alt = 2
   Insn 465: point = 384, n_alt = -2
   Insn 95: point = 386, n_alt = 2
   Insn 464: point = 386, n_alt = -2
   Insn 94: point = 387, n_alt = 5
   Insn 93: point = 388, n_alt = 0
   Insn 92: point = 390, n_alt = 0
   Insn 91: point = 392, n_alt = 3
   Insn 463: point = 393, n_alt = -2
   Insn 90: point = 395, n_alt = 0
   Insn 462: point = 396, n_alt = -2
   Insn 88: point = 398, n_alt = 0
   Insn 89: point = 398, n_alt = 2
   Insn 87: point = 399, n_alt = 3
   Insn 86: point = 400, n_alt = 5
   Insn 85: point = 401, n_alt = 0
   Insn 84: point = 403, n_alt = 0
   Insn 83: point = 405, n_alt = 3
   Insn 461: point = 406, n_alt = -2
   Insn 82: point = 408, n_alt = 0
   Insn 460: point = 408, n_alt = -2
   Insn 78: point = 409, n_alt = 5
   Insn 77: point = 409, n_alt = 5
   Insn 76: point = 410, n_alt = -2
   Insn 74: point = 412, n_alt = 1
   Insn 72: point = 414, n_alt = 0
   Insn 73: point = 414, n_alt = 2
   Insn 459: point = 415, n_alt = -2
   Insn 71: point = 417, n_alt = 2
   Insn 458: point = 417, n_alt = -2
   Insn 70: point = 418, n_alt = 5
   Insn 69: point = 419, n_alt = 0
   Insn 68: point = 421, n_alt = 0
   Insn 67: point = 423, n_alt = 3
   Insn 457: point = 424, n_alt = -2
   Insn 66: point = 426, n_alt = 0
   Insn 456: point = 427, n_alt = -2
   Insn 64: point = 429, n_alt = 0
   Insn 65: point = 429, n_alt = 2
   Insn 63: point = 430, n_alt = 3
   Insn 62: point = 431, n_alt = 5
   Insn 61: point = 432, n_alt = 0
   Insn 60: point = 434, n_alt = 0
   Insn 59: point = 436, n_alt = 3
   Insn 455: point = 437, n_alt = 5
   Insn 58: point = 438, n_alt = 0
   Insn 454: point = 438, n_alt = -2
   Insn 54: point = 439, n_alt = 5
   Insn 53: point = 439, n_alt = 5
   Insn 52: point = 440, n_alt = -2
   Insn 50: point = 442, n_alt = 1
   Insn 48: point = 444, n_alt = 0
   Insn 49: point = 444, n_alt = 2
   Insn 453: point = 445, n_alt = -2
   Insn 47: point = 447, n_alt = 2
   Insn 452: point = 447, n_alt = -2
   Insn 46: point = 448, n_alt = 5
   Insn 45: point = 449, n_alt = 0
   Insn 44: point = 451, n_alt = 0
   Insn 43: point = 453, n_alt = 3
   Insn 451: point = 454, n_alt = -2
   Insn 42: point = 456, n_alt = 0
   Insn 450: point = 457, n_alt = -2
   Insn 40: point = 459, n_alt = 0
   Insn 41: point = 459, n_alt = 2
   Insn 39: point = 460, n_alt = 3
   Insn 38: point = 461, n_alt = 5
   Insn 37: point = 462, n_alt = 0
   Insn 36: point = 464, n_alt = 0
   Insn 35: point = 466, n_alt = 3
   Insn 449: point = 467, n_alt = 5
   Insn 34: point = 468, n_alt = 0
   Insn 448: point = 468, n_alt = -2
   Insn 30: point = 469, n_alt = 2
   Insn 29: point = 470, n_alt = 3
   Insn 28: point = 471, n_alt = -2
   Insn 26: point = 473, n_alt = 1
   Insn 24: point = 475, n_alt = 0
   Insn 25: point = 475, n_alt = 2
   Insn 447: point = 476, n_alt = -2
   Insn 23: point = 478, n_alt = 2
   Insn 446: point = 478, n_alt = -2
   Insn 22: point = 479, n_alt = 5
   Insn 21: point = 480, n_alt = 0
   Insn 20: point = 482, n_alt = 0
   Insn 19: point = 484, n_alt = 3
   Insn 445: point = 485, n_alt = -2
   Insn 18: point = 487, n_alt = 0
   Insn 444: point = 488, n_alt = -2
   Insn 16: point = 490, n_alt = 0
   Insn 17: point = 490, n_alt = 2
   Insn 15: point = 491, n_alt = 3
   Insn 14: point = 492, n_alt = 5
   Insn 13: point = 493, n_alt = 0
   Insn 12: point = 495, n_alt = 0
   Insn 11: point = 497, n_alt = 3
   Insn 7: point = 498, n_alt = 5
   Insn 6: point = 498, n_alt = 5
   Insn 5: point = 498, n_alt = 5
   Insn 4: point = 498, n_alt = 5
   Insn 3: point = 498, n_alt = 5
   Insn 2: point = 498, n_alt = 5
 r87: [494..495]
 r88: [481..482]
 r89: [470..471]
 r90: [469..498]
 r92: [463..464]
 r93: [450..451]
 r94: [439..440]
 r97: [433..434]
 r98: [420..421]
 r99: [409..410]
 r102: [402..403]
 r103: [389..390]
 r104: [378..379]
 r105: [377..498]
 r107: [4..5]
 r108: [17..18]
 r109: [363..364]
 r110: [361..362]
 r111: [357..360]
 r112: [352..356]
 r113: [354..355]
 r114: [352..353]
 r115: [349..351]
 r116: [346..348]
 r117: [343..345]
 r118: [340..341]
 r119: [338..339]
 r120: [334..337]
 r121: [329..333]
 r122: [331..332]
 r123: [329..330]
 r124: [326..328]
 r125: [321..325]
 r127: [318..319]
 r128: [316..317]
 r129: [312..315]
 r130: [307..311]
 r131: [309..310]
 r132: [307..308]
 r133: [304..306]
 r134: [301..303]
 r135: [299..300]
 r136: [296..298]
 r137: [272..295]
 r138: [293..294]
 r139: [291..292]
 r140: [287..290]
 r141: [282..286]
 r142: [284..285]
 r143: [282..283]
 r144: [279..281]
 r145: [276..278]
 r146: [274..275]
 r147: [272..273]
 r148: [270..271]
 r149: [268..269]
 r150: [266..267]
 r151: [263..265]
 r152: [246..247]
 r153: [244..245]
 r154: [241..243]
 r155: [236..240]
 r156: [238..239]
 r157: [236..237]
 r158: [234..235]
 r159: [228..230]
 r160: [223..224]
 r161: [221..222]
 r162: [218..220]
 r163: [213..217]
 r164: [215..216]
 r165: [213..214]
 r166: [211..212]
 r167: [205..207]
 r168: [191..192]
 r169: [189..190]
 r170: [185..188]
 r171: [180..184]
 r172: [182..183]
 r173: [180..181]
 r174: [177..179]
 r175: [162..176]
 r176: [162..175]
 r177: [173..174]
 r178: [171..172]
 r179: [169..170]
 r180: [164..168]
 r181: [166..167]
 r182: [164..165]
 r183: [159..163]
 r184: [159..161]
 r185: [157..158]
 r186: [155..156]
 r187: [153..154]
 r188: [148..152]
 r189: [150..151]
 r190: [148..149]
 r191: [145..147]
 r192: [142..144]
 r193: [139..140]
 r194: [137..138]
 r195: [135..136]
 r196: [130..134]
 r197: [132..133]
 r198: [130..131]
 r199: [126..129]
 r200: [124..125]
 r201: [122..123]
 r202: [120..121]
 r203: [115..119]
 r204: [117..118]
 r205: [115..116]
 r206: [112..114]
 r207: [95..111]
 r208: [95..110]
 r209: [108..109]
 r210: [106..107]
 r211: [102..105]
 r212: [97..101]
 r213: [99..100]
 r214: [97..98]
 r215: [92..96]
 r216: [92..94]
 r217: [89..90]
 r218: [87..88]
 r219: [85..86]
 r220: [80..84]
 r221: [82..83]
 r222: [80..81]
 r223: [77..79]
 r224: [74..76]
 r225: [71..72]
 r226: [69..70]
 r227: [67..68]
 r228: [62..66]
 r229: [64..65]
 r230: [62..63]
 r231: [58..61]
 r232: [56..57]
 r233: [54..55]
 r234: [52..53]
 r235: [47..51]
 r236: [49..50]
 r237: [47..48]
 r238: [44..46]
 r239: [28..43]
 r240: [28..42]
 r241: [40..41]
 r242: [38..39]
 r243: [35..37]
 r244: [30..34]
 r245: [32..33]
 r246: [30..31]
 r247: [25..29]
 r248: [25..27]
 r249: [22..23]
 r250: [20..21]
 r251: [9..10]
 r252: [7..8]
 r253: [487..491]
 r254: [0..485]
 r255: [474..476]
 r256: [472..473]
 r261: [456..460]
 r262: [0..454]
 r263: [443..445]
 r264: [441..442]
 r269: [426..430]
 r270: [0..424]
 r271: [413..415]
 r272: [411..412]
 r276: [0..406]
 r277: [395..399]
 r278: [0..393]
 r279: [382..384]
 r280: [380..381]
 r285: [371..374]
 r287: [0..1]
 r289: [13..14]
 r290: [496..497]
 r291: [492..493]
 r292: [489..490]
 r293: [483..484]
 r294: [479..480]
 r295: [474..475]
 r296: [465..466]
 r297: [461..462]
 r298: [458..459]
 r299: [452..453]
 r300: [448..449]
 r301: [443..444]
 r302: [435..436]
 r303: [431..432]
 r304: [428..429]
 r305: [422..423]
 r306: [418..419]
 r307: [413..414]
 r308: [404..405]
 r309: [400..401]
 r310: [397..398]
 r311: [391..392]
 r312: [387..388]
 r313: [382..383]
 r314: [2..3]
 r315: [368..369]
 r316: [15..16]
 r317: [349..350]
 r318: [346..347]
 r319: [343..344]
 r320: [326..327]
 r321: [323..324]
 r322: [304..305]
 r323: [301..302]
 r324: [296..297]
 r325: [279..280]
 r326: [276..277]
 r327: [263..264]
 r328: [260..261]
 r329: [258..259]
 r330: [255..257]
 r331: [254..256]
 r332: [251..253]
 r333: [250..252]
 r334: [248..249]
 r335: [231..233]
 r336: [231..232]
 r337: [227..229]
 r338: [225..226]
 r339: [208..210]
 r340: [208..209]
 r341: [204..206]
 r342: [202..203]
 r343: [200..201]
 r344: [197..199]
 r345: [196..198]
 r346: [194..195]
 r347: [177..178]
 r348: [159..160]
 r349: [145..146]
 r350: [142..143]
 r351: [126..128]
 r352: [126..127]
 r353: [112..113]
 r354: [92..93]
 r355: [77..78]
 r356: [74..75]
 r357: [58..60]
 r358: [58..59]
 r359: [44..45]
 r360: [25..26]
 r361: [486..488]
 r362: [477..478]
 r363: [467..468]
 r364: [455..457]
 r365: [446..447]
 r366: [437..438]
 r367: [425..427]
 r368: [416..417]
 r369: [407..408]
 r370: [394..396]
 r371: [385..386]
 r372: [375..376]
 r373: [372..373]
 r375: [366..367]
 r377: [357..358]
 r378: [334..335]
 r379: [320..322]
 r380: [312..313]
 r381: [287..288]
 r383: [241..242]
 r384: [218..219]
 r385: [185..186]
 r386: [102..103]
 r387: [35..36]
 r389: [289..314]
 r392: [336..359]
 r393: [104..187]
Compressing live ranges: from 499 to 394 - 78%
Ranges after the compression:
 r87: [390..391]
 r88: [380..381]
 r89: [370..371]
 r90: [370..393]
 r92: [364..365]
 r93: [354..355]
 r94: [344..345]
 r97: [338..339]
 r98: [328..329]
 r99: [318..319]
 r102: [312..313]
 r103: [302..303]
 r104: [292..293]
 r105: [292..393]
 r107: [4..5]
 r108: [14..15]
 r109: [282..283]
 r110: [280..281]
 r111: [278..279]
 r112: [274..277]
 r113: [276..277]
 r114: [274..275]
 r115: [272..273]
 r116: [270..271]
 r117: [268..269]
 r118: [266..267]
 r119: [264..265]
 r120: [260..263]
 r121: [256..259]
 r122: [258..259]
 r123: [256..257]
 r124: [254..255]
 r125: [250..253]
 r127: [248..249]
 r128: [246..247]
 r129: [244..245]
 r130: [240..243]
 r131: [242..243]
 r132: [240..241]
 r133: [238..239]
 r134: [236..237]
 r135: [234..235]
 r136: [232..233]
 r137: [212..231]
 r138: [230..231]
 r139: [228..229]
 r140: [224..227]
 r141: [220..223]
 r142: [222..223]
 r143: [220..221]
 r144: [218..219]
 r145: [216..217]
 r146: [214..215]
 r147: [212..213]
 r148: [210..211]
 r149: [208..209]
 r150: [206..207]
 r151: [204..205]
 r152: [192..193]
 r153: [190..191]
 r154: [188..189]
 r155: [184..187]
 r156: [186..187]
 r157: [184..185]
 r158: [182..183]
 r159: [178..179]
 r160: [174..175]
 r161: [172..173]
 r162: [170..171]
 r163: [166..169]
 r164: [168..169]
 r165: [166..167]
 r166: [164..165]
 r167: [160..161]
 r168: [150..151]
 r169: [148..149]
 r170: [146..147]
 r171: [142..145]
 r172: [144..145]
 r173: [142..143]
 r174: [140..141]
 r175: [128..139]
 r176: [128..139]
 r177: [138..139]
 r178: [136..137]
 r179: [134..135]
 r180: [130..133]
 r181: [132..133]
 r182: [130..131]
 r183: [126..129]
 r184: [126..127]
 r185: [124..125]
 r186: [122..123]
 r187: [120..121]
 r188: [116..119]
 r189: [118..119]
 r190: [116..117]
 r191: [114..115]
 r192: [112..113]
 r193: [110..111]
 r194: [108..109]
 r195: [106..107]
 r196: [102..105]
 r197: [104..105]
 r198: [102..103]
 r199: [100..101]
 r200: [98..99]
 r201: [96..97]
 r202: [94..95]
 r203: [90..93]
 r204: [92..93]
 r205: [90..91]
 r206: [88..89]
 r207: [74..87]
 r208: [74..87]
 r209: [86..87]
 r210: [84..85]
 r211: [80..83]
 r212: [76..79]
 r213: [78..79]
 r214: [76..77]
 r215: [72..75]
 r216: [72..73]
 r217: [70..71]
 r218: [68..69]
 r219: [66..67]
 r220: [62..65]
 r221: [64..65]
 r222: [62..63]
 r223: [60..61]
 r224: [58..59]
 r225: [56..57]
 r226: [54..55]
 r227: [52..53]
 r228: [48..51]
 r229: [50..51]
 r230: [48..49]
 r231: [46..47]
 r232: [44..45]
 r233: [42..43]
 r234: [40..41]
 r235: [36..39]
 r236: [38..39]
 r237: [36..37]
 r238: [34..35]
 r239: [22..33]
 r240: [22..33]
 r241: [32..33]
 r242: [30..31]
 r243: [28..29]
 r244: [24..27]
 r245: [26..27]
 r246: [24..25]
 r247: [20..23]
 r248: [20..21]
 r249: [18..19]
 r250: [16..17]
 r251: [8..9]
 r252: [6..7]
 r253: [384..387]
 r254: [0..383]
 r255: [374..375]
 r256: [372..373]
 r261: [358..361]
 r262: [0..357]
 r263: [348..349]
 r264: [346..347]
 r269: [332..335]
 r270: [0..331]
 r271: [322..323]
 r272: [320..321]
 r276: [0..315]
 r277: [306..309]
 r278: [0..305]
 r279: [296..297]
 r280: [294..295]
 r285: [288..289]
 r287: [0..1]
 r289: [10..11]
 r290: [392..393]
 r291: [388..389]
 r292: [386..387]
 r293: [382..383]
 r294: [378..379]
 r295: [374..375]
 r296: [366..367]
 r297: [362..363]
 r298: [360..361]
 r299: [356..357]
 r300: [352..353]
 r301: [348..349]
 r302: [340..341]
 r303: [336..337]
 r304: [334..335]
 r305: [330..331]
 r306: [326..327]
 r307: [322..323]
 r308: [314..315]
 r309: [310..311]
 r310: [308..309]
 r311: [304..305]
 r312: [300..301]
 r313: [296..297]
 r314: [2..3]
 r315: [286..287]
 r316: [12..13]
 r317: [272..273]
 r318: [270..271]
 r319: [268..269]
 r320: [254..255]
 r321: [252..253]
 r322: [238..239]
 r323: [236..237]
 r324: [232..233]
 r325: [218..219]
 r326: [216..217]
 r327: [204..205]
 r328: [202..203]
 r329: [200..201]
 r330: [198..199]
 r331: [198..199]
 r332: [196..197]
 r333: [196..197]
 r334: [194..195]
 r335: [180..181]
 r336: [180..181]
 r337: [178..179]
 r338: [176..177]
 r339: [162..163]
 r340: [162..163]
 r341: [160..161]
 r342: [158..159]
 r343: [156..157]
 r344: [154..155]
 r345: [154..155]
 r346: [152..153]
 r347: [140..141]
 r348: [126..127]
 r349: [114..115]
 r350: [112..113]
 r351: [100..101]
 r352: [100..101]
 r353: [88..89]
 r354: [72..73]
 r355: [60..61]
 r356: [58..59]
 r357: [46..47]
 r358: [46..47]
 r359: [34..35]
 r360: [20..21]
 r361: [384..385]
 r362: [376..377]
 r363: [368..369]
 r364: [358..359]
 r365: [350..351]
 r366: [342..343]
 r367: [332..333]
 r368: [324..325]
 r369: [316..317]
 r370: [306..307]
 r371: [298..299]
 r372: [290..291]
 r373: [288..289]
 r375: [284..285]
 r377: [278..279]
 r378: [260..261]
 r379: [250..251]
 r380: [244..245]
 r381: [224..225]
 r383: [188..189]
 r384: [170..171]
 r385: [146..147]
 r386: [80..81]
 r387: [28..29]
 r389: [226..245]
 r392: [262..279]
 r393: [82..147]

********** Assignment #3: **********


********** Local #5: **********

	   Spilling non-eliminable hard regs: 6
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=784, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=720, prev_offset=0)
Can eliminate 20 to 6 (offset=-48, prev_offset=-48)
changing reg in insn 12
changing reg in insn 13
changing reg in insn 20
changing reg in insn 21
changing reg in insn 28
changing reg in insn 29
changing reg in insn 30
changing reg in insn 29
changing reg in insn 36
changing reg in insn 37
changing reg in insn 44
changing reg in insn 45
changing reg in insn 52
changing reg in insn 53
changing reg in insn 60
changing reg in insn 61
changing reg in insn 68
changing reg in insn 69
changing reg in insn 76
changing reg in insn 77
changing reg in insn 84
changing reg in insn 85
changing reg in insn 92
changing reg in insn 93
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 101
changing reg in insn 111
changing reg in insn 112
changing reg in insn 122
changing reg in insn 123
changing reg in insn 129
changing reg in insn 130
changing reg in insn 130
changing reg in insn 131
changing reg in insn 132
changing reg in insn 132
changing reg in insn 135
changing reg in insn 133
changing reg in insn 134
changing reg in insn 134
changing reg in insn 135
changing reg in insn 135
changing reg in insn 137
changing reg in insn 137
changing reg in insn 139
changing reg in insn 139
changing reg in insn 139
changing reg in insn 141
changing reg in insn 147
changing reg in insn 148
changing reg in insn 148
changing reg in insn 149
changing reg in insn 150
changing reg in insn 150
changing reg in insn 153
changing reg in insn 151
changing reg in insn 152
changing reg in insn 152
changing reg in insn 153
changing reg in insn 153
changing reg in insn 155
changing reg in insn 155
changing reg in insn 157
changing reg in insn 158
changing reg in insn 159
changing reg in insn 159
changing reg in insn 160
changing reg in insn 161
changing reg in insn 161
changing reg in insn 164
changing reg in insn 162
changing reg in insn 163
changing reg in insn 163
changing reg in insn 164
changing reg in insn 164
changing reg in insn 166
changing reg in insn 166
changing reg in insn 168
changing reg in insn 168
changing reg in insn 169
changing reg in insn 169
changing reg in insn 171
changing reg in insn 184
changing reg in insn 172
changing reg in insn 173
changing reg in insn 173
changing reg in insn 174
changing reg in insn 175
changing reg in insn 175
changing reg in insn 178
changing reg in insn 176
changing reg in insn 177
changing reg in insn 177
changing reg in insn 178
changing reg in insn 178
changing reg in insn 180
changing reg in insn 180
changing reg in insn 182
changing reg in insn 182
changing reg in insn 183
changing reg in insn 183
changing reg in insn 184
changing reg in insn 184
changing reg in insn 185
changing reg in insn 187
changing reg in insn 188
changing reg in insn 189
changing reg in insn 190
changing reg in insn 192
changing reg in insn 227
changing reg in insn 228
changing reg in insn 228
changing reg in insn 229
changing reg in insn 230
changing reg in insn 230
changing reg in insn 231
changing reg in insn 232
changing reg in insn 232
changing reg in insn 233
changing reg in insn 234
changing reg in insn 236
changing reg in insn 239
changing reg in insn 247
changing reg in insn 248
changing reg in insn 248
changing reg in insn 249
changing reg in insn 250
changing reg in insn 250
changing reg in insn 251
changing reg in insn 252
changing reg in insn 252
changing reg in insn 253
changing reg in insn 254
changing reg in insn 256
changing reg in insn 259
changing reg in insn 283
changing reg in insn 284
changing reg in insn 284
changing reg in insn 285
changing reg in insn 286
changing reg in insn 286
changing reg in insn 289
changing reg in insn 287
changing reg in insn 288
changing reg in insn 288
changing reg in insn 289
changing reg in insn 289
changing reg in insn 291
changing reg in insn 291
changing reg in insn 300
changing reg in insn 292
changing reg in insn 300
changing reg in insn 293
changing reg in insn 294
changing reg in insn 294
changing reg in insn 295
changing reg in insn 296
changing reg in insn 296
changing reg in insn 299
changing reg in insn 297
changing reg in insn 298
changing reg in insn 298
changing reg in insn 299
changing reg in insn 299
changing reg in insn 302
changing reg in insn 300
changing reg in insn 302
changing reg in insn 303
changing reg in insn 304
changing reg in insn 304
changing reg in insn 305
changing reg in insn 306
changing reg in insn 306
changing reg in insn 309
changing reg in insn 307
changing reg in insn 308
changing reg in insn 308
changing reg in insn 309
changing reg in insn 309
changing reg in insn 311
changing reg in insn 311
changing reg in insn 313
changing reg in insn 319
changing reg in insn 320
changing reg in insn 320
changing reg in insn 321
changing reg in insn 322
changing reg in insn 322
changing reg in insn 325
changing reg in insn 323
changing reg in insn 324
changing reg in insn 324
changing reg in insn 325
changing reg in insn 325
changing reg in insn 328
changing reg in insn 329
changing reg in insn 330
changing reg in insn 330
changing reg in insn 331
changing reg in insn 332
changing reg in insn 332
changing reg in insn 335
changing reg in insn 333
changing reg in insn 334
changing reg in insn 334
changing reg in insn 335
changing reg in insn 335
changing reg in insn 337
changing reg in insn 337
changing reg in insn 338
changing reg in insn 339
changing reg in insn 340
changing reg in insn 340
changing reg in insn 341
changing reg in insn 342
changing reg in insn 342
changing reg in insn 345
changing reg in insn 343
changing reg in insn 344
changing reg in insn 344
changing reg in insn 345
changing reg in insn 345
changing reg in insn 348
changing reg in insn 346
changing reg in insn 348
changing reg in insn 351
changing reg in insn 352
changing reg in insn 352
changing reg in insn 353
changing reg in insn 354
changing reg in insn 354
changing reg in insn 357
changing reg in insn 355
changing reg in insn 356
changing reg in insn 356
changing reg in insn 357
changing reg in insn 357
changing reg in insn 359
changing reg in insn 359
changing reg in insn 361
changing reg in insn 367
changing reg in insn 368
changing reg in insn 368
changing reg in insn 369
changing reg in insn 370
changing reg in insn 370
changing reg in insn 373
changing reg in insn 371
changing reg in insn 372
changing reg in insn 372
changing reg in insn 373
changing reg in insn 373
changing reg in insn 376
changing reg in insn 377
changing reg in insn 378
changing reg in insn 378
changing reg in insn 379
changing reg in insn 380
changing reg in insn 380
changing reg in insn 383
changing reg in insn 381
changing reg in insn 382
changing reg in insn 382
changing reg in insn 383
changing reg in insn 383
changing reg in insn 385
changing reg in insn 385
changing reg in insn 386
changing reg in insn 387
changing reg in insn 388
changing reg in insn 388
changing reg in insn 389
changing reg in insn 390
changing reg in insn 390
changing reg in insn 393
changing reg in insn 391
changing reg in insn 392
changing reg in insn 392
changing reg in insn 393
changing reg in insn 393
changing reg in insn 396
changing reg in insn 394
changing reg in insn 396
changing reg in insn 399
changing reg in insn 400
changing reg in insn 400
changing reg in insn 401
changing reg in insn 407
changing reg in insn 408
changing reg in insn 408
changing reg in insn 409
changing reg in insn 15
changing reg in insn 18
changing reg in insn 16
changing reg in insn 26
changing reg in insn 24
changing reg in insn 26
changing reg in insn 28
changing reg in insn 39
changing reg in insn 42
changing reg in insn 40
changing reg in insn 50
changing reg in insn 48
changing reg in insn 50
changing reg in insn 52
changing reg in insn 63
changing reg in insn 66
changing reg in insn 64
changing reg in insn 74
changing reg in insn 72
changing reg in insn 74
changing reg in insn 76
changing reg in insn 380
changing reg in insn 370
changing reg in insn 354
changing reg in insn 332
changing reg in insn 322
changing reg in insn 306
changing reg in insn 296
changing reg in insn 87
changing reg in insn 90
changing reg in insn 88
changing reg in insn 98
changing reg in insn 96
changing reg in insn 98
changing reg in insn 100
changing reg in insn 107
changing reg in insn 109
changing reg in insn 114
changing reg in insn 115
changing reg in insn 125
changing reg in insn 126
changing reg in insn 11
changing reg in insn 12
changing reg in insn 13
changing reg in insn 14
changing reg in insn 17
changing reg in insn 19
changing reg in insn 20
changing reg in insn 21
changing reg in insn 22
changing reg in insn 25
changing reg in insn 26
changing reg in insn 35
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 41
changing reg in insn 43
changing reg in insn 44
changing reg in insn 45
changing reg in insn 46
changing reg in insn 49
changing reg in insn 50
changing reg in insn 59
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 65
changing reg in insn 67
changing reg in insn 68
changing reg in insn 69
changing reg in insn 70
changing reg in insn 73
changing reg in insn 74
changing reg in insn 83
changing reg in insn 84
changing reg in insn 85
changing reg in insn 86
changing reg in insn 89
changing reg in insn 91
changing reg in insn 92
changing reg in insn 93
changing reg in insn 94
changing reg in insn 97
changing reg in insn 98
changing reg in insn 113
changing reg in insn 114
changing reg in insn 118
changing reg in insn 119
changing reg in insn 124
changing reg in insn 125
changing reg in insn 136
changing reg in insn 137
changing reg in insn 138
changing reg in insn 139
changing reg in insn 140
changing reg in insn 141
changing reg in insn 154
changing reg in insn 155
changing reg in insn 156
changing reg in insn 165
changing reg in insn 166
changing reg in insn 167
changing reg in insn 168
changing reg in insn 170
changing reg in insn 179
changing reg in insn 180
changing reg in insn 181
changing reg in insn 182
changing reg in insn 191
changing reg in insn 192
changing reg in insn 202
changing reg in insn 203
changing reg in insn 205
changing reg in insn 208
changing reg in insn 210
changing reg in insn 213
changing reg in insn 211
changing reg in insn 214
changing reg in insn 216
changing reg in insn 219
changing reg in insn 217
changing reg in insn 220
changing reg in insn 222
changing reg in insn 225
changing reg in insn 234
changing reg in insn 236
changing reg in insn 236
changing reg in insn 235
changing reg in insn 236
changing reg in insn 237
changing reg in insn 240
changing reg in insn 242
changing reg in insn 245
changing reg in insn 254
changing reg in insn 256
changing reg in insn 256
changing reg in insn 255
changing reg in insn 256
changing reg in insn 257
changing reg in insn 260
changing reg in insn 262
changing reg in insn 265
changing reg in insn 267
changing reg in insn 270
changing reg in insn 272
changing reg in insn 275
changing reg in insn 273
changing reg in insn 276
changing reg in insn 278
changing reg in insn 279
changing reg in insn 290
changing reg in insn 291
changing reg in insn 301
changing reg in insn 302
changing reg in insn 310
changing reg in insn 311
changing reg in insn 312
changing reg in insn 313
changing reg in insn 326
changing reg in insn 328
changing reg in insn 327
changing reg in insn 328
changing reg in insn 336
changing reg in insn 337
changing reg in insn 347
changing reg in insn 348
changing reg in insn 358
changing reg in insn 359
changing reg in insn 360
changing reg in insn 361
changing reg in insn 374
changing reg in insn 376
changing reg in insn 375
changing reg in insn 376
changing reg in insn 384
changing reg in insn 385
changing reg in insn 395
changing reg in insn 396
deleting insn with uid = 444.
deleting insn with uid = 447.
deleting insn with uid = 28.
deleting insn with uid = 450.
deleting insn with uid = 453.
deleting insn with uid = 52.
deleting insn with uid = 457.
deleting insn with uid = 459.
deleting insn with uid = 76.
deleting insn with uid = 461.
deleting insn with uid = 462.
deleting insn with uid = 465.
deleting insn with uid = 100.
deleting insn with uid = 472.
deleting insn with uid = 473.
deleting insn with uid = 474.
deleting insn with uid = 476.
deleting insn with uid = 477.
deleting insn with uid = 183.
deleting insn with uid = 185.
deleting insn with uid = 187.
deleting insn with uid = 481.
deleting insn with uid = 482.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 186.
verify found no changes in insn with uid = 204.
verify found no changes in insn with uid = 209.
verify found no changes in insn with uid = 215.
verify found no changes in insn with uid = 221.
verify found no changes in insn with uid = 226.
verify found no changes in insn with uid = 241.
verify found no changes in insn with uid = 246.
verify found no changes in insn with uid = 261.
verify found no changes in insn with uid = 266.
verify found no changes in insn with uid = 271.
verify found no changes in insn with uid = 277.
verify found no changes in insn with uid = 280.


calrh2

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 41 [r12] 42 [r13] 43 [r14] 44 [r15]
;;  ref usage 	r0={183d,177u} r1={67d,54u,2e} r2={23d,12u} r3={2d,10u} r4={26d,15u} r5={27d,15u} r6={1d,149u} r7={1d,30u} r8={13d} r9={13d} r10={13d} r11={13d} r12={13d} r13={13d} r14={13d} r15={13d} r17={103d,16u} r18={13d} r19={13d} r20={1d,1u,2e} r21={35d,22u,1e} r22={27d,13u} r23={15d,1u} r24={14d} r25={14d} r26={14d} r27={14d} r28={14d} r29={13d} r30={13d} r31={13d} r32={13d} r33={13d} r34={13d} r35={13d} r36={13d} r37={14d,1u} r38={14d,1u} r39={14d} r40={14d} r41={2d,8u} r42={1d,5u} r43={2d,5u} r44={2d,5u} r45={13d} r46={13d} r47={13d} r48={13d} r49={13d} r50={13d} r51={13d} r52={13d} r53={13d} r54={13d} r55={13d} r56={13d} r57={13d} r58={13d} r59={13d} r60={13d} r61={13d} r62={13d} r63={13d} r64={13d} r65={13d} r66={13d} r67={13d} r68={13d} r69={13d} r70={13d} r71={13d} r72={13d} r73={13d} r74={13d} r75={13d} r76={13d} r77={13d} r78={13d} r79={13d} r80={13d} 
;;    total ref usage 1891{1346d,540u,5e} in 382{369 regular + 13 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 90 105
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9] 90 95 100 105
;; lr  def 	 17 [flags] 87 88 89 92 93 94 97 98 99 102 103 104 253 254 255 256 260 261 262 263 264 268 269 270 271 272 276 277 278 279 280 284 285 286 290 291 292 293 294 295 296 297 298 299 300 301 302 303 304 305 306 307 308 309 310 311 312 313
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -664 [0xfffffffffffffd68])) [10 p1+0 S8 A64])
        (reg:DI 5 di [ p1 ])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -672 [0xfffffffffffffd60])) [10 t1+0 S8 A64])
        (reg:DI 4 si [ t1 ])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -680 [0xfffffffffffffd58])) [10 q1+0 S8 A64])
        (reg:DI 1 dx [ q1 ])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -688 [0xfffffffffffffd50])) [11 ice1+0 S8 A64])
        (reg:DI 2 cx [ ice1 ])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 rh+0 S8 A64])
        (reg:DI 37 r8 [ rh ])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -704 [0xfffffffffffffd40])) [11 im+0 S8 A64])
        (reg:DI 38 r9 [ im ])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg/f:DI 0 ax [290])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -704 [0xfffffffffffffd40])) [11 im+0 S8 A64])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 ax [orig:87 _1 ] [87])
        (mem:SI (reg/f:DI 0 ax [290]) [2 *im_173(D)+0 S4 A32])) "CALRH2.f":1 86 {*movsi_internal}
     (nil))
(insn 13 12 14 2 (set (reg:DI 0 ax [291])
        (sign_extend:DI (reg:SI 0 ax [orig:87 _1 ] [87]))) "CALRH2.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 14 13 15 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 ubound.0+0 S8 A64])
        (reg:DI 0 ax [291])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 15 14 17 2 (set (reg:DI 0 ax [orig:253 stride.2_175 ] [253])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 ubound.0+0 S8 A64])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 17 15 16 2 (set (reg:DI 1 dx [292])
        (const_int 0 [0])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 16 17 18 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:253 stride.2_175 ] [253])
            (const_int 0 [0]))) "CALRH2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 18 16 445 2 (set (reg:DI 1 dx [292])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:253 stride.2_175 ] [253])
            (reg:DI 1 dx [292]))) "CALRH2.f":1 1003 {*movdicc_noc}
     (nil))
(insn 445 18 19 2 (set (reg:DI 42 r13 [orig:254 stride.2_176 ] [254])
        (reg:DI 1 dx [292])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 19 445 20 2 (set (reg/f:DI 0 ax [293])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [11 jm+0 S8 A64])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 20 19 21 2 (set (reg:SI 0 ax [orig:88 _2 ] [88])
        (mem:SI (reg/f:DI 0 ax [293]) [2 *jm_177(D)+0 S4 A32])) "CALRH2.f":1 86 {*movsi_internal}
     (nil))
(insn 21 20 22 2 (set (reg:DI 0 ax [294])
        (sign_extend:DI (reg:SI 0 ax [orig:88 _2 ] [88]))) "CALRH2.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 22 21 446 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 ubound.1+0 S8 A64])
        (reg:DI 0 ax [294])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 446 22 23 2 (set (reg:DI 0 ax [orig:255 size.4_179 ] [255])
        (reg:DI 42 r13 [orig:254 stride.2_176 ] [254])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 23 446 25 2 (parallel [
            (set (reg:DI 0 ax [orig:255 size.4_179 ] [255])
                (mult:DI (reg:DI 0 ax [orig:255 size.4_179 ] [255])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -64 [0xffffffffffffffc0])) [1 ubound.1+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":1 349 {*muldi3_1}
     (nil))
(insn 25 23 24 2 (set (reg:DI 1 dx [295])
        (const_int 0 [0])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 24 25 26 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:255 size.4_179 ] [255])
            (const_int 0 [0]))) "CALRH2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 26 24 29 2 (set (reg:DI 0 ax [orig:256 size.4_180 ] [256])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:255 size.4_179 ] [255])
            (reg:DI 1 dx [295]))) "CALRH2.f":1 1003 {*movdicc_noc}
     (nil))
(insn 29 26 30 2 (set (reg:DI 43 r14 [orig:90 _4 ] [90])
        (reg:DI 0 ax [orig:89 size.21_3 ] [89])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 30 29 448 2 (set (reg:DI 44 r15 [ _4+8 ])
        (const_int 0 [0])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 448 30 34 2 (set (reg:DI 0 ax [orig:260 offset.3_184 ] [260])
        (reg:DI 42 r13 [orig:254 stride.2_176 ] [254])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 34 448 449 2 (set (reg:DI 0 ax [orig:260 offset.3_184 ] [260])
        (not:DI (reg:DI 0 ax [orig:260 offset.3_184 ] [260]))) "CALRH2.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 449 34 35 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [14 %sfp+-664 S8 A64])
        (reg:DI 0 ax [orig:260 offset.3_184 ] [260])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 35 449 36 2 (set (reg/f:DI 0 ax [296])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -704 [0xfffffffffffffd40])) [11 im+0 S8 A64])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 36 35 37 2 (set (reg:SI 0 ax [orig:92 _6 ] [92])
        (mem:SI (reg/f:DI 0 ax [296]) [2 *im_173(D)+0 S4 A32])) "CALRH2.f":1 86 {*movsi_internal}
     (nil))
(insn 37 36 38 2 (set (reg:DI 0 ax [297])
        (sign_extend:DI (reg:SI 0 ax [orig:92 _6 ] [92]))) "CALRH2.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 38 37 39 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 ubound.15+0 S8 A64])
        (reg:DI 0 ax [297])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 39 38 41 2 (set (reg:DI 0 ax [orig:261 stride.17_186 ] [261])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 ubound.15+0 S8 A64])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 41 39 40 2 (set (reg:DI 1 dx [298])
        (const_int 0 [0])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 40 41 42 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:261 stride.17_186 ] [261])
            (const_int 0 [0]))) "CALRH2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 42 40 451 2 (set (reg:DI 1 dx [298])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:261 stride.17_186 ] [261])
            (reg:DI 1 dx [298]))) "CALRH2.f":1 1003 {*movdicc_noc}
     (nil))
(insn 451 42 43 2 (set (reg:DI 43 r14 [orig:262 stride.17_187 ] [262])
        (reg:DI 1 dx [298])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 43 451 44 2 (set (reg/f:DI 0 ax [299])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [11 jm+0 S8 A64])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 44 43 45 2 (set (reg:SI 0 ax [orig:93 _7 ] [93])
        (mem:SI (reg/f:DI 0 ax [299]) [2 *jm_177(D)+0 S4 A32])) "CALRH2.f":1 86 {*movsi_internal}
     (nil))
(insn 45 44 46 2 (set (reg:DI 0 ax [300])
        (sign_extend:DI (reg:SI 0 ax [orig:93 _7 ] [93]))) "CALRH2.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 46 45 452 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 ubound.16+0 S8 A64])
        (reg:DI 0 ax [300])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 452 46 47 2 (set (reg:DI 0 ax [orig:263 size.19_189 ] [263])
        (reg:DI 43 r14 [orig:262 stride.17_187 ] [262])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 47 452 49 2 (parallel [
            (set (reg:DI 0 ax [orig:263 size.19_189 ] [263])
                (mult:DI (reg:DI 0 ax [orig:263 size.19_189 ] [263])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -80 [0xffffffffffffffb0])) [1 ubound.16+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":1 349 {*muldi3_1}
     (nil))
(insn 49 47 48 2 (set (reg:DI 1 dx [301])
        (const_int 0 [0])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 48 49 50 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:263 size.19_189 ] [263])
            (const_int 0 [0]))) "CALRH2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 50 48 53 2 (set (reg:DI 0 ax [orig:264 size.19_190 ] [264])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:263 size.19_189 ] [263])
            (reg:DI 1 dx [301]))) "CALRH2.f":1 1003 {*movdicc_noc}
     (nil))
(insn 53 50 54 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -736 [0xfffffffffffffd20])) [14 %sfp+-688 S8 A128])
        (reg:DI 0 ax [orig:94 size.23_8 ] [94])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 54 53 454 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -728 [0xfffffffffffffd28])) [14 %sfp+-680 S8 A64])
        (const_int 0 [0])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 454 54 58 2 (set (reg:DI 0 ax [orig:268 offset.18_194 ] [268])
        (reg:DI 43 r14 [orig:262 stride.17_187 ] [262])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 58 454 455 2 (set (reg:DI 0 ax [orig:268 offset.18_194 ] [268])
        (not:DI (reg:DI 0 ax [orig:268 offset.18_194 ] [268]))) "CALRH2.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 455 58 59 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -736 [0xfffffffffffffd20])) [14 %sfp+-688 S8 A128])
        (reg:DI 0 ax [orig:268 offset.18_194 ] [268])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 59 455 60 2 (set (reg/f:DI 0 ax [302])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -704 [0xfffffffffffffd40])) [11 im+0 S8 A64])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 60 59 61 2 (set (reg:SI 0 ax [orig:97 _11 ] [97])
        (mem:SI (reg/f:DI 0 ax [302]) [2 *im_173(D)+0 S4 A32])) "CALRH2.f":1 86 {*movsi_internal}
     (nil))
(insn 61 60 62 2 (set (reg:DI 0 ax [303])
        (sign_extend:DI (reg:SI 0 ax [orig:97 _11 ] [97]))) "CALRH2.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 62 61 63 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 ubound.10+0 S8 A64])
        (reg:DI 0 ax [303])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 63 62 65 2 (set (reg:DI 0 ax [orig:269 stride.12_196 ] [269])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 ubound.10+0 S8 A64])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 65 63 64 2 (set (reg:DI 1 dx [304])
        (const_int 0 [0])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 64 65 456 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:269 stride.12_196 ] [269])
            (const_int 0 [0]))) "CALRH2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 456 64 66 2 (set (reg:DI 3 bx [304])
        (reg:DI 1 dx [304])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 66 456 67 2 (set (reg:DI 3 bx [304])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:269 stride.12_196 ] [269])
            (reg:DI 3 bx [304]))) "CALRH2.f":1 1003 {*movdicc_noc}
     (nil))
(insn 67 66 68 2 (set (reg/f:DI 0 ax [305])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [11 jm+0 S8 A64])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 68 67 69 2 (set (reg:SI 0 ax [orig:98 _12 ] [98])
        (mem:SI (reg/f:DI 0 ax [305]) [2 *jm_177(D)+0 S4 A32])) "CALRH2.f":1 86 {*movsi_internal}
     (nil))
(insn 69 68 70 2 (set (reg:DI 0 ax [306])
        (sign_extend:DI (reg:SI 0 ax [orig:98 _12 ] [98]))) "CALRH2.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 70 69 458 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 ubound.11+0 S8 A64])
        (reg:DI 0 ax [306])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 458 70 71 2 (set (reg:DI 0 ax [orig:271 size.14_199 ] [271])
        (reg:DI 3 bx [orig:270 stride.12_197 ] [270])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 71 458 73 2 (parallel [
            (set (reg:DI 0 ax [orig:271 size.14_199 ] [271])
                (mult:DI (reg:DI 0 ax [orig:271 size.14_199 ] [271])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -96 [0xffffffffffffffa0])) [1 ubound.11+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":1 349 {*muldi3_1}
     (nil))
(insn 73 71 72 2 (set (reg:DI 1 dx [307])
        (const_int 0 [0])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 72 73 74 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:271 size.14_199 ] [271])
            (const_int 0 [0]))) "CALRH2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 74 72 77 2 (set (reg:DI 0 ax [orig:272 size.14_200 ] [272])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:271 size.14_199 ] [271])
            (reg:DI 1 dx [307]))) "CALRH2.f":1 1003 {*movdicc_noc}
     (nil))
(insn 77 74 78 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -752 [0xfffffffffffffd10])) [14 %sfp+-704 S8 A128])
        (reg:DI 0 ax [orig:99 size.25_13 ] [99])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 78 77 460 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -744 [0xfffffffffffffd18])) [14 %sfp+-696 S8 A64])
        (const_int 0 [0])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 460 78 82 2 (set (reg:DI 41 r12 [orig:276 offset.13_204 ] [276])
        (reg:DI 3 bx [orig:270 stride.12_197 ] [270])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 82 460 83 2 (set (reg:DI 41 r12 [orig:276 offset.13_204 ] [276])
        (not:DI (reg:DI 41 r12 [orig:276 offset.13_204 ] [276]))) "CALRH2.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 83 82 84 2 (set (reg/f:DI 0 ax [308])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -704 [0xfffffffffffffd40])) [11 im+0 S8 A64])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 84 83 85 2 (set (reg:SI 0 ax [orig:102 _16 ] [102])
        (mem:SI (reg/f:DI 0 ax [308]) [2 *im_173(D)+0 S4 A32])) "CALRH2.f":1 86 {*movsi_internal}
     (nil))
(insn 85 84 86 2 (set (reg:DI 0 ax [309])
        (sign_extend:DI (reg:SI 0 ax [orig:102 _16 ] [102]))) "CALRH2.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 86 85 87 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [1 ubound.5+0 S8 A64])
        (reg:DI 0 ax [309])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 87 86 89 2 (set (reg:DI 0 ax [orig:277 stride.7_206 ] [277])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [1 ubound.5+0 S8 A64])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 89 87 88 2 (set (reg:DI 1 dx [310])
        (const_int 0 [0])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 88 89 90 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:277 stride.7_206 ] [277])
            (const_int 0 [0]))) "CALRH2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 90 88 463 2 (set (reg:DI 1 dx [310])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:277 stride.7_206 ] [277])
            (reg:DI 1 dx [310]))) "CALRH2.f":1 1003 {*movdicc_noc}
     (nil))
(insn 463 90 91 2 (set (reg:DI 44 r15 [orig:278 stride.7_207 ] [278])
        (reg:DI 1 dx [310])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 91 463 92 2 (set (reg/f:DI 0 ax [311])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [11 jm+0 S8 A64])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 92 91 93 2 (set (reg:SI 0 ax [orig:103 _17 ] [103])
        (mem:SI (reg/f:DI 0 ax [311]) [2 *jm_177(D)+0 S4 A32])) "CALRH2.f":1 86 {*movsi_internal}
     (nil))
(insn 93 92 94 2 (set (reg:DI 0 ax [312])
        (sign_extend:DI (reg:SI 0 ax [orig:103 _17 ] [103]))) "CALRH2.f":1 149 {*extendsidi2_rex64}
     (nil))
(insn 94 93 464 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [1 ubound.6+0 S8 A64])
        (reg:DI 0 ax [312])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 464 94 95 2 (set (reg:DI 0 ax [orig:279 size.9_209 ] [279])
        (reg:DI 44 r15 [orig:278 stride.7_207 ] [278])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 95 464 97 2 (parallel [
            (set (reg:DI 0 ax [orig:279 size.9_209 ] [279])
                (mult:DI (reg:DI 0 ax [orig:279 size.9_209 ] [279])
                    (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                            (const_int -112 [0xffffffffffffff90])) [1 ubound.6+0 S8 A64])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":1 349 {*muldi3_1}
     (nil))
(insn 97 95 96 2 (set (reg:DI 1 dx [313])
        (const_int 0 [0])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 96 97 98 2 (set (reg:CCGOC 17 flags)
        (compare:CCGOC (reg:DI 0 ax [orig:279 size.9_209 ] [279])
            (const_int 0 [0]))) "CALRH2.f":1 8 {*cmpdi_ccno_1}
     (nil))
(insn 98 96 101 2 (set (reg:DI 0 ax [orig:280 size.9_210 ] [280])
        (if_then_else:DI (ge (reg:CCGOC 17 flags)
                (const_int 0 [0]))
            (reg:DI 0 ax [orig:279 size.9_209 ] [279])
            (reg:DI 1 dx [313]))) "CALRH2.f":1 1003 {*movdicc_noc}
     (nil))
(insn 101 98 102 2 (set (reg:DI 39 r10 [orig:105 _19 ] [105])
        (reg:DI 0 ax [orig:104 size.27_18 ] [104])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 102 101 466 2 (set (reg:DI 40 r11 [ _19+8 ])
        (const_int 0 [0])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 466 102 106 2 (set (reg:DI 0 ax [orig:284 offset.8_214 ] [284])
        (reg:DI 44 r15 [orig:278 stride.7_207 ] [278])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 106 466 467 2 (set (reg:DI 0 ax [orig:284 offset.8_214 ] [284])
        (not:DI (reg:DI 0 ax [orig:284 offset.8_214 ] [284]))) "CALRH2.f":1 532 {*one_cmpldi2_1}
     (nil))
(insn 467 106 107 2 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -752 [0xfffffffffffffd10])) [14 %sfp+-704 S8 A128])
        (reg:DI 0 ax [orig:284 offset.8_214 ] [284])) "CALRH2.f":1 85 {*movdi_internal}
     (nil))
(insn 107 467 108 2 (set (reg:SI 0 ax [orig:285 _215 ] [285])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe64a6b7870 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CALRH2.f":87 86 {*movsi_internal}
     (nil))
(insn 108 107 468 2 (set (reg:SI 2 cx [orig:286 _216 ] [286])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fe64a6b7870 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CALRH2.f":87 86 {*movsi_internal}
     (nil))
(insn 468 108 109 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -720 [0xfffffffffffffd30])) [14 %sfp+-672 S4 A32])
        (reg:SI 2 cx [orig:286 _216 ] [286])) "CALRH2.f":87 86 {*movsi_internal}
     (nil))
(insn 109 468 410 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])
        (reg:SI 0 ax [orig:285 _215 ] [285])) "CALRH2.f":87 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              14 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 286
;; lr  def 	 17 [flags] 107 287 314
(code_label 410 109 110 3 12 (nil) [1 uses])
(note 110 410 111 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 111 110 469 3 (set (reg:SI 0 ax [orig:107 j.29_21 ] [107])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":87 86 {*movsi_internal}
     (nil))
(note 469 111 492 3 NOTE_INSN_DELETED)
(note 492 469 112 3 NOTE_INSN_DELETED)
(insn 112 492 113 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -720 [0xfffffffffffffd30])) [14 %sfp+-672 S4 A32])
            (reg:SI 0 ax [orig:107 j.29_21 ] [107]))) "CALRH2.f":87 11 {*cmpsi_1}
     (nil))
(insn 113 112 114 3 (set (reg:QI 0 ax [314])
        (lt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRH2.f":87 678 {*setcc_qi}
     (nil))
(insn 114 113 115 3 (set (reg:SI 0 ax [orig:287 _218 ] [287])
        (zero_extend:SI (reg:QI 0 ax [314]))) "CALRH2.f":87 140 {*zero_extendqisi2}
     (nil))
(insn 115 114 116 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:287 _218 ] [287])
            (const_int 0 [0]))) "CALRH2.f":87 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 116 115 117 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 438)
            (pc))) "CALRH2.f":87 682 {*jcc}
     (nil)
 -> 438)
;;  succ:       16
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 288 315
(note 117 116 118 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 118 117 119 4 (set (reg/f:DI 0 ax [315])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -704 [0xfffffffffffffd40])) [11 im+0 S8 A64])) "CALRH2.f":88 85 {*movdi_internal}
     (nil))
(insn 119 118 470 4 (set (reg:SI 0 ax [orig:288 _219 ] [288])
        (mem:SI (reg/f:DI 0 ax [315]) [2 *im_173(D)+0 S4 A32])) "CALRH2.f":88 86 {*movsi_internal}
     (nil))
(insn 470 119 120 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -756 [0xfffffffffffffd0c])) [14 %sfp+-708 S4 A32])
        (reg:SI 0 ax [orig:288 _219 ] [288])) "CALRH2.f":88 86 {*movsi_internal}
     (nil))
(insn 120 470 402 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CALRH2.f":88 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              13 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 288
;; lr  def 	 17 [flags] 108 289 316
(code_label 402 120 121 5 11 (nil) [1 uses])
(note 121 402 122 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 122 121 471 5 (set (reg:SI 0 ax [orig:108 i.30_22 ] [108])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":88 86 {*movsi_internal}
     (nil))
(note 471 122 491 5 NOTE_INSN_DELETED)
(note 491 471 123 5 NOTE_INSN_DELETED)
(insn 123 491 124 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -756 [0xfffffffffffffd0c])) [14 %sfp+-708 S4 A32])
            (reg:SI 0 ax [orig:108 i.30_22 ] [108]))) "CALRH2.f":88 11 {*cmpsi_1}
     (nil))
(insn 124 123 125 5 (set (reg:QI 0 ax [316])
        (lt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALRH2.f":88 678 {*setcc_qi}
     (nil))
(insn 125 124 126 5 (set (reg:SI 0 ax [orig:289 _221 ] [289])
        (zero_extend:SI (reg:QI 0 ax [316]))) "CALRH2.f":88 140 {*zero_extendqisi2}
     (nil))
(insn 126 125 127 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:289 _221 ] [289])
            (const_int 0 [0]))) "CALRH2.f":88 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 127 126 128 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 441)
            (pc))) "CALRH2.f":88 682 {*jcc}
     (nil)
 -> 441)
;;  succ:       17
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 260
;; lr  def 	 17 [flags] 109 110 111 112 113 114 115 116 117 317 318 319
(note 128 127 129 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 129 128 130 6 (set (reg:SI 0 ax [orig:109 j.31_23 ] [109])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":89 86 {*movsi_internal}
     (nil))
(insn 130 129 131 6 (set (reg:DI 0 ax [orig:110 _24 ] [110])
        (sign_extend:DI (reg:SI 0 ax [orig:109 j.31_23 ] [109]))) "CALRH2.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 131 130 488 6 (parallel [
            (set (reg:DI 0 ax [orig:111 _25 ] [111])
                (mult:DI (reg:DI 0 ax [orig:110 _24 ] [110])
                    (reg:DI 42 r13 [orig:254 stride.2_176 ] [254])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":89 349 {*muldi3_1}
     (nil))
(insn 488 131 132 6 (set (reg:DI 2 cx [orig:260 offset.3_184 ] [260])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [14 %sfp+-664 S8 A64])) "CALRH2.f":89 85 {*movdi_internal}
     (nil))
(insn 132 488 133 6 (parallel [
            (set (reg:DI 1 dx [orig:112 _26 ] [112])
                (plus:DI (reg:DI 2 cx [orig:260 offset.3_184 ] [260])
                    (reg:DI 0 ax [orig:111 _25 ] [111])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":89 222 {*adddi_1}
     (nil))
(insn 133 132 134 6 (set (reg:SI 0 ax [orig:113 i.32_27 ] [113])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":89 86 {*movsi_internal}
     (nil))
(insn 134 133 135 6 (set (reg:DI 0 ax [orig:114 _28 ] [114])
        (sign_extend:DI (reg:SI 0 ax [orig:113 i.32_27 ] [113]))) "CALRH2.f":89 149 {*extendsidi2_rex64}
     (nil))
(insn 135 134 136 6 (parallel [
            (set (reg:DI 1 dx [orig:115 _29 ] [115])
                (plus:DI (reg:DI 1 dx [orig:112 _26 ] [112])
                    (reg:DI 0 ax [orig:114 _28 ] [114])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":89 222 {*adddi_1}
     (nil))
(insn 136 135 137 6 (set (reg/f:DI 0 ax [317])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -664 [0xfffffffffffffd68])) [10 p1+0 S8 A64])) "CALRH2.f":89 85 {*movdi_internal}
     (nil))
(insn 137 136 138 6 (set (reg:SF 21 xmm0 [orig:116 _30 ] [116])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:115 _29 ] [115])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [317])) [3 *p1_222(D) S4 A32])) "CALRH2.f":89 131 {*movsf_internal}
     (nil))
(insn 138 137 139 6 (set (reg:V4SF 22 xmm1 [318])
        (mem/u/c:V4SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S16 A128])) "CALRH2.f":89 1282 {movv4sf_internal}
     (expr_list:REG_EQUAL (const_vector:V4SF [
                (const_double:SF +QNaN [+QNaN])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
                (const_double:SF 0.0 [0x0.0p+0])
            ])
        (nil)))
(insn 139 138 140 6 (parallel [
            (set (reg:SF 21 xmm0 [orig:117 _31 ] [117])
                (abs:SF (reg:SF 21 xmm0 [orig:116 _30 ] [116])))
            (use (reg:V4SF 22 xmm1 [318]))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":89 507 {*absnegsf2}
     (expr_list:REG_EQUAL (abs:SF (reg:SF 21 xmm0 [orig:116 _30 ] [116]))
        (nil)))
(insn 140 139 141 6 (set (reg:SF 22 xmm1 [319])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALRH2.f":89 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 141 140 142 6 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:117 _31 ] [117])
            (reg:SF 22 xmm1 [319]))) "CALRH2.f":89 53 {*cmpisf}
     (nil))
(jump_insn 142 141 146 6 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 397)
            (pc))) "CALRH2.f":89 682 {*jcc}
     (nil)
 -> 397)
;;  succ:       7 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278 392

;; basic block 7, loop depth 0, maybe hot
;;  prev block 6, next block 8, flags: (RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278 392
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 260 262 268
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 118 119 120 121 122 123 124 125 126 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 320 321 322 323 324 325 326 327
(note 146 142 147 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 147 146 148 7 (set (reg:SI 0 ax [orig:118 j.33_32 ] [118])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":91 86 {*movsi_internal}
     (nil))
(insn 148 147 149 7 (set (reg:DI 0 ax [orig:119 _33 ] [119])
        (sign_extend:DI (reg:SI 0 ax [orig:118 j.33_32 ] [118]))) "CALRH2.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 149 148 487 7 (parallel [
            (set (reg:DI 0 ax [orig:120 _34 ] [120])
                (mult:DI (reg:DI 0 ax [orig:119 _33 ] [119])
                    (reg:DI 42 r13 [orig:254 stride.2_176 ] [254])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":91 349 {*muldi3_1}
     (nil))
(insn 487 149 495 7 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [14 %sfp+-664 S8 A64])
        (reg:DI 2 cx [orig:260 offset.3_184 ] [260])) "CALRH2.f":91 85 {*movdi_internal}
     (nil))
(note 495 487 150 7 NOTE_INSN_DELETED)
(insn 150 495 151 7 (parallel [
            (set (reg:DI 1 dx [orig:121 _35 ] [121])
                (plus:DI (reg:DI 2 cx [orig:260 offset.3_184 ] [260])
                    (reg:DI 0 ax [orig:120 _34 ] [120])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":91 222 {*adddi_1}
     (nil))
(insn 151 150 152 7 (set (reg:SI 0 ax [orig:122 i.34_36 ] [122])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":91 86 {*movsi_internal}
     (nil))
(insn 152 151 153 7 (set (reg:DI 0 ax [orig:123 _37 ] [123])
        (sign_extend:DI (reg:SI 0 ax [orig:122 i.34_36 ] [122]))) "CALRH2.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 153 152 154 7 (parallel [
            (set (reg:DI 1 dx [orig:124 _38 ] [124])
                (plus:DI (reg:DI 1 dx [orig:121 _35 ] [121])
                    (reg:DI 0 ax [orig:123 _37 ] [123])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":91 222 {*adddi_1}
     (nil))
(insn 154 153 155 7 (set (reg/f:DI 0 ax [320])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -664 [0xfffffffffffffd68])) [10 p1+0 S8 A64])) "CALRH2.f":91 85 {*movdi_internal}
     (nil))
(insn 155 154 156 7 (set (reg:SF 22 xmm1 [orig:125 _39 ] [125])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:124 _38 ] [124])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [320])) [3 *p1_222(D) S4 A32])) "CALRH2.f":91 131 {*movsf_internal}
     (nil))
(insn 156 155 157 7 (set (reg:SF 21 xmm0 [321])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALRH2.f":91 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.799051513671875e+2 [0x0.bdf3dcp+9])
        (nil)))
(insn 157 156 475 7 (set (reg:SF 21 xmm0 [321])
        (div:SF (reg:SF 21 xmm0 [321])
            (reg:SF 22 xmm1 [orig:125 _39 ] [125]))) "CALRH2.f":91 841 {*fop_sf_1}
     (nil))
(insn 475 157 494 7 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -716 [0xfffffffffffffd34])) [14 %sfp+-668 S4 A32])
        (reg:SF 21 xmm0 [321])) "CALRH2.f":91 131 {*movsf_internal}
     (nil))
(note 494 475 486 7 NOTE_INSN_DELETED)
(note 486 494 158 7 NOTE_INSN_DELETED)
(insn 158 486 159 7 (set (reg:SI 0 ax [orig:127 j.35_41 ] [127])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":91 86 {*movsi_internal}
     (nil))
(insn 159 158 160 7 (set (reg:DI 0 ax [orig:128 _42 ] [128])
        (sign_extend:DI (reg:SI 0 ax [orig:127 j.35_41 ] [127]))) "CALRH2.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 160 159 485 7 (parallel [
            (set (reg:DI 0 ax [orig:129 _43 ] [129])
                (mult:DI (reg:DI 0 ax [orig:128 _42 ] [128])
                    (reg:DI 43 r14 [orig:262 stride.17_187 ] [262])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":91 349 {*muldi3_1}
     (nil))
(insn 485 160 161 7 (set (reg:DI 4 si [orig:268 offset.18_194 ] [268])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -736 [0xfffffffffffffd20])) [14 %sfp+-688 S8 A128])) "CALRH2.f":91 85 {*movdi_internal}
     (nil))
(insn 161 485 162 7 (parallel [
            (set (reg:DI 1 dx [orig:130 _44 ] [130])
                (plus:DI (reg:DI 4 si [orig:268 offset.18_194 ] [268])
                    (reg:DI 0 ax [orig:129 _43 ] [129])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":91 222 {*adddi_1}
     (nil))
(insn 162 161 163 7 (set (reg:SI 0 ax [orig:131 i.36_45 ] [131])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":91 86 {*movsi_internal}
     (nil))
(insn 163 162 164 7 (set (reg:DI 0 ax [orig:132 _46 ] [132])
        (sign_extend:DI (reg:SI 0 ax [orig:131 i.36_45 ] [131]))) "CALRH2.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 164 163 165 7 (parallel [
            (set (reg:DI 1 dx [orig:133 _47 ] [133])
                (plus:DI (reg:DI 1 dx [orig:130 _44 ] [130])
                    (reg:DI 0 ax [orig:132 _46 ] [132])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":91 222 {*adddi_1}
     (nil))
(insn 165 164 166 7 (set (reg/f:DI 0 ax [322])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -672 [0xfffffffffffffd60])) [10 t1+0 S8 A64])) "CALRH2.f":91 85 {*movdi_internal}
     (nil))
(insn 166 165 167 7 (set (reg:SF 21 xmm0 [orig:134 _48 ] [134])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:133 _47 ] [133])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [322])) [3 *t1_223(D) S4 A32])) "CALRH2.f":91 131 {*movsf_internal}
     (nil))
(insn 167 166 168 7 (set (reg:SF 22 xmm1 [323])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALRH2.f":91 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73160003662109375e+2 [0x0.88947bp+9])
        (nil)))
(insn 168 167 169 7 (set (reg:SF 21 xmm0 [orig:135 _49 ] [135])
        (minus:SF (reg:SF 21 xmm0 [orig:134 _48 ] [134])
            (reg:SF 22 xmm1 [323]))) "CALRH2.f":91 841 {*fop_sf_1}
     (nil))
(insn 169 168 170 7 (set (reg:SF 22 xmm1 [orig:136 _50 ] [136])
        (reg:SF 21 xmm0 [orig:135 _49 ] [135])) "CALRH2.f":91 131 {*movsf_internal}
     (nil))
(insn 170 169 171 7 (set (reg:SF 21 xmm0 [324])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALRH2.f":91 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.72693881988525390625e+1 [0x0.8a27b5p+5])
        (nil)))
(insn 171 170 172 7 (set (reg:SF 21 xmm0 [orig:137 _51 ] [137])
        (mult:SF (reg:SF 21 xmm0 [324])
            (reg:SF 22 xmm1 [orig:136 _50 ] [136]))) "CALRH2.f":91 838 {*fop_sf_comm}
     (nil))
(insn 172 171 173 7 (set (reg:SI 0 ax [orig:138 j.37_52 ] [138])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":91 86 {*movsi_internal}
     (nil))
(insn 173 172 174 7 (set (reg:DI 0 ax [orig:139 _53 ] [139])
        (sign_extend:DI (reg:SI 0 ax [orig:138 j.37_52 ] [138]))) "CALRH2.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 174 173 484 7 (parallel [
            (set (reg:DI 0 ax [orig:140 _54 ] [140])
                (mult:DI (reg:DI 0 ax [orig:139 _53 ] [139])
                    (reg:DI 43 r14 [orig:262 stride.17_187 ] [262])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":91 349 {*muldi3_1}
     (nil))
(insn 484 174 493 7 (set (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -736 [0xfffffffffffffd20])) [14 %sfp+-688 S8 A128])
        (reg:DI 4 si [orig:268 offset.18_194 ] [268])) "CALRH2.f":91 85 {*movdi_internal}
     (nil))
(note 493 484 175 7 NOTE_INSN_DELETED)
(insn 175 493 176 7 (parallel [
            (set (reg:DI 1 dx [orig:141 _55 ] [141])
                (plus:DI (reg:DI 4 si [orig:268 offset.18_194 ] [268])
                    (reg:DI 0 ax [orig:140 _54 ] [140])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":91 222 {*adddi_1}
     (nil))
(insn 176 175 177 7 (set (reg:SI 0 ax [orig:142 i.38_56 ] [142])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":91 86 {*movsi_internal}
     (nil))
(insn 177 176 178 7 (set (reg:DI 0 ax [orig:143 _57 ] [143])
        (sign_extend:DI (reg:SI 0 ax [orig:142 i.38_56 ] [142]))) "CALRH2.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 178 177 179 7 (parallel [
            (set (reg:DI 1 dx [orig:144 _58 ] [144])
                (plus:DI (reg:DI 1 dx [orig:141 _55 ] [141])
                    (reg:DI 0 ax [orig:143 _57 ] [143])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":91 222 {*adddi_1}
     (nil))
(insn 179 178 180 7 (set (reg/f:DI 0 ax [325])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -672 [0xfffffffffffffd60])) [10 t1+0 S8 A64])) "CALRH2.f":91 85 {*movdi_internal}
     (nil))
(insn 180 179 181 7 (set (reg:SF 22 xmm1 [orig:145 _59 ] [145])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:144 _58 ] [144])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [325])) [3 *t1_223(D) S4 A32])) "CALRH2.f":91 131 {*movsf_internal}
     (nil))
(insn 181 180 182 7 (set (reg:SF 23 xmm2 [326])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALRH2.f":91 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.58600006103515625e+1 [0x0.8f70a4p+6])
        (nil)))
(insn 182 181 184 7 (set (reg:SF 22 xmm1 [orig:146 _60 ] [146])
        (minus:SF (reg:SF 22 xmm1 [orig:145 _59 ] [145])
            (reg:SF 23 xmm2 [326]))) "CALRH2.f":91 841 {*fop_sf_1}
     (nil))
(insn 184 182 186 7 (set (reg:SF 21 xmm0 [orig:148 _62 ] [148])
        (div:SF (reg:SF 21 xmm0 [orig:137 _51 ] [137])
            (reg:SF 22 xmm1 [orig:147 _61 ] [147]))) "CALRH2.f":91 841 {*fop_sf_1}
     (nil))
(call_insn/u 186 184 478 7 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("expf") [flags 0x41]  <function_decl 0x7fe64a527300 __builtin_expf>) [0 __builtin_expf S1 A8])
            (const_int 0 [0]))) "CALRH2.f":91 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 478 186 490 7 NOTE_INSN_DELETED)
(note 490 478 188 7 NOTE_INSN_DELETED)
(insn 188 490 189 7 (set (reg:SF 21 xmm0 [orig:150 _64 ] [150])
        (mult:SF (reg:SF 21 xmm0 [orig:149 _63 ] [149])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -716 [0xfffffffffffffd34])) [14 %sfp+-668 S4 A32]))) "CALRH2.f":91 838 {*fop_sf_comm}
     (nil))
(insn 189 188 190 7 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [3 qc+0 S4 A32])
        (reg:SF 21 xmm0 [orig:150 _64 ] [150])) "CALRH2.f":91 131 {*movsf_internal}
     (nil))
(insn 190 189 191 7 (set (reg:SF 22 xmm1 [orig:151 qc.39_65 ] [151])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [3 qc+0 S4 A32])) "CALRH2.f":94 131 {*movsf_internal}
     (nil))
(insn 191 190 192 7 (set (reg:SF 21 xmm0 [327])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALRH2.f":94 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.999999682655225388967887463487205224055287544615567e-21 [0x0.bce508p-66])
        (nil)))
(insn 192 191 193 7 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [327])
            (reg:SF 22 xmm1 [orig:151 qc.39_65 ] [151]))) "CALRH2.f":94 53 {*cmpisf}
     (nil))
(jump_insn 193 192 197 7 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 281)
            (pc))) "CALRH2.f":94 682 {*jcc}
     (nil)
 -> 281)
;;  succ:       8 (FALLTHRU)
;;              9
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278

;; basic block 8, loop depth 0, maybe hot
;;  prev block 7, next block 9, flags: (RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 260 262 268
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 152 153 154 155 156 157 158 159 160 161 162 163 164 165 166 167 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346
(note 197 193 198 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 8 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -648 [0xfffffffffffffd78])) [6 dt_parm.20.common.filename+0 S8 A64])
        (symbol_ref/f:DI ("*.LC7") [flags 0x2]  <var_decl 0x7fe64a6bebd0 *.LC7>)) "CALRH2.f":95 85 {*movdi_internal}
     (nil))
(insn 199 198 200 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -640 [0xfffffffffffffd80])) [2 dt_parm.20.common.line+0 S4 A128])
        (const_int 95 [0x5f])) "CALRH2.f":95 86 {*movsi_internal}
     (nil))
(insn 200 199 201 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -656 [0xfffffffffffffd70])) [2 dt_parm.20.common.flags+0 S4 A128])
        (const_int 128 [0x80])) "CALRH2.f":95 86 {*movsi_internal}
     (nil))
(insn 201 200 202 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -652 [0xfffffffffffffd74])) [2 dt_parm.20.common.unit+0 S4 A32])
        (const_int 6 [0x6])) "CALRH2.f":95 86 {*movsi_internal}
     (nil))
(insn 202 201 203 8 (parallel [
            (set (reg:DI 0 ax [328])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":95 222 {*adddi_1}
     (nil))
(insn 203 202 204 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [328])) "CALRH2.f":95 85 {*movdi_internal}
     (nil))
(call_insn 204 203 205 8 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write") [flags 0x41]  <function_decl 0x7fe64a6ac400 _gfortran_st_write>) [0 _gfortran_st_write S1 A8])
        (const_int 0 [0])) "CALRH2.f":95 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 205 204 206 8 (parallel [
            (set (reg:DI 0 ax [329])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":94 222 {*adddi_1}
     (nil))
(insn 206 205 207 8 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) "CALRH2.f":94 85 {*movdi_internal}
     (nil))
(insn 207 206 208 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC8") [flags 0x2]  <var_decl 0x7fe64a6bec60 *.LC8>)) "CALRH2.f":94 85 {*movdi_internal}
     (nil))
(insn 208 207 209 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [329])) "CALRH2.f":94 85 {*movdi_internal}
     (nil))
(call_insn 209 208 210 8 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_character_write") [flags 0x41]  <function_decl 0x7fe64a6a9500 _gfortran_transfer_character_write>) [0 _gfortran_transfer_character_write S1 A8])
        (const_int 0 [0])) "CALRH2.f":94 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 210 209 211 8 (parallel [
            (set (reg:DI 2 cx [330])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":94 222 {*adddi_1}
     (nil))
(insn 211 210 212 8 (parallel [
            (set (reg:DI 0 ax [331])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":94 222 {*adddi_1}
     (nil))
(insn 212 211 213 8 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "CALRH2.f":94 86 {*movsi_internal}
     (nil))
(insn 213 212 214 8 (set (reg:DI 4 si)
        (reg:DI 2 cx [330])) "CALRH2.f":94 85 {*movdi_internal}
     (nil))
(insn 214 213 215 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [331])) "CALRH2.f":94 85 {*movdi_internal}
     (nil))
(call_insn 215 214 216 8 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x7fe64a6a9100 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "CALRH2.f":94 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 216 215 217 8 (parallel [
            (set (reg:DI 2 cx [332])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":94 222 {*adddi_1}
     (nil))
(insn 217 216 218 8 (parallel [
            (set (reg:DI 0 ax [333])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":94 222 {*adddi_1}
     (nil))
(insn 218 217 219 8 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "CALRH2.f":94 86 {*movsi_internal}
     (nil))
(insn 219 218 220 8 (set (reg:DI 4 si)
        (reg:DI 2 cx [332])) "CALRH2.f":94 85 {*movdi_internal}
     (nil))
(insn 220 219 221 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [333])) "CALRH2.f":94 85 {*movdi_internal}
     (nil))
(call_insn 221 220 222 8 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_integer_write") [flags 0x41]  <function_decl 0x7fe64a6a9100 _gfortran_transfer_integer_write>) [0 _gfortran_transfer_integer_write S1 A8])
        (const_int 0 [0])) "CALRH2.f":94 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 222 221 223 8 (parallel [
            (set (reg:DI 0 ax [334])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":94 222 {*adddi_1}
     (nil))
(insn 223 222 224 8 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "CALRH2.f":94 86 {*movsi_internal}
     (nil))
(insn 224 223 225 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC9") [flags 0x2]  <var_decl 0x7fe64a6becf0 *.LC9>)) "CALRH2.f":94 85 {*movdi_internal}
     (nil))
(insn 225 224 226 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [334])) "CALRH2.f":94 85 {*movdi_internal}
     (nil))
(call_insn 226 225 227 8 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x7fe64a6a9900 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "CALRH2.f":94 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 227 226 228 8 (set (reg:SI 0 ax [orig:152 j.40_66 ] [152])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":94 86 {*movsi_internal}
     (nil))
(insn 228 227 229 8 (set (reg:DI 0 ax [orig:153 _67 ] [153])
        (sign_extend:DI (reg:SI 0 ax [orig:152 j.40_66 ] [152]))) "CALRH2.f":94 149 {*extendsidi2_rex64}
     (nil))
(insn 229 228 479 8 (parallel [
            (set (reg:DI 0 ax [orig:154 _68 ] [154])
                (mult:DI (reg:DI 0 ax [orig:153 _67 ] [153])
                    (reg:DI 42 r13 [orig:254 stride.2_176 ] [254])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":94 349 {*muldi3_1}
     (nil))
(insn 479 229 230 8 (set (reg:DI 2 cx [orig:260 offset.3_184 ] [260])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -712 [0xfffffffffffffd38])) [14 %sfp+-664 S8 A64])) "CALRH2.f":94 85 {*movdi_internal}
     (nil))
(insn 230 479 231 8 (parallel [
            (set (reg:DI 1 dx [orig:155 _69 ] [155])
                (plus:DI (reg:DI 2 cx [orig:260 offset.3_184 ] [260])
                    (reg:DI 0 ax [orig:154 _68 ] [154])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":94 222 {*adddi_1}
     (nil))
(insn 231 230 232 8 (set (reg:SI 0 ax [orig:156 i.41_70 ] [156])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":94 86 {*movsi_internal}
     (nil))
(insn 232 231 233 8 (set (reg:DI 0 ax [orig:157 _71 ] [157])
        (sign_extend:DI (reg:SI 0 ax [orig:156 i.41_70 ] [156]))) "CALRH2.f":94 149 {*extendsidi2_rex64}
     (nil))
(insn 233 232 234 8 (parallel [
            (set (reg:DI 0 ax [orig:158 _72 ] [158])
                (plus:DI (reg:DI 0 ax [orig:157 _71 ] [157])
                    (reg:DI 1 dx [orig:155 _69 ] [155])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":94 222 {*adddi_1}
     (nil))
(insn 234 233 235 8 (parallel [
            (set (reg:DI 1 dx [335])
                (ashift:DI (reg:DI 0 ax [orig:158 _72 ] [158])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":94 551 {*ashldi3_1}
     (nil))
(insn 235 234 236 8 (set (reg/f:DI 0 ax [336])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -664 [0xfffffffffffffd68])) [10 p1+0 S8 A64])) "CALRH2.f":94 85 {*movdi_internal}
     (nil))
(insn 236 235 237 8 (parallel [
            (set (reg/f:DI 2 cx [orig:159 _73 ] [159])
                (plus:DI (reg:DI 1 dx [335])
                    (reg/f:DI 0 ax [336])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":94 222 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -616 [0xfffffffffffffd98])) [10 p1+0 S8 A64])
            (reg:DI 1 dx [335]))
        (nil)))
(insn 237 236 238 8 (parallel [
            (set (reg:DI 0 ax [337])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":94 222 {*adddi_1}
     (nil))
(insn 238 237 239 8 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "CALRH2.f":94 86 {*movsi_internal}
     (nil))
(insn 239 238 240 8 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:159 _73 ] [159])) "CALRH2.f":94 85 {*movdi_internal}
     (nil))
(insn 240 239 241 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [337])) "CALRH2.f":94 85 {*movdi_internal}
     (nil))
(call_insn 241 240 242 8 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x7fe64a6a9900 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "CALRH2.f":94 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 242 241 243 8 (parallel [
            (set (reg:DI 0 ax [338])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":94 222 {*adddi_1}
     (nil))
(insn 243 242 244 8 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "CALRH2.f":94 86 {*movsi_internal}
     (nil))
(insn 244 243 245 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC10") [flags 0x2]  <var_decl 0x7fe64a6bed80 *.LC10>)) "CALRH2.f":94 85 {*movdi_internal}
     (nil))
(insn 245 244 246 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [338])) "CALRH2.f":94 85 {*movdi_internal}
     (nil))
(call_insn 246 245 247 8 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x7fe64a6a9900 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "CALRH2.f":94 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 247 246 248 8 (set (reg:SI 0 ax [orig:160 j.42_74 ] [160])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":95 86 {*movsi_internal}
     (nil))
(insn 248 247 249 8 (set (reg:DI 0 ax [orig:161 _75 ] [161])
        (sign_extend:DI (reg:SI 0 ax [orig:160 j.42_74 ] [160]))) "CALRH2.f":95 149 {*extendsidi2_rex64}
     (nil))
(insn 249 248 480 8 (parallel [
            (set (reg:DI 0 ax [orig:162 _76 ] [162])
                (mult:DI (reg:DI 0 ax [orig:161 _75 ] [161])
                    (reg:DI 43 r14 [orig:262 stride.17_187 ] [262])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":95 349 {*muldi3_1}
     (nil))
(insn 480 249 250 8 (set (reg:DI 4 si [orig:268 offset.18_194 ] [268])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -736 [0xfffffffffffffd20])) [14 %sfp+-688 S8 A128])) "CALRH2.f":95 85 {*movdi_internal}
     (nil))
(insn 250 480 251 8 (parallel [
            (set (reg:DI 1 dx [orig:163 _77 ] [163])
                (plus:DI (reg:DI 4 si [orig:268 offset.18_194 ] [268])
                    (reg:DI 0 ax [orig:162 _76 ] [162])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":95 222 {*adddi_1}
     (nil))
(insn 251 250 252 8 (set (reg:SI 0 ax [orig:164 i.43_78 ] [164])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":95 86 {*movsi_internal}
     (nil))
(insn 252 251 253 8 (set (reg:DI 0 ax [orig:165 _79 ] [165])
        (sign_extend:DI (reg:SI 0 ax [orig:164 i.43_78 ] [164]))) "CALRH2.f":95 149 {*extendsidi2_rex64}
     (nil))
(insn 253 252 254 8 (parallel [
            (set (reg:DI 0 ax [orig:166 _80 ] [166])
                (plus:DI (reg:DI 0 ax [orig:165 _79 ] [165])
                    (reg:DI 1 dx [orig:163 _77 ] [163])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":95 222 {*adddi_1}
     (nil))
(insn 254 253 255 8 (parallel [
            (set (reg:DI 1 dx [339])
                (ashift:DI (reg:DI 0 ax [orig:166 _80 ] [166])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":95 551 {*ashldi3_1}
     (nil))
(insn 255 254 256 8 (set (reg/f:DI 0 ax [340])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -672 [0xfffffffffffffd60])) [10 t1+0 S8 A64])) "CALRH2.f":95 85 {*movdi_internal}
     (nil))
(insn 256 255 257 8 (parallel [
            (set (reg/f:DI 2 cx [orig:167 _81 ] [167])
                (plus:DI (reg:DI 1 dx [339])
                    (reg/f:DI 0 ax [340])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":95 222 {*adddi_1}
     (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                    (const_int -624 [0xfffffffffffffd90])) [10 t1+0 S8 A64])
            (reg:DI 1 dx [339]))
        (nil)))
(insn 257 256 258 8 (parallel [
            (set (reg:DI 0 ax [341])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":95 222 {*adddi_1}
     (nil))
(insn 258 257 259 8 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "CALRH2.f":95 86 {*movsi_internal}
     (nil))
(insn 259 258 260 8 (set (reg:DI 4 si)
        (reg/f:DI 2 cx [orig:167 _81 ] [167])) "CALRH2.f":95 85 {*movdi_internal}
     (nil))
(insn 260 259 261 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [341])) "CALRH2.f":95 85 {*movdi_internal}
     (nil))
(call_insn 261 260 262 8 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x7fe64a6a9900 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "CALRH2.f":95 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 262 261 263 8 (parallel [
            (set (reg:DI 0 ax [342])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":95 222 {*adddi_1}
     (nil))
(insn 263 262 264 8 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "CALRH2.f":95 86 {*movsi_internal}
     (nil))
(insn 264 263 265 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC11") [flags 0x2]  <var_decl 0x7fe64a6bee10 *.LC11>)) "CALRH2.f":95 85 {*movdi_internal}
     (nil))
(insn 265 264 266 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [342])) "CALRH2.f":95 85 {*movdi_internal}
     (nil))
(call_insn 266 265 267 8 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x7fe64a6a9900 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "CALRH2.f":95 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 267 266 268 8 (parallel [
            (set (reg:DI 0 ax [343])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":95 222 {*adddi_1}
     (nil))
(insn 268 267 269 8 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "CALRH2.f":95 86 {*movsi_internal}
     (nil))
(insn 269 268 270 8 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC12") [flags 0x2]  <var_decl 0x7fe64a6beea0 *.LC12>)) "CALRH2.f":95 85 {*movdi_internal}
     (nil))
(insn 270 269 271 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [343])) "CALRH2.f":95 85 {*movdi_internal}
     (nil))
(call_insn 271 270 272 8 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x7fe64a6a9900 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "CALRH2.f":95 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 272 271 273 8 (parallel [
            (set (reg:DI 2 cx [344])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -124 [0xffffffffffffff84])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":95 222 {*adddi_1}
     (nil))
(insn 273 272 274 8 (parallel [
            (set (reg:DI 0 ax [345])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":95 222 {*adddi_1}
     (nil))
(insn 274 273 275 8 (set (reg:SI 1 dx)
        (const_int 4 [0x4])) "CALRH2.f":95 86 {*movsi_internal}
     (nil))
(insn 275 274 276 8 (set (reg:DI 4 si)
        (reg:DI 2 cx [344])) "CALRH2.f":95 85 {*movdi_internal}
     (nil))
(insn 276 275 277 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [345])) "CALRH2.f":95 85 {*movdi_internal}
     (nil))
(call_insn 277 276 278 8 (call (mem:QI (symbol_ref:DI ("_gfortran_transfer_real_write") [flags 0x41]  <function_decl 0x7fe64a6a9900 _gfortran_transfer_real_write>) [0 _gfortran_transfer_real_write S1 A8])
        (const_int 0 [0])) "CALRH2.f":95 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 278 277 279 8 (parallel [
            (set (reg:DI 0 ax [346])
                (plus:DI (reg/f:DI 6 bp)
                    (const_int -656 [0xfffffffffffffd70])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":95 222 {*adddi_1}
     (nil))
(insn 279 278 280 8 (set (reg:DI 5 di)
        (reg:DI 0 ax [346])) "CALRH2.f":95 85 {*movdi_internal}
     (nil))
(call_insn 280 279 281 8 (call (mem:QI (symbol_ref:DI ("_gfortran_st_write_done") [flags 0x41]  <function_decl 0x7fe64a6acf00 _gfortran_st_write_done>) [0 _gfortran_st_write_done S1 A8])
        (const_int 0 [0])) "CALRH2.f":95 689 {*call}
     (nil)
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              7
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 270 276 278 284
;; lr  def 	 17 [flags] 168 169 170 171 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 191 192 347 348 349 350
(code_label 281 280 282 9 6 (nil) [1 uses])
(note 282 281 283 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 283 282 284 9 (set (reg:SI 0 ax [orig:168 j.44_82 ] [168])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":96 86 {*movsi_internal}
     (nil))
(insn 284 283 285 9 (set (reg:DI 0 ax [orig:169 _83 ] [169])
        (sign_extend:DI (reg:SI 0 ax [orig:168 j.44_82 ] [168]))) "CALRH2.f":96 149 {*extendsidi2_rex64}
     (nil))
(insn 285 284 489 9 (parallel [
            (set (reg:DI 0 ax [orig:170 _84 ] [170])
                (mult:DI (reg:DI 0 ax [orig:169 _83 ] [169])
                    (reg:DI 44 r15 [orig:278 stride.7_207 ] [278])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":96 349 {*muldi3_1}
     (nil))
(insn 489 285 286 9 (set (reg:DI 5 di [orig:284 offset.8_214 ] [284])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -752 [0xfffffffffffffd10])) [14 %sfp+-704 S8 A128])) "CALRH2.f":96 85 {*movdi_internal}
     (nil))
(insn 286 489 287 9 (parallel [
            (set (reg:DI 1 dx [orig:171 _85 ] [171])
                (plus:DI (reg:DI 5 di [orig:284 offset.8_214 ] [284])
                    (reg:DI 0 ax [orig:170 _84 ] [170])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":96 222 {*adddi_1}
     (nil))
(insn 287 286 288 9 (set (reg:SI 0 ax [orig:172 i.45_86 ] [172])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":96 86 {*movsi_internal}
     (nil))
(insn 288 287 289 9 (set (reg:DI 0 ax [orig:173 _87 ] [173])
        (sign_extend:DI (reg:SI 0 ax [orig:172 i.45_86 ] [172]))) "CALRH2.f":96 149 {*extendsidi2_rex64}
     (nil))
(insn 289 288 290 9 (parallel [
            (set (reg:DI 1 dx [orig:174 _88 ] [174])
                (plus:DI (reg:DI 1 dx [orig:171 _85 ] [171])
                    (reg:DI 0 ax [orig:173 _87 ] [173])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":96 222 {*adddi_1}
     (nil))
(insn 290 289 291 9 (set (reg/f:DI 0 ax [347])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -680 [0xfffffffffffffd58])) [10 q1+0 S8 A64])) "CALRH2.f":96 85 {*movdi_internal}
     (nil))
(insn 291 290 292 9 (set (reg:SF 21 xmm0 [orig:175 _89 ] [175])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:174 _88 ] [174])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [347])) [3 *q1_242(D) S4 A32])) "CALRH2.f":96 131 {*movsf_internal}
     (nil))
(insn 292 291 293 9 (set (reg:SF 22 xmm1 [orig:176 qc.46_90 ] [176])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [3 qc+0 S4 A32])) "CALRH2.f":96 131 {*movsf_internal}
     (nil))
(insn 293 292 294 9 (set (reg:SI 0 ax [orig:177 j.47_91 ] [177])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":96 86 {*movsi_internal}
     (nil))
(insn 294 293 295 9 (set (reg:DI 0 ax [orig:178 _92 ] [178])
        (sign_extend:DI (reg:SI 0 ax [orig:177 j.47_91 ] [177]))) "CALRH2.f":96 149 {*extendsidi2_rex64}
     (nil))
(insn 295 294 296 9 (parallel [
            (set (reg:DI 0 ax [orig:179 _93 ] [179])
                (mult:DI (reg:DI 0 ax [orig:178 _92 ] [178])
                    (reg:DI 3 bx [orig:270 stride.12_197 ] [270])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":96 349 {*muldi3_1}
     (nil))
(insn 296 295 297 9 (parallel [
            (set (reg:DI 1 dx [orig:180 _94 ] [180])
                (plus:DI (reg:DI 41 r12 [orig:276 offset.13_204 ] [276])
                    (reg:DI 0 ax [orig:179 _93 ] [179])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":96 222 {*adddi_1}
     (nil))
(insn 297 296 298 9 (set (reg:SI 0 ax [orig:181 i.48_95 ] [181])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":96 86 {*movsi_internal}
     (nil))
(insn 298 297 299 9 (set (reg:DI 0 ax [orig:182 _96 ] [182])
        (sign_extend:DI (reg:SI 0 ax [orig:181 i.48_95 ] [181]))) "CALRH2.f":96 149 {*extendsidi2_rex64}
     (nil))
(insn 299 298 300 9 (parallel [
            (set (reg:DI 1 dx [orig:183 _97 ] [183])
                (plus:DI (reg:DI 1 dx [orig:180 _94 ] [180])
                    (reg:DI 0 ax [orig:182 _96 ] [182])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":96 222 {*adddi_1}
     (nil))
(insn 300 299 301 9 (set (reg:SF 21 xmm0 [orig:184 _98 ] [184])
        (div:SF (reg:SF 21 xmm0 [orig:175 _89 ] [175])
            (reg:SF 22 xmm1 [orig:176 qc.46_90 ] [176]))) "CALRH2.f":96 841 {*fop_sf_1}
     (nil))
(insn 301 300 302 9 (set (reg/f:DI 0 ax [348])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 rh+0 S8 A64])) "CALRH2.f":96 85 {*movdi_internal}
     (nil))
(insn 302 301 303 9 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:183 _97 ] [183])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [348])) [3 *rh_243(D) S4 A32])
        (reg:SF 21 xmm0 [orig:184 _98 ] [184])) "CALRH2.f":96 131 {*movsf_internal}
     (nil))
(insn 303 302 304 9 (set (reg:SI 0 ax [orig:185 j.49_99 ] [185])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":117 86 {*movsi_internal}
     (nil))
(insn 304 303 305 9 (set (reg:DI 0 ax [orig:186 _100 ] [186])
        (sign_extend:DI (reg:SI 0 ax [orig:185 j.49_99 ] [185]))) "CALRH2.f":117 149 {*extendsidi2_rex64}
     (nil))
(insn 305 304 306 9 (parallel [
            (set (reg:DI 0 ax [orig:187 _101 ] [187])
                (mult:DI (reg:DI 0 ax [orig:186 _100 ] [186])
                    (reg:DI 3 bx [orig:270 stride.12_197 ] [270])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":117 349 {*muldi3_1}
     (nil))
(insn 306 305 307 9 (parallel [
            (set (reg:DI 1 dx [orig:188 _102 ] [188])
                (plus:DI (reg:DI 41 r12 [orig:276 offset.13_204 ] [276])
                    (reg:DI 0 ax [orig:187 _101 ] [187])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":117 222 {*adddi_1}
     (nil))
(insn 307 306 308 9 (set (reg:SI 0 ax [orig:189 i.50_103 ] [189])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":117 86 {*movsi_internal}
     (nil))
(insn 308 307 309 9 (set (reg:DI 0 ax [orig:190 _104 ] [190])
        (sign_extend:DI (reg:SI 0 ax [orig:189 i.50_103 ] [189]))) "CALRH2.f":117 149 {*extendsidi2_rex64}
     (nil))
(insn 309 308 310 9 (parallel [
            (set (reg:DI 1 dx [orig:191 _105 ] [191])
                (plus:DI (reg:DI 1 dx [orig:188 _102 ] [188])
                    (reg:DI 0 ax [orig:190 _104 ] [190])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":117 222 {*adddi_1}
     (nil))
(insn 310 309 311 9 (set (reg/f:DI 0 ax [349])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 rh+0 S8 A64])) "CALRH2.f":117 85 {*movdi_internal}
     (nil))
(insn 311 310 312 9 (set (reg:SF 21 xmm0 [orig:192 _106 ] [192])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:191 _105 ] [191])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [349])) [3 *rh_243(D) S4 A32])) "CALRH2.f":117 131 {*movsf_internal}
     (nil))
(insn 312 311 313 9 (set (reg:SF 22 xmm1 [350])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALRH2.f":117 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 313 312 314 9 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:192 _106 ] [192])
            (reg:SF 22 xmm1 [350]))) "CALRH2.f":117 53 {*cmpisf}
     (nil))
(jump_insn 314 313 318 9 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 349)
            (pc))) "CALRH2.f":117 682 {*jcc}
     (nil)
 -> 349)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278 393

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278 393
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 270 276 278 284
;; lr  def 	 17 [flags] 193 194 195 196 197 198 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 351 352 353 354
(note 318 314 319 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 319 318 320 10 (set (reg:SI 0 ax [orig:193 j.51_107 ] [193])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":118 86 {*movsi_internal}
     (nil))
(insn 320 319 321 10 (set (reg:DI 0 ax [orig:194 _108 ] [194])
        (sign_extend:DI (reg:SI 0 ax [orig:193 j.51_107 ] [193]))) "CALRH2.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 321 320 322 10 (parallel [
            (set (reg:DI 0 ax [orig:195 _109 ] [195])
                (mult:DI (reg:DI 0 ax [orig:194 _108 ] [194])
                    (reg:DI 3 bx [orig:270 stride.12_197 ] [270])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":118 349 {*muldi3_1}
     (nil))
(insn 322 321 323 10 (parallel [
            (set (reg:DI 1 dx [orig:196 _110 ] [196])
                (plus:DI (reg:DI 41 r12 [orig:276 offset.13_204 ] [276])
                    (reg:DI 0 ax [orig:195 _109 ] [195])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":118 222 {*adddi_1}
     (nil))
(insn 323 322 324 10 (set (reg:SI 0 ax [orig:197 i.52_111 ] [197])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":118 86 {*movsi_internal}
     (nil))
(insn 324 323 325 10 (set (reg:DI 0 ax [orig:198 _112 ] [198])
        (sign_extend:DI (reg:SI 0 ax [orig:197 i.52_111 ] [197]))) "CALRH2.f":118 149 {*extendsidi2_rex64}
     (nil))
(insn 325 324 326 10 (parallel [
            (set (reg:DI 1 dx [orig:199 _113 ] [199])
                (plus:DI (reg:DI 1 dx [orig:196 _110 ] [196])
                    (reg:DI 0 ax [orig:198 _112 ] [198])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":118 222 {*adddi_1}
     (nil))
(insn 326 325 327 10 (set (reg/f:DI 0 ax [351])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 rh+0 S8 A64])) "CALRH2.f":118 85 {*movdi_internal}
     (nil))
(insn 327 326 328 10 (set (reg:SF 21 xmm0 [352])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALRH2.f":118 131 {*movsf_internal}
     (nil))
(insn 328 327 329 10 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:199 _113 ] [199])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [351])) [3 *rh_243(D) S4 A32])
        (reg:SF 21 xmm0 [352])) "CALRH2.f":118 131 {*movsf_internal}
     (nil))
(insn 329 328 330 10 (set (reg:SI 0 ax [orig:200 j.53_114 ] [200])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":119 86 {*movsi_internal}
     (nil))
(insn 330 329 331 10 (set (reg:DI 0 ax [orig:201 _115 ] [201])
        (sign_extend:DI (reg:SI 0 ax [orig:200 j.53_114 ] [200]))) "CALRH2.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 331 330 332 10 (parallel [
            (set (reg:DI 0 ax [orig:202 _116 ] [202])
                (mult:DI (reg:DI 0 ax [orig:201 _115 ] [201])
                    (reg:DI 3 bx [orig:270 stride.12_197 ] [270])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":119 349 {*muldi3_1}
     (nil))
(insn 332 331 333 10 (parallel [
            (set (reg:DI 1 dx [orig:203 _117 ] [203])
                (plus:DI (reg:DI 41 r12 [orig:276 offset.13_204 ] [276])
                    (reg:DI 0 ax [orig:202 _116 ] [202])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":119 222 {*adddi_1}
     (nil))
(insn 333 332 334 10 (set (reg:SI 0 ax [orig:204 i.54_118 ] [204])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":119 86 {*movsi_internal}
     (nil))
(insn 334 333 335 10 (set (reg:DI 0 ax [orig:205 _119 ] [205])
        (sign_extend:DI (reg:SI 0 ax [orig:204 i.54_118 ] [204]))) "CALRH2.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 335 334 336 10 (parallel [
            (set (reg:DI 1 dx [orig:206 _120 ] [206])
                (plus:DI (reg:DI 1 dx [orig:203 _117 ] [203])
                    (reg:DI 0 ax [orig:205 _119 ] [205])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":119 222 {*adddi_1}
     (nil))
(insn 336 335 337 10 (set (reg/f:DI 0 ax [353])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 rh+0 S8 A64])) "CALRH2.f":119 85 {*movdi_internal}
     (nil))
(insn 337 336 338 10 (set (reg:SF 22 xmm1 [orig:207 _121 ] [207])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:206 _120 ] [206])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [353])) [3 *rh_243(D) S4 A32])) "CALRH2.f":119 131 {*movsf_internal}
     (nil))
(insn 338 337 339 10 (set (reg:SF 21 xmm0 [orig:208 qc.55_122 ] [208])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [3 qc+0 S4 A32])) "CALRH2.f":119 131 {*movsf_internal}
     (nil))
(insn 339 338 340 10 (set (reg:SI 0 ax [orig:209 j.56_123 ] [209])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":119 86 {*movsi_internal}
     (nil))
(insn 340 339 341 10 (set (reg:DI 0 ax [orig:210 _124 ] [210])
        (sign_extend:DI (reg:SI 0 ax [orig:209 j.56_123 ] [209]))) "CALRH2.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 341 340 342 10 (parallel [
            (set (reg:DI 0 ax [orig:211 _125 ] [211])
                (mult:DI (reg:DI 0 ax [orig:210 _124 ] [210])
                    (reg:DI 44 r15 [orig:278 stride.7_207 ] [278])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":119 349 {*muldi3_1}
     (nil))
(insn 342 341 343 10 (parallel [
            (set (reg:DI 1 dx [orig:212 _126 ] [212])
                (plus:DI (reg:DI 5 di [orig:284 offset.8_214 ] [284])
                    (reg:DI 0 ax [orig:211 _125 ] [211])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":119 222 {*adddi_1}
     (nil))
(insn 343 342 344 10 (set (reg:SI 0 ax [orig:213 i.57_127 ] [213])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":119 86 {*movsi_internal}
     (nil))
(insn 344 343 345 10 (set (reg:DI 0 ax [orig:214 _128 ] [214])
        (sign_extend:DI (reg:SI 0 ax [orig:213 i.57_127 ] [213]))) "CALRH2.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 345 344 346 10 (parallel [
            (set (reg:DI 1 dx [orig:215 _129 ] [215])
                (plus:DI (reg:DI 1 dx [orig:212 _126 ] [212])
                    (reg:DI 0 ax [orig:214 _128 ] [214])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":119 222 {*adddi_1}
     (nil))
(insn 346 345 347 10 (set (reg:SF 21 xmm0 [orig:216 _130 ] [216])
        (mult:SF (reg:SF 21 xmm0 [orig:208 qc.55_122 ] [208])
            (reg:SF 22 xmm1 [orig:207 _121 ] [207]))) "CALRH2.f":119 838 {*fop_sf_comm}
     (nil))
(insn 347 346 348 10 (set (reg/f:DI 0 ax [354])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -680 [0xfffffffffffffd58])) [10 q1+0 S8 A64])) "CALRH2.f":119 85 {*movdi_internal}
     (nil))
(insn 348 347 349 10 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:215 _129 ] [215])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [354])) [3 *q1_242(D) S4 A32])
        (reg:SF 21 xmm0 [orig:216 _130 ] [216])) "CALRH2.f":119 131 {*movsf_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              9
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 270 276
;; lr  def 	 17 [flags] 217 218 219 220 221 222 223 224 355 356
(code_label 349 348 350 11 8 (nil) [1 uses])
(note 350 349 351 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 351 350 352 11 (set (reg:SI 0 ax [orig:217 j.58_131 ] [217])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":121 86 {*movsi_internal}
     (nil))
(insn 352 351 353 11 (set (reg:DI 0 ax [orig:218 _132 ] [218])
        (sign_extend:DI (reg:SI 0 ax [orig:217 j.58_131 ] [217]))) "CALRH2.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 353 352 354 11 (parallel [
            (set (reg:DI 0 ax [orig:219 _133 ] [219])
                (mult:DI (reg:DI 0 ax [orig:218 _132 ] [218])
                    (reg:DI 3 bx [orig:270 stride.12_197 ] [270])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":121 349 {*muldi3_1}
     (nil))
(insn 354 353 355 11 (parallel [
            (set (reg:DI 1 dx [orig:220 _134 ] [220])
                (plus:DI (reg:DI 41 r12 [orig:276 offset.13_204 ] [276])
                    (reg:DI 0 ax [orig:219 _133 ] [219])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":121 222 {*adddi_1}
     (nil))
(insn 355 354 356 11 (set (reg:SI 0 ax [orig:221 i.59_135 ] [221])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":121 86 {*movsi_internal}
     (nil))
(insn 356 355 357 11 (set (reg:DI 0 ax [orig:222 _136 ] [222])
        (sign_extend:DI (reg:SI 0 ax [orig:221 i.59_135 ] [221]))) "CALRH2.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 357 356 358 11 (parallel [
            (set (reg:DI 1 dx [orig:223 _137 ] [223])
                (plus:DI (reg:DI 1 dx [orig:220 _134 ] [220])
                    (reg:DI 0 ax [orig:222 _136 ] [222])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":121 222 {*adddi_1}
     (nil))
(insn 358 357 359 11 (set (reg/f:DI 0 ax [355])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 rh+0 S8 A64])) "CALRH2.f":121 85 {*movdi_internal}
     (nil))
(insn 359 358 360 11 (set (reg:SF 22 xmm1 [orig:224 _138 ] [224])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:223 _137 ] [223])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [355])) [3 *rh_243(D) S4 A32])) "CALRH2.f":121 131 {*movsf_internal}
     (nil))
(insn 360 359 361 11 (set (reg:SF 21 xmm0 [356])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "CALRH2.f":121 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.99999977648258209228515625e-3 [0x0.a3d70ap-6])
        (nil)))
(insn 361 360 362 11 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [356])
            (reg:SF 22 xmm1 [orig:224 _138 ] [224]))) "CALRH2.f":121 53 {*cmpisf}
     (nil))
(jump_insn 362 361 366 11 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 397)
            (pc))) "CALRH2.f":121 682 {*jcc}
     (nil)
 -> 397)
;;  succ:       12 (FALLTHRU)
;;              13
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 270 276 278 284
;; lr  def 	 17 [flags] 225 226 227 228 229 230 231 232 233 234 235 236 237 238 239 240 241 242 243 244 245 246 247 248 357 358 359 360
(note 366 362 367 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 367 366 368 12 (set (reg:SI 0 ax [orig:225 j.60_139 ] [225])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":122 86 {*movsi_internal}
     (nil))
(insn 368 367 369 12 (set (reg:DI 0 ax [orig:226 _140 ] [226])
        (sign_extend:DI (reg:SI 0 ax [orig:225 j.60_139 ] [225]))) "CALRH2.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 369 368 370 12 (parallel [
            (set (reg:DI 0 ax [orig:227 _141 ] [227])
                (mult:DI (reg:DI 0 ax [orig:226 _140 ] [226])
                    (reg:DI 3 bx [orig:270 stride.12_197 ] [270])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":122 349 {*muldi3_1}
     (nil))
(insn 370 369 371 12 (parallel [
            (set (reg:DI 1 dx [orig:228 _142 ] [228])
                (plus:DI (reg:DI 41 r12 [orig:276 offset.13_204 ] [276])
                    (reg:DI 0 ax [orig:227 _141 ] [227])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":122 222 {*adddi_1}
     (nil))
(insn 371 370 372 12 (set (reg:SI 0 ax [orig:229 i.61_143 ] [229])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":122 86 {*movsi_internal}
     (nil))
(insn 372 371 373 12 (set (reg:DI 0 ax [orig:230 _144 ] [230])
        (sign_extend:DI (reg:SI 0 ax [orig:229 i.61_143 ] [229]))) "CALRH2.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 373 372 374 12 (parallel [
            (set (reg:DI 1 dx [orig:231 _145 ] [231])
                (plus:DI (reg:DI 1 dx [orig:228 _142 ] [228])
                    (reg:DI 0 ax [orig:230 _144 ] [230])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":122 222 {*adddi_1}
     (nil))
(insn 374 373 375 12 (set (reg/f:DI 0 ax [357])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 rh+0 S8 A64])) "CALRH2.f":122 85 {*movdi_internal}
     (nil))
(insn 375 374 376 12 (set (reg:SF 21 xmm0 [358])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "CALRH2.f":122 131 {*movsf_internal}
     (nil))
(insn 376 375 377 12 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:231 _145 ] [231])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [357])) [3 *rh_243(D) S4 A32])
        (reg:SF 21 xmm0 [358])) "CALRH2.f":122 131 {*movsf_internal}
     (nil))
(insn 377 376 378 12 (set (reg:SI 0 ax [orig:232 j.62_146 ] [232])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":123 86 {*movsi_internal}
     (nil))
(insn 378 377 379 12 (set (reg:DI 0 ax [orig:233 _147 ] [233])
        (sign_extend:DI (reg:SI 0 ax [orig:232 j.62_146 ] [232]))) "CALRH2.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 379 378 380 12 (parallel [
            (set (reg:DI 0 ax [orig:234 _148 ] [234])
                (mult:DI (reg:DI 0 ax [orig:233 _147 ] [233])
                    (reg:DI 3 bx [orig:270 stride.12_197 ] [270])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":123 349 {*muldi3_1}
     (nil))
(insn 380 379 381 12 (parallel [
            (set (reg:DI 1 dx [orig:235 _149 ] [235])
                (plus:DI (reg:DI 41 r12 [orig:276 offset.13_204 ] [276])
                    (reg:DI 0 ax [orig:234 _148 ] [234])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":123 222 {*adddi_1}
     (nil))
(insn 381 380 382 12 (set (reg:SI 0 ax [orig:236 i.63_150 ] [236])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":123 86 {*movsi_internal}
     (nil))
(insn 382 381 383 12 (set (reg:DI 0 ax [orig:237 _151 ] [237])
        (sign_extend:DI (reg:SI 0 ax [orig:236 i.63_150 ] [236]))) "CALRH2.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 383 382 384 12 (parallel [
            (set (reg:DI 1 dx [orig:238 _152 ] [238])
                (plus:DI (reg:DI 1 dx [orig:235 _149 ] [235])
                    (reg:DI 0 ax [orig:237 _151 ] [237])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":123 222 {*adddi_1}
     (nil))
(insn 384 383 385 12 (set (reg/f:DI 0 ax [359])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -696 [0xfffffffffffffd48])) [10 rh+0 S8 A64])) "CALRH2.f":123 85 {*movdi_internal}
     (nil))
(insn 385 384 386 12 (set (reg:SF 22 xmm1 [orig:239 _153 ] [239])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:238 _152 ] [238])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [359])) [3 *rh_243(D) S4 A32])) "CALRH2.f":123 131 {*movsf_internal}
     (nil))
(insn 386 385 387 12 (set (reg:SF 21 xmm0 [orig:240 qc.64_154 ] [240])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -124 [0xffffffffffffff84])) [3 qc+0 S4 A32])) "CALRH2.f":123 131 {*movsf_internal}
     (nil))
(insn 387 386 388 12 (set (reg:SI 0 ax [orig:241 j.65_155 ] [241])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":123 86 {*movsi_internal}
     (nil))
(insn 388 387 389 12 (set (reg:DI 0 ax [orig:242 _156 ] [242])
        (sign_extend:DI (reg:SI 0 ax [orig:241 j.65_155 ] [241]))) "CALRH2.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 389 388 483 12 (parallel [
            (set (reg:DI 0 ax [orig:243 _157 ] [243])
                (mult:DI (reg:DI 0 ax [orig:242 _156 ] [242])
                    (reg:DI 44 r15 [orig:278 stride.7_207 ] [278])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":123 349 {*muldi3_1}
     (nil))
(insn 483 389 390 12 (set (reg:DI 2 cx [orig:284 offset.8_214 ] [284])
        (mem/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -752 [0xfffffffffffffd10])) [14 %sfp+-704 S8 A128])) "CALRH2.f":123 85 {*movdi_internal}
     (nil))
(insn 390 483 391 12 (parallel [
            (set (reg:DI 1 dx [orig:244 _158 ] [244])
                (plus:DI (reg:DI 2 cx [orig:284 offset.8_214 ] [284])
                    (reg:DI 0 ax [orig:243 _157 ] [243])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":123 222 {*adddi_1}
     (nil))
(insn 391 390 392 12 (set (reg:SI 0 ax [orig:245 i.66_159 ] [245])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":123 86 {*movsi_internal}
     (nil))
(insn 392 391 393 12 (set (reg:DI 0 ax [orig:246 _160 ] [246])
        (sign_extend:DI (reg:SI 0 ax [orig:245 i.66_159 ] [245]))) "CALRH2.f":123 149 {*extendsidi2_rex64}
     (nil))
(insn 393 392 394 12 (parallel [
            (set (reg:DI 1 dx [orig:247 _161 ] [247])
                (plus:DI (reg:DI 1 dx [orig:244 _158 ] [244])
                    (reg:DI 0 ax [orig:246 _160 ] [246])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":123 222 {*adddi_1}
     (nil))
(insn 394 393 395 12 (set (reg:SF 21 xmm0 [orig:248 _162 ] [248])
        (mult:SF (reg:SF 21 xmm0 [orig:240 qc.64_154 ] [240])
            (reg:SF 22 xmm1 [orig:239 _153 ] [239]))) "CALRH2.f":123 838 {*fop_sf_comm}
     (nil))
(insn 395 394 396 12 (set (reg/f:DI 0 ax [360])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -680 [0xfffffffffffffd58])) [10 q1+0 S8 A64])) "CALRH2.f":123 85 {*movdi_internal}
     (nil))
(insn 396 395 397 12 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:247 _161 ] [247])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [360])) [3 *q1_242(D) S4 A32])
        (reg:SF 21 xmm0 [orig:248 _162 ] [248])) "CALRH2.f":123 131 {*movsf_internal}
     (nil))
;;  succ:       13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 17, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;;              6
;;              11
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 249 250
(code_label 397 396 398 13 4 (nil) [2 uses])
(note 398 397 399 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 399 398 400 13 (set (reg:SI 0 ax [orig:249 i.67_163 ] [249])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])) "CALRH2.f":88 86 {*movsi_internal}
     (nil))
(insn 400 399 401 13 (parallel [
            (set (reg:SI 0 ax [orig:250 _164 ] [250])
                (plus:SI (reg:SI 0 ax [orig:249 i.67_163 ] [249])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":88 221 {*addsi_1}
     (nil))
(insn 401 400 433 13 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [2 i+0 S4 A32])
        (reg:SI 0 ax [orig:250 _164 ] [250])) "CALRH2.f":88 86 {*movsi_internal}
     (nil))
(jump_insn 433 401 434 13 (set (pc)
        (label_ref 402)) "CALRH2.f":88 683 {jump}
     (nil)
 -> 402)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278

(barrier 434 433 441)
;; basic block 17, loop depth 0, maybe hot
;;  prev block 13, next block 14, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 441 434 440 17 19 (nil) [1 uses])
(note 440 441 442 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 442 440 405 17 (const_int 0 [0]) "CALRH2.f":89 718 {nop}
     (nil))
;;  succ:       14 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278

;; basic block 14, loop depth 0, maybe hot
;;  prev block 17, next block 16, flags: (RTL, MODIFIED)
;;  pred:       17 [always]  (FALLTHRU)
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 251 252
(code_label 405 442 406 14 3 (nil) [0 uses])
(note 406 405 407 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 407 406 408 14 (set (reg:SI 0 ax [orig:251 j.68_165 ] [251])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])) "CALRH2.f":87 86 {*movsi_internal}
     (nil))
(insn 408 407 409 14 (parallel [
            (set (reg:SI 0 ax [orig:252 _166 ] [252])
                (plus:SI (reg:SI 0 ax [orig:251 j.68_165 ] [251])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALRH2.f":87 221 {*addsi_1}
     (nil))
(insn 409 408 435 14 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [2 j+0 S4 A64])
        (reg:SI 0 ax [orig:252 _166 ] [252])) "CALRH2.f":87 86 {*movsi_internal}
     (nil))
(jump_insn 435 409 436 14 (set (pc)
        (label_ref 410)) "CALRH2.f":87 683 {jump}
     (nil)
 -> 410)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 254 262 270 276 278

(barrier 436 435 438)
;; basic block 16, loop depth 0, maybe hot
;;  prev block 14, next block 15, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 438 436 437 16 18 (nil) [1 uses])
(note 437 438 439 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 439 437 413 16 (const_int 0 [0]) "CALRH2.f":88 718 {nop}
     (nil))
;;  succ:       15 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 15, loop depth 0, maybe hot
;;  prev block 16, next block 1, flags: (RTL, MODIFIED)
;;  pred:       16 [always]  (FALLTHRU)
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 413 439 414 15 2 (nil) [0 uses])
(note 414 413 432 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 432 414 443 15 (const_int 0 [0]) "CALRH2.f":130 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 443 432 0 NOTE_INSN_DELETED)
