
;; Function calstrm (calstrm_, funcdef_no=0, decl_uid=3770, cgraph_uid=0, symbol_order=0)

calstrm (real(kind=4)[29631] * restrict z1d, real(kind=4)[29631] * restrict strm)
{
  logical(kind=4) D.3938;
  logical(kind=4) D.3935;
  integer(kind=4) D.3932;
  integer(kind=4) D.3931;
  integer(kind=4) j;
  integer(kind=4) i;
  real(kind=4) gof0;
  real(kind=4) f0;
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static integer(kind=4) nunit [value-expr: mapot.nunit];
  static integer(kind=4) iunit [value-expr: mapot.iunit];
  static integer(kind=4) munit [value-expr: mapot.munit];
  static integer(kind=4) lunit [value-expr: mapot.lunit];
  static integer(kind=4) kunit [value-expr: mapot.kunit];
  static real(kind=4) sphi0 [value-expr: mapot.sphi0];
  static real(kind=4) cphi0 [value-expr: mapot.cphi0];
  static real(kind=4) erlam0 [value-expr: mapot.erlam0];
  static real(kind=4) tshde[999999] [value-expr: mapot.tshde];
  static real(kind=4) eta[39] [value-expr: mapot.eta];
  static real(kind=4) aeta[38] [value-expr: mapot.aeta];
  static real(kind=4) deta[38] [value-expr: mapot.deta];
  static real(kind=4) alsl[22] [value-expr: mapot.alsl];
  static real(kind=4) spl[22] [value-expr: mapot.spl];
  static real(kind=4) z0slp [value-expr: mapot.z0slp];
  static real(kind=4) dislp [value-expr: mapot.dislp];
  static real(kind=4) y1p [value-expr: mapot.y1p];
  static real(kind=4) x1p [value-expr: mapot.x1p];
  static real(kind=4) dp30 [value-expr: mapot.dp30];
  static real(kind=4) cmld [value-expr: mapot.cmld];
  static real(kind=4) dphd [value-expr: mapot.dphd];
  static real(kind=4) dlmd [value-expr: mapot.dlmd];
  static real(kind=4) tph0d [value-expr: mapot.tph0d];
  static real(kind=4) tlm0d [value-expr: mapot.tlm0d];
  static real(kind=4) sbd [value-expr: mapot.sbd];
  static real(kind=4) wbd [value-expr: mapot.wbd];
  static real(kind=4) tsph [value-expr: mapot.tsph];
  static real(kind=4) pt [value-expr: mapot.pt];
  static real(kind=4) r [value-expr: mapot.r];
  static integer(kind=4) ishde[999999] [value-expr: mapot.ishde];
  static integer(kind=4) iym [value-expr: mapot.iym];
  static integer(kind=4) ixm [value-expr: mapot.ixm];
  static integer(kind=4) lsl [value-expr: mapot.lsl];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static logical(kind=4) restrt [value-expr: ctlblk.restrt];
  static logical(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static logical(kind=4) run [value-expr: ctlblk.run];
  static logical(kind=4) sigma [value-expr: ctlblk.sigma];
  real(kind=4) _1;
  real(kind=4) _2;
  real(kind=4) _3;
  integer(kind=8) _4;
  integer(kind=8) _5;
  integer(kind=8) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  real(kind=4) _9;
  integer(kind=8) _10;
  integer(kind=8) _11;
  integer(kind=8) _12;
  integer(kind=8) _13;
  integer(kind=8) _14;
  real(kind=4) _15;
  integer(kind=4) _23;
  integer(kind=4) _24;
  logical(kind=4) _26;
  logical(kind=4) _28;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = mapot.tph0d;
  _2 = _1 * 1.7453290522098541259765625e-2;
  _3 = __builtin_sinf (_2);
  f0_21 = _3 * 1.458399929106235504150390625e-4;
  gof0_22 = 9.80000019073486328125e+0 / f0_21;
  _23 = parallel.jsta;
  _24 = parallel.jend;
  j_25 = _23;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # j_17 = PHI <j_25(2), j_33(7)>
  _26 = j_17 > _24;
  if (_26 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i_27 = 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                6
  # i_16 = PHI <i_27(4), i_32(6)>
  _28 = i_16 > 119;
  if (_28 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _4 = (integer(kind=8)) j_17;
  _5 = _4 * 119;
  _6 = (integer(kind=8)) i_16;
  _7 = _5 + _6;
  _8 = _7 + -120;
  _9 = *z1d_29(D)[_8];
  _10 = (integer(kind=8)) j_17;
  _11 = _10 * 119;
  _12 = (integer(kind=8)) i_16;
  _13 = _11 + _12;
  _14 = _13 + -120;
  _15 = gof0_22 * _9;
  *strm_30(D)[_14] = _15;
  i_32 = i_16 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 7, loop depth 1
;;    pred:       5
  j_33 = j_17 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       3
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L8>:
  return;
;;    succ:       EXIT

}



Partition map 

Partition 1 (_1 - 1 )
Partition 2 (_2 - 2 )
Partition 3 (_3 - 3 )
Partition 4 (_4 - 4 )
Partition 5 (_5 - 5 )
Partition 6 (_6 - 6 )
Partition 7 (_7 - 7 )
Partition 8 (_8 - 8 )
Partition 9 (_9 - 9 )
Partition 10 (_10 - 10 )
Partition 11 (_11 - 11 )
Partition 12 (_12 - 12 )
Partition 13 (_13 - 13 )
Partition 14 (_14 - 14 )
Partition 15 (_15 - 15 )
Partition 16 (i_16 - 16 )
Partition 17 (j_17 - 17 )
Partition 21 (f0_21 - 21 )
Partition 22 (gof0_22 - 22 )
Partition 23 (_23 - 23 )
Partition 24 (_24 - 24 )
Partition 25 (j_25 - 25 )
Partition 26 (_26 - 26 )
Partition 27 (i_27 - 27 )
Partition 28 (_28 - 28 )
Partition 29 (z1d_29(D) - 29 )
Partition 30 (strm_30(D) - 30 )
Partition 32 (i_32 - 32 )
Partition 33 (j_33 - 33 )


Coalescible Partition map 

Partition 0, base 0 (i_16 - 16 27 32 )
Partition 1, base 1 (j_17 - 17 25 33 )
Partition 4, base 2 (z1d_29(D) - 29 )
Partition 5, base 3 (strm_30(D) - 30 )


Partition map 

Partition 0 (i_16 - 16 )
Partition 1 (j_17 - 17 )
Partition 2 (j_25 - 25 )
Partition 3 (i_27 - 27 )
Partition 4 (z1d_29(D) - 29 )
Partition 5 (strm_30(D) - 30 )
Partition 6 (i_32 - 32 )
Partition 7 (j_33 - 33 )


Conflict graph:

After sorting:
Sorted Coalesce list:
(2147483646, 0) j_17 <-> j_25
(2147483646, 0) j_17 <-> j_33
(2147483646, 0) i_16 <-> i_27
(2147483646, 0) i_16 <-> i_32

Partition map 

Partition 0 (i_16 - 16 )
Partition 1 (j_17 - 17 )
Partition 2 (j_25 - 25 )
Partition 3 (i_27 - 27 )
Partition 4 (z1d_29(D) - 29 )
Partition 5 (strm_30(D) - 30 )
Partition 6 (i_32 - 32 )
Partition 7 (j_33 - 33 )

Coalesce list: (17)j_17 & (25)j_25 [map: 1, 2] : Success -> 1
Coalesce list: (17)j_17 & (33)j_33 [map: 1, 7] : Success -> 1
Coalesce list: (16)i_16 & (27)i_27 [map: 0, 3] : Success -> 0
Coalesce list: (16)i_16 & (32)i_32 [map: 0, 6] : Success -> 0
After Coalescing:

Partition map 

Partition 0 (_1 - 1 )
Partition 1 (_2 - 2 )
Partition 2 (_3 - 3 )
Partition 3 (_4 - 4 )
Partition 4 (_5 - 5 )
Partition 5 (_6 - 6 )
Partition 6 (_7 - 7 )
Partition 7 (_8 - 8 )
Partition 8 (_9 - 9 )
Partition 9 (_10 - 10 )
Partition 10 (_11 - 11 )
Partition 11 (_12 - 12 )
Partition 12 (_13 - 13 )
Partition 13 (_14 - 14 )
Partition 14 (_15 - 15 )
Partition 15 (i_16 - 16 27 32 )
Partition 16 (j_17 - 17 25 33 )
Partition 17 (f0_21 - 21 )
Partition 18 (gof0_22 - 22 )
Partition 19 (_23 - 23 )
Partition 20 (_24 - 24 )
Partition 21 (_26 - 26 )
Partition 22 (_28 - 28 )
Partition 23 (z1d_29(D) - 29 )
Partition 24 (strm_30(D) - 30 )

calstrm (real(kind=4)[29631] * restrict z1d, real(kind=4)[29631] * restrict strm)
{
  logical(kind=4) D.3938;
  logical(kind=4) D.3935;
  integer(kind=4) D.3932;
  integer(kind=4) D.3931;
  integer(kind=4) j;
  integer(kind=4) i;
  real(kind=4) gof0;
  real(kind=4) f0;
  static integer(kind=4) jend_2u [value-expr: parallel.jend_2u];
  static integer(kind=4) jsta_2l [value-expr: parallel.jsta_2l];
  static integer(kind=4) idsp[1024] [value-expr: parallel.idsp];
  static integer(kind=4) icnt[1024] [value-expr: parallel.icnt];
  static integer(kind=4) idn [value-expr: parallel.idn];
  static integer(kind=4) iup [value-expr: parallel.iup];
  static integer(kind=4) jend_m2 [value-expr: parallel.jend_m2];
  static integer(kind=4) jsta_m2 [value-expr: parallel.jsta_m2];
  static integer(kind=4) jend_m [value-expr: parallel.jend_m];
  static integer(kind=4) jsta_m [value-expr: parallel.jsta_m];
  static integer(kind=4) jend [value-expr: parallel.jend];
  static integer(kind=4) jsta [value-expr: parallel.jsta];
  static integer(kind=4) me [value-expr: parallel.me];
  static integer(kind=4) num_procs [value-expr: parallel.num_procs];
  static integer(kind=4) nunit [value-expr: mapot.nunit];
  static integer(kind=4) iunit [value-expr: mapot.iunit];
  static integer(kind=4) munit [value-expr: mapot.munit];
  static integer(kind=4) lunit [value-expr: mapot.lunit];
  static integer(kind=4) kunit [value-expr: mapot.kunit];
  static real(kind=4) sphi0 [value-expr: mapot.sphi0];
  static real(kind=4) cphi0 [value-expr: mapot.cphi0];
  static real(kind=4) erlam0 [value-expr: mapot.erlam0];
  static real(kind=4) tshde[999999] [value-expr: mapot.tshde];
  static real(kind=4) eta[39] [value-expr: mapot.eta];
  static real(kind=4) aeta[38] [value-expr: mapot.aeta];
  static real(kind=4) deta[38] [value-expr: mapot.deta];
  static real(kind=4) alsl[22] [value-expr: mapot.alsl];
  static real(kind=4) spl[22] [value-expr: mapot.spl];
  static real(kind=4) z0slp [value-expr: mapot.z0slp];
  static real(kind=4) dislp [value-expr: mapot.dislp];
  static real(kind=4) y1p [value-expr: mapot.y1p];
  static real(kind=4) x1p [value-expr: mapot.x1p];
  static real(kind=4) dp30 [value-expr: mapot.dp30];
  static real(kind=4) cmld [value-expr: mapot.cmld];
  static real(kind=4) dphd [value-expr: mapot.dphd];
  static real(kind=4) dlmd [value-expr: mapot.dlmd];
  static real(kind=4) tph0d [value-expr: mapot.tph0d];
  static real(kind=4) tlm0d [value-expr: mapot.tlm0d];
  static real(kind=4) sbd [value-expr: mapot.sbd];
  static real(kind=4) wbd [value-expr: mapot.wbd];
  static real(kind=4) tsph [value-expr: mapot.tsph];
  static real(kind=4) pt [value-expr: mapot.pt];
  static real(kind=4) r [value-expr: mapot.r];
  static integer(kind=4) ishde[999999] [value-expr: mapot.ishde];
  static integer(kind=4) iym [value-expr: mapot.iym];
  static integer(kind=4) ixm [value-expr: mapot.ixm];
  static integer(kind=4) lsl [value-expr: mapot.lsl];
  static logical(kind=4) spline [value-expr: ctlblk.spline];
  static integer(kind=4) nradl [value-expr: ctlblk.nradl];
  static integer(kind=4) nrads [value-expr: ctlblk.nrads];
  static integer(kind=4) nphs [value-expr: ctlblk.nphs];
  static integer(kind=4) ncp [value-expr: ctlblk.ncp];
  static integer(kind=4) nshde [value-expr: ctlblk.nshde];
  static integer(kind=4) nboco [value-expr: ctlblk.nboco];
  static integer(kind=4) idtad [value-expr: ctlblk.idtad];
  static integer(kind=4) nprec [value-expr: ctlblk.nprec];
  static integer(kind=4) nddamp [value-expr: ctlblk.nddamp];
  static integer(kind=4) ntstm [value-expr: ctlblk.ntstm];
  static integer(kind=4) ntsd [value-expr: ctlblk.ntsd];
  static real(kind=4) dt [value-expr: ctlblk.dt];
  static integer(kind=4) iout [value-expr: ctlblk.iout];
  static integer(kind=4) list [value-expr: ctlblk.list];
  static integer(kind=4) nbc [value-expr: ctlblk.nbc];
  static integer(kind=4) nfcst [value-expr: ctlblk.nfcst];
  static logical(kind=4) restrt [value-expr: ctlblk.restrt];
  static logical(kind=4) first [value-expr: ctlblk.first];
  static integer(kind=4) ihrst [value-expr: ctlblk.ihrst];
  static integer(kind=4) idat[3] [value-expr: ctlblk.idat];
  static logical(kind=4) run [value-expr: ctlblk.run];
  static logical(kind=4) sigma [value-expr: ctlblk.sigma];
  real(kind=4) _1;
  real(kind=4) _2;
  real(kind=4) _3;
  integer(kind=8) _4;
  integer(kind=8) _5;
  integer(kind=8) _6;
  integer(kind=8) _7;
  integer(kind=8) _8;
  real(kind=4) _9;
  integer(kind=8) _10;
  integer(kind=8) _11;
  integer(kind=8) _12;
  integer(kind=8) _13;
  integer(kind=8) _14;
  real(kind=4) _15;
  integer(kind=4) _23;
  integer(kind=4) _24;
  logical(kind=4) _26;
  logical(kind=4) _28;

;;   basic block 2, loop depth 0
;;    pred:       ENTRY
  _1 = mapot.tph0d;
  _2 = _1 * 1.7453290522098541259765625e-2;
  _3 = __builtin_sinf (_2);
  f0_21 = _3 * 1.458399929106235504150390625e-4;
  gof0_22 = 9.80000019073486328125e+0 / f0_21;
  _23 = parallel.jsta;
  _24 = parallel.jend;
  j_25 = _23;
;;    succ:       3

;;   basic block 3, loop depth 1
;;    pred:       2
;;                7
  # j_17 = PHI <j_25(2), j_33(7)>
  _26 = j_17 > _24;
  if (_26 != 0)
    goto <bb 8>; [INV]
  else
    goto <bb 4>; [INV]
;;    succ:       8
;;                4

;;   basic block 4, loop depth 1
;;    pred:       3
  i_27 = 1;
;;    succ:       5

;;   basic block 5, loop depth 2
;;    pred:       4
;;                6
  # i_16 = PHI <i_27(4), i_32(6)>
  _28 = i_16 > 119;
  if (_28 != 0)
    goto <bb 7>; [INV]
  else
    goto <bb 6>; [INV]
;;    succ:       7
;;                6

;;   basic block 6, loop depth 2
;;    pred:       5
  _4 = (integer(kind=8)) j_17;
  _5 = _4 * 119;
  _6 = (integer(kind=8)) i_16;
  _7 = _5 + _6;
  _8 = _7 + -120;
  _9 = *z1d_29(D)[_8];
  _10 = (integer(kind=8)) j_17;
  _11 = _10 * 119;
  _12 = (integer(kind=8)) i_16;
  _13 = _11 + _12;
  _14 = _13 + -120;
  _15 = gof0_22 * _9;
  *strm_30(D)[_14] = _15;
  i_32 = i_16 + 1;
  goto <bb 5>; [INV]
;;    succ:       5

;;   basic block 7, loop depth 1
;;    pred:       5
  j_33 = j_17 + 1;
  goto <bb 3>; [INV]
;;    succ:       3

;;   basic block 8, loop depth 0
;;    pred:       3
;;    succ:       9

;;   basic block 9, loop depth 0
;;    pred:       8
<L8>:
  return;
;;    succ:       EXIT

}



;; Generating RTL for gimple basic block 2

;; _1 = mapot.tph0d;

(insn 7 6 8 (set (reg/f:DI 106)
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7fd0b9c63870 mapot>)) "CALSTRM.f":1 -1
     (nil))

(insn 8 7 0 (set (reg:SF 87 [ _1 ])
        (mem/c:SF (plus:DI (reg/f:DI 106)
                (const_int 4000032 [0x3d0920])) [2 mapot.tph0d+0 S4 A128])) "CALSTRM.f":1 -1
     (nil))

;; _2 = _1 * 1.7453290522098541259765625e-2;

(insn 9 8 10 (set (reg:SF 107)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALSTRM.f":66 -1
     (expr_list:REG_EQUAL (const_double:SF 1.7453290522098541259765625e-2 [0x0.8efa34p-5])
        (nil)))

(insn 10 9 0 (set (reg:SF 88 [ _2 ])
        (mult:SF (reg:SF 87 [ _1 ])
            (reg:SF 107))) "CALSTRM.f":66 -1
     (nil))

;; _3 = __builtin_sinf (_2);

(insn 11 10 12 (set (reg:SF 21 xmm0)
        (reg:SF 88 [ _2 ])) "CALSTRM.f":66 -1
     (nil))

(call_insn/u 12 11 13 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x7fd0b9ad4500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "CALSTRM.f":66 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))

(insn 13 12 0 (set (reg:SF 89 [ _3 ])
        (reg:SF 21 xmm0)) "CALSTRM.f":66 -1
     (nil))

;; f0_21 = _3 * 1.458399929106235504150390625e-4;

(insn 14 13 15 (set (reg:SF 109)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALSTRM.f":66 -1
     (expr_list:REG_EQUAL (const_double:SF 1.458399929106235504150390625e-4 [0x0.98ecap-12])
        (nil)))

(insn 15 14 16 (set (reg:SF 108)
        (mult:SF (reg:SF 89 [ _3 ])
            (reg:SF 109))) "CALSTRM.f":66 -1
     (nil))

(insn 16 15 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 f0+0 S4 A32])
        (reg:SF 108)) "CALSTRM.f":66 -1
     (nil))

;; gof0_22 = 9.80000019073486328125e+0 / f0_21;

(insn 17 16 18 (set (reg:SF 111)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALSTRM.f":67 -1
     (expr_list:REG_EQUAL (const_double:SF 9.80000019073486328125e+0 [0x0.9ccccdp+4])
        (nil)))

(insn 18 17 19 (set (reg:SF 110)
        (div:SF (reg:SF 111)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 f0+0 S4 A32]))) "CALSTRM.f":67 -1
     (nil))

(insn 19 18 0 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 gof0+0 S4 A32])
        (reg:SF 110)) "CALSTRM.f":67 -1
     (nil))

;; _23 = parallel.jsta;

(insn 20 19 0 (set (reg:SI 102 [ _23 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd0b9c68bd0 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALSTRM.f":71 -1
     (nil))

;; _24 = parallel.jend;

(insn 21 20 0 (set (reg:SI 103 [ _24 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd0b9c68bd0 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALSTRM.f":71 -1
     (nil))

;; j_25 = _23;

(insn 22 21 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 102 [ _23 ])) "CALSTRM.f":71 -1
     (nil))

;; Generating RTL for gimple basic block 3

;; _26 = j_17 > _24;

(insn 24 23 25 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 103 [ _24 ]))) "CALSTRM.f":71 -1
     (nil))

(insn 25 24 26 (set (reg:QI 112)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALSTRM.f":71 -1
     (nil))

(insn 26 25 0 (set (reg:SI 104 [ _26 ])
        (zero_extend:SI (reg:QI 112))) "CALSTRM.f":71 -1
     (nil))

;; if (_26 != 0)

(insn 27 26 28 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ _26 ])
            (const_int 0 [0]))) "CALSTRM.f":71 -1
     (nil))

(jump_insn 28 27 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALSTRM.f":71 -1
     (nil))

;; Generating RTL for gimple basic block 4

;; i_27 = 1;

(insn 30 29 0 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALSTRM.f":72 -1
     (nil))

;; Generating RTL for gimple basic block 5

;; _28 = i_16 > 119;

(insn 32 31 33 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALSTRM.f":72 -1
     (nil))

(insn 33 32 34 (set (reg:QI 113)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALSTRM.f":72 -1
     (nil))

(insn 34 33 0 (set (reg:SI 105 [ _28 ])
        (zero_extend:SI (reg:QI 113))) "CALSTRM.f":72 -1
     (nil))

;; if (_28 != 0)

(insn 35 34 36 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ _28 ])
            (const_int 0 [0]))) "CALSTRM.f":72 -1
     (nil))

(jump_insn 36 35 0 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 0)
            (pc))) "CALSTRM.f":72 -1
     (nil))

;; Generating RTL for gimple basic block 6

;; _4 = (integer(kind=8)) j_17;

(insn 38 37 39 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALSTRM.f":73 -1
     (nil))

(insn 39 38 0 (set (reg:DI 90 [ _4 ])
        (sign_extend:DI (reg:SI 114))) "CALSTRM.f":73 -1
     (nil))

;; _5 = _4 * 119;

(insn 40 39 0 (parallel [
            (set (reg:DI 91 [ _5 ])
                (mult:DI (reg:DI 90 [ _4 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":73 -1
     (nil))

;; _6 = (integer(kind=8)) i_16;

(insn 41 40 42 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALSTRM.f":73 -1
     (nil))

(insn 42 41 0 (set (reg:DI 92 [ _6 ])
        (sign_extend:DI (reg:SI 115))) "CALSTRM.f":73 -1
     (nil))

;; _7 = _5 + _6;

(insn 43 42 0 (parallel [
            (set (reg:DI 93 [ _7 ])
                (plus:DI (reg:DI 91 [ _5 ])
                    (reg:DI 92 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":73 -1
     (nil))

;; _8 = _7 + -120;

(insn 44 43 0 (parallel [
            (set (reg:DI 94 [ _8 ])
                (plus:DI (reg:DI 93 [ _7 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":73 -1
     (nil))

;; _9 = *z1d_29(D)[_8];

(insn 45 44 46 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 z1d+0 S8 A64])) "CALSTRM.f":73 -1
     (nil))

(insn 46 45 0 (set (reg:SF 95 [ _9 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 94 [ _8 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 116)) [2 *z1d_29(D) S4 A32])) "CALSTRM.f":73 -1
     (nil))

;; _10 = (integer(kind=8)) j_17;

(insn 47 46 48 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALSTRM.f":73 -1
     (nil))

(insn 48 47 0 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 117))) "CALSTRM.f":73 -1
     (nil))

;; _11 = _10 * 119;

(insn 49 48 0 (parallel [
            (set (reg:DI 97 [ _11 ])
                (mult:DI (reg:DI 96 [ _10 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":73 -1
     (nil))

;; _12 = (integer(kind=8)) i_16;

(insn 50 49 51 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALSTRM.f":73 -1
     (nil))

(insn 51 50 0 (set (reg:DI 98 [ _12 ])
        (sign_extend:DI (reg:SI 118))) "CALSTRM.f":73 -1
     (nil))

;; _13 = _11 + _12;

(insn 52 51 0 (parallel [
            (set (reg:DI 99 [ _13 ])
                (plus:DI (reg:DI 97 [ _11 ])
                    (reg:DI 98 [ _12 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":73 -1
     (nil))

;; _14 = _13 + -120;

(insn 53 52 0 (parallel [
            (set (reg:DI 100 [ _14 ])
                (plus:DI (reg:DI 99 [ _13 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":73 -1
     (nil))

;; _15 = gof0_22 * _9;

(insn 54 53 0 (set (reg:SF 101 [ _15 ])
        (mult:SF (reg:SF 95 [ _9 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 gof0+0 S4 A32]))) "CALSTRM.f":73 -1
     (nil))

;; *strm_30(D)[_14] = _15;

(insn 55 54 56 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 strm+0 S8 A64])) "CALSTRM.f":73 -1
     (nil))

(insn 56 55 0 (set (mem:SF (plus:DI (mult:DI (reg:DI 100 [ _14 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 119)) [2 *strm_30(D) S4 A32])
        (reg:SF 101 [ _15 ])) "CALSTRM.f":73 -1
     (nil))

;; i_32 = i_16 + 1;

(insn 57 56 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":72 -1
     (nil))

;; Generating RTL for gimple basic block 7

;; 

(code_label 61 60 62 3 (nil) [0 uses])

(note 62 61 0 NOTE_INSN_BASIC_BLOCK)

;; j_33 = j_17 + 1;

(insn 63 62 0 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":71 -1
     (nil))

;; Generating RTL for gimple basic block 8

;; 

(code_label 67 66 68 2 (nil) [0 uses])

(note 68 67 0 NOTE_INSN_BASIC_BLOCK)

;; Generating RTL for gimple basic block 9

;; <L8>:

(code_label 69 68 70 6 (nil) [0 uses])

(note 70 69 0 NOTE_INSN_BASIC_BLOCK)


try_optimize_cfg iteration 1

Merging block 3 into block 2...
Merged blocks 2 and 3.
Merged 2 and 3 without moving.
Merging block 10 into block 9...
Merged blocks 9 and 10.
Merged 9 and 10 without moving.
Merging block 11 into block 9...
Merged blocks 9 and 11.
Merged 9 and 11 without moving.


try_optimize_cfg iteration 2

fix_loop_structure: fixing up loops for function


;;
;; Full RTL generated for this function:
;;
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 4, flags: (NEW, REACHABLE, RTL)
;;  pred:       ENTRY (FALLTHRU)
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 z1d+0 S8 A64])
        (reg:DI 5 di [ z1d ])) "CALSTRM.f":1 -1
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 strm+0 S8 A64])
        (reg:DI 4 si [ strm ])) "CALSTRM.f":1 -1
     (nil))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 106)
        (symbol_ref:DI ("mapot_") [flags 0x202]  <var_decl 0x7fd0b9c63870 mapot>)) "CALSTRM.f":1 -1
     (nil))
(insn 8 7 9 2 (set (reg:SF 87 [ _1 ])
        (mem/c:SF (plus:DI (reg/f:DI 106)
                (const_int 4000032 [0x3d0920])) [2 mapot.tph0d+0 S4 A128])) "CALSTRM.f":1 -1
     (nil))
(insn 9 8 10 2 (set (reg:SF 107)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALSTRM.f":66 -1
     (expr_list:REG_EQUAL (const_double:SF 1.7453290522098541259765625e-2 [0x0.8efa34p-5])
        (nil)))
(insn 10 9 11 2 (set (reg:SF 88 [ _2 ])
        (mult:SF (reg:SF 87 [ _1 ])
            (reg:SF 107))) "CALSTRM.f":66 -1
     (nil))
(insn 11 10 12 2 (set (reg:SF 21 xmm0)
        (reg:SF 88 [ _2 ])) "CALSTRM.f":66 -1
     (nil))
(call_insn/u 12 11 13 2 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("sinf") [flags 0x41]  <function_decl 0x7fd0b9ad4500 __builtin_sinf>) [0 __builtin_sinf S1 A8])
            (const_int 0 [0]))) "CALSTRM.f":66 -1
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 13 12 14 2 (set (reg:SF 89 [ _3 ])
        (reg:SF 21 xmm0)) "CALSTRM.f":66 -1
     (nil))
(insn 14 13 15 2 (set (reg:SF 109)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALSTRM.f":66 -1
     (expr_list:REG_EQUAL (const_double:SF 1.458399929106235504150390625e-4 [0x0.98ecap-12])
        (nil)))
(insn 15 14 16 2 (set (reg:SF 108)
        (mult:SF (reg:SF 89 [ _3 ])
            (reg:SF 109))) "CALSTRM.f":66 -1
     (nil))
(insn 16 15 17 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -12 [0xfffffffffffffff4])) [2 f0+0 S4 A32])
        (reg:SF 108)) "CALSTRM.f":66 -1
     (nil))
(insn 17 16 18 2 (set (reg:SF 111)
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALSTRM.f":67 -1
     (expr_list:REG_EQUAL (const_double:SF 9.80000019073486328125e+0 [0x0.9ccccdp+4])
        (nil)))
(insn 18 17 19 2 (set (reg:SF 110)
        (div:SF (reg:SF 111)
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -12 [0xfffffffffffffff4])) [2 f0+0 S4 A32]))) "CALSTRM.f":67 -1
     (nil))
(insn 19 18 20 2 (set (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -16 [0xfffffffffffffff0])) [2 gof0+0 S4 A32])
        (reg:SF 110)) "CALSTRM.f":67 -1
     (nil))
(insn 20 19 21 2 (set (reg:SI 102 [ _23 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd0b9c68bd0 parallel>)
                    (const_int 8 [0x8]))) [1 parallel.jsta+0 S4 A64])) "CALSTRM.f":71 -1
     (nil))
(insn 21 20 22 2 (set (reg:SI 103 [ _24 ])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7fd0b9c68bd0 parallel>)
                    (const_int 12 [0xc]))) [1 parallel.jend+0 S4 A32])) "CALSTRM.f":71 -1
     (nil))
(insn 22 21 64 2 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
        (reg:SI 102 [ _23 ])) "CALSTRM.f":71 -1
     (nil))
;;  succ:       4 (FALLTHRU)

;; basic block 4, loop depth 1, maybe hot
;;  prev block 2, next block 5, flags: (NEW, REACHABLE, RTL)
;;  pred:       2 (FALLTHRU)
;;              8 (DFS_BACK)
(code_label 64 22 23 4 5 (nil) [1 uses])
(note 23 64 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
            (reg:SI 103 [ _24 ]))) "CALSTRM.f":71 -1
     (nil))
(insn 25 24 26 4 (set (reg:QI 112)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALSTRM.f":71 -1
     (nil))
(insn 26 25 27 4 (set (reg:SI 104 [ _26 ])
        (zero_extend:SI (reg:QI 112))) "CALSTRM.f":71 -1
     (nil))
(insn 27 26 28 4 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 104 [ _26 ])
            (const_int 0 [0]))) "CALSTRM.f":71 -1
     (nil))
(jump_insn 28 27 29 4 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) "CALSTRM.f":71 -1
     (nil)
 -> 67)
;;  succ:       9
;;              5 (FALLTHRU)

;; basic block 5, loop depth 1, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL)
;;  pred:       4 (FALLTHRU)
(note 29 28 30 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 30 29 58 5 (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
        (const_int 1 [0x1])) "CALSTRM.f":72 -1
     (nil))
;;  succ:       6 (FALLTHRU)

;; basic block 6, loop depth 2, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL)
;;  pred:       5 (FALLTHRU)
;;              7 (DFS_BACK)
(code_label 58 30 31 6 4 (nil) [1 uses])
(note 31 58 32 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 32 31 33 6 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALSTRM.f":72 -1
     (nil))
(insn 33 32 34 6 (set (reg:QI 113)
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALSTRM.f":72 -1
     (nil))
(insn 34 33 35 6 (set (reg:SI 105 [ _28 ])
        (zero_extend:SI (reg:QI 113))) "CALSTRM.f":72 -1
     (nil))
(insn 35 34 36 6 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 105 [ _28 ])
            (const_int 0 [0]))) "CALSTRM.f":72 -1
     (nil))
(jump_insn 36 35 37 6 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 61)
            (pc))) "CALSTRM.f":72 -1
     (nil)
 -> 61)
;;  succ:       8
;;              7 (FALLTHRU)

;; basic block 7, loop depth 2, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL)
;;  pred:       6 (FALLTHRU)
(note 37 36 38 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 38 37 39 7 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALSTRM.f":73 -1
     (nil))
(insn 39 38 40 7 (set (reg:DI 90 [ _4 ])
        (sign_extend:DI (reg:SI 114))) "CALSTRM.f":73 -1
     (nil))
(insn 40 39 41 7 (parallel [
            (set (reg:DI 91 [ _5 ])
                (mult:DI (reg:DI 90 [ _4 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":73 -1
     (nil))
(insn 41 40 42 7 (set (reg:SI 115)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALSTRM.f":73 -1
     (nil))
(insn 42 41 43 7 (set (reg:DI 92 [ _6 ])
        (sign_extend:DI (reg:SI 115))) "CALSTRM.f":73 -1
     (nil))
(insn 43 42 44 7 (parallel [
            (set (reg:DI 93 [ _7 ])
                (plus:DI (reg:DI 91 [ _5 ])
                    (reg:DI 92 [ _6 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":73 -1
     (nil))
(insn 44 43 45 7 (parallel [
            (set (reg:DI 94 [ _8 ])
                (plus:DI (reg:DI 93 [ _7 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":73 -1
     (nil))
(insn 45 44 46 7 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -24 [0xffffffffffffffe8])) [3 z1d+0 S8 A64])) "CALSTRM.f":73 -1
     (nil))
(insn 46 45 47 7 (set (reg:SF 95 [ _9 ])
        (mem:SF (plus:DI (mult:DI (reg:DI 94 [ _8 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 116)) [2 *z1d_29(D) S4 A32])) "CALSTRM.f":73 -1
     (nil))
(insn 47 46 48 7 (set (reg:SI 117)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])) "CALSTRM.f":73 -1
     (nil))
(insn 48 47 49 7 (set (reg:DI 96 [ _10 ])
        (sign_extend:DI (reg:SI 117))) "CALSTRM.f":73 -1
     (nil))
(insn 49 48 50 7 (parallel [
            (set (reg:DI 97 [ _11 ])
                (mult:DI (reg:DI 96 [ _10 ])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":73 -1
     (nil))
(insn 50 49 51 7 (set (reg:SI 118)
        (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])) "CALSTRM.f":73 -1
     (nil))
(insn 51 50 52 7 (set (reg:DI 98 [ _12 ])
        (sign_extend:DI (reg:SI 118))) "CALSTRM.f":73 -1
     (nil))
(insn 52 51 53 7 (parallel [
            (set (reg:DI 99 [ _13 ])
                (plus:DI (reg:DI 97 [ _11 ])
                    (reg:DI 98 [ _12 ])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":73 -1
     (nil))
(insn 53 52 54 7 (parallel [
            (set (reg:DI 100 [ _14 ])
                (plus:DI (reg:DI 99 [ _13 ])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":73 -1
     (nil))
(insn 54 53 55 7 (set (reg:SF 101 [ _15 ])
        (mult:SF (reg:SF 95 [ _9 ])
            (mem/c:SF (plus:DI (reg/f:DI 82 virtual-stack-vars)
                    (const_int -16 [0xfffffffffffffff0])) [2 gof0+0 S4 A32]))) "CALSTRM.f":73 -1
     (nil))
(insn 55 54 56 7 (set (reg/f:DI 119)
        (mem/f/c:DI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                (const_int -32 [0xffffffffffffffe0])) [3 strm+0 S8 A64])) "CALSTRM.f":73 -1
     (nil))
(insn 56 55 57 7 (set (mem:SF (plus:DI (mult:DI (reg:DI 100 [ _14 ])
                    (const_int 4 [0x4]))
                (reg/f:DI 119)) [2 *strm_30(D) S4 A32])
        (reg:SF 101 [ _15 ])) "CALSTRM.f":73 -1
     (nil))
(insn 57 56 59 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -4 [0xfffffffffffffffc])) [1 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":72 -1
     (nil))
(jump_insn 59 57 60 7 (set (pc)
        (label_ref 58)) "CALSTRM.f":72 -1
     (nil)
 -> 58)
;;  succ:       6 (DFS_BACK)

(barrier 60 59 61)
;; basic block 8, loop depth 1, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL)
;;  pred:       6
(code_label 61 60 62 8 3 (nil) [1 uses])
(note 62 61 63 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 63 62 65 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                        (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 82 virtual-stack-vars)
                            (const_int -8 [0xfffffffffffffff8])) [1 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALSTRM.f":71 -1
     (nil))
(jump_insn 65 63 66 8 (set (pc)
        (label_ref 64)) "CALSTRM.f":71 -1
     (nil)
 -> 64)
;;  succ:       4 (DFS_BACK)

(barrier 66 65 67)
;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 1, flags: (NEW, REACHABLE, RTL)
;;  pred:       4
(code_label 67 66 68 9 2 (nil) [1 uses])
(note 68 67 73 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 73 68 0 9 (const_int 0 [0]) "CALSTRM.f":78 -1
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)

