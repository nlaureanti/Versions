
;; Function calwxt (calwxt_, funcdef_no=0, decl_uid=3778, cgraph_uid=0, symbol_order=0)


********** Local #1: **********

	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=192, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=0)
Can't eliminate 20 to 7 (offset=160, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=0)
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 2:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 3:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 4:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 5:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 6:  (0) m  (1) re {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=4: Bad operand -- refuse
          alt=5,overall=0,losers=0,rld_nregs=0
	 Choosing alt 5 in insn 7:  (0) m  (1) re {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 11:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 12:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 13:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 15:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 16:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 17:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 18:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 21:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 23:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 24:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 25:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 26:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 29:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 30:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 31:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 32:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 33:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 34
	 Choosing alt 0 in insn 34:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 35:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 36:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 37:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 38:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 39:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 40:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 41:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 42:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 43
	 Choosing alt 0 in insn 43:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 44:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 45:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 46:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 47:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 48:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 49:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 50:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 51:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 52
	 Choosing alt 0 in insn 52:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 53:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 54:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 55:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 56:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 57:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 58:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 59:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 60:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 61
	 Choosing alt 0 in insn 61:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 62:  (0) r  (1) r  (2) le {*adddi_1}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 63
	 Choosing alt 1 in insn 63:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 64:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 65:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 66:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 72:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 78:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 79:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 80:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 82:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 83:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 84:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 85:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 88:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 90:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 91:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 92:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 93:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 96:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 97:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 98:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 99:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 100:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 101
	 Choosing alt 0 in insn 101:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 102:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 103:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 104:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 105:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 106:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 107:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 108:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 109:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 110:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 111
	 Choosing alt 0 in insn 111:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 112:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 113:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 114:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 115:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 116:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 119:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 120:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 121:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 122:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 123:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 124
	 Choosing alt 0 in insn 124:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 125:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 126:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 127:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 128:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 129:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 130
	 Choosing alt 1 in insn 130:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 131:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 132:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 133:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 135:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 136:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 137:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 138:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 139:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 140:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 141:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 142:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 143:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 144
	 Choosing alt 0 in insn 144:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 145:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 146:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 147:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 148:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 149:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 150:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 151
	 Choosing alt 0 in insn 151:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 152:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 153:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 154:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 155:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 156:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 157:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 158:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 159:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 160:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 161:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 162:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 163:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 164:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 165:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 166
	 Choosing alt 0 in insn 166:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 167:  (0) r  (1) r  (2) le {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 168:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 169:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 170:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 171:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 172:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 173
	 Choosing alt 0 in insn 173:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 174:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 175:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 176:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 177:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 178:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 179:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 180:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 181:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 182:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 183:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 184
	 Choosing alt 0 in insn 184:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 185:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 186:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 187:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 188:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 189:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 190:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 192:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 193:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 194:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 195:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 198:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 199:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 200:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 201:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 202:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 203:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 204:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 205:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 206:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 207
	 Choosing alt 0 in insn 207:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 208:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 209:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 210:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 211:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 212:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 213:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 214:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 215:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 216:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 217:  (0) v  (1) vm {*cmpiusf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 218:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 219:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 220
	 Choosing alt 0 in insn 220:  (0) =r  (1) %0  (2) rme {*iorsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 221:  (0) r {*cmpsi_ccno_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 224:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 227:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 228:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 229:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 230:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 231:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 232:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 233:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 234:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 235:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 236:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 237
	 Choosing alt 0 in insn 237:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 238:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 239:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 240:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 241:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 242:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 243:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 244:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 245:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 246:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 247
	 Choosing alt 0 in insn 247:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 248:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 249:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 250:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 251:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 252:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 253:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 254:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 255:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 256:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 257:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 258:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 259
	 Choosing alt 1 in insn 259:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 260:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 261:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 262:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 265:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 266:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=6,losers=1,rld_nregs=1
	 Choosing alt 2 in insn 267:  (0) x  (1) 0  (2) xm {*fop_sf_1}
      Creating newreg=992 from oldreg=702, assigning class SSE_REGS to r992
  267: r992:SF=r992:SF-r703:SF
      REG_DEAD r703:SF
      REG_DEAD r702:SF
    Inserting insn reload before:
 1510: r992:SF=r702:SF
    Inserting insn reload after:
 1511: r191:SF=r992:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 268:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 269:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 272:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 273:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 274:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 275:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 276:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 277:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 278
	 Choosing alt 1 in insn 278:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 280:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 281
	 Choosing alt 1 in insn 281:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 283:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 285:  (1) rBwBz {*call_value}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=0,overall=1229,losers=4,rld_nregs=2
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
          alt=1,overall=628,losers=3,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=1214,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            Cycle danger: overall += LRA_MAX_REJECT
          alt=4,overall=1227,losers=2,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=621,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
          alt=8,overall=13,losers=1,rld_nregs=0
            Staticly defined alt reject+=6
          alt=9,overall=0,losers=0,rld_nregs=0
	 Choosing alt 9 in insn 286:  (0) ?r  (1) Yj {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 287:  (0) ?m  (1) rF {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 288:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 289:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 290
	 Choosing alt 1 in insn 290:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 292:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 293:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 295:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 296:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 297
	 Choosing alt 1 in insn 297:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 298:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 299:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 300:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 301:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 302:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 303:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 309:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 310:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 311:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 312:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 313:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 314
	 Choosing alt 0 in insn 314:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 315:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 316:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 317:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 318:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 324:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 325:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 326:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 327:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 328:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 329
	 Choosing alt 0 in insn 329:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 330:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 331:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 332:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 333:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 336:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 337:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 343:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 344:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 345:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 346:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 347:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 348
	 Choosing alt 0 in insn 348:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 349:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 350:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 351:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 352:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 353:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 359:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 360:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 361:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 362:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 363:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 364
	 Choosing alt 0 in insn 364:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 365:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 366:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 367:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 368:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 371:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 372:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 378:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 379:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 380:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 381:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 382:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 383
	 Choosing alt 0 in insn 383:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 384:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 385:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 386:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 387:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 390:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 391:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 392:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 393:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 394:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 395
	 Choosing alt 0 in insn 395:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 396:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 397:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 398:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 399:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 402:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 408:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 409:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 410:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 411:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 412:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 413
	 Choosing alt 0 in insn 413:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 414:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 415:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 416:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 417:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 418:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 419:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 420:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 421:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 422:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 423:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 424:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 425:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 426
	 Choosing alt 0 in insn 426:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 427:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 428:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 429:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 430:  (0) v  (1) vm {*cmpiusf}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 432:  (0) v  (1) vm {*cmpiusf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 438:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 439:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 445:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 446:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 447
	 Choosing alt 1 in insn 447:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 448:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 454:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 460:  (0) rm  (1) 0  (2) re {*addsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 466:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 467:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 468:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 470:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 471:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 472:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 473:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 476:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 478:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 479:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 480:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 481:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 484:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 485:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 486:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 487:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 488:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 489
	 Choosing alt 0 in insn 489:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 490:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 491:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 492:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 493:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 494:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 495:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 496:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 497:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 498
	 Choosing alt 0 in insn 498:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 499:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 500:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 501:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 502:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 503:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 506:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 507:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 508:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 509:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 510:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 511
	 Choosing alt 0 in insn 511:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 512:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 513:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 514:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 515:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 516:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 517:  (0) r  (1) rm {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 518:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 519:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 520:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 521:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 522:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 523:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 524:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 525
	 Choosing alt 0 in insn 525:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 526:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 527:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 528:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 529:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 530:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 531:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 532:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 533:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 534:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 535
	 Choosing alt 0 in insn 535:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 536:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 537:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 538:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 539:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 545:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 546:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 552:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 553:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 554:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 555:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 556:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 557
	 Choosing alt 0 in insn 557:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 558:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 559:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 560:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 561:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 562:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 563:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 564:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 565:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 566
	 Choosing alt 0 in insn 566:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 567:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 568:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 569:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 570:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 575:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 576:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 577:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 578:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 579:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 580
	 Choosing alt 0 in insn 580:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 581:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 582:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 583:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 584:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 585:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 586:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 587:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 588:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 589
	 Choosing alt 0 in insn 589:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 590:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 591:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 592:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 593:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 598:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 599:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 600:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 601:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 602:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 603
	 Choosing alt 0 in insn 603:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 604:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 605:  (0) r  (1) i {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 606:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 609:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 615:  (0) rm  (1) 0  (2) re {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 621:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 622:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 623:  (0) r  (1) rem {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 624:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 625:  (0) r  (1) i {*movdi_internal}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 627:  (0) r  (1) i {*movdi_internal}
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=1,overall=609,losers=1,rld_nregs=1
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=2,overall=609,losers=1,rld_nregs=1
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 630:  (0) q  (1) n {*movqi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 631:  (0) rBwBz {*call}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 632:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 633:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 634:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 636:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 637:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 638:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 639:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 642:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 644:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 645:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 646:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 647:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 650:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 651:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 652:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 653:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 654:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 655
	 Choosing alt 0 in insn 655:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 656:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 657:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 658:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 659:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 662:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 663:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 664:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 665:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 666:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 667
	 Choosing alt 0 in insn 667:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 668:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 669:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 670:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 671:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 672:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 673:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 674:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 675:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 676:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 677
	 Choosing alt 0 in insn 677:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 678:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 679:  (0) r  (1) i {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 680:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 681:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 682:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 683:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 684:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 685:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 686:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 687
	 Choosing alt 0 in insn 687:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 688:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 689:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 690:  (0) v  (1) m {*movsf_internal}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 691:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 692:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 693
	 Choosing alt 1 in insn 693:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 694:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 695:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 696:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 697:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 698:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 699:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 700:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 701:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 702:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 703:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 704
	 Choosing alt 0 in insn 704:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 705:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 706:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 707:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 708:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 709:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 710:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 711:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 712:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 713:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 714
	 Choosing alt 0 in insn 714:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 715:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 716:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 717:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 718:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 719:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 720:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 721:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 722:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 723:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 724:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 725:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 726:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 727:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 728:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 729:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 730:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 731:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 733:  (0) rm  (1) re {*cmpsi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 734:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 735:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 736:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 739:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 740:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 741:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 742:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 743:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 744
	 Choosing alt 0 in insn 744:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 745:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 746:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 747:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 748:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 749:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 750:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 751:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 752:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 753:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 754:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 755:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 756
	 Choosing alt 1 in insn 756:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 757:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 758:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 759:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 760:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 761:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 762:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 763:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 764:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 765:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 766:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 767
	 Choosing alt 0 in insn 767:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 768:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 769:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 770:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 771:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 772:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 773:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 774:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 775:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 776:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 777:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 778:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 779:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 780
	 Choosing alt 0 in insn 780:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 781:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 782:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 783:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 784:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 785:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 786:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 787
	 Choosing alt 1 in insn 787:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 789
	 Choosing alt 1 in insn 789:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 790:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 791:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=993 from oldreg=379, assigning class SSE_REGS to r993
  791: r993:SF=r993:SF*r844:SF
      REG_DEAD r844:SF
      REG_DEAD r379:SF
    Inserting insn reload before:
 1512: r993:SF=r379:SF
    Inserting insn reload after:
 1513: r380:SF=r993:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1513:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 792:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 793:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 795:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 797
	 Choosing alt 1 in insn 797:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=994 from oldreg=380, assigning class SSE_REGS to r994
      Making reload reg 994 for reg 380 optional
  797: r846:SF=r382:SF*r994:SF
      REG_DEAD r382:SF
      REG_DEAD r380:SF
    Inserting insn reload before:
 1514: r994:SF=r380:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1514:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 798:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 799:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 800:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 801:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 802:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 803:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 804:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 805:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 806:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 807:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 808
	 Choosing alt 0 in insn 808:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 809:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 810:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 811:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 812:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 813:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 815:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 816:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 817:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 818:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 819:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 820:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 821:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 822:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 823:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 824:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 825:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 826:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 827
	 Choosing alt 0 in insn 827:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 828:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 829:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 830:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 831:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 837:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 838:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 839:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 842:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 843:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 844:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 850:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 851:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 857:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 858:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 859:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 860:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 861:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 862
	 Choosing alt 0 in insn 862:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 863:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 864:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 865:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 866:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 867:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 868:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 869:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 870:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 871
	 Choosing alt 0 in insn 871:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 872:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 873:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 874:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 875:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 880:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 881:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 882:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 883:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 884:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 885:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 886:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 887:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 889:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 890:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 891:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 892:  (0) r {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 895:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 896:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 897:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 898:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 899:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 900
	 Choosing alt 0 in insn 900:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 901:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 902:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 903:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 904:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 905:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 906:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 907:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 908:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 909:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 910:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 911:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 912
	 Choosing alt 1 in insn 912:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 913:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 914:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 915:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 918:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 919:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 920:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 921:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 922:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 923:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 924:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 925:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 926:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 927
	 Choosing alt 0 in insn 927:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 928:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 929:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 930:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 931:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 932:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 933:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 934:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 935:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 936:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 937:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 938:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 939:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 940
	 Choosing alt 0 in insn 940:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 941:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 942:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 943:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 944:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 945:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 946:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 947
	 Choosing alt 1 in insn 947:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 949
	 Choosing alt 1 in insn 949:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 950:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 951:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=995 from oldreg=447, assigning class SSE_REGS to r995
  951: r995:SF=r995:SF*r891:SF
      REG_DEAD r891:SF
      REG_DEAD r447:SF
    Inserting insn reload before:
 1515: r995:SF=r447:SF
    Inserting insn reload after:
 1516: r448:SF=r995:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1516:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 952:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 953:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 955:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 957
	 Choosing alt 1 in insn 957:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=996 from oldreg=448, assigning class SSE_REGS to r996
      Making reload reg 996 for reg 448 optional
  957: r893:SF=r450:SF*r996:SF
      REG_DEAD r450:SF
      REG_DEAD r448:SF
    Inserting insn reload before:
 1517: r996:SF=r448:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1517:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 958:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 959:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 960:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 966:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 967:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 968:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 969:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 970:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 971:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 972:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 973:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 974:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 975
	 Choosing alt 0 in insn 975:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 976:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 977:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 978:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 979:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 980:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 981:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 982:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 983:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 984:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 985:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 986:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 987:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 988
	 Choosing alt 0 in insn 988:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 989:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 990:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 991:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 992:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 993:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 994:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 995
	 Choosing alt 1 in insn 995:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 997
	 Choosing alt 1 in insn 997:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 998:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 999:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=997 from oldreg=472, assigning class SSE_REGS to r997
  999: r997:SF=r997:SF*r905:SF
      REG_DEAD r905:SF
      REG_DEAD r472:SF
    Inserting insn reload before:
 1518: r997:SF=r472:SF
    Inserting insn reload after:
 1519: r473:SF=r997:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1519:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1000:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1001:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1003:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1005
	 Choosing alt 1 in insn 1005:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=998 from oldreg=473, assigning class SSE_REGS to r998
      Making reload reg 998 for reg 473 optional
 1005: r907:SF=r475:SF*r998:SF
      REG_DEAD r475:SF
      REG_DEAD r473:SF
    Inserting insn reload before:
 1520: r998:SF=r473:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1520:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1006:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1009:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1010:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1011:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1012:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1013:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1014:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1015:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1016:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1017:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1018
	 Choosing alt 0 in insn 1018:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1019:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1020:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1021:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1022:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1023:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1025:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1026:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1027:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1028:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1029:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1030:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1033:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1034:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1035:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1041:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1042:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1043:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1044:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1045:  (0) =r  (1) g {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1046:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1048:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1049:  (0) =qm {*setcc_qi}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1050:  (0) =r  (1) qm {*zero_extendqisi2}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1051:  (0) r {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1054:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1057:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1058:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1059:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1060:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1061:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1062:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1063:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1064:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1065:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1066
	 Choosing alt 0 in insn 1066:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1067:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1068:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1069:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1070:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1071:  (0) v  (1) vm {*cmpisf}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1077:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1080:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1083:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1084:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1085:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1086:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1087:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1088:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1089:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1090:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1091:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1092
	 Choosing alt 0 in insn 1092:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1093:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1094:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1095:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1096:  (0) v  (1) vm {*cmpisf}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1102:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1105:  (0) ?mr {*cmpsi_ccno_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1108:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1112:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1113:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1114:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1115:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1116:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1117
	 Choosing alt 0 in insn 1117:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1118:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1119:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1120:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1121:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1122:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1123:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1124:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1125:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1126:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1127:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1128:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1129
	 Choosing alt 1 in insn 1129:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1130:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1131:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1132:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1133:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1134:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1135:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1136:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1137:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1138:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1139:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1140
	 Choosing alt 0 in insn 1140:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1141:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1142:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1143:  (0) v  (1) m {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1144:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1145:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1146:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1147:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1148:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1149:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1150:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1151:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1152:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1153
	 Choosing alt 0 in insn 1153:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1154:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1155:  (0) r  (1) rem {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1156:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1157:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1158:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1159:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1160
	 Choosing alt 1 in insn 1160:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1162
	 Choosing alt 1 in insn 1162:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1163:  (0) v  (1) m {*movsf_internal}
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
            0 Non input pseudo reload: reject++
            1 Dying matched operand reload: reject++
          alt=1,overall=8,losers=1,rld_nregs=2
	 Choosing alt 1 in insn 1164:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=999 from oldreg=537, assigning class SSE_REGS to r999
 1164: r999:SF=r999:SF*r946:SF
      REG_DEAD r946:SF
      REG_DEAD r537:SF
    Inserting insn reload before:
 1521: r999:SF=r537:SF
    Inserting insn reload after:
 1522: r538:SF=r999:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1221,losers=3,rld_nregs=2
            0 Non pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=614,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=3,overall=1219,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Non pseudo reload: reject++
            1 Non-prefered reload: reject+=600
          alt=4,overall=613,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=608,losers=1,rld_nregs=1
            0 Non input pseudo reload: reject++
            Using memory insn operand 1: reject+=3
            Cycle danger: overall += LRA_MAX_REJECT
          alt=7,overall=616,losers=2,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=8,overall=2,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1522:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1165:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1166:  (0) x  (1) 0  (2) xm {*fop_sf_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1168:  (1) rBwBz {*call_value}
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1170
	 Choosing alt 1 in insn 1170:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1000 from oldreg=538, assigning class SSE_REGS to r1000
      Making reload reg 1000 for reg 538 optional
 1170: r948:SF=r540:SF*r1000:SF
      REG_DEAD r540:SF
      REG_DEAD r538:SF
    Inserting insn reload before:
 1523: r1000:SF=r538:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1523:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1171:  (0) m  (1) v {*movsf_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1172:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1173:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1174:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1175:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1176:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1177:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1178:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1179:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1180:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1181
	 Choosing alt 0 in insn 1181:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1182:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1183:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1184:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1185:  (0) v  (1) m {*movsf_internal}
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 2 in insn 1186:  (0) x  (1) 0  (2) xm {*fop_sf_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1188:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1189:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1190:  (0) m  (1) v {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1191:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1192:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1193:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1196:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1197:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1198:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1199:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1200:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1201:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1202:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1203:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1204:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1205
	 Choosing alt 0 in insn 1205:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1206:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1207:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1208:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1209:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1215:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1216:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1217:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
          alt=0,overall=9,losers=1,rld_nregs=1
            Staticly defined alt reject+=6
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1220:  (0) ?mr {*cmpsi_ccno_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1223:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1224:  (0) =*a  (1) *0 {*extendsidi2_rex64}
            alt=0: Bad operand -- refuse
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1225:  (0) r  (1) rm  (2) e {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1226:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1227:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1228:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            alt=0,overall=6,losers=1 -- refuse
            alt=1,overall=6,losers=1 -- refuse
          alt=2,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1229:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1230:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1231:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1232
	 Choosing alt 0 in insn 1232:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1233:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=3,overall=609,losers=1,rld_nregs=1
          alt=4,overall=0,losers=0,rld_nregs=0
	 Choosing alt 4 in insn 1234:  (0) r  (1) i {*movdi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1235:  (0) v  (1) m {*movsf_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1236:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1237:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1243:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
	 Choosing alt 1 in insn 1244:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=0,overall=1223,losers=3,rld_nregs=2
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
          alt=1,overall=613,losers=2,rld_nregs=1
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=615,losers=1 -- refuse
            Staticly defined alt reject+=6
            1 Non-prefered reload: reject+=600
          alt=4,overall=612,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Spill pseudo into memory: reject+=3
            Using memory insn operand 1: reject+=3
          alt=7,overall=21,losers=2,rld_nregs=1
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1245:  (0) m  (1) v {*movsf_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1248:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1254:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1255:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1258:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1259:  (0) v  (1) vm {*cmpisf}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1265:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1266:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1273:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1274:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1275:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1276:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1277:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1278
	 Choosing alt 0 in insn 1278:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1279:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1280:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1281:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1282:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1283:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1284:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1285:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1286:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1287
	 Choosing alt 0 in insn 1287:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1288:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1289:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1290:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1291:  (0) m  (1) re {*movsi_internal}
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
          alt=0,overall=614,losers=2,rld_nregs=1
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=623,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            0 Spill pseudo into memory: reject+=3
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=4,overall=628,losers=2 -- refuse
            alt=5: Bad operand -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=609,losers=1,rld_nregs=1
          alt=7,overall=0,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1296:  (0) v  (1) m {*movsf_internal}
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1297:  (0) v  (1) vm {*cmpisf}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1303:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1304:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1305:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1306:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1307:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1308
	 Choosing alt 0 in insn 1308:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1309:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1310:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1311:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1312:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1313:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1314:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1315:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1316:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1317
	 Choosing alt 0 in insn 1317:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1318:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1319:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1320:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1321:  (0) m  (1) re {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1326:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1327:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1328:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1329:  (0) =r  (1) g {*movsi_internal}
            0 Costly set: reject++
          alt=0,overall=1,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1330:  (0) =*a  (1) *0 {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1331
	 Choosing alt 0 in insn 1331:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1332:  (0) r  (1) r  (2) le {*adddi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1333:  (0) r  (1) rem {*movdi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1334:  (0) =r  (1) g {*movsi_internal}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1335:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1336:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
	 Choosing alt 0 in insn 1337:  (0) =r  (1) %rm  (2) K {*muldi3_1}
          alt=0,overall=0,losers=0,rld_nregs=0
	 Choosing alt 0 in insn 1338:  (0) =r  (1) g {*movsi_internal}
            0 Costly loser: reject++
            0 Small class reload: reject+=3
            0 Non input pseudo reload: reject++
            1 Small class reload: reject+=3
          alt=0,overall=20,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1339:  (0) r  (1) rm {*extendsidi2_rex64}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
          alt=2,overall=0,losers=0,rld_nregs=0
          alt=0,overall=0,losers=0,rld_nregs=0
  Commutative operand exchange in insn 1340
	 Choosing alt 0 in insn 1340:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 0 in insn 1341:  (0) =r  (1) %0  (2) rme {*adddi_1}
          alt=0,overall=6,losers=1,rld_nregs=1
          alt=1,overall=6,losers=1,rld_nregs=1
            2 Matching alt: reject+=2
            2 Non-pseudo reload: reject+=2
            2 Non input pseudo reload: reject++
            alt=2,overall=11,losers=1 -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=0,overall=11,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=11,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 3 in insn 1342:  (0) r  (1) r  (2) le {*addsi_1}
            alt=2: Bad operand -- refuse
          alt=3,overall=0,losers=0,rld_nregs=0
	 Choosing alt 3 in insn 1343:  (0) r  (1) rem {*movdi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=0,overall=609,losers=1,rld_nregs=1
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1344:  (0) m  (1) re {*movsi_internal}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1349:  (0) rm  (1) 0  (2) re {*addsi_1}
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
          alt=0,overall=18,losers=2,rld_nregs=2
          alt=1,overall=0,losers=0,rld_nregs=0
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=0,overall=9,losers=1 -- refuse
            1 Matching alt: reject+=2
            1 Non-pseudo reload: reject+=2
            1 Non input pseudo reload: reject++
            alt=1,overall=17,losers=2 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=2,overall=9,losers=1 -- refuse
            0 Non-pseudo reload: reject+=2
            0 Non input pseudo reload: reject++
            alt=3,overall=9,losers=1 -- refuse
	 Choosing alt 1 in insn 1355:  (0) rm  (1) 0  (2) re {*addsi_1}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #1: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 95
EBB 7
EBB 94
EBB 8
EBB 9 10
EBB 11 12 13
EBB 14
EBB 15 16 17
EBB 18 19 20 21 22
EBB 23 24 25
EBB 26 27 28
EBB 29
EBB 98
EBB 30 31 32 33
EBB 34
EBB 97
EBB 35
EBB 96
EBB 36
EBB 37 38
EBB 39 40 41 42 43
EBB 44
EBB 45
EBB 101
EBB 46
EBB 100
EBB 47
EBB 99
EBB 48
EBB 49 50
EBB 51 52 53
EBB 54 55 56
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1001 from oldreg=380, assigning class SSE_REGS to inheritance r1001
    Original reg change 380->1001 (bb55):
 1513: r1001:SF=r993:SF
    Add original<-inheritance after:
 1524: r380:SF=r1001:SF

    Inheritance reuse change 380->1001 (bb55):
 1514: r994:SF=r1001:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1524: r380:SF=r1001:SF
deleting insn with uid = 1524.
EBB 57
EBB 104
EBB 58 59
EBB 60
EBB 61 62 63 64
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1002 from oldreg=473, assigning class SSE_REGS to inheritance r1002
    Original reg change 473->1002 (bb64):
 1519: r1002:SF=r997:SF
    Add original<-inheritance after:
 1525: r473:SF=r1002:SF

    Inheritance reuse change 473->1002 (bb64):
 1520: r998:SF=r1002:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1003 from oldreg=448, assigning class SSE_REGS to inheritance r1003
    Original reg change 448->1003 (bb63):
 1516: r1003:SF=r995:SF
    Add original<-inheritance after:
 1526: r448:SF=r1003:SF

    Inheritance reuse change 448->1003 (bb63):
 1517: r996:SF=r1003:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1525: r473:SF=r1002:SF
deleting insn with uid = 1525.
	    Removing dead insn:
  1526: r448:SF=r1003:SF
deleting insn with uid = 1526.
EBB 65
EBB 106
EBB 66
EBB 105
EBB 67
EBB 68 69 70 71
EBB 72 73 74
EBB 75 76
EBB 77 78 79
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1004 from oldreg=538, assigning class SSE_REGS to inheritance r1004
    Original reg change 538->1004 (bb77):
 1522: r1004:SF=r999:SF
    Add original<-inheritance after:
 1527: r538:SF=r1004:SF

    Inheritance reuse change 538->1004 (bb77):
 1523: r1000:SF=r1004:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1527: r538:SF=r1004:SF
deleting insn with uid = 1527.
EBB 80 81 82
EBB 83
EBB 107
EBB 84 85 86
EBB 87
EBB 88 89
EBB 90
EBB 91
EBB 103
EBB 92
EBB 102
EBB 93

********** Pseudo live ranges #1: **********

  BB 93
   Insn 1422: point = 0, n_alt = -1
  BB 102
   Insn 1491: point = 0, n_alt = -1
  BB 49
   Insn 640: point = 0, n_alt = -1
   Insn 639: point = 0, n_alt = 0
   Insn 638: point = 1, n_alt = 0
   Insn 637: point = 3, n_alt = 0
   Insn 636: point = 4, n_alt = 0
  BB 92
   Insn 1461: point = 5, n_alt = -1
   Insn 1355: point = 5, n_alt = 1
  BB 103
   Insn 1494: point = 6, n_alt = -1
  BB 51
   Insn 648: point = 7, n_alt = -1
   Insn 647: point = 7, n_alt = 0
   Insn 646: point = 8, n_alt = 0
   Insn 645: point = 10, n_alt = 0
   Insn 644: point = 11, n_alt = 0
  BB 91
   Insn 1459: point = 12, n_alt = -1
   Insn 1349: point = 12, n_alt = 1
  BB 89
   Insn 1457: point = 13, n_alt = -1
   Insn 1321: point = 13, n_alt = 1
   Insn 1320: point = 14, n_alt = 3
   Insn 1319: point = 15, n_alt = 3
   Insn 1318: point = 17, n_alt = 0
   Insn 1317: point = 19, n_alt = 0
   Insn 1316: point = 21, n_alt = 1
   Insn 1315: point = 23, n_alt = 0
   Insn 1314: point = 24, n_alt = 0
   Insn 1313: point = 26, n_alt = 1
   Insn 1312: point = 28, n_alt = 0
   Insn 1311: point = 29, n_alt = 0
   Insn 1310: point = 31, n_alt = 3
   Insn 1309: point = 32, n_alt = 3
   Insn 1308: point = 34, n_alt = 0
   Insn 1307: point = 36, n_alt = 0
   Insn 1306: point = 38, n_alt = 0
   Insn 1305: point = 39, n_alt = 0
   Insn 1304: point = 41, n_alt = 0
   Insn 1303: point = 43, n_alt = 0
  BB 90
   Insn 1344: point = 45, n_alt = 1
   Insn 1343: point = 46, n_alt = 3
   Insn 1342: point = 47, n_alt = 3
   Insn 1341: point = 49, n_alt = 0
   Insn 1340: point = 51, n_alt = 0
   Insn 1339: point = 53, n_alt = 1
   Insn 1338: point = 55, n_alt = 0
   Insn 1337: point = 56, n_alt = 0
   Insn 1336: point = 58, n_alt = 1
   Insn 1335: point = 60, n_alt = 0
   Insn 1334: point = 61, n_alt = 0
   Insn 1333: point = 63, n_alt = 3
   Insn 1332: point = 64, n_alt = 3
   Insn 1331: point = 66, n_alt = 0
   Insn 1330: point = 68, n_alt = 0
   Insn 1329: point = 70, n_alt = 0
   Insn 1328: point = 71, n_alt = 0
   Insn 1327: point = 73, n_alt = 0
   Insn 1326: point = 75, n_alt = 0
  BB 88
   Insn 1298: point = 77, n_alt = -1
   Insn 1297: point = 77, n_alt = 1
   Insn 1296: point = 78, n_alt = 7
  BB 59
   Insn 1448: point = 80, n_alt = -1
   Insn 875: point = 80, n_alt = 1
   Insn 874: point = 81, n_alt = 3
   Insn 873: point = 82, n_alt = 3
   Insn 872: point = 84, n_alt = 0
   Insn 871: point = 86, n_alt = 0
   Insn 870: point = 88, n_alt = 1
   Insn 869: point = 90, n_alt = 0
   Insn 868: point = 91, n_alt = 0
   Insn 867: point = 93, n_alt = 1
   Insn 866: point = 95, n_alt = 0
   Insn 865: point = 96, n_alt = 0
   Insn 864: point = 98, n_alt = 3
   Insn 863: point = 99, n_alt = 3
   Insn 862: point = 101, n_alt = 0
   Insn 861: point = 103, n_alt = 0
   Insn 860: point = 105, n_alt = 0
   Insn 859: point = 106, n_alt = 0
   Insn 858: point = 108, n_alt = 0
   Insn 857: point = 110, n_alt = 0
  BB 87
   Insn 1454: point = 112, n_alt = -1
   Insn 1291: point = 112, n_alt = 1
   Insn 1290: point = 113, n_alt = 3
   Insn 1289: point = 114, n_alt = 3
   Insn 1288: point = 116, n_alt = 0
   Insn 1287: point = 118, n_alt = 0
   Insn 1286: point = 120, n_alt = 1
   Insn 1285: point = 122, n_alt = 0
   Insn 1284: point = 123, n_alt = 0
   Insn 1283: point = 125, n_alt = 1
   Insn 1282: point = 127, n_alt = 0
   Insn 1281: point = 128, n_alt = 0
   Insn 1280: point = 130, n_alt = 3
   Insn 1279: point = 131, n_alt = 3
   Insn 1278: point = 133, n_alt = 0
   Insn 1277: point = 135, n_alt = 0
   Insn 1276: point = 137, n_alt = 0
   Insn 1275: point = 138, n_alt = 0
   Insn 1274: point = 140, n_alt = 0
   Insn 1273: point = 142, n_alt = 0
  BB 86
   Insn 1267: point = 144, n_alt = -1
   Insn 1266: point = 144, n_alt = 1
   Insn 1265: point = 145, n_alt = 7
  BB 85
   Insn 1260: point = 147, n_alt = -1
   Insn 1259: point = 147, n_alt = 1
   Insn 1258: point = 148, n_alt = 7
  BB 84
   Insn 1256: point = 150, n_alt = -1
   Insn 1255: point = 150, n_alt = 1
   Insn 1254: point = 151, n_alt = 7
  BB 107
   Insn 1508: point = 153, n_alt = -1
  BB 68
   Insn 1052: point = 154, n_alt = -1
   Insn 1051: point = 154, n_alt = 0
   Insn 1050: point = 155, n_alt = 0
   Insn 1049: point = 157, n_alt = 0
   Insn 1048: point = 158, n_alt = 1
  BB 83
   Insn 1452: point = 159, n_alt = -1
   Insn 1248: point = 159, n_alt = 1
  BB 82
   Insn 1245: point = 160, n_alt = 8
   Insn 1244: point = 161, n_alt = 1
   Insn 1243: point = 163, n_alt = 7
  BB 81
   Insn 1238: point = 165, n_alt = -1
   Insn 1237: point = 165, n_alt = 1
   Insn 1236: point = 166, n_alt = 7
   Insn 1235: point = 167, n_alt = 7
   Insn 1234: point = 169, n_alt = 4
   Insn 1233: point = 170, n_alt = 3
   Insn 1232: point = 172, n_alt = 0
   Insn 1231: point = 174, n_alt = 0
   Insn 1230: point = 176, n_alt = 0
   Insn 1229: point = 177, n_alt = 0
   Insn 1228: point = 179, n_alt = 0
   Insn 1227: point = 181, n_alt = 0
   Insn 1226: point = 183, n_alt = 0
   Insn 1225: point = 184, n_alt = 1
   Insn 1224: point = 186, n_alt = 0
   Insn 1223: point = 188, n_alt = 0
  BB 80
   Insn 1221: point = 190, n_alt = -1
   Insn 1220: point = 190, n_alt = 1
  BB 79
   Insn 1217: point = 191, n_alt = 8
   Insn 1216: point = 192, n_alt = 1
   Insn 1215: point = 194, n_alt = 7
  BB 78
   Insn 1210: point = 196, n_alt = -1
   Insn 1209: point = 196, n_alt = 1
   Insn 1208: point = 197, n_alt = 7
   Insn 1207: point = 199, n_alt = 4
   Insn 1206: point = 200, n_alt = 3
   Insn 1205: point = 202, n_alt = 0
   Insn 1204: point = 204, n_alt = 0
   Insn 1203: point = 206, n_alt = 0
   Insn 1202: point = 207, n_alt = 0
   Insn 1201: point = 209, n_alt = 0
   Insn 1200: point = 211, n_alt = 0
   Insn 1199: point = 213, n_alt = 0
   Insn 1198: point = 214, n_alt = 1
   Insn 1197: point = 216, n_alt = 0
   Insn 1196: point = 218, n_alt = 0
  BB 77
   Insn 1194: point = 220, n_alt = -1
   Insn 1193: point = 220, n_alt = 1
   Insn 1192: point = 220, n_alt = 8
   Insn 1191: point = 221, n_alt = 7
   Insn 1190: point = 222, n_alt = 8
   Insn 1189: point = 223, n_alt = 1
   Insn 1188: point = 225, n_alt = 7
   Insn 1187: point = 226, n_alt = -2
   Insn 1186: point = 228, n_alt = 2
   Insn 1185: point = 230, n_alt = 7
   Insn 1184: point = 231, n_alt = 7
   Insn 1183: point = 233, n_alt = 4
   Insn 1182: point = 234, n_alt = 3
   Insn 1181: point = 236, n_alt = 0
   Insn 1180: point = 238, n_alt = 0
   Insn 1179: point = 240, n_alt = 0
   Insn 1178: point = 241, n_alt = 0
   Insn 1177: point = 243, n_alt = 0
   Insn 1176: point = 245, n_alt = 0
   Insn 1175: point = 247, n_alt = 0
   Insn 1174: point = 248, n_alt = 1
   Insn 1173: point = 250, n_alt = 0
   Insn 1172: point = 252, n_alt = 0
   Insn 1171: point = 253, n_alt = 8
   Insn 1170: point = 254, n_alt = 1
   Insn 1523: point = 256, n_alt = 7
	   Creating copy r1000<-r1004@1000
   Insn 1169: point = 258, n_alt = -2
   Insn 1168: point = 259, n_alt = 0
   Insn 1167: point = 259, n_alt = -2
   Insn 1166: point = 260, n_alt = 2
   Insn 1165: point = 262, n_alt = 7
   Insn 1522: point = 263, n_alt = 8
	   Creating copy r999->r1004@1000
   Insn 1164: point = 265, n_alt = 1
   Insn 1521: point = 266, n_alt = -2
	Hard reg 22 is preferable by r999 with profit 1000
   Insn 1163: point = 268, n_alt = 7
   Insn 1162: point = 269, n_alt = 1
   Insn 1161: point = 271, n_alt = -2
   Insn 1160: point = 273, n_alt = 1
   Insn 1159: point = 275, n_alt = 7
   Insn 1158: point = 276, n_alt = 1
   Insn 1157: point = 278, n_alt = 7
   Insn 1156: point = 279, n_alt = 7
   Insn 1155: point = 281, n_alt = 3
   Insn 1154: point = 282, n_alt = 3
   Insn 1153: point = 284, n_alt = 0
   Insn 1152: point = 286, n_alt = 0
   Insn 1151: point = 288, n_alt = 0
   Insn 1150: point = 289, n_alt = 0
   Insn 1149: point = 291, n_alt = 0
   Insn 1148: point = 293, n_alt = 0
   Insn 1147: point = 295, n_alt = 0
   Insn 1146: point = 296, n_alt = 1
   Insn 1145: point = 298, n_alt = 0
   Insn 1144: point = 300, n_alt = 0
   Insn 1143: point = 301, n_alt = 7
   Insn 1142: point = 303, n_alt = 3
   Insn 1141: point = 304, n_alt = 3
   Insn 1140: point = 306, n_alt = 0
   Insn 1139: point = 308, n_alt = 0
   Insn 1138: point = 310, n_alt = 0
   Insn 1137: point = 311, n_alt = 0
   Insn 1136: point = 313, n_alt = 0
   Insn 1135: point = 315, n_alt = 0
   Insn 1134: point = 317, n_alt = 0
   Insn 1133: point = 318, n_alt = 1
   Insn 1132: point = 320, n_alt = 0
   Insn 1131: point = 322, n_alt = 0
   Insn 1130: point = 323, n_alt = 8
   Insn 1129: point = 324, n_alt = 1
   Insn 1128: point = 326, n_alt = 7
   Insn 1127: point = 328, n_alt = 3
   Insn 1126: point = 329, n_alt = 1
   Insn 1125: point = 331, n_alt = 7
   Insn 1124: point = 333, n_alt = 3
   Insn 1123: point = 334, n_alt = 3
   Insn 1122: point = 336, n_alt = 0
   Insn 1121: point = 338, n_alt = 0
   Insn 1120: point = 339, n_alt = 7
   Insn 1119: point = 341, n_alt = 4
   Insn 1118: point = 342, n_alt = 3
   Insn 1117: point = 344, n_alt = 0
   Insn 1116: point = 346, n_alt = 0
   Insn 1115: point = 348, n_alt = 0
   Insn 1114: point = 349, n_alt = 0
   Insn 1113: point = 351, n_alt = 0
   Insn 1112: point = 353, n_alt = 0
  BB 76
   Insn 1109: point = 355, n_alt = -1
   Insn 1108: point = 355, n_alt = 1
  BB 75
   Insn 1106: point = 356, n_alt = -1
   Insn 1105: point = 356, n_alt = 1
  BB 74
   Insn 1102: point = 357, n_alt = 1
  BB 73
   Insn 1097: point = 358, n_alt = -1
   Insn 1096: point = 358, n_alt = 1
   Insn 1095: point = 359, n_alt = 7
   Insn 1094: point = 361, n_alt = 3
   Insn 1093: point = 362, n_alt = 3
   Insn 1092: point = 364, n_alt = 0
   Insn 1091: point = 366, n_alt = 0
   Insn 1090: point = 368, n_alt = 0
   Insn 1089: point = 369, n_alt = 0
   Insn 1088: point = 371, n_alt = 0
   Insn 1087: point = 373, n_alt = 0
   Insn 1086: point = 375, n_alt = 0
   Insn 1085: point = 376, n_alt = 1
   Insn 1084: point = 378, n_alt = 0
   Insn 1083: point = 380, n_alt = 0
  BB 72
   Insn 1081: point = 382, n_alt = -1
   Insn 1080: point = 382, n_alt = 1
  BB 71
   Insn 1077: point = 383, n_alt = 1
  BB 70
   Insn 1072: point = 384, n_alt = -1
   Insn 1071: point = 384, n_alt = 1
   Insn 1070: point = 385, n_alt = 7
   Insn 1069: point = 386, n_alt = 7
   Insn 1068: point = 388, n_alt = 3
   Insn 1067: point = 389, n_alt = 3
   Insn 1066: point = 391, n_alt = 0
   Insn 1065: point = 393, n_alt = 0
   Insn 1064: point = 395, n_alt = 0
   Insn 1063: point = 396, n_alt = 0
   Insn 1062: point = 398, n_alt = 0
   Insn 1061: point = 400, n_alt = 0
   Insn 1060: point = 402, n_alt = 0
   Insn 1059: point = 403, n_alt = 1
   Insn 1058: point = 405, n_alt = 0
   Insn 1057: point = 407, n_alt = 0
  BB 69
   Insn 1055: point = 409, n_alt = -1
   Insn 1054: point = 409, n_alt = 1
  BB 67
   Insn 1046: point = 410, n_alt = 1
   Insn 1045: point = 411, n_alt = 0
   Insn 1044: point = 412, n_alt = 1
   Insn 1043: point = 412, n_alt = 1
   Insn 1042: point = 412, n_alt = 8
   Insn 1041: point = 413, n_alt = 7
  BB 105
   Insn 1500: point = 415, n_alt = -1
  BB 61
   Insn 893: point = 416, n_alt = -1
   Insn 892: point = 416, n_alt = 0
   Insn 891: point = 417, n_alt = 0
   Insn 890: point = 419, n_alt = 0
   Insn 889: point = 420, n_alt = 1
  BB 66
   Insn 1450: point = 421, n_alt = -1
   Insn 1035: point = 421, n_alt = 1
   Insn 1034: point = 421, n_alt = 8
   Insn 1033: point = 422, n_alt = 7
  BB 65
   Insn 1501: point = 424, n_alt = -1
   Insn 1030: point = 424, n_alt = 8
   Insn 1029: point = 425, n_alt = 1
   Insn 1028: point = 427, n_alt = 7
   Insn 1027: point = 428, n_alt = 8
   Insn 1026: point = 429, n_alt = 1
   Insn 1025: point = 431, n_alt = 7
   Insn 1024: point = 432, n_alt = -2
   Insn 1023: point = 434, n_alt = 2
   Insn 1022: point = 436, n_alt = 7
   Insn 1021: point = 437, n_alt = 7
   Insn 1020: point = 439, n_alt = 4
   Insn 1019: point = 440, n_alt = 3
   Insn 1018: point = 442, n_alt = 0
   Insn 1017: point = 444, n_alt = 0
   Insn 1016: point = 446, n_alt = 0
   Insn 1015: point = 447, n_alt = 0
   Insn 1014: point = 449, n_alt = 0
   Insn 1013: point = 451, n_alt = 0
   Insn 1012: point = 453, n_alt = 0
   Insn 1011: point = 454, n_alt = 1
   Insn 1010: point = 456, n_alt = 0
   Insn 1009: point = 458, n_alt = 0
  BB 64
   Insn 1006: point = 460, n_alt = 8
   Insn 1005: point = 461, n_alt = 1
   Insn 1520: point = 463, n_alt = 7
	   Creating copy r998<-r1002@1000
   Insn 1004: point = 465, n_alt = -2
   Insn 1003: point = 466, n_alt = 0
   Insn 1002: point = 466, n_alt = -2
   Insn 1001: point = 467, n_alt = 2
   Insn 1000: point = 469, n_alt = 7
   Insn 1519: point = 470, n_alt = 8
	   Creating copy r997->r1002@1000
   Insn 999: point = 472, n_alt = 1
   Insn 1518: point = 473, n_alt = -2
	Hard reg 22 is preferable by r997 with profit 1000
   Insn 998: point = 475, n_alt = 7
   Insn 997: point = 476, n_alt = 1
   Insn 996: point = 478, n_alt = -2
   Insn 995: point = 480, n_alt = 1
   Insn 994: point = 482, n_alt = 7
   Insn 993: point = 483, n_alt = 1
   Insn 992: point = 485, n_alt = 7
   Insn 991: point = 486, n_alt = 7
   Insn 990: point = 488, n_alt = 3
   Insn 989: point = 489, n_alt = 3
   Insn 988: point = 491, n_alt = 0
   Insn 987: point = 493, n_alt = 0
   Insn 986: point = 495, n_alt = 0
   Insn 985: point = 496, n_alt = 0
   Insn 984: point = 498, n_alt = 0
   Insn 983: point = 500, n_alt = 0
   Insn 982: point = 502, n_alt = 0
   Insn 981: point = 503, n_alt = 1
   Insn 980: point = 505, n_alt = 0
   Insn 979: point = 507, n_alt = 0
   Insn 978: point = 508, n_alt = 7
   Insn 977: point = 510, n_alt = 3
   Insn 976: point = 511, n_alt = 3
   Insn 975: point = 513, n_alt = 0
   Insn 974: point = 515, n_alt = 0
   Insn 973: point = 517, n_alt = 0
   Insn 972: point = 518, n_alt = 0
   Insn 971: point = 520, n_alt = 0
   Insn 970: point = 522, n_alt = 0
   Insn 969: point = 524, n_alt = 0
   Insn 968: point = 525, n_alt = 1
   Insn 967: point = 527, n_alt = 0
   Insn 966: point = 529, n_alt = 0
  BB 63
   Insn 961: point = 531, n_alt = -1
   Insn 960: point = 531, n_alt = 1
   Insn 959: point = 532, n_alt = 7
   Insn 958: point = 533, n_alt = 8
   Insn 957: point = 534, n_alt = 1
   Insn 1517: point = 536, n_alt = 7
	   Creating copy r996<-r1003@1000
   Insn 956: point = 538, n_alt = -2
   Insn 955: point = 539, n_alt = 0
   Insn 954: point = 539, n_alt = -2
   Insn 953: point = 540, n_alt = 2
   Insn 952: point = 542, n_alt = 7
   Insn 1516: point = 543, n_alt = 8
	   Creating copy r995->r1003@1000
   Insn 951: point = 545, n_alt = 1
   Insn 1515: point = 546, n_alt = -2
	Hard reg 22 is preferable by r995 with profit 1000
   Insn 950: point = 548, n_alt = 7
   Insn 949: point = 549, n_alt = 1
   Insn 948: point = 551, n_alt = -2
   Insn 947: point = 553, n_alt = 1
   Insn 946: point = 555, n_alt = 7
   Insn 945: point = 556, n_alt = 1
   Insn 944: point = 558, n_alt = 7
   Insn 943: point = 559, n_alt = 7
   Insn 942: point = 561, n_alt = 3
   Insn 941: point = 562, n_alt = 3
   Insn 940: point = 564, n_alt = 0
   Insn 939: point = 566, n_alt = 0
   Insn 938: point = 568, n_alt = 0
   Insn 937: point = 569, n_alt = 0
   Insn 936: point = 571, n_alt = 0
   Insn 935: point = 573, n_alt = 0
   Insn 934: point = 575, n_alt = 0
   Insn 933: point = 576, n_alt = 1
   Insn 932: point = 578, n_alt = 0
   Insn 931: point = 580, n_alt = 0
   Insn 930: point = 581, n_alt = 7
   Insn 929: point = 583, n_alt = 3
   Insn 928: point = 584, n_alt = 3
   Insn 927: point = 586, n_alt = 0
   Insn 926: point = 588, n_alt = 0
   Insn 925: point = 590, n_alt = 0
   Insn 924: point = 591, n_alt = 0
   Insn 923: point = 593, n_alt = 0
   Insn 922: point = 595, n_alt = 0
   Insn 921: point = 597, n_alt = 0
   Insn 920: point = 598, n_alt = 1
   Insn 919: point = 600, n_alt = 0
   Insn 918: point = 602, n_alt = 0
  BB 106
   Insn 1505: point = 604, n_alt = -1
  BB 62
   Insn 916: point = 605, n_alt = -1
   Insn 915: point = 605, n_alt = 1
   Insn 914: point = 606, n_alt = 7
   Insn 913: point = 607, n_alt = 8
   Insn 912: point = 608, n_alt = 1
   Insn 911: point = 610, n_alt = 7
   Insn 910: point = 612, n_alt = 3
   Insn 909: point = 613, n_alt = 1
   Insn 908: point = 615, n_alt = 7
   Insn 907: point = 617, n_alt = 3
   Insn 906: point = 618, n_alt = 3
   Insn 905: point = 620, n_alt = 0
   Insn 904: point = 622, n_alt = 0
   Insn 903: point = 623, n_alt = 7
   Insn 902: point = 625, n_alt = 4
   Insn 901: point = 626, n_alt = 3
   Insn 900: point = 628, n_alt = 0
   Insn 899: point = 630, n_alt = 0
   Insn 898: point = 632, n_alt = 0
   Insn 897: point = 633, n_alt = 0
   Insn 896: point = 635, n_alt = 0
   Insn 895: point = 637, n_alt = 0
  BB 60
   Insn 887: point = 639, n_alt = 1
   Insn 886: point = 640, n_alt = 0
   Insn 885: point = 641, n_alt = 8
   Insn 884: point = 642, n_alt = 2
   Insn 883: point = 644, n_alt = 7
   Insn 882: point = 645, n_alt = 7
   Insn 881: point = 646, n_alt = 8
   Insn 880: point = 647, n_alt = 7
  BB 58
   Insn 852: point = 649, n_alt = -1
   Insn 851: point = 649, n_alt = 1
   Insn 850: point = 650, n_alt = 7
  BB 104
   Insn 1497: point = 652, n_alt = -1
  BB 54
   Insn 737: point = 653, n_alt = -1
   Insn 736: point = 653, n_alt = 0
   Insn 735: point = 654, n_alt = 0
   Insn 734: point = 656, n_alt = 0
   Insn 733: point = 657, n_alt = 0
  BB 57
   Insn 1445: point = 658, n_alt = -1
   Insn 844: point = 658, n_alt = 1
   Insn 843: point = 658, n_alt = 8
   Insn 842: point = 659, n_alt = 7
  BB 56
   Insn 839: point = 661, n_alt = 8
   Insn 838: point = 662, n_alt = 1
   Insn 837: point = 664, n_alt = 7
  BB 55
   Insn 832: point = 666, n_alt = -1
   Insn 831: point = 666, n_alt = 1
   Insn 830: point = 667, n_alt = 7
   Insn 829: point = 669, n_alt = 4
   Insn 828: point = 670, n_alt = 3
   Insn 827: point = 672, n_alt = 0
   Insn 826: point = 674, n_alt = 0
   Insn 825: point = 676, n_alt = 0
   Insn 824: point = 677, n_alt = 0
   Insn 823: point = 679, n_alt = 0
   Insn 822: point = 681, n_alt = 0
   Insn 821: point = 683, n_alt = 0
   Insn 820: point = 684, n_alt = 1
   Insn 819: point = 686, n_alt = 0
   Insn 818: point = 688, n_alt = 0
   Insn 817: point = 689, n_alt = 8
   Insn 816: point = 690, n_alt = 1
   Insn 815: point = 692, n_alt = 7
   Insn 814: point = 693, n_alt = -2
   Insn 813: point = 695, n_alt = 2
   Insn 812: point = 697, n_alt = 7
   Insn 811: point = 698, n_alt = 7
   Insn 810: point = 700, n_alt = 4
   Insn 809: point = 701, n_alt = 3
   Insn 808: point = 703, n_alt = 0
   Insn 807: point = 705, n_alt = 0
   Insn 806: point = 707, n_alt = 0
   Insn 805: point = 708, n_alt = 0
   Insn 804: point = 710, n_alt = 0
   Insn 803: point = 712, n_alt = 0
   Insn 802: point = 714, n_alt = 0
   Insn 801: point = 715, n_alt = 1
   Insn 800: point = 717, n_alt = 0
   Insn 799: point = 719, n_alt = 0
   Insn 798: point = 720, n_alt = 8
   Insn 797: point = 721, n_alt = 1
   Insn 1514: point = 723, n_alt = 7
	   Creating copy r994<-r1001@1000
   Insn 796: point = 725, n_alt = -2
   Insn 795: point = 726, n_alt = 0
   Insn 794: point = 726, n_alt = -2
   Insn 793: point = 727, n_alt = 2
   Insn 792: point = 729, n_alt = 7
   Insn 1513: point = 730, n_alt = 8
	   Creating copy r993->r1001@1000
   Insn 791: point = 732, n_alt = 1
   Insn 1512: point = 733, n_alt = -2
	Hard reg 22 is preferable by r993 with profit 1000
   Insn 790: point = 735, n_alt = 7
   Insn 789: point = 736, n_alt = 1
   Insn 788: point = 738, n_alt = -2
   Insn 787: point = 740, n_alt = 1
   Insn 786: point = 742, n_alt = 7
   Insn 785: point = 743, n_alt = 1
   Insn 784: point = 745, n_alt = 7
   Insn 783: point = 746, n_alt = 7
   Insn 782: point = 748, n_alt = 3
   Insn 781: point = 749, n_alt = 3
   Insn 780: point = 751, n_alt = 0
   Insn 779: point = 753, n_alt = 0
   Insn 778: point = 755, n_alt = 0
   Insn 777: point = 756, n_alt = 0
   Insn 776: point = 758, n_alt = 0
   Insn 775: point = 760, n_alt = 0
   Insn 774: point = 762, n_alt = 0
   Insn 773: point = 763, n_alt = 1
   Insn 772: point = 765, n_alt = 0
   Insn 771: point = 767, n_alt = 0
   Insn 770: point = 768, n_alt = 7
   Insn 769: point = 770, n_alt = 3
   Insn 768: point = 771, n_alt = 3
   Insn 767: point = 773, n_alt = 0
   Insn 766: point = 775, n_alt = 0
   Insn 765: point = 777, n_alt = 0
   Insn 764: point = 778, n_alt = 0
   Insn 763: point = 780, n_alt = 0
   Insn 762: point = 782, n_alt = 0
   Insn 761: point = 784, n_alt = 0
   Insn 760: point = 785, n_alt = 1
   Insn 759: point = 787, n_alt = 0
   Insn 758: point = 789, n_alt = 0
   Insn 757: point = 790, n_alt = 8
   Insn 756: point = 791, n_alt = 1
   Insn 755: point = 793, n_alt = 7
   Insn 754: point = 795, n_alt = 3
   Insn 753: point = 796, n_alt = 1
   Insn 752: point = 798, n_alt = 7
   Insn 751: point = 800, n_alt = 3
   Insn 750: point = 801, n_alt = 3
   Insn 749: point = 803, n_alt = 0
   Insn 748: point = 805, n_alt = 0
   Insn 747: point = 806, n_alt = 7
   Insn 746: point = 808, n_alt = 4
   Insn 745: point = 809, n_alt = 3
   Insn 744: point = 811, n_alt = 0
   Insn 743: point = 813, n_alt = 0
   Insn 742: point = 815, n_alt = 0
   Insn 741: point = 816, n_alt = 0
   Insn 740: point = 818, n_alt = 0
   Insn 739: point = 820, n_alt = 0
  BB 53
   Insn 731: point = 822, n_alt = 1
   Insn 730: point = 823, n_alt = 0
   Insn 729: point = 824, n_alt = 0
   Insn 728: point = 825, n_alt = 8
   Insn 727: point = 826, n_alt = 7
   Insn 726: point = 827, n_alt = 8
   Insn 725: point = 828, n_alt = 7
   Insn 724: point = 829, n_alt = 8
   Insn 723: point = 830, n_alt = 7
   Insn 722: point = 831, n_alt = 8
   Insn 721: point = 832, n_alt = 7
   Insn 720: point = 833, n_alt = 8
   Insn 719: point = 834, n_alt = 7
   Insn 718: point = 835, n_alt = 8
   Insn 717: point = 836, n_alt = 7
   Insn 716: point = 838, n_alt = 4
   Insn 715: point = 839, n_alt = 3
   Insn 714: point = 841, n_alt = 0
   Insn 713: point = 843, n_alt = 0
   Insn 712: point = 845, n_alt = 0
   Insn 711: point = 846, n_alt = 0
   Insn 710: point = 848, n_alt = 0
   Insn 709: point = 850, n_alt = 0
   Insn 708: point = 851, n_alt = 8
   Insn 707: point = 852, n_alt = 7
   Insn 706: point = 854, n_alt = 3
   Insn 705: point = 855, n_alt = 3
   Insn 704: point = 857, n_alt = 0
   Insn 703: point = 859, n_alt = 0
   Insn 702: point = 861, n_alt = 0
   Insn 701: point = 862, n_alt = 0
   Insn 700: point = 864, n_alt = 0
   Insn 699: point = 866, n_alt = 0
   Insn 698: point = 868, n_alt = 0
   Insn 697: point = 869, n_alt = 1
   Insn 696: point = 871, n_alt = 0
   Insn 695: point = 873, n_alt = 0
   Insn 694: point = 874, n_alt = 8
   Insn 693: point = 875, n_alt = 1
   Insn 692: point = 877, n_alt = 7
   Insn 691: point = 879, n_alt = 3
   Insn 690: point = 880, n_alt = 7
   Insn 689: point = 882, n_alt = 3
   Insn 688: point = 883, n_alt = 3
   Insn 687: point = 885, n_alt = 0
   Insn 686: point = 887, n_alt = 0
   Insn 685: point = 889, n_alt = 0
   Insn 684: point = 890, n_alt = 0
   Insn 683: point = 892, n_alt = 0
   Insn 682: point = 894, n_alt = 0
   Insn 681: point = 895, n_alt = 1
   Insn 680: point = 896, n_alt = 0
   Insn 679: point = 898, n_alt = 4
   Insn 678: point = 899, n_alt = 3
   Insn 677: point = 901, n_alt = 0
   Insn 676: point = 903, n_alt = 0
   Insn 675: point = 905, n_alt = 0
   Insn 674: point = 906, n_alt = 0
   Insn 673: point = 908, n_alt = 0
   Insn 672: point = 910, n_alt = 0
   Insn 671: point = 911, n_alt = 1
   Insn 670: point = 912, n_alt = 0
   Insn 669: point = 914, n_alt = 3
   Insn 668: point = 915, n_alt = 3
   Insn 667: point = 917, n_alt = 0
   Insn 666: point = 919, n_alt = 0
   Insn 665: point = 921, n_alt = 0
   Insn 664: point = 922, n_alt = 0
   Insn 663: point = 924, n_alt = 0
   Insn 662: point = 926, n_alt = 0
  BB 52
   Insn 660: point = 928, n_alt = -1
   Insn 659: point = 928, n_alt = 0
   Insn 658: point = 929, n_alt = 0
   Insn 657: point = 931, n_alt = 4
   Insn 656: point = 932, n_alt = 3
   Insn 655: point = 934, n_alt = 0
   Insn 654: point = 936, n_alt = 0
   Insn 653: point = 938, n_alt = 0
   Insn 652: point = 939, n_alt = 0
   Insn 651: point = 941, n_alt = 0
   Insn 650: point = 943, n_alt = 0
  BB 50
   Insn 642: point = 945, n_alt = 1
  BB 48
   Insn 634: point = 946, n_alt = 1
   Insn 633: point = 947, n_alt = 0
   Insn 632: point = 948, n_alt = 0
   Insn 631: point = 949, n_alt = 0
   Insn 630: point = 949, n_alt = 3
   Insn 629: point = 949, n_alt = -2
   Insn 628: point = 950, n_alt = -2
   Insn 627: point = 951, n_alt = 4
   Insn 626: point = 951, n_alt = -2
   Insn 625: point = 952, n_alt = 4
   Insn 624: point = 952, n_alt = 4
   Insn 623: point = 952, n_alt = 3
   Insn 622: point = 953, n_alt = 3
   Insn 621: point = 954, n_alt = 3
  BB 99
   Insn 1480: point = 955, n_alt = -1
  BB 37
   Insn 474: point = 955, n_alt = -1
   Insn 473: point = 955, n_alt = 0
   Insn 472: point = 956, n_alt = 0
   Insn 471: point = 958, n_alt = 0
   Insn 470: point = 959, n_alt = 0
  BB 47
   Insn 1443: point = 960, n_alt = -1
   Insn 615: point = 960, n_alt = 1
  BB 100
   Insn 1483: point = 961, n_alt = -1
  BB 39
   Insn 482: point = 962, n_alt = -1
   Insn 481: point = 962, n_alt = 0
   Insn 480: point = 963, n_alt = 0
   Insn 479: point = 965, n_alt = 0
   Insn 478: point = 966, n_alt = 0
  BB 46
   Insn 1441: point = 967, n_alt = -1
   Insn 609: point = 967, n_alt = 1
  BB 45
   Insn 1484: point = 968, n_alt = -1
   Insn 606: point = 968, n_alt = 1
   Insn 605: point = 969, n_alt = 4
   Insn 604: point = 970, n_alt = 3
   Insn 603: point = 972, n_alt = 0
   Insn 602: point = 974, n_alt = 1
   Insn 601: point = 976, n_alt = 0
   Insn 600: point = 977, n_alt = 0
   Insn 599: point = 979, n_alt = 1
   Insn 598: point = 981, n_alt = 0
  BB 43
   Insn 1437: point = 983, n_alt = -1
   Insn 570: point = 983, n_alt = 1
   Insn 569: point = 984, n_alt = 3
   Insn 568: point = 985, n_alt = 3
   Insn 567: point = 987, n_alt = 0
   Insn 566: point = 989, n_alt = 0
   Insn 565: point = 991, n_alt = 1
   Insn 564: point = 993, n_alt = 0
   Insn 563: point = 994, n_alt = 0
   Insn 562: point = 996, n_alt = 1
   Insn 561: point = 998, n_alt = 0
   Insn 560: point = 999, n_alt = 0
   Insn 559: point = 1001, n_alt = 3
   Insn 558: point = 1002, n_alt = 3
   Insn 557: point = 1004, n_alt = 0
   Insn 556: point = 1006, n_alt = 1
   Insn 555: point = 1008, n_alt = 0
   Insn 554: point = 1009, n_alt = 0
   Insn 553: point = 1011, n_alt = 1
   Insn 552: point = 1013, n_alt = 0
  BB 44
   Insn 1439: point = 1015, n_alt = -1
   Insn 593: point = 1015, n_alt = 1
   Insn 592: point = 1016, n_alt = 3
   Insn 591: point = 1017, n_alt = 3
   Insn 590: point = 1019, n_alt = 0
   Insn 589: point = 1021, n_alt = 0
   Insn 588: point = 1023, n_alt = 1
   Insn 587: point = 1025, n_alt = 0
   Insn 586: point = 1026, n_alt = 0
   Insn 585: point = 1028, n_alt = 1
   Insn 584: point = 1030, n_alt = 0
   Insn 583: point = 1031, n_alt = 0
   Insn 582: point = 1033, n_alt = 3
   Insn 581: point = 1034, n_alt = 3
   Insn 580: point = 1036, n_alt = 0
   Insn 579: point = 1038, n_alt = 1
   Insn 578: point = 1040, n_alt = 0
   Insn 577: point = 1041, n_alt = 0
   Insn 576: point = 1043, n_alt = 1
   Insn 575: point = 1045, n_alt = 0
  BB 42
   Insn 547: point = 1047, n_alt = -1
   Insn 546: point = 1047, n_alt = 1
   Insn 545: point = 1048, n_alt = 7
  BB 41
   Insn 540: point = 1050, n_alt = -1
   Insn 539: point = 1050, n_alt = 1
   Insn 538: point = 1051, n_alt = 7
   Insn 537: point = 1053, n_alt = 4
   Insn 536: point = 1054, n_alt = 3
   Insn 535: point = 1056, n_alt = 0
   Insn 534: point = 1058, n_alt = 1
   Insn 533: point = 1060, n_alt = 0
   Insn 532: point = 1061, n_alt = 0
   Insn 531: point = 1063, n_alt = 1
   Insn 530: point = 1065, n_alt = 0
   Insn 529: point = 1066, n_alt = 8
   Insn 528: point = 1067, n_alt = 7
   Insn 527: point = 1069, n_alt = 3
   Insn 526: point = 1070, n_alt = 3
   Insn 525: point = 1072, n_alt = 0
   Insn 524: point = 1074, n_alt = 1
   Insn 523: point = 1076, n_alt = 0
   Insn 522: point = 1077, n_alt = 0
   Insn 521: point = 1079, n_alt = 0
   Insn 520: point = 1081, n_alt = 1
   Insn 519: point = 1083, n_alt = 0
   Insn 518: point = 1084, n_alt = 1
   Insn 517: point = 1086, n_alt = 1
   Insn 516: point = 1088, n_alt = 0
   Insn 515: point = 1089, n_alt = 1
   Insn 514: point = 1090, n_alt = 0
   Insn 513: point = 1092, n_alt = 3
   Insn 512: point = 1093, n_alt = 3
   Insn 511: point = 1095, n_alt = 0
   Insn 510: point = 1097, n_alt = 1
   Insn 509: point = 1099, n_alt = 0
   Insn 508: point = 1100, n_alt = 0
   Insn 507: point = 1102, n_alt = 1
   Insn 506: point = 1104, n_alt = 0
  BB 101
   Insn 1488: point = 1106, n_alt = -1
  BB 40
   Insn 504: point = 1107, n_alt = -1
   Insn 503: point = 1107, n_alt = 1
   Insn 502: point = 1108, n_alt = 7
   Insn 501: point = 1109, n_alt = 7
   Insn 500: point = 1111, n_alt = 3
   Insn 499: point = 1112, n_alt = 3
   Insn 498: point = 1114, n_alt = 0
   Insn 497: point = 1116, n_alt = 1
   Insn 496: point = 1118, n_alt = 0
   Insn 495: point = 1119, n_alt = 0
   Insn 494: point = 1121, n_alt = 1
   Insn 493: point = 1123, n_alt = 0
   Insn 492: point = 1124, n_alt = 1
   Insn 491: point = 1125, n_alt = 4
   Insn 490: point = 1126, n_alt = 3
   Insn 489: point = 1128, n_alt = 0
   Insn 488: point = 1130, n_alt = 1
   Insn 487: point = 1132, n_alt = 0
   Insn 486: point = 1133, n_alt = 0
   Insn 485: point = 1135, n_alt = 1
   Insn 484: point = 1137, n_alt = 0
  BB 38
   Insn 476: point = 1139, n_alt = 1
  BB 36
   Insn 468: point = 1140, n_alt = 1
   Insn 467: point = 1141, n_alt = 0
   Insn 466: point = 1142, n_alt = 0
  BB 96
   Insn 1471: point = 1143, n_alt = -1
  BB 9
   Insn 86: point = 1143, n_alt = -1
   Insn 85: point = 1143, n_alt = 0
   Insn 84: point = 1144, n_alt = 0
   Insn 83: point = 1146, n_alt = 0
   Insn 82: point = 1147, n_alt = 0
  BB 35
   Insn 1433: point = 1148, n_alt = -1
   Insn 460: point = 1148, n_alt = 1
  BB 97
   Insn 1474: point = 1149, n_alt = -1
  BB 11
   Insn 94: point = 1150, n_alt = -1
   Insn 93: point = 1150, n_alt = 0
   Insn 92: point = 1151, n_alt = 0
   Insn 91: point = 1153, n_alt = 0
   Insn 90: point = 1154, n_alt = 0
  BB 34
   Insn 1431: point = 1155, n_alt = -1
   Insn 454: point = 1155, n_alt = 1
  BB 30
   Insn 431: point = 1156, n_alt = -1
   Insn 430: point = 1156, n_alt = 1
   Insn 429: point = 1156, n_alt = 7
   Insn 428: point = 1158, n_alt = 3
   Insn 427: point = 1159, n_alt = 3
   Insn 426: point = 1161, n_alt = 0
   Insn 425: point = 1163, n_alt = 0
   Insn 424: point = 1165, n_alt = 0
   Insn 423: point = 1166, n_alt = 0
   Insn 422: point = 1168, n_alt = 0
   Insn 421: point = 1170, n_alt = 0
   Insn 420: point = 1172, n_alt = 0
   Insn 419: point = 1173, n_alt = 1
   Insn 418: point = 1175, n_alt = 0
   Insn 417: point = 1177, n_alt = 0
   Insn 416: point = 1178, n_alt = 7
   Insn 415: point = 1180, n_alt = 4
   Insn 414: point = 1181, n_alt = 3
   Insn 413: point = 1183, n_alt = 0
   Insn 412: point = 1185, n_alt = 0
   Insn 411: point = 1187, n_alt = 0
   Insn 410: point = 1188, n_alt = 0
   Insn 409: point = 1190, n_alt = 0
   Insn 408: point = 1192, n_alt = 0
  BB 98
   Insn 1477: point = 1194, n_alt = -1
  BB 15
   Insn 196: point = 1195, n_alt = -1
   Insn 195: point = 1195, n_alt = 0
   Insn 194: point = 1196, n_alt = 0
   Insn 193: point = 1198, n_alt = 0
   Insn 192: point = 1199, n_alt = 0
  BB 29
   Insn 1427: point = 1200, n_alt = -1
   Insn 402: point = 1200, n_alt = 1
  BB 28
   Insn 399: point = 1201, n_alt = 1
   Insn 398: point = 1202, n_alt = 0
   Insn 397: point = 1203, n_alt = 4
   Insn 396: point = 1204, n_alt = 3
   Insn 395: point = 1206, n_alt = 0
   Insn 394: point = 1208, n_alt = 0
   Insn 393: point = 1210, n_alt = 0
   Insn 392: point = 1211, n_alt = 0
   Insn 391: point = 1213, n_alt = 0
   Insn 390: point = 1215, n_alt = 0
  BB 27
   Insn 388: point = 1217, n_alt = -1
   Insn 387: point = 1217, n_alt = 0
   Insn 386: point = 1218, n_alt = 0
   Insn 385: point = 1220, n_alt = 4
   Insn 384: point = 1221, n_alt = 3
   Insn 383: point = 1223, n_alt = 0
   Insn 382: point = 1225, n_alt = 0
   Insn 381: point = 1227, n_alt = 0
   Insn 380: point = 1228, n_alt = 0
   Insn 379: point = 1230, n_alt = 0
   Insn 378: point = 1232, n_alt = 0
  BB 26
   Insn 373: point = 1234, n_alt = -1
   Insn 372: point = 1234, n_alt = 1
   Insn 371: point = 1235, n_alt = 7
  BB 25
   Insn 368: point = 1237, n_alt = 8
   Insn 367: point = 1238, n_alt = 7
   Insn 366: point = 1239, n_alt = 4
   Insn 365: point = 1240, n_alt = 3
   Insn 364: point = 1242, n_alt = 0
   Insn 363: point = 1244, n_alt = 0
   Insn 362: point = 1246, n_alt = 0
   Insn 361: point = 1247, n_alt = 0
   Insn 360: point = 1249, n_alt = 0
   Insn 359: point = 1251, n_alt = 0
  BB 24
   Insn 354: point = 1253, n_alt = -1
   Insn 353: point = 1253, n_alt = 1
   Insn 352: point = 1254, n_alt = 7
   Insn 351: point = 1255, n_alt = 7
   Insn 350: point = 1257, n_alt = 4
   Insn 349: point = 1258, n_alt = 3
   Insn 348: point = 1260, n_alt = 0
   Insn 347: point = 1262, n_alt = 0
   Insn 346: point = 1264, n_alt = 0
   Insn 345: point = 1265, n_alt = 0
   Insn 344: point = 1267, n_alt = 0
   Insn 343: point = 1269, n_alt = 0
  BB 23
   Insn 338: point = 1271, n_alt = -1
   Insn 337: point = 1271, n_alt = 1
   Insn 336: point = 1272, n_alt = 7
  BB 22
   Insn 333: point = 1274, n_alt = 8
   Insn 332: point = 1275, n_alt = 7
   Insn 331: point = 1276, n_alt = 4
   Insn 330: point = 1277, n_alt = 3
   Insn 329: point = 1279, n_alt = 0
   Insn 328: point = 1281, n_alt = 0
   Insn 327: point = 1283, n_alt = 0
   Insn 326: point = 1284, n_alt = 0
   Insn 325: point = 1286, n_alt = 0
   Insn 324: point = 1288, n_alt = 0
  BB 21
   Insn 319: point = 1290, n_alt = -1
   Insn 318: point = 1290, n_alt = 1
   Insn 317: point = 1291, n_alt = 7
   Insn 316: point = 1293, n_alt = 4
   Insn 315: point = 1294, n_alt = 3
   Insn 314: point = 1296, n_alt = 0
   Insn 313: point = 1298, n_alt = 0
   Insn 312: point = 1300, n_alt = 0
   Insn 311: point = 1301, n_alt = 0
   Insn 310: point = 1303, n_alt = 0
   Insn 309: point = 1305, n_alt = 0
  BB 20
   Insn 304: point = 1307, n_alt = -1
   Insn 303: point = 1307, n_alt = 1
   Insn 302: point = 1308, n_alt = 7
   Insn 301: point = 1309, n_alt = 8
   Insn 300: point = 1310, n_alt = 2
   Insn 299: point = 1312, n_alt = 7
   Insn 298: point = 1313, n_alt = 8
   Insn 297: point = 1314, n_alt = 1
   Insn 296: point = 1316, n_alt = 7
   Insn 295: point = 1317, n_alt = 2
   Insn 294: point = 1319, n_alt = -2
   Insn 293: point = 1321, n_alt = 2
   Insn 292: point = 1323, n_alt = 7
   Insn 291: point = 1324, n_alt = -2
   Insn 290: point = 1326, n_alt = 1
   Insn 289: point = 1328, n_alt = 7
   Insn 288: point = 1329, n_alt = 7
   Insn 287: point = 1330, n_alt = 4
   Insn 286: point = 1331, n_alt = 9
   Insn 285: point = 1332, n_alt = 0
   Insn 284: point = 1332, n_alt = -2
   Insn 283: point = 1333, n_alt = 2
   Insn 282: point = 1335, n_alt = -2
   Insn 281: point = 1337, n_alt = 1
   Insn 280: point = 1339, n_alt = 7
   Insn 279: point = 1340, n_alt = -2
   Insn 278: point = 1342, n_alt = 1
   Insn 277: point = 1344, n_alt = 7
   Insn 276: point = 1345, n_alt = 1
   Insn 275: point = 1347, n_alt = 7
   Insn 274: point = 1348, n_alt = 7
   Insn 273: point = 1349, n_alt = 1
   Insn 272: point = 1351, n_alt = 7
  BB 19
   Insn 270: point = 1353, n_alt = -1
   Insn 269: point = 1353, n_alt = 1
   Insn 268: point = 1354, n_alt = 7
   Insn 1511: point = 1355, n_alt = -2
	Hard reg 22 is preferable by r992 with profit 1000
   Insn 267: point = 1357, n_alt = 2
   Insn 1510: point = 1358, n_alt = -2
	Hard reg 22 is preferable by r992 with profit 1000
	Hard reg 21 is preferable by r992 with profit 1000
   Insn 266: point = 1360, n_alt = 7
   Insn 265: point = 1361, n_alt = 7
  BB 18
   Insn 263: point = 1363, n_alt = -1
   Insn 262: point = 1363, n_alt = 1
   Insn 261: point = 1364, n_alt = 7
   Insn 260: point = 1365, n_alt = 8
   Insn 259: point = 1366, n_alt = 1
   Insn 258: point = 1368, n_alt = 7
   Insn 257: point = 1370, n_alt = 3
   Insn 256: point = 1371, n_alt = 1
   Insn 255: point = 1373, n_alt = 7
   Insn 254: point = 1375, n_alt = 3
   Insn 253: point = 1376, n_alt = 3
   Insn 252: point = 1378, n_alt = 0
   Insn 251: point = 1380, n_alt = 0
   Insn 250: point = 1381, n_alt = 7
   Insn 249: point = 1383, n_alt = 4
   Insn 248: point = 1384, n_alt = 3
   Insn 247: point = 1386, n_alt = 0
   Insn 246: point = 1388, n_alt = 0
   Insn 245: point = 1390, n_alt = 0
   Insn 244: point = 1391, n_alt = 0
   Insn 243: point = 1393, n_alt = 0
   Insn 242: point = 1395, n_alt = 0
   Insn 241: point = 1396, n_alt = 8
   Insn 240: point = 1397, n_alt = 7
   Insn 239: point = 1399, n_alt = 3
   Insn 238: point = 1400, n_alt = 3
   Insn 237: point = 1402, n_alt = 0
   Insn 236: point = 1404, n_alt = 0
   Insn 235: point = 1406, n_alt = 0
   Insn 234: point = 1407, n_alt = 0
   Insn 233: point = 1409, n_alt = 0
   Insn 232: point = 1411, n_alt = 0
   Insn 231: point = 1413, n_alt = 0
   Insn 230: point = 1414, n_alt = 1
   Insn 229: point = 1416, n_alt = 0
   Insn 228: point = 1418, n_alt = 0
   Insn 227: point = 1419, n_alt = 8
  BB 17
   Insn 224: point = 1421, n_alt = 7
  BB 16
   Insn 222: point = 1423, n_alt = -1
   Insn 221: point = 1423, n_alt = 0
   Insn 220: point = 1424, n_alt = 0
   Insn 219: point = 1426, n_alt = 0
   Insn 218: point = 1428, n_alt = 0
   Insn 217: point = 1429, n_alt = 1
   Insn 216: point = 1429, n_alt = 0
   Insn 215: point = 1431, n_alt = 0
   Insn 214: point = 1432, n_alt = 1
   Insn 213: point = 1433, n_alt = 7
   Insn 212: point = 1434, n_alt = 7
   Insn 211: point = 1435, n_alt = 8
   Insn 210: point = 1436, n_alt = 7
   Insn 209: point = 1438, n_alt = 3
   Insn 208: point = 1439, n_alt = 3
   Insn 207: point = 1441, n_alt = 0
   Insn 206: point = 1443, n_alt = 0
   Insn 205: point = 1445, n_alt = 0
   Insn 204: point = 1446, n_alt = 0
   Insn 203: point = 1448, n_alt = 0
   Insn 202: point = 1450, n_alt = 0
   Insn 201: point = 1452, n_alt = 0
   Insn 200: point = 1453, n_alt = 1
   Insn 199: point = 1455, n_alt = 0
   Insn 198: point = 1457, n_alt = 0
  BB 14
   Insn 190: point = 1459, n_alt = 1
   Insn 189: point = 1459, n_alt = 0
   Insn 188: point = 1460, n_alt = 1
   Insn 187: point = 1461, n_alt = 0
   Insn 186: point = 1462, n_alt = 4
   Insn 185: point = 1463, n_alt = 3
   Insn 184: point = 1465, n_alt = 0
   Insn 183: point = 1467, n_alt = 0
   Insn 182: point = 1469, n_alt = 0
   Insn 181: point = 1470, n_alt = 0
   Insn 180: point = 1472, n_alt = 0
   Insn 179: point = 1474, n_alt = 0
   Insn 178: point = 1475, n_alt = 8
   Insn 177: point = 1476, n_alt = 4
   Insn 176: point = 1477, n_alt = 7
   Insn 175: point = 1479, n_alt = 3
   Insn 174: point = 1480, n_alt = 3
   Insn 173: point = 1482, n_alt = 0
   Insn 172: point = 1484, n_alt = 0
   Insn 171: point = 1486, n_alt = 0
   Insn 170: point = 1487, n_alt = 0
   Insn 169: point = 1489, n_alt = 0
   Insn 168: point = 1491, n_alt = 0
   Insn 167: point = 1492, n_alt = 3
   Insn 166: point = 1494, n_alt = 0
   Insn 165: point = 1496, n_alt = 0
   Insn 164: point = 1498, n_alt = 0
   Insn 163: point = 1499, n_alt = 0
   Insn 162: point = 1501, n_alt = 0
   Insn 161: point = 1503, n_alt = 0
   Insn 160: point = 1505, n_alt = 0
   Insn 159: point = 1506, n_alt = 1
   Insn 158: point = 1508, n_alt = 0
   Insn 157: point = 1510, n_alt = 0
   Insn 156: point = 1511, n_alt = 8
   Insn 155: point = 1512, n_alt = 4
   Insn 154: point = 1513, n_alt = 7
   Insn 153: point = 1515, n_alt = 3
   Insn 152: point = 1516, n_alt = 3
   Insn 151: point = 1518, n_alt = 0
   Insn 150: point = 1520, n_alt = 0
   Insn 149: point = 1522, n_alt = 0
   Insn 148: point = 1523, n_alt = 0
   Insn 147: point = 1525, n_alt = 0
   Insn 146: point = 1527, n_alt = 0
   Insn 145: point = 1528, n_alt = 3
   Insn 144: point = 1530, n_alt = 0
   Insn 143: point = 1532, n_alt = 0
   Insn 142: point = 1534, n_alt = 0
   Insn 141: point = 1535, n_alt = 0
   Insn 140: point = 1537, n_alt = 0
   Insn 139: point = 1539, n_alt = 0
   Insn 138: point = 1541, n_alt = 0
   Insn 137: point = 1542, n_alt = 1
   Insn 136: point = 1544, n_alt = 0
   Insn 135: point = 1546, n_alt = 0
  BB 33
   Insn 1429: point = 1548, n_alt = -1
   Insn 448: point = 1548, n_alt = 8
   Insn 447: point = 1549, n_alt = 1
   Insn 446: point = 1551, n_alt = 7
   Insn 445: point = 1552, n_alt = 7
  BB 32
   Insn 440: point = 1554, n_alt = -1
   Insn 439: point = 1554, n_alt = 1
   Insn 438: point = 1555, n_alt = 7
  BB 31
   Insn 433: point = 1557, n_alt = -1
   Insn 432: point = 1557, n_alt = 1
  BB 13
   Insn 133: point = 1559, n_alt = 8
   Insn 132: point = 1560, n_alt = 7
   Insn 131: point = 1561, n_alt = 8
   Insn 130: point = 1562, n_alt = 1
   Insn 129: point = 1564, n_alt = 7
   Insn 128: point = 1566, n_alt = 3
   Insn 127: point = 1567, n_alt = 7
   Insn 126: point = 1569, n_alt = 3
   Insn 125: point = 1570, n_alt = 3
   Insn 124: point = 1572, n_alt = 0
   Insn 123: point = 1574, n_alt = 0
   Insn 122: point = 1576, n_alt = 0
   Insn 121: point = 1577, n_alt = 0
   Insn 120: point = 1579, n_alt = 0
   Insn 119: point = 1581, n_alt = 0
  BB 12
   Insn 117: point = 1583, n_alt = -1
   Insn 116: point = 1583, n_alt = 1
   Insn 115: point = 1584, n_alt = 7
   Insn 114: point = 1585, n_alt = 7
   Insn 113: point = 1587, n_alt = 3
   Insn 112: point = 1588, n_alt = 3
   Insn 111: point = 1590, n_alt = 0
   Insn 110: point = 1592, n_alt = 0
   Insn 109: point = 1594, n_alt = 0
   Insn 108: point = 1595, n_alt = 0
   Insn 107: point = 1597, n_alt = 0
   Insn 106: point = 1599, n_alt = 0
   Insn 105: point = 1600, n_alt = 1
   Insn 104: point = 1601, n_alt = 0
   Insn 103: point = 1603, n_alt = 3
   Insn 102: point = 1604, n_alt = 3
   Insn 101: point = 1606, n_alt = 0
   Insn 100: point = 1608, n_alt = 0
   Insn 99: point = 1610, n_alt = 0
   Insn 98: point = 1611, n_alt = 0
   Insn 97: point = 1613, n_alt = 0
   Insn 96: point = 1615, n_alt = 0
  BB 10
   Insn 88: point = 1617, n_alt = 1
  BB 8
   Insn 80: point = 1618, n_alt = 1
   Insn 79: point = 1619, n_alt = 0
   Insn 78: point = 1620, n_alt = 0
  BB 94
   Insn 1465: point = 1621, n_alt = -1
  BB 3
   Insn 19: point = 1621, n_alt = -1
   Insn 18: point = 1621, n_alt = 0
   Insn 17: point = 1622, n_alt = 0
   Insn 16: point = 1624, n_alt = 0
   Insn 15: point = 1625, n_alt = 0
  BB 7
   Insn 1425: point = 1626, n_alt = -1
   Insn 72: point = 1626, n_alt = 1
  BB 95
   Insn 1468: point = 1627, n_alt = -1
  BB 5
   Insn 27: point = 1628, n_alt = -1
   Insn 26: point = 1628, n_alt = 0
   Insn 25: point = 1629, n_alt = 0
   Insn 24: point = 1631, n_alt = 0
   Insn 23: point = 1632, n_alt = 0
  BB 6
   Insn 1423: point = 1633, n_alt = -1
   Insn 66: point = 1633, n_alt = 1
   Insn 65: point = 1633, n_alt = 8
   Insn 64: point = 1634, n_alt = 4
   Insn 63: point = 1635, n_alt = 1
   Insn 62: point = 1637, n_alt = 3
   Insn 61: point = 1639, n_alt = 0
   Insn 60: point = 1641, n_alt = 1
   Insn 59: point = 1643, n_alt = 0
   Insn 58: point = 1644, n_alt = 0
   Insn 57: point = 1646, n_alt = 1
   Insn 56: point = 1648, n_alt = 0
   Insn 55: point = 1649, n_alt = 7
   Insn 54: point = 1651, n_alt = 3
   Insn 53: point = 1652, n_alt = 3
   Insn 52: point = 1654, n_alt = 0
   Insn 51: point = 1656, n_alt = 1
   Insn 50: point = 1658, n_alt = 0
   Insn 49: point = 1659, n_alt = 0
   Insn 48: point = 1661, n_alt = 1
   Insn 47: point = 1663, n_alt = 0
   Insn 46: point = 1664, n_alt = 7
   Insn 45: point = 1666, n_alt = 3
   Insn 44: point = 1667, n_alt = 3
   Insn 43: point = 1669, n_alt = 0
   Insn 42: point = 1671, n_alt = 1
   Insn 41: point = 1673, n_alt = 0
   Insn 40: point = 1674, n_alt = 0
   Insn 39: point = 1676, n_alt = 1
   Insn 38: point = 1678, n_alt = 0
   Insn 37: point = 1679, n_alt = 1
   Insn 36: point = 1680, n_alt = 3
   Insn 35: point = 1681, n_alt = 3
   Insn 34: point = 1683, n_alt = 0
   Insn 33: point = 1685, n_alt = 1
   Insn 32: point = 1687, n_alt = 0
   Insn 31: point = 1688, n_alt = 0
   Insn 30: point = 1690, n_alt = 1
   Insn 29: point = 1692, n_alt = 0
  BB 4
   Insn 21: point = 1694, n_alt = 1
  BB 2
   Insn 13: point = 1695, n_alt = 1
   Insn 12: point = 1696, n_alt = 0
   Insn 11: point = 1697, n_alt = 0
   Insn 7: point = 1698, n_alt = 5
   Insn 6: point = 1698, n_alt = 5
   Insn 5: point = 1698, n_alt = 5
   Insn 4: point = 1698, n_alt = 5
   Insn 3: point = 1698, n_alt = 5
   Insn 2: point = 1698, n_alt = 5
 r87: [1689..1690]
 r88: [1684..1688]
 r89: [1684..1685]
 r90: [1682..1683]
 r91: [1679..1681]
 r92: [1675..1676]
 r93: [1670..1674]
 r94: [1670..1671]
 r95: [1668..1669]
 r96: [1665..1667]
 r97: [1636..1664]
 r98: [1660..1661]
 r99: [1655..1659]
 r100: [1655..1656]
 r101: [1653..1654]
 r102: [1650..1652]
 r103: [1636..1649]
 r104: [1645..1646]
 r105: [1640..1644]
 r106: [1640..1641]
 r107: [1638..1639]
 r108: [1633..1637]
 r109: [1633..1635]
 r110: [1612..1613]
 r111: [1607..1611]
 r112: [1607..1608]
 r113: [1605..1606]
 r114: [1602..1604]
 r115: [1596..1597]
 r116: [1591..1595]
 r117: [1591..1592]
 r118: [1589..1590]
 r119: [1586..1588]
 r120: [1583..1585]
 r121: [1578..1579]
 r122: [1573..1577]
 r123: [1573..1574]
 r124: [1571..1572]
 r125: [1568..1570]
 r126: [1563..1567]
 r127: [1563..1564]
 r128: [1543..1544]
 r129: [1536..1542]
 r130: [1538..1539]
 r131: [1536..1537]
 r132: [1531..1535]
 r133: [1531..1532]
 r134: [1529..1530]
 r135: [1514..1528]
 r136: [1524..1525]
 r137: [1519..1523]
 r138: [1519..1520]
 r139: [1517..1518]
 r140: [1511..1516]
 r141: [1511..1513]
 r142: [1507..1508]
 r143: [1500..1506]
 r144: [1502..1503]
 r145: [1500..1501]
 r146: [1495..1499]
 r147: [1495..1496]
 r148: [1493..1494]
 r149: [1478..1492]
 r150: [1488..1489]
 r151: [1483..1487]
 r152: [1483..1484]
 r153: [1481..1482]
 r154: [1475..1480]
 r155: [1475..1477]
 r156: [1471..1472]
 r157: [1466..1470]
 r158: [1466..1467]
 r159: [1464..1465]
 r160: [1460..1463]
 r161: [1454..1455]
 r162: [1447..1453]
 r163: [1449..1450]
 r164: [1447..1448]
 r165: [1442..1446]
 r166: [1442..1443]
 r167: [1440..1441]
 r168: [1437..1439]
 r169: [1425..1429]
 r170: [1425..1426]
 r171: [1423..1424]
 r172: [1415..1416]
 r173: [1408..1414]
 r174: [1410..1411]
 r175: [1408..1409]
 r176: [1403..1407]
 r177: [1403..1404]
 r178: [1401..1402]
 r179: [1398..1400]
 r180: [1392..1393]
 r181: [1387..1391]
 r182: [1387..1388]
 r183: [1385..1386]
 r184: [1382..1384]
 r185: [1372..1381]
 r186: [1377..1378]
 r187: [1374..1376]
 r188: [1372..1373]
 r189: [1367..1371]
 r190: [1367..1368]
 r191: [1353..1355]
 r192: [1334..1349]
 r193: [1343..1345]
 r194: [1341..1342]
 r195: [1338..1340]
 r196: [1336..1337]
 r197: [1334..1335]
 r198: [1332..1333]
 r199: [1325..1326]
 r200: [1318..1324]
 r201: [1320..1321]
 r202: [1318..1319]
 r203: [1315..1317]
 r204: [1302..1303]
 r205: [1297..1301]
 r206: [1297..1298]
 r207: [1295..1296]
 r208: [1292..1294]
 r209: [1290..1291]
 r210: [1285..1286]
 r211: [1280..1284]
 r212: [1280..1281]
 r213: [1278..1279]
 r214: [1274..1277]
 r215: [1266..1267]
 r216: [1261..1265]
 r217: [1261..1262]
 r218: [1259..1260]
 r219: [1256..1258]
 r220: [1253..1255]
 r221: [1248..1249]
 r222: [1243..1247]
 r223: [1243..1244]
 r224: [1241..1242]
 r225: [1237..1240]
 r226: [1229..1230]
 r227: [1224..1228]
 r228: [1224..1225]
 r229: [1222..1223]
 r230: [1219..1221]
 r231: [1217..1218]
 r232: [1212..1213]
 r233: [1207..1211]
 r234: [1207..1208]
 r235: [1205..1206]
 r236: [1201..1204]
 r237: [1189..1190]
 r238: [1184..1188]
 r239: [1184..1185]
 r240: [1182..1183]
 r241: [1179..1181]
 r242: [1557..1558] [1156..1178]
 r243: [1174..1175]
 r244: [1167..1173]
 r245: [1169..1170]
 r246: [1167..1168]
 r247: [1162..1166]
 r248: [1162..1163]
 r249: [1160..1161]
 r250: [1157..1159]
 r251: [1557..1558] [1156..1156]
 r252: [1134..1135]
 r253: [1129..1133]
 r254: [1129..1130]
 r255: [1127..1128]
 r256: [1124..1126]
 r257: [1120..1121]
 r258: [1115..1119]
 r259: [1115..1116]
 r260: [1113..1114]
 r261: [1110..1112]
 r262: [1107..1109]
 r263: [1101..1102]
 r264: [1096..1100]
 r265: [1096..1097]
 r266: [1094..1095]
 r267: [1091..1093]
 r268: [1085..1086]
 r269: [1078..1084]
 r270: [1080..1081]
 r271: [1078..1079]
 r272: [1073..1077]
 r273: [1073..1074]
 r274: [1071..1072]
 r275: [1068..1070]
 r276: [1062..1063]
 r277: [1057..1061]
 r278: [1057..1058]
 r279: [1055..1056]
 r280: [1052..1054]
 r281: [1050..1051]
 r282: [1010..1011]
 r283: [1005..1009]
 r284: [1005..1006]
 r285: [1003..1004]
 r286: [1000..1002]
 r287: [986..999]
 r288: [995..996]
 r289: [990..994]
 r290: [990..991]
 r291: [988..989]
 r292: [983..987]
 r293: [983..985]
 r294: [1042..1043]
 r295: [1037..1041]
 r296: [1037..1038]
 r297: [1035..1036]
 r298: [1032..1034]
 r299: [1018..1031]
 r300: [1027..1028]
 r301: [1022..1026]
 r302: [1022..1023]
 r303: [1020..1021]
 r304: [1015..1019]
 r305: [1015..1017]
 r306: [978..979]
 r307: [973..977]
 r308: [973..974]
 r309: [971..972]
 r310: [968..970]
 r311: [940..941]
 r312: [935..939]
 r313: [935..936]
 r314: [933..934]
 r315: [930..932]
 r316: [928..929]
 r317: [923..924]
 r318: [918..922]
 r319: [918..919]
 r320: [916..917]
 r321: [913..915]
 r322: [907..908]
 r323: [902..906]
 r324: [902..903]
 r325: [900..901]
 r326: [897..899]
 r327: [891..892]
 r328: [886..890]
 r329: [886..887]
 r330: [884..885]
 r331: [881..883]
 r332: [876..880]
 r333: [876..877]
 r334: [870..871]
 r335: [863..869]
 r336: [865..866]
 r337: [863..864]
 r338: [858..862]
 r339: [858..859]
 r340: [856..857]
 r341: [853..855]
 r342: [847..848]
 r343: [842..846]
 r344: [842..843]
 r345: [840..841]
 r346: [837..839]
 r347: [817..818]
 r348: [812..816]
 r349: [812..813]
 r350: [810..811]
 r351: [807..809]
 r352: [797..806]
 r353: [802..803]
 r354: [799..801]
 r355: [797..798]
 r356: [792..796]
 r357: [792..793]
 r358: [786..787]
 r359: [779..785]
 r360: [781..782]
 r361: [779..780]
 r362: [774..778]
 r363: [774..775]
 r364: [772..773]
 r365: [769..771]
 r366: [737..768]
 r367: [764..765]
 r368: [757..763]
 r369: [759..760]
 r370: [757..758]
 r371: [752..756]
 r372: [752..753]
 r373: [750..751]
 r374: [747..749]
 r375: [744..746]
 r376: [741..743]
 r377: [739..740]
 r378: [737..738]
 r379: [734..736]
 r381: [726..727]
 r382: [722..725]
 r383: [716..717]
 r384: [709..715]
 r385: [711..712]
 r386: [709..710]
 r387: [704..708]
 r388: [704..705]
 r389: [702..703]
 r390: [699..701]
 r391: [696..698]
 r392: [694..695]
 r393: [691..693]
 r394: [685..686]
 r395: [678..684]
 r396: [680..681]
 r397: [678..679]
 r398: [673..677]
 r399: [673..674]
 r400: [671..672]
 r401: [668..670]
 r402: [666..667]
 r403: [107..108]
 r404: [102..106]
 r405: [102..103]
 r406: [100..101]
 r407: [97..99]
 r408: [83..96]
 r409: [92..93]
 r410: [87..91]
 r411: [87..88]
 r412: [85..86]
 r413: [80..84]
 r414: [80..82]
 r415: [634..635]
 r416: [629..633]
 r417: [629..630]
 r418: [627..628]
 r419: [624..626]
 r420: [614..623]
 r421: [619..620]
 r422: [616..618]
 r423: [614..615]
 r424: [609..613]
 r425: [609..610]
 r426: [599..600]
 r427: [592..598]
 r428: [594..595]
 r429: [592..593]
 r430: [587..591]
 r431: [587..588]
 r432: [585..586]
 r433: [582..584]
 r434: [550..581]
 r435: [577..578]
 r436: [570..576]
 r437: [572..573]
 r438: [570..571]
 r439: [565..569]
 r440: [565..566]
 r441: [563..564]
 r442: [560..562]
 r443: [557..559]
 r444: [554..556]
 r445: [552..553]
 r446: [550..551]
 r447: [547..549]
 r449: [539..540]
 r450: [535..538]
 r451: [526..527]
 r452: [519..525]
 r453: [521..522]
 r454: [519..520]
 r455: [514..518]
 r456: [514..515]
 r457: [512..513]
 r458: [509..511]
 r459: [477..508]
 r460: [504..505]
 r461: [497..503]
 r462: [499..500]
 r463: [497..498]
 r464: [492..496]
 r465: [492..493]
 r466: [490..491]
 r467: [487..489]
 r468: [484..486]
 r469: [481..483]
 r470: [479..480]
 r471: [477..478]
 r472: [474..476]
 r474: [466..467]
 r475: [462..465]
 r476: [455..456]
 r477: [448..454]
 r478: [450..451]
 r479: [448..449]
 r480: [443..447]
 r481: [443..444]
 r482: [441..442]
 r483: [438..440]
 r484: [435..437]
 r485: [433..434]
 r486: [430..432]
 r487: [404..405]
 r488: [397..403]
 r489: [399..400]
 r490: [397..398]
 r491: [392..396]
 r492: [392..393]
 r493: [390..391]
 r494: [387..389]
 r495: [384..386]
 r496: [377..378]
 r497: [370..376]
 r498: [372..373]
 r499: [370..371]
 r500: [365..369]
 r501: [365..366]
 r502: [363..364]
 r503: [360..362]
 r504: [358..359]
 r505: [350..351]
 r506: [345..349]
 r507: [345..346]
 r508: [343..344]
 r509: [340..342]
 r510: [330..339]
 r511: [335..336]
 r512: [332..334]
 r513: [330..331]
 r514: [325..329]
 r515: [325..326]
 r516: [319..320]
 r517: [312..318]
 r518: [314..315]
 r519: [312..313]
 r520: [307..311]
 r521: [307..308]
 r522: [305..306]
 r523: [302..304]
 r524: [270..301]
 r525: [297..298]
 r526: [290..296]
 r527: [292..293]
 r528: [290..291]
 r529: [285..289]
 r530: [285..286]
 r531: [283..284]
 r532: [280..282]
 r533: [277..279]
 r534: [274..276]
 r535: [272..273]
 r536: [270..271]
 r537: [267..269]
 r539: [259..260]
 r540: [255..258]
 r541: [249..250]
 r542: [242..248]
 r543: [244..245]
 r544: [242..243]
 r545: [237..241]
 r546: [237..238]
 r547: [235..236]
 r548: [232..234]
 r549: [229..231]
 r550: [227..228]
 r551: [224..226]
 r552: [215..216]
 r553: [208..214]
 r554: [210..211]
 r555: [208..209]
 r556: [203..207]
 r557: [203..204]
 r558: [201..202]
 r559: [198..200]
 r560: [196..197]
 r561: [185..186]
 r562: [178..184]
 r563: [180..181]
 r564: [178..179]
 r565: [173..177]
 r566: [173..174]
 r567: [171..172]
 r568: [168..170]
 r569: [165..167]
 r570: [139..140]
 r571: [134..138]
 r572: [134..135]
 r573: [132..133]
 r574: [129..131]
 r575: [115..128]
 r576: [124..125]
 r577: [119..123]
 r578: [119..120]
 r579: [117..118]
 r580: [112..116]
 r581: [112..114]
 r582: [40..41]
 r583: [35..39]
 r584: [35..36]
 r585: [33..34]
 r586: [30..32]
 r587: [16..29]
 r588: [25..26]
 r589: [20..24]
 r590: [20..21]
 r591: [18..19]
 r592: [13..17]
 r593: [13..15]
 r594: [72..73]
 r595: [67..71]
 r596: [67..68]
 r597: [65..66]
 r598: [62..64]
 r599: [48..61]
 r600: [57..58]
 r601: [52..56]
 r602: [52..53]
 r603: [50..51]
 r604: [45..49]
 r605: [45..47]
 r606: [1423..1434] [1419..1421]
 r607: [1695..1697]
 r608: [1621..1696]
 r609: [1621..1622]
 r610: [1628..1629]
 r611: [1618..1620]
 r612: [1143..1619]
 r613: [1143..1144]
 r614: [1150..1151]
 r615: [1195..1459]
 r616: [1195..1196]
 r617: [1140..1142]
 r618: [955..1141]
 r619: [955..956]
 r620: [962..963]
 r621: [946..948]
 r622: [0..947]
 r623: [0..1]
 r624: [7..8]
 r625: [822..824]
 r626: [653..823]
 r627: [653..654]
 r628: [639..640]
 r629: [416..417]
 r630: [410..411]
 r631: [154..155]
 r632: [1623..1624]
 r633: [1630..1631]
 r634: [1691..1692]
 r635: [1686..1687]
 r636: [1679..1680]
 r637: [1677..1678]
 r638: [1672..1673]
 r639: [1665..1666]
 r640: [1662..1663]
 r641: [1657..1658]
 r642: [1650..1651]
 r643: [1647..1648]
 r644: [1642..1643]
 r645: [1633..1634]
 r646: [1145..1146]
 r647: [1152..1153]
 r648: [1614..1615]
 r649: [1609..1610]
 r650: [1602..1603]
 r651: [1600..1601]
 r652: [1598..1599]
 r653: [1593..1594]
 r654: [1586..1587]
 r655: [1583..1584]
 r656: [1580..1581]
 r657: [1575..1576]
 r658: [1568..1569]
 r659: [1565..1566]
 r660: [1561..1562]
 r661: [1559..1560]
 r662: [1545..1546]
 r663: [1540..1541]
 r664: [1533..1534]
 r665: [1526..1527]
 r666: [1521..1522]
 r667: [1514..1515]
 r668: [1511..1512]
 r669: [1509..1510]
 r670: [1504..1505]
 r671: [1497..1498]
 r672: [1490..1491]
 r673: [1485..1486]
 r674: [1478..1479]
 r675: [1475..1476]
 r676: [1473..1474]
 r677: [1468..1469]
 r678: [1460..1462]
 r679: [1460..1461]
 r680: [1197..1198]
 r681: [1456..1457]
 r682: [1451..1452]
 r683: [1444..1445]
 r684: [1437..1438]
 r685: [1435..1436]
 r686: [1430..1431]
 r687: [1432..1433]
 r688: [1427..1428]
 r689: [1417..1418]
 r690: [1412..1413]
 r691: [1405..1406]
 r692: [1398..1399]
 r693: [1396..1397]
 r694: [1394..1395]
 r695: [1389..1390]
 r696: [1382..1383]
 r697: [1379..1380]
 r698: [1374..1375]
 r699: [1369..1370]
 r700: [1365..1366]
 r701: [1363..1364]
 r702: [1359..1361]
 r703: [1357..1360]
 r704: [1353..1354]
 r705: [1350..1351]
 r706: [1346..1348]
 r707: [1346..1347]
 r708: [1343..1344]
 r709: [1338..1339]
 r710: [1330..1331]
 r711: [1327..1329]
 r712: [1327..1328]
 r713: [1322..1323]
 r714: [1313..1314]
 r715: [1315..1316]
 r716: [1309..1310]
 r717: [1311..1312]
 r718: [1307..1308]
 r719: [1304..1305]
 r720: [1299..1300]
 r721: [1292..1293]
 r722: [1287..1288]
 r723: [1282..1283]
 r724: [1274..1276]
 r725: [1274..1275]
 r726: [1271..1272]
 r727: [1268..1269]
 r728: [1263..1264]
 r729: [1256..1257]
 r730: [1253..1254]
 r731: [1250..1251]
 r732: [1245..1246]
 r733: [1237..1239]
 r734: [1237..1238]
 r735: [1234..1235]
 r736: [1231..1232]
 r737: [1226..1227]
 r738: [1219..1220]
 r739: [1214..1215]
 r740: [1209..1210]
 r741: [1201..1203]
 r742: [1201..1202]
 r743: [1191..1192]
 r744: [1186..1187]
 r745: [1179..1180]
 r746: [1176..1177]
 r747: [1171..1172]
 r748: [1164..1165]
 r749: [1157..1158]
 r750: [1554..1555]
 r751: [1548..1549]
 r752: [1550..1552]
 r753: [1550..1551]
 r754: [957..958]
 r755: [964..965]
 r756: [1136..1137]
 r757: [1131..1132]
 r758: [1124..1125]
 r759: [1122..1123]
 r760: [1117..1118]
 r761: [1110..1111]
 r762: [1107..1108]
 r763: [1103..1104]
 r764: [1098..1099]
 r765: [1091..1092]
 r766: [1089..1090]
 r767: [1087..1088]
 r768: [1082..1083]
 r769: [1075..1076]
 r770: [1068..1069]
 r771: [1066..1067]
 r772: [1064..1065]
 r773: [1059..1060]
 r774: [1052..1053]
 r775: [1047..1048]
 r776: [1012..1013]
 r777: [1007..1008]
 r778: [1000..1001]
 r779: [997..998]
 r780: [992..993]
 r781: [983..984]
 r782: [1044..1045]
 r783: [1039..1040]
 r784: [1032..1033]
 r785: [1029..1030]
 r786: [1024..1025]
 r787: [1015..1016]
 r788: [980..981]
 r789: [975..976]
 r790: [968..969]
 r791: [951..954]
 r792: [950..953]
 r793: [949..952]
 r794: [2..3]
 r795: [9..10]
 r796: [942..943]
 r797: [937..938]
 r798: [930..931]
 r799: [925..926]
 r800: [920..921]
 r801: [913..914]
 r802: [911..912]
 r803: [909..910]
 r804: [904..905]
 r805: [897..898]
 r806: [895..896]
 r807: [893..894]
 r808: [888..889]
 r809: [881..882]
 r810: [878..879]
 r811: [874..875]
 r812: [872..873]
 r813: [867..868]
 r814: [860..861]
 r815: [853..854]
 r816: [851..852]
 r817: [849..850]
 r818: [844..845]
 r819: [837..838]
 r820: [835..836]
 r821: [833..834]
 r822: [831..832]
 r823: [829..830]
 r824: [827..828]
 r825: [825..826]
 r826: [655..656]
 r827: [819..820]
 r828: [814..815]
 r829: [807..808]
 r830: [804..805]
 r831: [799..800]
 r832: [794..795]
 r833: [790..791]
 r834: [788..789]
 r835: [783..784]
 r836: [776..777]
 r837: [769..770]
 r838: [766..767]
 r839: [761..762]
 r840: [754..755]
 r841: [747..748]
 r842: [744..745]
 r843: [741..742]
 r844: [732..735]
 r845: [728..729]
 r846: [720..721]
 r847: [718..719]
 r848: [713..714]
 r849: [706..707]
 r850: [699..700]
 r851: [696..697]
 r852: [689..690]
 r853: [691..692]
 r854: [687..688]
 r855: [682..683]
 r856: [675..676]
 r857: [668..669]
 r858: [661..662]
 r859: [663..664]
 r860: [658..659]
 r861: [649..650]
 r862: [109..110]
 r863: [104..105]
 r864: [97..98]
 r865: [94..95]
 r866: [89..90]
 r867: [80..81]
 r868: [646..647]
 r869: [641..642]
 r870: [643..645]
 r871: [643..644]
 r872: [418..419]
 r873: [636..637]
 r874: [631..632]
 r875: [624..625]
 r876: [621..622]
 r877: [616..617]
 r878: [611..612]
 r879: [607..608]
 r880: [605..606]
 r881: [601..602]
 r882: [596..597]
 r883: [589..590]
 r884: [582..583]
 r885: [579..580]
 r886: [574..575]
 r887: [567..568]
 r888: [560..561]
 r889: [557..558]
 r890: [554..555]
 r891: [545..548]
 r892: [541..542]
 r893: [533..534]
 r894: [531..532]
 r895: [528..529]
 r896: [523..524]
 r897: [516..517]
 r898: [509..510]
 r899: [506..507]
 r900: [501..502]
 r901: [494..495]
 r902: [487..488]
 r903: [484..485]
 r904: [481..482]
 r905: [472..475]
 r906: [468..469]
 r907: [460..461]
 r908: [457..458]
 r909: [452..453]
 r910: [445..446]
 r911: [438..439]
 r912: [435..436]
 r913: [428..429]
 r914: [430..431]
 r915: [424..425]
 r916: [426..427]
 r917: [421..422]
 r918: [412..413]
 r919: [156..157]
 r920: [406..407]
 r921: [401..402]
 r922: [394..395]
 r923: [387..388]
 r924: [384..385]
 r925: [379..380]
 r926: [374..375]
 r927: [367..368]
 r928: [360..361]
 r929: [352..353]
 r930: [347..348]
 r931: [340..341]
 r932: [337..338]
 r933: [332..333]
 r934: [327..328]
 r935: [323..324]
 r936: [321..322]
 r937: [316..317]
 r938: [309..310]
 r939: [302..303]
 r940: [299..300]
 r941: [294..295]
 r942: [287..288]
 r943: [280..281]
 r944: [277..278]
 r945: [274..275]
 r946: [265..268]
 r947: [261..262]
 r948: [253..254]
 r949: [251..252]
 r950: [246..247]
 r951: [239..240]
 r952: [232..233]
 r953: [229..230]
 r954: [222..223]
 r955: [224..225]
 r956: [220..221]
 r957: [217..218]
 r958: [212..213]
 r959: [205..206]
 r960: [198..199]
 r961: [191..192]
 r962: [193..194]
 r963: [187..188]
 r964: [182..183]
 r965: [175..176]
 r966: [168..169]
 r967: [165..166]
 r968: [160..161]
 r969: [162..163]
 r970: [150..151]
 r971: [147..148]
 r972: [144..145]
 r973: [141..142]
 r974: [136..137]
 r975: [129..130]
 r976: [126..127]
 r977: [121..122]
 r978: [112..113]
 r979: [77..78]
 r980: [42..43]
 r981: [37..38]
 r982: [30..31]
 r983: [27..28]
 r984: [22..23]
 r985: [13..14]
 r986: [74..75]
 r987: [69..70]
 r988: [62..63]
 r989: [59..60]
 r990: [54..55]
 r991: [45..46]
 r992: [1356..1358]
 r993: [731..733]
 r994: [722..723]
 r995: [544..546]
 r996: [535..536]
 r997: [471..473]
 r998: [462..463]
 r999: [264..266]
 r1000: [255..256]
 r1001: [724..730]
 r1002: [464..470]
 r1003: [537..543]
 r1004: [257..263]
Compressing live ranges: from 1698 to 1359 - 80%
Ranges after the compression:
 r87: [1353..1354]
 r88: [1349..1352]
 r89: [1349..1350]
 r90: [1347..1348]
 r91: [1345..1346]
 r92: [1341..1342]
 r93: [1337..1340]
 r94: [1337..1338]
 r95: [1335..1336]
 r96: [1333..1334]
 r97: [1309..1332]
 r98: [1329..1330]
 r99: [1325..1328]
 r100: [1325..1326]
 r101: [1323..1324]
 r102: [1321..1322]
 r103: [1309..1320]
 r104: [1317..1318]
 r105: [1313..1316]
 r106: [1313..1314]
 r107: [1311..1312]
 r108: [1307..1310]
 r109: [1307..1308]
 r110: [1293..1294]
 r111: [1289..1292]
 r112: [1289..1290]
 r113: [1287..1288]
 r114: [1285..1286]
 r115: [1279..1280]
 r116: [1275..1278]
 r117: [1275..1276]
 r118: [1273..1274]
 r119: [1271..1272]
 r120: [1269..1270]
 r121: [1265..1266]
 r122: [1261..1264]
 r123: [1261..1262]
 r124: [1259..1260]
 r125: [1257..1258]
 r126: [1253..1256]
 r127: [1253..1254]
 r128: [1237..1238]
 r129: [1231..1236]
 r130: [1233..1234]
 r131: [1231..1232]
 r132: [1227..1230]
 r133: [1227..1228]
 r134: [1225..1226]
 r135: [1213..1224]
 r136: [1221..1222]
 r137: [1217..1220]
 r138: [1217..1218]
 r139: [1215..1216]
 r140: [1211..1214]
 r141: [1211..1212]
 r142: [1207..1208]
 r143: [1201..1206]
 r144: [1203..1204]
 r145: [1201..1202]
 r146: [1197..1200]
 r147: [1197..1198]
 r148: [1195..1196]
 r149: [1183..1194]
 r150: [1191..1192]
 r151: [1187..1190]
 r152: [1187..1188]
 r153: [1185..1186]
 r154: [1181..1184]
 r155: [1181..1182]
 r156: [1177..1178]
 r157: [1173..1176]
 r158: [1173..1174]
 r159: [1171..1172]
 r160: [1169..1170]
 r161: [1165..1166]
 r162: [1159..1164]
 r163: [1161..1162]
 r164: [1159..1160]
 r165: [1155..1158]
 r166: [1155..1156]
 r167: [1153..1154]
 r168: [1151..1152]
 r169: [1141..1144]
 r170: [1141..1142]
 r171: [1139..1140]
 r172: [1133..1134]
 r173: [1127..1132]
 r174: [1129..1130]
 r175: [1127..1128]
 r176: [1123..1126]
 r177: [1123..1124]
 r178: [1121..1122]
 r179: [1119..1120]
 r180: [1113..1114]
 r181: [1109..1112]
 r182: [1109..1110]
 r183: [1107..1108]
 r184: [1105..1106]
 r185: [1097..1104]
 r186: [1101..1102]
 r187: [1099..1100]
 r188: [1097..1098]
 r189: [1093..1096]
 r190: [1093..1094]
 r191: [1083..1084]
 r192: [1069..1080]
 r193: [1077..1078]
 r194: [1075..1076]
 r195: [1073..1074]
 r196: [1071..1072]
 r197: [1069..1070]
 r198: [1067..1068]
 r199: [1061..1062]
 r200: [1055..1060]
 r201: [1057..1058]
 r202: [1055..1056]
 r203: [1053..1054]
 r204: [1041..1042]
 r205: [1037..1040]
 r206: [1037..1038]
 r207: [1035..1036]
 r208: [1033..1034]
 r209: [1031..1032]
 r210: [1027..1028]
 r211: [1023..1026]
 r212: [1023..1024]
 r213: [1021..1022]
 r214: [1019..1020]
 r215: [1013..1014]
 r216: [1009..1012]
 r217: [1009..1010]
 r218: [1007..1008]
 r219: [1005..1006]
 r220: [1003..1004]
 r221: [999..1000]
 r222: [995..998]
 r223: [995..996]
 r224: [993..994]
 r225: [991..992]
 r226: [985..986]
 r227: [981..984]
 r228: [981..982]
 r229: [979..980]
 r230: [977..978]
 r231: [975..976]
 r232: [971..972]
 r233: [967..970]
 r234: [967..968]
 r235: [965..966]
 r236: [963..964]
 r237: [955..956]
 r238: [951..954]
 r239: [951..952]
 r240: [949..950]
 r241: [947..948]
 r242: [1247..1248] [928..946]
 r243: [943..944]
 r244: [937..942]
 r245: [939..940]
 r246: [937..938]
 r247: [933..936]
 r248: [933..934]
 r249: [931..932]
 r250: [929..930]
 r251: [1247..1248] [928..928]
 r252: [914..915]
 r253: [910..913]
 r254: [910..911]
 r255: [908..909]
 r256: [906..907]
 r257: [902..903]
 r258: [898..901]
 r259: [898..899]
 r260: [896..897]
 r261: [894..895]
 r262: [892..893]
 r263: [888..889]
 r264: [884..887]
 r265: [884..885]
 r266: [882..883]
 r267: [880..881]
 r268: [874..875]
 r269: [868..873]
 r270: [870..871]
 r271: [868..869]
 r272: [864..867]
 r273: [864..865]
 r274: [862..863]
 r275: [860..861]
 r276: [854..855]
 r277: [850..853]
 r278: [850..851]
 r279: [848..849]
 r280: [846..847]
 r281: [844..845]
 r282: [812..813]
 r283: [808..811]
 r284: [808..809]
 r285: [806..807]
 r286: [804..805]
 r287: [792..803]
 r288: [800..801]
 r289: [796..799]
 r290: [796..797]
 r291: [794..795]
 r292: [790..793]
 r293: [790..791]
 r294: [838..839]
 r295: [834..837]
 r296: [834..835]
 r297: [832..833]
 r298: [830..831]
 r299: [818..829]
 r300: [826..827]
 r301: [822..825]
 r302: [822..823]
 r303: [820..821]
 r304: [816..819]
 r305: [816..817]
 r306: [786..787]
 r307: [782..785]
 r308: [782..783]
 r309: [780..781]
 r310: [778..779]
 r311: [762..763]
 r312: [758..761]
 r313: [758..759]
 r314: [756..757]
 r315: [754..755]
 r316: [752..753]
 r317: [748..749]
 r318: [744..747]
 r319: [744..745]
 r320: [742..743]
 r321: [740..741]
 r322: [734..735]
 r323: [730..733]
 r324: [730..731]
 r325: [728..729]
 r326: [726..727]
 r327: [720..721]
 r328: [716..719]
 r329: [716..717]
 r330: [714..715]
 r331: [712..713]
 r332: [708..711]
 r333: [708..709]
 r334: [702..703]
 r335: [696..701]
 r336: [698..699]
 r337: [696..697]
 r338: [692..695]
 r339: [692..693]
 r340: [690..691]
 r341: [688..689]
 r342: [682..683]
 r343: [678..681]
 r344: [678..679]
 r345: [676..677]
 r346: [674..675]
 r347: [656..657]
 r348: [652..655]
 r349: [652..653]
 r350: [650..651]
 r351: [648..649]
 r352: [640..647]
 r353: [644..645]
 r354: [642..643]
 r355: [640..641]
 r356: [636..639]
 r357: [636..637]
 r358: [630..631]
 r359: [624..629]
 r360: [626..627]
 r361: [624..625]
 r362: [620..623]
 r363: [620..621]
 r364: [618..619]
 r365: [616..617]
 r366: [590..615]
 r367: [612..613]
 r368: [606..611]
 r369: [608..609]
 r370: [606..607]
 r371: [602..605]
 r372: [602..603]
 r373: [600..601]
 r374: [598..599]
 r375: [596..597]
 r376: [594..595]
 r377: [592..593]
 r378: [590..591]
 r379: [588..589]
 r381: [582..583]
 r382: [578..581]
 r383: [572..573]
 r384: [566..571]
 r385: [568..569]
 r386: [566..567]
 r387: [562..565]
 r388: [562..563]
 r389: [560..561]
 r390: [558..559]
 r391: [556..557]
 r392: [554..555]
 r393: [552..553]
 r394: [546..547]
 r395: [540..545]
 r396: [542..543]
 r397: [540..541]
 r398: [536..539]
 r399: [536..537]
 r400: [534..535]
 r401: [532..533]
 r402: [530..531]
 r403: [84..85]
 r404: [80..83]
 r405: [80..81]
 r406: [78..79]
 r407: [76..77]
 r408: [64..75]
 r409: [72..73]
 r410: [68..71]
 r411: [68..69]
 r412: [66..67]
 r413: [62..65]
 r414: [62..63]
 r415: [506..507]
 r416: [502..505]
 r417: [502..503]
 r418: [500..501]
 r419: [498..499]
 r420: [490..497]
 r421: [494..495]
 r422: [492..493]
 r423: [490..491]
 r424: [486..489]
 r425: [486..487]
 r426: [478..479]
 r427: [472..477]
 r428: [474..475]
 r429: [472..473]
 r430: [468..471]
 r431: [468..469]
 r432: [466..467]
 r433: [464..465]
 r434: [438..463]
 r435: [460..461]
 r436: [454..459]
 r437: [456..457]
 r438: [454..455]
 r439: [450..453]
 r440: [450..451]
 r441: [448..449]
 r442: [446..447]
 r443: [444..445]
 r444: [442..443]
 r445: [440..441]
 r446: [438..439]
 r447: [436..437]
 r449: [430..431]
 r450: [426..429]
 r451: [418..419]
 r452: [412..417]
 r453: [414..415]
 r454: [412..413]
 r455: [408..411]
 r456: [408..409]
 r457: [406..407]
 r458: [404..405]
 r459: [378..403]
 r460: [400..401]
 r461: [394..399]
 r462: [396..397]
 r463: [394..395]
 r464: [390..393]
 r465: [390..391]
 r466: [388..389]
 r467: [386..387]
 r468: [384..385]
 r469: [382..383]
 r470: [380..381]
 r471: [378..379]
 r472: [376..377]
 r474: [370..371]
 r475: [366..369]
 r476: [360..361]
 r477: [354..359]
 r478: [356..357]
 r479: [354..355]
 r480: [350..353]
 r481: [350..351]
 r482: [348..349]
 r483: [346..347]
 r484: [344..345]
 r485: [342..343]
 r486: [340..341]
 r487: [320..321]
 r488: [314..319]
 r489: [316..317]
 r490: [314..315]
 r491: [310..313]
 r492: [310..311]
 r493: [308..309]
 r494: [306..307]
 r495: [304..305]
 r496: [300..301]
 r497: [294..299]
 r498: [296..297]
 r499: [294..295]
 r500: [290..293]
 r501: [290..291]
 r502: [288..289]
 r503: [286..287]
 r504: [284..285]
 r505: [280..281]
 r506: [276..279]
 r507: [276..277]
 r508: [274..275]
 r509: [272..273]
 r510: [264..271]
 r511: [268..269]
 r512: [266..267]
 r513: [264..265]
 r514: [260..263]
 r515: [260..261]
 r516: [254..255]
 r517: [248..253]
 r518: [250..251]
 r519: [248..249]
 r520: [244..247]
 r521: [244..245]
 r522: [242..243]
 r523: [240..241]
 r524: [214..239]
 r525: [236..237]
 r526: [230..235]
 r527: [232..233]
 r528: [230..231]
 r529: [226..229]
 r530: [226..227]
 r531: [224..225]
 r532: [222..223]
 r533: [220..221]
 r534: [218..219]
 r535: [216..217]
 r536: [214..215]
 r537: [212..213]
 r539: [206..207]
 r540: [202..205]
 r541: [196..197]
 r542: [190..195]
 r543: [192..193]
 r544: [190..191]
 r545: [186..189]
 r546: [186..187]
 r547: [184..185]
 r548: [182..183]
 r549: [180..181]
 r550: [178..179]
 r551: [176..177]
 r552: [168..169]
 r553: [162..167]
 r554: [164..165]
 r555: [162..163]
 r556: [158..161]
 r557: [158..159]
 r558: [156..157]
 r559: [154..155]
 r560: [152..153]
 r561: [144..145]
 r562: [138..143]
 r563: [140..141]
 r564: [138..139]
 r565: [134..137]
 r566: [134..135]
 r567: [132..133]
 r568: [130..131]
 r569: [128..129]
 r570: [110..111]
 r571: [106..109]
 r572: [106..107]
 r573: [104..105]
 r574: [102..103]
 r575: [90..101]
 r576: [98..99]
 r577: [94..97]
 r578: [94..95]
 r579: [92..93]
 r580: [88..91]
 r581: [88..89]
 r582: [30..31]
 r583: [26..29]
 r584: [26..27]
 r585: [24..25]
 r586: [22..23]
 r587: [10..21]
 r588: [18..19]
 r589: [14..17]
 r590: [14..15]
 r591: [12..13]
 r592: [8..11]
 r593: [8..9]
 r594: [56..57]
 r595: [52..55]
 r596: [52..53]
 r597: [50..51]
 r598: [48..49]
 r599: [36..47]
 r600: [44..45]
 r601: [40..43]
 r602: [40..41]
 r603: [38..39]
 r604: [34..37]
 r605: [34..35]
 r606: [1137..1148]
 r607: [1357..1358]
 r608: [1299..1358]
 r609: [1299..1300]
 r610: [1303..1304]
 r611: [1297..1298]
 r612: [920..1298]
 r613: [920..921]
 r614: [924..925]
 r615: [959..1168]
 r616: [959..960]
 r617: [918..919]
 r618: [770..919]
 r619: [770..771]
 r620: [774..775]
 r621: [766..767]
 r622: [0..767]
 r623: [0..1]
 r624: [4..5]
 r625: [660..661]
 r626: [520..661]
 r627: [520..521]
 r628: [510..511]
 r629: [328..329]
 r630: [324..325]
 r631: [120..121]
 r632: [1301..1302]
 r633: [1305..1306]
 r634: [1355..1356]
 r635: [1351..1352]
 r636: [1345..1346]
 r637: [1343..1344]
 r638: [1339..1340]
 r639: [1333..1334]
 r640: [1331..1332]
 r641: [1327..1328]
 r642: [1321..1322]
 r643: [1319..1320]
 r644: [1315..1316]
 r645: [1307..1308]
 r646: [922..923]
 r647: [926..927]
 r648: [1295..1296]
 r649: [1291..1292]
 r650: [1285..1286]
 r651: [1283..1284]
 r652: [1281..1282]
 r653: [1277..1278]
 r654: [1271..1272]
 r655: [1269..1270]
 r656: [1267..1268]
 r657: [1263..1264]
 r658: [1257..1258]
 r659: [1255..1256]
 r660: [1251..1252]
 r661: [1249..1250]
 r662: [1239..1240]
 r663: [1235..1236]
 r664: [1229..1230]
 r665: [1223..1224]
 r666: [1219..1220]
 r667: [1213..1214]
 r668: [1211..1212]
 r669: [1209..1210]
 r670: [1205..1206]
 r671: [1199..1200]
 r672: [1193..1194]
 r673: [1189..1190]
 r674: [1183..1184]
 r675: [1181..1182]
 r676: [1179..1180]
 r677: [1175..1176]
 r678: [1169..1170]
 r679: [1169..1170]
 r680: [961..962]
 r681: [1167..1168]
 r682: [1163..1164]
 r683: [1157..1158]
 r684: [1151..1152]
 r685: [1149..1150]
 r686: [1145..1146]
 r687: [1147..1148]
 r688: [1143..1144]
 r689: [1135..1136]
 r690: [1131..1132]
 r691: [1125..1126]
 r692: [1119..1120]
 r693: [1117..1118]
 r694: [1115..1116]
 r695: [1111..1112]
 r696: [1105..1106]
 r697: [1103..1104]
 r698: [1099..1100]
 r699: [1095..1096]
 r700: [1091..1092]
 r701: [1089..1090]
 r702: [1087..1088]
 r703: [1085..1088]
 r704: [1083..1084]
 r705: [1081..1082]
 r706: [1079..1080]
 r707: [1079..1080]
 r708: [1077..1078]
 r709: [1073..1074]
 r710: [1065..1066]
 r711: [1063..1064]
 r712: [1063..1064]
 r713: [1059..1060]
 r714: [1051..1052]
 r715: [1053..1054]
 r716: [1047..1048]
 r717: [1049..1050]
 r718: [1045..1046]
 r719: [1043..1044]
 r720: [1039..1040]
 r721: [1033..1034]
 r722: [1029..1030]
 r723: [1025..1026]
 r724: [1019..1020]
 r725: [1019..1020]
 r726: [1017..1018]
 r727: [1015..1016]
 r728: [1011..1012]
 r729: [1005..1006]
 r730: [1003..1004]
 r731: [1001..1002]
 r732: [997..998]
 r733: [991..992]
 r734: [991..992]
 r735: [989..990]
 r736: [987..988]
 r737: [983..984]
 r738: [977..978]
 r739: [973..974]
 r740: [969..970]
 r741: [963..964]
 r742: [963..964]
 r743: [957..958]
 r744: [953..954]
 r745: [947..948]
 r746: [945..946]
 r747: [941..942]
 r748: [935..936]
 r749: [929..930]
 r750: [1245..1246]
 r751: [1241..1242]
 r752: [1243..1244]
 r753: [1243..1244]
 r754: [772..773]
 r755: [776..777]
 r756: [916..917]
 r757: [912..913]
 r758: [906..907]
 r759: [904..905]
 r760: [900..901]
 r761: [894..895]
 r762: [892..893]
 r763: [890..891]
 r764: [886..887]
 r765: [880..881]
 r766: [878..879]
 r767: [876..877]
 r768: [872..873]
 r769: [866..867]
 r770: [860..861]
 r771: [858..859]
 r772: [856..857]
 r773: [852..853]
 r774: [846..847]
 r775: [842..843]
 r776: [814..815]
 r777: [810..811]
 r778: [804..805]
 r779: [802..803]
 r780: [798..799]
 r781: [790..791]
 r782: [840..841]
 r783: [836..837]
 r784: [830..831]
 r785: [828..829]
 r786: [824..825]
 r787: [816..817]
 r788: [788..789]
 r789: [784..785]
 r790: [778..779]
 r791: [768..769]
 r792: [768..769]
 r793: [768..769]
 r794: [2..3]
 r795: [6..7]
 r796: [764..765]
 r797: [760..761]
 r798: [754..755]
 r799: [750..751]
 r800: [746..747]
 r801: [740..741]
 r802: [738..739]
 r803: [736..737]
 r804: [732..733]
 r805: [726..727]
 r806: [724..725]
 r807: [722..723]
 r808: [718..719]
 r809: [712..713]
 r810: [710..711]
 r811: [706..707]
 r812: [704..705]
 r813: [700..701]
 r814: [694..695]
 r815: [688..689]
 r816: [686..687]
 r817: [684..685]
 r818: [680..681]
 r819: [674..675]
 r820: [672..673]
 r821: [670..671]
 r822: [668..669]
 r823: [666..667]
 r824: [664..665]
 r825: [662..663]
 r826: [522..523]
 r827: [658..659]
 r828: [654..655]
 r829: [648..649]
 r830: [646..647]
 r831: [642..643]
 r832: [638..639]
 r833: [634..635]
 r834: [632..633]
 r835: [628..629]
 r836: [622..623]
 r837: [616..617]
 r838: [614..615]
 r839: [610..611]
 r840: [604..605]
 r841: [598..599]
 r842: [596..597]
 r843: [594..595]
 r844: [586..589]
 r845: [584..585]
 r846: [576..577]
 r847: [574..575]
 r848: [570..571]
 r849: [564..565]
 r850: [558..559]
 r851: [556..557]
 r852: [550..551]
 r853: [552..553]
 r854: [548..549]
 r855: [544..545]
 r856: [538..539]
 r857: [532..533]
 r858: [526..527]
 r859: [528..529]
 r860: [524..525]
 r861: [518..519]
 r862: [86..87]
 r863: [82..83]
 r864: [76..77]
 r865: [74..75]
 r866: [70..71]
 r867: [62..63]
 r868: [516..517]
 r869: [512..513]
 r870: [514..515]
 r871: [514..515]
 r872: [330..331]
 r873: [508..509]
 r874: [504..505]
 r875: [498..499]
 r876: [496..497]
 r877: [492..493]
 r878: [488..489]
 r879: [484..485]
 r880: [482..483]
 r881: [480..481]
 r882: [476..477]
 r883: [470..471]
 r884: [464..465]
 r885: [462..463]
 r886: [458..459]
 r887: [452..453]
 r888: [446..447]
 r889: [444..445]
 r890: [442..443]
 r891: [434..437]
 r892: [432..433]
 r893: [424..425]
 r894: [422..423]
 r895: [420..421]
 r896: [416..417]
 r897: [410..411]
 r898: [404..405]
 r899: [402..403]
 r900: [398..399]
 r901: [392..393]
 r902: [386..387]
 r903: [384..385]
 r904: [382..383]
 r905: [374..377]
 r906: [372..373]
 r907: [364..365]
 r908: [362..363]
 r909: [358..359]
 r910: [352..353]
 r911: [346..347]
 r912: [344..345]
 r913: [338..339]
 r914: [340..341]
 r915: [334..335]
 r916: [336..337]
 r917: [332..333]
 r918: [326..327]
 r919: [122..123]
 r920: [322..323]
 r921: [318..319]
 r922: [312..313]
 r923: [306..307]
 r924: [304..305]
 r925: [302..303]
 r926: [298..299]
 r927: [292..293]
 r928: [286..287]
 r929: [282..283]
 r930: [278..279]
 r931: [272..273]
 r932: [270..271]
 r933: [266..267]
 r934: [262..263]
 r935: [258..259]
 r936: [256..257]
 r937: [252..253]
 r938: [246..247]
 r939: [240..241]
 r940: [238..239]
 r941: [234..235]
 r942: [228..229]
 r943: [222..223]
 r944: [220..221]
 r945: [218..219]
 r946: [210..213]
 r947: [208..209]
 r948: [200..201]
 r949: [198..199]
 r950: [194..195]
 r951: [188..189]
 r952: [182..183]
 r953: [180..181]
 r954: [174..175]
 r955: [176..177]
 r956: [172..173]
 r957: [170..171]
 r958: [166..167]
 r959: [160..161]
 r960: [154..155]
 r961: [148..149]
 r962: [150..151]
 r963: [146..147]
 r964: [142..143]
 r965: [136..137]
 r966: [130..131]
 r967: [128..129]
 r968: [124..125]
 r969: [126..127]
 r970: [118..119]
 r971: [116..117]
 r972: [114..115]
 r973: [112..113]
 r974: [108..109]
 r975: [102..103]
 r976: [100..101]
 r977: [96..97]
 r978: [88..89]
 r979: [60..61]
 r980: [32..33]
 r981: [28..29]
 r982: [22..23]
 r983: [20..21]
 r984: [16..17]
 r985: [8..9]
 r986: [58..59]
 r987: [54..55]
 r988: [48..49]
 r989: [46..47]
 r990: [42..43]
 r991: [34..35]
 r992: [1085..1086]
 r993: [586..587]
 r994: [578..579]
 r995: [434..435]
 r996: [426..427]
 r997: [374..375]
 r998: [366..367]
 r999: [210..211]
 r1000: [202..203]
 r1001: [580..585]
 r1002: [368..373]
 r1003: [428..433]
 r1004: [204..209]

********** Assignment #1: **********

	 Assigning to 992 (cl=SSE_REGS, orig=702, freq=3000, tfirst=992, tfreq=3000)...
	   Assign 21 to reload r992 (freq=3000)
	 Assigning to 1001 (cl=SSE_REGS, orig=380, freq=2000, tfirst=993, tfreq=3000)...
	 Assigning to 993 (cl=SSE_REGS, orig=379, freq=3000, tfirst=993, tfreq=3000)...
	   Assign 22 to reload r993 (freq=3000)
	Hard reg 22 is preferable by r1001 with profit 1000
	Hard reg 22 is preferable by r994 with profit 500
	 Assigning to 994 (cl=SSE_REGS, orig=380, freq=2000, tfirst=993, tfreq=3000)...
	   Assign 22 to optional reload r994 (freq=2000)
	Hard reg 22 is preferable by r1001 with profit 2000
	 Assigning to 1003 (cl=SSE_REGS, orig=448, freq=2000, tfirst=995, tfreq=3000)...
	 Assigning to 995 (cl=SSE_REGS, orig=447, freq=3000, tfirst=995, tfreq=3000)...
	   Assign 22 to reload r995 (freq=3000)
	Hard reg 22 is preferable by r1003 with profit 1000
	Hard reg 22 is preferable by r996 with profit 500
	 Assigning to 996 (cl=SSE_REGS, orig=448, freq=2000, tfirst=995, tfreq=3000)...
	   Assign 22 to optional reload r996 (freq=2000)
	Hard reg 22 is preferable by r1003 with profit 2000
	 Assigning to 1002 (cl=SSE_REGS, orig=473, freq=2000, tfirst=997, tfreq=3000)...
	 Assigning to 997 (cl=SSE_REGS, orig=472, freq=3000, tfirst=997, tfreq=3000)...
	   Assign 22 to reload r997 (freq=3000)
	Hard reg 22 is preferable by r1002 with profit 1000
	Hard reg 22 is preferable by r998 with profit 500
	 Assigning to 998 (cl=SSE_REGS, orig=473, freq=2000, tfirst=997, tfreq=3000)...
	   Assign 22 to optional reload r998 (freq=2000)
	Hard reg 22 is preferable by r1002 with profit 2000
	 Assigning to 1004 (cl=SSE_REGS, orig=538, freq=2000, tfirst=999, tfreq=3000)...
	 Assigning to 999 (cl=SSE_REGS, orig=537, freq=3000, tfirst=999, tfreq=3000)...
	   Assign 22 to reload r999 (freq=3000)
	Hard reg 22 is preferable by r1004 with profit 1000
	Hard reg 22 is preferable by r1000 with profit 500
	 Assigning to 1000 (cl=SSE_REGS, orig=538, freq=2000, tfirst=999, tfreq=3000)...
	   Assign 22 to optional reload r1000 (freq=2000)
	Hard reg 22 is preferable by r1004 with profit 2000
  Reassigning non-reload pseudos

********** Undoing inheritance #1: **********

Inherit 0 out of 4 (0.00%)
   Insn after restoring regs:
 1514: r994:SF=r380:SF
      REG_DEAD r380:SF
   Insn after restoring regs:
 1513: r380:SF=r993:SF
      REG_DEAD r993:SF
   Insn after restoring regs:
 1517: r996:SF=r448:SF
      REG_DEAD r448:SF
   Insn after restoring regs:
 1516: r448:SF=r995:SF
      REG_DEAD r995:SF
   Insn after restoring regs:
 1520: r998:SF=r473:SF
      REG_DEAD r473:SF
   Insn after restoring regs:
 1519: r473:SF=r997:SF
      REG_DEAD r997:SF
   Insn after restoring regs:
 1523: r1000:SF=r538:SF
      REG_DEAD r538:SF
   Insn after restoring regs:
 1522: r538:SF=r999:SF
      REG_DEAD r999:SF
Remove optional reload reg 994
  Restoring original insn:
  797: r846:SF=r382:SF*r380:SF
      REG_DEAD r380:SF
      REG_DEAD r382:SF
  Deleting move 1514
 1514: r994:SF=r380:SF
      REG_DEAD r380:SF
deleting insn with uid = 1514.
Remove optional reload reg 996
  Restoring original insn:
  957: r893:SF=r450:SF*r448:SF
      REG_DEAD r448:SF
      REG_DEAD r450:SF
  Deleting move 1517
 1517: r996:SF=r448:SF
      REG_DEAD r448:SF
deleting insn with uid = 1517.
Remove optional reload reg 998
  Restoring original insn:
 1005: r907:SF=r475:SF*r473:SF
      REG_DEAD r473:SF
      REG_DEAD r475:SF
  Deleting move 1520
 1520: r998:SF=r473:SF
      REG_DEAD r473:SF
deleting insn with uid = 1520.
Remove optional reload reg 1000
  Restoring original insn:
 1170: r948:SF=r540:SF*r538:SF
      REG_DEAD r538:SF
      REG_DEAD r540:SF
  Deleting move 1523
 1523: r1000:SF=r538:SF
      REG_DEAD r538:SF
deleting insn with uid = 1523.

********** Local #2: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1170:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1005 from oldreg=538, assigning class SSE_REGS to r1005
      Making reload reg 1005 for reg 538 optional
 1170: r948:SF=r540:SF*r1005:SF
      REG_DEAD r538:SF
      REG_DEAD r540:SF
    Inserting insn reload before:
 1528: r1005:SF=r538:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1528:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1005:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1006 from oldreg=473, assigning class SSE_REGS to r1006
      Making reload reg 1006 for reg 473 optional
 1005: r907:SF=r475:SF*r1006:SF
      REG_DEAD r473:SF
      REG_DEAD r475:SF
    Inserting insn reload before:
 1529: r1006:SF=r473:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1529:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 957:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1007 from oldreg=448, assigning class SSE_REGS to r1007
      Making reload reg 1007 for reg 448 optional
  957: r893:SF=r450:SF*r1007:SF
      REG_DEAD r448:SF
      REG_DEAD r450:SF
    Inserting insn reload before:
 1530: r1007:SF=r448:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1530:  (0) v  (1) m {*movsf_internal}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 797:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
      Creating newreg=1008 from oldreg=380, assigning class SSE_REGS to r1008
      Making reload reg 1008 for reg 380 optional
  797: r846:SF=r382:SF*r1008:SF
      REG_DEAD r380:SF
      REG_DEAD r382:SF
    Inserting insn reload before:
 1531: r1008:SF=r380:SF

            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=0,overall=615,losers=2,rld_nregs=1
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Costly loser: reject++
            1 Non-prefered reload: reject+=600
            alt=1,overall=617,losers=2 -- refuse
            0 Costly loser: reject++
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=2: Bad operand -- refuse
            Staticly defined alt reject+=6
            0 Non-prefered reload: reject+=600
            0 Non input pseudo reload: reject++
            alt=3,overall=619,losers=2 -- refuse
            Staticly defined alt reject+=6
            Using memory insn operand 0: reject+=3
            0 Non input pseudo reload: reject++
            1 Non-prefered reload: reject+=600
            alt=4,overall=622,losers=2 -- refuse
            0 Non pseudo reload: reject++
            alt=5: Bad operand -- refuse
            0 Non pseudo reload: reject++
            Cycle danger: overall += LRA_MAX_REJECT
          alt=6,overall=607,losers=1,rld_nregs=1
            0 Non pseudo reload: reject++
            1 Non pseudo reload: reject++
          alt=7,overall=2,losers=0,rld_nregs=0
	 Choosing alt 7 in insn 1531:  (0) v  (1) m {*movsf_internal}
	   Spilling non-eliminable hard regs: 6

********** Inheritance #2: **********

EBB 2
EBB 3 4
EBB 5 6
EBB 95
EBB 7
EBB 94
EBB 8
EBB 9 10
EBB 11 12 13
EBB 14
EBB 15 16 17
EBB 18 19 20 21 22
EBB 23 24 25
EBB 26 27 28
EBB 29
EBB 98
EBB 30 31 32 33
EBB 34
EBB 97
EBB 35
EBB 96
EBB 36
EBB 37 38
EBB 39 40 41 42 43
EBB 44
EBB 45
EBB 101
EBB 46
EBB 100
EBB 47
EBB 99
EBB 48
EBB 49 50
EBB 51 52 53
EBB 54 55 56
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1009 from oldreg=380, assigning class SSE_REGS to inheritance r1009
    Original reg change 380->1009 (bb55):
 1513: r1009:SF=r993:SF
      REG_DEAD r993:SF
    Add original<-inheritance after:
 1532: r380:SF=r1009:SF

    Inheritance reuse change 380->1009 (bb55):
 1531: r1008:SF=r1009:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1532: r380:SF=r1009:SF
deleting insn with uid = 1532.
EBB 57
EBB 104
EBB 58 59
EBB 60
EBB 61 62 63 64
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1010 from oldreg=473, assigning class SSE_REGS to inheritance r1010
    Original reg change 473->1010 (bb64):
 1519: r1010:SF=r997:SF
      REG_DEAD r997:SF
    Add original<-inheritance after:
 1533: r473:SF=r1010:SF

    Inheritance reuse change 473->1010 (bb64):
 1529: r1006:SF=r1010:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1011 from oldreg=448, assigning class SSE_REGS to inheritance r1011
    Original reg change 448->1011 (bb63):
 1516: r1011:SF=r995:SF
      REG_DEAD r995:SF
    Add original<-inheritance after:
 1534: r448:SF=r1011:SF

    Inheritance reuse change 448->1011 (bb63):
 1530: r1007:SF=r1011:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1533: r473:SF=r1010:SF
deleting insn with uid = 1533.
	    Removing dead insn:
  1534: r448:SF=r1011:SF
deleting insn with uid = 1534.
EBB 65
EBB 106
EBB 66
EBB 105
EBB 67
EBB 68 69 70 71
EBB 72 73 74
EBB 75 76
EBB 77 78 79
    <<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<<
      Creating newreg=1012 from oldreg=538, assigning class SSE_REGS to inheritance r1012
    Original reg change 538->1012 (bb77):
 1522: r1012:SF=r999:SF
      REG_DEAD r999:SF
    Add original<-inheritance after:
 1535: r538:SF=r1012:SF

    Inheritance reuse change 538->1012 (bb77):
 1528: r1005:SF=r1012:SF
	  >>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>>
	    Removing dead insn:
  1535: r538:SF=r1012:SF
deleting insn with uid = 1535.
EBB 80 81 82
EBB 83
EBB 107
EBB 84 85 86
EBB 87
EBB 88 89
EBB 90
EBB 91
EBB 103
EBB 92
EBB 102
EBB 93

********** Pseudo live ranges #2: **********

  BB 93
   Insn 1422: point = 0, n_alt = -1
  BB 102
   Insn 1491: point = 0, n_alt = -1
  BB 49
   Insn 640: point = 0, n_alt = -1
   Insn 639: point = 0, n_alt = 0
   Insn 638: point = 1, n_alt = 0
   Insn 637: point = 3, n_alt = 0
   Insn 636: point = 4, n_alt = 0
  BB 92
   Insn 1461: point = 5, n_alt = -1
   Insn 1355: point = 5, n_alt = 1
  BB 103
   Insn 1494: point = 6, n_alt = -1
  BB 51
   Insn 648: point = 7, n_alt = -1
   Insn 647: point = 7, n_alt = 0
   Insn 646: point = 8, n_alt = 0
   Insn 645: point = 10, n_alt = 0
   Insn 644: point = 11, n_alt = 0
  BB 91
   Insn 1459: point = 12, n_alt = -1
   Insn 1349: point = 12, n_alt = 1
  BB 89
   Insn 1457: point = 13, n_alt = -1
   Insn 1321: point = 13, n_alt = 1
   Insn 1320: point = 14, n_alt = 3
   Insn 1319: point = 15, n_alt = 3
   Insn 1318: point = 17, n_alt = 0
   Insn 1317: point = 19, n_alt = 0
   Insn 1316: point = 21, n_alt = 1
   Insn 1315: point = 23, n_alt = 0
   Insn 1314: point = 24, n_alt = 0
   Insn 1313: point = 26, n_alt = 1
   Insn 1312: point = 28, n_alt = 0
   Insn 1311: point = 29, n_alt = 0
   Insn 1310: point = 31, n_alt = 3
   Insn 1309: point = 32, n_alt = 3
   Insn 1308: point = 34, n_alt = 0
   Insn 1307: point = 36, n_alt = 0
   Insn 1306: point = 38, n_alt = 0
   Insn 1305: point = 39, n_alt = 0
   Insn 1304: point = 41, n_alt = 0
   Insn 1303: point = 43, n_alt = 0
  BB 90
   Insn 1344: point = 45, n_alt = 1
   Insn 1343: point = 46, n_alt = 3
   Insn 1342: point = 47, n_alt = 3
   Insn 1341: point = 49, n_alt = 0
   Insn 1340: point = 51, n_alt = 0
   Insn 1339: point = 53, n_alt = 1
   Insn 1338: point = 55, n_alt = 0
   Insn 1337: point = 56, n_alt = 0
   Insn 1336: point = 58, n_alt = 1
   Insn 1335: point = 60, n_alt = 0
   Insn 1334: point = 61, n_alt = 0
   Insn 1333: point = 63, n_alt = 3
   Insn 1332: point = 64, n_alt = 3
   Insn 1331: point = 66, n_alt = 0
   Insn 1330: point = 68, n_alt = 0
   Insn 1329: point = 70, n_alt = 0
   Insn 1328: point = 71, n_alt = 0
   Insn 1327: point = 73, n_alt = 0
   Insn 1326: point = 75, n_alt = 0
  BB 88
   Insn 1298: point = 77, n_alt = -1
   Insn 1297: point = 77, n_alt = 1
   Insn 1296: point = 78, n_alt = 7
  BB 59
   Insn 1448: point = 80, n_alt = -1
   Insn 875: point = 80, n_alt = 1
   Insn 874: point = 81, n_alt = 3
   Insn 873: point = 82, n_alt = 3
   Insn 872: point = 84, n_alt = 0
   Insn 871: point = 86, n_alt = 0
   Insn 870: point = 88, n_alt = 1
   Insn 869: point = 90, n_alt = 0
   Insn 868: point = 91, n_alt = 0
   Insn 867: point = 93, n_alt = 1
   Insn 866: point = 95, n_alt = 0
   Insn 865: point = 96, n_alt = 0
   Insn 864: point = 98, n_alt = 3
   Insn 863: point = 99, n_alt = 3
   Insn 862: point = 101, n_alt = 0
   Insn 861: point = 103, n_alt = 0
   Insn 860: point = 105, n_alt = 0
   Insn 859: point = 106, n_alt = 0
   Insn 858: point = 108, n_alt = 0
   Insn 857: point = 110, n_alt = 0
  BB 87
   Insn 1454: point = 112, n_alt = -1
   Insn 1291: point = 112, n_alt = 1
   Insn 1290: point = 113, n_alt = 3
   Insn 1289: point = 114, n_alt = 3
   Insn 1288: point = 116, n_alt = 0
   Insn 1287: point = 118, n_alt = 0
   Insn 1286: point = 120, n_alt = 1
   Insn 1285: point = 122, n_alt = 0
   Insn 1284: point = 123, n_alt = 0
   Insn 1283: point = 125, n_alt = 1
   Insn 1282: point = 127, n_alt = 0
   Insn 1281: point = 128, n_alt = 0
   Insn 1280: point = 130, n_alt = 3
   Insn 1279: point = 131, n_alt = 3
   Insn 1278: point = 133, n_alt = 0
   Insn 1277: point = 135, n_alt = 0
   Insn 1276: point = 137, n_alt = 0
   Insn 1275: point = 138, n_alt = 0
   Insn 1274: point = 140, n_alt = 0
   Insn 1273: point = 142, n_alt = 0
  BB 86
   Insn 1267: point = 144, n_alt = -1
   Insn 1266: point = 144, n_alt = 1
   Insn 1265: point = 145, n_alt = 7
  BB 85
   Insn 1260: point = 147, n_alt = -1
   Insn 1259: point = 147, n_alt = 1
   Insn 1258: point = 148, n_alt = 7
  BB 84
   Insn 1256: point = 150, n_alt = -1
   Insn 1255: point = 150, n_alt = 1
   Insn 1254: point = 151, n_alt = 7
  BB 107
   Insn 1508: point = 153, n_alt = -1
  BB 68
   Insn 1052: point = 154, n_alt = -1
   Insn 1051: point = 154, n_alt = 0
   Insn 1050: point = 155, n_alt = 0
   Insn 1049: point = 157, n_alt = 0
   Insn 1048: point = 158, n_alt = 1
  BB 83
   Insn 1452: point = 159, n_alt = -1
   Insn 1248: point = 159, n_alt = 1
  BB 82
   Insn 1245: point = 160, n_alt = 8
   Insn 1244: point = 161, n_alt = 1
   Insn 1243: point = 163, n_alt = 7
  BB 81
   Insn 1238: point = 165, n_alt = -1
   Insn 1237: point = 165, n_alt = 1
   Insn 1236: point = 166, n_alt = 7
   Insn 1235: point = 167, n_alt = 7
   Insn 1234: point = 169, n_alt = 4
   Insn 1233: point = 170, n_alt = 3
   Insn 1232: point = 172, n_alt = 0
   Insn 1231: point = 174, n_alt = 0
   Insn 1230: point = 176, n_alt = 0
   Insn 1229: point = 177, n_alt = 0
   Insn 1228: point = 179, n_alt = 0
   Insn 1227: point = 181, n_alt = 0
   Insn 1226: point = 183, n_alt = 0
   Insn 1225: point = 184, n_alt = 1
   Insn 1224: point = 186, n_alt = 0
   Insn 1223: point = 188, n_alt = 0
  BB 80
   Insn 1221: point = 190, n_alt = -1
   Insn 1220: point = 190, n_alt = 1
  BB 79
   Insn 1217: point = 191, n_alt = 8
   Insn 1216: point = 192, n_alt = 1
   Insn 1215: point = 194, n_alt = 7
  BB 78
   Insn 1210: point = 196, n_alt = -1
   Insn 1209: point = 196, n_alt = 1
   Insn 1208: point = 197, n_alt = 7
   Insn 1207: point = 199, n_alt = 4
   Insn 1206: point = 200, n_alt = 3
   Insn 1205: point = 202, n_alt = 0
   Insn 1204: point = 204, n_alt = 0
   Insn 1203: point = 206, n_alt = 0
   Insn 1202: point = 207, n_alt = 0
   Insn 1201: point = 209, n_alt = 0
   Insn 1200: point = 211, n_alt = 0
   Insn 1199: point = 213, n_alt = 0
   Insn 1198: point = 214, n_alt = 1
   Insn 1197: point = 216, n_alt = 0
   Insn 1196: point = 218, n_alt = 0
  BB 77
   Insn 1194: point = 220, n_alt = -1
   Insn 1193: point = 220, n_alt = 1
   Insn 1192: point = 220, n_alt = 8
   Insn 1191: point = 221, n_alt = 7
   Insn 1190: point = 222, n_alt = 8
   Insn 1189: point = 223, n_alt = 1
   Insn 1188: point = 225, n_alt = 7
   Insn 1187: point = 226, n_alt = -2
   Insn 1186: point = 228, n_alt = 2
   Insn 1185: point = 230, n_alt = 7
   Insn 1184: point = 231, n_alt = 7
   Insn 1183: point = 233, n_alt = 4
   Insn 1182: point = 234, n_alt = 3
   Insn 1181: point = 236, n_alt = 0
   Insn 1180: point = 238, n_alt = 0
   Insn 1179: point = 240, n_alt = 0
   Insn 1178: point = 241, n_alt = 0
   Insn 1177: point = 243, n_alt = 0
   Insn 1176: point = 245, n_alt = 0
   Insn 1175: point = 247, n_alt = 0
   Insn 1174: point = 248, n_alt = 1
   Insn 1173: point = 250, n_alt = 0
   Insn 1172: point = 252, n_alt = 0
   Insn 1171: point = 253, n_alt = 8
   Insn 1170: point = 254, n_alt = 1
   Insn 1528: point = 256, n_alt = 7
	   Creating copy r1005<-r1012@1000
   Insn 1169: point = 258, n_alt = -2
   Insn 1168: point = 259, n_alt = 0
   Insn 1167: point = 259, n_alt = -2
   Insn 1166: point = 260, n_alt = 2
   Insn 1165: point = 262, n_alt = 7
   Insn 1522: point = 263, n_alt = 8
	   Creating copy r999->r1012@1000
   Insn 1164: point = 265, n_alt = 1
   Insn 1521: point = 266, n_alt = -2
	Hard reg 22 is preferable by r999 with profit 1000
   Insn 1163: point = 268, n_alt = 7
   Insn 1162: point = 269, n_alt = 1
   Insn 1161: point = 271, n_alt = -2
   Insn 1160: point = 273, n_alt = 1
   Insn 1159: point = 275, n_alt = 7
   Insn 1158: point = 276, n_alt = 1
   Insn 1157: point = 278, n_alt = 7
   Insn 1156: point = 279, n_alt = 7
   Insn 1155: point = 281, n_alt = 3
   Insn 1154: point = 282, n_alt = 3
   Insn 1153: point = 284, n_alt = 0
   Insn 1152: point = 286, n_alt = 0
   Insn 1151: point = 288, n_alt = 0
   Insn 1150: point = 289, n_alt = 0
   Insn 1149: point = 291, n_alt = 0
   Insn 1148: point = 293, n_alt = 0
   Insn 1147: point = 295, n_alt = 0
   Insn 1146: point = 296, n_alt = 1
   Insn 1145: point = 298, n_alt = 0
   Insn 1144: point = 300, n_alt = 0
   Insn 1143: point = 301, n_alt = 7
   Insn 1142: point = 303, n_alt = 3
   Insn 1141: point = 304, n_alt = 3
   Insn 1140: point = 306, n_alt = 0
   Insn 1139: point = 308, n_alt = 0
   Insn 1138: point = 310, n_alt = 0
   Insn 1137: point = 311, n_alt = 0
   Insn 1136: point = 313, n_alt = 0
   Insn 1135: point = 315, n_alt = 0
   Insn 1134: point = 317, n_alt = 0
   Insn 1133: point = 318, n_alt = 1
   Insn 1132: point = 320, n_alt = 0
   Insn 1131: point = 322, n_alt = 0
   Insn 1130: point = 323, n_alt = 8
   Insn 1129: point = 324, n_alt = 1
   Insn 1128: point = 326, n_alt = 7
   Insn 1127: point = 328, n_alt = 3
   Insn 1126: point = 329, n_alt = 1
   Insn 1125: point = 331, n_alt = 7
   Insn 1124: point = 333, n_alt = 3
   Insn 1123: point = 334, n_alt = 3
   Insn 1122: point = 336, n_alt = 0
   Insn 1121: point = 338, n_alt = 0
   Insn 1120: point = 339, n_alt = 7
   Insn 1119: point = 341, n_alt = 4
   Insn 1118: point = 342, n_alt = 3
   Insn 1117: point = 344, n_alt = 0
   Insn 1116: point = 346, n_alt = 0
   Insn 1115: point = 348, n_alt = 0
   Insn 1114: point = 349, n_alt = 0
   Insn 1113: point = 351, n_alt = 0
   Insn 1112: point = 353, n_alt = 0
  BB 76
   Insn 1109: point = 355, n_alt = -1
   Insn 1108: point = 355, n_alt = 1
  BB 75
   Insn 1106: point = 356, n_alt = -1
   Insn 1105: point = 356, n_alt = 1
  BB 74
   Insn 1102: point = 357, n_alt = 1
  BB 73
   Insn 1097: point = 358, n_alt = -1
   Insn 1096: point = 358, n_alt = 1
   Insn 1095: point = 359, n_alt = 7
   Insn 1094: point = 361, n_alt = 3
   Insn 1093: point = 362, n_alt = 3
   Insn 1092: point = 364, n_alt = 0
   Insn 1091: point = 366, n_alt = 0
   Insn 1090: point = 368, n_alt = 0
   Insn 1089: point = 369, n_alt = 0
   Insn 1088: point = 371, n_alt = 0
   Insn 1087: point = 373, n_alt = 0
   Insn 1086: point = 375, n_alt = 0
   Insn 1085: point = 376, n_alt = 1
   Insn 1084: point = 378, n_alt = 0
   Insn 1083: point = 380, n_alt = 0
  BB 72
   Insn 1081: point = 382, n_alt = -1
   Insn 1080: point = 382, n_alt = 1
  BB 71
   Insn 1077: point = 383, n_alt = 1
  BB 70
   Insn 1072: point = 384, n_alt = -1
   Insn 1071: point = 384, n_alt = 1
   Insn 1070: point = 385, n_alt = 7
   Insn 1069: point = 386, n_alt = 7
   Insn 1068: point = 388, n_alt = 3
   Insn 1067: point = 389, n_alt = 3
   Insn 1066: point = 391, n_alt = 0
   Insn 1065: point = 393, n_alt = 0
   Insn 1064: point = 395, n_alt = 0
   Insn 1063: point = 396, n_alt = 0
   Insn 1062: point = 398, n_alt = 0
   Insn 1061: point = 400, n_alt = 0
   Insn 1060: point = 402, n_alt = 0
   Insn 1059: point = 403, n_alt = 1
   Insn 1058: point = 405, n_alt = 0
   Insn 1057: point = 407, n_alt = 0
  BB 69
   Insn 1055: point = 409, n_alt = -1
   Insn 1054: point = 409, n_alt = 1
  BB 67
   Insn 1046: point = 410, n_alt = 1
   Insn 1045: point = 411, n_alt = 0
   Insn 1044: point = 412, n_alt = 1
   Insn 1043: point = 412, n_alt = 1
   Insn 1042: point = 412, n_alt = 8
   Insn 1041: point = 413, n_alt = 7
  BB 105
   Insn 1500: point = 415, n_alt = -1
  BB 61
   Insn 893: point = 416, n_alt = -1
   Insn 892: point = 416, n_alt = 0
   Insn 891: point = 417, n_alt = 0
   Insn 890: point = 419, n_alt = 0
   Insn 889: point = 420, n_alt = 1
  BB 66
   Insn 1450: point = 421, n_alt = -1
   Insn 1035: point = 421, n_alt = 1
   Insn 1034: point = 421, n_alt = 8
   Insn 1033: point = 422, n_alt = 7
  BB 65
   Insn 1501: point = 424, n_alt = -1
   Insn 1030: point = 424, n_alt = 8
   Insn 1029: point = 425, n_alt = 1
   Insn 1028: point = 427, n_alt = 7
   Insn 1027: point = 428, n_alt = 8
   Insn 1026: point = 429, n_alt = 1
   Insn 1025: point = 431, n_alt = 7
   Insn 1024: point = 432, n_alt = -2
   Insn 1023: point = 434, n_alt = 2
   Insn 1022: point = 436, n_alt = 7
   Insn 1021: point = 437, n_alt = 7
   Insn 1020: point = 439, n_alt = 4
   Insn 1019: point = 440, n_alt = 3
   Insn 1018: point = 442, n_alt = 0
   Insn 1017: point = 444, n_alt = 0
   Insn 1016: point = 446, n_alt = 0
   Insn 1015: point = 447, n_alt = 0
   Insn 1014: point = 449, n_alt = 0
   Insn 1013: point = 451, n_alt = 0
   Insn 1012: point = 453, n_alt = 0
   Insn 1011: point = 454, n_alt = 1
   Insn 1010: point = 456, n_alt = 0
   Insn 1009: point = 458, n_alt = 0
  BB 64
   Insn 1006: point = 460, n_alt = 8
   Insn 1005: point = 461, n_alt = 1
   Insn 1529: point = 463, n_alt = 7
	   Creating copy r1006<-r1010@1000
   Insn 1004: point = 465, n_alt = -2
   Insn 1003: point = 466, n_alt = 0
   Insn 1002: point = 466, n_alt = -2
   Insn 1001: point = 467, n_alt = 2
   Insn 1000: point = 469, n_alt = 7
   Insn 1519: point = 470, n_alt = 8
	   Creating copy r997->r1010@1000
   Insn 999: point = 472, n_alt = 1
   Insn 1518: point = 473, n_alt = -2
	Hard reg 22 is preferable by r997 with profit 1000
   Insn 998: point = 475, n_alt = 7
   Insn 997: point = 476, n_alt = 1
   Insn 996: point = 478, n_alt = -2
   Insn 995: point = 480, n_alt = 1
   Insn 994: point = 482, n_alt = 7
   Insn 993: point = 483, n_alt = 1
   Insn 992: point = 485, n_alt = 7
   Insn 991: point = 486, n_alt = 7
   Insn 990: point = 488, n_alt = 3
   Insn 989: point = 489, n_alt = 3
   Insn 988: point = 491, n_alt = 0
   Insn 987: point = 493, n_alt = 0
   Insn 986: point = 495, n_alt = 0
   Insn 985: point = 496, n_alt = 0
   Insn 984: point = 498, n_alt = 0
   Insn 983: point = 500, n_alt = 0
   Insn 982: point = 502, n_alt = 0
   Insn 981: point = 503, n_alt = 1
   Insn 980: point = 505, n_alt = 0
   Insn 979: point = 507, n_alt = 0
   Insn 978: point = 508, n_alt = 7
   Insn 977: point = 510, n_alt = 3
   Insn 976: point = 511, n_alt = 3
   Insn 975: point = 513, n_alt = 0
   Insn 974: point = 515, n_alt = 0
   Insn 973: point = 517, n_alt = 0
   Insn 972: point = 518, n_alt = 0
   Insn 971: point = 520, n_alt = 0
   Insn 970: point = 522, n_alt = 0
   Insn 969: point = 524, n_alt = 0
   Insn 968: point = 525, n_alt = 1
   Insn 967: point = 527, n_alt = 0
   Insn 966: point = 529, n_alt = 0
  BB 63
   Insn 961: point = 531, n_alt = -1
   Insn 960: point = 531, n_alt = 1
   Insn 959: point = 532, n_alt = 7
   Insn 958: point = 533, n_alt = 8
   Insn 957: point = 534, n_alt = 1
   Insn 1530: point = 536, n_alt = 7
	   Creating copy r1007<-r1011@1000
   Insn 956: point = 538, n_alt = -2
   Insn 955: point = 539, n_alt = 0
   Insn 954: point = 539, n_alt = -2
   Insn 953: point = 540, n_alt = 2
   Insn 952: point = 542, n_alt = 7
   Insn 1516: point = 543, n_alt = 8
	   Creating copy r995->r1011@1000
   Insn 951: point = 545, n_alt = 1
   Insn 1515: point = 546, n_alt = -2
	Hard reg 22 is preferable by r995 with profit 1000
   Insn 950: point = 548, n_alt = 7
   Insn 949: point = 549, n_alt = 1
   Insn 948: point = 551, n_alt = -2
   Insn 947: point = 553, n_alt = 1
   Insn 946: point = 555, n_alt = 7
   Insn 945: point = 556, n_alt = 1
   Insn 944: point = 558, n_alt = 7
   Insn 943: point = 559, n_alt = 7
   Insn 942: point = 561, n_alt = 3
   Insn 941: point = 562, n_alt = 3
   Insn 940: point = 564, n_alt = 0
   Insn 939: point = 566, n_alt = 0
   Insn 938: point = 568, n_alt = 0
   Insn 937: point = 569, n_alt = 0
   Insn 936: point = 571, n_alt = 0
   Insn 935: point = 573, n_alt = 0
   Insn 934: point = 575, n_alt = 0
   Insn 933: point = 576, n_alt = 1
   Insn 932: point = 578, n_alt = 0
   Insn 931: point = 580, n_alt = 0
   Insn 930: point = 581, n_alt = 7
   Insn 929: point = 583, n_alt = 3
   Insn 928: point = 584, n_alt = 3
   Insn 927: point = 586, n_alt = 0
   Insn 926: point = 588, n_alt = 0
   Insn 925: point = 590, n_alt = 0
   Insn 924: point = 591, n_alt = 0
   Insn 923: point = 593, n_alt = 0
   Insn 922: point = 595, n_alt = 0
   Insn 921: point = 597, n_alt = 0
   Insn 920: point = 598, n_alt = 1
   Insn 919: point = 600, n_alt = 0
   Insn 918: point = 602, n_alt = 0
  BB 106
   Insn 1505: point = 604, n_alt = -1
  BB 62
   Insn 916: point = 605, n_alt = -1
   Insn 915: point = 605, n_alt = 1
   Insn 914: point = 606, n_alt = 7
   Insn 913: point = 607, n_alt = 8
   Insn 912: point = 608, n_alt = 1
   Insn 911: point = 610, n_alt = 7
   Insn 910: point = 612, n_alt = 3
   Insn 909: point = 613, n_alt = 1
   Insn 908: point = 615, n_alt = 7
   Insn 907: point = 617, n_alt = 3
   Insn 906: point = 618, n_alt = 3
   Insn 905: point = 620, n_alt = 0
   Insn 904: point = 622, n_alt = 0
   Insn 903: point = 623, n_alt = 7
   Insn 902: point = 625, n_alt = 4
   Insn 901: point = 626, n_alt = 3
   Insn 900: point = 628, n_alt = 0
   Insn 899: point = 630, n_alt = 0
   Insn 898: point = 632, n_alt = 0
   Insn 897: point = 633, n_alt = 0
   Insn 896: point = 635, n_alt = 0
   Insn 895: point = 637, n_alt = 0
  BB 60
   Insn 887: point = 639, n_alt = 1
   Insn 886: point = 640, n_alt = 0
   Insn 885: point = 641, n_alt = 8
   Insn 884: point = 642, n_alt = 2
   Insn 883: point = 644, n_alt = 7
   Insn 882: point = 645, n_alt = 7
   Insn 881: point = 646, n_alt = 8
   Insn 880: point = 647, n_alt = 7
  BB 58
   Insn 852: point = 649, n_alt = -1
   Insn 851: point = 649, n_alt = 1
   Insn 850: point = 650, n_alt = 7
  BB 104
   Insn 1497: point = 652, n_alt = -1
  BB 54
   Insn 737: point = 653, n_alt = -1
   Insn 736: point = 653, n_alt = 0
   Insn 735: point = 654, n_alt = 0
   Insn 734: point = 656, n_alt = 0
   Insn 733: point = 657, n_alt = 0
  BB 57
   Insn 1445: point = 658, n_alt = -1
   Insn 844: point = 658, n_alt = 1
   Insn 843: point = 658, n_alt = 8
   Insn 842: point = 659, n_alt = 7
  BB 56
   Insn 839: point = 661, n_alt = 8
   Insn 838: point = 662, n_alt = 1
   Insn 837: point = 664, n_alt = 7
  BB 55
   Insn 832: point = 666, n_alt = -1
   Insn 831: point = 666, n_alt = 1
   Insn 830: point = 667, n_alt = 7
   Insn 829: point = 669, n_alt = 4
   Insn 828: point = 670, n_alt = 3
   Insn 827: point = 672, n_alt = 0
   Insn 826: point = 674, n_alt = 0
   Insn 825: point = 676, n_alt = 0
   Insn 824: point = 677, n_alt = 0
   Insn 823: point = 679, n_alt = 0
   Insn 822: point = 681, n_alt = 0
   Insn 821: point = 683, n_alt = 0
   Insn 820: point = 684, n_alt = 1
   Insn 819: point = 686, n_alt = 0
   Insn 818: point = 688, n_alt = 0
   Insn 817: point = 689, n_alt = 8
   Insn 816: point = 690, n_alt = 1
   Insn 815: point = 692, n_alt = 7
   Insn 814: point = 693, n_alt = -2
   Insn 813: point = 695, n_alt = 2
   Insn 812: point = 697, n_alt = 7
   Insn 811: point = 698, n_alt = 7
   Insn 810: point = 700, n_alt = 4
   Insn 809: point = 701, n_alt = 3
   Insn 808: point = 703, n_alt = 0
   Insn 807: point = 705, n_alt = 0
   Insn 806: point = 707, n_alt = 0
   Insn 805: point = 708, n_alt = 0
   Insn 804: point = 710, n_alt = 0
   Insn 803: point = 712, n_alt = 0
   Insn 802: point = 714, n_alt = 0
   Insn 801: point = 715, n_alt = 1
   Insn 800: point = 717, n_alt = 0
   Insn 799: point = 719, n_alt = 0
   Insn 798: point = 720, n_alt = 8
   Insn 797: point = 721, n_alt = 1
   Insn 1531: point = 723, n_alt = 7
	   Creating copy r1008<-r1009@1000
   Insn 796: point = 725, n_alt = -2
   Insn 795: point = 726, n_alt = 0
   Insn 794: point = 726, n_alt = -2
   Insn 793: point = 727, n_alt = 2
   Insn 792: point = 729, n_alt = 7
   Insn 1513: point = 730, n_alt = 8
	   Creating copy r993->r1009@1000
   Insn 791: point = 732, n_alt = 1
   Insn 1512: point = 733, n_alt = -2
	Hard reg 22 is preferable by r993 with profit 1000
   Insn 790: point = 735, n_alt = 7
   Insn 789: point = 736, n_alt = 1
   Insn 788: point = 738, n_alt = -2
   Insn 787: point = 740, n_alt = 1
   Insn 786: point = 742, n_alt = 7
   Insn 785: point = 743, n_alt = 1
   Insn 784: point = 745, n_alt = 7
   Insn 783: point = 746, n_alt = 7
   Insn 782: point = 748, n_alt = 3
   Insn 781: point = 749, n_alt = 3
   Insn 780: point = 751, n_alt = 0
   Insn 779: point = 753, n_alt = 0
   Insn 778: point = 755, n_alt = 0
   Insn 777: point = 756, n_alt = 0
   Insn 776: point = 758, n_alt = 0
   Insn 775: point = 760, n_alt = 0
   Insn 774: point = 762, n_alt = 0
   Insn 773: point = 763, n_alt = 1
   Insn 772: point = 765, n_alt = 0
   Insn 771: point = 767, n_alt = 0
   Insn 770: point = 768, n_alt = 7
   Insn 769: point = 770, n_alt = 3
   Insn 768: point = 771, n_alt = 3
   Insn 767: point = 773, n_alt = 0
   Insn 766: point = 775, n_alt = 0
   Insn 765: point = 777, n_alt = 0
   Insn 764: point = 778, n_alt = 0
   Insn 763: point = 780, n_alt = 0
   Insn 762: point = 782, n_alt = 0
   Insn 761: point = 784, n_alt = 0
   Insn 760: point = 785, n_alt = 1
   Insn 759: point = 787, n_alt = 0
   Insn 758: point = 789, n_alt = 0
   Insn 757: point = 790, n_alt = 8
   Insn 756: point = 791, n_alt = 1
   Insn 755: point = 793, n_alt = 7
   Insn 754: point = 795, n_alt = 3
   Insn 753: point = 796, n_alt = 1
   Insn 752: point = 798, n_alt = 7
   Insn 751: point = 800, n_alt = 3
   Insn 750: point = 801, n_alt = 3
   Insn 749: point = 803, n_alt = 0
   Insn 748: point = 805, n_alt = 0
   Insn 747: point = 806, n_alt = 7
   Insn 746: point = 808, n_alt = 4
   Insn 745: point = 809, n_alt = 3
   Insn 744: point = 811, n_alt = 0
   Insn 743: point = 813, n_alt = 0
   Insn 742: point = 815, n_alt = 0
   Insn 741: point = 816, n_alt = 0
   Insn 740: point = 818, n_alt = 0
   Insn 739: point = 820, n_alt = 0
  BB 53
   Insn 731: point = 822, n_alt = 1
   Insn 730: point = 823, n_alt = 0
   Insn 729: point = 824, n_alt = 0
   Insn 728: point = 825, n_alt = 8
   Insn 727: point = 826, n_alt = 7
   Insn 726: point = 827, n_alt = 8
   Insn 725: point = 828, n_alt = 7
   Insn 724: point = 829, n_alt = 8
   Insn 723: point = 830, n_alt = 7
   Insn 722: point = 831, n_alt = 8
   Insn 721: point = 832, n_alt = 7
   Insn 720: point = 833, n_alt = 8
   Insn 719: point = 834, n_alt = 7
   Insn 718: point = 835, n_alt = 8
   Insn 717: point = 836, n_alt = 7
   Insn 716: point = 838, n_alt = 4
   Insn 715: point = 839, n_alt = 3
   Insn 714: point = 841, n_alt = 0
   Insn 713: point = 843, n_alt = 0
   Insn 712: point = 845, n_alt = 0
   Insn 711: point = 846, n_alt = 0
   Insn 710: point = 848, n_alt = 0
   Insn 709: point = 850, n_alt = 0
   Insn 708: point = 851, n_alt = 8
   Insn 707: point = 852, n_alt = 7
   Insn 706: point = 854, n_alt = 3
   Insn 705: point = 855, n_alt = 3
   Insn 704: point = 857, n_alt = 0
   Insn 703: point = 859, n_alt = 0
   Insn 702: point = 861, n_alt = 0
   Insn 701: point = 862, n_alt = 0
   Insn 700: point = 864, n_alt = 0
   Insn 699: point = 866, n_alt = 0
   Insn 698: point = 868, n_alt = 0
   Insn 697: point = 869, n_alt = 1
   Insn 696: point = 871, n_alt = 0
   Insn 695: point = 873, n_alt = 0
   Insn 694: point = 874, n_alt = 8
   Insn 693: point = 875, n_alt = 1
   Insn 692: point = 877, n_alt = 7
   Insn 691: point = 879, n_alt = 3
   Insn 690: point = 880, n_alt = 7
   Insn 689: point = 882, n_alt = 3
   Insn 688: point = 883, n_alt = 3
   Insn 687: point = 885, n_alt = 0
   Insn 686: point = 887, n_alt = 0
   Insn 685: point = 889, n_alt = 0
   Insn 684: point = 890, n_alt = 0
   Insn 683: point = 892, n_alt = 0
   Insn 682: point = 894, n_alt = 0
   Insn 681: point = 895, n_alt = 1
   Insn 680: point = 896, n_alt = 0
   Insn 679: point = 898, n_alt = 4
   Insn 678: point = 899, n_alt = 3
   Insn 677: point = 901, n_alt = 0
   Insn 676: point = 903, n_alt = 0
   Insn 675: point = 905, n_alt = 0
   Insn 674: point = 906, n_alt = 0
   Insn 673: point = 908, n_alt = 0
   Insn 672: point = 910, n_alt = 0
   Insn 671: point = 911, n_alt = 1
   Insn 670: point = 912, n_alt = 0
   Insn 669: point = 914, n_alt = 3
   Insn 668: point = 915, n_alt = 3
   Insn 667: point = 917, n_alt = 0
   Insn 666: point = 919, n_alt = 0
   Insn 665: point = 921, n_alt = 0
   Insn 664: point = 922, n_alt = 0
   Insn 663: point = 924, n_alt = 0
   Insn 662: point = 926, n_alt = 0
  BB 52
   Insn 660: point = 928, n_alt = -1
   Insn 659: point = 928, n_alt = 0
   Insn 658: point = 929, n_alt = 0
   Insn 657: point = 931, n_alt = 4
   Insn 656: point = 932, n_alt = 3
   Insn 655: point = 934, n_alt = 0
   Insn 654: point = 936, n_alt = 0
   Insn 653: point = 938, n_alt = 0
   Insn 652: point = 939, n_alt = 0
   Insn 651: point = 941, n_alt = 0
   Insn 650: point = 943, n_alt = 0
  BB 50
   Insn 642: point = 945, n_alt = 1
  BB 48
   Insn 634: point = 946, n_alt = 1
   Insn 633: point = 947, n_alt = 0
   Insn 632: point = 948, n_alt = 0
   Insn 631: point = 949, n_alt = 0
   Insn 630: point = 949, n_alt = 3
   Insn 629: point = 949, n_alt = -2
   Insn 628: point = 950, n_alt = -2
   Insn 627: point = 951, n_alt = 4
   Insn 626: point = 951, n_alt = -2
   Insn 625: point = 952, n_alt = 4
   Insn 624: point = 952, n_alt = 4
   Insn 623: point = 952, n_alt = 3
   Insn 622: point = 953, n_alt = 3
   Insn 621: point = 954, n_alt = 3
  BB 99
   Insn 1480: point = 955, n_alt = -1
  BB 37
   Insn 474: point = 955, n_alt = -1
   Insn 473: point = 955, n_alt = 0
   Insn 472: point = 956, n_alt = 0
   Insn 471: point = 958, n_alt = 0
   Insn 470: point = 959, n_alt = 0
  BB 47
   Insn 1443: point = 960, n_alt = -1
   Insn 615: point = 960, n_alt = 1
  BB 100
   Insn 1483: point = 961, n_alt = -1
  BB 39
   Insn 482: point = 962, n_alt = -1
   Insn 481: point = 962, n_alt = 0
   Insn 480: point = 963, n_alt = 0
   Insn 479: point = 965, n_alt = 0
   Insn 478: point = 966, n_alt = 0
  BB 46
   Insn 1441: point = 967, n_alt = -1
   Insn 609: point = 967, n_alt = 1
  BB 45
   Insn 1484: point = 968, n_alt = -1
   Insn 606: point = 968, n_alt = 1
   Insn 605: point = 969, n_alt = 4
   Insn 604: point = 970, n_alt = 3
   Insn 603: point = 972, n_alt = 0
   Insn 602: point = 974, n_alt = 1
   Insn 601: point = 976, n_alt = 0
   Insn 600: point = 977, n_alt = 0
   Insn 599: point = 979, n_alt = 1
   Insn 598: point = 981, n_alt = 0
  BB 43
   Insn 1437: point = 983, n_alt = -1
   Insn 570: point = 983, n_alt = 1
   Insn 569: point = 984, n_alt = 3
   Insn 568: point = 985, n_alt = 3
   Insn 567: point = 987, n_alt = 0
   Insn 566: point = 989, n_alt = 0
   Insn 565: point = 991, n_alt = 1
   Insn 564: point = 993, n_alt = 0
   Insn 563: point = 994, n_alt = 0
   Insn 562: point = 996, n_alt = 1
   Insn 561: point = 998, n_alt = 0
   Insn 560: point = 999, n_alt = 0
   Insn 559: point = 1001, n_alt = 3
   Insn 558: point = 1002, n_alt = 3
   Insn 557: point = 1004, n_alt = 0
   Insn 556: point = 1006, n_alt = 1
   Insn 555: point = 1008, n_alt = 0
   Insn 554: point = 1009, n_alt = 0
   Insn 553: point = 1011, n_alt = 1
   Insn 552: point = 1013, n_alt = 0
  BB 44
   Insn 1439: point = 1015, n_alt = -1
   Insn 593: point = 1015, n_alt = 1
   Insn 592: point = 1016, n_alt = 3
   Insn 591: point = 1017, n_alt = 3
   Insn 590: point = 1019, n_alt = 0
   Insn 589: point = 1021, n_alt = 0
   Insn 588: point = 1023, n_alt = 1
   Insn 587: point = 1025, n_alt = 0
   Insn 586: point = 1026, n_alt = 0
   Insn 585: point = 1028, n_alt = 1
   Insn 584: point = 1030, n_alt = 0
   Insn 583: point = 1031, n_alt = 0
   Insn 582: point = 1033, n_alt = 3
   Insn 581: point = 1034, n_alt = 3
   Insn 580: point = 1036, n_alt = 0
   Insn 579: point = 1038, n_alt = 1
   Insn 578: point = 1040, n_alt = 0
   Insn 577: point = 1041, n_alt = 0
   Insn 576: point = 1043, n_alt = 1
   Insn 575: point = 1045, n_alt = 0
  BB 42
   Insn 547: point = 1047, n_alt = -1
   Insn 546: point = 1047, n_alt = 1
   Insn 545: point = 1048, n_alt = 7
  BB 41
   Insn 540: point = 1050, n_alt = -1
   Insn 539: point = 1050, n_alt = 1
   Insn 538: point = 1051, n_alt = 7
   Insn 537: point = 1053, n_alt = 4
   Insn 536: point = 1054, n_alt = 3
   Insn 535: point = 1056, n_alt = 0
   Insn 534: point = 1058, n_alt = 1
   Insn 533: point = 1060, n_alt = 0
   Insn 532: point = 1061, n_alt = 0
   Insn 531: point = 1063, n_alt = 1
   Insn 530: point = 1065, n_alt = 0
   Insn 529: point = 1066, n_alt = 8
   Insn 528: point = 1067, n_alt = 7
   Insn 527: point = 1069, n_alt = 3
   Insn 526: point = 1070, n_alt = 3
   Insn 525: point = 1072, n_alt = 0
   Insn 524: point = 1074, n_alt = 1
   Insn 523: point = 1076, n_alt = 0
   Insn 522: point = 1077, n_alt = 0
   Insn 521: point = 1079, n_alt = 0
   Insn 520: point = 1081, n_alt = 1
   Insn 519: point = 1083, n_alt = 0
   Insn 518: point = 1084, n_alt = 1
   Insn 517: point = 1086, n_alt = 1
   Insn 516: point = 1088, n_alt = 0
   Insn 515: point = 1089, n_alt = 1
   Insn 514: point = 1090, n_alt = 0
   Insn 513: point = 1092, n_alt = 3
   Insn 512: point = 1093, n_alt = 3
   Insn 511: point = 1095, n_alt = 0
   Insn 510: point = 1097, n_alt = 1
   Insn 509: point = 1099, n_alt = 0
   Insn 508: point = 1100, n_alt = 0
   Insn 507: point = 1102, n_alt = 1
   Insn 506: point = 1104, n_alt = 0
  BB 101
   Insn 1488: point = 1106, n_alt = -1
  BB 40
   Insn 504: point = 1107, n_alt = -1
   Insn 503: point = 1107, n_alt = 1
   Insn 502: point = 1108, n_alt = 7
   Insn 501: point = 1109, n_alt = 7
   Insn 500: point = 1111, n_alt = 3
   Insn 499: point = 1112, n_alt = 3
   Insn 498: point = 1114, n_alt = 0
   Insn 497: point = 1116, n_alt = 1
   Insn 496: point = 1118, n_alt = 0
   Insn 495: point = 1119, n_alt = 0
   Insn 494: point = 1121, n_alt = 1
   Insn 493: point = 1123, n_alt = 0
   Insn 492: point = 1124, n_alt = 1
   Insn 491: point = 1125, n_alt = 4
   Insn 490: point = 1126, n_alt = 3
   Insn 489: point = 1128, n_alt = 0
   Insn 488: point = 1130, n_alt = 1
   Insn 487: point = 1132, n_alt = 0
   Insn 486: point = 1133, n_alt = 0
   Insn 485: point = 1135, n_alt = 1
   Insn 484: point = 1137, n_alt = 0
  BB 38
   Insn 476: point = 1139, n_alt = 1
  BB 36
   Insn 468: point = 1140, n_alt = 1
   Insn 467: point = 1141, n_alt = 0
   Insn 466: point = 1142, n_alt = 0
  BB 96
   Insn 1471: point = 1143, n_alt = -1
  BB 9
   Insn 86: point = 1143, n_alt = -1
   Insn 85: point = 1143, n_alt = 0
   Insn 84: point = 1144, n_alt = 0
   Insn 83: point = 1146, n_alt = 0
   Insn 82: point = 1147, n_alt = 0
  BB 35
   Insn 1433: point = 1148, n_alt = -1
   Insn 460: point = 1148, n_alt = 1
  BB 97
   Insn 1474: point = 1149, n_alt = -1
  BB 11
   Insn 94: point = 1150, n_alt = -1
   Insn 93: point = 1150, n_alt = 0
   Insn 92: point = 1151, n_alt = 0
   Insn 91: point = 1153, n_alt = 0
   Insn 90: point = 1154, n_alt = 0
  BB 34
   Insn 1431: point = 1155, n_alt = -1
   Insn 454: point = 1155, n_alt = 1
  BB 30
   Insn 431: point = 1156, n_alt = -1
   Insn 430: point = 1156, n_alt = 1
   Insn 429: point = 1156, n_alt = 7
   Insn 428: point = 1158, n_alt = 3
   Insn 427: point = 1159, n_alt = 3
   Insn 426: point = 1161, n_alt = 0
   Insn 425: point = 1163, n_alt = 0
   Insn 424: point = 1165, n_alt = 0
   Insn 423: point = 1166, n_alt = 0
   Insn 422: point = 1168, n_alt = 0
   Insn 421: point = 1170, n_alt = 0
   Insn 420: point = 1172, n_alt = 0
   Insn 419: point = 1173, n_alt = 1
   Insn 418: point = 1175, n_alt = 0
   Insn 417: point = 1177, n_alt = 0
   Insn 416: point = 1178, n_alt = 7
   Insn 415: point = 1180, n_alt = 4
   Insn 414: point = 1181, n_alt = 3
   Insn 413: point = 1183, n_alt = 0
   Insn 412: point = 1185, n_alt = 0
   Insn 411: point = 1187, n_alt = 0
   Insn 410: point = 1188, n_alt = 0
   Insn 409: point = 1190, n_alt = 0
   Insn 408: point = 1192, n_alt = 0
  BB 98
   Insn 1477: point = 1194, n_alt = -1
  BB 15
   Insn 196: point = 1195, n_alt = -1
   Insn 195: point = 1195, n_alt = 0
   Insn 194: point = 1196, n_alt = 0
   Insn 193: point = 1198, n_alt = 0
   Insn 192: point = 1199, n_alt = 0
  BB 29
   Insn 1427: point = 1200, n_alt = -1
   Insn 402: point = 1200, n_alt = 1
  BB 28
   Insn 399: point = 1201, n_alt = 1
   Insn 398: point = 1202, n_alt = 0
   Insn 397: point = 1203, n_alt = 4
   Insn 396: point = 1204, n_alt = 3
   Insn 395: point = 1206, n_alt = 0
   Insn 394: point = 1208, n_alt = 0
   Insn 393: point = 1210, n_alt = 0
   Insn 392: point = 1211, n_alt = 0
   Insn 391: point = 1213, n_alt = 0
   Insn 390: point = 1215, n_alt = 0
  BB 27
   Insn 388: point = 1217, n_alt = -1
   Insn 387: point = 1217, n_alt = 0
   Insn 386: point = 1218, n_alt = 0
   Insn 385: point = 1220, n_alt = 4
   Insn 384: point = 1221, n_alt = 3
   Insn 383: point = 1223, n_alt = 0
   Insn 382: point = 1225, n_alt = 0
   Insn 381: point = 1227, n_alt = 0
   Insn 380: point = 1228, n_alt = 0
   Insn 379: point = 1230, n_alt = 0
   Insn 378: point = 1232, n_alt = 0
  BB 26
   Insn 373: point = 1234, n_alt = -1
   Insn 372: point = 1234, n_alt = 1
   Insn 371: point = 1235, n_alt = 7
  BB 25
   Insn 368: point = 1237, n_alt = 8
   Insn 367: point = 1238, n_alt = 7
   Insn 366: point = 1239, n_alt = 4
   Insn 365: point = 1240, n_alt = 3
   Insn 364: point = 1242, n_alt = 0
   Insn 363: point = 1244, n_alt = 0
   Insn 362: point = 1246, n_alt = 0
   Insn 361: point = 1247, n_alt = 0
   Insn 360: point = 1249, n_alt = 0
   Insn 359: point = 1251, n_alt = 0
  BB 24
   Insn 354: point = 1253, n_alt = -1
   Insn 353: point = 1253, n_alt = 1
   Insn 352: point = 1254, n_alt = 7
   Insn 351: point = 1255, n_alt = 7
   Insn 350: point = 1257, n_alt = 4
   Insn 349: point = 1258, n_alt = 3
   Insn 348: point = 1260, n_alt = 0
   Insn 347: point = 1262, n_alt = 0
   Insn 346: point = 1264, n_alt = 0
   Insn 345: point = 1265, n_alt = 0
   Insn 344: point = 1267, n_alt = 0
   Insn 343: point = 1269, n_alt = 0
  BB 23
   Insn 338: point = 1271, n_alt = -1
   Insn 337: point = 1271, n_alt = 1
   Insn 336: point = 1272, n_alt = 7
  BB 22
   Insn 333: point = 1274, n_alt = 8
   Insn 332: point = 1275, n_alt = 7
   Insn 331: point = 1276, n_alt = 4
   Insn 330: point = 1277, n_alt = 3
   Insn 329: point = 1279, n_alt = 0
   Insn 328: point = 1281, n_alt = 0
   Insn 327: point = 1283, n_alt = 0
   Insn 326: point = 1284, n_alt = 0
   Insn 325: point = 1286, n_alt = 0
   Insn 324: point = 1288, n_alt = 0
  BB 21
   Insn 319: point = 1290, n_alt = -1
   Insn 318: point = 1290, n_alt = 1
   Insn 317: point = 1291, n_alt = 7
   Insn 316: point = 1293, n_alt = 4
   Insn 315: point = 1294, n_alt = 3
   Insn 314: point = 1296, n_alt = 0
   Insn 313: point = 1298, n_alt = 0
   Insn 312: point = 1300, n_alt = 0
   Insn 311: point = 1301, n_alt = 0
   Insn 310: point = 1303, n_alt = 0
   Insn 309: point = 1305, n_alt = 0
  BB 20
   Insn 304: point = 1307, n_alt = -1
   Insn 303: point = 1307, n_alt = 1
   Insn 302: point = 1308, n_alt = 7
   Insn 301: point = 1309, n_alt = 8
   Insn 300: point = 1310, n_alt = 2
   Insn 299: point = 1312, n_alt = 7
   Insn 298: point = 1313, n_alt = 8
   Insn 297: point = 1314, n_alt = 1
   Insn 296: point = 1316, n_alt = 7
   Insn 295: point = 1317, n_alt = 2
   Insn 294: point = 1319, n_alt = -2
   Insn 293: point = 1321, n_alt = 2
   Insn 292: point = 1323, n_alt = 7
   Insn 291: point = 1324, n_alt = -2
   Insn 290: point = 1326, n_alt = 1
   Insn 289: point = 1328, n_alt = 7
   Insn 288: point = 1329, n_alt = 7
   Insn 287: point = 1330, n_alt = 4
   Insn 286: point = 1331, n_alt = 9
   Insn 285: point = 1332, n_alt = 0
   Insn 284: point = 1332, n_alt = -2
   Insn 283: point = 1333, n_alt = 2
   Insn 282: point = 1335, n_alt = -2
   Insn 281: point = 1337, n_alt = 1
   Insn 280: point = 1339, n_alt = 7
   Insn 279: point = 1340, n_alt = -2
   Insn 278: point = 1342, n_alt = 1
   Insn 277: point = 1344, n_alt = 7
   Insn 276: point = 1345, n_alt = 1
   Insn 275: point = 1347, n_alt = 7
   Insn 274: point = 1348, n_alt = 7
   Insn 273: point = 1349, n_alt = 1
   Insn 272: point = 1351, n_alt = 7
  BB 19
   Insn 270: point = 1353, n_alt = -1
   Insn 269: point = 1353, n_alt = 1
   Insn 268: point = 1354, n_alt = 7
   Insn 1511: point = 1355, n_alt = -2
	Hard reg 22 is preferable by r992 with profit 1000
   Insn 267: point = 1357, n_alt = 2
   Insn 1510: point = 1358, n_alt = -2
	Hard reg 22 is preferable by r992 with profit 1000
	Hard reg 21 is preferable by r992 with profit 1000
   Insn 266: point = 1360, n_alt = 7
   Insn 265: point = 1361, n_alt = 7
  BB 18
   Insn 263: point = 1363, n_alt = -1
   Insn 262: point = 1363, n_alt = 1
   Insn 261: point = 1364, n_alt = 7
   Insn 260: point = 1365, n_alt = 8
   Insn 259: point = 1366, n_alt = 1
   Insn 258: point = 1368, n_alt = 7
   Insn 257: point = 1370, n_alt = 3
   Insn 256: point = 1371, n_alt = 1
   Insn 255: point = 1373, n_alt = 7
   Insn 254: point = 1375, n_alt = 3
   Insn 253: point = 1376, n_alt = 3
   Insn 252: point = 1378, n_alt = 0
   Insn 251: point = 1380, n_alt = 0
   Insn 250: point = 1381, n_alt = 7
   Insn 249: point = 1383, n_alt = 4
   Insn 248: point = 1384, n_alt = 3
   Insn 247: point = 1386, n_alt = 0
   Insn 246: point = 1388, n_alt = 0
   Insn 245: point = 1390, n_alt = 0
   Insn 244: point = 1391, n_alt = 0
   Insn 243: point = 1393, n_alt = 0
   Insn 242: point = 1395, n_alt = 0
   Insn 241: point = 1396, n_alt = 8
   Insn 240: point = 1397, n_alt = 7
   Insn 239: point = 1399, n_alt = 3
   Insn 238: point = 1400, n_alt = 3
   Insn 237: point = 1402, n_alt = 0
   Insn 236: point = 1404, n_alt = 0
   Insn 235: point = 1406, n_alt = 0
   Insn 234: point = 1407, n_alt = 0
   Insn 233: point = 1409, n_alt = 0
   Insn 232: point = 1411, n_alt = 0
   Insn 231: point = 1413, n_alt = 0
   Insn 230: point = 1414, n_alt = 1
   Insn 229: point = 1416, n_alt = 0
   Insn 228: point = 1418, n_alt = 0
   Insn 227: point = 1419, n_alt = 8
  BB 17
   Insn 224: point = 1421, n_alt = 7
  BB 16
   Insn 222: point = 1423, n_alt = -1
   Insn 221: point = 1423, n_alt = 0
   Insn 220: point = 1424, n_alt = 0
   Insn 219: point = 1426, n_alt = 0
   Insn 218: point = 1428, n_alt = 0
   Insn 217: point = 1429, n_alt = 1
   Insn 216: point = 1429, n_alt = 0
   Insn 215: point = 1431, n_alt = 0
   Insn 214: point = 1432, n_alt = 1
   Insn 213: point = 1433, n_alt = 7
   Insn 212: point = 1434, n_alt = 7
   Insn 211: point = 1435, n_alt = 8
   Insn 210: point = 1436, n_alt = 7
   Insn 209: point = 1438, n_alt = 3
   Insn 208: point = 1439, n_alt = 3
   Insn 207: point = 1441, n_alt = 0
   Insn 206: point = 1443, n_alt = 0
   Insn 205: point = 1445, n_alt = 0
   Insn 204: point = 1446, n_alt = 0
   Insn 203: point = 1448, n_alt = 0
   Insn 202: point = 1450, n_alt = 0
   Insn 201: point = 1452, n_alt = 0
   Insn 200: point = 1453, n_alt = 1
   Insn 199: point = 1455, n_alt = 0
   Insn 198: point = 1457, n_alt = 0
  BB 14
   Insn 190: point = 1459, n_alt = 1
   Insn 189: point = 1459, n_alt = 0
   Insn 188: point = 1460, n_alt = 1
   Insn 187: point = 1461, n_alt = 0
   Insn 186: point = 1462, n_alt = 4
   Insn 185: point = 1463, n_alt = 3
   Insn 184: point = 1465, n_alt = 0
   Insn 183: point = 1467, n_alt = 0
   Insn 182: point = 1469, n_alt = 0
   Insn 181: point = 1470, n_alt = 0
   Insn 180: point = 1472, n_alt = 0
   Insn 179: point = 1474, n_alt = 0
   Insn 178: point = 1475, n_alt = 8
   Insn 177: point = 1476, n_alt = 4
   Insn 176: point = 1477, n_alt = 7
   Insn 175: point = 1479, n_alt = 3
   Insn 174: point = 1480, n_alt = 3
   Insn 173: point = 1482, n_alt = 0
   Insn 172: point = 1484, n_alt = 0
   Insn 171: point = 1486, n_alt = 0
   Insn 170: point = 1487, n_alt = 0
   Insn 169: point = 1489, n_alt = 0
   Insn 168: point = 1491, n_alt = 0
   Insn 167: point = 1492, n_alt = 3
   Insn 166: point = 1494, n_alt = 0
   Insn 165: point = 1496, n_alt = 0
   Insn 164: point = 1498, n_alt = 0
   Insn 163: point = 1499, n_alt = 0
   Insn 162: point = 1501, n_alt = 0
   Insn 161: point = 1503, n_alt = 0
   Insn 160: point = 1505, n_alt = 0
   Insn 159: point = 1506, n_alt = 1
   Insn 158: point = 1508, n_alt = 0
   Insn 157: point = 1510, n_alt = 0
   Insn 156: point = 1511, n_alt = 8
   Insn 155: point = 1512, n_alt = 4
   Insn 154: point = 1513, n_alt = 7
   Insn 153: point = 1515, n_alt = 3
   Insn 152: point = 1516, n_alt = 3
   Insn 151: point = 1518, n_alt = 0
   Insn 150: point = 1520, n_alt = 0
   Insn 149: point = 1522, n_alt = 0
   Insn 148: point = 1523, n_alt = 0
   Insn 147: point = 1525, n_alt = 0
   Insn 146: point = 1527, n_alt = 0
   Insn 145: point = 1528, n_alt = 3
   Insn 144: point = 1530, n_alt = 0
   Insn 143: point = 1532, n_alt = 0
   Insn 142: point = 1534, n_alt = 0
   Insn 141: point = 1535, n_alt = 0
   Insn 140: point = 1537, n_alt = 0
   Insn 139: point = 1539, n_alt = 0
   Insn 138: point = 1541, n_alt = 0
   Insn 137: point = 1542, n_alt = 1
   Insn 136: point = 1544, n_alt = 0
   Insn 135: point = 1546, n_alt = 0
  BB 33
   Insn 1429: point = 1548, n_alt = -1
   Insn 448: point = 1548, n_alt = 8
   Insn 447: point = 1549, n_alt = 1
   Insn 446: point = 1551, n_alt = 7
   Insn 445: point = 1552, n_alt = 7
  BB 32
   Insn 440: point = 1554, n_alt = -1
   Insn 439: point = 1554, n_alt = 1
   Insn 438: point = 1555, n_alt = 7
  BB 31
   Insn 433: point = 1557, n_alt = -1
   Insn 432: point = 1557, n_alt = 1
  BB 13
   Insn 133: point = 1559, n_alt = 8
   Insn 132: point = 1560, n_alt = 7
   Insn 131: point = 1561, n_alt = 8
   Insn 130: point = 1562, n_alt = 1
   Insn 129: point = 1564, n_alt = 7
   Insn 128: point = 1566, n_alt = 3
   Insn 127: point = 1567, n_alt = 7
   Insn 126: point = 1569, n_alt = 3
   Insn 125: point = 1570, n_alt = 3
   Insn 124: point = 1572, n_alt = 0
   Insn 123: point = 1574, n_alt = 0
   Insn 122: point = 1576, n_alt = 0
   Insn 121: point = 1577, n_alt = 0
   Insn 120: point = 1579, n_alt = 0
   Insn 119: point = 1581, n_alt = 0
  BB 12
   Insn 117: point = 1583, n_alt = -1
   Insn 116: point = 1583, n_alt = 1
   Insn 115: point = 1584, n_alt = 7
   Insn 114: point = 1585, n_alt = 7
   Insn 113: point = 1587, n_alt = 3
   Insn 112: point = 1588, n_alt = 3
   Insn 111: point = 1590, n_alt = 0
   Insn 110: point = 1592, n_alt = 0
   Insn 109: point = 1594, n_alt = 0
   Insn 108: point = 1595, n_alt = 0
   Insn 107: point = 1597, n_alt = 0
   Insn 106: point = 1599, n_alt = 0
   Insn 105: point = 1600, n_alt = 1
   Insn 104: point = 1601, n_alt = 0
   Insn 103: point = 1603, n_alt = 3
   Insn 102: point = 1604, n_alt = 3
   Insn 101: point = 1606, n_alt = 0
   Insn 100: point = 1608, n_alt = 0
   Insn 99: point = 1610, n_alt = 0
   Insn 98: point = 1611, n_alt = 0
   Insn 97: point = 1613, n_alt = 0
   Insn 96: point = 1615, n_alt = 0
  BB 10
   Insn 88: point = 1617, n_alt = 1
  BB 8
   Insn 80: point = 1618, n_alt = 1
   Insn 79: point = 1619, n_alt = 0
   Insn 78: point = 1620, n_alt = 0
  BB 94
   Insn 1465: point = 1621, n_alt = -1
  BB 3
   Insn 19: point = 1621, n_alt = -1
   Insn 18: point = 1621, n_alt = 0
   Insn 17: point = 1622, n_alt = 0
   Insn 16: point = 1624, n_alt = 0
   Insn 15: point = 1625, n_alt = 0
  BB 7
   Insn 1425: point = 1626, n_alt = -1
   Insn 72: point = 1626, n_alt = 1
  BB 95
   Insn 1468: point = 1627, n_alt = -1
  BB 5
   Insn 27: point = 1628, n_alt = -1
   Insn 26: point = 1628, n_alt = 0
   Insn 25: point = 1629, n_alt = 0
   Insn 24: point = 1631, n_alt = 0
   Insn 23: point = 1632, n_alt = 0
  BB 6
   Insn 1423: point = 1633, n_alt = -1
   Insn 66: point = 1633, n_alt = 1
   Insn 65: point = 1633, n_alt = 8
   Insn 64: point = 1634, n_alt = 4
   Insn 63: point = 1635, n_alt = 1
   Insn 62: point = 1637, n_alt = 3
   Insn 61: point = 1639, n_alt = 0
   Insn 60: point = 1641, n_alt = 1
   Insn 59: point = 1643, n_alt = 0
   Insn 58: point = 1644, n_alt = 0
   Insn 57: point = 1646, n_alt = 1
   Insn 56: point = 1648, n_alt = 0
   Insn 55: point = 1649, n_alt = 7
   Insn 54: point = 1651, n_alt = 3
   Insn 53: point = 1652, n_alt = 3
   Insn 52: point = 1654, n_alt = 0
   Insn 51: point = 1656, n_alt = 1
   Insn 50: point = 1658, n_alt = 0
   Insn 49: point = 1659, n_alt = 0
   Insn 48: point = 1661, n_alt = 1
   Insn 47: point = 1663, n_alt = 0
   Insn 46: point = 1664, n_alt = 7
   Insn 45: point = 1666, n_alt = 3
   Insn 44: point = 1667, n_alt = 3
   Insn 43: point = 1669, n_alt = 0
   Insn 42: point = 1671, n_alt = 1
   Insn 41: point = 1673, n_alt = 0
   Insn 40: point = 1674, n_alt = 0
   Insn 39: point = 1676, n_alt = 1
   Insn 38: point = 1678, n_alt = 0
   Insn 37: point = 1679, n_alt = 1
   Insn 36: point = 1680, n_alt = 3
   Insn 35: point = 1681, n_alt = 3
   Insn 34: point = 1683, n_alt = 0
   Insn 33: point = 1685, n_alt = 1
   Insn 32: point = 1687, n_alt = 0
   Insn 31: point = 1688, n_alt = 0
   Insn 30: point = 1690, n_alt = 1
   Insn 29: point = 1692, n_alt = 0
  BB 4
   Insn 21: point = 1694, n_alt = 1
  BB 2
   Insn 13: point = 1695, n_alt = 1
   Insn 12: point = 1696, n_alt = 0
   Insn 11: point = 1697, n_alt = 0
   Insn 7: point = 1698, n_alt = 5
   Insn 6: point = 1698, n_alt = 5
   Insn 5: point = 1698, n_alt = 5
   Insn 4: point = 1698, n_alt = 5
   Insn 3: point = 1698, n_alt = 5
   Insn 2: point = 1698, n_alt = 5
 r87: [1689..1690]
 r88: [1684..1688]
 r89: [1684..1685]
 r90: [1682..1683]
 r91: [1679..1681]
 r92: [1675..1676]
 r93: [1670..1674]
 r94: [1670..1671]
 r95: [1668..1669]
 r96: [1665..1667]
 r97: [1636..1664]
 r98: [1660..1661]
 r99: [1655..1659]
 r100: [1655..1656]
 r101: [1653..1654]
 r102: [1650..1652]
 r103: [1636..1649]
 r104: [1645..1646]
 r105: [1640..1644]
 r106: [1640..1641]
 r107: [1638..1639]
 r108: [1633..1637]
 r109: [1633..1635]
 r110: [1612..1613]
 r111: [1607..1611]
 r112: [1607..1608]
 r113: [1605..1606]
 r114: [1602..1604]
 r115: [1596..1597]
 r116: [1591..1595]
 r117: [1591..1592]
 r118: [1589..1590]
 r119: [1586..1588]
 r120: [1583..1585]
 r121: [1578..1579]
 r122: [1573..1577]
 r123: [1573..1574]
 r124: [1571..1572]
 r125: [1568..1570]
 r126: [1563..1567]
 r127: [1563..1564]
 r128: [1543..1544]
 r129: [1536..1542]
 r130: [1538..1539]
 r131: [1536..1537]
 r132: [1531..1535]
 r133: [1531..1532]
 r134: [1529..1530]
 r135: [1514..1528]
 r136: [1524..1525]
 r137: [1519..1523]
 r138: [1519..1520]
 r139: [1517..1518]
 r140: [1511..1516]
 r141: [1511..1513]
 r142: [1507..1508]
 r143: [1500..1506]
 r144: [1502..1503]
 r145: [1500..1501]
 r146: [1495..1499]
 r147: [1495..1496]
 r148: [1493..1494]
 r149: [1478..1492]
 r150: [1488..1489]
 r151: [1483..1487]
 r152: [1483..1484]
 r153: [1481..1482]
 r154: [1475..1480]
 r155: [1475..1477]
 r156: [1471..1472]
 r157: [1466..1470]
 r158: [1466..1467]
 r159: [1464..1465]
 r160: [1460..1463]
 r161: [1454..1455]
 r162: [1447..1453]
 r163: [1449..1450]
 r164: [1447..1448]
 r165: [1442..1446]
 r166: [1442..1443]
 r167: [1440..1441]
 r168: [1437..1439]
 r169: [1425..1429]
 r170: [1425..1426]
 r171: [1423..1424]
 r172: [1415..1416]
 r173: [1408..1414]
 r174: [1410..1411]
 r175: [1408..1409]
 r176: [1403..1407]
 r177: [1403..1404]
 r178: [1401..1402]
 r179: [1398..1400]
 r180: [1392..1393]
 r181: [1387..1391]
 r182: [1387..1388]
 r183: [1385..1386]
 r184: [1382..1384]
 r185: [1372..1381]
 r186: [1377..1378]
 r187: [1374..1376]
 r188: [1372..1373]
 r189: [1367..1371]
 r190: [1367..1368]
 r191: [1353..1355]
 r192: [1334..1349]
 r193: [1343..1345]
 r194: [1341..1342]
 r195: [1338..1340]
 r196: [1336..1337]
 r197: [1334..1335]
 r198: [1332..1333]
 r199: [1325..1326]
 r200: [1318..1324]
 r201: [1320..1321]
 r202: [1318..1319]
 r203: [1315..1317]
 r204: [1302..1303]
 r205: [1297..1301]
 r206: [1297..1298]
 r207: [1295..1296]
 r208: [1292..1294]
 r209: [1290..1291]
 r210: [1285..1286]
 r211: [1280..1284]
 r212: [1280..1281]
 r213: [1278..1279]
 r214: [1274..1277]
 r215: [1266..1267]
 r216: [1261..1265]
 r217: [1261..1262]
 r218: [1259..1260]
 r219: [1256..1258]
 r220: [1253..1255]
 r221: [1248..1249]
 r222: [1243..1247]
 r223: [1243..1244]
 r224: [1241..1242]
 r225: [1237..1240]
 r226: [1229..1230]
 r227: [1224..1228]
 r228: [1224..1225]
 r229: [1222..1223]
 r230: [1219..1221]
 r231: [1217..1218]
 r232: [1212..1213]
 r233: [1207..1211]
 r234: [1207..1208]
 r235: [1205..1206]
 r236: [1201..1204]
 r237: [1189..1190]
 r238: [1184..1188]
 r239: [1184..1185]
 r240: [1182..1183]
 r241: [1179..1181]
 r242: [1557..1558] [1156..1178]
 r243: [1174..1175]
 r244: [1167..1173]
 r245: [1169..1170]
 r246: [1167..1168]
 r247: [1162..1166]
 r248: [1162..1163]
 r249: [1160..1161]
 r250: [1157..1159]
 r251: [1557..1558] [1156..1156]
 r252: [1134..1135]
 r253: [1129..1133]
 r254: [1129..1130]
 r255: [1127..1128]
 r256: [1124..1126]
 r257: [1120..1121]
 r258: [1115..1119]
 r259: [1115..1116]
 r260: [1113..1114]
 r261: [1110..1112]
 r262: [1107..1109]
 r263: [1101..1102]
 r264: [1096..1100]
 r265: [1096..1097]
 r266: [1094..1095]
 r267: [1091..1093]
 r268: [1085..1086]
 r269: [1078..1084]
 r270: [1080..1081]
 r271: [1078..1079]
 r272: [1073..1077]
 r273: [1073..1074]
 r274: [1071..1072]
 r275: [1068..1070]
 r276: [1062..1063]
 r277: [1057..1061]
 r278: [1057..1058]
 r279: [1055..1056]
 r280: [1052..1054]
 r281: [1050..1051]
 r282: [1010..1011]
 r283: [1005..1009]
 r284: [1005..1006]
 r285: [1003..1004]
 r286: [1000..1002]
 r287: [986..999]
 r288: [995..996]
 r289: [990..994]
 r290: [990..991]
 r291: [988..989]
 r292: [983..987]
 r293: [983..985]
 r294: [1042..1043]
 r295: [1037..1041]
 r296: [1037..1038]
 r297: [1035..1036]
 r298: [1032..1034]
 r299: [1018..1031]
 r300: [1027..1028]
 r301: [1022..1026]
 r302: [1022..1023]
 r303: [1020..1021]
 r304: [1015..1019]
 r305: [1015..1017]
 r306: [978..979]
 r307: [973..977]
 r308: [973..974]
 r309: [971..972]
 r310: [968..970]
 r311: [940..941]
 r312: [935..939]
 r313: [935..936]
 r314: [933..934]
 r315: [930..932]
 r316: [928..929]
 r317: [923..924]
 r318: [918..922]
 r319: [918..919]
 r320: [916..917]
 r321: [913..915]
 r322: [907..908]
 r323: [902..906]
 r324: [902..903]
 r325: [900..901]
 r326: [897..899]
 r327: [891..892]
 r328: [886..890]
 r329: [886..887]
 r330: [884..885]
 r331: [881..883]
 r332: [876..880]
 r333: [876..877]
 r334: [870..871]
 r335: [863..869]
 r336: [865..866]
 r337: [863..864]
 r338: [858..862]
 r339: [858..859]
 r340: [856..857]
 r341: [853..855]
 r342: [847..848]
 r343: [842..846]
 r344: [842..843]
 r345: [840..841]
 r346: [837..839]
 r347: [817..818]
 r348: [812..816]
 r349: [812..813]
 r350: [810..811]
 r351: [807..809]
 r352: [797..806]
 r353: [802..803]
 r354: [799..801]
 r355: [797..798]
 r356: [792..796]
 r357: [792..793]
 r358: [786..787]
 r359: [779..785]
 r360: [781..782]
 r361: [779..780]
 r362: [774..778]
 r363: [774..775]
 r364: [772..773]
 r365: [769..771]
 r366: [737..768]
 r367: [764..765]
 r368: [757..763]
 r369: [759..760]
 r370: [757..758]
 r371: [752..756]
 r372: [752..753]
 r373: [750..751]
 r374: [747..749]
 r375: [744..746]
 r376: [741..743]
 r377: [739..740]
 r378: [737..738]
 r379: [734..736]
 r381: [726..727]
 r382: [722..725]
 r383: [716..717]
 r384: [709..715]
 r385: [711..712]
 r386: [709..710]
 r387: [704..708]
 r388: [704..705]
 r389: [702..703]
 r390: [699..701]
 r391: [696..698]
 r392: [694..695]
 r393: [691..693]
 r394: [685..686]
 r395: [678..684]
 r396: [680..681]
 r397: [678..679]
 r398: [673..677]
 r399: [673..674]
 r400: [671..672]
 r401: [668..670]
 r402: [666..667]
 r403: [107..108]
 r404: [102..106]
 r405: [102..103]
 r406: [100..101]
 r407: [97..99]
 r408: [83..96]
 r409: [92..93]
 r410: [87..91]
 r411: [87..88]
 r412: [85..86]
 r413: [80..84]
 r414: [80..82]
 r415: [634..635]
 r416: [629..633]
 r417: [629..630]
 r418: [627..628]
 r419: [624..626]
 r420: [614..623]
 r421: [619..620]
 r422: [616..618]
 r423: [614..615]
 r424: [609..613]
 r425: [609..610]
 r426: [599..600]
 r427: [592..598]
 r428: [594..595]
 r429: [592..593]
 r430: [587..591]
 r431: [587..588]
 r432: [585..586]
 r433: [582..584]
 r434: [550..581]
 r435: [577..578]
 r436: [570..576]
 r437: [572..573]
 r438: [570..571]
 r439: [565..569]
 r440: [565..566]
 r441: [563..564]
 r442: [560..562]
 r443: [557..559]
 r444: [554..556]
 r445: [552..553]
 r446: [550..551]
 r447: [547..549]
 r449: [539..540]
 r450: [535..538]
 r451: [526..527]
 r452: [519..525]
 r453: [521..522]
 r454: [519..520]
 r455: [514..518]
 r456: [514..515]
 r457: [512..513]
 r458: [509..511]
 r459: [477..508]
 r460: [504..505]
 r461: [497..503]
 r462: [499..500]
 r463: [497..498]
 r464: [492..496]
 r465: [492..493]
 r466: [490..491]
 r467: [487..489]
 r468: [484..486]
 r469: [481..483]
 r470: [479..480]
 r471: [477..478]
 r472: [474..476]
 r474: [466..467]
 r475: [462..465]
 r476: [455..456]
 r477: [448..454]
 r478: [450..451]
 r479: [448..449]
 r480: [443..447]
 r481: [443..444]
 r482: [441..442]
 r483: [438..440]
 r484: [435..437]
 r485: [433..434]
 r486: [430..432]
 r487: [404..405]
 r488: [397..403]
 r489: [399..400]
 r490: [397..398]
 r491: [392..396]
 r492: [392..393]
 r493: [390..391]
 r494: [387..389]
 r495: [384..386]
 r496: [377..378]
 r497: [370..376]
 r498: [372..373]
 r499: [370..371]
 r500: [365..369]
 r501: [365..366]
 r502: [363..364]
 r503: [360..362]
 r504: [358..359]
 r505: [350..351]
 r506: [345..349]
 r507: [345..346]
 r508: [343..344]
 r509: [340..342]
 r510: [330..339]
 r511: [335..336]
 r512: [332..334]
 r513: [330..331]
 r514: [325..329]
 r515: [325..326]
 r516: [319..320]
 r517: [312..318]
 r518: [314..315]
 r519: [312..313]
 r520: [307..311]
 r521: [307..308]
 r522: [305..306]
 r523: [302..304]
 r524: [270..301]
 r525: [297..298]
 r526: [290..296]
 r527: [292..293]
 r528: [290..291]
 r529: [285..289]
 r530: [285..286]
 r531: [283..284]
 r532: [280..282]
 r533: [277..279]
 r534: [274..276]
 r535: [272..273]
 r536: [270..271]
 r537: [267..269]
 r539: [259..260]
 r540: [255..258]
 r541: [249..250]
 r542: [242..248]
 r543: [244..245]
 r544: [242..243]
 r545: [237..241]
 r546: [237..238]
 r547: [235..236]
 r548: [232..234]
 r549: [229..231]
 r550: [227..228]
 r551: [224..226]
 r552: [215..216]
 r553: [208..214]
 r554: [210..211]
 r555: [208..209]
 r556: [203..207]
 r557: [203..204]
 r558: [201..202]
 r559: [198..200]
 r560: [196..197]
 r561: [185..186]
 r562: [178..184]
 r563: [180..181]
 r564: [178..179]
 r565: [173..177]
 r566: [173..174]
 r567: [171..172]
 r568: [168..170]
 r569: [165..167]
 r570: [139..140]
 r571: [134..138]
 r572: [134..135]
 r573: [132..133]
 r574: [129..131]
 r575: [115..128]
 r576: [124..125]
 r577: [119..123]
 r578: [119..120]
 r579: [117..118]
 r580: [112..116]
 r581: [112..114]
 r582: [40..41]
 r583: [35..39]
 r584: [35..36]
 r585: [33..34]
 r586: [30..32]
 r587: [16..29]
 r588: [25..26]
 r589: [20..24]
 r590: [20..21]
 r591: [18..19]
 r592: [13..17]
 r593: [13..15]
 r594: [72..73]
 r595: [67..71]
 r596: [67..68]
 r597: [65..66]
 r598: [62..64]
 r599: [48..61]
 r600: [57..58]
 r601: [52..56]
 r602: [52..53]
 r603: [50..51]
 r604: [45..49]
 r605: [45..47]
 r606: [1423..1434] [1419..1421]
 r607: [1695..1697]
 r608: [1621..1696]
 r609: [1621..1622]
 r610: [1628..1629]
 r611: [1618..1620]
 r612: [1143..1619]
 r613: [1143..1144]
 r614: [1150..1151]
 r615: [1195..1459]
 r616: [1195..1196]
 r617: [1140..1142]
 r618: [955..1141]
 r619: [955..956]
 r620: [962..963]
 r621: [946..948]
 r622: [0..947]
 r623: [0..1]
 r624: [7..8]
 r625: [822..824]
 r626: [653..823]
 r627: [653..654]
 r628: [639..640]
 r629: [416..417]
 r630: [410..411]
 r631: [154..155]
 r632: [1623..1624]
 r633: [1630..1631]
 r634: [1691..1692]
 r635: [1686..1687]
 r636: [1679..1680]
 r637: [1677..1678]
 r638: [1672..1673]
 r639: [1665..1666]
 r640: [1662..1663]
 r641: [1657..1658]
 r642: [1650..1651]
 r643: [1647..1648]
 r644: [1642..1643]
 r645: [1633..1634]
 r646: [1145..1146]
 r647: [1152..1153]
 r648: [1614..1615]
 r649: [1609..1610]
 r650: [1602..1603]
 r651: [1600..1601]
 r652: [1598..1599]
 r653: [1593..1594]
 r654: [1586..1587]
 r655: [1583..1584]
 r656: [1580..1581]
 r657: [1575..1576]
 r658: [1568..1569]
 r659: [1565..1566]
 r660: [1561..1562]
 r661: [1559..1560]
 r662: [1545..1546]
 r663: [1540..1541]
 r664: [1533..1534]
 r665: [1526..1527]
 r666: [1521..1522]
 r667: [1514..1515]
 r668: [1511..1512]
 r669: [1509..1510]
 r670: [1504..1505]
 r671: [1497..1498]
 r672: [1490..1491]
 r673: [1485..1486]
 r674: [1478..1479]
 r675: [1475..1476]
 r676: [1473..1474]
 r677: [1468..1469]
 r678: [1460..1462]
 r679: [1460..1461]
 r680: [1197..1198]
 r681: [1456..1457]
 r682: [1451..1452]
 r683: [1444..1445]
 r684: [1437..1438]
 r685: [1435..1436]
 r686: [1430..1431]
 r687: [1432..1433]
 r688: [1427..1428]
 r689: [1417..1418]
 r690: [1412..1413]
 r691: [1405..1406]
 r692: [1398..1399]
 r693: [1396..1397]
 r694: [1394..1395]
 r695: [1389..1390]
 r696: [1382..1383]
 r697: [1379..1380]
 r698: [1374..1375]
 r699: [1369..1370]
 r700: [1365..1366]
 r701: [1363..1364]
 r702: [1359..1361]
 r703: [1357..1360]
 r704: [1353..1354]
 r705: [1350..1351]
 r706: [1346..1348]
 r707: [1346..1347]
 r708: [1343..1344]
 r709: [1338..1339]
 r710: [1330..1331]
 r711: [1327..1329]
 r712: [1327..1328]
 r713: [1322..1323]
 r714: [1313..1314]
 r715: [1315..1316]
 r716: [1309..1310]
 r717: [1311..1312]
 r718: [1307..1308]
 r719: [1304..1305]
 r720: [1299..1300]
 r721: [1292..1293]
 r722: [1287..1288]
 r723: [1282..1283]
 r724: [1274..1276]
 r725: [1274..1275]
 r726: [1271..1272]
 r727: [1268..1269]
 r728: [1263..1264]
 r729: [1256..1257]
 r730: [1253..1254]
 r731: [1250..1251]
 r732: [1245..1246]
 r733: [1237..1239]
 r734: [1237..1238]
 r735: [1234..1235]
 r736: [1231..1232]
 r737: [1226..1227]
 r738: [1219..1220]
 r739: [1214..1215]
 r740: [1209..1210]
 r741: [1201..1203]
 r742: [1201..1202]
 r743: [1191..1192]
 r744: [1186..1187]
 r745: [1179..1180]
 r746: [1176..1177]
 r747: [1171..1172]
 r748: [1164..1165]
 r749: [1157..1158]
 r750: [1554..1555]
 r751: [1548..1549]
 r752: [1550..1552]
 r753: [1550..1551]
 r754: [957..958]
 r755: [964..965]
 r756: [1136..1137]
 r757: [1131..1132]
 r758: [1124..1125]
 r759: [1122..1123]
 r760: [1117..1118]
 r761: [1110..1111]
 r762: [1107..1108]
 r763: [1103..1104]
 r764: [1098..1099]
 r765: [1091..1092]
 r766: [1089..1090]
 r767: [1087..1088]
 r768: [1082..1083]
 r769: [1075..1076]
 r770: [1068..1069]
 r771: [1066..1067]
 r772: [1064..1065]
 r773: [1059..1060]
 r774: [1052..1053]
 r775: [1047..1048]
 r776: [1012..1013]
 r777: [1007..1008]
 r778: [1000..1001]
 r779: [997..998]
 r780: [992..993]
 r781: [983..984]
 r782: [1044..1045]
 r783: [1039..1040]
 r784: [1032..1033]
 r785: [1029..1030]
 r786: [1024..1025]
 r787: [1015..1016]
 r788: [980..981]
 r789: [975..976]
 r790: [968..969]
 r791: [951..954]
 r792: [950..953]
 r793: [949..952]
 r794: [2..3]
 r795: [9..10]
 r796: [942..943]
 r797: [937..938]
 r798: [930..931]
 r799: [925..926]
 r800: [920..921]
 r801: [913..914]
 r802: [911..912]
 r803: [909..910]
 r804: [904..905]
 r805: [897..898]
 r806: [895..896]
 r807: [893..894]
 r808: [888..889]
 r809: [881..882]
 r810: [878..879]
 r811: [874..875]
 r812: [872..873]
 r813: [867..868]
 r814: [860..861]
 r815: [853..854]
 r816: [851..852]
 r817: [849..850]
 r818: [844..845]
 r819: [837..838]
 r820: [835..836]
 r821: [833..834]
 r822: [831..832]
 r823: [829..830]
 r824: [827..828]
 r825: [825..826]
 r826: [655..656]
 r827: [819..820]
 r828: [814..815]
 r829: [807..808]
 r830: [804..805]
 r831: [799..800]
 r832: [794..795]
 r833: [790..791]
 r834: [788..789]
 r835: [783..784]
 r836: [776..777]
 r837: [769..770]
 r838: [766..767]
 r839: [761..762]
 r840: [754..755]
 r841: [747..748]
 r842: [744..745]
 r843: [741..742]
 r844: [732..735]
 r845: [728..729]
 r846: [720..721]
 r847: [718..719]
 r848: [713..714]
 r849: [706..707]
 r850: [699..700]
 r851: [696..697]
 r852: [689..690]
 r853: [691..692]
 r854: [687..688]
 r855: [682..683]
 r856: [675..676]
 r857: [668..669]
 r858: [661..662]
 r859: [663..664]
 r860: [658..659]
 r861: [649..650]
 r862: [109..110]
 r863: [104..105]
 r864: [97..98]
 r865: [94..95]
 r866: [89..90]
 r867: [80..81]
 r868: [646..647]
 r869: [641..642]
 r870: [643..645]
 r871: [643..644]
 r872: [418..419]
 r873: [636..637]
 r874: [631..632]
 r875: [624..625]
 r876: [621..622]
 r877: [616..617]
 r878: [611..612]
 r879: [607..608]
 r880: [605..606]
 r881: [601..602]
 r882: [596..597]
 r883: [589..590]
 r884: [582..583]
 r885: [579..580]
 r886: [574..575]
 r887: [567..568]
 r888: [560..561]
 r889: [557..558]
 r890: [554..555]
 r891: [545..548]
 r892: [541..542]
 r893: [533..534]
 r894: [531..532]
 r895: [528..529]
 r896: [523..524]
 r897: [516..517]
 r898: [509..510]
 r899: [506..507]
 r900: [501..502]
 r901: [494..495]
 r902: [487..488]
 r903: [484..485]
 r904: [481..482]
 r905: [472..475]
 r906: [468..469]
 r907: [460..461]
 r908: [457..458]
 r909: [452..453]
 r910: [445..446]
 r911: [438..439]
 r912: [435..436]
 r913: [428..429]
 r914: [430..431]
 r915: [424..425]
 r916: [426..427]
 r917: [421..422]
 r918: [412..413]
 r919: [156..157]
 r920: [406..407]
 r921: [401..402]
 r922: [394..395]
 r923: [387..388]
 r924: [384..385]
 r925: [379..380]
 r926: [374..375]
 r927: [367..368]
 r928: [360..361]
 r929: [352..353]
 r930: [347..348]
 r931: [340..341]
 r932: [337..338]
 r933: [332..333]
 r934: [327..328]
 r935: [323..324]
 r936: [321..322]
 r937: [316..317]
 r938: [309..310]
 r939: [302..303]
 r940: [299..300]
 r941: [294..295]
 r942: [287..288]
 r943: [280..281]
 r944: [277..278]
 r945: [274..275]
 r946: [265..268]
 r947: [261..262]
 r948: [253..254]
 r949: [251..252]
 r950: [246..247]
 r951: [239..240]
 r952: [232..233]
 r953: [229..230]
 r954: [222..223]
 r955: [224..225]
 r956: [220..221]
 r957: [217..218]
 r958: [212..213]
 r959: [205..206]
 r960: [198..199]
 r961: [191..192]
 r962: [193..194]
 r963: [187..188]
 r964: [182..183]
 r965: [175..176]
 r966: [168..169]
 r967: [165..166]
 r968: [160..161]
 r969: [162..163]
 r970: [150..151]
 r971: [147..148]
 r972: [144..145]
 r973: [141..142]
 r974: [136..137]
 r975: [129..130]
 r976: [126..127]
 r977: [121..122]
 r978: [112..113]
 r979: [77..78]
 r980: [42..43]
 r981: [37..38]
 r982: [30..31]
 r983: [27..28]
 r984: [22..23]
 r985: [13..14]
 r986: [74..75]
 r987: [69..70]
 r988: [62..63]
 r989: [59..60]
 r990: [54..55]
 r991: [45..46]
 r992: [1356..1358]
 r993: [731..733]
 r995: [544..546]
 r997: [471..473]
 r999: [264..266]
 r1005: [255..256]
 r1006: [462..463]
 r1007: [535..536]
 r1008: [722..723]
 r1009: [724..730]
 r1010: [464..470]
 r1011: [537..543]
 r1012: [257..263]
Compressing live ranges: from 1698 to 1359 - 80%
Ranges after the compression:
 r87: [1353..1354]
 r88: [1349..1352]
 r89: [1349..1350]
 r90: [1347..1348]
 r91: [1345..1346]
 r92: [1341..1342]
 r93: [1337..1340]
 r94: [1337..1338]
 r95: [1335..1336]
 r96: [1333..1334]
 r97: [1309..1332]
 r98: [1329..1330]
 r99: [1325..1328]
 r100: [1325..1326]
 r101: [1323..1324]
 r102: [1321..1322]
 r103: [1309..1320]
 r104: [1317..1318]
 r105: [1313..1316]
 r106: [1313..1314]
 r107: [1311..1312]
 r108: [1307..1310]
 r109: [1307..1308]
 r110: [1293..1294]
 r111: [1289..1292]
 r112: [1289..1290]
 r113: [1287..1288]
 r114: [1285..1286]
 r115: [1279..1280]
 r116: [1275..1278]
 r117: [1275..1276]
 r118: [1273..1274]
 r119: [1271..1272]
 r120: [1269..1270]
 r121: [1265..1266]
 r122: [1261..1264]
 r123: [1261..1262]
 r124: [1259..1260]
 r125: [1257..1258]
 r126: [1253..1256]
 r127: [1253..1254]
 r128: [1237..1238]
 r129: [1231..1236]
 r130: [1233..1234]
 r131: [1231..1232]
 r132: [1227..1230]
 r133: [1227..1228]
 r134: [1225..1226]
 r135: [1213..1224]
 r136: [1221..1222]
 r137: [1217..1220]
 r138: [1217..1218]
 r139: [1215..1216]
 r140: [1211..1214]
 r141: [1211..1212]
 r142: [1207..1208]
 r143: [1201..1206]
 r144: [1203..1204]
 r145: [1201..1202]
 r146: [1197..1200]
 r147: [1197..1198]
 r148: [1195..1196]
 r149: [1183..1194]
 r150: [1191..1192]
 r151: [1187..1190]
 r152: [1187..1188]
 r153: [1185..1186]
 r154: [1181..1184]
 r155: [1181..1182]
 r156: [1177..1178]
 r157: [1173..1176]
 r158: [1173..1174]
 r159: [1171..1172]
 r160: [1169..1170]
 r161: [1165..1166]
 r162: [1159..1164]
 r163: [1161..1162]
 r164: [1159..1160]
 r165: [1155..1158]
 r166: [1155..1156]
 r167: [1153..1154]
 r168: [1151..1152]
 r169: [1141..1144]
 r170: [1141..1142]
 r171: [1139..1140]
 r172: [1133..1134]
 r173: [1127..1132]
 r174: [1129..1130]
 r175: [1127..1128]
 r176: [1123..1126]
 r177: [1123..1124]
 r178: [1121..1122]
 r179: [1119..1120]
 r180: [1113..1114]
 r181: [1109..1112]
 r182: [1109..1110]
 r183: [1107..1108]
 r184: [1105..1106]
 r185: [1097..1104]
 r186: [1101..1102]
 r187: [1099..1100]
 r188: [1097..1098]
 r189: [1093..1096]
 r190: [1093..1094]
 r191: [1083..1084]
 r192: [1069..1080]
 r193: [1077..1078]
 r194: [1075..1076]
 r195: [1073..1074]
 r196: [1071..1072]
 r197: [1069..1070]
 r198: [1067..1068]
 r199: [1061..1062]
 r200: [1055..1060]
 r201: [1057..1058]
 r202: [1055..1056]
 r203: [1053..1054]
 r204: [1041..1042]
 r205: [1037..1040]
 r206: [1037..1038]
 r207: [1035..1036]
 r208: [1033..1034]
 r209: [1031..1032]
 r210: [1027..1028]
 r211: [1023..1026]
 r212: [1023..1024]
 r213: [1021..1022]
 r214: [1019..1020]
 r215: [1013..1014]
 r216: [1009..1012]
 r217: [1009..1010]
 r218: [1007..1008]
 r219: [1005..1006]
 r220: [1003..1004]
 r221: [999..1000]
 r222: [995..998]
 r223: [995..996]
 r224: [993..994]
 r225: [991..992]
 r226: [985..986]
 r227: [981..984]
 r228: [981..982]
 r229: [979..980]
 r230: [977..978]
 r231: [975..976]
 r232: [971..972]
 r233: [967..970]
 r234: [967..968]
 r235: [965..966]
 r236: [963..964]
 r237: [955..956]
 r238: [951..954]
 r239: [951..952]
 r240: [949..950]
 r241: [947..948]
 r242: [1247..1248] [928..946]
 r243: [943..944]
 r244: [937..942]
 r245: [939..940]
 r246: [937..938]
 r247: [933..936]
 r248: [933..934]
 r249: [931..932]
 r250: [929..930]
 r251: [1247..1248] [928..928]
 r252: [914..915]
 r253: [910..913]
 r254: [910..911]
 r255: [908..909]
 r256: [906..907]
 r257: [902..903]
 r258: [898..901]
 r259: [898..899]
 r260: [896..897]
 r261: [894..895]
 r262: [892..893]
 r263: [888..889]
 r264: [884..887]
 r265: [884..885]
 r266: [882..883]
 r267: [880..881]
 r268: [874..875]
 r269: [868..873]
 r270: [870..871]
 r271: [868..869]
 r272: [864..867]
 r273: [864..865]
 r274: [862..863]
 r275: [860..861]
 r276: [854..855]
 r277: [850..853]
 r278: [850..851]
 r279: [848..849]
 r280: [846..847]
 r281: [844..845]
 r282: [812..813]
 r283: [808..811]
 r284: [808..809]
 r285: [806..807]
 r286: [804..805]
 r287: [792..803]
 r288: [800..801]
 r289: [796..799]
 r290: [796..797]
 r291: [794..795]
 r292: [790..793]
 r293: [790..791]
 r294: [838..839]
 r295: [834..837]
 r296: [834..835]
 r297: [832..833]
 r298: [830..831]
 r299: [818..829]
 r300: [826..827]
 r301: [822..825]
 r302: [822..823]
 r303: [820..821]
 r304: [816..819]
 r305: [816..817]
 r306: [786..787]
 r307: [782..785]
 r308: [782..783]
 r309: [780..781]
 r310: [778..779]
 r311: [762..763]
 r312: [758..761]
 r313: [758..759]
 r314: [756..757]
 r315: [754..755]
 r316: [752..753]
 r317: [748..749]
 r318: [744..747]
 r319: [744..745]
 r320: [742..743]
 r321: [740..741]
 r322: [734..735]
 r323: [730..733]
 r324: [730..731]
 r325: [728..729]
 r326: [726..727]
 r327: [720..721]
 r328: [716..719]
 r329: [716..717]
 r330: [714..715]
 r331: [712..713]
 r332: [708..711]
 r333: [708..709]
 r334: [702..703]
 r335: [696..701]
 r336: [698..699]
 r337: [696..697]
 r338: [692..695]
 r339: [692..693]
 r340: [690..691]
 r341: [688..689]
 r342: [682..683]
 r343: [678..681]
 r344: [678..679]
 r345: [676..677]
 r346: [674..675]
 r347: [656..657]
 r348: [652..655]
 r349: [652..653]
 r350: [650..651]
 r351: [648..649]
 r352: [640..647]
 r353: [644..645]
 r354: [642..643]
 r355: [640..641]
 r356: [636..639]
 r357: [636..637]
 r358: [630..631]
 r359: [624..629]
 r360: [626..627]
 r361: [624..625]
 r362: [620..623]
 r363: [620..621]
 r364: [618..619]
 r365: [616..617]
 r366: [590..615]
 r367: [612..613]
 r368: [606..611]
 r369: [608..609]
 r370: [606..607]
 r371: [602..605]
 r372: [602..603]
 r373: [600..601]
 r374: [598..599]
 r375: [596..597]
 r376: [594..595]
 r377: [592..593]
 r378: [590..591]
 r379: [588..589]
 r381: [582..583]
 r382: [578..581]
 r383: [572..573]
 r384: [566..571]
 r385: [568..569]
 r386: [566..567]
 r387: [562..565]
 r388: [562..563]
 r389: [560..561]
 r390: [558..559]
 r391: [556..557]
 r392: [554..555]
 r393: [552..553]
 r394: [546..547]
 r395: [540..545]
 r396: [542..543]
 r397: [540..541]
 r398: [536..539]
 r399: [536..537]
 r400: [534..535]
 r401: [532..533]
 r402: [530..531]
 r403: [84..85]
 r404: [80..83]
 r405: [80..81]
 r406: [78..79]
 r407: [76..77]
 r408: [64..75]
 r409: [72..73]
 r410: [68..71]
 r411: [68..69]
 r412: [66..67]
 r413: [62..65]
 r414: [62..63]
 r415: [506..507]
 r416: [502..505]
 r417: [502..503]
 r418: [500..501]
 r419: [498..499]
 r420: [490..497]
 r421: [494..495]
 r422: [492..493]
 r423: [490..491]
 r424: [486..489]
 r425: [486..487]
 r426: [478..479]
 r427: [472..477]
 r428: [474..475]
 r429: [472..473]
 r430: [468..471]
 r431: [468..469]
 r432: [466..467]
 r433: [464..465]
 r434: [438..463]
 r435: [460..461]
 r436: [454..459]
 r437: [456..457]
 r438: [454..455]
 r439: [450..453]
 r440: [450..451]
 r441: [448..449]
 r442: [446..447]
 r443: [444..445]
 r444: [442..443]
 r445: [440..441]
 r446: [438..439]
 r447: [436..437]
 r449: [430..431]
 r450: [426..429]
 r451: [418..419]
 r452: [412..417]
 r453: [414..415]
 r454: [412..413]
 r455: [408..411]
 r456: [408..409]
 r457: [406..407]
 r458: [404..405]
 r459: [378..403]
 r460: [400..401]
 r461: [394..399]
 r462: [396..397]
 r463: [394..395]
 r464: [390..393]
 r465: [390..391]
 r466: [388..389]
 r467: [386..387]
 r468: [384..385]
 r469: [382..383]
 r470: [380..381]
 r471: [378..379]
 r472: [376..377]
 r474: [370..371]
 r475: [366..369]
 r476: [360..361]
 r477: [354..359]
 r478: [356..357]
 r479: [354..355]
 r480: [350..353]
 r481: [350..351]
 r482: [348..349]
 r483: [346..347]
 r484: [344..345]
 r485: [342..343]
 r486: [340..341]
 r487: [320..321]
 r488: [314..319]
 r489: [316..317]
 r490: [314..315]
 r491: [310..313]
 r492: [310..311]
 r493: [308..309]
 r494: [306..307]
 r495: [304..305]
 r496: [300..301]
 r497: [294..299]
 r498: [296..297]
 r499: [294..295]
 r500: [290..293]
 r501: [290..291]
 r502: [288..289]
 r503: [286..287]
 r504: [284..285]
 r505: [280..281]
 r506: [276..279]
 r507: [276..277]
 r508: [274..275]
 r509: [272..273]
 r510: [264..271]
 r511: [268..269]
 r512: [266..267]
 r513: [264..265]
 r514: [260..263]
 r515: [260..261]
 r516: [254..255]
 r517: [248..253]
 r518: [250..251]
 r519: [248..249]
 r520: [244..247]
 r521: [244..245]
 r522: [242..243]
 r523: [240..241]
 r524: [214..239]
 r525: [236..237]
 r526: [230..235]
 r527: [232..233]
 r528: [230..231]
 r529: [226..229]
 r530: [226..227]
 r531: [224..225]
 r532: [222..223]
 r533: [220..221]
 r534: [218..219]
 r535: [216..217]
 r536: [214..215]
 r537: [212..213]
 r539: [206..207]
 r540: [202..205]
 r541: [196..197]
 r542: [190..195]
 r543: [192..193]
 r544: [190..191]
 r545: [186..189]
 r546: [186..187]
 r547: [184..185]
 r548: [182..183]
 r549: [180..181]
 r550: [178..179]
 r551: [176..177]
 r552: [168..169]
 r553: [162..167]
 r554: [164..165]
 r555: [162..163]
 r556: [158..161]
 r557: [158..159]
 r558: [156..157]
 r559: [154..155]
 r560: [152..153]
 r561: [144..145]
 r562: [138..143]
 r563: [140..141]
 r564: [138..139]
 r565: [134..137]
 r566: [134..135]
 r567: [132..133]
 r568: [130..131]
 r569: [128..129]
 r570: [110..111]
 r571: [106..109]
 r572: [106..107]
 r573: [104..105]
 r574: [102..103]
 r575: [90..101]
 r576: [98..99]
 r577: [94..97]
 r578: [94..95]
 r579: [92..93]
 r580: [88..91]
 r581: [88..89]
 r582: [30..31]
 r583: [26..29]
 r584: [26..27]
 r585: [24..25]
 r586: [22..23]
 r587: [10..21]
 r588: [18..19]
 r589: [14..17]
 r590: [14..15]
 r591: [12..13]
 r592: [8..11]
 r593: [8..9]
 r594: [56..57]
 r595: [52..55]
 r596: [52..53]
 r597: [50..51]
 r598: [48..49]
 r599: [36..47]
 r600: [44..45]
 r601: [40..43]
 r602: [40..41]
 r603: [38..39]
 r604: [34..37]
 r605: [34..35]
 r606: [1137..1148]
 r607: [1357..1358]
 r608: [1299..1358]
 r609: [1299..1300]
 r610: [1303..1304]
 r611: [1297..1298]
 r612: [920..1298]
 r613: [920..921]
 r614: [924..925]
 r615: [959..1168]
 r616: [959..960]
 r617: [918..919]
 r618: [770..919]
 r619: [770..771]
 r620: [774..775]
 r621: [766..767]
 r622: [0..767]
 r623: [0..1]
 r624: [4..5]
 r625: [660..661]
 r626: [520..661]
 r627: [520..521]
 r628: [510..511]
 r629: [328..329]
 r630: [324..325]
 r631: [120..121]
 r632: [1301..1302]
 r633: [1305..1306]
 r634: [1355..1356]
 r635: [1351..1352]
 r636: [1345..1346]
 r637: [1343..1344]
 r638: [1339..1340]
 r639: [1333..1334]
 r640: [1331..1332]
 r641: [1327..1328]
 r642: [1321..1322]
 r643: [1319..1320]
 r644: [1315..1316]
 r645: [1307..1308]
 r646: [922..923]
 r647: [926..927]
 r648: [1295..1296]
 r649: [1291..1292]
 r650: [1285..1286]
 r651: [1283..1284]
 r652: [1281..1282]
 r653: [1277..1278]
 r654: [1271..1272]
 r655: [1269..1270]
 r656: [1267..1268]
 r657: [1263..1264]
 r658: [1257..1258]
 r659: [1255..1256]
 r660: [1251..1252]
 r661: [1249..1250]
 r662: [1239..1240]
 r663: [1235..1236]
 r664: [1229..1230]
 r665: [1223..1224]
 r666: [1219..1220]
 r667: [1213..1214]
 r668: [1211..1212]
 r669: [1209..1210]
 r670: [1205..1206]
 r671: [1199..1200]
 r672: [1193..1194]
 r673: [1189..1190]
 r674: [1183..1184]
 r675: [1181..1182]
 r676: [1179..1180]
 r677: [1175..1176]
 r678: [1169..1170]
 r679: [1169..1170]
 r680: [961..962]
 r681: [1167..1168]
 r682: [1163..1164]
 r683: [1157..1158]
 r684: [1151..1152]
 r685: [1149..1150]
 r686: [1145..1146]
 r687: [1147..1148]
 r688: [1143..1144]
 r689: [1135..1136]
 r690: [1131..1132]
 r691: [1125..1126]
 r692: [1119..1120]
 r693: [1117..1118]
 r694: [1115..1116]
 r695: [1111..1112]
 r696: [1105..1106]
 r697: [1103..1104]
 r698: [1099..1100]
 r699: [1095..1096]
 r700: [1091..1092]
 r701: [1089..1090]
 r702: [1087..1088]
 r703: [1085..1088]
 r704: [1083..1084]
 r705: [1081..1082]
 r706: [1079..1080]
 r707: [1079..1080]
 r708: [1077..1078]
 r709: [1073..1074]
 r710: [1065..1066]
 r711: [1063..1064]
 r712: [1063..1064]
 r713: [1059..1060]
 r714: [1051..1052]
 r715: [1053..1054]
 r716: [1047..1048]
 r717: [1049..1050]
 r718: [1045..1046]
 r719: [1043..1044]
 r720: [1039..1040]
 r721: [1033..1034]
 r722: [1029..1030]
 r723: [1025..1026]
 r724: [1019..1020]
 r725: [1019..1020]
 r726: [1017..1018]
 r727: [1015..1016]
 r728: [1011..1012]
 r729: [1005..1006]
 r730: [1003..1004]
 r731: [1001..1002]
 r732: [997..998]
 r733: [991..992]
 r734: [991..992]
 r735: [989..990]
 r736: [987..988]
 r737: [983..984]
 r738: [977..978]
 r739: [973..974]
 r740: [969..970]
 r741: [963..964]
 r742: [963..964]
 r743: [957..958]
 r744: [953..954]
 r745: [947..948]
 r746: [945..946]
 r747: [941..942]
 r748: [935..936]
 r749: [929..930]
 r750: [1245..1246]
 r751: [1241..1242]
 r752: [1243..1244]
 r753: [1243..1244]
 r754: [772..773]
 r755: [776..777]
 r756: [916..917]
 r757: [912..913]
 r758: [906..907]
 r759: [904..905]
 r760: [900..901]
 r761: [894..895]
 r762: [892..893]
 r763: [890..891]
 r764: [886..887]
 r765: [880..881]
 r766: [878..879]
 r767: [876..877]
 r768: [872..873]
 r769: [866..867]
 r770: [860..861]
 r771: [858..859]
 r772: [856..857]
 r773: [852..853]
 r774: [846..847]
 r775: [842..843]
 r776: [814..815]
 r777: [810..811]
 r778: [804..805]
 r779: [802..803]
 r780: [798..799]
 r781: [790..791]
 r782: [840..841]
 r783: [836..837]
 r784: [830..831]
 r785: [828..829]
 r786: [824..825]
 r787: [816..817]
 r788: [788..789]
 r789: [784..785]
 r790: [778..779]
 r791: [768..769]
 r792: [768..769]
 r793: [768..769]
 r794: [2..3]
 r795: [6..7]
 r796: [764..765]
 r797: [760..761]
 r798: [754..755]
 r799: [750..751]
 r800: [746..747]
 r801: [740..741]
 r802: [738..739]
 r803: [736..737]
 r804: [732..733]
 r805: [726..727]
 r806: [724..725]
 r807: [722..723]
 r808: [718..719]
 r809: [712..713]
 r810: [710..711]
 r811: [706..707]
 r812: [704..705]
 r813: [700..701]
 r814: [694..695]
 r815: [688..689]
 r816: [686..687]
 r817: [684..685]
 r818: [680..681]
 r819: [674..675]
 r820: [672..673]
 r821: [670..671]
 r822: [668..669]
 r823: [666..667]
 r824: [664..665]
 r825: [662..663]
 r826: [522..523]
 r827: [658..659]
 r828: [654..655]
 r829: [648..649]
 r830: [646..647]
 r831: [642..643]
 r832: [638..639]
 r833: [634..635]
 r834: [632..633]
 r835: [628..629]
 r836: [622..623]
 r837: [616..617]
 r838: [614..615]
 r839: [610..611]
 r840: [604..605]
 r841: [598..599]
 r842: [596..597]
 r843: [594..595]
 r844: [586..589]
 r845: [584..585]
 r846: [576..577]
 r847: [574..575]
 r848: [570..571]
 r849: [564..565]
 r850: [558..559]
 r851: [556..557]
 r852: [550..551]
 r853: [552..553]
 r854: [548..549]
 r855: [544..545]
 r856: [538..539]
 r857: [532..533]
 r858: [526..527]
 r859: [528..529]
 r860: [524..525]
 r861: [518..519]
 r862: [86..87]
 r863: [82..83]
 r864: [76..77]
 r865: [74..75]
 r866: [70..71]
 r867: [62..63]
 r868: [516..517]
 r869: [512..513]
 r870: [514..515]
 r871: [514..515]
 r872: [330..331]
 r873: [508..509]
 r874: [504..505]
 r875: [498..499]
 r876: [496..497]
 r877: [492..493]
 r878: [488..489]
 r879: [484..485]
 r880: [482..483]
 r881: [480..481]
 r882: [476..477]
 r883: [470..471]
 r884: [464..465]
 r885: [462..463]
 r886: [458..459]
 r887: [452..453]
 r888: [446..447]
 r889: [444..445]
 r890: [442..443]
 r891: [434..437]
 r892: [432..433]
 r893: [424..425]
 r894: [422..423]
 r895: [420..421]
 r896: [416..417]
 r897: [410..411]
 r898: [404..405]
 r899: [402..403]
 r900: [398..399]
 r901: [392..393]
 r902: [386..387]
 r903: [384..385]
 r904: [382..383]
 r905: [374..377]
 r906: [372..373]
 r907: [364..365]
 r908: [362..363]
 r909: [358..359]
 r910: [352..353]
 r911: [346..347]
 r912: [344..345]
 r913: [338..339]
 r914: [340..341]
 r915: [334..335]
 r916: [336..337]
 r917: [332..333]
 r918: [326..327]
 r919: [122..123]
 r920: [322..323]
 r921: [318..319]
 r922: [312..313]
 r923: [306..307]
 r924: [304..305]
 r925: [302..303]
 r926: [298..299]
 r927: [292..293]
 r928: [286..287]
 r929: [282..283]
 r930: [278..279]
 r931: [272..273]
 r932: [270..271]
 r933: [266..267]
 r934: [262..263]
 r935: [258..259]
 r936: [256..257]
 r937: [252..253]
 r938: [246..247]
 r939: [240..241]
 r940: [238..239]
 r941: [234..235]
 r942: [228..229]
 r943: [222..223]
 r944: [220..221]
 r945: [218..219]
 r946: [210..213]
 r947: [208..209]
 r948: [200..201]
 r949: [198..199]
 r950: [194..195]
 r951: [188..189]
 r952: [182..183]
 r953: [180..181]
 r954: [174..175]
 r955: [176..177]
 r956: [172..173]
 r957: [170..171]
 r958: [166..167]
 r959: [160..161]
 r960: [154..155]
 r961: [148..149]
 r962: [150..151]
 r963: [146..147]
 r964: [142..143]
 r965: [136..137]
 r966: [130..131]
 r967: [128..129]
 r968: [124..125]
 r969: [126..127]
 r970: [118..119]
 r971: [116..117]
 r972: [114..115]
 r973: [112..113]
 r974: [108..109]
 r975: [102..103]
 r976: [100..101]
 r977: [96..97]
 r978: [88..89]
 r979: [60..61]
 r980: [32..33]
 r981: [28..29]
 r982: [22..23]
 r983: [20..21]
 r984: [16..17]
 r985: [8..9]
 r986: [58..59]
 r987: [54..55]
 r988: [48..49]
 r989: [46..47]
 r990: [42..43]
 r991: [34..35]
 r992: [1085..1086]
 r993: [586..587]
 r995: [434..435]
 r997: [374..375]
 r999: [210..211]
 r1005: [202..203]
 r1006: [366..367]
 r1007: [426..427]
 r1008: [578..579]
 r1009: [580..585]
 r1010: [368..373]
 r1011: [428..433]
 r1012: [204..209]

********** Assignment #2: **********

	 Assigning to 1012 (cl=SSE_REGS, orig=538, freq=2000, tfirst=1005, tfreq=2000)...
	 Assigning to 1005 (cl=SSE_REGS, orig=538, freq=2000, tfirst=1005, tfreq=2000)...
	   Assign 24 to optional reload r1005 (freq=2000)
	Hard reg 24 is preferable by r1012 with profit 1000
	 Assigning to 1010 (cl=SSE_REGS, orig=473, freq=2000, tfirst=1006, tfreq=2000)...
	 Assigning to 1006 (cl=SSE_REGS, orig=473, freq=2000, tfirst=1006, tfreq=2000)...
	   Assign 25 to optional reload r1006 (freq=2000)
	Hard reg 25 is preferable by r1010 with profit 1000
	 Assigning to 1011 (cl=SSE_REGS, orig=448, freq=2000, tfirst=1007, tfreq=2000)...
	 Assigning to 1007 (cl=SSE_REGS, orig=448, freq=2000, tfirst=1007, tfreq=2000)...
	   Assign 26 to optional reload r1007 (freq=2000)
	Hard reg 26 is preferable by r1011 with profit 1000
	 Assigning to 1009 (cl=SSE_REGS, orig=380, freq=2000, tfirst=1008, tfreq=2000)...
	 Assigning to 1008 (cl=SSE_REGS, orig=380, freq=2000, tfirst=1008, tfreq=2000)...
	   Assign 27 to optional reload r1008 (freq=2000)
	Hard reg 27 is preferable by r1009 with profit 1000
  Reassigning non-reload pseudos

********** Undoing inheritance #2: **********

Inherit 0 out of 4 (0.00%)
   Insn after restoring regs:
 1531: r1008:SF=r380:SF
      REG_DEAD r380:SF
   Insn after restoring regs:
 1513: r380:SF=r993:SF
      REG_DEAD r993:SF
   Insn after restoring regs:
 1530: r1007:SF=r448:SF
      REG_DEAD r448:SF
   Insn after restoring regs:
 1516: r448:SF=r995:SF
      REG_DEAD r995:SF
   Insn after restoring regs:
 1529: r1006:SF=r473:SF
      REG_DEAD r473:SF
   Insn after restoring regs:
 1519: r473:SF=r997:SF
      REG_DEAD r997:SF
   Insn after restoring regs:
 1528: r1005:SF=r538:SF
      REG_DEAD r538:SF
   Insn after restoring regs:
 1522: r538:SF=r999:SF
      REG_DEAD r999:SF
Keep optional reload reg 994
Keep optional reload reg 996
Keep optional reload reg 998
Keep optional reload reg 1000
Remove optional reload reg 1005
  Restoring original insn:
 1170: r948:SF=r540:SF*r538:SF
      REG_DEAD r538:SF
      REG_DEAD r540:SF
  Deleting move 1528
 1528: r1005:SF=r538:SF
      REG_DEAD r538:SF
deleting insn with uid = 1528.
Remove optional reload reg 1006
  Restoring original insn:
 1005: r907:SF=r475:SF*r473:SF
      REG_DEAD r473:SF
      REG_DEAD r475:SF
  Deleting move 1529
 1529: r1006:SF=r473:SF
      REG_DEAD r473:SF
deleting insn with uid = 1529.
Remove optional reload reg 1007
  Restoring original insn:
  957: r893:SF=r450:SF*r448:SF
      REG_DEAD r448:SF
      REG_DEAD r450:SF
  Deleting move 1530
 1530: r1007:SF=r448:SF
      REG_DEAD r448:SF
deleting insn with uid = 1530.
Remove optional reload reg 1008
  Restoring original insn:
  797: r846:SF=r382:SF*r380:SF
      REG_DEAD r380:SF
      REG_DEAD r382:SF
  Deleting move 1531
 1531: r1008:SF=r380:SF
      REG_DEAD r380:SF
deleting insn with uid = 1531.

********** Local #3: **********

	   Spilling non-eliminable hard regs: 6
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1170:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 1005:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 957:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
            2 Non pseudo reload: reject++
          alt=1,overall=1,losers=0,rld_nregs=0
            alt=1,overall=6,losers=1 -- refuse
	 Choosing alt 1 in insn 797:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
	   Spilling non-eliminable hard regs: 6

********** Pseudo live ranges #3: **********

  BB 93
   Insn 1422: point = 0, n_alt = -1
  BB 102
   Insn 1491: point = 0, n_alt = -1
  BB 49
   Insn 640: point = 0, n_alt = -1
   Insn 639: point = 0, n_alt = 0
   Insn 638: point = 1, n_alt = 0
   Insn 637: point = 3, n_alt = 0
   Insn 636: point = 4, n_alt = 0
  BB 92
   Insn 1461: point = 5, n_alt = -1
   Insn 1355: point = 5, n_alt = 1
  BB 103
   Insn 1494: point = 6, n_alt = -1
  BB 51
   Insn 648: point = 7, n_alt = -1
   Insn 647: point = 7, n_alt = 0
   Insn 646: point = 8, n_alt = 0
   Insn 645: point = 10, n_alt = 0
   Insn 644: point = 11, n_alt = 0
  BB 91
   Insn 1459: point = 12, n_alt = -1
   Insn 1349: point = 12, n_alt = 1
  BB 89
   Insn 1457: point = 13, n_alt = -1
   Insn 1321: point = 13, n_alt = 1
   Insn 1320: point = 14, n_alt = 3
   Insn 1319: point = 15, n_alt = 3
   Insn 1318: point = 17, n_alt = 0
   Insn 1317: point = 19, n_alt = 0
   Insn 1316: point = 21, n_alt = 1
   Insn 1315: point = 23, n_alt = 0
   Insn 1314: point = 24, n_alt = 0
   Insn 1313: point = 26, n_alt = 1
   Insn 1312: point = 28, n_alt = 0
   Insn 1311: point = 29, n_alt = 0
   Insn 1310: point = 31, n_alt = 3
   Insn 1309: point = 32, n_alt = 3
   Insn 1308: point = 34, n_alt = 0
   Insn 1307: point = 36, n_alt = 0
   Insn 1306: point = 38, n_alt = 0
   Insn 1305: point = 39, n_alt = 0
   Insn 1304: point = 41, n_alt = 0
   Insn 1303: point = 43, n_alt = 0
  BB 90
   Insn 1344: point = 45, n_alt = 1
   Insn 1343: point = 46, n_alt = 3
   Insn 1342: point = 47, n_alt = 3
   Insn 1341: point = 49, n_alt = 0
   Insn 1340: point = 51, n_alt = 0
   Insn 1339: point = 53, n_alt = 1
   Insn 1338: point = 55, n_alt = 0
   Insn 1337: point = 56, n_alt = 0
   Insn 1336: point = 58, n_alt = 1
   Insn 1335: point = 60, n_alt = 0
   Insn 1334: point = 61, n_alt = 0
   Insn 1333: point = 63, n_alt = 3
   Insn 1332: point = 64, n_alt = 3
   Insn 1331: point = 66, n_alt = 0
   Insn 1330: point = 68, n_alt = 0
   Insn 1329: point = 70, n_alt = 0
   Insn 1328: point = 71, n_alt = 0
   Insn 1327: point = 73, n_alt = 0
   Insn 1326: point = 75, n_alt = 0
  BB 88
   Insn 1298: point = 77, n_alt = -1
   Insn 1297: point = 77, n_alt = 1
   Insn 1296: point = 78, n_alt = 7
  BB 59
   Insn 1448: point = 80, n_alt = -1
   Insn 875: point = 80, n_alt = 1
   Insn 874: point = 81, n_alt = 3
   Insn 873: point = 82, n_alt = 3
   Insn 872: point = 84, n_alt = 0
   Insn 871: point = 86, n_alt = 0
   Insn 870: point = 88, n_alt = 1
   Insn 869: point = 90, n_alt = 0
   Insn 868: point = 91, n_alt = 0
   Insn 867: point = 93, n_alt = 1
   Insn 866: point = 95, n_alt = 0
   Insn 865: point = 96, n_alt = 0
   Insn 864: point = 98, n_alt = 3
   Insn 863: point = 99, n_alt = 3
   Insn 862: point = 101, n_alt = 0
   Insn 861: point = 103, n_alt = 0
   Insn 860: point = 105, n_alt = 0
   Insn 859: point = 106, n_alt = 0
   Insn 858: point = 108, n_alt = 0
   Insn 857: point = 110, n_alt = 0
  BB 87
   Insn 1454: point = 112, n_alt = -1
   Insn 1291: point = 112, n_alt = 1
   Insn 1290: point = 113, n_alt = 3
   Insn 1289: point = 114, n_alt = 3
   Insn 1288: point = 116, n_alt = 0
   Insn 1287: point = 118, n_alt = 0
   Insn 1286: point = 120, n_alt = 1
   Insn 1285: point = 122, n_alt = 0
   Insn 1284: point = 123, n_alt = 0
   Insn 1283: point = 125, n_alt = 1
   Insn 1282: point = 127, n_alt = 0
   Insn 1281: point = 128, n_alt = 0
   Insn 1280: point = 130, n_alt = 3
   Insn 1279: point = 131, n_alt = 3
   Insn 1278: point = 133, n_alt = 0
   Insn 1277: point = 135, n_alt = 0
   Insn 1276: point = 137, n_alt = 0
   Insn 1275: point = 138, n_alt = 0
   Insn 1274: point = 140, n_alt = 0
   Insn 1273: point = 142, n_alt = 0
  BB 86
   Insn 1267: point = 144, n_alt = -1
   Insn 1266: point = 144, n_alt = 1
   Insn 1265: point = 145, n_alt = 7
  BB 85
   Insn 1260: point = 147, n_alt = -1
   Insn 1259: point = 147, n_alt = 1
   Insn 1258: point = 148, n_alt = 7
  BB 84
   Insn 1256: point = 150, n_alt = -1
   Insn 1255: point = 150, n_alt = 1
   Insn 1254: point = 151, n_alt = 7
  BB 107
   Insn 1508: point = 153, n_alt = -1
  BB 68
   Insn 1052: point = 154, n_alt = -1
   Insn 1051: point = 154, n_alt = 0
   Insn 1050: point = 155, n_alt = 0
   Insn 1049: point = 157, n_alt = 0
   Insn 1048: point = 158, n_alt = 1
  BB 83
   Insn 1452: point = 159, n_alt = -1
   Insn 1248: point = 159, n_alt = 1
  BB 82
   Insn 1245: point = 160, n_alt = 8
   Insn 1244: point = 161, n_alt = 1
   Insn 1243: point = 163, n_alt = 7
  BB 81
   Insn 1238: point = 165, n_alt = -1
   Insn 1237: point = 165, n_alt = 1
   Insn 1236: point = 166, n_alt = 7
   Insn 1235: point = 167, n_alt = 7
   Insn 1234: point = 169, n_alt = 4
   Insn 1233: point = 170, n_alt = 3
   Insn 1232: point = 172, n_alt = 0
   Insn 1231: point = 174, n_alt = 0
   Insn 1230: point = 176, n_alt = 0
   Insn 1229: point = 177, n_alt = 0
   Insn 1228: point = 179, n_alt = 0
   Insn 1227: point = 181, n_alt = 0
   Insn 1226: point = 183, n_alt = 0
   Insn 1225: point = 184, n_alt = 1
   Insn 1224: point = 186, n_alt = 0
   Insn 1223: point = 188, n_alt = 0
  BB 80
   Insn 1221: point = 190, n_alt = -1
   Insn 1220: point = 190, n_alt = 1
  BB 79
   Insn 1217: point = 191, n_alt = 8
   Insn 1216: point = 192, n_alt = 1
   Insn 1215: point = 194, n_alt = 7
  BB 78
   Insn 1210: point = 196, n_alt = -1
   Insn 1209: point = 196, n_alt = 1
   Insn 1208: point = 197, n_alt = 7
   Insn 1207: point = 199, n_alt = 4
   Insn 1206: point = 200, n_alt = 3
   Insn 1205: point = 202, n_alt = 0
   Insn 1204: point = 204, n_alt = 0
   Insn 1203: point = 206, n_alt = 0
   Insn 1202: point = 207, n_alt = 0
   Insn 1201: point = 209, n_alt = 0
   Insn 1200: point = 211, n_alt = 0
   Insn 1199: point = 213, n_alt = 0
   Insn 1198: point = 214, n_alt = 1
   Insn 1197: point = 216, n_alt = 0
   Insn 1196: point = 218, n_alt = 0
  BB 77
   Insn 1194: point = 220, n_alt = -1
   Insn 1193: point = 220, n_alt = 1
   Insn 1192: point = 220, n_alt = 8
   Insn 1191: point = 221, n_alt = 7
   Insn 1190: point = 222, n_alt = 8
   Insn 1189: point = 223, n_alt = 1
   Insn 1188: point = 225, n_alt = 7
   Insn 1187: point = 226, n_alt = -2
   Insn 1186: point = 228, n_alt = 2
   Insn 1185: point = 230, n_alt = 7
   Insn 1184: point = 231, n_alt = 7
   Insn 1183: point = 233, n_alt = 4
   Insn 1182: point = 234, n_alt = 3
   Insn 1181: point = 236, n_alt = 0
   Insn 1180: point = 238, n_alt = 0
   Insn 1179: point = 240, n_alt = 0
   Insn 1178: point = 241, n_alt = 0
   Insn 1177: point = 243, n_alt = 0
   Insn 1176: point = 245, n_alt = 0
   Insn 1175: point = 247, n_alt = 0
   Insn 1174: point = 248, n_alt = 1
   Insn 1173: point = 250, n_alt = 0
   Insn 1172: point = 252, n_alt = 0
   Insn 1171: point = 253, n_alt = 8
   Insn 1170: point = 254, n_alt = 1
   Insn 1169: point = 256, n_alt = -2
   Insn 1168: point = 257, n_alt = 0
   Insn 1167: point = 257, n_alt = -2
   Insn 1166: point = 258, n_alt = 2
   Insn 1165: point = 260, n_alt = 7
   Insn 1522: point = 261, n_alt = 8
   Insn 1164: point = 263, n_alt = 1
   Insn 1521: point = 264, n_alt = -2
   Insn 1163: point = 266, n_alt = 7
   Insn 1162: point = 267, n_alt = 1
   Insn 1161: point = 269, n_alt = -2
   Insn 1160: point = 271, n_alt = 1
   Insn 1159: point = 273, n_alt = 7
   Insn 1158: point = 274, n_alt = 1
   Insn 1157: point = 276, n_alt = 7
   Insn 1156: point = 277, n_alt = 7
   Insn 1155: point = 279, n_alt = 3
   Insn 1154: point = 280, n_alt = 3
   Insn 1153: point = 282, n_alt = 0
   Insn 1152: point = 284, n_alt = 0
   Insn 1151: point = 286, n_alt = 0
   Insn 1150: point = 287, n_alt = 0
   Insn 1149: point = 289, n_alt = 0
   Insn 1148: point = 291, n_alt = 0
   Insn 1147: point = 293, n_alt = 0
   Insn 1146: point = 294, n_alt = 1
   Insn 1145: point = 296, n_alt = 0
   Insn 1144: point = 298, n_alt = 0
   Insn 1143: point = 299, n_alt = 7
   Insn 1142: point = 301, n_alt = 3
   Insn 1141: point = 302, n_alt = 3
   Insn 1140: point = 304, n_alt = 0
   Insn 1139: point = 306, n_alt = 0
   Insn 1138: point = 308, n_alt = 0
   Insn 1137: point = 309, n_alt = 0
   Insn 1136: point = 311, n_alt = 0
   Insn 1135: point = 313, n_alt = 0
   Insn 1134: point = 315, n_alt = 0
   Insn 1133: point = 316, n_alt = 1
   Insn 1132: point = 318, n_alt = 0
   Insn 1131: point = 320, n_alt = 0
   Insn 1130: point = 321, n_alt = 8
   Insn 1129: point = 322, n_alt = 1
   Insn 1128: point = 324, n_alt = 7
   Insn 1127: point = 326, n_alt = 3
   Insn 1126: point = 327, n_alt = 1
   Insn 1125: point = 329, n_alt = 7
   Insn 1124: point = 331, n_alt = 3
   Insn 1123: point = 332, n_alt = 3
   Insn 1122: point = 334, n_alt = 0
   Insn 1121: point = 336, n_alt = 0
   Insn 1120: point = 337, n_alt = 7
   Insn 1119: point = 339, n_alt = 4
   Insn 1118: point = 340, n_alt = 3
   Insn 1117: point = 342, n_alt = 0
   Insn 1116: point = 344, n_alt = 0
   Insn 1115: point = 346, n_alt = 0
   Insn 1114: point = 347, n_alt = 0
   Insn 1113: point = 349, n_alt = 0
   Insn 1112: point = 351, n_alt = 0
  BB 76
   Insn 1109: point = 353, n_alt = -1
   Insn 1108: point = 353, n_alt = 1
  BB 75
   Insn 1106: point = 354, n_alt = -1
   Insn 1105: point = 354, n_alt = 1
  BB 74
   Insn 1102: point = 355, n_alt = 1
  BB 73
   Insn 1097: point = 356, n_alt = -1
   Insn 1096: point = 356, n_alt = 1
   Insn 1095: point = 357, n_alt = 7
   Insn 1094: point = 359, n_alt = 3
   Insn 1093: point = 360, n_alt = 3
   Insn 1092: point = 362, n_alt = 0
   Insn 1091: point = 364, n_alt = 0
   Insn 1090: point = 366, n_alt = 0
   Insn 1089: point = 367, n_alt = 0
   Insn 1088: point = 369, n_alt = 0
   Insn 1087: point = 371, n_alt = 0
   Insn 1086: point = 373, n_alt = 0
   Insn 1085: point = 374, n_alt = 1
   Insn 1084: point = 376, n_alt = 0
   Insn 1083: point = 378, n_alt = 0
  BB 72
   Insn 1081: point = 380, n_alt = -1
   Insn 1080: point = 380, n_alt = 1
  BB 71
   Insn 1077: point = 381, n_alt = 1
  BB 70
   Insn 1072: point = 382, n_alt = -1
   Insn 1071: point = 382, n_alt = 1
   Insn 1070: point = 383, n_alt = 7
   Insn 1069: point = 384, n_alt = 7
   Insn 1068: point = 386, n_alt = 3
   Insn 1067: point = 387, n_alt = 3
   Insn 1066: point = 389, n_alt = 0
   Insn 1065: point = 391, n_alt = 0
   Insn 1064: point = 393, n_alt = 0
   Insn 1063: point = 394, n_alt = 0
   Insn 1062: point = 396, n_alt = 0
   Insn 1061: point = 398, n_alt = 0
   Insn 1060: point = 400, n_alt = 0
   Insn 1059: point = 401, n_alt = 1
   Insn 1058: point = 403, n_alt = 0
   Insn 1057: point = 405, n_alt = 0
  BB 69
   Insn 1055: point = 407, n_alt = -1
   Insn 1054: point = 407, n_alt = 1
  BB 67
   Insn 1046: point = 408, n_alt = 1
   Insn 1045: point = 409, n_alt = 0
   Insn 1044: point = 410, n_alt = 1
   Insn 1043: point = 410, n_alt = 1
   Insn 1042: point = 410, n_alt = 8
   Insn 1041: point = 411, n_alt = 7
  BB 105
   Insn 1500: point = 413, n_alt = -1
  BB 61
   Insn 893: point = 414, n_alt = -1
   Insn 892: point = 414, n_alt = 0
   Insn 891: point = 415, n_alt = 0
   Insn 890: point = 417, n_alt = 0
   Insn 889: point = 418, n_alt = 1
  BB 66
   Insn 1450: point = 419, n_alt = -1
   Insn 1035: point = 419, n_alt = 1
   Insn 1034: point = 419, n_alt = 8
   Insn 1033: point = 420, n_alt = 7
  BB 65
   Insn 1501: point = 422, n_alt = -1
   Insn 1030: point = 422, n_alt = 8
   Insn 1029: point = 423, n_alt = 1
   Insn 1028: point = 425, n_alt = 7
   Insn 1027: point = 426, n_alt = 8
   Insn 1026: point = 427, n_alt = 1
   Insn 1025: point = 429, n_alt = 7
   Insn 1024: point = 430, n_alt = -2
   Insn 1023: point = 432, n_alt = 2
   Insn 1022: point = 434, n_alt = 7
   Insn 1021: point = 435, n_alt = 7
   Insn 1020: point = 437, n_alt = 4
   Insn 1019: point = 438, n_alt = 3
   Insn 1018: point = 440, n_alt = 0
   Insn 1017: point = 442, n_alt = 0
   Insn 1016: point = 444, n_alt = 0
   Insn 1015: point = 445, n_alt = 0
   Insn 1014: point = 447, n_alt = 0
   Insn 1013: point = 449, n_alt = 0
   Insn 1012: point = 451, n_alt = 0
   Insn 1011: point = 452, n_alt = 1
   Insn 1010: point = 454, n_alt = 0
   Insn 1009: point = 456, n_alt = 0
  BB 64
   Insn 1006: point = 458, n_alt = 8
   Insn 1005: point = 459, n_alt = 1
   Insn 1004: point = 461, n_alt = -2
   Insn 1003: point = 462, n_alt = 0
   Insn 1002: point = 462, n_alt = -2
   Insn 1001: point = 463, n_alt = 2
   Insn 1000: point = 465, n_alt = 7
   Insn 1519: point = 466, n_alt = 8
   Insn 999: point = 468, n_alt = 1
   Insn 1518: point = 469, n_alt = -2
   Insn 998: point = 471, n_alt = 7
   Insn 997: point = 472, n_alt = 1
   Insn 996: point = 474, n_alt = -2
   Insn 995: point = 476, n_alt = 1
   Insn 994: point = 478, n_alt = 7
   Insn 993: point = 479, n_alt = 1
   Insn 992: point = 481, n_alt = 7
   Insn 991: point = 482, n_alt = 7
   Insn 990: point = 484, n_alt = 3
   Insn 989: point = 485, n_alt = 3
   Insn 988: point = 487, n_alt = 0
   Insn 987: point = 489, n_alt = 0
   Insn 986: point = 491, n_alt = 0
   Insn 985: point = 492, n_alt = 0
   Insn 984: point = 494, n_alt = 0
   Insn 983: point = 496, n_alt = 0
   Insn 982: point = 498, n_alt = 0
   Insn 981: point = 499, n_alt = 1
   Insn 980: point = 501, n_alt = 0
   Insn 979: point = 503, n_alt = 0
   Insn 978: point = 504, n_alt = 7
   Insn 977: point = 506, n_alt = 3
   Insn 976: point = 507, n_alt = 3
   Insn 975: point = 509, n_alt = 0
   Insn 974: point = 511, n_alt = 0
   Insn 973: point = 513, n_alt = 0
   Insn 972: point = 514, n_alt = 0
   Insn 971: point = 516, n_alt = 0
   Insn 970: point = 518, n_alt = 0
   Insn 969: point = 520, n_alt = 0
   Insn 968: point = 521, n_alt = 1
   Insn 967: point = 523, n_alt = 0
   Insn 966: point = 525, n_alt = 0
  BB 63
   Insn 961: point = 527, n_alt = -1
   Insn 960: point = 527, n_alt = 1
   Insn 959: point = 528, n_alt = 7
   Insn 958: point = 529, n_alt = 8
   Insn 957: point = 530, n_alt = 1
   Insn 956: point = 532, n_alt = -2
   Insn 955: point = 533, n_alt = 0
   Insn 954: point = 533, n_alt = -2
   Insn 953: point = 534, n_alt = 2
   Insn 952: point = 536, n_alt = 7
   Insn 1516: point = 537, n_alt = 8
   Insn 951: point = 539, n_alt = 1
   Insn 1515: point = 540, n_alt = -2
   Insn 950: point = 542, n_alt = 7
   Insn 949: point = 543, n_alt = 1
   Insn 948: point = 545, n_alt = -2
   Insn 947: point = 547, n_alt = 1
   Insn 946: point = 549, n_alt = 7
   Insn 945: point = 550, n_alt = 1
   Insn 944: point = 552, n_alt = 7
   Insn 943: point = 553, n_alt = 7
   Insn 942: point = 555, n_alt = 3
   Insn 941: point = 556, n_alt = 3
   Insn 940: point = 558, n_alt = 0
   Insn 939: point = 560, n_alt = 0
   Insn 938: point = 562, n_alt = 0
   Insn 937: point = 563, n_alt = 0
   Insn 936: point = 565, n_alt = 0
   Insn 935: point = 567, n_alt = 0
   Insn 934: point = 569, n_alt = 0
   Insn 933: point = 570, n_alt = 1
   Insn 932: point = 572, n_alt = 0
   Insn 931: point = 574, n_alt = 0
   Insn 930: point = 575, n_alt = 7
   Insn 929: point = 577, n_alt = 3
   Insn 928: point = 578, n_alt = 3
   Insn 927: point = 580, n_alt = 0
   Insn 926: point = 582, n_alt = 0
   Insn 925: point = 584, n_alt = 0
   Insn 924: point = 585, n_alt = 0
   Insn 923: point = 587, n_alt = 0
   Insn 922: point = 589, n_alt = 0
   Insn 921: point = 591, n_alt = 0
   Insn 920: point = 592, n_alt = 1
   Insn 919: point = 594, n_alt = 0
   Insn 918: point = 596, n_alt = 0
  BB 106
   Insn 1505: point = 598, n_alt = -1
  BB 62
   Insn 916: point = 599, n_alt = -1
   Insn 915: point = 599, n_alt = 1
   Insn 914: point = 600, n_alt = 7
   Insn 913: point = 601, n_alt = 8
   Insn 912: point = 602, n_alt = 1
   Insn 911: point = 604, n_alt = 7
   Insn 910: point = 606, n_alt = 3
   Insn 909: point = 607, n_alt = 1
   Insn 908: point = 609, n_alt = 7
   Insn 907: point = 611, n_alt = 3
   Insn 906: point = 612, n_alt = 3
   Insn 905: point = 614, n_alt = 0
   Insn 904: point = 616, n_alt = 0
   Insn 903: point = 617, n_alt = 7
   Insn 902: point = 619, n_alt = 4
   Insn 901: point = 620, n_alt = 3
   Insn 900: point = 622, n_alt = 0
   Insn 899: point = 624, n_alt = 0
   Insn 898: point = 626, n_alt = 0
   Insn 897: point = 627, n_alt = 0
   Insn 896: point = 629, n_alt = 0
   Insn 895: point = 631, n_alt = 0
  BB 60
   Insn 887: point = 633, n_alt = 1
   Insn 886: point = 634, n_alt = 0
   Insn 885: point = 635, n_alt = 8
   Insn 884: point = 636, n_alt = 2
   Insn 883: point = 638, n_alt = 7
   Insn 882: point = 639, n_alt = 7
   Insn 881: point = 640, n_alt = 8
   Insn 880: point = 641, n_alt = 7
  BB 58
   Insn 852: point = 643, n_alt = -1
   Insn 851: point = 643, n_alt = 1
   Insn 850: point = 644, n_alt = 7
  BB 104
   Insn 1497: point = 646, n_alt = -1
  BB 54
   Insn 737: point = 647, n_alt = -1
   Insn 736: point = 647, n_alt = 0
   Insn 735: point = 648, n_alt = 0
   Insn 734: point = 650, n_alt = 0
   Insn 733: point = 651, n_alt = 0
  BB 57
   Insn 1445: point = 652, n_alt = -1
   Insn 844: point = 652, n_alt = 1
   Insn 843: point = 652, n_alt = 8
   Insn 842: point = 653, n_alt = 7
  BB 56
   Insn 839: point = 655, n_alt = 8
   Insn 838: point = 656, n_alt = 1
   Insn 837: point = 658, n_alt = 7
  BB 55
   Insn 832: point = 660, n_alt = -1
   Insn 831: point = 660, n_alt = 1
   Insn 830: point = 661, n_alt = 7
   Insn 829: point = 663, n_alt = 4
   Insn 828: point = 664, n_alt = 3
   Insn 827: point = 666, n_alt = 0
   Insn 826: point = 668, n_alt = 0
   Insn 825: point = 670, n_alt = 0
   Insn 824: point = 671, n_alt = 0
   Insn 823: point = 673, n_alt = 0
   Insn 822: point = 675, n_alt = 0
   Insn 821: point = 677, n_alt = 0
   Insn 820: point = 678, n_alt = 1
   Insn 819: point = 680, n_alt = 0
   Insn 818: point = 682, n_alt = 0
   Insn 817: point = 683, n_alt = 8
   Insn 816: point = 684, n_alt = 1
   Insn 815: point = 686, n_alt = 7
   Insn 814: point = 687, n_alt = -2
   Insn 813: point = 689, n_alt = 2
   Insn 812: point = 691, n_alt = 7
   Insn 811: point = 692, n_alt = 7
   Insn 810: point = 694, n_alt = 4
   Insn 809: point = 695, n_alt = 3
   Insn 808: point = 697, n_alt = 0
   Insn 807: point = 699, n_alt = 0
   Insn 806: point = 701, n_alt = 0
   Insn 805: point = 702, n_alt = 0
   Insn 804: point = 704, n_alt = 0
   Insn 803: point = 706, n_alt = 0
   Insn 802: point = 708, n_alt = 0
   Insn 801: point = 709, n_alt = 1
   Insn 800: point = 711, n_alt = 0
   Insn 799: point = 713, n_alt = 0
   Insn 798: point = 714, n_alt = 8
   Insn 797: point = 715, n_alt = 1
   Insn 796: point = 717, n_alt = -2
   Insn 795: point = 718, n_alt = 0
   Insn 794: point = 718, n_alt = -2
   Insn 793: point = 719, n_alt = 2
   Insn 792: point = 721, n_alt = 7
   Insn 1513: point = 722, n_alt = 8
   Insn 791: point = 724, n_alt = 1
   Insn 1512: point = 725, n_alt = -2
   Insn 790: point = 727, n_alt = 7
   Insn 789: point = 728, n_alt = 1
   Insn 788: point = 730, n_alt = -2
   Insn 787: point = 732, n_alt = 1
   Insn 786: point = 734, n_alt = 7
   Insn 785: point = 735, n_alt = 1
   Insn 784: point = 737, n_alt = 7
   Insn 783: point = 738, n_alt = 7
   Insn 782: point = 740, n_alt = 3
   Insn 781: point = 741, n_alt = 3
   Insn 780: point = 743, n_alt = 0
   Insn 779: point = 745, n_alt = 0
   Insn 778: point = 747, n_alt = 0
   Insn 777: point = 748, n_alt = 0
   Insn 776: point = 750, n_alt = 0
   Insn 775: point = 752, n_alt = 0
   Insn 774: point = 754, n_alt = 0
   Insn 773: point = 755, n_alt = 1
   Insn 772: point = 757, n_alt = 0
   Insn 771: point = 759, n_alt = 0
   Insn 770: point = 760, n_alt = 7
   Insn 769: point = 762, n_alt = 3
   Insn 768: point = 763, n_alt = 3
   Insn 767: point = 765, n_alt = 0
   Insn 766: point = 767, n_alt = 0
   Insn 765: point = 769, n_alt = 0
   Insn 764: point = 770, n_alt = 0
   Insn 763: point = 772, n_alt = 0
   Insn 762: point = 774, n_alt = 0
   Insn 761: point = 776, n_alt = 0
   Insn 760: point = 777, n_alt = 1
   Insn 759: point = 779, n_alt = 0
   Insn 758: point = 781, n_alt = 0
   Insn 757: point = 782, n_alt = 8
   Insn 756: point = 783, n_alt = 1
   Insn 755: point = 785, n_alt = 7
   Insn 754: point = 787, n_alt = 3
   Insn 753: point = 788, n_alt = 1
   Insn 752: point = 790, n_alt = 7
   Insn 751: point = 792, n_alt = 3
   Insn 750: point = 793, n_alt = 3
   Insn 749: point = 795, n_alt = 0
   Insn 748: point = 797, n_alt = 0
   Insn 747: point = 798, n_alt = 7
   Insn 746: point = 800, n_alt = 4
   Insn 745: point = 801, n_alt = 3
   Insn 744: point = 803, n_alt = 0
   Insn 743: point = 805, n_alt = 0
   Insn 742: point = 807, n_alt = 0
   Insn 741: point = 808, n_alt = 0
   Insn 740: point = 810, n_alt = 0
   Insn 739: point = 812, n_alt = 0
  BB 53
   Insn 731: point = 814, n_alt = 1
   Insn 730: point = 815, n_alt = 0
   Insn 729: point = 816, n_alt = 0
   Insn 728: point = 817, n_alt = 8
   Insn 727: point = 818, n_alt = 7
   Insn 726: point = 819, n_alt = 8
   Insn 725: point = 820, n_alt = 7
   Insn 724: point = 821, n_alt = 8
   Insn 723: point = 822, n_alt = 7
   Insn 722: point = 823, n_alt = 8
   Insn 721: point = 824, n_alt = 7
   Insn 720: point = 825, n_alt = 8
   Insn 719: point = 826, n_alt = 7
   Insn 718: point = 827, n_alt = 8
   Insn 717: point = 828, n_alt = 7
   Insn 716: point = 830, n_alt = 4
   Insn 715: point = 831, n_alt = 3
   Insn 714: point = 833, n_alt = 0
   Insn 713: point = 835, n_alt = 0
   Insn 712: point = 837, n_alt = 0
   Insn 711: point = 838, n_alt = 0
   Insn 710: point = 840, n_alt = 0
   Insn 709: point = 842, n_alt = 0
   Insn 708: point = 843, n_alt = 8
   Insn 707: point = 844, n_alt = 7
   Insn 706: point = 846, n_alt = 3
   Insn 705: point = 847, n_alt = 3
   Insn 704: point = 849, n_alt = 0
   Insn 703: point = 851, n_alt = 0
   Insn 702: point = 853, n_alt = 0
   Insn 701: point = 854, n_alt = 0
   Insn 700: point = 856, n_alt = 0
   Insn 699: point = 858, n_alt = 0
   Insn 698: point = 860, n_alt = 0
   Insn 697: point = 861, n_alt = 1
   Insn 696: point = 863, n_alt = 0
   Insn 695: point = 865, n_alt = 0
   Insn 694: point = 866, n_alt = 8
   Insn 693: point = 867, n_alt = 1
   Insn 692: point = 869, n_alt = 7
   Insn 691: point = 871, n_alt = 3
   Insn 690: point = 872, n_alt = 7
   Insn 689: point = 874, n_alt = 3
   Insn 688: point = 875, n_alt = 3
   Insn 687: point = 877, n_alt = 0
   Insn 686: point = 879, n_alt = 0
   Insn 685: point = 881, n_alt = 0
   Insn 684: point = 882, n_alt = 0
   Insn 683: point = 884, n_alt = 0
   Insn 682: point = 886, n_alt = 0
   Insn 681: point = 887, n_alt = 1
   Insn 680: point = 888, n_alt = 0
   Insn 679: point = 890, n_alt = 4
   Insn 678: point = 891, n_alt = 3
   Insn 677: point = 893, n_alt = 0
   Insn 676: point = 895, n_alt = 0
   Insn 675: point = 897, n_alt = 0
   Insn 674: point = 898, n_alt = 0
   Insn 673: point = 900, n_alt = 0
   Insn 672: point = 902, n_alt = 0
   Insn 671: point = 903, n_alt = 1
   Insn 670: point = 904, n_alt = 0
   Insn 669: point = 906, n_alt = 3
   Insn 668: point = 907, n_alt = 3
   Insn 667: point = 909, n_alt = 0
   Insn 666: point = 911, n_alt = 0
   Insn 665: point = 913, n_alt = 0
   Insn 664: point = 914, n_alt = 0
   Insn 663: point = 916, n_alt = 0
   Insn 662: point = 918, n_alt = 0
  BB 52
   Insn 660: point = 920, n_alt = -1
   Insn 659: point = 920, n_alt = 0
   Insn 658: point = 921, n_alt = 0
   Insn 657: point = 923, n_alt = 4
   Insn 656: point = 924, n_alt = 3
   Insn 655: point = 926, n_alt = 0
   Insn 654: point = 928, n_alt = 0
   Insn 653: point = 930, n_alt = 0
   Insn 652: point = 931, n_alt = 0
   Insn 651: point = 933, n_alt = 0
   Insn 650: point = 935, n_alt = 0
  BB 50
   Insn 642: point = 937, n_alt = 1
  BB 48
   Insn 634: point = 938, n_alt = 1
   Insn 633: point = 939, n_alt = 0
   Insn 632: point = 940, n_alt = 0
   Insn 631: point = 941, n_alt = 0
   Insn 630: point = 941, n_alt = 3
   Insn 629: point = 941, n_alt = -2
   Insn 628: point = 942, n_alt = -2
   Insn 627: point = 943, n_alt = 4
   Insn 626: point = 943, n_alt = -2
   Insn 625: point = 944, n_alt = 4
   Insn 624: point = 944, n_alt = 4
   Insn 623: point = 944, n_alt = 3
   Insn 622: point = 945, n_alt = 3
   Insn 621: point = 946, n_alt = 3
  BB 99
   Insn 1480: point = 947, n_alt = -1
  BB 37
   Insn 474: point = 947, n_alt = -1
   Insn 473: point = 947, n_alt = 0
   Insn 472: point = 948, n_alt = 0
   Insn 471: point = 950, n_alt = 0
   Insn 470: point = 951, n_alt = 0
  BB 47
   Insn 1443: point = 952, n_alt = -1
   Insn 615: point = 952, n_alt = 1
  BB 100
   Insn 1483: point = 953, n_alt = -1
  BB 39
   Insn 482: point = 954, n_alt = -1
   Insn 481: point = 954, n_alt = 0
   Insn 480: point = 955, n_alt = 0
   Insn 479: point = 957, n_alt = 0
   Insn 478: point = 958, n_alt = 0
  BB 46
   Insn 1441: point = 959, n_alt = -1
   Insn 609: point = 959, n_alt = 1
  BB 45
   Insn 1484: point = 960, n_alt = -1
   Insn 606: point = 960, n_alt = 1
   Insn 605: point = 961, n_alt = 4
   Insn 604: point = 962, n_alt = 3
   Insn 603: point = 964, n_alt = 0
   Insn 602: point = 966, n_alt = 1
   Insn 601: point = 968, n_alt = 0
   Insn 600: point = 969, n_alt = 0
   Insn 599: point = 971, n_alt = 1
   Insn 598: point = 973, n_alt = 0
  BB 43
   Insn 1437: point = 975, n_alt = -1
   Insn 570: point = 975, n_alt = 1
   Insn 569: point = 976, n_alt = 3
   Insn 568: point = 977, n_alt = 3
   Insn 567: point = 979, n_alt = 0
   Insn 566: point = 981, n_alt = 0
   Insn 565: point = 983, n_alt = 1
   Insn 564: point = 985, n_alt = 0
   Insn 563: point = 986, n_alt = 0
   Insn 562: point = 988, n_alt = 1
   Insn 561: point = 990, n_alt = 0
   Insn 560: point = 991, n_alt = 0
   Insn 559: point = 993, n_alt = 3
   Insn 558: point = 994, n_alt = 3
   Insn 557: point = 996, n_alt = 0
   Insn 556: point = 998, n_alt = 1
   Insn 555: point = 1000, n_alt = 0
   Insn 554: point = 1001, n_alt = 0
   Insn 553: point = 1003, n_alt = 1
   Insn 552: point = 1005, n_alt = 0
  BB 44
   Insn 1439: point = 1007, n_alt = -1
   Insn 593: point = 1007, n_alt = 1
   Insn 592: point = 1008, n_alt = 3
   Insn 591: point = 1009, n_alt = 3
   Insn 590: point = 1011, n_alt = 0
   Insn 589: point = 1013, n_alt = 0
   Insn 588: point = 1015, n_alt = 1
   Insn 587: point = 1017, n_alt = 0
   Insn 586: point = 1018, n_alt = 0
   Insn 585: point = 1020, n_alt = 1
   Insn 584: point = 1022, n_alt = 0
   Insn 583: point = 1023, n_alt = 0
   Insn 582: point = 1025, n_alt = 3
   Insn 581: point = 1026, n_alt = 3
   Insn 580: point = 1028, n_alt = 0
   Insn 579: point = 1030, n_alt = 1
   Insn 578: point = 1032, n_alt = 0
   Insn 577: point = 1033, n_alt = 0
   Insn 576: point = 1035, n_alt = 1
   Insn 575: point = 1037, n_alt = 0
  BB 42
   Insn 547: point = 1039, n_alt = -1
   Insn 546: point = 1039, n_alt = 1
   Insn 545: point = 1040, n_alt = 7
  BB 41
   Insn 540: point = 1042, n_alt = -1
   Insn 539: point = 1042, n_alt = 1
   Insn 538: point = 1043, n_alt = 7
   Insn 537: point = 1045, n_alt = 4
   Insn 536: point = 1046, n_alt = 3
   Insn 535: point = 1048, n_alt = 0
   Insn 534: point = 1050, n_alt = 1
   Insn 533: point = 1052, n_alt = 0
   Insn 532: point = 1053, n_alt = 0
   Insn 531: point = 1055, n_alt = 1
   Insn 530: point = 1057, n_alt = 0
   Insn 529: point = 1058, n_alt = 8
   Insn 528: point = 1059, n_alt = 7
   Insn 527: point = 1061, n_alt = 3
   Insn 526: point = 1062, n_alt = 3
   Insn 525: point = 1064, n_alt = 0
   Insn 524: point = 1066, n_alt = 1
   Insn 523: point = 1068, n_alt = 0
   Insn 522: point = 1069, n_alt = 0
   Insn 521: point = 1071, n_alt = 0
   Insn 520: point = 1073, n_alt = 1
   Insn 519: point = 1075, n_alt = 0
   Insn 518: point = 1076, n_alt = 1
   Insn 517: point = 1078, n_alt = 1
   Insn 516: point = 1080, n_alt = 0
   Insn 515: point = 1081, n_alt = 1
   Insn 514: point = 1082, n_alt = 0
   Insn 513: point = 1084, n_alt = 3
   Insn 512: point = 1085, n_alt = 3
   Insn 511: point = 1087, n_alt = 0
   Insn 510: point = 1089, n_alt = 1
   Insn 509: point = 1091, n_alt = 0
   Insn 508: point = 1092, n_alt = 0
   Insn 507: point = 1094, n_alt = 1
   Insn 506: point = 1096, n_alt = 0
  BB 101
   Insn 1488: point = 1098, n_alt = -1
  BB 40
   Insn 504: point = 1099, n_alt = -1
   Insn 503: point = 1099, n_alt = 1
   Insn 502: point = 1100, n_alt = 7
   Insn 501: point = 1101, n_alt = 7
   Insn 500: point = 1103, n_alt = 3
   Insn 499: point = 1104, n_alt = 3
   Insn 498: point = 1106, n_alt = 0
   Insn 497: point = 1108, n_alt = 1
   Insn 496: point = 1110, n_alt = 0
   Insn 495: point = 1111, n_alt = 0
   Insn 494: point = 1113, n_alt = 1
   Insn 493: point = 1115, n_alt = 0
   Insn 492: point = 1116, n_alt = 1
   Insn 491: point = 1117, n_alt = 4
   Insn 490: point = 1118, n_alt = 3
   Insn 489: point = 1120, n_alt = 0
   Insn 488: point = 1122, n_alt = 1
   Insn 487: point = 1124, n_alt = 0
   Insn 486: point = 1125, n_alt = 0
   Insn 485: point = 1127, n_alt = 1
   Insn 484: point = 1129, n_alt = 0
  BB 38
   Insn 476: point = 1131, n_alt = 1
  BB 36
   Insn 468: point = 1132, n_alt = 1
   Insn 467: point = 1133, n_alt = 0
   Insn 466: point = 1134, n_alt = 0
  BB 96
   Insn 1471: point = 1135, n_alt = -1
  BB 9
   Insn 86: point = 1135, n_alt = -1
   Insn 85: point = 1135, n_alt = 0
   Insn 84: point = 1136, n_alt = 0
   Insn 83: point = 1138, n_alt = 0
   Insn 82: point = 1139, n_alt = 0
  BB 35
   Insn 1433: point = 1140, n_alt = -1
   Insn 460: point = 1140, n_alt = 1
  BB 97
   Insn 1474: point = 1141, n_alt = -1
  BB 11
   Insn 94: point = 1142, n_alt = -1
   Insn 93: point = 1142, n_alt = 0
   Insn 92: point = 1143, n_alt = 0
   Insn 91: point = 1145, n_alt = 0
   Insn 90: point = 1146, n_alt = 0
  BB 34
   Insn 1431: point = 1147, n_alt = -1
   Insn 454: point = 1147, n_alt = 1
  BB 30
   Insn 431: point = 1148, n_alt = -1
   Insn 430: point = 1148, n_alt = 1
   Insn 429: point = 1148, n_alt = 7
   Insn 428: point = 1150, n_alt = 3
   Insn 427: point = 1151, n_alt = 3
   Insn 426: point = 1153, n_alt = 0
   Insn 425: point = 1155, n_alt = 0
   Insn 424: point = 1157, n_alt = 0
   Insn 423: point = 1158, n_alt = 0
   Insn 422: point = 1160, n_alt = 0
   Insn 421: point = 1162, n_alt = 0
   Insn 420: point = 1164, n_alt = 0
   Insn 419: point = 1165, n_alt = 1
   Insn 418: point = 1167, n_alt = 0
   Insn 417: point = 1169, n_alt = 0
   Insn 416: point = 1170, n_alt = 7
   Insn 415: point = 1172, n_alt = 4
   Insn 414: point = 1173, n_alt = 3
   Insn 413: point = 1175, n_alt = 0
   Insn 412: point = 1177, n_alt = 0
   Insn 411: point = 1179, n_alt = 0
   Insn 410: point = 1180, n_alt = 0
   Insn 409: point = 1182, n_alt = 0
   Insn 408: point = 1184, n_alt = 0
  BB 98
   Insn 1477: point = 1186, n_alt = -1
  BB 15
   Insn 196: point = 1187, n_alt = -1
   Insn 195: point = 1187, n_alt = 0
   Insn 194: point = 1188, n_alt = 0
   Insn 193: point = 1190, n_alt = 0
   Insn 192: point = 1191, n_alt = 0
  BB 29
   Insn 1427: point = 1192, n_alt = -1
   Insn 402: point = 1192, n_alt = 1
  BB 28
   Insn 399: point = 1193, n_alt = 1
   Insn 398: point = 1194, n_alt = 0
   Insn 397: point = 1195, n_alt = 4
   Insn 396: point = 1196, n_alt = 3
   Insn 395: point = 1198, n_alt = 0
   Insn 394: point = 1200, n_alt = 0
   Insn 393: point = 1202, n_alt = 0
   Insn 392: point = 1203, n_alt = 0
   Insn 391: point = 1205, n_alt = 0
   Insn 390: point = 1207, n_alt = 0
  BB 27
   Insn 388: point = 1209, n_alt = -1
   Insn 387: point = 1209, n_alt = 0
   Insn 386: point = 1210, n_alt = 0
   Insn 385: point = 1212, n_alt = 4
   Insn 384: point = 1213, n_alt = 3
   Insn 383: point = 1215, n_alt = 0
   Insn 382: point = 1217, n_alt = 0
   Insn 381: point = 1219, n_alt = 0
   Insn 380: point = 1220, n_alt = 0
   Insn 379: point = 1222, n_alt = 0
   Insn 378: point = 1224, n_alt = 0
  BB 26
   Insn 373: point = 1226, n_alt = -1
   Insn 372: point = 1226, n_alt = 1
   Insn 371: point = 1227, n_alt = 7
  BB 25
   Insn 368: point = 1229, n_alt = 8
   Insn 367: point = 1230, n_alt = 7
   Insn 366: point = 1231, n_alt = 4
   Insn 365: point = 1232, n_alt = 3
   Insn 364: point = 1234, n_alt = 0
   Insn 363: point = 1236, n_alt = 0
   Insn 362: point = 1238, n_alt = 0
   Insn 361: point = 1239, n_alt = 0
   Insn 360: point = 1241, n_alt = 0
   Insn 359: point = 1243, n_alt = 0
  BB 24
   Insn 354: point = 1245, n_alt = -1
   Insn 353: point = 1245, n_alt = 1
   Insn 352: point = 1246, n_alt = 7
   Insn 351: point = 1247, n_alt = 7
   Insn 350: point = 1249, n_alt = 4
   Insn 349: point = 1250, n_alt = 3
   Insn 348: point = 1252, n_alt = 0
   Insn 347: point = 1254, n_alt = 0
   Insn 346: point = 1256, n_alt = 0
   Insn 345: point = 1257, n_alt = 0
   Insn 344: point = 1259, n_alt = 0
   Insn 343: point = 1261, n_alt = 0
  BB 23
   Insn 338: point = 1263, n_alt = -1
   Insn 337: point = 1263, n_alt = 1
   Insn 336: point = 1264, n_alt = 7
  BB 22
   Insn 333: point = 1266, n_alt = 8
   Insn 332: point = 1267, n_alt = 7
   Insn 331: point = 1268, n_alt = 4
   Insn 330: point = 1269, n_alt = 3
   Insn 329: point = 1271, n_alt = 0
   Insn 328: point = 1273, n_alt = 0
   Insn 327: point = 1275, n_alt = 0
   Insn 326: point = 1276, n_alt = 0
   Insn 325: point = 1278, n_alt = 0
   Insn 324: point = 1280, n_alt = 0
  BB 21
   Insn 319: point = 1282, n_alt = -1
   Insn 318: point = 1282, n_alt = 1
   Insn 317: point = 1283, n_alt = 7
   Insn 316: point = 1285, n_alt = 4
   Insn 315: point = 1286, n_alt = 3
   Insn 314: point = 1288, n_alt = 0
   Insn 313: point = 1290, n_alt = 0
   Insn 312: point = 1292, n_alt = 0
   Insn 311: point = 1293, n_alt = 0
   Insn 310: point = 1295, n_alt = 0
   Insn 309: point = 1297, n_alt = 0
  BB 20
   Insn 304: point = 1299, n_alt = -1
   Insn 303: point = 1299, n_alt = 1
   Insn 302: point = 1300, n_alt = 7
   Insn 301: point = 1301, n_alt = 8
   Insn 300: point = 1302, n_alt = 2
   Insn 299: point = 1304, n_alt = 7
   Insn 298: point = 1305, n_alt = 8
   Insn 297: point = 1306, n_alt = 1
   Insn 296: point = 1308, n_alt = 7
   Insn 295: point = 1309, n_alt = 2
   Insn 294: point = 1311, n_alt = -2
   Insn 293: point = 1313, n_alt = 2
   Insn 292: point = 1315, n_alt = 7
   Insn 291: point = 1316, n_alt = -2
   Insn 290: point = 1318, n_alt = 1
   Insn 289: point = 1320, n_alt = 7
   Insn 288: point = 1321, n_alt = 7
   Insn 287: point = 1322, n_alt = 4
   Insn 286: point = 1323, n_alt = 9
   Insn 285: point = 1324, n_alt = 0
   Insn 284: point = 1324, n_alt = -2
   Insn 283: point = 1325, n_alt = 2
   Insn 282: point = 1327, n_alt = -2
   Insn 281: point = 1329, n_alt = 1
   Insn 280: point = 1331, n_alt = 7
   Insn 279: point = 1332, n_alt = -2
   Insn 278: point = 1334, n_alt = 1
   Insn 277: point = 1336, n_alt = 7
   Insn 276: point = 1337, n_alt = 1
   Insn 275: point = 1339, n_alt = 7
   Insn 274: point = 1340, n_alt = 7
   Insn 273: point = 1341, n_alt = 1
   Insn 272: point = 1343, n_alt = 7
  BB 19
   Insn 270: point = 1345, n_alt = -1
   Insn 269: point = 1345, n_alt = 1
   Insn 268: point = 1346, n_alt = 7
   Insn 1511: point = 1347, n_alt = -2
   Insn 267: point = 1349, n_alt = 2
   Insn 1510: point = 1350, n_alt = -2
   Insn 266: point = 1352, n_alt = 7
   Insn 265: point = 1353, n_alt = 7
  BB 18
   Insn 263: point = 1355, n_alt = -1
   Insn 262: point = 1355, n_alt = 1
   Insn 261: point = 1356, n_alt = 7
   Insn 260: point = 1357, n_alt = 8
   Insn 259: point = 1358, n_alt = 1
   Insn 258: point = 1360, n_alt = 7
   Insn 257: point = 1362, n_alt = 3
   Insn 256: point = 1363, n_alt = 1
   Insn 255: point = 1365, n_alt = 7
   Insn 254: point = 1367, n_alt = 3
   Insn 253: point = 1368, n_alt = 3
   Insn 252: point = 1370, n_alt = 0
   Insn 251: point = 1372, n_alt = 0
   Insn 250: point = 1373, n_alt = 7
   Insn 249: point = 1375, n_alt = 4
   Insn 248: point = 1376, n_alt = 3
   Insn 247: point = 1378, n_alt = 0
   Insn 246: point = 1380, n_alt = 0
   Insn 245: point = 1382, n_alt = 0
   Insn 244: point = 1383, n_alt = 0
   Insn 243: point = 1385, n_alt = 0
   Insn 242: point = 1387, n_alt = 0
   Insn 241: point = 1388, n_alt = 8
   Insn 240: point = 1389, n_alt = 7
   Insn 239: point = 1391, n_alt = 3
   Insn 238: point = 1392, n_alt = 3
   Insn 237: point = 1394, n_alt = 0
   Insn 236: point = 1396, n_alt = 0
   Insn 235: point = 1398, n_alt = 0
   Insn 234: point = 1399, n_alt = 0
   Insn 233: point = 1401, n_alt = 0
   Insn 232: point = 1403, n_alt = 0
   Insn 231: point = 1405, n_alt = 0
   Insn 230: point = 1406, n_alt = 1
   Insn 229: point = 1408, n_alt = 0
   Insn 228: point = 1410, n_alt = 0
   Insn 227: point = 1411, n_alt = 8
  BB 17
   Insn 224: point = 1413, n_alt = 7
  BB 16
   Insn 222: point = 1415, n_alt = -1
   Insn 221: point = 1415, n_alt = 0
   Insn 220: point = 1416, n_alt = 0
   Insn 219: point = 1418, n_alt = 0
   Insn 218: point = 1420, n_alt = 0
   Insn 217: point = 1421, n_alt = 1
   Insn 216: point = 1421, n_alt = 0
   Insn 215: point = 1423, n_alt = 0
   Insn 214: point = 1424, n_alt = 1
   Insn 213: point = 1425, n_alt = 7
   Insn 212: point = 1426, n_alt = 7
   Insn 211: point = 1427, n_alt = 8
   Insn 210: point = 1428, n_alt = 7
   Insn 209: point = 1430, n_alt = 3
   Insn 208: point = 1431, n_alt = 3
   Insn 207: point = 1433, n_alt = 0
   Insn 206: point = 1435, n_alt = 0
   Insn 205: point = 1437, n_alt = 0
   Insn 204: point = 1438, n_alt = 0
   Insn 203: point = 1440, n_alt = 0
   Insn 202: point = 1442, n_alt = 0
   Insn 201: point = 1444, n_alt = 0
   Insn 200: point = 1445, n_alt = 1
   Insn 199: point = 1447, n_alt = 0
   Insn 198: point = 1449, n_alt = 0
  BB 14
   Insn 190: point = 1451, n_alt = 1
   Insn 189: point = 1451, n_alt = 0
   Insn 188: point = 1452, n_alt = 1
   Insn 187: point = 1453, n_alt = 0
   Insn 186: point = 1454, n_alt = 4
   Insn 185: point = 1455, n_alt = 3
   Insn 184: point = 1457, n_alt = 0
   Insn 183: point = 1459, n_alt = 0
   Insn 182: point = 1461, n_alt = 0
   Insn 181: point = 1462, n_alt = 0
   Insn 180: point = 1464, n_alt = 0
   Insn 179: point = 1466, n_alt = 0
   Insn 178: point = 1467, n_alt = 8
   Insn 177: point = 1468, n_alt = 4
   Insn 176: point = 1469, n_alt = 7
   Insn 175: point = 1471, n_alt = 3
   Insn 174: point = 1472, n_alt = 3
   Insn 173: point = 1474, n_alt = 0
   Insn 172: point = 1476, n_alt = 0
   Insn 171: point = 1478, n_alt = 0
   Insn 170: point = 1479, n_alt = 0
   Insn 169: point = 1481, n_alt = 0
   Insn 168: point = 1483, n_alt = 0
   Insn 167: point = 1484, n_alt = 3
   Insn 166: point = 1486, n_alt = 0
   Insn 165: point = 1488, n_alt = 0
   Insn 164: point = 1490, n_alt = 0
   Insn 163: point = 1491, n_alt = 0
   Insn 162: point = 1493, n_alt = 0
   Insn 161: point = 1495, n_alt = 0
   Insn 160: point = 1497, n_alt = 0
   Insn 159: point = 1498, n_alt = 1
   Insn 158: point = 1500, n_alt = 0
   Insn 157: point = 1502, n_alt = 0
   Insn 156: point = 1503, n_alt = 8
   Insn 155: point = 1504, n_alt = 4
   Insn 154: point = 1505, n_alt = 7
   Insn 153: point = 1507, n_alt = 3
   Insn 152: point = 1508, n_alt = 3
   Insn 151: point = 1510, n_alt = 0
   Insn 150: point = 1512, n_alt = 0
   Insn 149: point = 1514, n_alt = 0
   Insn 148: point = 1515, n_alt = 0
   Insn 147: point = 1517, n_alt = 0
   Insn 146: point = 1519, n_alt = 0
   Insn 145: point = 1520, n_alt = 3
   Insn 144: point = 1522, n_alt = 0
   Insn 143: point = 1524, n_alt = 0
   Insn 142: point = 1526, n_alt = 0
   Insn 141: point = 1527, n_alt = 0
   Insn 140: point = 1529, n_alt = 0
   Insn 139: point = 1531, n_alt = 0
   Insn 138: point = 1533, n_alt = 0
   Insn 137: point = 1534, n_alt = 1
   Insn 136: point = 1536, n_alt = 0
   Insn 135: point = 1538, n_alt = 0
  BB 33
   Insn 1429: point = 1540, n_alt = -1
   Insn 448: point = 1540, n_alt = 8
   Insn 447: point = 1541, n_alt = 1
   Insn 446: point = 1543, n_alt = 7
   Insn 445: point = 1544, n_alt = 7
  BB 32
   Insn 440: point = 1546, n_alt = -1
   Insn 439: point = 1546, n_alt = 1
   Insn 438: point = 1547, n_alt = 7
  BB 31
   Insn 433: point = 1549, n_alt = -1
   Insn 432: point = 1549, n_alt = 1
  BB 13
   Insn 133: point = 1551, n_alt = 8
   Insn 132: point = 1552, n_alt = 7
   Insn 131: point = 1553, n_alt = 8
   Insn 130: point = 1554, n_alt = 1
   Insn 129: point = 1556, n_alt = 7
   Insn 128: point = 1558, n_alt = 3
   Insn 127: point = 1559, n_alt = 7
   Insn 126: point = 1561, n_alt = 3
   Insn 125: point = 1562, n_alt = 3
   Insn 124: point = 1564, n_alt = 0
   Insn 123: point = 1566, n_alt = 0
   Insn 122: point = 1568, n_alt = 0
   Insn 121: point = 1569, n_alt = 0
   Insn 120: point = 1571, n_alt = 0
   Insn 119: point = 1573, n_alt = 0
  BB 12
   Insn 117: point = 1575, n_alt = -1
   Insn 116: point = 1575, n_alt = 1
   Insn 115: point = 1576, n_alt = 7
   Insn 114: point = 1577, n_alt = 7
   Insn 113: point = 1579, n_alt = 3
   Insn 112: point = 1580, n_alt = 3
   Insn 111: point = 1582, n_alt = 0
   Insn 110: point = 1584, n_alt = 0
   Insn 109: point = 1586, n_alt = 0
   Insn 108: point = 1587, n_alt = 0
   Insn 107: point = 1589, n_alt = 0
   Insn 106: point = 1591, n_alt = 0
   Insn 105: point = 1592, n_alt = 1
   Insn 104: point = 1593, n_alt = 0
   Insn 103: point = 1595, n_alt = 3
   Insn 102: point = 1596, n_alt = 3
   Insn 101: point = 1598, n_alt = 0
   Insn 100: point = 1600, n_alt = 0
   Insn 99: point = 1602, n_alt = 0
   Insn 98: point = 1603, n_alt = 0
   Insn 97: point = 1605, n_alt = 0
   Insn 96: point = 1607, n_alt = 0
  BB 10
   Insn 88: point = 1609, n_alt = 1
  BB 8
   Insn 80: point = 1610, n_alt = 1
   Insn 79: point = 1611, n_alt = 0
   Insn 78: point = 1612, n_alt = 0
  BB 94
   Insn 1465: point = 1613, n_alt = -1
  BB 3
   Insn 19: point = 1613, n_alt = -1
   Insn 18: point = 1613, n_alt = 0
   Insn 17: point = 1614, n_alt = 0
   Insn 16: point = 1616, n_alt = 0
   Insn 15: point = 1617, n_alt = 0
  BB 7
   Insn 1425: point = 1618, n_alt = -1
   Insn 72: point = 1618, n_alt = 1
  BB 95
   Insn 1468: point = 1619, n_alt = -1
  BB 5
   Insn 27: point = 1620, n_alt = -1
   Insn 26: point = 1620, n_alt = 0
   Insn 25: point = 1621, n_alt = 0
   Insn 24: point = 1623, n_alt = 0
   Insn 23: point = 1624, n_alt = 0
  BB 6
   Insn 1423: point = 1625, n_alt = -1
   Insn 66: point = 1625, n_alt = 1
   Insn 65: point = 1625, n_alt = 8
   Insn 64: point = 1626, n_alt = 4
   Insn 63: point = 1627, n_alt = 1
   Insn 62: point = 1629, n_alt = 3
   Insn 61: point = 1631, n_alt = 0
   Insn 60: point = 1633, n_alt = 1
   Insn 59: point = 1635, n_alt = 0
   Insn 58: point = 1636, n_alt = 0
   Insn 57: point = 1638, n_alt = 1
   Insn 56: point = 1640, n_alt = 0
   Insn 55: point = 1641, n_alt = 7
   Insn 54: point = 1643, n_alt = 3
   Insn 53: point = 1644, n_alt = 3
   Insn 52: point = 1646, n_alt = 0
   Insn 51: point = 1648, n_alt = 1
   Insn 50: point = 1650, n_alt = 0
   Insn 49: point = 1651, n_alt = 0
   Insn 48: point = 1653, n_alt = 1
   Insn 47: point = 1655, n_alt = 0
   Insn 46: point = 1656, n_alt = 7
   Insn 45: point = 1658, n_alt = 3
   Insn 44: point = 1659, n_alt = 3
   Insn 43: point = 1661, n_alt = 0
   Insn 42: point = 1663, n_alt = 1
   Insn 41: point = 1665, n_alt = 0
   Insn 40: point = 1666, n_alt = 0
   Insn 39: point = 1668, n_alt = 1
   Insn 38: point = 1670, n_alt = 0
   Insn 37: point = 1671, n_alt = 1
   Insn 36: point = 1672, n_alt = 3
   Insn 35: point = 1673, n_alt = 3
   Insn 34: point = 1675, n_alt = 0
   Insn 33: point = 1677, n_alt = 1
   Insn 32: point = 1679, n_alt = 0
   Insn 31: point = 1680, n_alt = 0
   Insn 30: point = 1682, n_alt = 1
   Insn 29: point = 1684, n_alt = 0
  BB 4
   Insn 21: point = 1686, n_alt = 1
  BB 2
   Insn 13: point = 1687, n_alt = 1
   Insn 12: point = 1688, n_alt = 0
   Insn 11: point = 1689, n_alt = 0
   Insn 7: point = 1690, n_alt = 5
   Insn 6: point = 1690, n_alt = 5
   Insn 5: point = 1690, n_alt = 5
   Insn 4: point = 1690, n_alt = 5
   Insn 3: point = 1690, n_alt = 5
   Insn 2: point = 1690, n_alt = 5
 r380: [716..722]
 r448: [531..537]
 r473: [460..466]
 r538: [255..261]
Compressing live ranges: from 1690 to 8 - 0%
Ranges after the compression:
 r380: [6..7]
 r448: [4..5]
 r473: [2..3]
 r538: [0..1]
  Slot 0 regnos (width = 0):	 380	 538	 473	 448
Changing spilled pseudos to memory in insn #1513
Changing spilled pseudos to memory in insn #797
Changing spilled pseudos to memory in insn #1516
Changing spilled pseudos to memory in insn #957
Changing spilled pseudos to memory in insn #1519
Changing spilled pseudos to memory in insn #1005
Changing spilled pseudos to memory in insn #1522
Changing spilled pseudos to memory in insn #1170
	   Spilling non-eliminable hard regs: 6

********** Local #4: **********

	   Spilling non-eliminable hard regs: 6
Reusing alternative 1 for insn #1170
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1170:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1522
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1522:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #1005
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 1005:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1519
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1519:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #957
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 957:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1516
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1516:  (0) m  (1) v {*movsf_internal}
Reusing alternative 1 for insn #797
          alt=1,overall=0,losers=0,rld_nregs=0
	 Choosing alt 1 in insn 797:  (0) x  (1) 0  (2) xm {*fop_sf_comm}
Reusing alternative 8 for insn #1513
          alt=8,overall=0,losers=0,rld_nregs=0
	 Choosing alt 8 in insn 1513:  (0) m  (1) v {*movsf_internal}
	   Spilling non-eliminable hard regs: 6
New elimination table:
Can't eliminate 16 to 7 (offset=208, prev_offset=0)
Can eliminate 16 to 6 (offset=16, prev_offset=16)
Can't eliminate 20 to 7 (offset=176, prev_offset=0)
Can eliminate 20 to 6 (offset=-16, prev_offset=-16)
changing reg in insn 30
changing reg in insn 31
changing reg in insn 31
changing reg in insn 33
changing reg in insn 34
changing reg in insn 35
changing reg in insn 35
changing reg in insn 37
changing reg in insn 39
changing reg in insn 40
changing reg in insn 40
changing reg in insn 42
changing reg in insn 43
changing reg in insn 44
changing reg in insn 44
changing reg in insn 46
changing reg in insn 46
changing reg in insn 48
changing reg in insn 49
changing reg in insn 49
changing reg in insn 51
changing reg in insn 52
changing reg in insn 53
changing reg in insn 53
changing reg in insn 55
changing reg in insn 55
changing reg in insn 57
changing reg in insn 58
changing reg in insn 58
changing reg in insn 60
changing reg in insn 61
changing reg in insn 62
changing reg in insn 62
changing reg in insn 65
changing reg in insn 63
changing reg in insn 65
changing reg in insn 97
changing reg in insn 98
changing reg in insn 98
changing reg in insn 100
changing reg in insn 101
changing reg in insn 102
changing reg in insn 102
changing reg in insn 104
changing reg in insn 107
changing reg in insn 108
changing reg in insn 108
changing reg in insn 110
changing reg in insn 111
changing reg in insn 112
changing reg in insn 112
changing reg in insn 114
changing reg in insn 114
changing reg in insn 116
changing reg in insn 120
changing reg in insn 121
changing reg in insn 121
changing reg in insn 123
changing reg in insn 124
changing reg in insn 125
changing reg in insn 125
changing reg in insn 127
changing reg in insn 127
changing reg in insn 129
changing reg in insn 136
changing reg in insn 137
changing reg in insn 137
changing reg in insn 141
changing reg in insn 139
changing reg in insn 140
changing reg in insn 140
changing reg in insn 141
changing reg in insn 141
changing reg in insn 143
changing reg in insn 144
changing reg in insn 145
changing reg in insn 145
changing reg in insn 154
changing reg in insn 147
changing reg in insn 148
changing reg in insn 148
changing reg in insn 150
changing reg in insn 151
changing reg in insn 152
changing reg in insn 152
changing reg in insn 156
changing reg in insn 154
changing reg in insn 156
changing reg in insn 158
changing reg in insn 159
changing reg in insn 159
changing reg in insn 163
changing reg in insn 161
changing reg in insn 162
changing reg in insn 162
changing reg in insn 163
changing reg in insn 163
changing reg in insn 165
changing reg in insn 166
changing reg in insn 167
changing reg in insn 167
changing reg in insn 176
changing reg in insn 169
changing reg in insn 170
changing reg in insn 170
changing reg in insn 172
changing reg in insn 173
changing reg in insn 174
changing reg in insn 174
changing reg in insn 178
changing reg in insn 176
changing reg in insn 178
changing reg in insn 180
changing reg in insn 181
changing reg in insn 181
changing reg in insn 183
changing reg in insn 184
changing reg in insn 185
changing reg in insn 185
changing reg in insn 188
changing reg in insn 199
changing reg in insn 200
changing reg in insn 200
changing reg in insn 204
changing reg in insn 202
changing reg in insn 203
changing reg in insn 203
changing reg in insn 204
changing reg in insn 204
changing reg in insn 206
changing reg in insn 207
changing reg in insn 208
changing reg in insn 208
changing reg in insn 210
changing reg in insn 216
changing reg in insn 219
changing reg in insn 220
changing reg in insn 221
changing reg in insn 229
changing reg in insn 230
changing reg in insn 230
changing reg in insn 234
changing reg in insn 232
changing reg in insn 233
changing reg in insn 233
changing reg in insn 234
changing reg in insn 234
changing reg in insn 236
changing reg in insn 237
changing reg in insn 238
changing reg in insn 238
changing reg in insn 240
changing reg in insn 243
changing reg in insn 244
changing reg in insn 244
changing reg in insn 246
changing reg in insn 247
changing reg in insn 248
changing reg in insn 248
changing reg in insn 250
changing reg in insn 250
changing reg in insn 256
changing reg in insn 252
changing reg in insn 253
changing reg in insn 253
changing reg in insn 255
changing reg in insn 255
changing reg in insn 256
changing reg in insn 256
changing reg in insn 258
changing reg in insn 269
changing reg in insn 273
changing reg in insn 283
changing reg in insn 276
changing reg in insn 278
changing reg in insn 279
changing reg in insn 279
changing reg in insn 281
changing reg in insn 282
changing reg in insn 282
changing reg in insn 283
changing reg in insn 283
changing reg in insn 284
changing reg in insn 290
changing reg in insn 291
changing reg in insn 291
changing reg in insn 295
changing reg in insn 293
changing reg in insn 294
changing reg in insn 294
changing reg in insn 295
changing reg in insn 295
changing reg in insn 310
changing reg in insn 311
changing reg in insn 311
changing reg in insn 313
changing reg in insn 314
changing reg in insn 315
changing reg in insn 315
changing reg in insn 317
changing reg in insn 317
changing reg in insn 318
changing reg in insn 325
changing reg in insn 326
changing reg in insn 326
changing reg in insn 328
changing reg in insn 329
changing reg in insn 330
changing reg in insn 330
changing reg in insn 333
changing reg in insn 344
changing reg in insn 345
changing reg in insn 345
changing reg in insn 347
changing reg in insn 348
changing reg in insn 349
changing reg in insn 349
changing reg in insn 351
changing reg in insn 351
changing reg in insn 353
changing reg in insn 360
changing reg in insn 361
changing reg in insn 361
changing reg in insn 363
changing reg in insn 364
changing reg in insn 365
changing reg in insn 365
changing reg in insn 368
changing reg in insn 379
changing reg in insn 380
changing reg in insn 380
changing reg in insn 382
changing reg in insn 383
changing reg in insn 384
changing reg in insn 384
changing reg in insn 386
changing reg in insn 386
changing reg in insn 387
changing reg in insn 391
changing reg in insn 392
changing reg in insn 392
changing reg in insn 394
changing reg in insn 395
changing reg in insn 396
changing reg in insn 396
changing reg in insn 399
changing reg in insn 409
changing reg in insn 410
changing reg in insn 410
changing reg in insn 412
changing reg in insn 413
changing reg in insn 414
changing reg in insn 414
changing reg in insn 416
changing reg in insn 416
changing reg in insn 432
changing reg in insn 430
changing reg in insn 418
changing reg in insn 419
changing reg in insn 419
changing reg in insn 423
changing reg in insn 421
changing reg in insn 422
changing reg in insn 422
changing reg in insn 423
changing reg in insn 423
changing reg in insn 425
changing reg in insn 426
changing reg in insn 427
changing reg in insn 427
changing reg in insn 429
changing reg in insn 429
changing reg in insn 432
changing reg in insn 430
changing reg in insn 485
changing reg in insn 486
changing reg in insn 486
changing reg in insn 488
changing reg in insn 489
changing reg in insn 490
changing reg in insn 490
changing reg in insn 492
changing reg in insn 494
changing reg in insn 495
changing reg in insn 495
changing reg in insn 497
changing reg in insn 498
changing reg in insn 499
changing reg in insn 499
changing reg in insn 501
changing reg in insn 501
changing reg in insn 503
changing reg in insn 507
changing reg in insn 508
changing reg in insn 508
changing reg in insn 510
changing reg in insn 511
changing reg in insn 512
changing reg in insn 512
changing reg in insn 514
changing reg in insn 517
changing reg in insn 518
changing reg in insn 518
changing reg in insn 522
changing reg in insn 520
changing reg in insn 521
changing reg in insn 521
changing reg in insn 522
changing reg in insn 522
changing reg in insn 524
changing reg in insn 525
changing reg in insn 526
changing reg in insn 526
changing reg in insn 528
changing reg in insn 531
changing reg in insn 532
changing reg in insn 532
changing reg in insn 534
changing reg in insn 535
changing reg in insn 536
changing reg in insn 536
changing reg in insn 538
changing reg in insn 538
changing reg in insn 539
changing reg in insn 553
changing reg in insn 554
changing reg in insn 554
changing reg in insn 556
changing reg in insn 557
changing reg in insn 558
changing reg in insn 558
changing reg in insn 560
changing reg in insn 560
changing reg in insn 568
changing reg in insn 562
changing reg in insn 563
changing reg in insn 563
changing reg in insn 565
changing reg in insn 566
changing reg in insn 567
changing reg in insn 567
changing reg in insn 570
changing reg in insn 568
changing reg in insn 570
changing reg in insn 576
changing reg in insn 577
changing reg in insn 577
changing reg in insn 579
changing reg in insn 580
changing reg in insn 581
changing reg in insn 581
changing reg in insn 583
changing reg in insn 583
changing reg in insn 591
changing reg in insn 585
changing reg in insn 586
changing reg in insn 586
changing reg in insn 588
changing reg in insn 589
changing reg in insn 590
changing reg in insn 590
changing reg in insn 593
changing reg in insn 591
changing reg in insn 593
changing reg in insn 599
changing reg in insn 600
changing reg in insn 600
changing reg in insn 602
changing reg in insn 603
changing reg in insn 604
changing reg in insn 604
changing reg in insn 606
changing reg in insn 651
changing reg in insn 652
changing reg in insn 652
changing reg in insn 654
changing reg in insn 655
changing reg in insn 656
changing reg in insn 656
changing reg in insn 658
changing reg in insn 658
changing reg in insn 659
changing reg in insn 663
changing reg in insn 664
changing reg in insn 664
changing reg in insn 666
changing reg in insn 667
changing reg in insn 668
changing reg in insn 668
changing reg in insn 670
changing reg in insn 673
changing reg in insn 674
changing reg in insn 674
changing reg in insn 676
changing reg in insn 677
changing reg in insn 678
changing reg in insn 678
changing reg in insn 680
changing reg in insn 683
changing reg in insn 684
changing reg in insn 684
changing reg in insn 686
changing reg in insn 687
changing reg in insn 688
changing reg in insn 688
changing reg in insn 690
changing reg in insn 690
changing reg in insn 692
changing reg in insn 696
changing reg in insn 697
changing reg in insn 697
changing reg in insn 701
changing reg in insn 699
changing reg in insn 700
changing reg in insn 700
changing reg in insn 701
changing reg in insn 701
changing reg in insn 703
changing reg in insn 704
changing reg in insn 705
changing reg in insn 705
changing reg in insn 707
changing reg in insn 710
changing reg in insn 711
changing reg in insn 711
changing reg in insn 713
changing reg in insn 714
changing reg in insn 715
changing reg in insn 715
changing reg in insn 717
changing reg in insn 740
changing reg in insn 741
changing reg in insn 741
changing reg in insn 743
changing reg in insn 744
changing reg in insn 745
changing reg in insn 745
changing reg in insn 747
changing reg in insn 747
changing reg in insn 753
changing reg in insn 749
changing reg in insn 750
changing reg in insn 750
changing reg in insn 752
changing reg in insn 752
changing reg in insn 753
changing reg in insn 753
changing reg in insn 755
changing reg in insn 759
changing reg in insn 760
changing reg in insn 760
changing reg in insn 764
changing reg in insn 762
changing reg in insn 763
changing reg in insn 763
changing reg in insn 764
changing reg in insn 764
changing reg in insn 766
changing reg in insn 767
changing reg in insn 768
changing reg in insn 768
changing reg in insn 770
changing reg in insn 770
changing reg in insn 772
changing reg in insn 773
changing reg in insn 773
changing reg in insn 777
changing reg in insn 775
changing reg in insn 776
changing reg in insn 776
changing reg in insn 777
changing reg in insn 777
changing reg in insn 779
changing reg in insn 780
changing reg in insn 781
changing reg in insn 781
changing reg in insn 783
changing reg in insn 783
changing reg in insn 785
changing reg in insn 785
changing reg in insn 787
changing reg in insn 788
changing reg in insn 788
changing reg in insn 789
changing reg in insn 793
changing reg in insn 794
changing reg in insn 796
changing reg in insn 800
changing reg in insn 801
changing reg in insn 801
changing reg in insn 805
changing reg in insn 803
changing reg in insn 804
changing reg in insn 804
changing reg in insn 805
changing reg in insn 805
changing reg in insn 807
changing reg in insn 808
changing reg in insn 809
changing reg in insn 809
changing reg in insn 811
changing reg in insn 811
changing reg in insn 813
changing reg in insn 813
changing reg in insn 814
changing reg in insn 814
changing reg in insn 816
changing reg in insn 819
changing reg in insn 820
changing reg in insn 820
changing reg in insn 824
changing reg in insn 822
changing reg in insn 823
changing reg in insn 823
changing reg in insn 824
changing reg in insn 824
changing reg in insn 826
changing reg in insn 827
changing reg in insn 828
changing reg in insn 828
changing reg in insn 830
changing reg in insn 830
changing reg in insn 831
changing reg in insn 858
changing reg in insn 859
changing reg in insn 859
changing reg in insn 861
changing reg in insn 862
changing reg in insn 863
changing reg in insn 863
changing reg in insn 865
changing reg in insn 865
changing reg in insn 873
changing reg in insn 867
changing reg in insn 868
changing reg in insn 868
changing reg in insn 870
changing reg in insn 871
changing reg in insn 872
changing reg in insn 872
changing reg in insn 875
changing reg in insn 873
changing reg in insn 875
changing reg in insn 896
changing reg in insn 897
changing reg in insn 897
changing reg in insn 899
changing reg in insn 900
changing reg in insn 901
changing reg in insn 901
changing reg in insn 903
changing reg in insn 903
changing reg in insn 909
changing reg in insn 905
changing reg in insn 906
changing reg in insn 906
changing reg in insn 908
changing reg in insn 908
changing reg in insn 909
changing reg in insn 909
changing reg in insn 911
changing reg in insn 919
changing reg in insn 920
changing reg in insn 920
changing reg in insn 924
changing reg in insn 922
changing reg in insn 923
changing reg in insn 923
changing reg in insn 924
changing reg in insn 924
changing reg in insn 926
changing reg in insn 927
changing reg in insn 928
changing reg in insn 928
changing reg in insn 930
changing reg in insn 930
changing reg in insn 932
changing reg in insn 933
changing reg in insn 933
changing reg in insn 937
changing reg in insn 935
changing reg in insn 936
changing reg in insn 936
changing reg in insn 937
changing reg in insn 937
changing reg in insn 939
changing reg in insn 940
changing reg in insn 941
changing reg in insn 941
changing reg in insn 943
changing reg in insn 943
changing reg in insn 945
changing reg in insn 945
changing reg in insn 947
changing reg in insn 948
changing reg in insn 948
changing reg in insn 949
changing reg in insn 953
changing reg in insn 954
changing reg in insn 956
changing reg in insn 967
changing reg in insn 968
changing reg in insn 968
changing reg in insn 972
changing reg in insn 970
changing reg in insn 971
changing reg in insn 971
changing reg in insn 972
changing reg in insn 972
changing reg in insn 974
changing reg in insn 975
changing reg in insn 976
changing reg in insn 976
changing reg in insn 978
changing reg in insn 978
changing reg in insn 980
changing reg in insn 981
changing reg in insn 981
changing reg in insn 985
changing reg in insn 983
changing reg in insn 984
changing reg in insn 984
changing reg in insn 985
changing reg in insn 985
changing reg in insn 987
changing reg in insn 988
changing reg in insn 989
changing reg in insn 989
changing reg in insn 991
changing reg in insn 991
changing reg in insn 993
changing reg in insn 993
changing reg in insn 995
changing reg in insn 996
changing reg in insn 996
changing reg in insn 997
changing reg in insn 1001
changing reg in insn 1002
changing reg in insn 1004
changing reg in insn 1010
changing reg in insn 1011
changing reg in insn 1011
changing reg in insn 1015
changing reg in insn 1013
changing reg in insn 1014
changing reg in insn 1014
changing reg in insn 1015
changing reg in insn 1015
changing reg in insn 1017
changing reg in insn 1018
changing reg in insn 1019
changing reg in insn 1019
changing reg in insn 1021
changing reg in insn 1021
changing reg in insn 1023
changing reg in insn 1023
changing reg in insn 1024
changing reg in insn 1024
changing reg in insn 1026
changing reg in insn 1058
changing reg in insn 1059
changing reg in insn 1059
changing reg in insn 1063
changing reg in insn 1061
changing reg in insn 1062
changing reg in insn 1062
changing reg in insn 1063
changing reg in insn 1063
changing reg in insn 1065
changing reg in insn 1066
changing reg in insn 1067
changing reg in insn 1067
changing reg in insn 1069
changing reg in insn 1069
changing reg in insn 1071
changing reg in insn 1084
changing reg in insn 1085
changing reg in insn 1085
changing reg in insn 1089
changing reg in insn 1087
changing reg in insn 1088
changing reg in insn 1088
changing reg in insn 1089
changing reg in insn 1089
changing reg in insn 1091
changing reg in insn 1092
changing reg in insn 1093
changing reg in insn 1093
changing reg in insn 1095
changing reg in insn 1095
changing reg in insn 1096
changing reg in insn 1113
changing reg in insn 1114
changing reg in insn 1114
changing reg in insn 1116
changing reg in insn 1117
changing reg in insn 1118
changing reg in insn 1118
changing reg in insn 1120
changing reg in insn 1120
changing reg in insn 1126
changing reg in insn 1122
changing reg in insn 1123
changing reg in insn 1123
changing reg in insn 1125
changing reg in insn 1125
changing reg in insn 1126
changing reg in insn 1126
changing reg in insn 1128
changing reg in insn 1132
changing reg in insn 1133
changing reg in insn 1133
changing reg in insn 1137
changing reg in insn 1135
changing reg in insn 1136
changing reg in insn 1136
changing reg in insn 1137
changing reg in insn 1137
changing reg in insn 1139
changing reg in insn 1140
changing reg in insn 1141
changing reg in insn 1141
changing reg in insn 1143
changing reg in insn 1143
changing reg in insn 1145
changing reg in insn 1146
changing reg in insn 1146
changing reg in insn 1150
changing reg in insn 1148
changing reg in insn 1149
changing reg in insn 1149
changing reg in insn 1150
changing reg in insn 1150
changing reg in insn 1152
changing reg in insn 1153
changing reg in insn 1154
changing reg in insn 1154
changing reg in insn 1156
changing reg in insn 1156
changing reg in insn 1158
changing reg in insn 1158
changing reg in insn 1160
changing reg in insn 1161
changing reg in insn 1161
changing reg in insn 1162
changing reg in insn 1166
changing reg in insn 1167
changing reg in insn 1169
changing reg in insn 1173
changing reg in insn 1174
changing reg in insn 1174
changing reg in insn 1178
changing reg in insn 1176
changing reg in insn 1177
changing reg in insn 1177
changing reg in insn 1178
changing reg in insn 1178
changing reg in insn 1180
changing reg in insn 1181
changing reg in insn 1182
changing reg in insn 1182
changing reg in insn 1184
changing reg in insn 1184
changing reg in insn 1186
changing reg in insn 1186
changing reg in insn 1187
changing reg in insn 1187
changing reg in insn 1189
changing reg in insn 1197
changing reg in insn 1198
changing reg in insn 1198
changing reg in insn 1202
changing reg in insn 1200
changing reg in insn 1201
changing reg in insn 1201
changing reg in insn 1202
changing reg in insn 1202
changing reg in insn 1204
changing reg in insn 1205
changing reg in insn 1206
changing reg in insn 1206
changing reg in insn 1208
changing reg in insn 1208
changing reg in insn 1209
changing reg in insn 1224
changing reg in insn 1225
changing reg in insn 1225
changing reg in insn 1229
changing reg in insn 1227
changing reg in insn 1228
changing reg in insn 1228
changing reg in insn 1229
changing reg in insn 1229
changing reg in insn 1231
changing reg in insn 1232
changing reg in insn 1233
changing reg in insn 1233
changing reg in insn 1235
changing reg in insn 1235
changing reg in insn 1237
changing reg in insn 1274
changing reg in insn 1275
changing reg in insn 1275
changing reg in insn 1277
changing reg in insn 1278
changing reg in insn 1279
changing reg in insn 1279
changing reg in insn 1281
changing reg in insn 1281
changing reg in insn 1289
changing reg in insn 1283
changing reg in insn 1284
changing reg in insn 1284
changing reg in insn 1286
changing reg in insn 1287
changing reg in insn 1288
changing reg in insn 1288
changing reg in insn 1291
changing reg in insn 1289
changing reg in insn 1291
changing reg in insn 1304
changing reg in insn 1305
changing reg in insn 1305
changing reg in insn 1307
changing reg in insn 1308
changing reg in insn 1309
changing reg in insn 1309
changing reg in insn 1311
changing reg in insn 1311
changing reg in insn 1319
changing reg in insn 1313
changing reg in insn 1314
changing reg in insn 1314
changing reg in insn 1316
changing reg in insn 1317
changing reg in insn 1318
changing reg in insn 1318
changing reg in insn 1321
changing reg in insn 1319
changing reg in insn 1321
changing reg in insn 1327
changing reg in insn 1328
changing reg in insn 1328
changing reg in insn 1330
changing reg in insn 1331
changing reg in insn 1332
changing reg in insn 1332
changing reg in insn 1334
changing reg in insn 1334
changing reg in insn 1342
changing reg in insn 1336
changing reg in insn 1337
changing reg in insn 1337
changing reg in insn 1339
changing reg in insn 1340
changing reg in insn 1341
changing reg in insn 1341
changing reg in insn 1344
changing reg in insn 1342
changing reg in insn 1344
changing reg in insn 224
changing reg in insn 212
changing reg in insn 227
changing reg in insn 217
changing reg in insn 217
changing reg in insn 214
changing reg in insn 11
changing reg in insn 13
changing reg in insn 12
changing reg in insn 15
changing reg in insn 17
changing reg in insn 18
changing reg in insn 25
changing reg in insn 26
changing reg in insn 78
changing reg in insn 80
changing reg in insn 79
changing reg in insn 82
changing reg in insn 84
changing reg in insn 85
changing reg in insn 92
changing reg in insn 93
changing reg in insn 189
changing reg in insn 192
changing reg in insn 194
changing reg in insn 195
changing reg in insn 466
changing reg in insn 468
changing reg in insn 467
changing reg in insn 470
changing reg in insn 472
changing reg in insn 473
changing reg in insn 480
changing reg in insn 481
changing reg in insn 632
changing reg in insn 634
changing reg in insn 633
changing reg in insn 636
changing reg in insn 638
changing reg in insn 639
changing reg in insn 646
changing reg in insn 647
changing reg in insn 729
changing reg in insn 731
changing reg in insn 730
changing reg in insn 733
changing reg in insn 735
changing reg in insn 736
changing reg in insn 886
changing reg in insn 887
changing reg in insn 891
changing reg in insn 892
changing reg in insn 1045
changing reg in insn 1046
changing reg in insn 1050
changing reg in insn 1051
changing reg in insn 16
changing reg in insn 17
changing reg in insn 24
changing reg in insn 25
changing reg in insn 29
changing reg in insn 30
changing reg in insn 32
changing reg in insn 33
changing reg in insn 36
changing reg in insn 37
changing reg in insn 38
changing reg in insn 39
changing reg in insn 41
changing reg in insn 42
changing reg in insn 45
changing reg in insn 46
changing reg in insn 47
changing reg in insn 48
changing reg in insn 50
changing reg in insn 51
changing reg in insn 54
changing reg in insn 55
changing reg in insn 56
changing reg in insn 57
changing reg in insn 59
changing reg in insn 60
changing reg in insn 64
changing reg in insn 65
changing reg in insn 83
changing reg in insn 84
changing reg in insn 91
changing reg in insn 92
changing reg in insn 96
changing reg in insn 97
changing reg in insn 99
changing reg in insn 100
changing reg in insn 103
changing reg in insn 104
changing reg in insn 104
changing reg in insn 105
changing reg in insn 106
changing reg in insn 107
changing reg in insn 109
changing reg in insn 110
changing reg in insn 113
changing reg in insn 114
changing reg in insn 115
changing reg in insn 116
changing reg in insn 119
changing reg in insn 120
changing reg in insn 122
changing reg in insn 123
changing reg in insn 126
changing reg in insn 127
changing reg in insn 128
changing reg in insn 129
changing reg in insn 130
changing reg in insn 131
changing reg in insn 132
changing reg in insn 133
changing reg in insn 135
changing reg in insn 136
changing reg in insn 138
changing reg in insn 139
changing reg in insn 142
changing reg in insn 143
changing reg in insn 146
changing reg in insn 147
changing reg in insn 149
changing reg in insn 150
changing reg in insn 153
changing reg in insn 154
changing reg in insn 155
changing reg in insn 156
changing reg in insn 157
changing reg in insn 158
changing reg in insn 160
changing reg in insn 161
changing reg in insn 164
changing reg in insn 165
changing reg in insn 168
changing reg in insn 169
changing reg in insn 171
changing reg in insn 172
changing reg in insn 175
changing reg in insn 176
changing reg in insn 177
changing reg in insn 178
changing reg in insn 179
changing reg in insn 180
changing reg in insn 182
changing reg in insn 183
changing reg in insn 186
changing reg in insn 188
changing reg in insn 187
changing reg in insn 188
changing reg in insn 193
changing reg in insn 194
changing reg in insn 198
changing reg in insn 199
changing reg in insn 201
changing reg in insn 202
changing reg in insn 205
changing reg in insn 206
changing reg in insn 209
changing reg in insn 210
changing reg in insn 210
changing reg in insn 211
changing reg in insn 215
changing reg in insn 216
changing reg in insn 213
changing reg in insn 214
changing reg in insn 218
changing reg in insn 219
changing reg in insn 228
changing reg in insn 229
changing reg in insn 231
changing reg in insn 232
changing reg in insn 235
changing reg in insn 236
changing reg in insn 239
changing reg in insn 240
changing reg in insn 240
changing reg in insn 241
changing reg in insn 242
changing reg in insn 243
changing reg in insn 245
changing reg in insn 246
changing reg in insn 249
changing reg in insn 250
changing reg in insn 251
changing reg in insn 252
changing reg in insn 254
changing reg in insn 255
changing reg in insn 257
changing reg in insn 258
changing reg in insn 259
changing reg in insn 260
changing reg in insn 261
changing reg in insn 262
changing reg in insn 265
changing reg in insn 266
changing reg in insn 267
changing reg in insn 268
changing reg in insn 269
changing reg in insn 272
changing reg in insn 273
changing reg in insn 274
changing reg in insn 276
changing reg in insn 275
changing reg in insn 276
changing reg in insn 277
changing reg in insn 280
changing reg in insn 286
changing reg in insn 287
changing reg in insn 288
changing reg in insn 289
changing reg in insn 292
changing reg in insn 293
changing reg in insn 297
changing reg in insn 298
changing reg in insn 296
changing reg in insn 300
changing reg in insn 301
changing reg in insn 299
changing reg in insn 300
changing reg in insn 302
changing reg in insn 303
changing reg in insn 309
changing reg in insn 310
changing reg in insn 312
changing reg in insn 313
changing reg in insn 316
changing reg in insn 317
changing reg in insn 324
changing reg in insn 325
changing reg in insn 327
changing reg in insn 328
changing reg in insn 331
changing reg in insn 333
changing reg in insn 332
changing reg in insn 333
changing reg in insn 336
changing reg in insn 337
changing reg in insn 343
changing reg in insn 344
changing reg in insn 346
changing reg in insn 347
changing reg in insn 350
changing reg in insn 351
changing reg in insn 352
changing reg in insn 353
changing reg in insn 359
changing reg in insn 360
changing reg in insn 362
changing reg in insn 363
changing reg in insn 366
changing reg in insn 368
changing reg in insn 367
changing reg in insn 368
changing reg in insn 371
changing reg in insn 372
changing reg in insn 378
changing reg in insn 379
changing reg in insn 381
changing reg in insn 382
changing reg in insn 385
changing reg in insn 386
changing reg in insn 390
changing reg in insn 391
changing reg in insn 393
changing reg in insn 394
changing reg in insn 397
changing reg in insn 399
changing reg in insn 398
changing reg in insn 399
changing reg in insn 408
changing reg in insn 409
changing reg in insn 411
changing reg in insn 412
changing reg in insn 415
changing reg in insn 416
changing reg in insn 417
changing reg in insn 418
changing reg in insn 420
changing reg in insn 421
changing reg in insn 424
changing reg in insn 425
changing reg in insn 428
changing reg in insn 429
changing reg in insn 438
changing reg in insn 439
changing reg in insn 447
changing reg in insn 448
changing reg in insn 445
changing reg in insn 446
changing reg in insn 471
changing reg in insn 472
changing reg in insn 479
changing reg in insn 480
changing reg in insn 484
changing reg in insn 485
changing reg in insn 487
changing reg in insn 488
changing reg in insn 491
changing reg in insn 492
changing reg in insn 493
changing reg in insn 494
changing reg in insn 496
changing reg in insn 497
changing reg in insn 500
changing reg in insn 501
changing reg in insn 502
changing reg in insn 503
changing reg in insn 506
changing reg in insn 507
changing reg in insn 509
changing reg in insn 510
changing reg in insn 513
changing reg in insn 514
changing reg in insn 514
changing reg in insn 515
changing reg in insn 516
changing reg in insn 517
changing reg in insn 519
changing reg in insn 520
changing reg in insn 523
changing reg in insn 524
changing reg in insn 527
changing reg in insn 528
changing reg in insn 528
changing reg in insn 529
changing reg in insn 530
changing reg in insn 531
changing reg in insn 533
changing reg in insn 534
changing reg in insn 537
changing reg in insn 538
changing reg in insn 545
changing reg in insn 546
changing reg in insn 552
changing reg in insn 553
changing reg in insn 555
changing reg in insn 556
changing reg in insn 559
changing reg in insn 560
changing reg in insn 561
changing reg in insn 562
changing reg in insn 564
changing reg in insn 565
changing reg in insn 569
changing reg in insn 570
changing reg in insn 575
changing reg in insn 576
changing reg in insn 578
changing reg in insn 579
changing reg in insn 582
changing reg in insn 583
changing reg in insn 584
changing reg in insn 585
changing reg in insn 587
changing reg in insn 588
changing reg in insn 592
changing reg in insn 593
changing reg in insn 598
changing reg in insn 599
changing reg in insn 601
changing reg in insn 602
changing reg in insn 605
changing reg in insn 606
changing reg in insn 621
changing reg in insn 626
changing reg in insn 622
changing reg in insn 628
changing reg in insn 623
changing reg in insn 629
changing reg in insn 637
changing reg in insn 638
changing reg in insn 645
changing reg in insn 646
changing reg in insn 650
changing reg in insn 651
changing reg in insn 653
changing reg in insn 654
changing reg in insn 657
changing reg in insn 658
changing reg in insn 662
changing reg in insn 663
changing reg in insn 665
changing reg in insn 666
changing reg in insn 669
changing reg in insn 670
changing reg in insn 670
changing reg in insn 671
changing reg in insn 672
changing reg in insn 673
changing reg in insn 675
changing reg in insn 676
changing reg in insn 679
changing reg in insn 680
changing reg in insn 680
changing reg in insn 681
changing reg in insn 682
changing reg in insn 683
changing reg in insn 685
changing reg in insn 686
changing reg in insn 689
changing reg in insn 690
changing reg in insn 691
changing reg in insn 692
changing reg in insn 693
changing reg in insn 694
changing reg in insn 695
changing reg in insn 696
changing reg in insn 698
changing reg in insn 699
changing reg in insn 702
changing reg in insn 703
changing reg in insn 706
changing reg in insn 707
changing reg in insn 707
changing reg in insn 708
changing reg in insn 709
changing reg in insn 710
changing reg in insn 712
changing reg in insn 713
changing reg in insn 716
changing reg in insn 717
changing reg in insn 717
changing reg in insn 718
changing reg in insn 719
changing reg in insn 720
changing reg in insn 721
changing reg in insn 722
changing reg in insn 723
changing reg in insn 724
changing reg in insn 725
changing reg in insn 726
changing reg in insn 727
changing reg in insn 728
changing reg in insn 734
changing reg in insn 735
changing reg in insn 739
changing reg in insn 740
changing reg in insn 742
changing reg in insn 743
changing reg in insn 746
changing reg in insn 747
changing reg in insn 748
changing reg in insn 749
changing reg in insn 751
changing reg in insn 752
changing reg in insn 754
changing reg in insn 755
changing reg in insn 756
changing reg in insn 757
changing reg in insn 758
changing reg in insn 759
changing reg in insn 761
changing reg in insn 762
changing reg in insn 765
changing reg in insn 766
changing reg in insn 769
changing reg in insn 770
changing reg in insn 771
changing reg in insn 772
changing reg in insn 774
changing reg in insn 775
changing reg in insn 778
changing reg in insn 779
changing reg in insn 782
changing reg in insn 783
changing reg in insn 784
changing reg in insn 785
changing reg in insn 786
changing reg in insn 790
changing reg in insn 791
changing reg in insn 792
changing reg in insn 793
changing reg in insn 797
changing reg in insn 798
changing reg in insn 799
changing reg in insn 800
changing reg in insn 802
changing reg in insn 803
changing reg in insn 806
changing reg in insn 807
changing reg in insn 810
changing reg in insn 811
changing reg in insn 812
changing reg in insn 813
changing reg in insn 816
changing reg in insn 817
changing reg in insn 815
changing reg in insn 816
changing reg in insn 818
changing reg in insn 819
changing reg in insn 821
changing reg in insn 822
changing reg in insn 825
changing reg in insn 826
changing reg in insn 829
changing reg in insn 830
changing reg in insn 838
changing reg in insn 839
changing reg in insn 837
changing reg in insn 838
changing reg in insn 842
changing reg in insn 843
changing reg in insn 850
changing reg in insn 851
changing reg in insn 857
changing reg in insn 858
changing reg in insn 860
changing reg in insn 861
changing reg in insn 864
changing reg in insn 865
changing reg in insn 866
changing reg in insn 867
changing reg in insn 869
changing reg in insn 870
changing reg in insn 874
changing reg in insn 875
changing reg in insn 880
changing reg in insn 881
changing reg in insn 884
changing reg in insn 885
changing reg in insn 882
changing reg in insn 884
changing reg in insn 883
changing reg in insn 884
changing reg in insn 890
changing reg in insn 891
changing reg in insn 895
changing reg in insn 896
changing reg in insn 898
changing reg in insn 899
changing reg in insn 902
changing reg in insn 903
changing reg in insn 904
changing reg in insn 905
changing reg in insn 907
changing reg in insn 908
changing reg in insn 910
changing reg in insn 911
changing reg in insn 912
changing reg in insn 913
changing reg in insn 914
changing reg in insn 915
changing reg in insn 918
changing reg in insn 919
changing reg in insn 921
changing reg in insn 922
changing reg in insn 925
changing reg in insn 926
changing reg in insn 929
changing reg in insn 930
changing reg in insn 931
changing reg in insn 932
changing reg in insn 934
changing reg in insn 935
changing reg in insn 938
changing reg in insn 939
changing reg in insn 942
changing reg in insn 943
changing reg in insn 944
changing reg in insn 945
changing reg in insn 946
changing reg in insn 950
changing reg in insn 951
changing reg in insn 952
changing reg in insn 953
changing reg in insn 957
changing reg in insn 958
changing reg in insn 959
changing reg in insn 960
changing reg in insn 966
changing reg in insn 967
changing reg in insn 969
changing reg in insn 970
changing reg in insn 973
changing reg in insn 974
changing reg in insn 977
changing reg in insn 978
changing reg in insn 979
changing reg in insn 980
changing reg in insn 982
changing reg in insn 983
changing reg in insn 986
changing reg in insn 987
changing reg in insn 990
changing reg in insn 991
changing reg in insn 992
changing reg in insn 993
changing reg in insn 994
changing reg in insn 998
changing reg in insn 999
changing reg in insn 1000
changing reg in insn 1001
changing reg in insn 1005
changing reg in insn 1006
changing reg in insn 1009
changing reg in insn 1010
changing reg in insn 1012
changing reg in insn 1013
changing reg in insn 1016
changing reg in insn 1017
changing reg in insn 1020
changing reg in insn 1021
changing reg in insn 1022
changing reg in insn 1023
changing reg in insn 1026
changing reg in insn 1027
changing reg in insn 1025
changing reg in insn 1026
changing reg in insn 1029
changing reg in insn 1030
changing reg in insn 1028
changing reg in insn 1029
changing reg in insn 1033
changing reg in insn 1034
changing reg in insn 1041
changing reg in insn 1042
changing reg in insn 1049
changing reg in insn 1050
changing reg in insn 1057
changing reg in insn 1058
changing reg in insn 1060
changing reg in insn 1061
changing reg in insn 1064
changing reg in insn 1065
changing reg in insn 1068
changing reg in insn 1069
changing reg in insn 1070
changing reg in insn 1071
changing reg in insn 1083
changing reg in insn 1084
changing reg in insn 1086
changing reg in insn 1087
changing reg in insn 1090
changing reg in insn 1091
changing reg in insn 1094
changing reg in insn 1095
changing reg in insn 1112
changing reg in insn 1113
changing reg in insn 1115
changing reg in insn 1116
changing reg in insn 1119
changing reg in insn 1120
changing reg in insn 1121
changing reg in insn 1122
changing reg in insn 1124
changing reg in insn 1125
changing reg in insn 1127
changing reg in insn 1128
changing reg in insn 1129
changing reg in insn 1130
changing reg in insn 1131
changing reg in insn 1132
changing reg in insn 1134
changing reg in insn 1135
changing reg in insn 1138
changing reg in insn 1139
changing reg in insn 1142
changing reg in insn 1143
changing reg in insn 1144
changing reg in insn 1145
changing reg in insn 1147
changing reg in insn 1148
changing reg in insn 1151
changing reg in insn 1152
changing reg in insn 1155
changing reg in insn 1156
changing reg in insn 1157
changing reg in insn 1158
changing reg in insn 1159
changing reg in insn 1163
changing reg in insn 1164
changing reg in insn 1165
changing reg in insn 1166
changing reg in insn 1170
changing reg in insn 1171
changing reg in insn 1172
changing reg in insn 1173
changing reg in insn 1175
changing reg in insn 1176
changing reg in insn 1179
changing reg in insn 1180
changing reg in insn 1183
changing reg in insn 1184
changing reg in insn 1185
changing reg in insn 1186
changing reg in insn 1189
changing reg in insn 1190
changing reg in insn 1188
changing reg in insn 1189
changing reg in insn 1191
changing reg in insn 1192
changing reg in insn 1196
changing reg in insn 1197
changing reg in insn 1199
changing reg in insn 1200
changing reg in insn 1203
changing reg in insn 1204
changing reg in insn 1207
changing reg in insn 1208
changing reg in insn 1216
changing reg in insn 1217
changing reg in insn 1215
changing reg in insn 1216
changing reg in insn 1223
changing reg in insn 1224
changing reg in insn 1226
changing reg in insn 1227
changing reg in insn 1230
changing reg in insn 1231
changing reg in insn 1234
changing reg in insn 1235
changing reg in insn 1236
changing reg in insn 1237
changing reg in insn 1244
changing reg in insn 1245
changing reg in insn 1243
changing reg in insn 1244
changing reg in insn 1254
changing reg in insn 1255
changing reg in insn 1258
changing reg in insn 1259
changing reg in insn 1265
changing reg in insn 1266
changing reg in insn 1273
changing reg in insn 1274
changing reg in insn 1276
changing reg in insn 1277
changing reg in insn 1280
changing reg in insn 1281
changing reg in insn 1282
changing reg in insn 1283
changing reg in insn 1285
changing reg in insn 1286
changing reg in insn 1290
changing reg in insn 1291
changing reg in insn 1296
changing reg in insn 1297
changing reg in insn 1303
changing reg in insn 1304
changing reg in insn 1306
changing reg in insn 1307
changing reg in insn 1310
changing reg in insn 1311
changing reg in insn 1312
changing reg in insn 1313
changing reg in insn 1315
changing reg in insn 1316
changing reg in insn 1320
changing reg in insn 1321
changing reg in insn 1326
changing reg in insn 1327
changing reg in insn 1329
changing reg in insn 1330
changing reg in insn 1333
changing reg in insn 1334
changing reg in insn 1335
changing reg in insn 1336
changing reg in insn 1338
changing reg in insn 1339
changing reg in insn 1343
changing reg in insn 1344
deleting insn with uid = 1510.
deleting insn with uid = 282.
deleting insn with uid = 284.
deleting insn with uid = 294.
deleting insn with uid = 628.
deleting insn with uid = 788.
deleting insn with uid = 1512.
deleting insn with uid = 794.
deleting insn with uid = 796.
deleting insn with uid = 948.
deleting insn with uid = 1515.
deleting insn with uid = 954.
deleting insn with uid = 956.
deleting insn with uid = 996.
deleting insn with uid = 1518.
deleting insn with uid = 1002.
deleting insn with uid = 1004.
deleting insn with uid = 1161.
deleting insn with uid = 1521.
deleting insn with uid = 1167.
deleting insn with uid = 1169.
starting the processing of deferred insns
ending the processing of deferred insns
verify found no changes in insn with uid = 285.
verify found no changes in insn with uid = 631.
verify found no changes in insn with uid = 795.
verify found no changes in insn with uid = 955.
verify found no changes in insn with uid = 1003.
verify found no changes in insn with uid = 1168.


calwxt

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 []
;;  hardware regs used 	
;;  regular block artificial uses 	 6 [bp] 7 [sp]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0 [ax] 1 [dx] 2 [cx] 3 [bx] 4 [si] 5 [di] 6 [bp] 7 [sp] 17 [flags] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 37 [r8] 38 [r9] 41 [r12]
;;  ref usage 	r0={422d,415u} r1={244d,238u} r2={57d,51u} r3={2d,2u} r4={12d,6u} r5={8d,2u} r6={1d,502u} r7={1d,113u} r8={6d} r9={6d} r10={6d} r11={6d} r12={6d} r13={6d} r14={6d} r15={6d} r17={334d,61u} r18={6d} r19={6d} r20={1d,1u} r21={129d,130u} r22={63d,57u} r23={18d,11u} r24={7d} r25={7d} r26={7d} r27={7d} r28={7d} r29={6d} r30={6d} r31={6d} r32={6d} r33={6d} r34={6d} r35={6d} r36={6d} r37={8d,2u} r38={8d,2u} r39={6d} r40={6d} r41={2d,2u} r45={6d} r46={6d} r47={6d} r48={6d} r49={6d} r50={6d} r51={6d} r52={6d} r53={6d} r54={6d} r55={6d} r56={6d} r57={6d} r58={6d} r59={6d} r60={6d} r61={6d} r62={6d} r63={6d} r64={6d} r65={6d} r66={6d} r67={6d} r68={6d} r69={6d} r70={6d} r71={6d} r72={6d} r73={6d} r74={6d} r75={6d} r76={6d} r77={6d} r78={6d} r79={6d} r80={6d} 
;;    total ref usage 3276{1681d,1595u,0e} in 1149{1143 regular + 6 call} insns.
(note 1 0 9 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, maybe hot
;;  prev block 0, next block 3, flags: (RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  use 	 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 37 [r8] 38 [r9]
;; lr  def 	 607 608
(note 9 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 9 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 t+0 S8 A64])
        (reg:DI 5 di [ t ])) "CALWXT.f":1 85 {*movdi_internal}
     (nil))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 q+0 S8 A64])
        (reg:DI 4 si [ q ])) "CALWXT.f":1 85 {*movdi_internal}
     (nil))
(insn 4 3 5 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 res+0 S8 A64])
        (reg:DI 1 dx [ res ])) "CALWXT.f":1 85 {*movdi_internal}
     (nil))
(insn 5 4 6 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [3 pd+0 S8 A64])
        (reg:DI 2 cx [ pd ])) "CALWXT.f":1 85 {*movdi_internal}
     (nil))
(insn 6 5 7 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [3 htm+0 S8 A64])
        (reg:DI 37 r8 [ htm ])) "CALWXT.f":1 85 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [4 lmh+0 S8 A64])
        (reg:DI 38 r9 [ lmh ])) "CALWXT.f":1 85 {*movdi_internal}
     (nil))
(note 8 7 11 2 NOTE_INSN_FUNCTION_BEG)
(insn 11 8 12 2 (set (reg:SI 1 dx [orig:607 _570 ] [607])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f2c99be8900 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CALWXT.f":60 86 {*movsi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:SI 0 ax [orig:608 _571 ] [608])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f2c99be8900 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CALWXT.f":60 86 {*movsi_internal}
     (nil))
(insn 13 12 73 2 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:607 _570 ] [607])) "CALWXT.f":60 86 {*movsi_internal}
     (nil))
;;  succ:       3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 608

;; basic block 3, loop depth 0, maybe hot
;;  prev block 2, next block 4, flags: (RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;;              7 [always] 
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 608
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 608
;; lr  def 	 17 [flags] 609 632
(code_label 73 13 14 3 5 (nil) [1 uses])
(note 14 73 15 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 15 14 16 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:608 _571 ] [608]))) "CALWXT.f":60 11 {*cmpsi_1}
     (nil))
(insn 16 15 17 3 (set (reg:QI 1 dx [632])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALWXT.f":60 678 {*setcc_qi}
     (nil))
(insn 17 16 18 3 (set (reg:SI 1 dx [orig:609 _573 ] [609])
        (zero_extend:SI (reg:QI 1 dx [632]))) "CALWXT.f":60 140 {*zero_extendqisi2}
     (nil))
(insn 18 17 19 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:609 _573 ] [609])
            (const_int 0 [0]))) "CALWXT.f":60 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 19 18 20 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1464)
            (pc))) "CALWXT.f":60 682 {*jcc}
     (nil)
 -> 1464)
;;  succ:       94
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 608

;; basic block 4, loop depth 0, maybe hot
;;  prev block 3, next block 5, flags: (RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 608
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 20 19 21 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 21 20 67 4 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CALWXT.f":61 86 {*movsi_internal}
     (nil))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 608

;; basic block 5, loop depth 0, maybe hot
;;  prev block 4, next block 6, flags: (RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              6 [always] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 608
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 610 633
(code_label 67 21 22 5 4 (nil) [1 uses])
(note 22 67 23 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 23 22 24 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALWXT.f":61 11 {*cmpsi_1}
     (nil))
(insn 24 23 25 5 (set (reg:QI 1 dx [633])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALWXT.f":61 678 {*setcc_qi}
     (nil))
(insn 25 24 26 5 (set (reg:SI 1 dx [orig:610 _575 ] [610])
        (zero_extend:SI (reg:QI 1 dx [633]))) "CALWXT.f":61 140 {*zero_extendqisi2}
     (nil))
(insn 26 25 27 5 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:610 _575 ] [610])
            (const_int 0 [0]))) "CALWXT.f":61 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 27 26 28 5 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1467)
            (pc))) "CALWXT.f":61 682 {*jcc}
     (nil)
 -> 1467)
;;  succ:       95
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 608

;; basic block 6, loop depth 0, maybe hot
;;  prev block 5, next block 95, flags: (RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 608
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 89 90 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 634 635 636 637 638 639 640 641 642 643 644 645
(note 28 27 29 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 29 28 30 6 (set (reg:SI 1 dx [634])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":62 86 {*movsi_internal}
     (nil))
(insn 30 29 31 6 (set (reg:DI 1 dx [orig:87 _1 ] [87])
        (sign_extend:DI (reg:SI 1 dx [634]))) "CALWXT.f":62 149 {*extendsidi2_rex64}
     (nil))
(insn 31 30 32 6 (parallel [
            (set (reg:DI 2 cx [orig:88 _2 ] [88])
                (mult:DI (reg:DI 1 dx [orig:87 _1 ] [87])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":62 349 {*muldi3_1}
     (nil))
(insn 32 31 33 6 (set (reg:SI 1 dx [635])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":62 86 {*movsi_internal}
     (nil))
(insn 33 32 34 6 (set (reg:DI 1 dx [orig:89 _3 ] [89])
        (sign_extend:DI (reg:SI 1 dx [635]))) "CALWXT.f":62 149 {*extendsidi2_rex64}
     (nil))
(insn 34 33 35 6 (parallel [
            (set (reg:DI 1 dx [orig:90 _4 ] [90])
                (plus:DI (reg:DI 1 dx [orig:89 _3 ] [89])
                    (reg:DI 2 cx [orig:88 _2 ] [88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":62 222 {*adddi_1}
     (nil))
(insn 35 34 36 6 (parallel [
            (set (reg:DI 2 cx [orig:91 _5 ] [91])
                (plus:DI (reg:DI 1 dx [orig:90 _4 ] [90])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":62 222 {*adddi_1}
     (nil))
(insn 36 35 37 6 (set (reg/f:DI 1 dx [636])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [4 iwx+0 S8 A64])) "CALWXT.f":62 85 {*movdi_internal}
     (nil))
(insn 37 36 38 6 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:91 _5 ] [91])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [636])) [2 *iwx_576(D) S4 A32])
        (const_int 0 [0])) "CALWXT.f":62 86 {*movsi_internal}
     (nil))
(insn 38 37 39 6 (set (reg:SI 1 dx [637])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":63 86 {*movsi_internal}
     (nil))
(insn 39 38 40 6 (set (reg:DI 1 dx [orig:92 _6 ] [92])
        (sign_extend:DI (reg:SI 1 dx [637]))) "CALWXT.f":63 149 {*extendsidi2_rex64}
     (nil))
(insn 40 39 41 6 (parallel [
            (set (reg:DI 2 cx [orig:93 _7 ] [93])
                (mult:DI (reg:DI 1 dx [orig:92 _6 ] [92])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":63 349 {*muldi3_1}
     (nil))
(insn 41 40 42 6 (set (reg:SI 1 dx [638])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":63 86 {*movsi_internal}
     (nil))
(insn 42 41 43 6 (set (reg:DI 1 dx [orig:94 _8 ] [94])
        (sign_extend:DI (reg:SI 1 dx [638]))) "CALWXT.f":63 149 {*extendsidi2_rex64}
     (nil))
(insn 43 42 44 6 (parallel [
            (set (reg:DI 1 dx [orig:95 _9 ] [95])
                (plus:DI (reg:DI 1 dx [orig:94 _8 ] [94])
                    (reg:DI 2 cx [orig:93 _7 ] [93])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":63 222 {*adddi_1}
     (nil))
(insn 44 43 45 6 (parallel [
            (set (reg:DI 2 cx [orig:96 _10 ] [96])
                (plus:DI (reg:DI 1 dx [orig:95 _9 ] [95])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":63 222 {*adddi_1}
     (nil))
(insn 45 44 46 6 (set (reg/f:DI 1 dx [639])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -152 [0xffffffffffffff68])) [3 res+0 S8 A64])) "CALWXT.f":63 85 {*movdi_internal}
     (nil))
(insn 46 45 47 6 (set (reg:SF 22 xmm1 [orig:97 _11 ] [97])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:96 _10 ] [96])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [639])) [1 *res_578(D) S4 A32])) "CALWXT.f":63 131 {*movsf_internal}
     (nil))
(insn 47 46 48 6 (set (reg:SI 1 dx [640])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":63 86 {*movsi_internal}
     (nil))
(insn 48 47 49 6 (set (reg:DI 1 dx [orig:98 _12 ] [98])
        (sign_extend:DI (reg:SI 1 dx [640]))) "CALWXT.f":63 149 {*extendsidi2_rex64}
     (nil))
(insn 49 48 50 6 (parallel [
            (set (reg:DI 2 cx [orig:99 _13 ] [99])
                (mult:DI (reg:DI 1 dx [orig:98 _12 ] [98])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":63 349 {*muldi3_1}
     (nil))
(insn 50 49 51 6 (set (reg:SI 1 dx [641])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":63 86 {*movsi_internal}
     (nil))
(insn 51 50 52 6 (set (reg:DI 1 dx [orig:100 _14 ] [100])
        (sign_extend:DI (reg:SI 1 dx [641]))) "CALWXT.f":63 149 {*extendsidi2_rex64}
     (nil))
(insn 52 51 53 6 (parallel [
            (set (reg:DI 1 dx [orig:101 _15 ] [101])
                (plus:DI (reg:DI 1 dx [orig:100 _14 ] [100])
                    (reg:DI 2 cx [orig:99 _13 ] [99])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":63 222 {*adddi_1}
     (nil))
(insn 53 52 54 6 (parallel [
            (set (reg:DI 2 cx [orig:102 _16 ] [102])
                (plus:DI (reg:DI 1 dx [orig:101 _15 ] [101])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":63 222 {*adddi_1}
     (nil))
(insn 54 53 55 6 (set (reg/f:DI 1 dx [642])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [3 pd+0 S8 A64])) "CALWXT.f":63 85 {*movdi_internal}
     (nil))
(insn 55 54 56 6 (set (reg:SF 21 xmm0 [orig:103 _17 ] [103])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:102 _16 ] [102])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [642])) [1 *pd_579(D) S4 A32])) "CALWXT.f":63 131 {*movsf_internal}
     (nil))
(insn 56 55 57 6 (set (reg:SI 1 dx [643])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":63 86 {*movsi_internal}
     (nil))
(insn 57 56 58 6 (set (reg:DI 1 dx [orig:104 _18 ] [104])
        (sign_extend:DI (reg:SI 1 dx [643]))) "CALWXT.f":63 149 {*extendsidi2_rex64}
     (nil))
(insn 58 57 59 6 (parallel [
            (set (reg:DI 2 cx [orig:105 _19 ] [105])
                (mult:DI (reg:DI 1 dx [orig:104 _18 ] [104])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":63 349 {*muldi3_1}
     (nil))
(insn 59 58 60 6 (set (reg:SI 1 dx [644])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":63 86 {*movsi_internal}
     (nil))
(insn 60 59 61 6 (set (reg:DI 1 dx [orig:106 _20 ] [106])
        (sign_extend:DI (reg:SI 1 dx [644]))) "CALWXT.f":63 149 {*extendsidi2_rex64}
     (nil))
(insn 61 60 62 6 (parallel [
            (set (reg:DI 1 dx [orig:107 _21 ] [107])
                (plus:DI (reg:DI 1 dx [orig:106 _20 ] [106])
                    (reg:DI 2 cx [orig:105 _19 ] [105])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":63 222 {*adddi_1}
     (nil))
(insn 62 61 63 6 (parallel [
            (set (reg:DI 2 cx [orig:108 _22 ] [108])
                (plus:DI (reg:DI 1 dx [orig:107 _21 ] [107])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":63 222 {*adddi_1}
     (nil))
(insn 63 62 64 6 (set (reg:SF 21 xmm0 [orig:109 _23 ] [109])
        (mult:SF (reg:SF 21 xmm0 [orig:103 _17 ] [103])
            (reg:SF 22 xmm1 [orig:97 _11 ] [97]))) "CALWXT.f":63 838 {*fop_sf_comm}
     (nil))
(insn 64 63 65 6 (set (reg/f:DI 1 dx [645])
        (symbol_ref:DI ("pdsl.3887") [flags 0x202]  <var_decl 0x7f2c99beb990 pdsl>)) "CALWXT.f":63 85 {*movdi_internal}
     (nil))
(insn 65 64 66 6 (set (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:108 _22 ] [108])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [645])) [1 pdsl S4 A32])
        (reg:SF 21 xmm0 [orig:109 _23 ] [109])) "CALWXT.f":63 131 {*movsf_internal}
     (nil))
(insn 66 65 1423 6 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":61 221 {*addsi_1}
     (nil))
(jump_insn 1423 66 1424 6 (set (pc)
        (label_ref 67)) "CALWXT.f":61 683 {jump}
     (nil)
 -> 67)
;;  succ:       5 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 608

(barrier 1424 1423 1467)
;; basic block 95, loop depth 0, maybe hot
;;  prev block 6, next block 7, flags: (RTL, MODIFIED)
;;  pred:       5
;; bb 95 artificial_defs: { }
;; bb 95 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 608
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1467 1424 1466 95 92 (nil) [1 uses])
(note 1466 1467 1468 95 [bb 95] NOTE_INSN_BASIC_BLOCK)
(insn 1468 1466 70 95 (const_int 0 [0]) "CALWXT.f":63 718 {nop}
     (nil))
;;  succ:       7 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 608

;; basic block 7, loop depth 0, maybe hot
;;  prev block 95, next block 94, flags: (RTL, MODIFIED)
;;  pred:       95 [always]  (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 608
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 70 1468 71 7 3 (nil) [0 uses])
(note 71 70 72 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 1425 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":60 221 {*addsi_1}
     (nil))
(jump_insn 1425 72 1426 7 (set (pc)
        (label_ref 73)) "CALWXT.f":60 683 {jump}
     (nil)
 -> 73)
;;  succ:       3 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 608

(barrier 1426 1425 1464)
;; basic block 94, loop depth 0, maybe hot
;;  prev block 7, next block 8, flags: (RTL, MODIFIED)
;;  pred:       3
;; bb 94 artificial_defs: { }
;; bb 94 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1464 1426 1463 94 91 (nil) [1 uses])
(note 1463 1464 1465 94 [bb 94] NOTE_INSN_BASIC_BLOCK)
(insn 1465 1463 76 94 (const_int 0 [0]) "CALWXT.f":61 718 {nop}
     (nil))
;;  succ:       8 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, maybe hot
;;  prev block 94, next block 9, flags: (RTL, MODIFIED)
;;  pred:       94 [always]  (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 611 612
(code_label 76 1465 77 8 2 (nil) [0 uses])
(note 77 76 78 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 8 (set (reg:SI 0 ax [orig:611 _583 ] [611])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f2c99be8900 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CALWXT.f":69 86 {*movsi_internal}
     (nil))
(insn 79 78 80 8 (set (reg:SI 3 bx [orig:612 _584 ] [612])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f2c99be8900 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CALWXT.f":69 86 {*movsi_internal}
     (nil))
(insn 80 79 461 8 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
        (reg:SI 0 ax [orig:611 _583 ] [611])) "CALWXT.f":69 86 {*movsi_internal}
     (nil))
;;  succ:       9 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612

;; basic block 9, loop depth 0, maybe hot
;;  prev block 8, next block 10, flags: (RTL, MODIFIED)
;;  pred:       8 (FALLTHRU)
;;              35 [always] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  def 	 17 [flags] 613 646
(code_label 461 80 81 9 24 (nil) [1 uses])
(note 81 461 82 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 82 81 83 9 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
            (reg:SI 3 bx [orig:612 _584 ] [612]))) "CALWXT.f":69 11 {*cmpsi_1}
     (nil))
(insn 83 82 84 9 (set (reg:QI 0 ax [646])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALWXT.f":69 678 {*setcc_qi}
     (nil))
(insn 84 83 85 9 (set (reg:SI 0 ax [orig:613 _586 ] [613])
        (zero_extend:SI (reg:QI 0 ax [646]))) "CALWXT.f":69 140 {*zero_extendqisi2}
     (nil))
(insn 85 84 86 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:613 _586 ] [613])
            (const_int 0 [0]))) "CALWXT.f":69 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 86 85 87 9 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1470)
            (pc))) "CALWXT.f":69 682 {*jcc}
     (nil)
 -> 1470)
;;  succ:       96
;;              10 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612

;; basic block 10, loop depth 0, maybe hot
;;  prev block 9, next block 11, flags: (RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 87 86 88 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 88 87 455 10 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CALWXT.f":70 86 {*movsi_internal}
     (nil))
;;  succ:       11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612

;; basic block 11, loop depth 0, maybe hot
;;  prev block 10, next block 12, flags: (RTL, MODIFIED)
;;  pred:       10 (FALLTHRU)
;;              34 [always] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 614 647
(code_label 455 88 89 11 23 (nil) [1 uses])
(note 89 455 90 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 90 89 91 11 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALWXT.f":70 11 {*cmpsi_1}
     (nil))
(insn 91 90 92 11 (set (reg:QI 0 ax [647])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALWXT.f":70 678 {*setcc_qi}
     (nil))
(insn 92 91 93 11 (set (reg:SI 0 ax [orig:614 _588 ] [614])
        (zero_extend:SI (reg:QI 0 ax [647]))) "CALWXT.f":70 140 {*zero_extendqisi2}
     (nil))
(insn 93 92 94 11 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:614 _588 ] [614])
            (const_int 0 [0]))) "CALWXT.f":70 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 94 93 95 11 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1473)
            (pc))) "CALWXT.f":70 682 {*jcc}
     (nil)
 -> 1473)
;;  succ:       97
;;              12 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612

;; basic block 12, loop depth 0, maybe hot
;;  prev block 11, next block 13, flags: (RTL, MODIFIED)
;;  pred:       11 (FALLTHRU)
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 110 111 112 113 114 115 116 117 118 119 120 648 649 650 651 652 653 654 655
(note 95 94 96 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
(insn 96 95 97 12 (set (reg:SI 0 ax [648])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":71 86 {*movsi_internal}
     (nil))
(insn 97 96 98 12 (set (reg:DI 0 ax [orig:110 _24 ] [110])
        (sign_extend:DI (reg:SI 0 ax [648]))) "CALWXT.f":71 149 {*extendsidi2_rex64}
     (nil))
(insn 98 97 99 12 (parallel [
            (set (reg:DI 1 dx [orig:111 _25 ] [111])
                (mult:DI (reg:DI 0 ax [orig:110 _24 ] [110])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":71 349 {*muldi3_1}
     (nil))
(insn 99 98 100 12 (set (reg:SI 0 ax [649])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":71 86 {*movsi_internal}
     (nil))
(insn 100 99 101 12 (set (reg:DI 0 ax [orig:112 _26 ] [112])
        (sign_extend:DI (reg:SI 0 ax [649]))) "CALWXT.f":71 149 {*extendsidi2_rex64}
     (nil))
(insn 101 100 102 12 (parallel [
            (set (reg:DI 0 ax [orig:113 _27 ] [113])
                (plus:DI (reg:DI 0 ax [orig:112 _26 ] [112])
                    (reg:DI 1 dx [orig:111 _25 ] [111])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":71 222 {*adddi_1}
     (nil))
(insn 102 101 103 12 (parallel [
            (set (reg:DI 1 dx [orig:114 _28 ] [114])
                (plus:DI (reg:DI 0 ax [orig:113 _27 ] [113])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":71 222 {*adddi_1}
     (nil))
(insn 103 102 104 12 (set (reg/f:DI 0 ax [650])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [4 lmh+0 S8 A64])) "CALWXT.f":71 85 {*movdi_internal}
     (nil))
(insn 104 103 105 12 (set (reg:SI 0 ax [651])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:114 _28 ] [114])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [650])) [2 *lmh_589(D) S4 A32])) "CALWXT.f":71 86 {*movsi_internal}
     (nil))
(insn 105 104 106 12 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 lmhk+0 S4 A32])
        (reg:SI 0 ax [651])) "CALWXT.f":71 86 {*movsi_internal}
     (nil))
(insn 106 105 107 12 (set (reg:SI 0 ax [652])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":75 86 {*movsi_internal}
     (nil))
(insn 107 106 108 12 (set (reg:DI 0 ax [orig:115 _29 ] [115])
        (sign_extend:DI (reg:SI 0 ax [652]))) "CALWXT.f":75 149 {*extendsidi2_rex64}
     (nil))
(insn 108 107 109 12 (parallel [
            (set (reg:DI 1 dx [orig:116 _30 ] [116])
                (mult:DI (reg:DI 0 ax [orig:115 _29 ] [115])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":75 349 {*muldi3_1}
     (nil))
(insn 109 108 110 12 (set (reg:SI 0 ax [653])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":75 86 {*movsi_internal}
     (nil))
(insn 110 109 111 12 (set (reg:DI 0 ax [orig:117 _31 ] [117])
        (sign_extend:DI (reg:SI 0 ax [653]))) "CALWXT.f":75 149 {*extendsidi2_rex64}
     (nil))
(insn 111 110 112 12 (parallel [
            (set (reg:DI 0 ax [orig:118 _32 ] [118])
                (plus:DI (reg:DI 0 ax [orig:117 _31 ] [117])
                    (reg:DI 1 dx [orig:116 _30 ] [116])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":75 222 {*adddi_1}
     (nil))
(insn 112 111 113 12 (parallel [
            (set (reg:DI 1 dx [orig:119 _33 ] [119])
                (plus:DI (reg:DI 0 ax [orig:118 _32 ] [118])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":75 222 {*adddi_1}
     (nil))
(insn 113 112 114 12 (set (reg/f:DI 0 ax [654])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 prec+0 S8 A64])) "CALWXT.f":75 85 {*movdi_internal}
     (nil))
(insn 114 113 115 12 (set (reg:SF 22 xmm1 [orig:120 _34 ] [120])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:119 _33 ] [119])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [654])) [1 *prec_591(D) S4 A32])) "CALWXT.f":75 131 {*movsf_internal}
     (nil))
(insn 115 114 116 12 (set (reg:SF 21 xmm0 [655])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALWXT.f":75 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.99999998990097083151340484619140625e-6 [0x0.8637bdp-17])
        (nil)))
(insn 116 115 117 12 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [655])
            (reg:SF 22 xmm1 [orig:120 _34 ] [120]))) "CALWXT.f":75 53 {*cmpisf}
     (nil))
(jump_insn 117 116 118 12 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 452)
            (pc))) "CALWXT.f":75 682 {*jcc}
     (nil)
 -> 452)
;;  succ:       34
;;              13 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612

;; basic block 13, loop depth 0, maybe hot
;;  prev block 12, next block 14, flags: (RTL, MODIFIED)
;;  pred:       12 (FALLTHRU)
;; bb 13 artificial_defs: { }
;; bb 13 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 121 122 123 124 125 126 127 656 657 658 659 660 661
(note 118 117 119 13 [bb 13] NOTE_INSN_BASIC_BLOCK)
(insn 119 118 120 13 (set (reg:SI 0 ax [656])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":81 86 {*movsi_internal}
     (nil))
(insn 120 119 121 13 (set (reg:DI 0 ax [orig:121 _35 ] [121])
        (sign_extend:DI (reg:SI 0 ax [656]))) "CALWXT.f":81 149 {*extendsidi2_rex64}
     (nil))
(insn 121 120 122 13 (parallel [
            (set (reg:DI 1 dx [orig:122 _36 ] [122])
                (mult:DI (reg:DI 0 ax [orig:121 _35 ] [121])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":81 349 {*muldi3_1}
     (nil))
(insn 122 121 123 13 (set (reg:SI 0 ax [657])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":81 86 {*movsi_internal}
     (nil))
(insn 123 122 124 13 (set (reg:DI 0 ax [orig:123 _37 ] [123])
        (sign_extend:DI (reg:SI 0 ax [657]))) "CALWXT.f":81 149 {*extendsidi2_rex64}
     (nil))
(insn 124 123 125 13 (parallel [
            (set (reg:DI 0 ax [orig:124 _38 ] [124])
                (plus:DI (reg:DI 0 ax [orig:123 _37 ] [123])
                    (reg:DI 1 dx [orig:122 _36 ] [122])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":81 222 {*adddi_1}
     (nil))
(insn 125 124 126 13 (parallel [
            (set (reg:DI 1 dx [orig:125 _39 ] [125])
                (plus:DI (reg:DI 0 ax [orig:124 _38 ] [124])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":81 222 {*adddi_1}
     (nil))
(insn 126 125 127 13 (set (reg/f:DI 0 ax [658])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [3 pd+0 S8 A64])) "CALWXT.f":81 85 {*movdi_internal}
     (nil))
(insn 127 126 128 13 (set (reg:SF 22 xmm1 [orig:126 _40 ] [126])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:125 _39 ] [125])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [658])) [1 *pd_579(D) S4 A32])) "CALWXT.f":81 131 {*movsf_internal}
     (nil))
(insn 128 127 129 13 (set (reg/f:DI 0 ax [659])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [5 pt+0 S8 A64])) "CALWXT.f":81 85 {*movdi_internal}
     (nil))
(insn 129 128 130 13 (set (reg:SF 21 xmm0 [orig:127 _41 ] [127])
        (mem:SF (reg/f:DI 0 ax [659]) [1 *pt_592(D)+0 S4 A32])) "CALWXT.f":81 131 {*movsf_internal}
     (nil))
(insn 130 129 131 13 (set (reg:SF 21 xmm0 [660])
        (plus:SF (reg:SF 21 xmm0 [orig:127 _41 ] [127])
            (reg:SF 22 xmm1 [orig:126 _40 ] [126]))) "CALWXT.f":81 838 {*fop_sf_comm}
     (nil))
(insn 131 130 132 13 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 psfck+0 S4 A32])
        (reg:SF 21 xmm0 [660])) "CALWXT.f":81 131 {*movsf_internal}
     (nil))
(insn 132 131 133 13 (set (reg:SF 21 xmm0 [661])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALWXT.f":82 131 {*movsf_internal}
     (nil))
(insn 133 132 449 13 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 tdchk+0 S4 A32])
        (reg:SF 21 xmm0 [661])) "CALWXT.f":82 131 {*movsf_internal}
     (nil))
;;  succ:       14 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612

;; basic block 14, loop depth 0, maybe hot
;;  prev block 13, next block 15, flags: (RTL, MODIFIED)
;;  pred:       13 (FALLTHRU)
;;              33 [always] 
;; bb 14 artificial_defs: { }
;; bb 14 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 615 662 663 664 665 666 667 668 669 670 671 672 673 674 675 676 677 678 679
(code_label 449 133 134 14 22 (nil) [1 uses])
(note 134 449 135 14 [bb 14] NOTE_INSN_BASIC_BLOCK)
(insn 135 134 136 14 (set (reg:SI 0 ax [662])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 lmhk+0 S4 A32])) "CALWXT.f":83 86 {*movsi_internal}
     (nil))
(insn 136 135 137 14 (set (reg:DI 0 ax [orig:128 _42 ] [128])
        (sign_extend:DI (reg:SI 0 ax [662]))) "CALWXT.f":83 149 {*extendsidi2_rex64}
     (nil))
(insn 137 136 138 14 (parallel [
            (set (reg:DI 1 dx [orig:129 _43 ] [129])
                (mult:DI (reg:DI 0 ax [orig:128 _42 ] [128])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":83 349 {*muldi3_1}
     (nil))
(insn 138 137 139 14 (set (reg:SI 0 ax [663])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":83 86 {*movsi_internal}
     (nil))
(insn 139 138 140 14 (set (reg:DI 0 ax [orig:130 _44 ] [130])
        (sign_extend:DI (reg:SI 0 ax [663]))) "CALWXT.f":83 149 {*extendsidi2_rex64}
     (nil))
(insn 140 139 141 14 (parallel [
            (set (reg:DI 0 ax [orig:131 _45 ] [131])
                (mult:DI (reg:DI 0 ax [orig:130 _44 ] [130])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":83 349 {*muldi3_1}
     (nil))
(insn 141 140 142 14 (parallel [
            (set (reg:DI 1 dx [orig:132 _46 ] [132])
                (plus:DI (reg:DI 1 dx [orig:129 _43 ] [129])
                    (reg:DI 0 ax [orig:131 _45 ] [131])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":83 222 {*adddi_1}
     (nil))
(insn 142 141 143 14 (set (reg:SI 0 ax [664])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":83 86 {*movsi_internal}
     (nil))
(insn 143 142 144 14 (set (reg:DI 0 ax [orig:133 _47 ] [133])
        (sign_extend:DI (reg:SI 0 ax [664]))) "CALWXT.f":83 149 {*extendsidi2_rex64}
     (nil))
(insn 144 143 145 14 (parallel [
            (set (reg:DI 0 ax [orig:134 _48 ] [134])
                (plus:DI (reg:DI 0 ax [orig:133 _47 ] [133])
                    (reg:DI 1 dx [orig:132 _46 ] [132])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":83 222 {*adddi_1}
     (nil))
(insn 145 144 146 14 (parallel [
            (set (reg:DI 2 cx [orig:135 _49 ] [135])
                (plus:DI (reg:DI 0 ax [orig:134 _48 ] [134])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":83 222 {*adddi_1}
     (nil))
(insn 146 145 147 14 (set (reg:SI 0 ax [665])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":83 86 {*movsi_internal}
     (nil))
(insn 147 146 148 14 (set (reg:DI 0 ax [orig:136 _50 ] [136])
        (sign_extend:DI (reg:SI 0 ax [665]))) "CALWXT.f":83 149 {*extendsidi2_rex64}
     (nil))
(insn 148 147 149 14 (parallel [
            (set (reg:DI 1 dx [orig:137 _51 ] [137])
                (mult:DI (reg:DI 0 ax [orig:136 _50 ] [136])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":83 349 {*muldi3_1}
     (nil))
(insn 149 148 150 14 (set (reg:SI 0 ax [666])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":83 86 {*movsi_internal}
     (nil))
(insn 150 149 151 14 (set (reg:DI 0 ax [orig:138 _52 ] [138])
        (sign_extend:DI (reg:SI 0 ax [666]))) "CALWXT.f":83 149 {*extendsidi2_rex64}
     (nil))
(insn 151 150 152 14 (parallel [
            (set (reg:DI 0 ax [orig:139 _53 ] [139])
                (plus:DI (reg:DI 0 ax [orig:138 _52 ] [138])
                    (reg:DI 1 dx [orig:137 _51 ] [137])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":83 222 {*adddi_1}
     (nil))
(insn 152 151 153 14 (parallel [
            (set (reg:DI 1 dx [orig:140 _54 ] [140])
                (plus:DI (reg:DI 0 ax [orig:139 _53 ] [139])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":83 222 {*adddi_1}
     (nil))
(insn 153 152 154 14 (set (reg/f:DI 0 ax [667])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 t+0 S8 A64])) "CALWXT.f":83 85 {*movdi_internal}
     (nil))
(insn 154 153 155 14 (set (reg:SF 21 xmm0 [orig:141 _55 ] [141])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:135 _49 ] [135])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [667])) [1 *t_595(D) S4 A32])) "CALWXT.f":83 131 {*movsf_internal}
     (nil))
(insn 155 154 156 14 (set (reg/f:DI 0 ax [668])
        (symbol_ref:DI ("tcold.3897") [flags 0x202]  <var_decl 0x7f2c99bebea0 tcold>)) "CALWXT.f":83 85 {*movdi_internal}
     (nil))
(insn 156 155 157 14 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:140 _54 ] [140])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [668])) [1 tcold S4 A32])
        (reg:SF 21 xmm0 [orig:141 _55 ] [141])) "CALWXT.f":83 131 {*movsf_internal}
     (nil))
(insn 157 156 158 14 (set (reg:SI 0 ax [669])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 lmhk+0 S4 A32])) "CALWXT.f":84 86 {*movsi_internal}
     (nil))
(insn 158 157 159 14 (set (reg:DI 0 ax [orig:142 _56 ] [142])
        (sign_extend:DI (reg:SI 0 ax [669]))) "CALWXT.f":84 149 {*extendsidi2_rex64}
     (nil))
(insn 159 158 160 14 (parallel [
            (set (reg:DI 1 dx [orig:143 _57 ] [143])
                (mult:DI (reg:DI 0 ax [orig:142 _56 ] [142])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":84 349 {*muldi3_1}
     (nil))
(insn 160 159 161 14 (set (reg:SI 0 ax [670])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":84 86 {*movsi_internal}
     (nil))
(insn 161 160 162 14 (set (reg:DI 0 ax [orig:144 _58 ] [144])
        (sign_extend:DI (reg:SI 0 ax [670]))) "CALWXT.f":84 149 {*extendsidi2_rex64}
     (nil))
(insn 162 161 163 14 (parallel [
            (set (reg:DI 0 ax [orig:145 _59 ] [145])
                (mult:DI (reg:DI 0 ax [orig:144 _58 ] [144])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":84 349 {*muldi3_1}
     (nil))
(insn 163 162 164 14 (parallel [
            (set (reg:DI 1 dx [orig:146 _60 ] [146])
                (plus:DI (reg:DI 1 dx [orig:143 _57 ] [143])
                    (reg:DI 0 ax [orig:145 _59 ] [145])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":84 222 {*adddi_1}
     (nil))
(insn 164 163 165 14 (set (reg:SI 0 ax [671])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":84 86 {*movsi_internal}
     (nil))
(insn 165 164 166 14 (set (reg:DI 0 ax [orig:147 _61 ] [147])
        (sign_extend:DI (reg:SI 0 ax [671]))) "CALWXT.f":84 149 {*extendsidi2_rex64}
     (nil))
(insn 166 165 167 14 (parallel [
            (set (reg:DI 0 ax [orig:148 _62 ] [148])
                (plus:DI (reg:DI 0 ax [orig:147 _61 ] [147])
                    (reg:DI 1 dx [orig:146 _60 ] [146])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":84 222 {*adddi_1}
     (nil))
(insn 167 166 168 14 (parallel [
            (set (reg:DI 2 cx [orig:149 _63 ] [149])
                (plus:DI (reg:DI 0 ax [orig:148 _62 ] [148])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":84 222 {*adddi_1}
     (nil))
(insn 168 167 169 14 (set (reg:SI 0 ax [672])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":84 86 {*movsi_internal}
     (nil))
(insn 169 168 170 14 (set (reg:DI 0 ax [orig:150 _64 ] [150])
        (sign_extend:DI (reg:SI 0 ax [672]))) "CALWXT.f":84 149 {*extendsidi2_rex64}
     (nil))
(insn 170 169 171 14 (parallel [
            (set (reg:DI 1 dx [orig:151 _65 ] [151])
                (mult:DI (reg:DI 0 ax [orig:150 _64 ] [150])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":84 349 {*muldi3_1}
     (nil))
(insn 171 170 172 14 (set (reg:SI 0 ax [673])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":84 86 {*movsi_internal}
     (nil))
(insn 172 171 173 14 (set (reg:DI 0 ax [orig:152 _66 ] [152])
        (sign_extend:DI (reg:SI 0 ax [673]))) "CALWXT.f":84 149 {*extendsidi2_rex64}
     (nil))
(insn 173 172 174 14 (parallel [
            (set (reg:DI 0 ax [orig:153 _67 ] [153])
                (plus:DI (reg:DI 0 ax [orig:152 _66 ] [152])
                    (reg:DI 1 dx [orig:151 _65 ] [151])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":84 222 {*adddi_1}
     (nil))
(insn 174 173 175 14 (parallel [
            (set (reg:DI 1 dx [orig:154 _68 ] [154])
                (plus:DI (reg:DI 0 ax [orig:153 _67 ] [153])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":84 222 {*adddi_1}
     (nil))
(insn 175 174 176 14 (set (reg/f:DI 0 ax [674])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 t+0 S8 A64])) "CALWXT.f":84 85 {*movdi_internal}
     (nil))
(insn 176 175 177 14 (set (reg:SF 21 xmm0 [orig:155 _69 ] [155])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:149 _63 ] [149])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [674])) [1 *t_595(D) S4 A32])) "CALWXT.f":84 131 {*movsf_internal}
     (nil))
(insn 177 176 178 14 (set (reg/f:DI 0 ax [675])
        (symbol_ref:DI ("twarm.3904") [flags 0x202]  <var_decl 0x7f2c99bec240 twarm>)) "CALWXT.f":84 85 {*movdi_internal}
     (nil))
(insn 178 177 179 14 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:154 _68 ] [154])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [675])) [1 twarm S4 A32])
        (reg:SF 21 xmm0 [orig:155 _69 ] [155])) "CALWXT.f":84 131 {*movsf_internal}
     (nil))
(insn 179 178 180 14 (set (reg:SI 0 ax [676])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":85 86 {*movsi_internal}
     (nil))
(insn 180 179 181 14 (set (reg:DI 0 ax [orig:156 _70 ] [156])
        (sign_extend:DI (reg:SI 0 ax [676]))) "CALWXT.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 181 180 182 14 (parallel [
            (set (reg:DI 1 dx [orig:157 _71 ] [157])
                (mult:DI (reg:DI 0 ax [orig:156 _70 ] [156])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":85 349 {*muldi3_1}
     (nil))
(insn 182 181 183 14 (set (reg:SI 0 ax [677])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":85 86 {*movsi_internal}
     (nil))
(insn 183 182 184 14 (set (reg:DI 0 ax [orig:158 _72 ] [158])
        (sign_extend:DI (reg:SI 0 ax [677]))) "CALWXT.f":85 149 {*extendsidi2_rex64}
     (nil))
(insn 184 183 185 14 (parallel [
            (set (reg:DI 0 ax [orig:159 _73 ] [159])
                (plus:DI (reg:DI 0 ax [orig:158 _72 ] [158])
                    (reg:DI 1 dx [orig:157 _71 ] [157])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":85 222 {*adddi_1}
     (nil))
(insn 185 184 186 14 (parallel [
            (set (reg:DI 2 cx [orig:160 _74 ] [160])
                (plus:DI (reg:DI 0 ax [orig:159 _73 ] [159])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":85 222 {*adddi_1}
     (nil))
(insn 186 185 187 14 (set (reg/f:DI 1 dx [678])
        (symbol_ref:DI ("licee.3884") [flags 0x202]  <var_decl 0x7f2c99beb870 licee>)) "CALWXT.f":85 85 {*movdi_internal}
     (nil))
(insn 187 186 188 14 (set (reg:SI 0 ax [679])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 lmhk+0 S4 A32])) "CALWXT.f":85 86 {*movsi_internal}
     (nil))
(insn 188 187 189 14 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:160 _74 ] [160])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [678])) [2 licee S4 A32])
        (reg:SI 0 ax [679])) "CALWXT.f":85 86 {*movsi_internal}
     (nil))
(insn 189 188 190 14 (set (reg:SI 41 r12 [orig:615 _599 ] [615])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 lmhk+0 S4 A32])) "CALWXT.f":87 86 {*movsi_internal}
     (nil))
(insn 190 189 403 14 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
        (const_int 1 [0x1])) "CALWXT.f":87 86 {*movsi_internal}
     (nil))
;;  succ:       15 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615

;; basic block 15, loop depth 0, maybe hot
;;  prev block 14, next block 16, flags: (RTL, MODIFIED)
;;  pred:       14 (FALLTHRU)
;;              29 [always] 
;; bb 15 artificial_defs: { }
;; bb 15 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 615
;; lr  def 	 17 [flags] 616 680
(code_label 403 190 191 15 19 (nil) [1 uses])
(note 191 403 192 15 [bb 15] NOTE_INSN_BASIC_BLOCK)
(insn 192 191 193 15 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
            (reg:SI 41 r12 [orig:615 _599 ] [615]))) "CALWXT.f":87 11 {*cmpsi_1}
     (nil))
(insn 193 192 194 15 (set (reg:QI 0 ax [680])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALWXT.f":87 678 {*setcc_qi}
     (nil))
(insn 194 193 195 15 (set (reg:SI 0 ax [orig:616 _601 ] [616])
        (zero_extend:SI (reg:QI 0 ax [680]))) "CALWXT.f":87 140 {*zero_extendqisi2}
     (nil))
(insn 195 194 196 15 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:616 _601 ] [616])
            (const_int 0 [0]))) "CALWXT.f":87 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 196 195 197 15 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1476)
            (pc))) "CALWXT.f":87 682 {*jcc}
     (nil)
 -> 1476)
;;  succ:       98
;;              16 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615

;; basic block 16, loop depth 0, maybe hot
;;  prev block 15, next block 17, flags: (RTL, MODIFIED)
;;  pred:       15 (FALLTHRU)
;; bb 16 artificial_defs: { }
;; bb 16 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 161 162 163 164 165 166 167 168 169 170 171 606 681 682 683 684 685 686 687 688
(note 197 196 198 16 [bb 16] NOTE_INSN_BASIC_BLOCK)
(insn 198 197 199 16 (set (reg:SI 0 ax [681])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":88 86 {*movsi_internal}
     (nil))
(insn 199 198 200 16 (set (reg:DI 0 ax [orig:161 _75 ] [161])
        (sign_extend:DI (reg:SI 0 ax [681]))) "CALWXT.f":88 149 {*extendsidi2_rex64}
     (nil))
(insn 200 199 201 16 (parallel [
            (set (reg:DI 1 dx [orig:162 _76 ] [162])
                (mult:DI (reg:DI 0 ax [orig:161 _75 ] [161])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":88 349 {*muldi3_1}
     (nil))
(insn 201 200 202 16 (set (reg:SI 0 ax [682])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":88 86 {*movsi_internal}
     (nil))
(insn 202 201 203 16 (set (reg:DI 0 ax [orig:163 _77 ] [163])
        (sign_extend:DI (reg:SI 0 ax [682]))) "CALWXT.f":88 149 {*extendsidi2_rex64}
     (nil))
(insn 203 202 204 16 (parallel [
            (set (reg:DI 0 ax [orig:164 _78 ] [164])
                (mult:DI (reg:DI 0 ax [orig:163 _77 ] [163])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":88 349 {*muldi3_1}
     (nil))
(insn 204 203 205 16 (parallel [
            (set (reg:DI 1 dx [orig:165 _79 ] [165])
                (plus:DI (reg:DI 1 dx [orig:162 _76 ] [162])
                    (reg:DI 0 ax [orig:164 _78 ] [164])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":88 222 {*adddi_1}
     (nil))
(insn 205 204 206 16 (set (reg:SI 0 ax [683])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":88 86 {*movsi_internal}
     (nil))
(insn 206 205 207 16 (set (reg:DI 0 ax [orig:166 _80 ] [166])
        (sign_extend:DI (reg:SI 0 ax [683]))) "CALWXT.f":88 149 {*extendsidi2_rex64}
     (nil))
(insn 207 206 208 16 (parallel [
            (set (reg:DI 0 ax [orig:167 _81 ] [167])
                (plus:DI (reg:DI 0 ax [orig:166 _80 ] [166])
                    (reg:DI 1 dx [orig:165 _79 ] [165])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":88 222 {*adddi_1}
     (nil))
(insn 208 207 209 16 (parallel [
            (set (reg:DI 1 dx [orig:168 _82 ] [168])
                (plus:DI (reg:DI 0 ax [orig:167 _81 ] [167])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":88 222 {*adddi_1}
     (nil))
(insn 209 208 210 16 (set (reg/f:DI 0 ax [684])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 q+0 S8 A64])) "CALWXT.f":88 85 {*movdi_internal}
     (nil))
(insn 210 209 211 16 (set (reg:SF 21 xmm0 [685])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:168 _82 ] [168])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [684])) [1 *q_602(D) S4 A32])) "CALWXT.f":88 131 {*movsf_internal}
     (nil))
(insn 211 210 212 16 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 qkl+0 S4 A32])
        (reg:SF 21 xmm0 [685])) "CALWXT.f":88 131 {*movsf_internal}
     (nil))
(insn 212 211 213 16 (set (reg:SF 21 xmm0 [orig:606 M.0_551 ] [606])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC2") [flags 0x2]) [0  S4 A32])) "CALWXT.f":89 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 9.999999960041972002500187954865396022796630859375e-13 [0x0.8cbcccp-39])
        (nil)))
(insn 213 212 214 16 (set (reg:SF 22 xmm1 [687])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 qkl+0 S4 A32])) "CALWXT.f":89 131 {*movsf_internal}
     (nil))
(insn 214 213 215 16 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 22 xmm1 [687])
            (reg:SF 21 xmm0 [orig:606 M.0_551 ] [606]))) "CALWXT.f":89 53 {*cmpisf}
     (nil))
(insn 215 214 216 16 (set (reg:QI 0 ax [686])
        (gt:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALWXT.f":89 678 {*setcc_qi}
     (nil))
(insn 216 215 217 16 (set (reg:SI 1 dx [orig:169 _83 ] [169])
        (zero_extend:SI (reg:QI 0 ax [686]))) "CALWXT.f":89 140 {*zero_extendqisi2}
     (nil))
(insn 217 216 218 16 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:606 M.0_551 ] [606])
                    (reg:SF 21 xmm0 [orig:606 M.0_551 ] [606]))
            ] UNSPEC_NOTRAP)) "CALWXT.f":89 54 {*cmpiusf}
     (nil))
(insn 218 217 219 16 (set (reg:QI 0 ax [688])
        (unordered:QI (reg:CCFP 17 flags)
            (const_int 0 [0]))) "CALWXT.f":89 678 {*setcc_qi}
     (nil))
(insn 219 218 220 16 (set (reg:SI 0 ax [orig:170 _84 ] [170])
        (zero_extend:SI (reg:QI 0 ax [688]))) "CALWXT.f":89 140 {*zero_extendqisi2}
     (nil))
(insn 220 219 221 16 (parallel [
            (set (reg:SI 0 ax [orig:171 _85 ] [171])
                (ior:SI (reg:SI 0 ax [orig:170 _84 ] [170])
                    (reg:SI 1 dx [orig:169 _83 ] [169])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":89 450 {*iorsi_1}
     (nil))
(insn 221 220 222 16 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:171 _85 ] [171])
            (const_int 0 [0]))) "CALWXT.f":89 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 222 221 223 16 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 225)
            (pc))) "CALWXT.f":89 682 {*jcc}
     (nil)
 -> 225)
;;  succ:       17 (FALLTHRU)
;;              18
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 606 612 615

;; basic block 17, loop depth 0, maybe hot
;;  prev block 16, next block 18, flags: (RTL, MODIFIED)
;;  pred:       16 (FALLTHRU)
;; bb 17 artificial_defs: { }
;; bb 17 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 606
(note 223 222 224 17 [bb 17] NOTE_INSN_BASIC_BLOCK)
(insn 224 223 225 17 (set (reg:SF 21 xmm0 [orig:606 M.0_551 ] [606])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 qkl+0 S4 A32])) "CALWXT.f":89 131 {*movsf_internal}
     (nil))
;;  succ:       18 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 606 612 615

;; basic block 18, loop depth 0, maybe hot
;;  prev block 17, next block 19, flags: (RTL, MODIFIED)
;;  pred:       16
;;              17 (FALLTHRU)
;; bb 18 artificial_defs: { }
;; bb 18 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 606 612 615
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 606
;; lr  def 	 17 [flags] 172 173 174 175 176 177 178 179 180 181 182 183 184 185 186 187 188 189 190 689 690 691 692 693 694 695 696 697 698 699 700 701
(code_label 225 224 226 18 10 (nil) [1 uses])
(note 226 225 227 18 [bb 18] NOTE_INSN_BASIC_BLOCK)
(insn 227 226 228 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 qkl+0 S4 A32])
        (reg:SF 21 xmm0 [orig:606 M.0_551 ] [606])) "CALWXT.f":89 131 {*movsf_internal}
     (nil))
(insn 228 227 229 18 (set (reg:SI 0 ax [689])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":90 86 {*movsi_internal}
     (nil))
(insn 229 228 230 18 (set (reg:DI 0 ax [orig:172 _86 ] [172])
        (sign_extend:DI (reg:SI 0 ax [689]))) "CALWXT.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 230 229 231 18 (parallel [
            (set (reg:DI 1 dx [orig:173 _87 ] [173])
                (mult:DI (reg:DI 0 ax [orig:172 _86 ] [172])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":90 349 {*muldi3_1}
     (nil))
(insn 231 230 232 18 (set (reg:SI 0 ax [690])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":90 86 {*movsi_internal}
     (nil))
(insn 232 231 233 18 (set (reg:DI 0 ax [orig:174 _88 ] [174])
        (sign_extend:DI (reg:SI 0 ax [690]))) "CALWXT.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 233 232 234 18 (parallel [
            (set (reg:DI 0 ax [orig:175 _89 ] [175])
                (mult:DI (reg:DI 0 ax [orig:174 _88 ] [174])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":90 349 {*muldi3_1}
     (nil))
(insn 234 233 235 18 (parallel [
            (set (reg:DI 1 dx [orig:176 _90 ] [176])
                (plus:DI (reg:DI 1 dx [orig:173 _87 ] [173])
                    (reg:DI 0 ax [orig:175 _89 ] [175])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":90 222 {*adddi_1}
     (nil))
(insn 235 234 236 18 (set (reg:SI 0 ax [691])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":90 86 {*movsi_internal}
     (nil))
(insn 236 235 237 18 (set (reg:DI 0 ax [orig:177 _91 ] [177])
        (sign_extend:DI (reg:SI 0 ax [691]))) "CALWXT.f":90 149 {*extendsidi2_rex64}
     (nil))
(insn 237 236 238 18 (parallel [
            (set (reg:DI 0 ax [orig:178 _92 ] [178])
                (plus:DI (reg:DI 0 ax [orig:177 _91 ] [177])
                    (reg:DI 1 dx [orig:176 _90 ] [176])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":90 222 {*adddi_1}
     (nil))
(insn 238 237 239 18 (parallel [
            (set (reg:DI 1 dx [orig:179 _93 ] [179])
                (plus:DI (reg:DI 0 ax [orig:178 _92 ] [178])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":90 222 {*adddi_1}
     (nil))
(insn 239 238 240 18 (set (reg/f:DI 0 ax [692])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 t+0 S8 A64])) "CALWXT.f":90 85 {*movdi_internal}
     (nil))
(insn 240 239 241 18 (set (reg:SF 21 xmm0 [693])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:179 _93 ] [179])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [692])) [1 *t_595(D) S4 A32])) "CALWXT.f":90 131 {*movsf_internal}
     (nil))
(insn 241 240 242 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 tkl+0 S4 A32])
        (reg:SF 21 xmm0 [693])) "CALWXT.f":90 131 {*movsf_internal}
     (nil))
(insn 242 241 243 18 (set (reg:SI 0 ax [694])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":91 86 {*movsi_internal}
     (nil))
(insn 243 242 244 18 (set (reg:DI 0 ax [orig:180 _94 ] [180])
        (sign_extend:DI (reg:SI 0 ax [694]))) "CALWXT.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 244 243 245 18 (parallel [
            (set (reg:DI 1 dx [orig:181 _95 ] [181])
                (mult:DI (reg:DI 0 ax [orig:180 _94 ] [180])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":91 349 {*muldi3_1}
     (nil))
(insn 245 244 246 18 (set (reg:SI 0 ax [695])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":91 86 {*movsi_internal}
     (nil))
(insn 246 245 247 18 (set (reg:DI 0 ax [orig:182 _96 ] [182])
        (sign_extend:DI (reg:SI 0 ax [695]))) "CALWXT.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 247 246 248 18 (parallel [
            (set (reg:DI 0 ax [orig:183 _97 ] [183])
                (plus:DI (reg:DI 0 ax [orig:182 _96 ] [182])
                    (reg:DI 1 dx [orig:181 _95 ] [181])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":91 222 {*adddi_1}
     (nil))
(insn 248 247 249 18 (parallel [
            (set (reg:DI 1 dx [orig:184 _98 ] [184])
                (plus:DI (reg:DI 0 ax [orig:183 _97 ] [183])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":91 222 {*adddi_1}
     (nil))
(insn 249 248 250 18 (set (reg/f:DI 0 ax [696])
        (symbol_ref:DI ("pdsl.3887") [flags 0x202]  <var_decl 0x7f2c99beb990 pdsl>)) "CALWXT.f":91 85 {*movdi_internal}
     (nil))
(insn 250 249 251 18 (set (reg:SF 22 xmm1 [orig:185 _99 ] [185])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:184 _98 ] [184])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [696])) [1 pdsl S4 A32])) "CALWXT.f":91 131 {*movsf_internal}
     (nil))
(insn 251 250 252 18 (set (reg:SI 0 ax [697])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":91 86 {*movsi_internal}
     (nil))
(insn 252 251 253 18 (set (reg:DI 0 ax [orig:186 _100 ] [186])
        (sign_extend:DI (reg:SI 0 ax [697]))) "CALWXT.f":91 149 {*extendsidi2_rex64}
     (nil))
(insn 253 252 254 18 (parallel [
            (set (reg:DI 1 dx [orig:187 _101 ] [187])
                (plus:DI (reg:DI 0 ax [orig:186 _100 ] [186])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":91 222 {*adddi_1}
     (nil))
(insn 254 253 255 18 (set (reg/f:DI 0 ax [698])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 32 [0x20])) [3 aeta+0 S8 A64])) "CALWXT.f":91 85 {*movdi_internal}
     (nil))
(insn 255 254 256 18 (set (reg:SF 21 xmm0 [orig:188 _102 ] [188])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:187 _101 ] [187])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [698])) [1 *aeta_608(D) S4 A32])) "CALWXT.f":91 131 {*movsf_internal}
     (nil))
(insn 256 255 257 18 (set (reg:SF 22 xmm1 [orig:189 _103 ] [189])
        (mult:SF (reg:SF 22 xmm1 [orig:185 _99 ] [185])
            (reg:SF 21 xmm0 [orig:188 _102 ] [188]))) "CALWXT.f":91 838 {*fop_sf_comm}
     (nil))
(insn 257 256 258 18 (set (reg/f:DI 0 ax [699])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [5 pt+0 S8 A64])) "CALWXT.f":91 85 {*movdi_internal}
     (nil))
(insn 258 257 259 18 (set (reg:SF 21 xmm0 [orig:190 _104 ] [190])
        (mem:SF (reg/f:DI 0 ax [699]) [1 *pt_592(D)+0 S4 A32])) "CALWXT.f":91 131 {*movsf_internal}
     (nil))
(insn 259 258 260 18 (set (reg:SF 21 xmm0 [700])
        (plus:SF (reg:SF 21 xmm0 [orig:190 _104 ] [190])
            (reg:SF 22 xmm1 [orig:189 _103 ] [189]))) "CALWXT.f":91 838 {*fop_sf_comm}
     (nil))
(insn 260 259 261 18 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 pkl+0 S4 A32])
        (reg:SF 21 xmm0 [700])) "CALWXT.f":91 131 {*movsf_internal}
     (nil))
(insn 261 260 262 18 (set (reg:SF 21 xmm0 [701])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC3") [flags 0x2]) [0  S4 A32])) "CALWXT.f":96 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e+4 [0x0.c35p+16])
        (nil)))
(insn 262 261 263 18 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [701])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])) [1 pkl+0 S4 A32]))) "CALWXT.f":96 53 {*cmpisf}
     (nil))
(jump_insn 263 262 264 18 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 400)
            (pc))) "CALWXT.f":96 682 {*jcc}
     (nil)
 -> 400)
;;  succ:       29
;;              19 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615

;; basic block 19, loop depth 0, maybe hot
;;  prev block 18, next block 20, flags: (RTL, MODIFIED)
;;  pred:       18 (FALLTHRU)
;; bb 19 artificial_defs: { }
;; bb 19 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 191 702 703 704
(note 264 263 265 19 [bb 19] NOTE_INSN_BASIC_BLOCK)
(insn 265 264 266 19 (set (reg:SF 21 xmm0 [702])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 psfck+0 S4 A32])) "CALWXT.f":96 131 {*movsf_internal}
     (nil))
(insn 266 265 267 19 (set (reg:SF 22 xmm1 [703])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC4") [flags 0x2]) [0  S4 A32])) "CALWXT.f":96 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 7.0e+3 [0x0.dacp+13])
        (nil)))
(insn 267 266 1511 19 (set (reg:SF 21 xmm0 [702])
        (minus:SF (reg:SF 21 xmm0 [702])
            (reg:SF 22 xmm1 [703]))) "CALWXT.f":96 841 {*fop_sf_1}
     (nil))
(insn 1511 267 268 19 (set (reg:SF 22 xmm1 [orig:191 _105 ] [191])
        (reg:SF 21 xmm0 [702])) "CALWXT.f":96 131 {*movsf_internal}
     (nil))
(insn 268 1511 269 19 (set (reg:SF 21 xmm0 [704])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -84 [0xffffffffffffffac])) [1 pkl+0 S4 A32])) "CALWXT.f":96 131 {*movsf_internal}
     (nil))
(insn 269 268 270 19 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [704])
            (reg:SF 22 xmm1 [orig:191 _105 ] [191]))) "CALWXT.f":96 53 {*cmpisf}
     (nil))
(jump_insn 270 269 271 19 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 400)
            (pc))) "CALWXT.f":96 682 {*jcc}
     (nil)
 -> 400)
;;  succ:       29
;;              20 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615

;; basic block 20, loop depth 0, maybe hot
;;  prev block 19, next block 21, flags: (RTL, MODIFIED)
;;  pred:       19 (FALLTHRU)
;; bb 20 artificial_defs: { }
;; bb 20 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 192 193 194 195 196 197 198 199 200 201 202 203 705 706 707 708 709 710 711 712 713 714 715 716 717 718
(note 271 270 272 20 [bb 20] NOTE_INSN_BASIC_BLOCK)
(insn 272 271 273 20 (set (reg:SF 21 xmm0 [705])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 qkl+0 S4 A32])) "CALWXT.f":97 131 {*movsf_internal}
     (nil))
(insn 273 272 274 20 (set (reg:SF 21 xmm0 [orig:192 _106 ] [192])
        (mult:SF (reg:SF 21 xmm0 [705])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -84 [0xffffffffffffffac])) [1 pkl+0 S4 A32]))) "CALWXT.f":97 838 {*fop_sf_comm}
     (nil))
(insn 274 273 275 20 (set (reg:SF 23 xmm2 [706])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -76 [0xffffffffffffffb4])) [1 qkl+0 S4 A32])) "CALWXT.f":97 131 {*movsf_internal}
     (nil))
(insn 275 274 276 20 (set (reg:SF 22 xmm1 [707])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC5") [flags 0x2]) [0  S4 A32])) "CALWXT.f":97 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.779999911785125732421875e-1 [0x0.c18937p-1])
        (nil)))
(insn 276 275 277 20 (set (reg:SF 23 xmm2 [orig:193 _107 ] [193])
        (mult:SF (reg:SF 23 xmm2 [706])
            (reg:SF 22 xmm1 [707]))) "CALWXT.f":97 838 {*fop_sf_comm}
     (nil))
(insn 277 276 278 20 (set (reg:SF 22 xmm1 [708])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC6") [flags 0x2]) [0  S4 A32])) "CALWXT.f":97 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.219999790191650390625e-1 [0x0.9f3b64p+0])
        (nil)))
(insn 278 277 279 20 (set (reg:SF 22 xmm1 [orig:194 _108 ] [194])
        (plus:SF (reg:SF 22 xmm1 [708])
            (reg:SF 23 xmm2 [orig:193 _107 ] [193]))) "CALWXT.f":97 838 {*fop_sf_comm}
     (nil))
(insn 279 278 280 20 (set (reg:SF 23 xmm2 [orig:195 _109 ] [195])
        (reg:SF 22 xmm1 [orig:194 _108 ] [194])) "CALWXT.f":97 131 {*movsf_internal}
     (nil))
(insn 280 279 281 20 (set (reg:SF 22 xmm1 [709])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC7") [flags 0x2]) [0  S4 A32])) "CALWXT.f":97 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.107800006866455078125e+0 [0x0.c37319p+3])
        (nil)))
(insn 281 280 283 20 (set (reg:SF 22 xmm1 [orig:196 _110 ] [196])
        (mult:SF (reg:SF 22 xmm1 [709])
            (reg:SF 23 xmm2 [orig:195 _109 ] [195]))) "CALWXT.f":97 838 {*fop_sf_comm}
     (nil))
(insn 283 281 285 20 (set (reg:SF 21 xmm0 [orig:198 _112 ] [198])
        (div:SF (reg:SF 21 xmm0 [orig:192 _106 ] [192])
            (reg:SF 22 xmm1 [orig:197 _111 ] [197]))) "CALWXT.f":97 841 {*fop_sf_1}
     (nil))
(call_insn/u 285 283 286 20 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f2c99a54900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALWXT.f":97 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(insn 286 285 287 20 (set (reg:SF 0 ax [710])
        (reg:SF 21 xmm0)) "CALWXT.f":97 131 {*movsf_internal}
     (nil))
(insn 287 286 288 20 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 a+0 S4 A32])
        (reg:SF 0 ax [710])) "CALWXT.f":97 131 {*movsf_internal}
     (nil))
(insn 288 287 289 20 (set (reg:SF 22 xmm1 [711])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -88 [0xffffffffffffffa8])) [1 a+0 S4 A32])) "CALWXT.f":98 131 {*movsf_internal}
     (nil))
(insn 289 288 290 20 (set (reg:SF 21 xmm0 [712])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC8") [flags 0x2]) [0  S4 A32])) "CALWXT.f":98 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.373000030517578125e+2 [0x0.ed4ccdp+8])
        (nil)))
(insn 290 289 291 20 (set (reg:SF 21 xmm0 [orig:199 _113 ] [199])
        (mult:SF (reg:SF 21 xmm0 [712])
            (reg:SF 22 xmm1 [711]))) "CALWXT.f":98 838 {*fop_sf_comm}
     (nil))
(insn 291 290 292 20 (set (reg:SF 22 xmm1 [orig:200 _114 ] [200])
        (reg:SF 21 xmm0 [orig:199 _113 ] [199])) "CALWXT.f":98 131 {*movsf_internal}
     (nil))
(insn 292 291 293 20 (set (reg:SF 21 xmm0 [713])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC9") [flags 0x2]) [0  S4 A32])) "CALWXT.f":98 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.72689990997314453125e+1 [0x0.8a26e9p+5])
        (nil)))
(insn 293 292 295 20 (set (reg:SF 21 xmm0 [orig:201 _115 ] [201])
        (minus:SF (reg:SF 21 xmm0 [713])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -88 [0xffffffffffffffa8])) [1 a+0 S4 A32]))) "CALWXT.f":98 841 {*fop_sf_1}
     (nil))
(insn 295 293 296 20 (set (reg:SF 22 xmm1 [orig:203 _117 ] [203])
        (div:SF (reg:SF 22 xmm1 [orig:200 _114 ] [200])
            (reg:SF 21 xmm0 [orig:202 _116 ] [202]))) "CALWXT.f":98 841 {*fop_sf_1}
     (nil))
(insn 296 295 297 20 (set (reg:SF 21 xmm0 [715])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALWXT.f":98 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73149993896484375e+2 [0x0.889333p+9])
        (nil)))
(insn 297 296 298 20 (set (reg:SF 21 xmm0 [714])
        (plus:SF (reg:SF 21 xmm0 [715])
            (reg:SF 22 xmm1 [orig:203 _117 ] [203]))) "CALWXT.f":98 838 {*fop_sf_comm}
     (nil))
(insn 298 297 299 20 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -92 [0xffffffffffffffa4])) [1 tdkl+0 S4 A32])
        (reg:SF 21 xmm0 [714])) "CALWXT.f":98 131 {*movsf_internal}
     (nil))
(insn 299 298 300 20 (set (reg:SF 21 xmm0 [717])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 tkl+0 S4 A32])) "CALWXT.f":99 131 {*movsf_internal}
     (nil))
(insn 300 299 301 20 (set (reg:SF 21 xmm0 [716])
        (minus:SF (reg:SF 21 xmm0 [717])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -92 [0xffffffffffffffa4])) [1 tdkl+0 S4 A32]))) "CALWXT.f":99 841 {*fop_sf_1}
     (nil))
(insn 301 300 302 20 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -96 [0xffffffffffffffa0])) [1 tdpre+0 S4 A32])
        (reg:SF 21 xmm0 [716])) "CALWXT.f":99 131 {*movsf_internal}
     (nil))
(insn 302 301 303 20 (set (reg:SF 21 xmm0 [718])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 tdchk+0 S4 A32])) "CALWXT.f":100 131 {*movsf_internal}
     (nil))
(insn 303 302 304 20 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [718])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -96 [0xffffffffffffffa0])) [1 tdpre+0 S4 A32]))) "CALWXT.f":100 53 {*cmpisf}
     (nil))
(jump_insn 304 303 308 20 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 334)
            (pc))) "CALWXT.f":100 682 {*jcc}
     (nil)
 -> 334)
;;  succ:       21 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615

;; basic block 21, loop depth 0, maybe hot
;;  prev block 20, next block 22, flags: (RTL, MODIFIED)
;;  pred:       20 (FALLTHRU)
;; bb 21 artificial_defs: { }
;; bb 21 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 204 205 206 207 208 209 719 720 721
(note 308 304 309 21 [bb 21] NOTE_INSN_BASIC_BLOCK)
(insn 309 308 310 21 (set (reg:SI 0 ax [719])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":100 86 {*movsi_internal}
     (nil))
(insn 310 309 311 21 (set (reg:DI 0 ax [orig:204 _118 ] [204])
        (sign_extend:DI (reg:SI 0 ax [719]))) "CALWXT.f":100 149 {*extendsidi2_rex64}
     (nil))
(insn 311 310 312 21 (parallel [
            (set (reg:DI 1 dx [orig:205 _119 ] [205])
                (mult:DI (reg:DI 0 ax [orig:204 _118 ] [204])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":100 349 {*muldi3_1}
     (nil))
(insn 312 311 313 21 (set (reg:SI 0 ax [720])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":100 86 {*movsi_internal}
     (nil))
(insn 313 312 314 21 (set (reg:DI 0 ax [orig:206 _120 ] [206])
        (sign_extend:DI (reg:SI 0 ax [720]))) "CALWXT.f":100 149 {*extendsidi2_rex64}
     (nil))
(insn 314 313 315 21 (parallel [
            (set (reg:DI 0 ax [orig:207 _121 ] [207])
                (plus:DI (reg:DI 0 ax [orig:206 _120 ] [206])
                    (reg:DI 1 dx [orig:205 _119 ] [205])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":100 222 {*adddi_1}
     (nil))
(insn 315 314 316 21 (parallel [
            (set (reg:DI 1 dx [orig:208 _122 ] [208])
                (plus:DI (reg:DI 0 ax [orig:207 _121 ] [207])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":100 222 {*adddi_1}
     (nil))
(insn 316 315 317 21 (set (reg/f:DI 0 ax [721])
        (symbol_ref:DI ("tcold.3897") [flags 0x202]  <var_decl 0x7f2c99bebea0 tcold>)) "CALWXT.f":100 85 {*movdi_internal}
     (nil))
(insn 317 316 318 21 (set (reg:SF 21 xmm0 [orig:209 _123 ] [209])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:208 _122 ] [208])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [721])) [1 tcold S4 A32])) "CALWXT.f":100 131 {*movsf_internal}
     (nil))
(insn 318 317 319 21 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:209 _123 ] [209])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -80 [0xffffffffffffffb0])) [1 tkl+0 S4 A32]))) "CALWXT.f":100 53 {*cmpisf}
     (nil))
(jump_insn 319 318 323 21 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 334)
            (pc))) "CALWXT.f":100 682 {*jcc}
     (nil)
 -> 334)
;;  succ:       22 (FALLTHRU)
;;              23
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615

;; basic block 22, loop depth 0, maybe hot
;;  prev block 21, next block 23, flags: (RTL, MODIFIED)
;;  pred:       21 (FALLTHRU)
;; bb 22 artificial_defs: { }
;; bb 22 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 210 211 212 213 214 722 723 724 725
(note 323 319 324 22 [bb 22] NOTE_INSN_BASIC_BLOCK)
(insn 324 323 325 22 (set (reg:SI 0 ax [722])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":100 86 {*movsi_internal}
     (nil))
(insn 325 324 326 22 (set (reg:DI 0 ax [orig:210 _124 ] [210])
        (sign_extend:DI (reg:SI 0 ax [722]))) "CALWXT.f":100 149 {*extendsidi2_rex64}
     (nil))
(insn 326 325 327 22 (parallel [
            (set (reg:DI 1 dx [orig:211 _125 ] [211])
                (mult:DI (reg:DI 0 ax [orig:210 _124 ] [210])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":100 349 {*muldi3_1}
     (nil))
(insn 327 326 328 22 (set (reg:SI 0 ax [723])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":100 86 {*movsi_internal}
     (nil))
(insn 328 327 329 22 (set (reg:DI 0 ax [orig:212 _126 ] [212])
        (sign_extend:DI (reg:SI 0 ax [723]))) "CALWXT.f":100 149 {*extendsidi2_rex64}
     (nil))
(insn 329 328 330 22 (parallel [
            (set (reg:DI 0 ax [orig:213 _127 ] [213])
                (plus:DI (reg:DI 0 ax [orig:212 _126 ] [212])
                    (reg:DI 1 dx [orig:211 _125 ] [211])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":100 222 {*adddi_1}
     (nil))
(insn 330 329 331 22 (parallel [
            (set (reg:DI 1 dx [orig:214 _128 ] [214])
                (plus:DI (reg:DI 0 ax [orig:213 _127 ] [213])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":100 222 {*adddi_1}
     (nil))
(insn 331 330 332 22 (set (reg/f:DI 0 ax [724])
        (symbol_ref:DI ("tcold.3897") [flags 0x202]  <var_decl 0x7f2c99bebea0 tcold>)) "CALWXT.f":100 85 {*movdi_internal}
     (nil))
(insn 332 331 333 22 (set (reg:SF 21 xmm0 [725])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 tkl+0 S4 A32])) "CALWXT.f":100 131 {*movsf_internal}
     (nil))
(insn 333 332 334 22 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:214 _128 ] [214])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [724])) [1 tcold S4 A32])
        (reg:SF 21 xmm0 [725])) "CALWXT.f":100 131 {*movsf_internal}
     (nil))
;;  succ:       23 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615

;; basic block 23, loop depth 0, maybe hot
;;  prev block 22, next block 24, flags: (RTL, MODIFIED)
;;  pred:       22 (FALLTHRU)
;;              20
;;              21
;; bb 23 artificial_defs: { }
;; bb 23 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 726
(code_label 334 333 335 23 12 (nil) [2 uses])
(note 335 334 336 23 [bb 23] NOTE_INSN_BASIC_BLOCK)
(insn 336 335 337 23 (set (reg:SF 21 xmm0 [726])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 tdchk+0 S4 A32])) "CALWXT.f":101 131 {*movsf_internal}
     (nil))
(insn 337 336 338 23 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [726])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -96 [0xffffffffffffffa0])) [1 tdpre+0 S4 A32]))) "CALWXT.f":101 53 {*cmpisf}
     (nil))
(jump_insn 338 337 342 23 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 369)
            (pc))) "CALWXT.f":101 682 {*jcc}
     (nil)
 -> 369)
;;  succ:       24 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615

;; basic block 24, loop depth 0, maybe hot
;;  prev block 23, next block 25, flags: (RTL, MODIFIED)
;;  pred:       23 (FALLTHRU)
;; bb 24 artificial_defs: { }
;; bb 24 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 215 216 217 218 219 220 727 728 729 730
(note 342 338 343 24 [bb 24] NOTE_INSN_BASIC_BLOCK)
(insn 343 342 344 24 (set (reg:SI 0 ax [727])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":101 86 {*movsi_internal}
     (nil))
(insn 344 343 345 24 (set (reg:DI 0 ax [orig:215 _129 ] [215])
        (sign_extend:DI (reg:SI 0 ax [727]))) "CALWXT.f":101 149 {*extendsidi2_rex64}
     (nil))
(insn 345 344 346 24 (parallel [
            (set (reg:DI 1 dx [orig:216 _130 ] [216])
                (mult:DI (reg:DI 0 ax [orig:215 _129 ] [215])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":101 349 {*muldi3_1}
     (nil))
(insn 346 345 347 24 (set (reg:SI 0 ax [728])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":101 86 {*movsi_internal}
     (nil))
(insn 347 346 348 24 (set (reg:DI 0 ax [orig:217 _131 ] [217])
        (sign_extend:DI (reg:SI 0 ax [728]))) "CALWXT.f":101 149 {*extendsidi2_rex64}
     (nil))
(insn 348 347 349 24 (parallel [
            (set (reg:DI 0 ax [orig:218 _132 ] [218])
                (plus:DI (reg:DI 0 ax [orig:217 _131 ] [217])
                    (reg:DI 1 dx [orig:216 _130 ] [216])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":101 222 {*adddi_1}
     (nil))
(insn 349 348 350 24 (parallel [
            (set (reg:DI 1 dx [orig:219 _133 ] [219])
                (plus:DI (reg:DI 0 ax [orig:218 _132 ] [218])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":101 222 {*adddi_1}
     (nil))
(insn 350 349 351 24 (set (reg/f:DI 0 ax [729])
        (symbol_ref:DI ("twarm.3904") [flags 0x202]  <var_decl 0x7f2c99bec240 twarm>)) "CALWXT.f":101 85 {*movdi_internal}
     (nil))
(insn 351 350 352 24 (set (reg:SF 22 xmm1 [orig:220 _134 ] [220])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:219 _133 ] [219])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [729])) [1 twarm S4 A32])) "CALWXT.f":101 131 {*movsf_internal}
     (nil))
(insn 352 351 353 24 (set (reg:SF 21 xmm0 [730])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 tkl+0 S4 A32])) "CALWXT.f":101 131 {*movsf_internal}
     (nil))
(insn 353 352 354 24 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [730])
            (reg:SF 22 xmm1 [orig:220 _134 ] [220]))) "CALWXT.f":101 53 {*cmpisf}
     (nil))
(jump_insn 354 353 358 24 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 369)
            (pc))) "CALWXT.f":101 682 {*jcc}
     (nil)
 -> 369)
;;  succ:       25 (FALLTHRU)
;;              26
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615

;; basic block 25, loop depth 0, maybe hot
;;  prev block 24, next block 26, flags: (RTL, MODIFIED)
;;  pred:       24 (FALLTHRU)
;; bb 25 artificial_defs: { }
;; bb 25 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 221 222 223 224 225 731 732 733 734
(note 358 354 359 25 [bb 25] NOTE_INSN_BASIC_BLOCK)
(insn 359 358 360 25 (set (reg:SI 0 ax [731])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":101 86 {*movsi_internal}
     (nil))
(insn 360 359 361 25 (set (reg:DI 0 ax [orig:221 _135 ] [221])
        (sign_extend:DI (reg:SI 0 ax [731]))) "CALWXT.f":101 149 {*extendsidi2_rex64}
     (nil))
(insn 361 360 362 25 (parallel [
            (set (reg:DI 1 dx [orig:222 _136 ] [222])
                (mult:DI (reg:DI 0 ax [orig:221 _135 ] [221])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":101 349 {*muldi3_1}
     (nil))
(insn 362 361 363 25 (set (reg:SI 0 ax [732])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":101 86 {*movsi_internal}
     (nil))
(insn 363 362 364 25 (set (reg:DI 0 ax [orig:223 _137 ] [223])
        (sign_extend:DI (reg:SI 0 ax [732]))) "CALWXT.f":101 149 {*extendsidi2_rex64}
     (nil))
(insn 364 363 365 25 (parallel [
            (set (reg:DI 0 ax [orig:224 _138 ] [224])
                (plus:DI (reg:DI 0 ax [orig:223 _137 ] [223])
                    (reg:DI 1 dx [orig:222 _136 ] [222])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":101 222 {*adddi_1}
     (nil))
(insn 365 364 366 25 (parallel [
            (set (reg:DI 1 dx [orig:225 _139 ] [225])
                (plus:DI (reg:DI 0 ax [orig:224 _138 ] [224])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":101 222 {*adddi_1}
     (nil))
(insn 366 365 367 25 (set (reg/f:DI 0 ax [733])
        (symbol_ref:DI ("twarm.3904") [flags 0x202]  <var_decl 0x7f2c99bec240 twarm>)) "CALWXT.f":101 85 {*movdi_internal}
     (nil))
(insn 367 366 368 25 (set (reg:SF 21 xmm0 [734])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -80 [0xffffffffffffffb0])) [1 tkl+0 S4 A32])) "CALWXT.f":101 131 {*movsf_internal}
     (nil))
(insn 368 367 369 25 (set (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:225 _139 ] [225])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [733])) [1 twarm S4 A32])
        (reg:SF 21 xmm0 [734])) "CALWXT.f":101 131 {*movsf_internal}
     (nil))
;;  succ:       26 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615

;; basic block 26, loop depth 0, maybe hot
;;  prev block 25, next block 27, flags: (RTL, MODIFIED)
;;  pred:       25 (FALLTHRU)
;;              23
;;              24
;; bb 26 artificial_defs: { }
;; bb 26 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 735
(code_label 369 368 370 26 15 (nil) [2 uses])
(note 370 369 371 26 [bb 26] NOTE_INSN_BASIC_BLOCK)
(insn 371 370 372 26 (set (reg:SF 21 xmm0 [735])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 tdchk+0 S4 A32])) "CALWXT.f":102 131 {*movsf_internal}
     (nil))
(insn 372 371 373 26 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [735])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -96 [0xffffffffffffffa0])) [1 tdpre+0 S4 A32]))) "CALWXT.f":102 53 {*cmpisf}
     (nil))
(jump_insn 373 372 377 26 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 400)
            (pc))) "CALWXT.f":102 682 {*jcc}
     (nil)
 -> 400)
;;  succ:       27 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615

;; basic block 27, loop depth 0, maybe hot
;;  prev block 26, next block 28, flags: (RTL, MODIFIED)
;;  pred:       26 (FALLTHRU)
;; bb 27 artificial_defs: { }
;; bb 27 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 226 227 228 229 230 231 736 737 738
(note 377 373 378 27 [bb 27] NOTE_INSN_BASIC_BLOCK)
(insn 378 377 379 27 (set (reg:SI 0 ax [736])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":102 86 {*movsi_internal}
     (nil))
(insn 379 378 380 27 (set (reg:DI 0 ax [orig:226 _140 ] [226])
        (sign_extend:DI (reg:SI 0 ax [736]))) "CALWXT.f":102 149 {*extendsidi2_rex64}
     (nil))
(insn 380 379 381 27 (parallel [
            (set (reg:DI 1 dx [orig:227 _141 ] [227])
                (mult:DI (reg:DI 0 ax [orig:226 _140 ] [226])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":102 349 {*muldi3_1}
     (nil))
(insn 381 380 382 27 (set (reg:SI 0 ax [737])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":102 86 {*movsi_internal}
     (nil))
(insn 382 381 383 27 (set (reg:DI 0 ax [orig:228 _142 ] [228])
        (sign_extend:DI (reg:SI 0 ax [737]))) "CALWXT.f":102 149 {*extendsidi2_rex64}
     (nil))
(insn 383 382 384 27 (parallel [
            (set (reg:DI 0 ax [orig:229 _143 ] [229])
                (plus:DI (reg:DI 0 ax [orig:228 _142 ] [228])
                    (reg:DI 1 dx [orig:227 _141 ] [227])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":102 222 {*adddi_1}
     (nil))
(insn 384 383 385 27 (parallel [
            (set (reg:DI 1 dx [orig:230 _144 ] [230])
                (plus:DI (reg:DI 0 ax [orig:229 _143 ] [229])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":102 222 {*adddi_1}
     (nil))
(insn 385 384 386 27 (set (reg/f:DI 0 ax [738])
        (symbol_ref:DI ("licee.3884") [flags 0x202]  <var_decl 0x7f2c99beb870 licee>)) "CALWXT.f":102 85 {*movdi_internal}
     (nil))
(insn 386 385 387 27 (set (reg:SI 0 ax [orig:231 _145 ] [231])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:230 _144 ] [230])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [738])) [2 licee S4 A32])) "CALWXT.f":102 86 {*movsi_internal}
     (nil))
(insn 387 386 388 27 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
            (reg:SI 0 ax [orig:231 _145 ] [231]))) "CALWXT.f":102 11 {*cmpsi_1}
     (nil))
(jump_insn 388 387 389 27 (set (pc)
        (if_then_else (ge (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 400)
            (pc))) "CALWXT.f":102 682 {*jcc}
     (nil)
 -> 400)
;;  succ:       28 (FALLTHRU)
;;              29
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615

;; basic block 28, loop depth 0, maybe hot
;;  prev block 27, next block 29, flags: (RTL, MODIFIED)
;;  pred:       27 (FALLTHRU)
;; bb 28 artificial_defs: { }
;; bb 28 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 232 233 234 235 236 739 740 741 742
(note 389 388 390 28 [bb 28] NOTE_INSN_BASIC_BLOCK)
(insn 390 389 391 28 (set (reg:SI 0 ax [739])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":102 86 {*movsi_internal}
     (nil))
(insn 391 390 392 28 (set (reg:DI 0 ax [orig:232 _146 ] [232])
        (sign_extend:DI (reg:SI 0 ax [739]))) "CALWXT.f":102 149 {*extendsidi2_rex64}
     (nil))
(insn 392 391 393 28 (parallel [
            (set (reg:DI 1 dx [orig:233 _147 ] [233])
                (mult:DI (reg:DI 0 ax [orig:232 _146 ] [232])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":102 349 {*muldi3_1}
     (nil))
(insn 393 392 394 28 (set (reg:SI 0 ax [740])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":102 86 {*movsi_internal}
     (nil))
(insn 394 393 395 28 (set (reg:DI 0 ax [orig:234 _148 ] [234])
        (sign_extend:DI (reg:SI 0 ax [740]))) "CALWXT.f":102 149 {*extendsidi2_rex64}
     (nil))
(insn 395 394 396 28 (parallel [
            (set (reg:DI 0 ax [orig:235 _149 ] [235])
                (plus:DI (reg:DI 0 ax [orig:234 _148 ] [234])
                    (reg:DI 1 dx [orig:233 _147 ] [233])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":102 222 {*adddi_1}
     (nil))
(insn 396 395 397 28 (parallel [
            (set (reg:DI 2 cx [orig:236 _150 ] [236])
                (plus:DI (reg:DI 0 ax [orig:235 _149 ] [235])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":102 222 {*adddi_1}
     (nil))
(insn 397 396 398 28 (set (reg/f:DI 1 dx [741])
        (symbol_ref:DI ("licee.3884") [flags 0x202]  <var_decl 0x7f2c99beb870 licee>)) "CALWXT.f":102 85 {*movdi_internal}
     (nil))
(insn 398 397 399 28 (set (reg:SI 0 ax [742])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":102 86 {*movsi_internal}
     (nil))
(insn 399 398 400 28 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:236 _150 ] [236])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [741])) [2 licee S4 A32])
        (reg:SI 0 ax [742])) "CALWXT.f":102 86 {*movsi_internal}
     (nil))
;;  succ:       29 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615

;; basic block 29, loop depth 0, maybe hot
;;  prev block 28, next block 98, flags: (RTL, MODIFIED)
;;  pred:       18
;;              19
;;              28 (FALLTHRU)
;;              27
;;              26
;; bb 29 artificial_defs: { }
;; bb 29 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 400 399 401 29 11 (nil) [4 uses])
(note 401 400 402 29 [bb 29] NOTE_INSN_BASIC_BLOCK)
(insn 402 401 1427 29 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":87 221 {*addsi_1}
     (nil))
(jump_insn 1427 402 1428 29 (set (pc)
        (label_ref 403)) "CALWXT.f":87 683 {jump}
     (nil)
 -> 403)
;;  succ:       15 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612 615

(barrier 1428 1427 1476)
;; basic block 98, loop depth 0, maybe hot
;;  prev block 29, next block 30, flags: (RTL, MODIFIED)
;;  pred:       15
;; bb 98 artificial_defs: { }
;; bb 98 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1476 1428 1475 98 95 (nil) [1 uses])
(note 1475 1476 1477 98 [bb 98] NOTE_INSN_BASIC_BLOCK)
(insn 1477 1475 406 98 (const_int 0 [0]) "CALWXT.f":102 718 {nop}
     (nil))
;;  succ:       30 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612

;; basic block 30, loop depth 0, maybe hot
;;  prev block 98, next block 31, flags: (RTL, MODIFIED)
;;  pred:       98 [always]  (FALLTHRU)
;; bb 30 artificial_defs: { }
;; bb 30 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 743 744 745 746 747 748 749
(code_label 406 1477 407 30 9 (nil) [0 uses])
(note 407 406 408 30 [bb 30] NOTE_INSN_BASIC_BLOCK)
(insn 408 407 409 30 (set (reg:SI 0 ax [743])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":108 86 {*movsi_internal}
     (nil))
(insn 409 408 410 30 (set (reg:DI 0 ax [orig:237 _151 ] [237])
        (sign_extend:DI (reg:SI 0 ax [743]))) "CALWXT.f":108 149 {*extendsidi2_rex64}
     (nil))
(insn 410 409 411 30 (parallel [
            (set (reg:DI 1 dx [orig:238 _152 ] [238])
                (mult:DI (reg:DI 0 ax [orig:237 _151 ] [237])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":108 349 {*muldi3_1}
     (nil))
(insn 411 410 412 30 (set (reg:SI 0 ax [744])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":108 86 {*movsi_internal}
     (nil))
(insn 412 411 413 30 (set (reg:DI 0 ax [orig:239 _153 ] [239])
        (sign_extend:DI (reg:SI 0 ax [744]))) "CALWXT.f":108 149 {*extendsidi2_rex64}
     (nil))
(insn 413 412 414 30 (parallel [
            (set (reg:DI 0 ax [orig:240 _154 ] [240])
                (plus:DI (reg:DI 0 ax [orig:239 _153 ] [239])
                    (reg:DI 1 dx [orig:238 _152 ] [238])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":108 222 {*adddi_1}
     (nil))
(insn 414 413 415 30 (parallel [
            (set (reg:DI 1 dx [orig:241 _155 ] [241])
                (plus:DI (reg:DI 0 ax [orig:240 _154 ] [240])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":108 222 {*adddi_1}
     (nil))
(insn 415 414 416 30 (set (reg/f:DI 0 ax [745])
        (symbol_ref:DI ("tcold.3897") [flags 0x202]  <var_decl 0x7f2c99bebea0 tcold>)) "CALWXT.f":108 85 {*movdi_internal}
     (nil))
(insn 416 415 417 30 (set (reg:SF 21 xmm0 [orig:242 _156 ] [242])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:241 _155 ] [241])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [745])) [1 tcold S4 A32])) "CALWXT.f":108 131 {*movsf_internal}
     (nil))
(insn 417 416 418 30 (set (reg:SI 0 ax [746])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 lmhk+0 S4 A32])) "CALWXT.f":108 86 {*movsi_internal}
     (nil))
(insn 418 417 419 30 (set (reg:DI 0 ax [orig:243 _157 ] [243])
        (sign_extend:DI (reg:SI 0 ax [746]))) "CALWXT.f":108 149 {*extendsidi2_rex64}
     (nil))
(insn 419 418 420 30 (parallel [
            (set (reg:DI 1 dx [orig:244 _158 ] [244])
                (mult:DI (reg:DI 0 ax [orig:243 _157 ] [243])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":108 349 {*muldi3_1}
     (nil))
(insn 420 419 421 30 (set (reg:SI 0 ax [747])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":108 86 {*movsi_internal}
     (nil))
(insn 421 420 422 30 (set (reg:DI 0 ax [orig:245 _159 ] [245])
        (sign_extend:DI (reg:SI 0 ax [747]))) "CALWXT.f":108 149 {*extendsidi2_rex64}
     (nil))
(insn 422 421 423 30 (parallel [
            (set (reg:DI 0 ax [orig:246 _160 ] [246])
                (mult:DI (reg:DI 0 ax [orig:245 _159 ] [245])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":108 349 {*muldi3_1}
     (nil))
(insn 423 422 424 30 (parallel [
            (set (reg:DI 1 dx [orig:247 _161 ] [247])
                (plus:DI (reg:DI 1 dx [orig:244 _158 ] [244])
                    (reg:DI 0 ax [orig:246 _160 ] [246])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":108 222 {*adddi_1}
     (nil))
(insn 424 423 425 30 (set (reg:SI 0 ax [748])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":108 86 {*movsi_internal}
     (nil))
(insn 425 424 426 30 (set (reg:DI 0 ax [orig:248 _162 ] [248])
        (sign_extend:DI (reg:SI 0 ax [748]))) "CALWXT.f":108 149 {*extendsidi2_rex64}
     (nil))
(insn 426 425 427 30 (parallel [
            (set (reg:DI 0 ax [orig:249 _163 ] [249])
                (plus:DI (reg:DI 0 ax [orig:248 _162 ] [248])
                    (reg:DI 1 dx [orig:247 _161 ] [247])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":108 222 {*adddi_1}
     (nil))
(insn 427 426 428 30 (parallel [
            (set (reg:DI 1 dx [orig:250 _164 ] [250])
                (plus:DI (reg:DI 0 ax [orig:249 _163 ] [249])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":108 222 {*adddi_1}
     (nil))
(insn 428 427 429 30 (set (reg/f:DI 0 ax [749])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 t+0 S8 A64])) "CALWXT.f":108 85 {*movdi_internal}
     (nil))
(insn 429 428 430 30 (set (reg:SF 22 xmm1 [orig:251 _165 ] [251])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:250 _164 ] [250])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [749])) [1 *t_595(D) S4 A32])) "CALWXT.f":108 131 {*movsf_internal}
     (nil))
(insn 430 429 431 30 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:242 _156 ] [242])
                    (reg:SF 22 xmm1 [orig:251 _165 ] [251]))
            ] UNSPEC_NOTRAP)) "CALWXT.f":108 54 {*cmpiusf}
     (nil))
(jump_insn 431 430 1375 30 (set (pc)
        (if_then_else (unordered (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 452)
            (pc))) "CALWXT.f":108 682 {*jcc}
     (nil)
 -> 452)
;;  succ:       34
;;              31 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242 251 612

;; basic block 31, loop depth 0, maybe hot
;;  prev block 30, next block 32, flags: (RTL, MODIFIED)
;;  pred:       30 (FALLTHRU)
;; bb 31 artificial_defs: { }
;; bb 31 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242 251 612
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 242 251
;; lr  def 	 17 [flags]
(note 1375 431 432 31 [bb 31] NOTE_INSN_BASIC_BLOCK)
(insn 432 1375 433 31 (set (reg:CCFP 17 flags)
        (unspec:CCFP [
                (compare:CCFP (reg:SF 21 xmm0 [orig:242 _156 ] [242])
                    (reg:SF 22 xmm1 [orig:251 _165 ] [251]))
            ] UNSPEC_NOTRAP)) "CALWXT.f":108 54 {*cmpiusf}
     (nil))
(jump_insn 433 432 437 31 (set (pc)
        (if_then_else (ltgt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 452)
            (pc))) "CALWXT.f":108 682 {*jcc}
     (nil)
 -> 452)
;;  succ:       32 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612

;; basic block 32, loop depth 0, maybe hot
;;  prev block 31, next block 33, flags: (RTL, MODIFIED)
;;  pred:       31 (FALLTHRU)
;; bb 32 artificial_defs: { }
;; bb 32 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 750
(note 437 433 438 32 [bb 32] NOTE_INSN_BASIC_BLOCK)
(insn 438 437 439 32 (set (reg:SF 21 xmm0 [750])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC11") [flags 0x2]) [0  S4 A32])) "CALWXT.f":108 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.0e+0 [0x0.cp+3])
        (nil)))
(insn 439 438 440 32 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [750])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -64 [0xffffffffffffffc0])) [1 tdchk+0 S4 A32]))) "CALWXT.f":108 53 {*cmpisf}
     (nil))
(jump_insn 440 439 444 32 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 452)
            (pc))) "CALWXT.f":108 682 {*jcc}
     (nil)
 -> 452)
;;  succ:       33 (FALLTHRU)
;;              34
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612

;; basic block 33, loop depth 0, maybe hot
;;  prev block 32, next block 34, flags: (RTL, MODIFIED)
;;  pred:       32 (FALLTHRU)
;; bb 33 artificial_defs: { }
;; bb 33 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 751 752 753
(note 444 440 445 33 [bb 33] NOTE_INSN_BASIC_BLOCK)
(insn 445 444 446 33 (set (reg:SF 22 xmm1 [752])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 tdchk+0 S4 A32])) "CALWXT.f":109 131 {*movsf_internal}
     (nil))
(insn 446 445 447 33 (set (reg:SF 21 xmm0 [753])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC1") [flags 0x2]) [0  S4 A32])) "CALWXT.f":109 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.0e+0 [0x0.8p+2])
        (nil)))
(insn 447 446 448 33 (set (reg:SF 21 xmm0 [751])
        (plus:SF (reg:SF 21 xmm0 [753])
            (reg:SF 22 xmm1 [752]))) "CALWXT.f":109 838 {*fop_sf_comm}
     (nil))
(insn 448 447 1429 33 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -64 [0xffffffffffffffc0])) [1 tdchk+0 S4 A32])
        (reg:SF 21 xmm0 [751])) "CALWXT.f":109 131 {*movsf_internal}
     (nil))
(jump_insn 1429 448 1430 33 (set (pc)
        (label_ref 449)) "CALWXT.f":110 683 {jump}
     (nil)
 -> 449)
;;  succ:       14 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612

(barrier 1430 1429 452)
;; basic block 34, loop depth 0, maybe hot
;;  prev block 33, next block 97, flags: (RTL, MODIFIED)
;;  pred:       12
;;              30
;;              31
;;              32
;; bb 34 artificial_defs: { }
;; bb 34 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 452 1430 453 34 8 (nil) [4 uses])
(note 453 452 454 34 [bb 34] NOTE_INSN_BASIC_BLOCK)
(insn 454 453 1431 34 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":70 221 {*addsi_1}
     (nil))
(jump_insn 1431 454 1432 34 (set (pc)
        (label_ref 455)) "CALWXT.f":70 683 {jump}
     (nil)
 -> 455)
;;  succ:       11 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612

(barrier 1432 1431 1473)
;; basic block 97, loop depth 0, maybe hot
;;  prev block 34, next block 35, flags: (RTL, MODIFIED)
;;  pred:       11
;; bb 97 artificial_defs: { }
;; bb 97 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1473 1432 1472 97 94 (nil) [1 uses])
(note 1472 1473 1474 97 [bb 97] NOTE_INSN_BASIC_BLOCK)
(insn 1474 1472 458 97 (const_int 0 [0]) "CALWXT.f":108 718 {nop}
     (nil))
;;  succ:       35 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612

;; basic block 35, loop depth 0, maybe hot
;;  prev block 97, next block 96, flags: (RTL, MODIFIED)
;;  pred:       97 [always]  (FALLTHRU)
;; bb 35 artificial_defs: { }
;; bb 35 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 458 1474 459 35 7 (nil) [0 uses])
(note 459 458 460 35 [bb 35] NOTE_INSN_BASIC_BLOCK)
(insn 460 459 1433 35 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":69 221 {*addsi_1}
     (nil))
(jump_insn 1433 460 1434 35 (set (pc)
        (label_ref 461)) "CALWXT.f":69 683 {jump}
     (nil)
 -> 461)
;;  succ:       9 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 612

(barrier 1434 1433 1470)
;; basic block 96, loop depth 0, maybe hot
;;  prev block 35, next block 36, flags: (RTL, MODIFIED)
;;  pred:       9
;; bb 96 artificial_defs: { }
;; bb 96 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1470 1434 1469 96 93 (nil) [1 uses])
(note 1469 1470 1471 96 [bb 96] NOTE_INSN_BASIC_BLOCK)
(insn 1471 1469 464 96 (const_int 0 [0]) "CALWXT.f":70 718 {nop}
     (nil))
;;  succ:       36 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 36, loop depth 0, maybe hot
;;  prev block 96, next block 37, flags: (RTL, MODIFIED)
;;  pred:       96 [always]  (FALLTHRU)
;; bb 36 artificial_defs: { }
;; bb 36 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 617 618
(code_label 464 1471 465 36 6 (nil) [0 uses])
(note 465 464 466 36 [bb 36] NOTE_INSN_BASIC_BLOCK)
(insn 466 465 467 36 (set (reg:SI 1 dx [orig:617 _620 ] [617])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f2c99be8900 parallel>)
                    (const_int 8 [0x8]))) [2 parallel.jsta+0 S4 A64])) "CALWXT.f":117 86 {*movsi_internal}
     (nil))
(insn 467 466 468 36 (set (reg:SI 0 ax [orig:618 _621 ] [618])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f2c99be8900 parallel>)
                    (const_int 12 [0xc]))) [2 parallel.jend+0 S4 A32])) "CALWXT.f":117 86 {*movsi_internal}
     (nil))
(insn 468 467 616 36 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
        (reg:SI 1 dx [orig:617 _620 ] [617])) "CALWXT.f":117 86 {*movsi_internal}
     (nil))
;;  succ:       37 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618

;; basic block 37, loop depth 0, maybe hot
;;  prev block 36, next block 38, flags: (RTL, MODIFIED)
;;  pred:       36 (FALLTHRU)
;;              47 [always] 
;; bb 37 artificial_defs: { }
;; bb 37 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618
;; lr  def 	 17 [flags] 619 754
(code_label 616 468 469 37 33 (nil) [1 uses])
(note 469 616 470 37 [bb 37] NOTE_INSN_BASIC_BLOCK)
(insn 470 469 471 37 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
            (reg:SI 0 ax [orig:618 _621 ] [618]))) "CALWXT.f":117 11 {*cmpsi_1}
     (nil))
(insn 471 470 472 37 (set (reg:QI 1 dx [754])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALWXT.f":117 678 {*setcc_qi}
     (nil))
(insn 472 471 473 37 (set (reg:SI 1 dx [orig:619 _623 ] [619])
        (zero_extend:SI (reg:QI 1 dx [754]))) "CALWXT.f":117 140 {*zero_extendqisi2}
     (nil))
(insn 473 472 474 37 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:619 _623 ] [619])
            (const_int 0 [0]))) "CALWXT.f":117 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 474 473 475 37 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1479)
            (pc))) "CALWXT.f":117 682 {*jcc}
     (nil)
 -> 1479)
;;  succ:       99
;;              38 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618

;; basic block 38, loop depth 0, maybe hot
;;  prev block 37, next block 39, flags: (RTL, MODIFIED)
;;  pred:       37 (FALLTHRU)
;; bb 38 artificial_defs: { }
;; bb 38 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 475 474 476 38 [bb 38] NOTE_INSN_BASIC_BLOCK)
(insn 476 475 610 38 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
        (const_int 1 [0x1])) "CALWXT.f":118 86 {*movsi_internal}
     (nil))
;;  succ:       39 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618

;; basic block 39, loop depth 0, maybe hot
;;  prev block 38, next block 40, flags: (RTL, MODIFIED)
;;  pred:       38 (FALLTHRU)
;;              46 [always] 
;; bb 39 artificial_defs: { }
;; bb 39 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 620 755
(code_label 610 476 477 39 32 (nil) [1 uses])
(note 477 610 478 39 [bb 39] NOTE_INSN_BASIC_BLOCK)
(insn 478 477 479 39 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
            (const_int 119 [0x77]))) "CALWXT.f":118 11 {*cmpsi_1}
     (nil))
(insn 479 478 480 39 (set (reg:QI 1 dx [755])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALWXT.f":118 678 {*setcc_qi}
     (nil))
(insn 480 479 481 39 (set (reg:SI 1 dx [orig:620 _625 ] [620])
        (zero_extend:SI (reg:QI 1 dx [755]))) "CALWXT.f":118 140 {*zero_extendqisi2}
     (nil))
(insn 481 480 482 39 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 1 dx [orig:620 _625 ] [620])
            (const_int 0 [0]))) "CALWXT.f":118 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 482 481 483 39 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1482)
            (pc))) "CALWXT.f":118 682 {*jcc}
     (nil)
 -> 1482)
;;  succ:       100
;;              40 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618

;; basic block 40, loop depth 0, maybe hot
;;  prev block 39, next block 41, flags: (RTL, MODIFIED)
;;  pred:       39 (FALLTHRU)
;; bb 40 artificial_defs: { }
;; bb 40 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 252 253 254 255 256 257 258 259 260 261 262 756 757 758 759 760 761 762
(note 483 482 484 40 [bb 40] NOTE_INSN_BASIC_BLOCK)
(insn 484 483 485 40 (set (reg:SI 1 dx [756])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":119 86 {*movsi_internal}
     (nil))
(insn 485 484 486 40 (set (reg:DI 1 dx [orig:252 _166 ] [252])
        (sign_extend:DI (reg:SI 1 dx [756]))) "CALWXT.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 486 485 487 40 (parallel [
            (set (reg:DI 2 cx [orig:253 _167 ] [253])
                (mult:DI (reg:DI 1 dx [orig:252 _166 ] [252])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":119 349 {*muldi3_1}
     (nil))
(insn 487 486 488 40 (set (reg:SI 1 dx [757])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":119 86 {*movsi_internal}
     (nil))
(insn 488 487 489 40 (set (reg:DI 1 dx [orig:254 _168 ] [254])
        (sign_extend:DI (reg:SI 1 dx [757]))) "CALWXT.f":119 149 {*extendsidi2_rex64}
     (nil))
(insn 489 488 490 40 (parallel [
            (set (reg:DI 1 dx [orig:255 _169 ] [255])
                (plus:DI (reg:DI 1 dx [orig:254 _168 ] [254])
                    (reg:DI 2 cx [orig:253 _167 ] [253])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":119 222 {*adddi_1}
     (nil))
(insn 490 489 491 40 (parallel [
            (set (reg:DI 2 cx [orig:256 _170 ] [256])
                (plus:DI (reg:DI 1 dx [orig:255 _169 ] [255])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":119 222 {*adddi_1}
     (nil))
(insn 491 490 492 40 (set (reg/f:DI 1 dx [758])
        (symbol_ref:DI ("karr.3880") [flags 0x202]  <var_decl 0x7f2c99beb6c0 karr>)) "CALWXT.f":119 85 {*movdi_internal}
     (nil))
(insn 492 491 493 40 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:256 _170 ] [256])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [758])) [2 karr S4 A32])
        (const_int 0 [0])) "CALWXT.f":119 86 {*movsi_internal}
     (nil))
(insn 493 492 494 40 (set (reg:SI 1 dx [759])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":120 86 {*movsi_internal}
     (nil))
(insn 494 493 495 40 (set (reg:DI 1 dx [orig:257 _171 ] [257])
        (sign_extend:DI (reg:SI 1 dx [759]))) "CALWXT.f":120 149 {*extendsidi2_rex64}
     (nil))
(insn 495 494 496 40 (parallel [
            (set (reg:DI 2 cx [orig:258 _172 ] [258])
                (mult:DI (reg:DI 1 dx [orig:257 _171 ] [257])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":120 349 {*muldi3_1}
     (nil))
(insn 496 495 497 40 (set (reg:SI 1 dx [760])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":120 86 {*movsi_internal}
     (nil))
(insn 497 496 498 40 (set (reg:DI 1 dx [orig:259 _173 ] [259])
        (sign_extend:DI (reg:SI 1 dx [760]))) "CALWXT.f":120 149 {*extendsidi2_rex64}
     (nil))
(insn 498 497 499 40 (parallel [
            (set (reg:DI 1 dx [orig:260 _174 ] [260])
                (plus:DI (reg:DI 1 dx [orig:259 _173 ] [259])
                    (reg:DI 2 cx [orig:258 _172 ] [258])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":120 222 {*adddi_1}
     (nil))
(insn 499 498 500 40 (parallel [
            (set (reg:DI 2 cx [orig:261 _175 ] [261])
                (plus:DI (reg:DI 1 dx [orig:260 _174 ] [260])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":120 222 {*adddi_1}
     (nil))
(insn 500 499 501 40 (set (reg/f:DI 1 dx [761])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 16 [0x10])) [3 prec+0 S8 A64])) "CALWXT.f":120 85 {*movdi_internal}
     (nil))
(insn 501 500 502 40 (set (reg:SF 22 xmm1 [orig:262 _176 ] [262])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:261 _175 ] [261])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [761])) [1 *prec_591(D) S4 A32])) "CALWXT.f":120 131 {*movsf_internal}
     (nil))
(insn 502 501 503 40 (set (reg:SF 21 xmm0 [762])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC0") [flags 0x2]) [0  S4 A32])) "CALWXT.f":120 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.99999998990097083151340484619140625e-6 [0x0.8637bdp-17])
        (nil)))
(insn 503 502 504 40 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [762])
            (reg:SF 22 xmm1 [orig:262 _176 ] [262]))) "CALWXT.f":120 53 {*cmpisf}
     (nil))
(jump_insn 504 503 505 40 (set (pc)
        (if_then_else (ge (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1487)
            (pc))) "CALWXT.f":120 682 {*jcc}
     (nil)
 -> 1487)
;;  succ:       101
;;              41 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618

;; basic block 41, loop depth 0, maybe hot
;;  prev block 40, next block 42, flags: (RTL, MODIFIED)
;;  pred:       40 (FALLTHRU)
;; bb 41 artificial_defs: { }
;; bb 41 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 263 264 265 266 267 268 269 270 271 272 273 274 275 276 277 278 279 280 281 763 764 765 766 767 768 769 770 771 772 773 774
(note 505 504 506 41 [bb 41] NOTE_INSN_BASIC_BLOCK)
(insn 506 505 507 41 (set (reg:SI 1 dx [763])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":121 86 {*movsi_internal}
     (nil))
(insn 507 506 508 41 (set (reg:DI 1 dx [orig:263 _177 ] [263])
        (sign_extend:DI (reg:SI 1 dx [763]))) "CALWXT.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 508 507 509 41 (parallel [
            (set (reg:DI 2 cx [orig:264 _178 ] [264])
                (mult:DI (reg:DI 1 dx [orig:263 _177 ] [263])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":121 349 {*muldi3_1}
     (nil))
(insn 509 508 510 41 (set (reg:SI 1 dx [764])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":121 86 {*movsi_internal}
     (nil))
(insn 510 509 511 41 (set (reg:DI 1 dx [orig:265 _179 ] [265])
        (sign_extend:DI (reg:SI 1 dx [764]))) "CALWXT.f":121 149 {*extendsidi2_rex64}
     (nil))
(insn 511 510 512 41 (parallel [
            (set (reg:DI 1 dx [orig:266 _180 ] [266])
                (plus:DI (reg:DI 1 dx [orig:265 _179 ] [265])
                    (reg:DI 2 cx [orig:264 _178 ] [264])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":121 222 {*adddi_1}
     (nil))
(insn 512 511 513 41 (parallel [
            (set (reg:DI 2 cx [orig:267 _181 ] [267])
                (plus:DI (reg:DI 1 dx [orig:266 _180 ] [266])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":121 222 {*adddi_1}
     (nil))
(insn 513 512 514 41 (set (reg/f:DI 1 dx [765])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [4 lmh+0 S8 A64])) "CALWXT.f":121 85 {*movdi_internal}
     (nil))
(insn 514 513 515 41 (set (reg:SI 1 dx [766])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:267 _181 ] [267])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [765])) [2 *lmh_589(D) S4 A32])) "CALWXT.f":121 86 {*movsi_internal}
     (nil))
(insn 515 514 516 41 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 lmhk+0 S4 A32])
        (reg:SI 1 dx [766])) "CALWXT.f":121 86 {*movsi_internal}
     (nil))
(insn 516 515 517 41 (set (reg:SI 1 dx [767])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 lmhk+0 S4 A32])) "CALWXT.f":122 86 {*movsi_internal}
     (nil))
(insn 517 516 518 41 (set (reg:DI 1 dx [orig:268 _182 ] [268])
        (sign_extend:DI (reg:SI 1 dx [767]))) "CALWXT.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 518 517 519 41 (parallel [
            (set (reg:DI 2 cx [orig:269 _183 ] [269])
                (mult:DI (reg:DI 1 dx [orig:268 _182 ] [268])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":122 349 {*muldi3_1}
     (nil))
(insn 519 518 520 41 (set (reg:SI 1 dx [768])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":122 86 {*movsi_internal}
     (nil))
(insn 520 519 521 41 (set (reg:DI 1 dx [orig:270 _184 ] [270])
        (sign_extend:DI (reg:SI 1 dx [768]))) "CALWXT.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 521 520 522 41 (parallel [
            (set (reg:DI 1 dx [orig:271 _185 ] [271])
                (mult:DI (reg:DI 1 dx [orig:270 _184 ] [270])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":122 349 {*muldi3_1}
     (nil))
(insn 522 521 523 41 (parallel [
            (set (reg:DI 2 cx [orig:272 _186 ] [272])
                (plus:DI (reg:DI 2 cx [orig:269 _183 ] [269])
                    (reg:DI 1 dx [orig:271 _185 ] [271])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":122 222 {*adddi_1}
     (nil))
(insn 523 522 524 41 (set (reg:SI 1 dx [769])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":122 86 {*movsi_internal}
     (nil))
(insn 524 523 525 41 (set (reg:DI 1 dx [orig:273 _187 ] [273])
        (sign_extend:DI (reg:SI 1 dx [769]))) "CALWXT.f":122 149 {*extendsidi2_rex64}
     (nil))
(insn 525 524 526 41 (parallel [
            (set (reg:DI 1 dx [orig:274 _188 ] [274])
                (plus:DI (reg:DI 1 dx [orig:273 _187 ] [273])
                    (reg:DI 2 cx [orig:272 _186 ] [272])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":122 222 {*adddi_1}
     (nil))
(insn 526 525 527 41 (parallel [
            (set (reg:DI 2 cx [orig:275 _189 ] [275])
                (plus:DI (reg:DI 1 dx [orig:274 _188 ] [274])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":122 222 {*adddi_1}
     (nil))
(insn 527 526 528 41 (set (reg/f:DI 1 dx [770])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 t+0 S8 A64])) "CALWXT.f":122 85 {*movdi_internal}
     (nil))
(insn 528 527 529 41 (set (reg:SF 21 xmm0 [771])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:275 _189 ] [275])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [770])) [1 *t_595(D) S4 A32])) "CALWXT.f":122 131 {*movsf_internal}
     (nil))
(insn 529 528 530 41 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [1 tlmhk+0 S4 A32])
        (reg:SF 21 xmm0 [771])) "CALWXT.f":122 131 {*movsf_internal}
     (nil))
(insn 530 529 531 41 (set (reg:SI 1 dx [772])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":126 86 {*movsi_internal}
     (nil))
(insn 531 530 532 41 (set (reg:DI 1 dx [orig:276 _190 ] [276])
        (sign_extend:DI (reg:SI 1 dx [772]))) "CALWXT.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 532 531 533 41 (parallel [
            (set (reg:DI 2 cx [orig:277 _191 ] [277])
                (mult:DI (reg:DI 1 dx [orig:276 _190 ] [276])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":126 349 {*muldi3_1}
     (nil))
(insn 533 532 534 41 (set (reg:SI 1 dx [773])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":126 86 {*movsi_internal}
     (nil))
(insn 534 533 535 41 (set (reg:DI 1 dx [orig:278 _192 ] [278])
        (sign_extend:DI (reg:SI 1 dx [773]))) "CALWXT.f":126 149 {*extendsidi2_rex64}
     (nil))
(insn 535 534 536 41 (parallel [
            (set (reg:DI 1 dx [orig:279 _193 ] [279])
                (plus:DI (reg:DI 1 dx [orig:278 _192 ] [278])
                    (reg:DI 2 cx [orig:277 _191 ] [277])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":126 222 {*adddi_1}
     (nil))
(insn 536 535 537 41 (parallel [
            (set (reg:DI 2 cx [orig:280 _194 ] [280])
                (plus:DI (reg:DI 1 dx [orig:279 _193 ] [279])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":126 222 {*adddi_1}
     (nil))
(insn 537 536 538 41 (set (reg/f:DI 1 dx [774])
        (symbol_ref:DI ("tcold.3897") [flags 0x202]  <var_decl 0x7f2c99bebea0 tcold>)) "CALWXT.f":126 85 {*movdi_internal}
     (nil))
(insn 538 537 539 41 (set (reg:SF 21 xmm0 [orig:281 _195 ] [281])
        (mem:SF (plus:DI (mult:DI (reg:DI 2 cx [orig:280 _194 ] [280])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [774])) [1 tcold S4 A32])) "CALWXT.f":126 131 {*movsf_internal}
     (nil))
(insn 539 538 540 41 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:281 _195 ] [281])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32]))) "CALWXT.f":126 53 {*cmpisf}
     (nil))
(jump_insn 540 539 544 41 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1435)
            (pc))) "CALWXT.f":126 682 {*jcc}
     (nil)
 -> 1435)
;;  succ:       42 (FALLTHRU)
;;              45
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618

;; basic block 42, loop depth 0, maybe hot
;;  prev block 41, next block 43, flags: (RTL, MODIFIED)
;;  pred:       41 (FALLTHRU)
;; bb 42 artificial_defs: { }
;; bb 42 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 775
(note 544 540 545 42 [bb 42] NOTE_INSN_BASIC_BLOCK)
(insn 545 544 546 42 (set (reg:SF 21 xmm0 [775])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALWXT.f":127 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73149993896484375e+2 [0x0.889333p+9])
        (nil)))
(insn 546 545 547 42 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [775])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -100 [0xffffffffffffff9c])) [1 tlmhk+0 S4 A32]))) "CALWXT.f":127 53 {*cmpisf}
     (nil))
(jump_insn 547 546 551 42 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1436)
            (pc))) "CALWXT.f":127 682 {*jcc}
     (nil)
 -> 1436)
;;  succ:       43 (FALLTHRU)
;;              44
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618

;; basic block 43, loop depth 0, maybe hot
;;  prev block 42, next block 44, flags: (RTL, MODIFIED)
;;  pred:       42 (FALLTHRU)
;; bb 43 artificial_defs: { }
;; bb 43 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 282 283 284 285 286 287 288 289 290 291 292 293 776 777 778 779 780 781
(note 551 547 552 43 [bb 43] NOTE_INSN_BASIC_BLOCK)
(insn 552 551 553 43 (set (reg:SI 1 dx [776])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":133 86 {*movsi_internal}
     (nil))
(insn 553 552 554 43 (set (reg:DI 1 dx [orig:282 _196 ] [282])
        (sign_extend:DI (reg:SI 1 dx [776]))) "CALWXT.f":133 149 {*extendsidi2_rex64}
     (nil))
(insn 554 553 555 43 (parallel [
            (set (reg:DI 2 cx [orig:283 _197 ] [283])
                (mult:DI (reg:DI 1 dx [orig:282 _196 ] [282])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":133 349 {*muldi3_1}
     (nil))
(insn 555 554 556 43 (set (reg:SI 1 dx [777])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":133 86 {*movsi_internal}
     (nil))
(insn 556 555 557 43 (set (reg:DI 1 dx [orig:284 _198 ] [284])
        (sign_extend:DI (reg:SI 1 dx [777]))) "CALWXT.f":133 149 {*extendsidi2_rex64}
     (nil))
(insn 557 556 558 43 (parallel [
            (set (reg:DI 1 dx [orig:285 _199 ] [285])
                (plus:DI (reg:DI 1 dx [orig:284 _198 ] [284])
                    (reg:DI 2 cx [orig:283 _197 ] [283])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":133 222 {*adddi_1}
     (nil))
(insn 558 557 559 43 (parallel [
            (set (reg:DI 2 cx [orig:286 _200 ] [286])
                (plus:DI (reg:DI 1 dx [orig:285 _199 ] [285])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":133 222 {*adddi_1}
     (nil))
(insn 559 558 560 43 (set (reg/f:DI 1 dx [778])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [4 iwx+0 S8 A64])) "CALWXT.f":133 85 {*movdi_internal}
     (nil))
(insn 560 559 561 43 (set (reg:SI 1 dx [orig:287 _201 ] [287])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:286 _200 ] [286])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [778])) [2 *iwx_576(D) S4 A32])) "CALWXT.f":133 86 {*movsi_internal}
     (nil))
(insn 561 560 562 43 (set (reg:SI 2 cx [779])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":133 86 {*movsi_internal}
     (nil))
(insn 562 561 563 43 (set (reg:DI 2 cx [orig:288 _202 ] [288])
        (sign_extend:DI (reg:SI 2 cx [779]))) "CALWXT.f":133 149 {*extendsidi2_rex64}
     (nil))
(insn 563 562 564 43 (parallel [
            (set (reg:DI 4 si [orig:289 _203 ] [289])
                (mult:DI (reg:DI 2 cx [orig:288 _202 ] [288])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":133 349 {*muldi3_1}
     (nil))
(insn 564 563 565 43 (set (reg:SI 2 cx [780])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":133 86 {*movsi_internal}
     (nil))
(insn 565 564 566 43 (set (reg:DI 2 cx [orig:290 _204 ] [290])
        (sign_extend:DI (reg:SI 2 cx [780]))) "CALWXT.f":133 149 {*extendsidi2_rex64}
     (nil))
(insn 566 565 567 43 (parallel [
            (set (reg:DI 2 cx [orig:291 _205 ] [291])
                (plus:DI (reg:DI 2 cx [orig:290 _204 ] [290])
                    (reg:DI 4 si [orig:289 _203 ] [289])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":133 222 {*adddi_1}
     (nil))
(insn 567 566 568 43 (parallel [
            (set (reg:DI 2 cx [orig:292 _206 ] [292])
                (plus:DI (reg:DI 2 cx [orig:291 _205 ] [291])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":133 222 {*adddi_1}
     (nil))
(insn 568 567 569 43 (parallel [
            (set (reg:SI 4 si [orig:293 _207 ] [293])
                (plus:SI (reg:SI 1 dx [orig:287 _201 ] [287])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":133 221 {*addsi_1}
     (nil))
(insn 569 568 570 43 (set (reg/f:DI 1 dx [781])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [4 iwx+0 S8 A64])) "CALWXT.f":133 85 {*movdi_internal}
     (nil))
(insn 570 569 1437 43 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:292 _206 ] [292])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [781])) [2 *iwx_576(D) S4 A32])
        (reg:SI 4 si [orig:293 _207 ] [293])) "CALWXT.f":133 86 {*movsi_internal}
     (nil))
(jump_insn 1437 570 1438 43 (set (pc)
        (label_ref 607)) "CALWXT.f":134 683 {jump}
     (nil)
 -> 607)
;;  succ:       46 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618

(barrier 1438 1437 1436)
;; basic block 44, loop depth 0, maybe hot
;;  prev block 43, next block 45, flags: (RTL, MODIFIED)
;;  pred:       42
;; bb 44 artificial_defs: { }
;; bb 44 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 294 295 296 297 298 299 300 301 302 303 304 305 782 783 784 785 786 787
(code_label 1436 1438 574 44 88 (nil) [1 uses])
(note 574 1436 575 44 [bb 44] NOTE_INSN_BASIC_BLOCK)
(insn 575 574 576 44 (set (reg:SI 1 dx [782])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":141 86 {*movsi_internal}
     (nil))
(insn 576 575 577 44 (set (reg:DI 1 dx [orig:294 _208 ] [294])
        (sign_extend:DI (reg:SI 1 dx [782]))) "CALWXT.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 577 576 578 44 (parallel [
            (set (reg:DI 2 cx [orig:295 _209 ] [295])
                (mult:DI (reg:DI 1 dx [orig:294 _208 ] [294])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":141 349 {*muldi3_1}
     (nil))
(insn 578 577 579 44 (set (reg:SI 1 dx [783])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":141 86 {*movsi_internal}
     (nil))
(insn 579 578 580 44 (set (reg:DI 1 dx [orig:296 _210 ] [296])
        (sign_extend:DI (reg:SI 1 dx [783]))) "CALWXT.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 580 579 581 44 (parallel [
            (set (reg:DI 1 dx [orig:297 _211 ] [297])
                (plus:DI (reg:DI 1 dx [orig:296 _210 ] [296])
                    (reg:DI 2 cx [orig:295 _209 ] [295])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":141 222 {*adddi_1}
     (nil))
(insn 581 580 582 44 (parallel [
            (set (reg:DI 2 cx [orig:298 _212 ] [298])
                (plus:DI (reg:DI 1 dx [orig:297 _211 ] [297])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":141 222 {*adddi_1}
     (nil))
(insn 582 581 583 44 (set (reg/f:DI 1 dx [784])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [4 iwx+0 S8 A64])) "CALWXT.f":141 85 {*movdi_internal}
     (nil))
(insn 583 582 584 44 (set (reg:SI 1 dx [orig:299 _213 ] [299])
        (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:298 _212 ] [298])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [784])) [2 *iwx_576(D) S4 A32])) "CALWXT.f":141 86 {*movsi_internal}
     (nil))
(insn 584 583 585 44 (set (reg:SI 2 cx [785])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":141 86 {*movsi_internal}
     (nil))
(insn 585 584 586 44 (set (reg:DI 2 cx [orig:300 _214 ] [300])
        (sign_extend:DI (reg:SI 2 cx [785]))) "CALWXT.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 586 585 587 44 (parallel [
            (set (reg:DI 4 si [orig:301 _215 ] [301])
                (mult:DI (reg:DI 2 cx [orig:300 _214 ] [300])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":141 349 {*muldi3_1}
     (nil))
(insn 587 586 588 44 (set (reg:SI 2 cx [786])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":141 86 {*movsi_internal}
     (nil))
(insn 588 587 589 44 (set (reg:DI 2 cx [orig:302 _216 ] [302])
        (sign_extend:DI (reg:SI 2 cx [786]))) "CALWXT.f":141 149 {*extendsidi2_rex64}
     (nil))
(insn 589 588 590 44 (parallel [
            (set (reg:DI 2 cx [orig:303 _217 ] [303])
                (plus:DI (reg:DI 2 cx [orig:302 _216 ] [302])
                    (reg:DI 4 si [orig:301 _215 ] [301])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":141 222 {*adddi_1}
     (nil))
(insn 590 589 591 44 (parallel [
            (set (reg:DI 2 cx [orig:304 _218 ] [304])
                (plus:DI (reg:DI 2 cx [orig:303 _217 ] [303])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":141 222 {*adddi_1}
     (nil))
(insn 591 590 592 44 (parallel [
            (set (reg:SI 4 si [orig:305 _219 ] [305])
                (plus:SI (reg:SI 1 dx [orig:299 _213 ] [299])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":141 221 {*addsi_1}
     (nil))
(insn 592 591 593 44 (set (reg/f:DI 1 dx [787])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [4 iwx+0 S8 A64])) "CALWXT.f":141 85 {*movdi_internal}
     (nil))
(insn 593 592 1439 44 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:304 _218 ] [304])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [787])) [2 *iwx_576(D) S4 A32])
        (reg:SI 4 si [orig:305 _219 ] [305])) "CALWXT.f":141 86 {*movsi_internal}
     (nil))
(jump_insn 1439 593 1440 44 (set (pc)
        (label_ref 607)) "CALWXT.f":142 683 {jump}
     (nil)
 -> 607)
;;  succ:       46 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618

(barrier 1440 1439 1435)
;; basic block 45, loop depth 0, maybe hot
;;  prev block 44, next block 101, flags: (RTL, MODIFIED)
;;  pred:       41
;; bb 45 artificial_defs: { }
;; bb 45 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 306 307 308 309 310 788 789 790
(code_label 1435 1440 597 45 87 (nil) [1 uses])
(note 597 1435 598 45 [bb 45] NOTE_INSN_BASIC_BLOCK)
(insn 598 597 599 45 (set (reg:SI 1 dx [788])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":145 86 {*movsi_internal}
     (nil))
(insn 599 598 600 45 (set (reg:DI 1 dx [orig:306 _220 ] [306])
        (sign_extend:DI (reg:SI 1 dx [788]))) "CALWXT.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 600 599 601 45 (parallel [
            (set (reg:DI 2 cx [orig:307 _221 ] [307])
                (mult:DI (reg:DI 1 dx [orig:306 _220 ] [306])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":145 349 {*muldi3_1}
     (nil))
(insn 601 600 602 45 (set (reg:SI 1 dx [789])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":145 86 {*movsi_internal}
     (nil))
(insn 602 601 603 45 (set (reg:DI 1 dx [orig:308 _222 ] [308])
        (sign_extend:DI (reg:SI 1 dx [789]))) "CALWXT.f":145 149 {*extendsidi2_rex64}
     (nil))
(insn 603 602 604 45 (parallel [
            (set (reg:DI 1 dx [orig:309 _223 ] [309])
                (plus:DI (reg:DI 1 dx [orig:308 _222 ] [308])
                    (reg:DI 2 cx [orig:307 _221 ] [307])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":145 222 {*adddi_1}
     (nil))
(insn 604 603 605 45 (parallel [
            (set (reg:DI 2 cx [orig:310 _224 ] [310])
                (plus:DI (reg:DI 1 dx [orig:309 _223 ] [309])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":145 222 {*adddi_1}
     (nil))
(insn 605 604 606 45 (set (reg/f:DI 1 dx [790])
        (symbol_ref:DI ("karr.3880") [flags 0x202]  <var_decl 0x7f2c99beb6c0 karr>)) "CALWXT.f":145 85 {*movdi_internal}
     (nil))
(insn 606 605 1484 45 (set (mem:SI (plus:DI (mult:DI (reg:DI 2 cx [orig:310 _224 ] [310])
                    (const_int 4 [0x4]))
                (reg/f:DI 1 dx [790])) [2 karr S4 A32])
        (const_int 1 [0x1])) "CALWXT.f":145 86 {*movsi_internal}
     (nil))
(jump_insn 1484 606 1485 45 (set (pc)
        (label_ref 607)) 683 {jump}
     (nil)
 -> 607)
;;  succ:       46
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618

(barrier 1485 1484 1487)
;; basic block 101, loop depth 0, maybe hot
;;  prev block 45, next block 46, flags: (RTL, MODIFIED)
;;  pred:       40
;; bb 101 artificial_defs: { }
;; bb 101 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1487 1485 1486 101 98 (nil) [1 uses])
(note 1486 1487 1488 101 [bb 101] NOTE_INSN_BASIC_BLOCK)
(insn 1488 1486 607 101 (const_int 0 [0]) "CALWXT.f":145 718 {nop}
     (nil))
;;  succ:       46 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618

;; basic block 46, loop depth 0, maybe hot
;;  prev block 101, next block 100, flags: (RTL, MODIFIED)
;;  pred:       101 [always]  (FALLTHRU)
;;              44 [always] 
;;              43 [always] 
;;              45
;; bb 46 artificial_defs: { }
;; bb 46 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 607 1488 608 46 27 (nil) [3 uses])
(note 608 607 609 46 [bb 46] NOTE_INSN_BASIC_BLOCK)
(insn 609 608 1441 46 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":118 221 {*addsi_1}
     (nil))
(jump_insn 1441 609 1442 46 (set (pc)
        (label_ref 610)) "CALWXT.f":118 683 {jump}
     (nil)
 -> 610)
;;  succ:       39 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618

(barrier 1442 1441 1482)
;; basic block 100, loop depth 0, maybe hot
;;  prev block 46, next block 47, flags: (RTL, MODIFIED)
;;  pred:       39
;; bb 100 artificial_defs: { }
;; bb 100 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1482 1442 1481 100 97 (nil) [1 uses])
(note 1481 1482 1483 100 [bb 100] NOTE_INSN_BASIC_BLOCK)
(insn 1483 1481 613 100 (const_int 0 [0]) "CALWXT.f":145 718 {nop}
     (nil))
;;  succ:       47 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618

;; basic block 47, loop depth 0, maybe hot
;;  prev block 100, next block 99, flags: (RTL, MODIFIED)
;;  pred:       100 [always]  (FALLTHRU)
;; bb 47 artificial_defs: { }
;; bb 47 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 613 1483 614 47 26 (nil) [0 uses])
(note 614 613 615 47 [bb 47] NOTE_INSN_BASIC_BLOCK)
(insn 615 614 1443 47 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":117 221 {*addsi_1}
     (nil))
(jump_insn 1443 615 1444 47 (set (pc)
        (label_ref 616)) "CALWXT.f":117 683 {jump}
     (nil)
 -> 616)
;;  succ:       37 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 618

(barrier 1444 1443 1479)
;; basic block 99, loop depth 0, maybe hot
;;  prev block 47, next block 48, flags: (RTL, MODIFIED)
;;  pred:       37
;; bb 99 artificial_defs: { }
;; bb 99 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1479 1444 1478 99 96 (nil) [1 uses])
(note 1478 1479 1480 99 [bb 99] NOTE_INSN_BASIC_BLOCK)
(insn 1480 1478 619 99 (const_int 0 [0]) "CALWXT.f":118 718 {nop}
     (nil))
;;  succ:       48 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 48, loop depth 0, maybe hot
;;  prev block 99, next block 49, flags: (RTL, MODIFIED)
;;  pred:       99 [always]  (FALLTHRU)
;; bb 48 artificial_defs: { }
;; bb 48 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 621 622 791 792 793
(code_label 619 1480 620 48 25 (nil) [0 uses])
(note 620 619 621 48 [bb 48] NOTE_INSN_BASIC_BLOCK)
(insn 621 620 622 48 (set (reg:DI 1 dx [791])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -168 [0xffffffffffffff58])) [3 htm+0 S8 A64])) "CALWXT.f":151 85 {*movdi_internal}
     (nil))
(insn 622 621 623 48 (set (reg:DI 4 si [792])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 q+0 S8 A64])) "CALWXT.f":151 85 {*movdi_internal}
     (nil))
(insn 623 622 624 48 (set (reg:DI 0 ax [793])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 t+0 S8 A64])) "CALWXT.f":151 85 {*movdi_internal}
     (nil))
(insn 624 623 625 48 (set (reg:DI 38 r9)
        (symbol_ref:DI ("twet.3906") [flags 0x202]  <var_decl 0x7f2c99bec2d0 twet>)) "CALWXT.f":151 85 {*movdi_internal}
     (nil))
(insn 625 624 626 48 (set (reg:DI 37 r8)
        (symbol_ref:DI ("karr.3880") [flags 0x202]  <var_decl 0x7f2c99beb6c0 karr>)) "CALWXT.f":151 85 {*movdi_internal}
     (nil))
(insn 626 625 627 48 (set (reg:DI 2 cx)
        (reg:DI 1 dx [791])) "CALWXT.f":151 85 {*movdi_internal}
     (nil))
(insn 627 626 629 48 (set (reg:DI 1 dx)
        (symbol_ref:DI ("pdsl.3887") [flags 0x202]  <var_decl 0x7f2c99beb990 pdsl>)) "CALWXT.f":151 85 {*movdi_internal}
     (nil))
(insn 629 627 630 48 (set (reg:DI 5 di)
        (reg:DI 0 ax [793])) "CALWXT.f":151 85 {*movdi_internal}
     (nil))
(insn 630 629 631 48 (set (reg:QI 0 ax)
        (const_int 0 [0])) "CALWXT.f":151 88 {*movqi_internal}
     (nil))
(call_insn 631 630 632 48 (call (mem:QI (symbol_ref:DI ("wetbulb_") [flags 0x41]  <function_decl 0x7f2c99bdc600 wetbulb>) [0 wetbulb S1 A8])
        (const_int 0 [0])) "CALWXT.f":151 689 {*call}
     (nil)
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (expr_list:DI (use (reg:DI 2 cx))
                        (expr_list:DI (use (reg:DI 37 r8))
                            (expr_list:DI (use (reg:DI 38 r9))
                                (nil)))))))))
(insn 632 631 633 48 (set (reg:SI 0 ax [orig:621 _636 ] [621])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f2c99be8900 parallel>)
                    (const_int 16 [0x10]))) [2 parallel.jsta_m+0 S4 A128])) "CALWXT.f":157 86 {*movsi_internal}
     (nil))
(insn 633 632 634 48 (set (reg:SI 3 bx [orig:622 _637 ] [622])
        (mem/c:SI (const:DI (plus:DI (symbol_ref:DI ("parallel_") [flags 0x2]  <var_decl 0x7f2c99be8900 parallel>)
                    (const_int 20 [0x14]))) [2 parallel.jend_m+0 S4 A32])) "CALWXT.f":157 86 {*movsi_internal}
     (nil))
(insn 634 633 1356 48 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
        (reg:SI 0 ax [orig:621 _636 ] [621])) "CALWXT.f":157 86 {*movsi_internal}
     (nil))
;;  succ:       49 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 49, loop depth 0, maybe hot
;;  prev block 48, next block 50, flags: (RTL, MODIFIED)
;;  pred:       48 (FALLTHRU)
;;              92 [always] 
;; bb 49 artificial_defs: { }
;; bb 49 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  def 	 17 [flags] 623 794
(code_label 1356 634 635 49 67 (nil) [1 uses])
(note 635 1356 636 49 [bb 49] NOTE_INSN_BASIC_BLOCK)
(insn 636 635 637 49 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
            (reg:SI 3 bx [orig:622 _637 ] [622]))) "CALWXT.f":157 11 {*cmpsi_1}
     (nil))
(insn 637 636 638 49 (set (reg:QI 0 ax [794])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALWXT.f":157 678 {*setcc_qi}
     (nil))
(insn 638 637 639 49 (set (reg:SI 0 ax [orig:623 _639 ] [623])
        (zero_extend:SI (reg:QI 0 ax [794]))) "CALWXT.f":157 140 {*zero_extendqisi2}
     (nil))
(insn 639 638 640 49 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:623 _639 ] [623])
            (const_int 0 [0]))) "CALWXT.f":157 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 640 639 641 49 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1490)
            (pc))) "CALWXT.f":157 682 {*jcc}
     (nil)
 -> 1490)
;;  succ:       102
;;              50 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 50, loop depth 0, maybe hot
;;  prev block 49, next block 51, flags: (RTL, MODIFIED)
;;  pred:       49 (FALLTHRU)
;; bb 50 artificial_defs: { }
;; bb 50 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 641 640 642 50 [bb 50] NOTE_INSN_BASIC_BLOCK)
(insn 642 641 1350 50 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
        (const_int 2 [0x2])) "CALWXT.f":158 86 {*movsi_internal}
     (nil))
;;  succ:       51 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 51, loop depth 0, maybe hot
;;  prev block 50, next block 52, flags: (RTL, MODIFIED)
;;  pred:       50 (FALLTHRU)
;;              91 [always] 
;; bb 51 artificial_defs: { }
;; bb 51 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 624 795
(code_label 1350 642 643 51 66 (nil) [1 uses])
(note 643 1350 644 51 [bb 51] NOTE_INSN_BASIC_BLOCK)
(insn 644 643 645 51 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
            (const_int 118 [0x76]))) "CALWXT.f":158 11 {*cmpsi_1}
     (nil))
(insn 645 644 646 51 (set (reg:QI 0 ax [795])
        (gt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALWXT.f":158 678 {*setcc_qi}
     (nil))
(insn 646 645 647 51 (set (reg:SI 0 ax [orig:624 _641 ] [624])
        (zero_extend:SI (reg:QI 0 ax [795]))) "CALWXT.f":158 140 {*zero_extendqisi2}
     (nil))
(insn 647 646 648 51 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:624 _641 ] [624])
            (const_int 0 [0]))) "CALWXT.f":158 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 648 647 649 51 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1493)
            (pc))) "CALWXT.f":158 682 {*jcc}
     (nil)
 -> 1493)
;;  succ:       103
;;              52 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 52, loop depth 0, maybe hot
;;  prev block 51, next block 53, flags: (RTL, MODIFIED)
;;  pred:       51 (FALLTHRU)
;; bb 52 artificial_defs: { }
;; bb 52 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 311 312 313 314 315 316 796 797 798
(note 649 648 650 52 [bb 52] NOTE_INSN_BASIC_BLOCK)
(insn 650 649 651 52 (set (reg:SI 0 ax [796])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":159 86 {*movsi_internal}
     (nil))
(insn 651 650 652 52 (set (reg:DI 0 ax [orig:311 _225 ] [311])
        (sign_extend:DI (reg:SI 0 ax [796]))) "CALWXT.f":159 149 {*extendsidi2_rex64}
     (nil))
(insn 652 651 653 52 (parallel [
            (set (reg:DI 1 dx [orig:312 _226 ] [312])
                (mult:DI (reg:DI 0 ax [orig:311 _225 ] [311])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":159 349 {*muldi3_1}
     (nil))
(insn 653 652 654 52 (set (reg:SI 0 ax [797])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":159 86 {*movsi_internal}
     (nil))
(insn 654 653 655 52 (set (reg:DI 0 ax [orig:313 _227 ] [313])
        (sign_extend:DI (reg:SI 0 ax [797]))) "CALWXT.f":159 149 {*extendsidi2_rex64}
     (nil))
(insn 655 654 656 52 (parallel [
            (set (reg:DI 0 ax [orig:314 _228 ] [314])
                (plus:DI (reg:DI 0 ax [orig:313 _227 ] [313])
                    (reg:DI 1 dx [orig:312 _226 ] [312])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":159 222 {*adddi_1}
     (nil))
(insn 656 655 657 52 (parallel [
            (set (reg:DI 1 dx [orig:315 _229 ] [315])
                (plus:DI (reg:DI 0 ax [orig:314 _228 ] [314])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":159 222 {*adddi_1}
     (nil))
(insn 657 656 658 52 (set (reg/f:DI 0 ax [798])
        (symbol_ref:DI ("karr.3880") [flags 0x202]  <var_decl 0x7f2c99beb6c0 karr>)) "CALWXT.f":159 85 {*movdi_internal}
     (nil))
(insn 658 657 659 52 (set (reg:SI 0 ax [orig:316 _230 ] [316])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:315 _229 ] [315])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [798])) [2 karr S4 A32])) "CALWXT.f":159 86 {*movsi_internal}
     (nil))
(insn 659 658 660 52 (set (reg:CCNO 17 flags)
        (compare:CCNO (reg:SI 0 ax [orig:316 _230 ] [316])
            (const_int 0 [0]))) "CALWXT.f":159 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 660 659 661 52 (set (pc)
        (if_then_else (le (reg:CCNO 17 flags)
                (const_int 0 [0]))
            (label_ref 1347)
            (pc))) "CALWXT.f":159 682 {*jcc}
     (nil)
 -> 1347)
;;  succ:       53 (FALLTHRU)
;;              91
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 53, loop depth 0, maybe hot
;;  prev block 52, next block 54, flags: (RTL, MODIFIED)
;;  pred:       52 (FALLTHRU)
;; bb 53 artificial_defs: { }
;; bb 53 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 317 318 319 320 321 322 323 324 325 326 327 328 329 330 331 332 333 334 335 336 337 338 339 340 341 342 343 344 345 346 625 626 799 800 801 802 803 804 805 806 807 808 809 810 811 812 813 814 815 816 817 818 819 820 821 822 823 824 825
(note 661 660 662 53 [bb 53] NOTE_INSN_BASIC_BLOCK)
(insn 662 661 663 53 (set (reg:SI 0 ax [799])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":160 86 {*movsi_internal}
     (nil))
(insn 663 662 664 53 (set (reg:DI 0 ax [orig:317 _231 ] [317])
        (sign_extend:DI (reg:SI 0 ax [799]))) "CALWXT.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 664 663 665 53 (parallel [
            (set (reg:DI 1 dx [orig:318 _232 ] [318])
                (mult:DI (reg:DI 0 ax [orig:317 _231 ] [317])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":160 349 {*muldi3_1}
     (nil))
(insn 665 664 666 53 (set (reg:SI 0 ax [800])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":160 86 {*movsi_internal}
     (nil))
(insn 666 665 667 53 (set (reg:DI 0 ax [orig:319 _233 ] [319])
        (sign_extend:DI (reg:SI 0 ax [800]))) "CALWXT.f":160 149 {*extendsidi2_rex64}
     (nil))
(insn 667 666 668 53 (parallel [
            (set (reg:DI 0 ax [orig:320 _234 ] [320])
                (plus:DI (reg:DI 0 ax [orig:319 _233 ] [319])
                    (reg:DI 1 dx [orig:318 _232 ] [318])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":160 222 {*adddi_1}
     (nil))
(insn 668 667 669 53 (parallel [
            (set (reg:DI 1 dx [orig:321 _235 ] [321])
                (plus:DI (reg:DI 0 ax [orig:320 _234 ] [320])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":160 222 {*adddi_1}
     (nil))
(insn 669 668 670 53 (set (reg/f:DI 0 ax [801])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -176 [0xffffffffffffff50])) [4 lmh+0 S8 A64])) "CALWXT.f":160 85 {*movdi_internal}
     (nil))
(insn 670 669 671 53 (set (reg:SI 0 ax [802])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:321 _235 ] [321])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [801])) [2 *lmh_589(D) S4 A32])) "CALWXT.f":160 86 {*movsi_internal}
     (nil))
(insn 671 670 672 53 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 lmhk+0 S4 A32])
        (reg:SI 0 ax [802])) "CALWXT.f":160 86 {*movsi_internal}
     (nil))
(insn 672 671 673 53 (set (reg:SI 0 ax [803])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":161 86 {*movsi_internal}
     (nil))
(insn 673 672 674 53 (set (reg:DI 0 ax [orig:322 _236 ] [322])
        (sign_extend:DI (reg:SI 0 ax [803]))) "CALWXT.f":161 149 {*extendsidi2_rex64}
     (nil))
(insn 674 673 675 53 (parallel [
            (set (reg:DI 1 dx [orig:323 _237 ] [323])
                (mult:DI (reg:DI 0 ax [orig:322 _236 ] [322])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":161 349 {*muldi3_1}
     (nil))
(insn 675 674 676 53 (set (reg:SI 0 ax [804])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":161 86 {*movsi_internal}
     (nil))
(insn 676 675 677 53 (set (reg:DI 0 ax [orig:324 _238 ] [324])
        (sign_extend:DI (reg:SI 0 ax [804]))) "CALWXT.f":161 149 {*extendsidi2_rex64}
     (nil))
(insn 677 676 678 53 (parallel [
            (set (reg:DI 0 ax [orig:325 _239 ] [325])
                (plus:DI (reg:DI 0 ax [orig:324 _238 ] [324])
                    (reg:DI 1 dx [orig:323 _237 ] [323])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":161 222 {*adddi_1}
     (nil))
(insn 678 677 679 53 (parallel [
            (set (reg:DI 1 dx [orig:326 _240 ] [326])
                (plus:DI (reg:DI 0 ax [orig:325 _239 ] [325])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":161 222 {*adddi_1}
     (nil))
(insn 679 678 680 53 (set (reg/f:DI 0 ax [805])
        (symbol_ref:DI ("licee.3884") [flags 0x202]  <var_decl 0x7f2c99beb870 licee>)) "CALWXT.f":161 85 {*movdi_internal}
     (nil))
(insn 680 679 681 53 (set (reg:SI 0 ax [806])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:326 _240 ] [326])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [805])) [2 licee S4 A32])) "CALWXT.f":161 86 {*movsi_internal}
     (nil))
(insn 681 680 682 53 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 lice+0 S4 A32])
        (reg:SI 0 ax [806])) "CALWXT.f":161 86 {*movsi_internal}
     (nil))
(insn 682 681 683 53 (set (reg:SI 0 ax [807])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":162 86 {*movsi_internal}
     (nil))
(insn 683 682 684 53 (set (reg:DI 0 ax [orig:327 _241 ] [327])
        (sign_extend:DI (reg:SI 0 ax [807]))) "CALWXT.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 684 683 685 53 (parallel [
            (set (reg:DI 1 dx [orig:328 _242 ] [328])
                (mult:DI (reg:DI 0 ax [orig:327 _241 ] [327])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":162 349 {*muldi3_1}
     (nil))
(insn 685 684 686 53 (set (reg:SI 0 ax [808])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":162 86 {*movsi_internal}
     (nil))
(insn 686 685 687 53 (set (reg:DI 0 ax [orig:329 _243 ] [329])
        (sign_extend:DI (reg:SI 0 ax [808]))) "CALWXT.f":162 149 {*extendsidi2_rex64}
     (nil))
(insn 687 686 688 53 (parallel [
            (set (reg:DI 0 ax [orig:330 _244 ] [330])
                (plus:DI (reg:DI 0 ax [orig:329 _243 ] [329])
                    (reg:DI 1 dx [orig:328 _242 ] [328])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":162 222 {*adddi_1}
     (nil))
(insn 688 687 689 53 (parallel [
            (set (reg:DI 1 dx [orig:331 _245 ] [331])
                (plus:DI (reg:DI 0 ax [orig:330 _244 ] [330])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":162 222 {*adddi_1}
     (nil))
(insn 689 688 690 53 (set (reg/f:DI 0 ax [809])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -160 [0xffffffffffffff60])) [3 pd+0 S8 A64])) "CALWXT.f":162 85 {*movdi_internal}
     (nil))
(insn 690 689 691 53 (set (reg:SF 22 xmm1 [orig:332 _246 ] [332])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:331 _245 ] [331])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [809])) [1 *pd_579(D) S4 A32])) "CALWXT.f":162 131 {*movsf_internal}
     (nil))
(insn 691 690 692 53 (set (reg/f:DI 0 ax [810])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [5 pt+0 S8 A64])) "CALWXT.f":162 85 {*movdi_internal}
     (nil))
(insn 692 691 693 53 (set (reg:SF 21 xmm0 [orig:333 _247 ] [333])
        (mem:SF (reg/f:DI 0 ax [810]) [1 *pt_592(D)+0 S4 A32])) "CALWXT.f":162 131 {*movsf_internal}
     (nil))
(insn 693 692 694 53 (set (reg:SF 21 xmm0 [811])
        (plus:SF (reg:SF 21 xmm0 [orig:333 _247 ] [333])
            (reg:SF 22 xmm1 [orig:332 _246 ] [332]))) "CALWXT.f":162 838 {*fop_sf_comm}
     (nil))
(insn 694 693 695 53 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 psfck+0 S4 A32])
        (reg:SF 21 xmm0 [811])) "CALWXT.f":162 131 {*movsf_internal}
     (nil))
(insn 695 694 696 53 (set (reg:SI 0 ax [812])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 lmhk+0 S4 A32])) "CALWXT.f":163 86 {*movsi_internal}
     (nil))
(insn 696 695 697 53 (set (reg:DI 0 ax [orig:334 _248 ] [334])
        (sign_extend:DI (reg:SI 0 ax [812]))) "CALWXT.f":163 149 {*extendsidi2_rex64}
     (nil))
(insn 697 696 698 53 (parallel [
            (set (reg:DI 1 dx [orig:335 _249 ] [335])
                (mult:DI (reg:DI 0 ax [orig:334 _248 ] [334])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":163 349 {*muldi3_1}
     (nil))
(insn 698 697 699 53 (set (reg:SI 0 ax [813])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":163 86 {*movsi_internal}
     (nil))
(insn 699 698 700 53 (set (reg:DI 0 ax [orig:336 _250 ] [336])
        (sign_extend:DI (reg:SI 0 ax [813]))) "CALWXT.f":163 149 {*extendsidi2_rex64}
     (nil))
(insn 700 699 701 53 (parallel [
            (set (reg:DI 0 ax [orig:337 _251 ] [337])
                (mult:DI (reg:DI 0 ax [orig:336 _250 ] [336])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":163 349 {*muldi3_1}
     (nil))
(insn 701 700 702 53 (parallel [
            (set (reg:DI 1 dx [orig:338 _252 ] [338])
                (plus:DI (reg:DI 1 dx [orig:335 _249 ] [335])
                    (reg:DI 0 ax [orig:337 _251 ] [337])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":163 222 {*adddi_1}
     (nil))
(insn 702 701 703 53 (set (reg:SI 0 ax [814])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":163 86 {*movsi_internal}
     (nil))
(insn 703 702 704 53 (set (reg:DI 0 ax [orig:339 _253 ] [339])
        (sign_extend:DI (reg:SI 0 ax [814]))) "CALWXT.f":163 149 {*extendsidi2_rex64}
     (nil))
(insn 704 703 705 53 (parallel [
            (set (reg:DI 0 ax [orig:340 _254 ] [340])
                (plus:DI (reg:DI 0 ax [orig:339 _253 ] [339])
                    (reg:DI 1 dx [orig:338 _252 ] [338])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":163 222 {*adddi_1}
     (nil))
(insn 705 704 706 53 (parallel [
            (set (reg:DI 1 dx [orig:341 _255 ] [341])
                (plus:DI (reg:DI 0 ax [orig:340 _254 ] [340])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":163 222 {*adddi_1}
     (nil))
(insn 706 705 707 53 (set (reg/f:DI 0 ax [815])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 t+0 S8 A64])) "CALWXT.f":163 85 {*movdi_internal}
     (nil))
(insn 707 706 708 53 (set (reg:SF 21 xmm0 [816])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:341 _255 ] [341])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [815])) [1 *t_595(D) S4 A32])) "CALWXT.f":163 131 {*movsf_internal}
     (nil))
(insn 708 707 709 53 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -100 [0xffffffffffffff9c])) [1 tlmhk+0 S4 A32])
        (reg:SF 21 xmm0 [816])) "CALWXT.f":163 131 {*movsf_internal}
     (nil))
(insn 709 708 710 53 (set (reg:SI 0 ax [817])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":164 86 {*movsi_internal}
     (nil))
(insn 710 709 711 53 (set (reg:DI 0 ax [orig:342 _256 ] [342])
        (sign_extend:DI (reg:SI 0 ax [817]))) "CALWXT.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 711 710 712 53 (parallel [
            (set (reg:DI 1 dx [orig:343 _257 ] [343])
                (mult:DI (reg:DI 0 ax [orig:342 _256 ] [342])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":164 349 {*muldi3_1}
     (nil))
(insn 712 711 713 53 (set (reg:SI 0 ax [818])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":164 86 {*movsi_internal}
     (nil))
(insn 713 712 714 53 (set (reg:DI 0 ax [orig:344 _258 ] [344])
        (sign_extend:DI (reg:SI 0 ax [818]))) "CALWXT.f":164 149 {*extendsidi2_rex64}
     (nil))
(insn 714 713 715 53 (parallel [
            (set (reg:DI 0 ax [orig:345 _259 ] [345])
                (plus:DI (reg:DI 0 ax [orig:344 _258 ] [344])
                    (reg:DI 1 dx [orig:343 _257 ] [343])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":164 222 {*adddi_1}
     (nil))
(insn 715 714 716 53 (parallel [
            (set (reg:DI 1 dx [orig:346 _260 ] [346])
                (plus:DI (reg:DI 0 ax [orig:345 _259 ] [345])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":164 222 {*adddi_1}
     (nil))
(insn 716 715 717 53 (set (reg/f:DI 0 ax [819])
        (symbol_ref:DI ("twarm.3904") [flags 0x202]  <var_decl 0x7f2c99bec240 twarm>)) "CALWXT.f":164 85 {*movdi_internal}
     (nil))
(insn 717 716 718 53 (set (reg:SF 21 xmm0 [820])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:346 _260 ] [346])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [819])) [1 twarm S4 A32])) "CALWXT.f":164 131 {*movsf_internal}
     (nil))
(insn 718 717 719 53 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -108 [0xffffffffffffff94])) [1 twrmk+0 S4 A32])
        (reg:SF 21 xmm0 [820])) "CALWXT.f":164 131 {*movsf_internal}
     (nil))
(insn 719 718 720 53 (set (reg:SF 21 xmm0 [821])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "CALWXT.f":177 131 {*movsf_internal}
     (nil))
(insn 720 719 721 53 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 areas8+0 S4 A32])
        (reg:SF 21 xmm0 [821])) "CALWXT.f":177 131 {*movsf_internal}
     (nil))
(insn 721 720 722 53 (set (reg:SF 21 xmm0 [822])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "CALWXT.f":178 131 {*movsf_internal}
     (nil))
(insn 722 721 723 53 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 areap4+0 S4 A32])
        (reg:SF 21 xmm0 [822])) "CALWXT.f":178 131 {*movsf_internal}
     (nil))
(insn 723 722 724 53 (set (reg:SF 21 xmm0 [823])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "CALWXT.f":179 131 {*movsf_internal}
     (nil))
(insn 724 723 725 53 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 surfw+0 S4 A32])
        (reg:SF 21 xmm0 [823])) "CALWXT.f":179 131 {*movsf_internal}
     (nil))
(insn 725 724 726 53 (set (reg:SF 21 xmm0 [824])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC13") [flags 0x2]) [0  S4 A32])) "CALWXT.f":180 131 {*movsf_internal}
     (nil))
(insn 726 725 727 53 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 surfc+0 S4 A32])
        (reg:SF 21 xmm0 [824])) "CALWXT.f":180 131 {*movsf_internal}
     (nil))
(insn 727 726 728 53 (set (reg:SF 21 xmm0 [825])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 psfck+0 S4 A32])) "CALWXT.f":181 131 {*movsf_internal}
     (nil))
(insn 728 727 729 53 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pintk1+0 S4 A32])
        (reg:SF 21 xmm0 [825])) "CALWXT.f":181 131 {*movsf_internal}
     (nil))
(insn 729 728 730 53 (set (reg:SI 0 ax [orig:625 _652 ] [625])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 lmhk+0 S4 A32])) "CALWXT.f":183 86 {*movsi_internal}
     (nil))
(insn 730 729 731 53 (set (reg:SI 41 r12 [orig:626 _653 ] [626])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -104 [0xffffffffffffff98])) [2 lice+0 S4 A32])) "CALWXT.f":183 86 {*movsi_internal}
     (nil))
(insn 731 730 845 53 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
        (reg:SI 0 ax [orig:625 _652 ] [625])) "CALWXT.f":183 86 {*movsi_internal}
     (nil))
;;  succ:       54 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622 626

;; basic block 54, loop depth 0, maybe hot
;;  prev block 53, next block 55, flags: (RTL, MODIFIED)
;;  pred:       53 (FALLTHRU)
;;              57 [always] 
;; bb 54 artificial_defs: { }
;; bb 54 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622 626
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 626
;; lr  def 	 17 [flags] 627 826
(code_label 845 731 732 54 40 (nil) [1 uses])
(note 732 845 733 54 [bb 54] NOTE_INSN_BASIC_BLOCK)
(insn 733 732 734 54 (set (reg:CCGC 17 flags)
        (compare:CCGC (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
            (reg:SI 41 r12 [orig:626 _653 ] [626]))) "CALWXT.f":183 11 {*cmpsi_1}
     (nil))
(insn 734 733 735 54 (set (reg:QI 0 ax [826])
        (lt:QI (reg:CCGC 17 flags)
            (const_int 0 [0]))) "CALWXT.f":183 678 {*setcc_qi}
     (nil))
(insn 735 734 736 54 (set (reg:SI 0 ax [orig:627 _655 ] [627])
        (zero_extend:SI (reg:QI 0 ax [826]))) "CALWXT.f":183 140 {*zero_extendqisi2}
     (nil))
(insn 736 735 737 54 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:627 _655 ] [627])
            (const_int 0 [0]))) "CALWXT.f":183 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 737 736 738 54 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1496)
            (pc))) "CALWXT.f":183 682 {*jcc}
     (nil)
 -> 1496)
;;  succ:       104
;;              55 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622 626

;; basic block 55, loop depth 0, maybe hot
;;  prev block 54, next block 56, flags: (RTL, MODIFIED)
;;  pred:       54 (FALLTHRU)
;; bb 55 artificial_defs: { }
;; bb 55 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622 626
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 347 348 349 350 351 352 353 354 355 356 357 358 359 360 361 362 363 364 365 366 367 368 369 370 371 372 373 374 375 376 377 378 379 380 381 382 383 384 385 386 387 388 389 390 391 392 393 394 395 396 397 398 399 400 401 402 827 828 829 830 831 832 833 834 835 836 837 838 839 840 841 842 843 844 845 846 847 848 849 850 851 852 853 854 855 856 857
(note 738 737 739 55 [bb 55] NOTE_INSN_BASIC_BLOCK)
(insn 739 738 740 55 (set (reg:SI 0 ax [827])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":184 86 {*movsi_internal}
     (nil))
(insn 740 739 741 55 (set (reg:DI 0 ax [orig:347 _261 ] [347])
        (sign_extend:DI (reg:SI 0 ax [827]))) "CALWXT.f":184 149 {*extendsidi2_rex64}
     (nil))
(insn 741 740 742 55 (parallel [
            (set (reg:DI 1 dx [orig:348 _262 ] [348])
                (mult:DI (reg:DI 0 ax [orig:347 _261 ] [347])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":184 349 {*muldi3_1}
     (nil))
(insn 742 741 743 55 (set (reg:SI 0 ax [828])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":184 86 {*movsi_internal}
     (nil))
(insn 743 742 744 55 (set (reg:DI 0 ax [orig:349 _263 ] [349])
        (sign_extend:DI (reg:SI 0 ax [828]))) "CALWXT.f":184 149 {*extendsidi2_rex64}
     (nil))
(insn 744 743 745 55 (parallel [
            (set (reg:DI 0 ax [orig:350 _264 ] [350])
                (plus:DI (reg:DI 0 ax [orig:349 _263 ] [349])
                    (reg:DI 1 dx [orig:348 _262 ] [348])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":184 222 {*adddi_1}
     (nil))
(insn 745 744 746 55 (parallel [
            (set (reg:DI 1 dx [orig:351 _265 ] [351])
                (plus:DI (reg:DI 0 ax [orig:350 _264 ] [350])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":184 222 {*adddi_1}
     (nil))
(insn 746 745 747 55 (set (reg/f:DI 0 ax [829])
        (symbol_ref:DI ("pdsl.3887") [flags 0x202]  <var_decl 0x7f2c99beb990 pdsl>)) "CALWXT.f":184 85 {*movdi_internal}
     (nil))
(insn 747 746 748 55 (set (reg:SF 22 xmm1 [orig:352 _266 ] [352])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:351 _265 ] [351])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [829])) [1 pdsl S4 A32])) "CALWXT.f":184 131 {*movsf_internal}
     (nil))
(insn 748 747 749 55 (set (reg:SI 0 ax [830])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":184 86 {*movsi_internal}
     (nil))
(insn 749 748 750 55 (set (reg:DI 0 ax [orig:353 _267 ] [353])
        (sign_extend:DI (reg:SI 0 ax [830]))) "CALWXT.f":184 149 {*extendsidi2_rex64}
     (nil))
(insn 750 749 751 55 (parallel [
            (set (reg:DI 1 dx [orig:354 _268 ] [354])
                (plus:DI (reg:DI 0 ax [orig:353 _267 ] [353])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":184 222 {*adddi_1}
     (nil))
(insn 751 750 752 55 (set (reg/f:DI 0 ax [831])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [3 eta+0 S8 A64])) "CALWXT.f":184 85 {*movdi_internal}
     (nil))
(insn 752 751 753 55 (set (reg:SF 21 xmm0 [orig:355 _269 ] [355])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:354 _268 ] [354])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [831])) [1 *eta_656(D) S4 A32])) "CALWXT.f":184 131 {*movsf_internal}
     (nil))
(insn 753 752 754 55 (set (reg:SF 22 xmm1 [orig:356 _270 ] [356])
        (mult:SF (reg:SF 22 xmm1 [orig:352 _266 ] [352])
            (reg:SF 21 xmm0 [orig:355 _269 ] [355]))) "CALWXT.f":184 838 {*fop_sf_comm}
     (nil))
(insn 754 753 755 55 (set (reg/f:DI 0 ax [832])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [5 pt+0 S8 A64])) "CALWXT.f":184 85 {*movdi_internal}
     (nil))
(insn 755 754 756 55 (set (reg:SF 21 xmm0 [orig:357 _271 ] [357])
        (mem:SF (reg/f:DI 0 ax [832]) [1 *pt_592(D)+0 S4 A32])) "CALWXT.f":184 131 {*movsf_internal}
     (nil))
(insn 756 755 757 55 (set (reg:SF 21 xmm0 [833])
        (plus:SF (reg:SF 21 xmm0 [orig:357 _271 ] [357])
            (reg:SF 22 xmm1 [orig:356 _270 ] [356]))) "CALWXT.f":184 838 {*fop_sf_comm}
     (nil))
(insn 757 756 758 55 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [1 pintk2+0 S4 A32])
        (reg:SF 21 xmm0 [833])) "CALWXT.f":184 131 {*movsf_internal}
     (nil))
(insn 758 757 759 55 (set (reg:SI 0 ax [834])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":186 86 {*movsi_internal}
     (nil))
(insn 759 758 760 55 (set (reg:DI 0 ax [orig:358 _272 ] [358])
        (sign_extend:DI (reg:SI 0 ax [834]))) "CALWXT.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 760 759 761 55 (parallel [
            (set (reg:DI 1 dx [orig:359 _273 ] [359])
                (mult:DI (reg:DI 0 ax [orig:358 _272 ] [358])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":186 349 {*muldi3_1}
     (nil))
(insn 761 760 762 55 (set (reg:SI 0 ax [835])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":186 86 {*movsi_internal}
     (nil))
(insn 762 761 763 55 (set (reg:DI 0 ax [orig:360 _274 ] [360])
        (sign_extend:DI (reg:SI 0 ax [835]))) "CALWXT.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 763 762 764 55 (parallel [
            (set (reg:DI 0 ax [orig:361 _275 ] [361])
                (mult:DI (reg:DI 0 ax [orig:360 _274 ] [360])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":186 349 {*muldi3_1}
     (nil))
(insn 764 763 765 55 (parallel [
            (set (reg:DI 1 dx [orig:362 _276 ] [362])
                (plus:DI (reg:DI 1 dx [orig:359 _273 ] [359])
                    (reg:DI 0 ax [orig:361 _275 ] [361])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":186 222 {*adddi_1}
     (nil))
(insn 765 764 766 55 (set (reg:SI 0 ax [836])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":186 86 {*movsi_internal}
     (nil))
(insn 766 765 767 55 (set (reg:DI 0 ax [orig:363 _277 ] [363])
        (sign_extend:DI (reg:SI 0 ax [836]))) "CALWXT.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 767 766 768 55 (parallel [
            (set (reg:DI 0 ax [orig:364 _278 ] [364])
                (plus:DI (reg:DI 0 ax [orig:363 _277 ] [363])
                    (reg:DI 1 dx [orig:362 _276 ] [362])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":186 222 {*adddi_1}
     (nil))
(insn 768 767 769 55 (parallel [
            (set (reg:DI 1 dx [orig:365 _279 ] [365])
                (plus:DI (reg:DI 0 ax [orig:364 _278 ] [364])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":186 222 {*adddi_1}
     (nil))
(insn 769 768 770 55 (set (reg/f:DI 0 ax [837])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 t+0 S8 A64])) "CALWXT.f":186 85 {*movdi_internal}
     (nil))
(insn 770 769 771 55 (set (reg:SF 21 xmm0 [orig:366 _280 ] [366])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:365 _279 ] [365])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [837])) [1 *t_595(D) S4 A32])) "CALWXT.f":186 131 {*movsf_internal}
     (nil))
(insn 771 770 772 55 (set (reg:SI 0 ax [838])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":186 86 {*movsi_internal}
     (nil))
(insn 772 771 773 55 (set (reg:DI 0 ax [orig:367 _281 ] [367])
        (sign_extend:DI (reg:SI 0 ax [838]))) "CALWXT.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 773 772 774 55 (parallel [
            (set (reg:DI 1 dx [orig:368 _282 ] [368])
                (mult:DI (reg:DI 0 ax [orig:367 _281 ] [367])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":186 349 {*muldi3_1}
     (nil))
(insn 774 773 775 55 (set (reg:SI 0 ax [839])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":186 86 {*movsi_internal}
     (nil))
(insn 775 774 776 55 (set (reg:DI 0 ax [orig:369 _283 ] [369])
        (sign_extend:DI (reg:SI 0 ax [839]))) "CALWXT.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 776 775 777 55 (parallel [
            (set (reg:DI 0 ax [orig:370 _284 ] [370])
                (mult:DI (reg:DI 0 ax [orig:369 _283 ] [369])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":186 349 {*muldi3_1}
     (nil))
(insn 777 776 778 55 (parallel [
            (set (reg:DI 1 dx [orig:371 _285 ] [371])
                (plus:DI (reg:DI 1 dx [orig:368 _282 ] [368])
                    (reg:DI 0 ax [orig:370 _284 ] [370])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":186 222 {*adddi_1}
     (nil))
(insn 778 777 779 55 (set (reg:SI 0 ax [840])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":186 86 {*movsi_internal}
     (nil))
(insn 779 778 780 55 (set (reg:DI 0 ax [orig:372 _286 ] [372])
        (sign_extend:DI (reg:SI 0 ax [840]))) "CALWXT.f":186 149 {*extendsidi2_rex64}
     (nil))
(insn 780 779 781 55 (parallel [
            (set (reg:DI 0 ax [orig:373 _287 ] [373])
                (plus:DI (reg:DI 0 ax [orig:372 _286 ] [372])
                    (reg:DI 1 dx [orig:371 _285 ] [371])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":186 222 {*adddi_1}
     (nil))
(insn 781 780 782 55 (parallel [
            (set (reg:DI 1 dx [orig:374 _288 ] [374])
                (plus:DI (reg:DI 0 ax [orig:373 _287 ] [373])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":186 222 {*adddi_1}
     (nil))
(insn 782 781 783 55 (set (reg/f:DI 0 ax [841])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 q+0 S8 A64])) "CALWXT.f":186 85 {*movdi_internal}
     (nil))
(insn 783 782 784 55 (set (reg:SF 23 xmm2 [orig:375 _289 ] [375])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:374 _288 ] [374])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [841])) [1 *q_602(D) S4 A32])) "CALWXT.f":186 131 {*movsf_internal}
     (nil))
(insn 784 783 785 55 (set (reg:SF 22 xmm1 [842])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S4 A32])) "CALWXT.f":186 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 785 784 786 55 (set (reg:SF 23 xmm2 [orig:376 _290 ] [376])
        (mult:SF (reg:SF 23 xmm2 [orig:375 _289 ] [375])
            (reg:SF 22 xmm1 [842]))) "CALWXT.f":186 838 {*fop_sf_comm}
     (nil))
(insn 786 785 787 55 (set (reg:SF 22 xmm1 [843])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S4 A32])) "CALWXT.f":186 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 787 786 789 55 (set (reg:SF 22 xmm1 [orig:377 _291 ] [377])
        (plus:SF (reg:SF 22 xmm1 [843])
            (reg:SF 23 xmm2 [orig:376 _290 ] [376]))) "CALWXT.f":186 838 {*fop_sf_comm}
     (nil))
(insn 789 787 790 55 (set (reg:SF 22 xmm1 [orig:379 _293 ] [379])
        (mult:SF (reg:SF 22 xmm1 [orig:378 _292 ] [378])
            (reg:SF 21 xmm0 [orig:366 _280 ] [366]))) "CALWXT.f":186 838 {*fop_sf_comm}
     (nil))
(insn 790 789 791 55 (set (reg:SF 21 xmm0 [844])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "CALWXT.f":186 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.92897968292236328125e+1 [0x0.ea5181p+5])
        (nil)))
(insn 791 790 1513 55 (set (reg:SF 22 xmm1 [orig:379 _293 ] [379])
        (mult:SF (reg:SF 22 xmm1 [orig:379 _293 ] [379])
            (reg:SF 21 xmm0 [844]))) "CALWXT.f":186 838 {*fop_sf_comm}
     (nil))
(insn 1513 791 1532 55 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [7 %sfp+-164 S4 A32])
        (reg:SF 22 xmm1 [orig:379 _293 ] [379])) "CALWXT.f":186 131 {*movsf_internal}
     (nil))
(note 1532 1513 1524 55 NOTE_INSN_DELETED)
(note 1524 1532 792 55 NOTE_INSN_DELETED)
(insn 792 1524 793 55 (set (reg:SF 21 xmm0 [845])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pintk1+0 S4 A32])) "CALWXT.f":186 131 {*movsf_internal}
     (nil))
(insn 793 792 795 55 (set (reg:SF 21 xmm0 [orig:381 _295 ] [381])
        (div:SF (reg:SF 21 xmm0 [845])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])) [1 pintk2+0 S4 A32]))) "CALWXT.f":186 841 {*fop_sf_1}
     (nil))
(call_insn/u 795 793 1514 55 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f2c99a54900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALWXT.f":186 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 1514 795 1531 55 NOTE_INSN_DELETED)
(note 1531 1514 797 55 NOTE_INSN_DELETED)
(insn 797 1531 798 55 (set (reg:SF 21 xmm0 [846])
        (mult:SF (reg:SF 21 xmm0 [orig:382 _296 ] [382])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -180 [0xffffffffffffff4c])) [7 %sfp+-164 S4 A32]))) "CALWXT.f":186 838 {*fop_sf_comm}
     (nil))
(insn 798 797 799 55 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 dzkl+0 S4 A32])
        (reg:SF 21 xmm0 [846])) "CALWXT.f":186 131 {*movsf_internal}
     (nil))
(insn 799 798 800 55 (set (reg:SI 0 ax [847])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":187 86 {*movsi_internal}
     (nil))
(insn 800 799 801 55 (set (reg:DI 0 ax [orig:383 _297 ] [383])
        (sign_extend:DI (reg:SI 0 ax [847]))) "CALWXT.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 801 800 802 55 (parallel [
            (set (reg:DI 1 dx [orig:384 _298 ] [384])
                (mult:DI (reg:DI 0 ax [orig:383 _297 ] [383])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":187 349 {*muldi3_1}
     (nil))
(insn 802 801 803 55 (set (reg:SI 0 ax [848])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":187 86 {*movsi_internal}
     (nil))
(insn 803 802 804 55 (set (reg:DI 0 ax [orig:385 _299 ] [385])
        (sign_extend:DI (reg:SI 0 ax [848]))) "CALWXT.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 804 803 805 55 (parallel [
            (set (reg:DI 0 ax [orig:386 _300 ] [386])
                (mult:DI (reg:DI 0 ax [orig:385 _299 ] [385])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":187 349 {*muldi3_1}
     (nil))
(insn 805 804 806 55 (parallel [
            (set (reg:DI 1 dx [orig:387 _301 ] [387])
                (plus:DI (reg:DI 1 dx [orig:384 _298 ] [384])
                    (reg:DI 0 ax [orig:386 _300 ] [386])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":187 222 {*adddi_1}
     (nil))
(insn 806 805 807 55 (set (reg:SI 0 ax [849])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":187 86 {*movsi_internal}
     (nil))
(insn 807 806 808 55 (set (reg:DI 0 ax [orig:388 _302 ] [388])
        (sign_extend:DI (reg:SI 0 ax [849]))) "CALWXT.f":187 149 {*extendsidi2_rex64}
     (nil))
(insn 808 807 809 55 (parallel [
            (set (reg:DI 0 ax [orig:389 _303 ] [389])
                (plus:DI (reg:DI 0 ax [orig:388 _302 ] [388])
                    (reg:DI 1 dx [orig:387 _301 ] [387])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":187 222 {*adddi_1}
     (nil))
(insn 809 808 810 55 (parallel [
            (set (reg:DI 1 dx [orig:390 _304 ] [390])
                (plus:DI (reg:DI 0 ax [orig:389 _303 ] [389])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":187 222 {*adddi_1}
     (nil))
(insn 810 809 811 55 (set (reg/f:DI 0 ax [850])
        (symbol_ref:DI ("twet.3906") [flags 0x202]  <var_decl 0x7f2c99bec2d0 twet>)) "CALWXT.f":187 85 {*movdi_internal}
     (nil))
(insn 811 810 812 55 (set (reg:SF 21 xmm0 [orig:391 _305 ] [391])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:390 _304 ] [390])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [850])) [1 twet S4 A32])) "CALWXT.f":187 131 {*movsf_internal}
     (nil))
(insn 812 811 813 55 (set (reg:SF 22 xmm1 [851])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32])) "CALWXT.f":187 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.69149993896484375e+2 [0x0.869333p+9])
        (nil)))
(insn 813 812 814 55 (set (reg:SF 21 xmm0 [orig:392 _306 ] [392])
        (minus:SF (reg:SF 21 xmm0 [orig:391 _305 ] [391])
            (reg:SF 22 xmm1 [851]))) "CALWXT.f":187 841 {*fop_sf_1}
     (nil))
(insn 814 813 815 55 (set (reg:SF 22 xmm1 [orig:393 _307 ] [393])
        (reg:SF 21 xmm0 [orig:392 _306 ] [392])) "CALWXT.f":187 131 {*movsf_internal}
     (nil))
(insn 815 814 816 55 (set (reg:SF 21 xmm0 [853])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 dzkl+0 S4 A32])) "CALWXT.f":187 131 {*movsf_internal}
     (nil))
(insn 816 815 817 55 (set (reg:SF 21 xmm0 [852])
        (mult:SF (reg:SF 21 xmm0 [853])
            (reg:SF 22 xmm1 [orig:393 _307 ] [393]))) "CALWXT.f":187 838 {*fop_sf_comm}
     (nil))
(insn 817 816 818 55 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 area1+0 S4 A32])
        (reg:SF 21 xmm0 [852])) "CALWXT.f":187 131 {*movsf_internal}
     (nil))
(insn 818 817 819 55 (set (reg:SI 0 ax [854])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":188 86 {*movsi_internal}
     (nil))
(insn 819 818 820 55 (set (reg:DI 0 ax [orig:394 _308 ] [394])
        (sign_extend:DI (reg:SI 0 ax [854]))) "CALWXT.f":188 149 {*extendsidi2_rex64}
     (nil))
(insn 820 819 821 55 (parallel [
            (set (reg:DI 1 dx [orig:395 _309 ] [395])
                (mult:DI (reg:DI 0 ax [orig:394 _308 ] [394])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":188 349 {*muldi3_1}
     (nil))
(insn 821 820 822 55 (set (reg:SI 0 ax [855])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":188 86 {*movsi_internal}
     (nil))
(insn 822 821 823 55 (set (reg:DI 0 ax [orig:396 _310 ] [396])
        (sign_extend:DI (reg:SI 0 ax [855]))) "CALWXT.f":188 149 {*extendsidi2_rex64}
     (nil))
(insn 823 822 824 55 (parallel [
            (set (reg:DI 0 ax [orig:397 _311 ] [397])
                (mult:DI (reg:DI 0 ax [orig:396 _310 ] [396])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":188 349 {*muldi3_1}
     (nil))
(insn 824 823 825 55 (parallel [
            (set (reg:DI 1 dx [orig:398 _312 ] [398])
                (plus:DI (reg:DI 1 dx [orig:395 _309 ] [395])
                    (reg:DI 0 ax [orig:397 _311 ] [397])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":188 222 {*adddi_1}
     (nil))
(insn 825 824 826 55 (set (reg:SI 0 ax [856])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":188 86 {*movsi_internal}
     (nil))
(insn 826 825 827 55 (set (reg:DI 0 ax [orig:399 _313 ] [399])
        (sign_extend:DI (reg:SI 0 ax [856]))) "CALWXT.f":188 149 {*extendsidi2_rex64}
     (nil))
(insn 827 826 828 55 (parallel [
            (set (reg:DI 0 ax [orig:400 _314 ] [400])
                (plus:DI (reg:DI 0 ax [orig:399 _313 ] [399])
                    (reg:DI 1 dx [orig:398 _312 ] [398])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":188 222 {*adddi_1}
     (nil))
(insn 828 827 829 55 (parallel [
            (set (reg:DI 1 dx [orig:401 _315 ] [401])
                (plus:DI (reg:DI 0 ax [orig:400 _314 ] [400])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":188 222 {*adddi_1}
     (nil))
(insn 829 828 830 55 (set (reg/f:DI 0 ax [857])
        (symbol_ref:DI ("twet.3906") [flags 0x202]  <var_decl 0x7f2c99bec2d0 twet>)) "CALWXT.f":188 85 {*movdi_internal}
     (nil))
(insn 830 829 831 55 (set (reg:SF 21 xmm0 [orig:402 _316 ] [402])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:401 _315 ] [401])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [857])) [1 twet S4 A32])) "CALWXT.f":188 131 {*movsf_internal}
     (nil))
(insn 831 830 832 55 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:402 _316 ] [402])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC12") [flags 0x2]) [0  S4 A32]))) "CALWXT.f":188 53 {*cmpisf}
     (nil))
(jump_insn 832 831 836 55 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 840)
            (pc))) "CALWXT.f":188 682 {*jcc}
     (nil)
 -> 840)
;;  succ:       56 (FALLTHRU)
;;              57
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622 626

;; basic block 56, loop depth 0, maybe hot
;;  prev block 55, next block 57, flags: (RTL, MODIFIED)
;;  pred:       55 (FALLTHRU)
;; bb 56 artificial_defs: { }
;; bb 56 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622 626
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 858 859
(note 836 832 837 56 [bb 56] NOTE_INSN_BASIC_BLOCK)
(insn 837 836 838 56 (set (reg:SF 21 xmm0 [859])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 areap4+0 S4 A32])) "CALWXT.f":188 131 {*movsf_internal}
     (nil))
(insn 838 837 839 56 (set (reg:SF 21 xmm0 [858])
        (plus:SF (reg:SF 21 xmm0 [859])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])) [1 area1+0 S4 A32]))) "CALWXT.f":188 838 {*fop_sf_comm}
     (nil))
(insn 839 838 840 56 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -20 [0xffffffffffffffec])) [1 areap4+0 S4 A32])
        (reg:SF 21 xmm0 [858])) "CALWXT.f":188 131 {*movsf_internal}
     (nil))
;;  succ:       57 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622 626

;; basic block 57, loop depth 0, maybe hot
;;  prev block 56, next block 104, flags: (RTL, MODIFIED)
;;  pred:       56 (FALLTHRU)
;;              55
;; bb 57 artificial_defs: { }
;; bb 57 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622 626
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 860
(code_label 840 839 841 57 38 (nil) [1 uses])
(note 841 840 842 57 [bb 57] NOTE_INSN_BASIC_BLOCK)
(insn 842 841 843 57 (set (reg:SF 21 xmm0 [860])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [1 pintk2+0 S4 A32])) "CALWXT.f":189 131 {*movsf_internal}
     (nil))
(insn 843 842 844 57 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pintk1+0 S4 A32])
        (reg:SF 21 xmm0 [860])) "CALWXT.f":189 131 {*movsf_internal}
     (nil))
(insn 844 843 1445 57 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":183 221 {*addsi_1}
     (nil))
(jump_insn 1445 844 1446 57 (set (pc)
        (label_ref 845)) "CALWXT.f":183 683 {jump}
     (nil)
 -> 845)
;;  succ:       54 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622 626

(barrier 1446 1445 1496)
;; basic block 104, loop depth 0, maybe hot
;;  prev block 57, next block 58, flags: (RTL, MODIFIED)
;;  pred:       54
;; bb 104 artificial_defs: { }
;; bb 104 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1496 1446 1495 104 101 (nil) [1 uses])
(note 1495 1496 1497 104 [bb 104] NOTE_INSN_BASIC_BLOCK)
(insn 1497 1495 848 104 (const_int 0 [0]) "CALWXT.f":189 718 {nop}
     (nil))
;;  succ:       58 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 58, loop depth 0, maybe hot
;;  prev block 104, next block 59, flags: (RTL, MODIFIED)
;;  pred:       104 [always]  (FALLTHRU)
;; bb 58 artificial_defs: { }
;; bb 58 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 861
(code_label 848 1497 849 58 37 (nil) [0 uses])
(note 849 848 850 58 [bb 58] NOTE_INSN_BASIC_BLOCK)
(insn 850 849 851 58 (set (reg:SF 21 xmm0 [861])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC17") [flags 0x2]) [0  S4 A32])) "CALWXT.f":192 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 3.0e+3 [0x0.bb8p+12])
        (nil)))
(insn 851 850 852 58 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [861])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -20 [0xffffffffffffffec])) [1 areap4+0 S4 A32]))) "CALWXT.f":192 53 {*cmpisf}
     (nil))
(jump_insn 852 851 856 58 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1447)
            (pc))) "CALWXT.f":192 682 {*jcc}
     (nil)
 -> 1447)
;;  succ:       59 (FALLTHRU)
;;              60
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 59, loop depth 0, maybe hot
;;  prev block 58, next block 60, flags: (RTL, MODIFIED)
;;  pred:       58 (FALLTHRU)
;; bb 59 artificial_defs: { }
;; bb 59 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 403 404 405 406 407 408 409 410 411 412 413 414 862 863 864 865 866 867
(note 856 852 857 59 [bb 59] NOTE_INSN_BASIC_BLOCK)
(insn 857 856 858 59 (set (reg:SI 0 ax [862])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":198 86 {*movsi_internal}
     (nil))
(insn 858 857 859 59 (set (reg:DI 0 ax [orig:403 _317 ] [403])
        (sign_extend:DI (reg:SI 0 ax [862]))) "CALWXT.f":198 149 {*extendsidi2_rex64}
     (nil))
(insn 859 858 860 59 (parallel [
            (set (reg:DI 1 dx [orig:404 _318 ] [404])
                (mult:DI (reg:DI 0 ax [orig:403 _317 ] [403])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":198 349 {*muldi3_1}
     (nil))
(insn 860 859 861 59 (set (reg:SI 0 ax [863])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":198 86 {*movsi_internal}
     (nil))
(insn 861 860 862 59 (set (reg:DI 0 ax [orig:405 _319 ] [405])
        (sign_extend:DI (reg:SI 0 ax [863]))) "CALWXT.f":198 149 {*extendsidi2_rex64}
     (nil))
(insn 862 861 863 59 (parallel [
            (set (reg:DI 0 ax [orig:406 _320 ] [406])
                (plus:DI (reg:DI 0 ax [orig:405 _319 ] [405])
                    (reg:DI 1 dx [orig:404 _318 ] [404])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":198 222 {*adddi_1}
     (nil))
(insn 863 862 864 59 (parallel [
            (set (reg:DI 1 dx [orig:407 _321 ] [407])
                (plus:DI (reg:DI 0 ax [orig:406 _320 ] [406])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":198 222 {*adddi_1}
     (nil))
(insn 864 863 865 59 (set (reg/f:DI 0 ax [864])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [4 iwx+0 S8 A64])) "CALWXT.f":198 85 {*movdi_internal}
     (nil))
(insn 865 864 866 59 (set (reg:SI 0 ax [orig:408 _322 ] [408])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:407 _321 ] [407])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [864])) [2 *iwx_576(D) S4 A32])) "CALWXT.f":198 86 {*movsi_internal}
     (nil))
(insn 866 865 867 59 (set (reg:SI 1 dx [865])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":198 86 {*movsi_internal}
     (nil))
(insn 867 866 868 59 (set (reg:DI 1 dx [orig:409 _323 ] [409])
        (sign_extend:DI (reg:SI 1 dx [865]))) "CALWXT.f":198 149 {*extendsidi2_rex64}
     (nil))
(insn 868 867 869 59 (parallel [
            (set (reg:DI 2 cx [orig:410 _324 ] [410])
                (mult:DI (reg:DI 1 dx [orig:409 _323 ] [409])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":198 349 {*muldi3_1}
     (nil))
(insn 869 868 870 59 (set (reg:SI 1 dx [866])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":198 86 {*movsi_internal}
     (nil))
(insn 870 869 871 59 (set (reg:DI 1 dx [orig:411 _325 ] [411])
        (sign_extend:DI (reg:SI 1 dx [866]))) "CALWXT.f":198 149 {*extendsidi2_rex64}
     (nil))
(insn 871 870 872 59 (parallel [
            (set (reg:DI 1 dx [orig:412 _326 ] [412])
                (plus:DI (reg:DI 1 dx [orig:411 _325 ] [411])
                    (reg:DI 2 cx [orig:410 _324 ] [410])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":198 222 {*adddi_1}
     (nil))
(insn 872 871 873 59 (parallel [
            (set (reg:DI 1 dx [orig:413 _327 ] [413])
                (plus:DI (reg:DI 1 dx [orig:412 _326 ] [412])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":198 222 {*adddi_1}
     (nil))
(insn 873 872 874 59 (parallel [
            (set (reg:SI 2 cx [orig:414 _328 ] [414])
                (plus:SI (reg:SI 0 ax [orig:408 _322 ] [408])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":198 221 {*addsi_1}
     (nil))
(insn 874 873 875 59 (set (reg/f:DI 0 ax [867])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [4 iwx+0 S8 A64])) "CALWXT.f":198 85 {*movdi_internal}
     (nil))
(insn 875 874 1448 59 (set (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:413 _327 ] [413])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [867])) [2 *iwx_576(D) S4 A32])
        (reg:SI 2 cx [orig:414 _328 ] [414])) "CALWXT.f":198 86 {*movsi_internal}
     (nil))
(jump_insn 1448 875 1449 59 (set (pc)
        (label_ref 1347)) "CALWXT.f":199 683 {jump}
     (nil)
 -> 1347)
;;  succ:       91 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

(barrier 1449 1448 1447)
;; basic block 60, loop depth 0, maybe hot
;;  prev block 59, next block 61, flags: (RTL, MODIFIED)
;;  pred:       58
;; bb 60 artificial_defs: { }
;; bb 60 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 628 868 869 870 871
(code_label 1447 1449 879 60 89 (nil) [1 uses])
(note 879 1447 880 60 [bb 60] NOTE_INSN_BASIC_BLOCK)
(insn 880 879 881 60 (set (reg:SF 21 xmm0 [868])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 psfck+0 S4 A32])) "CALWXT.f":204 131 {*movsf_internal}
     (nil))
(insn 881 880 882 60 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pintk1+0 S4 A32])
        (reg:SF 21 xmm0 [868])) "CALWXT.f":204 131 {*movsf_internal}
     (nil))
(insn 882 881 883 60 (set (reg:SF 21 xmm0 [870])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 psfck+0 S4 A32])) "CALWXT.f":205 131 {*movsf_internal}
     (nil))
(insn 883 882 884 60 (set (reg:SF 22 xmm1 [871])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC18") [flags 0x2]) [0  S4 A32])) "CALWXT.f":205 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.5e+4 [0x0.ea6p+14])
        (nil)))
(insn 884 883 885 60 (set (reg:SF 21 xmm0 [869])
        (minus:SF (reg:SF 21 xmm0 [870])
            (reg:SF 22 xmm1 [871]))) "CALWXT.f":205 841 {*fop_sf_1}
     (nil))
(insn 885 884 886 60 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 pm150+0 S4 A32])
        (reg:SF 21 xmm0 [869])) "CALWXT.f":205 131 {*movsf_internal}
     (nil))
(insn 886 885 887 60 (set (reg:SI 0 ax [orig:628 _666 ] [628])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 lmhk+0 S4 A32])) "CALWXT.f":207 86 {*movsi_internal}
     (nil))
(insn 887 886 1036 60 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
        (reg:SI 0 ax [orig:628 _666 ] [628])) "CALWXT.f":207 86 {*movsi_internal}
     (nil))
;;  succ:       61 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 61, loop depth 0, maybe hot
;;  prev block 60, next block 62, flags: (RTL, MODIFIED)
;;  pred:       60 (FALLTHRU)
;;              66 [always] 
;; bb 61 artificial_defs: { }
;; bb 61 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 629 872
(code_label 1036 887 888 61 47 (nil) [1 uses])
(note 888 1036 889 61 [bb 61] NOTE_INSN_BASIC_BLOCK)
(insn 889 888 890 61 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
            (const_int 0 [0]))) "CALWXT.f":207 7 {*cmpsi_ccno_1}
     (nil))
(insn 890 889 891 61 (set (reg:QI 0 ax [872])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "CALWXT.f":207 678 {*setcc_qi}
     (nil))
(insn 891 890 892 61 (set (reg:SI 0 ax [orig:629 _668 ] [629])
        (zero_extend:SI (reg:QI 0 ax [872]))) "CALWXT.f":207 140 {*zero_extendqisi2}
     (nil))
(insn 892 891 893 61 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:629 _668 ] [629])
            (const_int 0 [0]))) "CALWXT.f":207 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 893 892 894 61 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1499)
            (pc))) "CALWXT.f":207 682 {*jcc}
     (nil)
 -> 1499)
;;  succ:       105
;;              62 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 62, loop depth 0, maybe hot
;;  prev block 61, next block 63, flags: (RTL, MODIFIED)
;;  pred:       61 (FALLTHRU)
;; bb 62 artificial_defs: { }
;; bb 62 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 415 416 417 418 419 420 421 422 423 424 425 873 874 875 876 877 878 879 880
(note 894 893 895 62 [bb 62] NOTE_INSN_BASIC_BLOCK)
(insn 895 894 896 62 (set (reg:SI 0 ax [873])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":208 86 {*movsi_internal}
     (nil))
(insn 896 895 897 62 (set (reg:DI 0 ax [orig:415 _329 ] [415])
        (sign_extend:DI (reg:SI 0 ax [873]))) "CALWXT.f":208 149 {*extendsidi2_rex64}
     (nil))
(insn 897 896 898 62 (parallel [
            (set (reg:DI 1 dx [orig:416 _330 ] [416])
                (mult:DI (reg:DI 0 ax [orig:415 _329 ] [415])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":208 349 {*muldi3_1}
     (nil))
(insn 898 897 899 62 (set (reg:SI 0 ax [874])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":208 86 {*movsi_internal}
     (nil))
(insn 899 898 900 62 (set (reg:DI 0 ax [orig:417 _331 ] [417])
        (sign_extend:DI (reg:SI 0 ax [874]))) "CALWXT.f":208 149 {*extendsidi2_rex64}
     (nil))
(insn 900 899 901 62 (parallel [
            (set (reg:DI 0 ax [orig:418 _332 ] [418])
                (plus:DI (reg:DI 0 ax [orig:417 _331 ] [417])
                    (reg:DI 1 dx [orig:416 _330 ] [416])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":208 222 {*adddi_1}
     (nil))
(insn 901 900 902 62 (parallel [
            (set (reg:DI 1 dx [orig:419 _333 ] [419])
                (plus:DI (reg:DI 0 ax [orig:418 _332 ] [418])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":208 222 {*adddi_1}
     (nil))
(insn 902 901 903 62 (set (reg/f:DI 0 ax [875])
        (symbol_ref:DI ("pdsl.3887") [flags 0x202]  <var_decl 0x7f2c99beb990 pdsl>)) "CALWXT.f":208 85 {*movdi_internal}
     (nil))
(insn 903 902 904 62 (set (reg:SF 22 xmm1 [orig:420 _334 ] [420])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:419 _333 ] [419])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [875])) [1 pdsl S4 A32])) "CALWXT.f":208 131 {*movsf_internal}
     (nil))
(insn 904 903 905 62 (set (reg:SI 0 ax [876])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":208 86 {*movsi_internal}
     (nil))
(insn 905 904 906 62 (set (reg:DI 0 ax [orig:421 _335 ] [421])
        (sign_extend:DI (reg:SI 0 ax [876]))) "CALWXT.f":208 149 {*extendsidi2_rex64}
     (nil))
(insn 906 905 907 62 (parallel [
            (set (reg:DI 1 dx [orig:422 _336 ] [422])
                (plus:DI (reg:DI 0 ax [orig:421 _335 ] [421])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":208 222 {*adddi_1}
     (nil))
(insn 907 906 908 62 (set (reg/f:DI 0 ax [877])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [3 eta+0 S8 A64])) "CALWXT.f":208 85 {*movdi_internal}
     (nil))
(insn 908 907 909 62 (set (reg:SF 21 xmm0 [orig:423 _337 ] [423])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:422 _336 ] [422])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [877])) [1 *eta_656(D) S4 A32])) "CALWXT.f":208 131 {*movsf_internal}
     (nil))
(insn 909 908 910 62 (set (reg:SF 22 xmm1 [orig:424 _338 ] [424])
        (mult:SF (reg:SF 22 xmm1 [orig:420 _334 ] [420])
            (reg:SF 21 xmm0 [orig:423 _337 ] [423]))) "CALWXT.f":208 838 {*fop_sf_comm}
     (nil))
(insn 910 909 911 62 (set (reg/f:DI 0 ax [878])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [5 pt+0 S8 A64])) "CALWXT.f":208 85 {*movdi_internal}
     (nil))
(insn 911 910 912 62 (set (reg:SF 21 xmm0 [orig:425 _339 ] [425])
        (mem:SF (reg/f:DI 0 ax [878]) [1 *pt_592(D)+0 S4 A32])) "CALWXT.f":208 131 {*movsf_internal}
     (nil))
(insn 912 911 913 62 (set (reg:SF 21 xmm0 [879])
        (plus:SF (reg:SF 21 xmm0 [orig:425 _339 ] [425])
            (reg:SF 22 xmm1 [orig:424 _338 ] [424]))) "CALWXT.f":208 838 {*fop_sf_comm}
     (nil))
(insn 913 912 914 62 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [1 pintk2+0 S4 A32])
        (reg:SF 21 xmm0 [879])) "CALWXT.f":208 131 {*movsf_internal}
     (nil))
(insn 914 913 915 62 (set (reg:SF 21 xmm0 [880])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 pm150+0 S4 A32])) "CALWXT.f":209 131 {*movsf_internal}
     (nil))
(insn 915 914 916 62 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [880])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -52 [0xffffffffffffffcc])) [1 pintk1+0 S4 A32]))) "CALWXT.f":209 53 {*cmpisf}
     (nil))
(jump_insn 916 915 917 62 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1504)
            (pc))) "CALWXT.f":209 682 {*jcc}
     (nil)
 -> 1504)
;;  succ:       106
;;              63 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 63, loop depth 0, maybe hot
;;  prev block 62, next block 64, flags: (RTL, MODIFIED)
;;  pred:       62 (FALLTHRU)
;; bb 63 artificial_defs: { }
;; bb 63 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 426 427 428 429 430 431 432 433 434 435 436 437 438 439 440 441 442 443 444 445 446 447 448 449 450 881 882 883 884 885 886 887 888 889 890 891 892 893 894
(note 917 916 918 63 [bb 63] NOTE_INSN_BASIC_BLOCK)
(insn 918 917 919 63 (set (reg:SI 0 ax [881])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":211 86 {*movsi_internal}
     (nil))
(insn 919 918 920 63 (set (reg:DI 0 ax [orig:426 _340 ] [426])
        (sign_extend:DI (reg:SI 0 ax [881]))) "CALWXT.f":211 149 {*extendsidi2_rex64}
     (nil))
(insn 920 919 921 63 (parallel [
            (set (reg:DI 1 dx [orig:427 _341 ] [427])
                (mult:DI (reg:DI 0 ax [orig:426 _340 ] [426])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":211 349 {*muldi3_1}
     (nil))
(insn 921 920 922 63 (set (reg:SI 0 ax [882])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":211 86 {*movsi_internal}
     (nil))
(insn 922 921 923 63 (set (reg:DI 0 ax [orig:428 _342 ] [428])
        (sign_extend:DI (reg:SI 0 ax [882]))) "CALWXT.f":211 149 {*extendsidi2_rex64}
     (nil))
(insn 923 922 924 63 (parallel [
            (set (reg:DI 0 ax [orig:429 _343 ] [429])
                (mult:DI (reg:DI 0 ax [orig:428 _342 ] [428])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":211 349 {*muldi3_1}
     (nil))
(insn 924 923 925 63 (parallel [
            (set (reg:DI 1 dx [orig:430 _344 ] [430])
                (plus:DI (reg:DI 1 dx [orig:427 _341 ] [427])
                    (reg:DI 0 ax [orig:429 _343 ] [429])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":211 222 {*adddi_1}
     (nil))
(insn 925 924 926 63 (set (reg:SI 0 ax [883])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":211 86 {*movsi_internal}
     (nil))
(insn 926 925 927 63 (set (reg:DI 0 ax [orig:431 _345 ] [431])
        (sign_extend:DI (reg:SI 0 ax [883]))) "CALWXT.f":211 149 {*extendsidi2_rex64}
     (nil))
(insn 927 926 928 63 (parallel [
            (set (reg:DI 0 ax [orig:432 _346 ] [432])
                (plus:DI (reg:DI 0 ax [orig:431 _345 ] [431])
                    (reg:DI 1 dx [orig:430 _344 ] [430])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":211 222 {*adddi_1}
     (nil))
(insn 928 927 929 63 (parallel [
            (set (reg:DI 1 dx [orig:433 _347 ] [433])
                (plus:DI (reg:DI 0 ax [orig:432 _346 ] [432])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":211 222 {*adddi_1}
     (nil))
(insn 929 928 930 63 (set (reg/f:DI 0 ax [884])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 t+0 S8 A64])) "CALWXT.f":211 85 {*movdi_internal}
     (nil))
(insn 930 929 931 63 (set (reg:SF 21 xmm0 [orig:434 _348 ] [434])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:433 _347 ] [433])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [884])) [1 *t_595(D) S4 A32])) "CALWXT.f":211 131 {*movsf_internal}
     (nil))
(insn 931 930 932 63 (set (reg:SI 0 ax [885])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":211 86 {*movsi_internal}
     (nil))
(insn 932 931 933 63 (set (reg:DI 0 ax [orig:435 _349 ] [435])
        (sign_extend:DI (reg:SI 0 ax [885]))) "CALWXT.f":211 149 {*extendsidi2_rex64}
     (nil))
(insn 933 932 934 63 (parallel [
            (set (reg:DI 1 dx [orig:436 _350 ] [436])
                (mult:DI (reg:DI 0 ax [orig:435 _349 ] [435])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":211 349 {*muldi3_1}
     (nil))
(insn 934 933 935 63 (set (reg:SI 0 ax [886])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":211 86 {*movsi_internal}
     (nil))
(insn 935 934 936 63 (set (reg:DI 0 ax [orig:437 _351 ] [437])
        (sign_extend:DI (reg:SI 0 ax [886]))) "CALWXT.f":211 149 {*extendsidi2_rex64}
     (nil))
(insn 936 935 937 63 (parallel [
            (set (reg:DI 0 ax [orig:438 _352 ] [438])
                (mult:DI (reg:DI 0 ax [orig:437 _351 ] [437])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":211 349 {*muldi3_1}
     (nil))
(insn 937 936 938 63 (parallel [
            (set (reg:DI 1 dx [orig:439 _353 ] [439])
                (plus:DI (reg:DI 1 dx [orig:436 _350 ] [436])
                    (reg:DI 0 ax [orig:438 _352 ] [438])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":211 222 {*adddi_1}
     (nil))
(insn 938 937 939 63 (set (reg:SI 0 ax [887])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":211 86 {*movsi_internal}
     (nil))
(insn 939 938 940 63 (set (reg:DI 0 ax [orig:440 _354 ] [440])
        (sign_extend:DI (reg:SI 0 ax [887]))) "CALWXT.f":211 149 {*extendsidi2_rex64}
     (nil))
(insn 940 939 941 63 (parallel [
            (set (reg:DI 0 ax [orig:441 _355 ] [441])
                (plus:DI (reg:DI 0 ax [orig:440 _354 ] [440])
                    (reg:DI 1 dx [orig:439 _353 ] [439])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":211 222 {*adddi_1}
     (nil))
(insn 941 940 942 63 (parallel [
            (set (reg:DI 1 dx [orig:442 _356 ] [442])
                (plus:DI (reg:DI 0 ax [orig:441 _355 ] [441])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":211 222 {*adddi_1}
     (nil))
(insn 942 941 943 63 (set (reg/f:DI 0 ax [888])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 q+0 S8 A64])) "CALWXT.f":211 85 {*movdi_internal}
     (nil))
(insn 943 942 944 63 (set (reg:SF 23 xmm2 [orig:443 _357 ] [443])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:442 _356 ] [442])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [888])) [1 *q_602(D) S4 A32])) "CALWXT.f":211 131 {*movsf_internal}
     (nil))
(insn 944 943 945 63 (set (reg:SF 22 xmm1 [889])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S4 A32])) "CALWXT.f":211 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 945 944 946 63 (set (reg:SF 23 xmm2 [orig:444 _358 ] [444])
        (mult:SF (reg:SF 23 xmm2 [orig:443 _357 ] [443])
            (reg:SF 22 xmm1 [889]))) "CALWXT.f":211 838 {*fop_sf_comm}
     (nil))
(insn 946 945 947 63 (set (reg:SF 22 xmm1 [890])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S4 A32])) "CALWXT.f":211 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 947 946 949 63 (set (reg:SF 22 xmm1 [orig:445 _359 ] [445])
        (plus:SF (reg:SF 22 xmm1 [890])
            (reg:SF 23 xmm2 [orig:444 _358 ] [444]))) "CALWXT.f":211 838 {*fop_sf_comm}
     (nil))
(insn 949 947 950 63 (set (reg:SF 22 xmm1 [orig:447 _361 ] [447])
        (mult:SF (reg:SF 22 xmm1 [orig:446 _360 ] [446])
            (reg:SF 21 xmm0 [orig:434 _348 ] [434]))) "CALWXT.f":211 838 {*fop_sf_comm}
     (nil))
(insn 950 949 951 63 (set (reg:SF 21 xmm0 [891])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "CALWXT.f":211 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.92897968292236328125e+1 [0x0.ea5181p+5])
        (nil)))
(insn 951 950 1516 63 (set (reg:SF 22 xmm1 [orig:447 _361 ] [447])
        (mult:SF (reg:SF 22 xmm1 [orig:447 _361 ] [447])
            (reg:SF 21 xmm0 [891]))) "CALWXT.f":211 838 {*fop_sf_comm}
     (nil))
(insn 1516 951 1534 63 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [7 %sfp+-164 S4 A32])
        (reg:SF 22 xmm1 [orig:447 _361 ] [447])) "CALWXT.f":211 131 {*movsf_internal}
     (nil))
(note 1534 1516 1526 63 NOTE_INSN_DELETED)
(note 1526 1534 952 63 NOTE_INSN_DELETED)
(insn 952 1526 953 63 (set (reg:SF 21 xmm0 [892])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pintk1+0 S4 A32])) "CALWXT.f":211 131 {*movsf_internal}
     (nil))
(insn 953 952 955 63 (set (reg:SF 21 xmm0 [orig:449 _363 ] [449])
        (div:SF (reg:SF 21 xmm0 [892])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])) [1 pintk2+0 S4 A32]))) "CALWXT.f":211 841 {*fop_sf_1}
     (nil))
(call_insn/u 955 953 1517 63 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f2c99a54900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALWXT.f":211 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 1517 955 1530 63 NOTE_INSN_DELETED)
(note 1530 1517 957 63 NOTE_INSN_DELETED)
(insn 957 1530 958 63 (set (reg:SF 21 xmm0 [893])
        (mult:SF (reg:SF 21 xmm0 [orig:450 _364 ] [450])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -180 [0xffffffffffffff4c])) [7 %sfp+-164 S4 A32]))) "CALWXT.f":211 838 {*fop_sf_comm}
     (nil))
(insn 958 957 959 63 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 dzkl+0 S4 A32])
        (reg:SF 21 xmm0 [893])) "CALWXT.f":211 131 {*movsf_internal}
     (nil))
(insn 959 958 960 63 (set (reg:SF 21 xmm0 [894])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -120 [0xffffffffffffff88])) [1 pm150+0 S4 A32])) "CALWXT.f":215 131 {*movsf_internal}
     (nil))
(insn 960 959 961 63 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [894])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])) [1 pintk2+0 S4 A32]))) "CALWXT.f":215 53 {*cmpisf}
     (nil))
(jump_insn 961 960 965 63 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1007)
            (pc))) "CALWXT.f":215 682 {*jcc}
     (nil)
 -> 1007)
;;  succ:       64 (FALLTHRU)
;;              65
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 64, loop depth 0, maybe hot
;;  prev block 63, next block 65, flags: (RTL, MODIFIED)
;;  pred:       63 (FALLTHRU)
;; bb 64 artificial_defs: { }
;; bb 64 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 451 452 453 454 455 456 457 458 459 460 461 462 463 464 465 466 467 468 469 470 471 472 473 474 475 895 896 897 898 899 900 901 902 903 904 905 906 907
(note 965 961 966 64 [bb 64] NOTE_INSN_BASIC_BLOCK)
(insn 966 965 967 64 (set (reg:SI 0 ax [895])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":217 86 {*movsi_internal}
     (nil))
(insn 967 966 968 64 (set (reg:DI 0 ax [orig:451 _365 ] [451])
        (sign_extend:DI (reg:SI 0 ax [895]))) "CALWXT.f":217 149 {*extendsidi2_rex64}
     (nil))
(insn 968 967 969 64 (parallel [
            (set (reg:DI 1 dx [orig:452 _366 ] [452])
                (mult:DI (reg:DI 0 ax [orig:451 _365 ] [451])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":217 349 {*muldi3_1}
     (nil))
(insn 969 968 970 64 (set (reg:SI 0 ax [896])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":217 86 {*movsi_internal}
     (nil))
(insn 970 969 971 64 (set (reg:DI 0 ax [orig:453 _367 ] [453])
        (sign_extend:DI (reg:SI 0 ax [896]))) "CALWXT.f":217 149 {*extendsidi2_rex64}
     (nil))
(insn 971 970 972 64 (parallel [
            (set (reg:DI 0 ax [orig:454 _368 ] [454])
                (mult:DI (reg:DI 0 ax [orig:453 _367 ] [453])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":217 349 {*muldi3_1}
     (nil))
(insn 972 971 973 64 (parallel [
            (set (reg:DI 1 dx [orig:455 _369 ] [455])
                (plus:DI (reg:DI 1 dx [orig:452 _366 ] [452])
                    (reg:DI 0 ax [orig:454 _368 ] [454])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":217 222 {*adddi_1}
     (nil))
(insn 973 972 974 64 (set (reg:SI 0 ax [897])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":217 86 {*movsi_internal}
     (nil))
(insn 974 973 975 64 (set (reg:DI 0 ax [orig:456 _370 ] [456])
        (sign_extend:DI (reg:SI 0 ax [897]))) "CALWXT.f":217 149 {*extendsidi2_rex64}
     (nil))
(insn 975 974 976 64 (parallel [
            (set (reg:DI 0 ax [orig:457 _371 ] [457])
                (plus:DI (reg:DI 0 ax [orig:456 _370 ] [456])
                    (reg:DI 1 dx [orig:455 _369 ] [455])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":217 222 {*adddi_1}
     (nil))
(insn 976 975 977 64 (parallel [
            (set (reg:DI 1 dx [orig:458 _372 ] [458])
                (plus:DI (reg:DI 0 ax [orig:457 _371 ] [457])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":217 222 {*adddi_1}
     (nil))
(insn 977 976 978 64 (set (reg/f:DI 0 ax [898])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 t+0 S8 A64])) "CALWXT.f":217 85 {*movdi_internal}
     (nil))
(insn 978 977 979 64 (set (reg:SF 21 xmm0 [orig:459 _373 ] [459])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:458 _372 ] [458])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [898])) [1 *t_595(D) S4 A32])) "CALWXT.f":217 131 {*movsf_internal}
     (nil))
(insn 979 978 980 64 (set (reg:SI 0 ax [899])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":217 86 {*movsi_internal}
     (nil))
(insn 980 979 981 64 (set (reg:DI 0 ax [orig:460 _374 ] [460])
        (sign_extend:DI (reg:SI 0 ax [899]))) "CALWXT.f":217 149 {*extendsidi2_rex64}
     (nil))
(insn 981 980 982 64 (parallel [
            (set (reg:DI 1 dx [orig:461 _375 ] [461])
                (mult:DI (reg:DI 0 ax [orig:460 _374 ] [460])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":217 349 {*muldi3_1}
     (nil))
(insn 982 981 983 64 (set (reg:SI 0 ax [900])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":217 86 {*movsi_internal}
     (nil))
(insn 983 982 984 64 (set (reg:DI 0 ax [orig:462 _376 ] [462])
        (sign_extend:DI (reg:SI 0 ax [900]))) "CALWXT.f":217 149 {*extendsidi2_rex64}
     (nil))
(insn 984 983 985 64 (parallel [
            (set (reg:DI 0 ax [orig:463 _377 ] [463])
                (mult:DI (reg:DI 0 ax [orig:462 _376 ] [462])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":217 349 {*muldi3_1}
     (nil))
(insn 985 984 986 64 (parallel [
            (set (reg:DI 1 dx [orig:464 _378 ] [464])
                (plus:DI (reg:DI 1 dx [orig:461 _375 ] [461])
                    (reg:DI 0 ax [orig:463 _377 ] [463])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":217 222 {*adddi_1}
     (nil))
(insn 986 985 987 64 (set (reg:SI 0 ax [901])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":217 86 {*movsi_internal}
     (nil))
(insn 987 986 988 64 (set (reg:DI 0 ax [orig:465 _379 ] [465])
        (sign_extend:DI (reg:SI 0 ax [901]))) "CALWXT.f":217 149 {*extendsidi2_rex64}
     (nil))
(insn 988 987 989 64 (parallel [
            (set (reg:DI 0 ax [orig:466 _380 ] [466])
                (plus:DI (reg:DI 0 ax [orig:465 _379 ] [465])
                    (reg:DI 1 dx [orig:464 _378 ] [464])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":217 222 {*adddi_1}
     (nil))
(insn 989 988 990 64 (parallel [
            (set (reg:DI 1 dx [orig:467 _381 ] [467])
                (plus:DI (reg:DI 0 ax [orig:466 _380 ] [466])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":217 222 {*adddi_1}
     (nil))
(insn 990 989 991 64 (set (reg/f:DI 0 ax [902])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 q+0 S8 A64])) "CALWXT.f":217 85 {*movdi_internal}
     (nil))
(insn 991 990 992 64 (set (reg:SF 23 xmm2 [orig:468 _382 ] [468])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:467 _381 ] [467])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [902])) [1 *q_602(D) S4 A32])) "CALWXT.f":217 131 {*movsf_internal}
     (nil))
(insn 992 991 993 64 (set (reg:SF 22 xmm1 [903])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S4 A32])) "CALWXT.f":217 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 993 992 994 64 (set (reg:SF 23 xmm2 [orig:469 _383 ] [469])
        (mult:SF (reg:SF 23 xmm2 [orig:468 _382 ] [468])
            (reg:SF 22 xmm1 [903]))) "CALWXT.f":217 838 {*fop_sf_comm}
     (nil))
(insn 994 993 995 64 (set (reg:SF 22 xmm1 [904])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S4 A32])) "CALWXT.f":217 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 995 994 997 64 (set (reg:SF 22 xmm1 [orig:470 _384 ] [470])
        (plus:SF (reg:SF 22 xmm1 [904])
            (reg:SF 23 xmm2 [orig:469 _383 ] [469]))) "CALWXT.f":217 838 {*fop_sf_comm}
     (nil))
(insn 997 995 998 64 (set (reg:SF 22 xmm1 [orig:472 _386 ] [472])
        (mult:SF (reg:SF 22 xmm1 [orig:471 _385 ] [471])
            (reg:SF 21 xmm0 [orig:459 _373 ] [459]))) "CALWXT.f":217 838 {*fop_sf_comm}
     (nil))
(insn 998 997 999 64 (set (reg:SF 21 xmm0 [905])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "CALWXT.f":217 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.92897968292236328125e+1 [0x0.ea5181p+5])
        (nil)))
(insn 999 998 1519 64 (set (reg:SF 22 xmm1 [orig:472 _386 ] [472])
        (mult:SF (reg:SF 22 xmm1 [orig:472 _386 ] [472])
            (reg:SF 21 xmm0 [905]))) "CALWXT.f":217 838 {*fop_sf_comm}
     (nil))
(insn 1519 999 1533 64 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [7 %sfp+-164 S4 A32])
        (reg:SF 22 xmm1 [orig:472 _386 ] [472])) "CALWXT.f":217 131 {*movsf_internal}
     (nil))
(note 1533 1519 1525 64 NOTE_INSN_DELETED)
(note 1525 1533 1000 64 NOTE_INSN_DELETED)
(insn 1000 1525 1001 64 (set (reg:SF 21 xmm0 [906])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pintk1+0 S4 A32])) "CALWXT.f":217 131 {*movsf_internal}
     (nil))
(insn 1001 1000 1003 64 (set (reg:SF 21 xmm0 [orig:474 _388 ] [474])
        (div:SF (reg:SF 21 xmm0 [906])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -120 [0xffffffffffffff88])) [1 pm150+0 S4 A32]))) "CALWXT.f":217 841 {*fop_sf_1}
     (nil))
(call_insn/u 1003 1001 1520 64 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f2c99a54900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALWXT.f":217 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 1520 1003 1529 64 NOTE_INSN_DELETED)
(note 1529 1520 1005 64 NOTE_INSN_DELETED)
(insn 1005 1529 1006 64 (set (reg:SF 21 xmm0 [907])
        (mult:SF (reg:SF 21 xmm0 [orig:475 _389 ] [475])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -180 [0xffffffffffffff4c])) [7 %sfp+-164 S4 A32]))) "CALWXT.f":217 838 {*fop_sf_comm}
     (nil))
(insn 1006 1005 1007 64 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 dzkl+0 S4 A32])
        (reg:SF 21 xmm0 [907])) "CALWXT.f":217 131 {*movsf_internal}
     (nil))
;;  succ:       65 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 65, loop depth 0, maybe hot
;;  prev block 64, next block 106, flags: (RTL, MODIFIED)
;;  pred:       64 (FALLTHRU)
;;              63
;; bb 65 artificial_defs: { }
;; bb 65 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 476 477 478 479 480 481 482 483 484 485 486 908 909 910 911 912 913 914 915 916
(code_label 1007 1006 1008 65 45 (nil) [1 uses])
(note 1008 1007 1009 65 [bb 65] NOTE_INSN_BASIC_BLOCK)
(insn 1009 1008 1010 65 (set (reg:SI 0 ax [908])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":218 86 {*movsi_internal}
     (nil))
(insn 1010 1009 1011 65 (set (reg:DI 0 ax [orig:476 _390 ] [476])
        (sign_extend:DI (reg:SI 0 ax [908]))) "CALWXT.f":218 149 {*extendsidi2_rex64}
     (nil))
(insn 1011 1010 1012 65 (parallel [
            (set (reg:DI 1 dx [orig:477 _391 ] [477])
                (mult:DI (reg:DI 0 ax [orig:476 _390 ] [476])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":218 349 {*muldi3_1}
     (nil))
(insn 1012 1011 1013 65 (set (reg:SI 0 ax [909])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":218 86 {*movsi_internal}
     (nil))
(insn 1013 1012 1014 65 (set (reg:DI 0 ax [orig:478 _392 ] [478])
        (sign_extend:DI (reg:SI 0 ax [909]))) "CALWXT.f":218 149 {*extendsidi2_rex64}
     (nil))
(insn 1014 1013 1015 65 (parallel [
            (set (reg:DI 0 ax [orig:479 _393 ] [479])
                (mult:DI (reg:DI 0 ax [orig:478 _392 ] [478])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":218 349 {*muldi3_1}
     (nil))
(insn 1015 1014 1016 65 (parallel [
            (set (reg:DI 1 dx [orig:480 _394 ] [480])
                (plus:DI (reg:DI 1 dx [orig:477 _391 ] [477])
                    (reg:DI 0 ax [orig:479 _393 ] [479])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":218 222 {*adddi_1}
     (nil))
(insn 1016 1015 1017 65 (set (reg:SI 0 ax [910])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":218 86 {*movsi_internal}
     (nil))
(insn 1017 1016 1018 65 (set (reg:DI 0 ax [orig:481 _395 ] [481])
        (sign_extend:DI (reg:SI 0 ax [910]))) "CALWXT.f":218 149 {*extendsidi2_rex64}
     (nil))
(insn 1018 1017 1019 65 (parallel [
            (set (reg:DI 0 ax [orig:482 _396 ] [482])
                (plus:DI (reg:DI 0 ax [orig:481 _395 ] [481])
                    (reg:DI 1 dx [orig:480 _394 ] [480])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":218 222 {*adddi_1}
     (nil))
(insn 1019 1018 1020 65 (parallel [
            (set (reg:DI 1 dx [orig:483 _397 ] [483])
                (plus:DI (reg:DI 0 ax [orig:482 _396 ] [482])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":218 222 {*adddi_1}
     (nil))
(insn 1020 1019 1021 65 (set (reg/f:DI 0 ax [911])
        (symbol_ref:DI ("twet.3906") [flags 0x202]  <var_decl 0x7f2c99bec2d0 twet>)) "CALWXT.f":218 85 {*movdi_internal}
     (nil))
(insn 1021 1020 1022 65 (set (reg:SF 21 xmm0 [orig:484 _398 ] [484])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:483 _397 ] [483])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [911])) [1 twet S4 A32])) "CALWXT.f":218 131 {*movsf_internal}
     (nil))
(insn 1022 1021 1023 65 (set (reg:SF 22 xmm1 [912])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALWXT.f":218 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73149993896484375e+2 [0x0.889333p+9])
        (nil)))
(insn 1023 1022 1024 65 (set (reg:SF 21 xmm0 [orig:485 _399 ] [485])
        (minus:SF (reg:SF 21 xmm0 [orig:484 _398 ] [484])
            (reg:SF 22 xmm1 [912]))) "CALWXT.f":218 841 {*fop_sf_1}
     (nil))
(insn 1024 1023 1025 65 (set (reg:SF 22 xmm1 [orig:486 _400 ] [486])
        (reg:SF 21 xmm0 [orig:485 _399 ] [485])) "CALWXT.f":218 131 {*movsf_internal}
     (nil))
(insn 1025 1024 1026 65 (set (reg:SF 21 xmm0 [914])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 dzkl+0 S4 A32])) "CALWXT.f":218 131 {*movsf_internal}
     (nil))
(insn 1026 1025 1027 65 (set (reg:SF 21 xmm0 [913])
        (mult:SF (reg:SF 21 xmm0 [914])
            (reg:SF 22 xmm1 [orig:486 _400 ] [486]))) "CALWXT.f":218 838 {*fop_sf_comm}
     (nil))
(insn 1027 1026 1028 65 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 area1+0 S4 A32])
        (reg:SF 21 xmm0 [913])) "CALWXT.f":218 131 {*movsf_internal}
     (nil))
(insn 1028 1027 1029 65 (set (reg:SF 21 xmm0 [916])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 areas8+0 S4 A32])) "CALWXT.f":219 131 {*movsf_internal}
     (nil))
(insn 1029 1028 1030 65 (set (reg:SF 21 xmm0 [915])
        (plus:SF (reg:SF 21 xmm0 [916])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])) [1 area1+0 S4 A32]))) "CALWXT.f":219 838 {*fop_sf_comm}
     (nil))
(insn 1030 1029 1501 65 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -24 [0xffffffffffffffe8])) [1 areas8+0 S4 A32])
        (reg:SF 21 xmm0 [915])) "CALWXT.f":219 131 {*movsf_internal}
     (nil))
(jump_insn 1501 1030 1502 65 (set (pc)
        (label_ref 1031)) 683 {jump}
     (nil)
 -> 1031)
;;  succ:       66
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

(barrier 1502 1501 1504)
;; basic block 106, loop depth 0, maybe hot
;;  prev block 65, next block 66, flags: (RTL, MODIFIED)
;;  pred:       62
;; bb 106 artificial_defs: { }
;; bb 106 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1504 1502 1503 106 103 (nil) [1 uses])
(note 1503 1504 1505 106 [bb 106] NOTE_INSN_BASIC_BLOCK)
(insn 1505 1503 1031 106 (const_int 0 [0]) "CALWXT.f":219 718 {nop}
     (nil))
;;  succ:       66 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 66, loop depth 0, maybe hot
;;  prev block 106, next block 105, flags: (RTL, MODIFIED)
;;  pred:       106 [always]  (FALLTHRU)
;;              65
;; bb 66 artificial_defs: { }
;; bb 66 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 917
(code_label 1031 1505 1032 66 44 (nil) [1 uses])
(note 1032 1031 1033 66 [bb 66] NOTE_INSN_BASIC_BLOCK)
(insn 1033 1032 1034 66 (set (reg:SF 21 xmm0 [917])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [1 pintk2+0 S4 A32])) "CALWXT.f":220 131 {*movsf_internal}
     (nil))
(insn 1034 1033 1035 66 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pintk1+0 S4 A32])
        (reg:SF 21 xmm0 [917])) "CALWXT.f":220 131 {*movsf_internal}
     (nil))
(insn 1035 1034 1450 66 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":207 221 {*addsi_1}
     (nil))
(jump_insn 1450 1035 1451 66 (set (pc)
        (label_ref 1036)) "CALWXT.f":207 683 {jump}
     (nil)
 -> 1036)
;;  succ:       61 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

(barrier 1451 1450 1499)
;; basic block 105, loop depth 0, maybe hot
;;  prev block 66, next block 67, flags: (RTL, MODIFIED)
;;  pred:       61
;; bb 105 artificial_defs: { }
;; bb 105 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1499 1451 1498 105 102 (nil) [1 uses])
(note 1498 1499 1500 105 [bb 105] NOTE_INSN_BASIC_BLOCK)
(insn 1500 1498 1039 105 (const_int 0 [0]) "CALWXT.f":220 718 {nop}
     (nil))
;;  succ:       67 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 67, loop depth 0, maybe hot
;;  prev block 105, next block 68, flags: (RTL, MODIFIED)
;;  pred:       105 [always]  (FALLTHRU)
;; bb 67 artificial_defs: { }
;; bb 67 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 630 918
(code_label 1039 1500 1040 67 43 (nil) [0 uses])
(note 1040 1039 1041 67 [bb 67] NOTE_INSN_BASIC_BLOCK)
(insn 1041 1040 1042 67 (set (reg:SF 21 xmm0 [918])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -72 [0xffffffffffffffb8])) [1 psfck+0 S4 A32])) "CALWXT.f":228 131 {*movsf_internal}
     (nil))
(insn 1042 1041 1043 67 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pintk1+0 S4 A32])
        (reg:SF 21 xmm0 [918])) "CALWXT.f":228 131 {*movsf_internal}
     (nil))
(insn 1043 1042 1044 67 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 ifrzl+0 S4 A32])
        (const_int 0 [0])) "CALWXT.f":229 86 {*movsi_internal}
     (nil))
(insn 1044 1043 1045 67 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 iwrml+0 S4 A32])
        (const_int 0 [0])) "CALWXT.f":230 86 {*movsi_internal}
     (nil))
(insn 1045 1044 1046 67 (set (reg:SI 0 ax [orig:630 _679 ] [630])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -68 [0xffffffffffffffbc])) [2 lmhk+0 S4 A32])) "CALWXT.f":232 86 {*movsi_internal}
     (nil))
(insn 1046 1045 1249 67 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
        (reg:SI 0 ax [orig:630 _679 ] [630])) "CALWXT.f":232 86 {*movsi_internal}
     (nil))
;;  succ:       68 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 68, loop depth 0, maybe hot
;;  prev block 67, next block 69, flags: (RTL, MODIFIED)
;;  pred:       67 (FALLTHRU)
;;              83 [always] 
;; bb 68 artificial_defs: { }
;; bb 68 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 631 919
(code_label 1249 1046 1047 68 58 (nil) [1 uses])
(note 1047 1249 1048 68 [bb 68] NOTE_INSN_BASIC_BLOCK)
(insn 1048 1047 1049 68 (set (reg:CCNO 17 flags)
        (compare:CCNO (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
            (const_int 0 [0]))) "CALWXT.f":232 7 {*cmpsi_ccno_1}
     (nil))
(insn 1049 1048 1050 68 (set (reg:QI 0 ax [919])
        (le:QI (reg:CCNO 17 flags)
            (const_int 0 [0]))) "CALWXT.f":232 678 {*setcc_qi}
     (nil))
(insn 1050 1049 1051 68 (set (reg:SI 0 ax [orig:631 _681 ] [631])
        (zero_extend:SI (reg:QI 0 ax [919]))) "CALWXT.f":232 140 {*zero_extendqisi2}
     (nil))
(insn 1051 1050 1052 68 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 0 ax [orig:631 _681 ] [631])
            (const_int 0 [0]))) "CALWXT.f":232 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1052 1051 1053 68 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1507)
            (pc))) "CALWXT.f":232 682 {*jcc}
     (nil)
 -> 1507)
;;  succ:       107
;;              69 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 69, loop depth 0, maybe hot
;;  prev block 68, next block 70, flags: (RTL, MODIFIED)
;;  pred:       68 (FALLTHRU)
;; bb 69 artificial_defs: { }
;; bb 69 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1053 1052 1054 69 [bb 69] NOTE_INSN_BASIC_BLOCK)
(insn 1054 1053 1055 69 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 ifrzl+0 S4 A32])
            (const_int 0 [0]))) "CALWXT.f":233 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1055 1054 1056 69 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1078)
            (pc))) "CALWXT.f":233 682 {*jcc}
     (nil)
 -> 1078)
;;  succ:       70 (FALLTHRU)
;;              72
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 70, loop depth 0, maybe hot
;;  prev block 69, next block 71, flags: (RTL, MODIFIED)
;;  pred:       69 (FALLTHRU)
;; bb 70 artificial_defs: { }
;; bb 70 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 487 488 489 490 491 492 493 494 495 920 921 922 923 924
(note 1056 1055 1057 70 [bb 70] NOTE_INSN_BASIC_BLOCK)
(insn 1057 1056 1058 70 (set (reg:SI 0 ax [920])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":233 86 {*movsi_internal}
     (nil))
(insn 1058 1057 1059 70 (set (reg:DI 0 ax [orig:487 _401 ] [487])
        (sign_extend:DI (reg:SI 0 ax [920]))) "CALWXT.f":233 149 {*extendsidi2_rex64}
     (nil))
(insn 1059 1058 1060 70 (parallel [
            (set (reg:DI 1 dx [orig:488 _402 ] [488])
                (mult:DI (reg:DI 0 ax [orig:487 _401 ] [487])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":233 349 {*muldi3_1}
     (nil))
(insn 1060 1059 1061 70 (set (reg:SI 0 ax [921])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":233 86 {*movsi_internal}
     (nil))
(insn 1061 1060 1062 70 (set (reg:DI 0 ax [orig:489 _403 ] [489])
        (sign_extend:DI (reg:SI 0 ax [921]))) "CALWXT.f":233 149 {*extendsidi2_rex64}
     (nil))
(insn 1062 1061 1063 70 (parallel [
            (set (reg:DI 0 ax [orig:490 _404 ] [490])
                (mult:DI (reg:DI 0 ax [orig:489 _403 ] [489])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":233 349 {*muldi3_1}
     (nil))
(insn 1063 1062 1064 70 (parallel [
            (set (reg:DI 1 dx [orig:491 _405 ] [491])
                (plus:DI (reg:DI 1 dx [orig:488 _402 ] [488])
                    (reg:DI 0 ax [orig:490 _404 ] [490])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":233 222 {*adddi_1}
     (nil))
(insn 1064 1063 1065 70 (set (reg:SI 0 ax [922])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":233 86 {*movsi_internal}
     (nil))
(insn 1065 1064 1066 70 (set (reg:DI 0 ax [orig:492 _406 ] [492])
        (sign_extend:DI (reg:SI 0 ax [922]))) "CALWXT.f":233 149 {*extendsidi2_rex64}
     (nil))
(insn 1066 1065 1067 70 (parallel [
            (set (reg:DI 0 ax [orig:493 _407 ] [493])
                (plus:DI (reg:DI 0 ax [orig:492 _406 ] [492])
                    (reg:DI 1 dx [orig:491 _405 ] [491])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":233 222 {*adddi_1}
     (nil))
(insn 1067 1066 1068 70 (parallel [
            (set (reg:DI 1 dx [orig:494 _408 ] [494])
                (plus:DI (reg:DI 0 ax [orig:493 _407 ] [493])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":233 222 {*adddi_1}
     (nil))
(insn 1068 1067 1069 70 (set (reg/f:DI 0 ax [923])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 t+0 S8 A64])) "CALWXT.f":233 85 {*movdi_internal}
     (nil))
(insn 1069 1068 1070 70 (set (reg:SF 22 xmm1 [orig:495 _409 ] [495])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:494 _408 ] [494])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [923])) [1 *t_595(D) S4 A32])) "CALWXT.f":233 131 {*movsf_internal}
     (nil))
(insn 1070 1069 1071 70 (set (reg:SF 21 xmm0 [924])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALWXT.f":233 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73149993896484375e+2 [0x0.889333p+9])
        (nil)))
(insn 1071 1070 1072 70 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [924])
            (reg:SF 22 xmm1 [orig:495 _409 ] [495]))) "CALWXT.f":233 53 {*cmpisf}
     (nil))
(jump_insn 1072 1071 1076 70 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1078)
            (pc))) "CALWXT.f":233 682 {*jcc}
     (nil)
 -> 1078)
;;  succ:       71 (FALLTHRU)
;;              72
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 71, loop depth 0, maybe hot
;;  prev block 70, next block 72, flags: (RTL, MODIFIED)
;;  pred:       70 (FALLTHRU)
;; bb 71 artificial_defs: { }
;; bb 71 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1076 1072 1077 71 [bb 71] NOTE_INSN_BASIC_BLOCK)
(insn 1077 1076 1078 71 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -36 [0xffffffffffffffdc])) [2 ifrzl+0 S4 A32])
        (const_int 1 [0x1])) "CALWXT.f":233 86 {*movsi_internal}
     (nil))
;;  succ:       72 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 72, loop depth 0, maybe hot
;;  prev block 71, next block 73, flags: (RTL, MODIFIED)
;;  pred:       69
;;              71 (FALLTHRU)
;;              70
;; bb 72 artificial_defs: { }
;; bb 72 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1078 1077 1079 72 49 (nil) [2 uses])
(note 1079 1078 1080 72 [bb 72] NOTE_INSN_BASIC_BLOCK)
(insn 1080 1079 1081 72 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [2 iwrml+0 S4 A32])
            (const_int 0 [0]))) "CALWXT.f":234 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1081 1080 1082 72 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1103)
            (pc))) "CALWXT.f":234 682 {*jcc}
     (nil)
 -> 1103)
;;  succ:       73 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 73, loop depth 0, maybe hot
;;  prev block 72, next block 74, flags: (RTL, MODIFIED)
;;  pred:       72 (FALLTHRU)
;; bb 73 artificial_defs: { }
;; bb 73 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 496 497 498 499 500 501 502 503 504 925 926 927 928
(note 1082 1081 1083 73 [bb 73] NOTE_INSN_BASIC_BLOCK)
(insn 1083 1082 1084 73 (set (reg:SI 0 ax [925])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":234 86 {*movsi_internal}
     (nil))
(insn 1084 1083 1085 73 (set (reg:DI 0 ax [orig:496 _410 ] [496])
        (sign_extend:DI (reg:SI 0 ax [925]))) "CALWXT.f":234 149 {*extendsidi2_rex64}
     (nil))
(insn 1085 1084 1086 73 (parallel [
            (set (reg:DI 1 dx [orig:497 _411 ] [497])
                (mult:DI (reg:DI 0 ax [orig:496 _410 ] [496])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":234 349 {*muldi3_1}
     (nil))
(insn 1086 1085 1087 73 (set (reg:SI 0 ax [926])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":234 86 {*movsi_internal}
     (nil))
(insn 1087 1086 1088 73 (set (reg:DI 0 ax [orig:498 _412 ] [498])
        (sign_extend:DI (reg:SI 0 ax [926]))) "CALWXT.f":234 149 {*extendsidi2_rex64}
     (nil))
(insn 1088 1087 1089 73 (parallel [
            (set (reg:DI 0 ax [orig:499 _413 ] [499])
                (mult:DI (reg:DI 0 ax [orig:498 _412 ] [498])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":234 349 {*muldi3_1}
     (nil))
(insn 1089 1088 1090 73 (parallel [
            (set (reg:DI 1 dx [orig:500 _414 ] [500])
                (plus:DI (reg:DI 1 dx [orig:497 _411 ] [497])
                    (reg:DI 0 ax [orig:499 _413 ] [499])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":234 222 {*adddi_1}
     (nil))
(insn 1090 1089 1091 73 (set (reg:SI 0 ax [927])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":234 86 {*movsi_internal}
     (nil))
(insn 1091 1090 1092 73 (set (reg:DI 0 ax [orig:501 _415 ] [501])
        (sign_extend:DI (reg:SI 0 ax [927]))) "CALWXT.f":234 149 {*extendsidi2_rex64}
     (nil))
(insn 1092 1091 1093 73 (parallel [
            (set (reg:DI 0 ax [orig:502 _416 ] [502])
                (plus:DI (reg:DI 0 ax [orig:501 _415 ] [501])
                    (reg:DI 1 dx [orig:500 _414 ] [500])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":234 222 {*adddi_1}
     (nil))
(insn 1093 1092 1094 73 (parallel [
            (set (reg:DI 1 dx [orig:503 _417 ] [503])
                (plus:DI (reg:DI 0 ax [orig:502 _416 ] [502])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":234 222 {*adddi_1}
     (nil))
(insn 1094 1093 1095 73 (set (reg/f:DI 0 ax [928])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 t+0 S8 A64])) "CALWXT.f":234 85 {*movdi_internal}
     (nil))
(insn 1095 1094 1096 73 (set (reg:SF 21 xmm0 [orig:504 _418 ] [504])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:503 _417 ] [503])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [928])) [1 *t_595(D) S4 A32])) "CALWXT.f":234 131 {*movsf_internal}
     (nil))
(insn 1096 1095 1097 73 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:504 _418 ] [504])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -108 [0xffffffffffffff94])) [1 twrmk+0 S4 A32]))) "CALWXT.f":234 53 {*cmpisf}
     (nil))
(jump_insn 1097 1096 1101 73 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1103)
            (pc))) "CALWXT.f":234 682 {*jcc}
     (nil)
 -> 1103)
;;  succ:       74 (FALLTHRU)
;;              75
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 74, loop depth 0, maybe hot
;;  prev block 73, next block 75, flags: (RTL, MODIFIED)
;;  pred:       73 (FALLTHRU)
;; bb 74 artificial_defs: { }
;; bb 74 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 1101 1097 1102 74 [bb 74] NOTE_INSN_BASIC_BLOCK)
(insn 1102 1101 1103 74 (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -40 [0xffffffffffffffd8])) [2 iwrml+0 S4 A32])
        (const_int 1 [0x1])) "CALWXT.f":234 86 {*movsi_internal}
     (nil))
;;  succ:       75 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 75, loop depth 0, maybe hot
;;  prev block 74, next block 76, flags: (RTL, MODIFIED)
;;  pred:       72
;;              74 (FALLTHRU)
;;              73
;; bb 75 artificial_defs: { }
;; bb 75 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1103 1102 1104 75 51 (nil) [2 uses])
(note 1104 1103 1105 75 [bb 75] NOTE_INSN_BASIC_BLOCK)
(insn 1105 1104 1106 75 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [2 iwrml+0 S4 A32])
            (const_int 0 [0]))) "CALWXT.f":236 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1106 1105 1107 75 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1110)
            (pc))) "CALWXT.f":236 682 {*jcc}
     (nil)
 -> 1110)
;;  succ:       77
;;              76 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 76, loop depth 0, maybe hot
;;  prev block 75, next block 77, flags: (RTL, MODIFIED)
;;  pred:       75 (FALLTHRU)
;; bb 76 artificial_defs: { }
;; bb 76 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 1107 1106 1108 76 [bb 76] NOTE_INSN_BASIC_BLOCK)
(insn 1108 1107 1109 76 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 ifrzl+0 S4 A32])
            (const_int 0 [0]))) "CALWXT.f":236 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1109 1108 1110 76 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1246)
            (pc))) "CALWXT.f":236 682 {*jcc}
     (nil)
 -> 1246)
;;  succ:       77 (FALLTHRU)
;;              83
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 77, loop depth 0, maybe hot
;;  prev block 76, next block 78, flags: (RTL, MODIFIED)
;;  pred:       75
;;              76 (FALLTHRU)
;; bb 77 artificial_defs: { }
;; bb 77 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 77 [] 78 [] 79 [] 80 [] 505 506 507 508 509 510 511 512 513 514 515 516 517 518 519 520 521 522 523 524 525 526 527 528 529 530 531 532 533 534 535 536 537 538 539 540 541 542 543 544 545 546 547 548 549 550 551 929 930 931 932 933 934 935 936 937 938 939 940 941 942 943 944 945 946 947 948 949 950 951 952 953 954 955 956
(code_label 1110 1109 1111 77 53 (nil) [1 uses])
(note 1111 1110 1112 77 [bb 77] NOTE_INSN_BASIC_BLOCK)
(insn 1112 1111 1113 77 (set (reg:SI 0 ax [929])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":237 86 {*movsi_internal}
     (nil))
(insn 1113 1112 1114 77 (set (reg:DI 0 ax [orig:505 _419 ] [505])
        (sign_extend:DI (reg:SI 0 ax [929]))) "CALWXT.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 1114 1113 1115 77 (parallel [
            (set (reg:DI 1 dx [orig:506 _420 ] [506])
                (mult:DI (reg:DI 0 ax [orig:505 _419 ] [505])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":237 349 {*muldi3_1}
     (nil))
(insn 1115 1114 1116 77 (set (reg:SI 0 ax [930])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":237 86 {*movsi_internal}
     (nil))
(insn 1116 1115 1117 77 (set (reg:DI 0 ax [orig:507 _421 ] [507])
        (sign_extend:DI (reg:SI 0 ax [930]))) "CALWXT.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 1117 1116 1118 77 (parallel [
            (set (reg:DI 0 ax [orig:508 _422 ] [508])
                (plus:DI (reg:DI 0 ax [orig:507 _421 ] [507])
                    (reg:DI 1 dx [orig:506 _420 ] [506])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":237 222 {*adddi_1}
     (nil))
(insn 1118 1117 1119 77 (parallel [
            (set (reg:DI 1 dx [orig:509 _423 ] [509])
                (plus:DI (reg:DI 0 ax [orig:508 _422 ] [508])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":237 222 {*adddi_1}
     (nil))
(insn 1119 1118 1120 77 (set (reg/f:DI 0 ax [931])
        (symbol_ref:DI ("pdsl.3887") [flags 0x202]  <var_decl 0x7f2c99beb990 pdsl>)) "CALWXT.f":237 85 {*movdi_internal}
     (nil))
(insn 1120 1119 1121 77 (set (reg:SF 22 xmm1 [orig:510 _424 ] [510])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:509 _423 ] [509])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [931])) [1 pdsl S4 A32])) "CALWXT.f":237 131 {*movsf_internal}
     (nil))
(insn 1121 1120 1122 77 (set (reg:SI 0 ax [932])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":237 86 {*movsi_internal}
     (nil))
(insn 1122 1121 1123 77 (set (reg:DI 0 ax [orig:511 _425 ] [511])
        (sign_extend:DI (reg:SI 0 ax [932]))) "CALWXT.f":237 149 {*extendsidi2_rex64}
     (nil))
(insn 1123 1122 1124 77 (parallel [
            (set (reg:DI 1 dx [orig:512 _426 ] [512])
                (plus:DI (reg:DI 0 ax [orig:511 _425 ] [511])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":237 222 {*adddi_1}
     (nil))
(insn 1124 1123 1125 77 (set (reg/f:DI 0 ax [933])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 40 [0x28])) [3 eta+0 S8 A64])) "CALWXT.f":237 85 {*movdi_internal}
     (nil))
(insn 1125 1124 1126 77 (set (reg:SF 21 xmm0 [orig:513 _427 ] [513])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:512 _426 ] [512])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [933])) [1 *eta_656(D) S4 A32])) "CALWXT.f":237 131 {*movsf_internal}
     (nil))
(insn 1126 1125 1127 77 (set (reg:SF 22 xmm1 [orig:514 _428 ] [514])
        (mult:SF (reg:SF 22 xmm1 [orig:510 _424 ] [510])
            (reg:SF 21 xmm0 [orig:513 _427 ] [513]))) "CALWXT.f":237 838 {*fop_sf_comm}
     (nil))
(insn 1127 1126 1128 77 (set (reg/f:DI 0 ax [934])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 24 [0x18])) [5 pt+0 S8 A64])) "CALWXT.f":237 85 {*movdi_internal}
     (nil))
(insn 1128 1127 1129 77 (set (reg:SF 21 xmm0 [orig:515 _429 ] [515])
        (mem:SF (reg/f:DI 0 ax [934]) [1 *pt_592(D)+0 S4 A32])) "CALWXT.f":237 131 {*movsf_internal}
     (nil))
(insn 1129 1128 1130 77 (set (reg:SF 21 xmm0 [935])
        (plus:SF (reg:SF 21 xmm0 [orig:515 _429 ] [515])
            (reg:SF 22 xmm1 [orig:514 _428 ] [514]))) "CALWXT.f":237 838 {*fop_sf_comm}
     (nil))
(insn 1130 1129 1131 77 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [1 pintk2+0 S4 A32])
        (reg:SF 21 xmm0 [935])) "CALWXT.f":237 131 {*movsf_internal}
     (nil))
(insn 1131 1130 1132 77 (set (reg:SI 0 ax [936])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":239 86 {*movsi_internal}
     (nil))
(insn 1132 1131 1133 77 (set (reg:DI 0 ax [orig:516 _430 ] [516])
        (sign_extend:DI (reg:SI 0 ax [936]))) "CALWXT.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1133 1132 1134 77 (parallel [
            (set (reg:DI 1 dx [orig:517 _431 ] [517])
                (mult:DI (reg:DI 0 ax [orig:516 _430 ] [516])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":239 349 {*muldi3_1}
     (nil))
(insn 1134 1133 1135 77 (set (reg:SI 0 ax [937])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":239 86 {*movsi_internal}
     (nil))
(insn 1135 1134 1136 77 (set (reg:DI 0 ax [orig:518 _432 ] [518])
        (sign_extend:DI (reg:SI 0 ax [937]))) "CALWXT.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1136 1135 1137 77 (parallel [
            (set (reg:DI 0 ax [orig:519 _433 ] [519])
                (mult:DI (reg:DI 0 ax [orig:518 _432 ] [518])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":239 349 {*muldi3_1}
     (nil))
(insn 1137 1136 1138 77 (parallel [
            (set (reg:DI 1 dx [orig:520 _434 ] [520])
                (plus:DI (reg:DI 1 dx [orig:517 _431 ] [517])
                    (reg:DI 0 ax [orig:519 _433 ] [519])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":239 222 {*adddi_1}
     (nil))
(insn 1138 1137 1139 77 (set (reg:SI 0 ax [938])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":239 86 {*movsi_internal}
     (nil))
(insn 1139 1138 1140 77 (set (reg:DI 0 ax [orig:521 _435 ] [521])
        (sign_extend:DI (reg:SI 0 ax [938]))) "CALWXT.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1140 1139 1141 77 (parallel [
            (set (reg:DI 0 ax [orig:522 _436 ] [522])
                (plus:DI (reg:DI 0 ax [orig:521 _435 ] [521])
                    (reg:DI 1 dx [orig:520 _434 ] [520])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":239 222 {*adddi_1}
     (nil))
(insn 1141 1140 1142 77 (parallel [
            (set (reg:DI 1 dx [orig:523 _437 ] [523])
                (plus:DI (reg:DI 0 ax [orig:522 _436 ] [522])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":239 222 {*adddi_1}
     (nil))
(insn 1142 1141 1143 77 (set (reg/f:DI 0 ax [939])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -136 [0xffffffffffffff78])) [3 t+0 S8 A64])) "CALWXT.f":239 85 {*movdi_internal}
     (nil))
(insn 1143 1142 1144 77 (set (reg:SF 21 xmm0 [orig:524 _438 ] [524])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:523 _437 ] [523])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [939])) [1 *t_595(D) S4 A32])) "CALWXT.f":239 131 {*movsf_internal}
     (nil))
(insn 1144 1143 1145 77 (set (reg:SI 0 ax [940])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":239 86 {*movsi_internal}
     (nil))
(insn 1145 1144 1146 77 (set (reg:DI 0 ax [orig:525 _439 ] [525])
        (sign_extend:DI (reg:SI 0 ax [940]))) "CALWXT.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1146 1145 1147 77 (parallel [
            (set (reg:DI 1 dx [orig:526 _440 ] [526])
                (mult:DI (reg:DI 0 ax [orig:525 _439 ] [525])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":239 349 {*muldi3_1}
     (nil))
(insn 1147 1146 1148 77 (set (reg:SI 0 ax [941])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":239 86 {*movsi_internal}
     (nil))
(insn 1148 1147 1149 77 (set (reg:DI 0 ax [orig:527 _441 ] [527])
        (sign_extend:DI (reg:SI 0 ax [941]))) "CALWXT.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1149 1148 1150 77 (parallel [
            (set (reg:DI 0 ax [orig:528 _442 ] [528])
                (mult:DI (reg:DI 0 ax [orig:527 _441 ] [527])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":239 349 {*muldi3_1}
     (nil))
(insn 1150 1149 1151 77 (parallel [
            (set (reg:DI 1 dx [orig:529 _443 ] [529])
                (plus:DI (reg:DI 1 dx [orig:526 _440 ] [526])
                    (reg:DI 0 ax [orig:528 _442 ] [528])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":239 222 {*adddi_1}
     (nil))
(insn 1151 1150 1152 77 (set (reg:SI 0 ax [942])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":239 86 {*movsi_internal}
     (nil))
(insn 1152 1151 1153 77 (set (reg:DI 0 ax [orig:530 _444 ] [530])
        (sign_extend:DI (reg:SI 0 ax [942]))) "CALWXT.f":239 149 {*extendsidi2_rex64}
     (nil))
(insn 1153 1152 1154 77 (parallel [
            (set (reg:DI 0 ax [orig:531 _445 ] [531])
                (plus:DI (reg:DI 0 ax [orig:530 _444 ] [530])
                    (reg:DI 1 dx [orig:529 _443 ] [529])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":239 222 {*adddi_1}
     (nil))
(insn 1154 1153 1155 77 (parallel [
            (set (reg:DI 1 dx [orig:532 _446 ] [532])
                (plus:DI (reg:DI 0 ax [orig:531 _445 ] [531])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":239 222 {*adddi_1}
     (nil))
(insn 1155 1154 1156 77 (set (reg/f:DI 0 ax [943])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int -144 [0xffffffffffffff70])) [3 q+0 S8 A64])) "CALWXT.f":239 85 {*movdi_internal}
     (nil))
(insn 1156 1155 1157 77 (set (reg:SF 23 xmm2 [orig:533 _447 ] [533])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:532 _446 ] [532])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [943])) [1 *q_602(D) S4 A32])) "CALWXT.f":239 131 {*movsf_internal}
     (nil))
(insn 1157 1156 1158 77 (set (reg:SF 22 xmm1 [944])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC14") [flags 0x2]) [0  S4 A32])) "CALWXT.f":239 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 6.07999980449676513671875e-1 [0x0.9ba5e3p+0])
        (nil)))
(insn 1158 1157 1159 77 (set (reg:SF 23 xmm2 [orig:534 _448 ] [534])
        (mult:SF (reg:SF 23 xmm2 [orig:533 _447 ] [533])
            (reg:SF 22 xmm1 [944]))) "CALWXT.f":239 838 {*fop_sf_comm}
     (nil))
(insn 1159 1158 1160 77 (set (reg:SF 22 xmm1 [945])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC15") [flags 0x2]) [0  S4 A32])) "CALWXT.f":239 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 1.0e+0 [0x0.8p+1])
        (nil)))
(insn 1160 1159 1162 77 (set (reg:SF 22 xmm1 [orig:535 _449 ] [535])
        (plus:SF (reg:SF 22 xmm1 [945])
            (reg:SF 23 xmm2 [orig:534 _448 ] [534]))) "CALWXT.f":239 838 {*fop_sf_comm}
     (nil))
(insn 1162 1160 1163 77 (set (reg:SF 22 xmm1 [orig:537 _451 ] [537])
        (mult:SF (reg:SF 22 xmm1 [orig:536 _450 ] [536])
            (reg:SF 21 xmm0 [orig:524 _438 ] [524]))) "CALWXT.f":239 838 {*fop_sf_comm}
     (nil))
(insn 1163 1162 1164 77 (set (reg:SF 21 xmm0 [946])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC16") [flags 0x2]) [0  S4 A32])) "CALWXT.f":239 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.92897968292236328125e+1 [0x0.ea5181p+5])
        (nil)))
(insn 1164 1163 1522 77 (set (reg:SF 22 xmm1 [orig:537 _451 ] [537])
        (mult:SF (reg:SF 22 xmm1 [orig:537 _451 ] [537])
            (reg:SF 21 xmm0 [946]))) "CALWXT.f":239 838 {*fop_sf_comm}
     (nil))
(insn 1522 1164 1535 77 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -180 [0xffffffffffffff4c])) [7 %sfp+-164 S4 A32])
        (reg:SF 22 xmm1 [orig:537 _451 ] [537])) "CALWXT.f":239 131 {*movsf_internal}
     (nil))
(note 1535 1522 1527 77 NOTE_INSN_DELETED)
(note 1527 1535 1165 77 NOTE_INSN_DELETED)
(insn 1165 1527 1166 77 (set (reg:SF 21 xmm0 [947])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pintk1+0 S4 A32])) "CALWXT.f":239 131 {*movsf_internal}
     (nil))
(insn 1166 1165 1168 77 (set (reg:SF 21 xmm0 [orig:539 _453 ] [539])
        (div:SF (reg:SF 21 xmm0 [947])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -112 [0xffffffffffffff90])) [1 pintk2+0 S4 A32]))) "CALWXT.f":239 841 {*fop_sf_1}
     (nil))
(call_insn/u 1168 1166 1523 77 (set (reg:SF 21 xmm0)
        (call (mem:QI (symbol_ref:DI ("logf") [flags 0x41]  <function_decl 0x7f2c99a54900 __builtin_logf>) [0 __builtin_logf S1 A8])
            (const_int 0 [0]))) "CALWXT.f":239 700 {*call_value}
     (expr_list:REG_EH_REGION (const_int 0 [0])
        (nil))
    (expr_list:SF (use (reg:SF 21 xmm0))
        (nil)))
(note 1523 1168 1528 77 NOTE_INSN_DELETED)
(note 1528 1523 1170 77 NOTE_INSN_DELETED)
(insn 1170 1528 1171 77 (set (reg:SF 21 xmm0 [948])
        (mult:SF (reg:SF 21 xmm0 [orig:540 _454 ] [540])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -180 [0xffffffffffffff4c])) [7 %sfp+-164 S4 A32]))) "CALWXT.f":239 838 {*fop_sf_comm}
     (nil))
(insn 1171 1170 1172 77 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 dzkl+0 S4 A32])
        (reg:SF 21 xmm0 [948])) "CALWXT.f":239 131 {*movsf_internal}
     (nil))
(insn 1172 1171 1173 77 (set (reg:SI 0 ax [949])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":240 86 {*movsi_internal}
     (nil))
(insn 1173 1172 1174 77 (set (reg:DI 0 ax [orig:541 _455 ] [541])
        (sign_extend:DI (reg:SI 0 ax [949]))) "CALWXT.f":240 149 {*extendsidi2_rex64}
     (nil))
(insn 1174 1173 1175 77 (parallel [
            (set (reg:DI 1 dx [orig:542 _456 ] [542])
                (mult:DI (reg:DI 0 ax [orig:541 _455 ] [541])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":240 349 {*muldi3_1}
     (nil))
(insn 1175 1174 1176 77 (set (reg:SI 0 ax [950])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":240 86 {*movsi_internal}
     (nil))
(insn 1176 1175 1177 77 (set (reg:DI 0 ax [orig:543 _457 ] [543])
        (sign_extend:DI (reg:SI 0 ax [950]))) "CALWXT.f":240 149 {*extendsidi2_rex64}
     (nil))
(insn 1177 1176 1178 77 (parallel [
            (set (reg:DI 0 ax [orig:544 _458 ] [544])
                (mult:DI (reg:DI 0 ax [orig:543 _457 ] [543])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":240 349 {*muldi3_1}
     (nil))
(insn 1178 1177 1179 77 (parallel [
            (set (reg:DI 1 dx [orig:545 _459 ] [545])
                (plus:DI (reg:DI 1 dx [orig:542 _456 ] [542])
                    (reg:DI 0 ax [orig:544 _458 ] [544])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":240 222 {*adddi_1}
     (nil))
(insn 1179 1178 1180 77 (set (reg:SI 0 ax [951])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":240 86 {*movsi_internal}
     (nil))
(insn 1180 1179 1181 77 (set (reg:DI 0 ax [orig:546 _460 ] [546])
        (sign_extend:DI (reg:SI 0 ax [951]))) "CALWXT.f":240 149 {*extendsidi2_rex64}
     (nil))
(insn 1181 1180 1182 77 (parallel [
            (set (reg:DI 0 ax [orig:547 _461 ] [547])
                (plus:DI (reg:DI 0 ax [orig:546 _460 ] [546])
                    (reg:DI 1 dx [orig:545 _459 ] [545])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":240 222 {*adddi_1}
     (nil))
(insn 1182 1181 1183 77 (parallel [
            (set (reg:DI 1 dx [orig:548 _462 ] [548])
                (plus:DI (reg:DI 0 ax [orig:547 _461 ] [547])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":240 222 {*adddi_1}
     (nil))
(insn 1183 1182 1184 77 (set (reg/f:DI 0 ax [952])
        (symbol_ref:DI ("twet.3906") [flags 0x202]  <var_decl 0x7f2c99bec2d0 twet>)) "CALWXT.f":240 85 {*movdi_internal}
     (nil))
(insn 1184 1183 1185 77 (set (reg:SF 21 xmm0 [orig:549 _463 ] [549])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:548 _462 ] [548])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [952])) [1 twet S4 A32])) "CALWXT.f":240 131 {*movsf_internal}
     (nil))
(insn 1185 1184 1186 77 (set (reg:SF 22 xmm1 [953])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALWXT.f":240 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73149993896484375e+2 [0x0.889333p+9])
        (nil)))
(insn 1186 1185 1187 77 (set (reg:SF 21 xmm0 [orig:550 _464 ] [550])
        (minus:SF (reg:SF 21 xmm0 [orig:549 _463 ] [549])
            (reg:SF 22 xmm1 [953]))) "CALWXT.f":240 841 {*fop_sf_1}
     (nil))
(insn 1187 1186 1188 77 (set (reg:SF 22 xmm1 [orig:551 _465 ] [551])
        (reg:SF 21 xmm0 [orig:550 _464 ] [550])) "CALWXT.f":240 131 {*movsf_internal}
     (nil))
(insn 1188 1187 1189 77 (set (reg:SF 21 xmm0 [955])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -28 [0xffffffffffffffe4])) [1 dzkl+0 S4 A32])) "CALWXT.f":240 131 {*movsf_internal}
     (nil))
(insn 1189 1188 1190 77 (set (reg:SF 21 xmm0 [954])
        (mult:SF (reg:SF 21 xmm0 [955])
            (reg:SF 22 xmm1 [orig:551 _465 ] [551]))) "CALWXT.f":240 838 {*fop_sf_comm}
     (nil))
(insn 1190 1189 1191 77 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -116 [0xffffffffffffff8c])) [1 area1+0 S4 A32])
        (reg:SF 21 xmm0 [954])) "CALWXT.f":240 131 {*movsf_internal}
     (nil))
(insn 1191 1190 1192 77 (set (reg:SF 21 xmm0 [956])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -112 [0xffffffffffffff90])) [1 pintk2+0 S4 A32])) "CALWXT.f":241 131 {*movsf_internal}
     (nil))
(insn 1192 1191 1193 77 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -52 [0xffffffffffffffcc])) [1 pintk1+0 S4 A32])
        (reg:SF 21 xmm0 [956])) "CALWXT.f":241 131 {*movsf_internal}
     (nil))
(insn 1193 1192 1194 77 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -36 [0xffffffffffffffdc])) [2 ifrzl+0 S4 A32])
            (const_int 0 [0]))) "CALWXT.f":242 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1194 1193 1195 77 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1218)
            (pc))) "CALWXT.f":242 682 {*jcc}
     (nil)
 -> 1218)
;;  succ:       78 (FALLTHRU)
;;              80
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 78, loop depth 0, maybe hot
;;  prev block 77, next block 79, flags: (RTL, MODIFIED)
;;  pred:       77 (FALLTHRU)
;; bb 78 artificial_defs: { }
;; bb 78 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 552 553 554 555 556 557 558 559 560 957 958 959 960
(note 1195 1194 1196 78 [bb 78] NOTE_INSN_BASIC_BLOCK)
(insn 1196 1195 1197 78 (set (reg:SI 0 ax [957])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":242 86 {*movsi_internal}
     (nil))
(insn 1197 1196 1198 78 (set (reg:DI 0 ax [orig:552 _466 ] [552])
        (sign_extend:DI (reg:SI 0 ax [957]))) "CALWXT.f":242 149 {*extendsidi2_rex64}
     (nil))
(insn 1198 1197 1199 78 (parallel [
            (set (reg:DI 1 dx [orig:553 _467 ] [553])
                (mult:DI (reg:DI 0 ax [orig:552 _466 ] [552])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":242 349 {*muldi3_1}
     (nil))
(insn 1199 1198 1200 78 (set (reg:SI 0 ax [958])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":242 86 {*movsi_internal}
     (nil))
(insn 1200 1199 1201 78 (set (reg:DI 0 ax [orig:554 _468 ] [554])
        (sign_extend:DI (reg:SI 0 ax [958]))) "CALWXT.f":242 149 {*extendsidi2_rex64}
     (nil))
(insn 1201 1200 1202 78 (parallel [
            (set (reg:DI 0 ax [orig:555 _469 ] [555])
                (mult:DI (reg:DI 0 ax [orig:554 _468 ] [554])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":242 349 {*muldi3_1}
     (nil))
(insn 1202 1201 1203 78 (parallel [
            (set (reg:DI 1 dx [orig:556 _470 ] [556])
                (plus:DI (reg:DI 1 dx [orig:553 _467 ] [553])
                    (reg:DI 0 ax [orig:555 _469 ] [555])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":242 222 {*adddi_1}
     (nil))
(insn 1203 1202 1204 78 (set (reg:SI 0 ax [959])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":242 86 {*movsi_internal}
     (nil))
(insn 1204 1203 1205 78 (set (reg:DI 0 ax [orig:557 _471 ] [557])
        (sign_extend:DI (reg:SI 0 ax [959]))) "CALWXT.f":242 149 {*extendsidi2_rex64}
     (nil))
(insn 1205 1204 1206 78 (parallel [
            (set (reg:DI 0 ax [orig:558 _472 ] [558])
                (plus:DI (reg:DI 0 ax [orig:557 _471 ] [557])
                    (reg:DI 1 dx [orig:556 _470 ] [556])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":242 222 {*adddi_1}
     (nil))
(insn 1206 1205 1207 78 (parallel [
            (set (reg:DI 1 dx [orig:559 _473 ] [559])
                (plus:DI (reg:DI 0 ax [orig:558 _472 ] [558])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":242 222 {*adddi_1}
     (nil))
(insn 1207 1206 1208 78 (set (reg/f:DI 0 ax [960])
        (symbol_ref:DI ("twet.3906") [flags 0x202]  <var_decl 0x7f2c99bec2d0 twet>)) "CALWXT.f":242 85 {*movdi_internal}
     (nil))
(insn 1208 1207 1209 78 (set (reg:SF 21 xmm0 [orig:560 _474 ] [560])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:559 _473 ] [559])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [960])) [1 twet S4 A32])) "CALWXT.f":242 131 {*movsf_internal}
     (nil))
(insn 1209 1208 1210 78 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [orig:560 _474 ] [560])
            (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32]))) "CALWXT.f":242 53 {*cmpisf}
     (nil))
(jump_insn 1210 1209 1214 78 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1218)
            (pc))) "CALWXT.f":242 682 {*jcc}
     (nil)
 -> 1218)
;;  succ:       79 (FALLTHRU)
;;              80
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 79, loop depth 0, maybe hot
;;  prev block 78, next block 80, flags: (RTL, MODIFIED)
;;  pred:       78 (FALLTHRU)
;; bb 79 artificial_defs: { }
;; bb 79 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 961 962
(note 1214 1210 1215 79 [bb 79] NOTE_INSN_BASIC_BLOCK)
(insn 1215 1214 1216 79 (set (reg:SF 21 xmm0 [962])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 surfw+0 S4 A32])) "CALWXT.f":242 131 {*movsf_internal}
     (nil))
(insn 1216 1215 1217 79 (set (reg:SF 21 xmm0 [961])
        (plus:SF (reg:SF 21 xmm0 [962])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])) [1 area1+0 S4 A32]))) "CALWXT.f":242 838 {*fop_sf_comm}
     (nil))
(insn 1217 1216 1218 79 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -60 [0xffffffffffffffc4])) [1 surfw+0 S4 A32])
        (reg:SF 21 xmm0 [961])) "CALWXT.f":242 131 {*movsf_internal}
     (nil))
;;  succ:       80 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 80, loop depth 0, maybe hot
;;  prev block 79, next block 81, flags: (RTL, MODIFIED)
;;  pred:       77
;;              79 (FALLTHRU)
;;              78
;; bb 80 artificial_defs: { }
;; bb 80 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1218 1217 1219 80 55 (nil) [2 uses])
(note 1219 1218 1220 80 [bb 80] NOTE_INSN_BASIC_BLOCK)
(insn 1220 1219 1221 80 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                    (const_int -40 [0xffffffffffffffd8])) [2 iwrml+0 S4 A32])
            (const_int 0 [0]))) "CALWXT.f":243 7 {*cmpsi_ccno_1}
     (nil))
(jump_insn 1221 1220 1222 80 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 1246)
            (pc))) "CALWXT.f":243 682 {*jcc}
     (nil)
 -> 1246)
;;  succ:       81 (FALLTHRU)
;;              83
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 81, loop depth 0, maybe hot
;;  prev block 80, next block 82, flags: (RTL, MODIFIED)
;;  pred:       80 (FALLTHRU)
;; bb 81 artificial_defs: { }
;; bb 81 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 561 562 563 564 565 566 567 568 569 963 964 965 966 967
(note 1222 1221 1223 81 [bb 81] NOTE_INSN_BASIC_BLOCK)
(insn 1223 1222 1224 81 (set (reg:SI 0 ax [963])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])) "CALWXT.f":243 86 {*movsi_internal}
     (nil))
(insn 1224 1223 1225 81 (set (reg:DI 0 ax [orig:561 _475 ] [561])
        (sign_extend:DI (reg:SI 0 ax [963]))) "CALWXT.f":243 149 {*extendsidi2_rex64}
     (nil))
(insn 1225 1224 1226 81 (parallel [
            (set (reg:DI 1 dx [orig:562 _476 ] [562])
                (mult:DI (reg:DI 0 ax [orig:561 _475 ] [561])
                    (const_int 29631 [0x73bf])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":243 349 {*muldi3_1}
     (nil))
(insn 1226 1225 1227 81 (set (reg:SI 0 ax [964])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":243 86 {*movsi_internal}
     (nil))
(insn 1227 1226 1228 81 (set (reg:DI 0 ax [orig:563 _477 ] [563])
        (sign_extend:DI (reg:SI 0 ax [964]))) "CALWXT.f":243 149 {*extendsidi2_rex64}
     (nil))
(insn 1228 1227 1229 81 (parallel [
            (set (reg:DI 0 ax [orig:564 _478 ] [564])
                (mult:DI (reg:DI 0 ax [orig:563 _477 ] [563])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":243 349 {*muldi3_1}
     (nil))
(insn 1229 1228 1230 81 (parallel [
            (set (reg:DI 1 dx [orig:565 _479 ] [565])
                (plus:DI (reg:DI 1 dx [orig:562 _476 ] [562])
                    (reg:DI 0 ax [orig:564 _478 ] [564])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":243 222 {*adddi_1}
     (nil))
(insn 1230 1229 1231 81 (set (reg:SI 0 ax [965])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":243 86 {*movsi_internal}
     (nil))
(insn 1231 1230 1232 81 (set (reg:DI 0 ax [orig:566 _480 ] [566])
        (sign_extend:DI (reg:SI 0 ax [965]))) "CALWXT.f":243 149 {*extendsidi2_rex64}
     (nil))
(insn 1232 1231 1233 81 (parallel [
            (set (reg:DI 0 ax [orig:567 _481 ] [567])
                (plus:DI (reg:DI 0 ax [orig:566 _480 ] [566])
                    (reg:DI 1 dx [orig:565 _479 ] [565])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":243 222 {*adddi_1}
     (nil))
(insn 1233 1232 1234 81 (parallel [
            (set (reg:DI 1 dx [orig:568 _482 ] [568])
                (plus:DI (reg:DI 0 ax [orig:567 _481 ] [567])
                    (const_int -29751 [0xffffffffffff8bc9])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":243 222 {*adddi_1}
     (nil))
(insn 1234 1233 1235 81 (set (reg/f:DI 0 ax [966])
        (symbol_ref:DI ("twet.3906") [flags 0x202]  <var_decl 0x7f2c99bec2d0 twet>)) "CALWXT.f":243 85 {*movdi_internal}
     (nil))
(insn 1235 1234 1236 81 (set (reg:SF 22 xmm1 [orig:569 _483 ] [569])
        (mem:SF (plus:DI (mult:DI (reg:DI 1 dx [orig:568 _482 ] [568])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [966])) [1 twet S4 A32])) "CALWXT.f":243 131 {*movsf_internal}
     (nil))
(insn 1236 1235 1237 81 (set (reg:SF 21 xmm0 [967])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALWXT.f":243 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73149993896484375e+2 [0x0.889333p+9])
        (nil)))
(insn 1237 1236 1238 81 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [967])
            (reg:SF 22 xmm1 [orig:569 _483 ] [569]))) "CALWXT.f":243 53 {*cmpisf}
     (nil))
(jump_insn 1238 1237 1242 81 (set (pc)
        (if_then_else (unlt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1246)
            (pc))) "CALWXT.f":243 682 {*jcc}
     (nil)
 -> 1246)
;;  succ:       82 (FALLTHRU)
;;              83
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 82, loop depth 0, maybe hot
;;  prev block 81, next block 83, flags: (RTL, MODIFIED)
;;  pred:       81 (FALLTHRU)
;; bb 82 artificial_defs: { }
;; bb 82 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 968 969
(note 1242 1238 1243 82 [bb 82] NOTE_INSN_BASIC_BLOCK)
(insn 1243 1242 1244 82 (set (reg:SF 21 xmm0 [969])
        (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 surfc+0 S4 A32])) "CALWXT.f":243 131 {*movsf_internal}
     (nil))
(insn 1244 1243 1245 82 (set (reg:SF 21 xmm0 [968])
        (plus:SF (reg:SF 21 xmm0 [969])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -116 [0xffffffffffffff8c])) [1 area1+0 S4 A32]))) "CALWXT.f":243 838 {*fop_sf_comm}
     (nil))
(insn 1245 1244 1246 82 (set (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                (const_int -56 [0xffffffffffffffc8])) [1 surfc+0 S4 A32])
        (reg:SF 21 xmm0 [968])) "CALWXT.f":243 131 {*movsf_internal}
     (nil))
;;  succ:       83 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 83, loop depth 0, maybe hot
;;  prev block 82, next block 107, flags: (RTL, MODIFIED)
;;  pred:       76
;;              80
;;              82 (FALLTHRU)
;;              81
;; bb 83 artificial_defs: { }
;; bb 83 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1246 1245 1247 83 54 (nil) [3 uses])
(note 1247 1246 1248 83 [bb 83] NOTE_INSN_BASIC_BLOCK)
(insn 1248 1247 1452 83 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -48 [0xffffffffffffffd0])) [2 l+0 S4 A32])
                    (const_int -1 [0xffffffffffffffff])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":232 221 {*addsi_1}
     (nil))
(jump_insn 1452 1248 1453 83 (set (pc)
        (label_ref 1249)) "CALWXT.f":232 683 {jump}
     (nil)
 -> 1249)
;;  succ:       68 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

(barrier 1453 1452 1507)
;; basic block 107, loop depth 0, maybe hot
;;  prev block 83, next block 84, flags: (RTL, MODIFIED)
;;  pred:       68
;; bb 107 artificial_defs: { }
;; bb 107 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1507 1453 1506 107 104 (nil) [1 uses])
(note 1506 1507 1508 107 [bb 107] NOTE_INSN_BASIC_BLOCK)
(insn 1508 1506 1252 107 (const_int 0 [0]) "CALWXT.f":236 718 {nop}
     (nil))
;;  succ:       84 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 84, loop depth 0, maybe hot
;;  prev block 107, next block 85, flags: (RTL, MODIFIED)
;;  pred:       107 [always]  (FALLTHRU)
;; bb 84 artificial_defs: { }
;; bb 84 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 970
(code_label 1252 1508 1253 84 48 (nil) [0 uses])
(note 1253 1252 1254 84 [bb 84] NOTE_INSN_BASIC_BLOCK)
(insn 1254 1253 1255 84 (set (reg:SF 21 xmm0 [970])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S4 A32])) "CALWXT.f":246 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -3.0e+3 [-0x0.bb8p+12])
        (nil)))
(insn 1255 1254 1256 84 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [970])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -56 [0xffffffffffffffc8])) [1 surfc+0 S4 A32]))) "CALWXT.f":246 53 {*cmpisf}
     (nil))
(jump_insn 1256 1255 1257 84 (set (pc)
        (if_then_else (gt (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref 1271)
            (pc))) "CALWXT.f":246 682 {*jcc}
     (nil)
 -> 1271)
;;  succ:       87
;;              85 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 85, loop depth 0, maybe hot
;;  prev block 84, next block 86, flags: (RTL, MODIFIED)
;;  pred:       84 (FALLTHRU)
;; bb 85 artificial_defs: { }
;; bb 85 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 971
(note 1257 1256 1258 85 [bb 85] NOTE_INSN_BASIC_BLOCK)
(insn 1258 1257 1259 85 (set (reg:SF 21 xmm0 [971])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC19") [flags 0x2]) [0  S4 A32])) "CALWXT.f":246 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF -3.0e+3 [-0x0.bb8p+12])
        (nil)))
(insn 1259 1258 1260 85 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [971])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -24 [0xffffffffffffffe8])) [1 areas8+0 S4 A32]))) "CALWXT.f":246 53 {*cmpisf}
     (nil))
(jump_insn 1260 1259 1264 85 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1294)
            (pc))) "CALWXT.f":246 682 {*jcc}
     (nil)
 -> 1294)
;;  succ:       86 (FALLTHRU)
;;              88
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 86, loop depth 0, maybe hot
;;  prev block 85, next block 87, flags: (RTL, MODIFIED)
;;  pred:       85 (FALLTHRU)
;; bb 86 artificial_defs: { }
;; bb 86 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 972
(note 1264 1260 1265 86 [bb 86] NOTE_INSN_BASIC_BLOCK)
(insn 1265 1264 1266 86 (set (reg:SF 21 xmm0 [972])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC20") [flags 0x2]) [0  S4 A32])) "CALWXT.f":246 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 5.0e+1 [0x0.c8p+6])
        (nil)))
(insn 1266 1265 1267 86 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [972])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -60 [0xffffffffffffffc4])) [1 surfw+0 S4 A32]))) "CALWXT.f":246 53 {*cmpisf}
     (nil))
(jump_insn 1267 1266 1271 86 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1294)
            (pc))) "CALWXT.f":246 682 {*jcc}
     (nil)
 -> 1294)
;;  succ:       87 (FALLTHRU)
;;              88
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 87, loop depth 0, maybe hot
;;  prev block 86, next block 88, flags: (RTL, MODIFIED)
;;  pred:       84
;;              86 (FALLTHRU)
;; bb 87 artificial_defs: { }
;; bb 87 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 570 571 572 573 574 575 576 577 578 579 580 581 973 974 975 976 977 978
(code_label 1271 1267 1272 87 59 (nil) [1 uses])
(note 1272 1271 1273 87 [bb 87] NOTE_INSN_BASIC_BLOCK)
(insn 1273 1272 1274 87 (set (reg:SI 0 ax [973])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":253 86 {*movsi_internal}
     (nil))
(insn 1274 1273 1275 87 (set (reg:DI 0 ax [orig:570 _484 ] [570])
        (sign_extend:DI (reg:SI 0 ax [973]))) "CALWXT.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 1275 1274 1276 87 (parallel [
            (set (reg:DI 1 dx [orig:571 _485 ] [571])
                (mult:DI (reg:DI 0 ax [orig:570 _484 ] [570])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":253 349 {*muldi3_1}
     (nil))
(insn 1276 1275 1277 87 (set (reg:SI 0 ax [974])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":253 86 {*movsi_internal}
     (nil))
(insn 1277 1276 1278 87 (set (reg:DI 0 ax [orig:572 _486 ] [572])
        (sign_extend:DI (reg:SI 0 ax [974]))) "CALWXT.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 1278 1277 1279 87 (parallel [
            (set (reg:DI 0 ax [orig:573 _487 ] [573])
                (plus:DI (reg:DI 0 ax [orig:572 _486 ] [572])
                    (reg:DI 1 dx [orig:571 _485 ] [571])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":253 222 {*adddi_1}
     (nil))
(insn 1279 1278 1280 87 (parallel [
            (set (reg:DI 1 dx [orig:574 _488 ] [574])
                (plus:DI (reg:DI 0 ax [orig:573 _487 ] [573])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":253 222 {*adddi_1}
     (nil))
(insn 1280 1279 1281 87 (set (reg/f:DI 0 ax [975])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [4 iwx+0 S8 A64])) "CALWXT.f":253 85 {*movdi_internal}
     (nil))
(insn 1281 1280 1282 87 (set (reg:SI 0 ax [orig:575 _489 ] [575])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:574 _488 ] [574])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [975])) [2 *iwx_576(D) S4 A32])) "CALWXT.f":253 86 {*movsi_internal}
     (nil))
(insn 1282 1281 1283 87 (set (reg:SI 1 dx [976])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":253 86 {*movsi_internal}
     (nil))
(insn 1283 1282 1284 87 (set (reg:DI 1 dx [orig:576 _490 ] [576])
        (sign_extend:DI (reg:SI 1 dx [976]))) "CALWXT.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 1284 1283 1285 87 (parallel [
            (set (reg:DI 2 cx [orig:577 _491 ] [577])
                (mult:DI (reg:DI 1 dx [orig:576 _490 ] [576])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":253 349 {*muldi3_1}
     (nil))
(insn 1285 1284 1286 87 (set (reg:SI 1 dx [977])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":253 86 {*movsi_internal}
     (nil))
(insn 1286 1285 1287 87 (set (reg:DI 1 dx [orig:578 _492 ] [578])
        (sign_extend:DI (reg:SI 1 dx [977]))) "CALWXT.f":253 149 {*extendsidi2_rex64}
     (nil))
(insn 1287 1286 1288 87 (parallel [
            (set (reg:DI 1 dx [orig:579 _493 ] [579])
                (plus:DI (reg:DI 1 dx [orig:578 _492 ] [578])
                    (reg:DI 2 cx [orig:577 _491 ] [577])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":253 222 {*adddi_1}
     (nil))
(insn 1288 1287 1289 87 (parallel [
            (set (reg:DI 1 dx [orig:580 _494 ] [580])
                (plus:DI (reg:DI 1 dx [orig:579 _493 ] [579])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":253 222 {*adddi_1}
     (nil))
(insn 1289 1288 1290 87 (parallel [
            (set (reg:SI 2 cx [orig:581 _495 ] [581])
                (plus:SI (reg:SI 0 ax [orig:575 _489 ] [575])
                    (const_int 2 [0x2])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":253 221 {*addsi_1}
     (nil))
(insn 1290 1289 1291 87 (set (reg/f:DI 0 ax [978])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [4 iwx+0 S8 A64])) "CALWXT.f":253 85 {*movdi_internal}
     (nil))
(insn 1291 1290 1454 87 (set (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:580 _494 ] [580])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [978])) [2 *iwx_576(D) S4 A32])
        (reg:SI 2 cx [orig:581 _495 ] [581])) "CALWXT.f":253 86 {*movsi_internal}
     (nil))
(jump_insn 1454 1291 1455 87 (set (pc)
        (label_ref 1347)) "CALWXT.f":254 683 {jump}
     (nil)
 -> 1347)
;;  succ:       91 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

(barrier 1455 1454 1294)
;; basic block 88, loop depth 0, maybe hot
;;  prev block 87, next block 89, flags: (RTL, MODIFIED)
;;  pred:       85
;;              86
;; bb 88 artificial_defs: { }
;; bb 88 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 979
(code_label 1294 1455 1295 88 60 (nil) [2 uses])
(note 1295 1294 1296 88 [bb 88] NOTE_INSN_BASIC_BLOCK)
(insn 1296 1295 1297 88 (set (reg:SF 21 xmm0 [979])
        (mem/u/c:SF (symbol_ref/u:DI ("*.LC10") [flags 0x2]) [0  S4 A32])) "CALWXT.f":257 131 {*movsf_internal}
     (expr_list:REG_EQUAL (const_double:SF 2.73149993896484375e+2 [0x0.889333p+9])
        (nil)))
(insn 1297 1296 1298 88 (set (reg:CCFP 17 flags)
        (compare:CCFP (reg:SF 21 xmm0 [979])
            (mem/c:SF (plus:DI (reg/f:DI 6 bp)
                    (const_int -100 [0xffffffffffffff9c])) [1 tlmhk+0 S4 A32]))) "CALWXT.f":257 53 {*cmpisf}
     (nil))
(jump_insn 1298 1297 1302 88 (set (pc)
        (if_then_else (unle (reg:CCFP 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 1456)
            (pc))) "CALWXT.f":257 682 {*jcc}
     (nil)
 -> 1456)
;;  succ:       89 (FALLTHRU)
;;              90
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 89, loop depth 0, maybe hot
;;  prev block 88, next block 90, flags: (RTL, MODIFIED)
;;  pred:       88 (FALLTHRU)
;; bb 89 artificial_defs: { }
;; bb 89 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 582 583 584 585 586 587 588 589 590 591 592 593 980 981 982 983 984 985
(note 1302 1298 1303 89 [bb 89] NOTE_INSN_BASIC_BLOCK)
(insn 1303 1302 1304 89 (set (reg:SI 0 ax [980])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":263 86 {*movsi_internal}
     (nil))
(insn 1304 1303 1305 89 (set (reg:DI 0 ax [orig:582 _496 ] [582])
        (sign_extend:DI (reg:SI 0 ax [980]))) "CALWXT.f":263 149 {*extendsidi2_rex64}
     (nil))
(insn 1305 1304 1306 89 (parallel [
            (set (reg:DI 1 dx [orig:583 _497 ] [583])
                (mult:DI (reg:DI 0 ax [orig:582 _496 ] [582])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":263 349 {*muldi3_1}
     (nil))
(insn 1306 1305 1307 89 (set (reg:SI 0 ax [981])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":263 86 {*movsi_internal}
     (nil))
(insn 1307 1306 1308 89 (set (reg:DI 0 ax [orig:584 _498 ] [584])
        (sign_extend:DI (reg:SI 0 ax [981]))) "CALWXT.f":263 149 {*extendsidi2_rex64}
     (nil))
(insn 1308 1307 1309 89 (parallel [
            (set (reg:DI 0 ax [orig:585 _499 ] [585])
                (plus:DI (reg:DI 0 ax [orig:584 _498 ] [584])
                    (reg:DI 1 dx [orig:583 _497 ] [583])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":263 222 {*adddi_1}
     (nil))
(insn 1309 1308 1310 89 (parallel [
            (set (reg:DI 1 dx [orig:586 _500 ] [586])
                (plus:DI (reg:DI 0 ax [orig:585 _499 ] [585])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":263 222 {*adddi_1}
     (nil))
(insn 1310 1309 1311 89 (set (reg/f:DI 0 ax [982])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [4 iwx+0 S8 A64])) "CALWXT.f":263 85 {*movdi_internal}
     (nil))
(insn 1311 1310 1312 89 (set (reg:SI 0 ax [orig:587 _501 ] [587])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:586 _500 ] [586])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [982])) [2 *iwx_576(D) S4 A32])) "CALWXT.f":263 86 {*movsi_internal}
     (nil))
(insn 1312 1311 1313 89 (set (reg:SI 1 dx [983])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":263 86 {*movsi_internal}
     (nil))
(insn 1313 1312 1314 89 (set (reg:DI 1 dx [orig:588 _502 ] [588])
        (sign_extend:DI (reg:SI 1 dx [983]))) "CALWXT.f":263 149 {*extendsidi2_rex64}
     (nil))
(insn 1314 1313 1315 89 (parallel [
            (set (reg:DI 2 cx [orig:589 _503 ] [589])
                (mult:DI (reg:DI 1 dx [orig:588 _502 ] [588])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":263 349 {*muldi3_1}
     (nil))
(insn 1315 1314 1316 89 (set (reg:SI 1 dx [984])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":263 86 {*movsi_internal}
     (nil))
(insn 1316 1315 1317 89 (set (reg:DI 1 dx [orig:590 _504 ] [590])
        (sign_extend:DI (reg:SI 1 dx [984]))) "CALWXT.f":263 149 {*extendsidi2_rex64}
     (nil))
(insn 1317 1316 1318 89 (parallel [
            (set (reg:DI 1 dx [orig:591 _505 ] [591])
                (plus:DI (reg:DI 1 dx [orig:590 _504 ] [590])
                    (reg:DI 2 cx [orig:589 _503 ] [589])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":263 222 {*adddi_1}
     (nil))
(insn 1318 1317 1319 89 (parallel [
            (set (reg:DI 1 dx [orig:592 _506 ] [592])
                (plus:DI (reg:DI 1 dx [orig:591 _505 ] [591])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":263 222 {*adddi_1}
     (nil))
(insn 1319 1318 1320 89 (parallel [
            (set (reg:SI 2 cx [orig:593 _507 ] [593])
                (plus:SI (reg:SI 0 ax [orig:587 _501 ] [587])
                    (const_int 4 [0x4])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":263 221 {*addsi_1}
     (nil))
(insn 1320 1319 1321 89 (set (reg/f:DI 0 ax [985])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [4 iwx+0 S8 A64])) "CALWXT.f":263 85 {*movdi_internal}
     (nil))
(insn 1321 1320 1457 89 (set (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:592 _506 ] [592])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [985])) [2 *iwx_576(D) S4 A32])
        (reg:SI 2 cx [orig:593 _507 ] [593])) "CALWXT.f":263 86 {*movsi_internal}
     (nil))
(jump_insn 1457 1321 1458 89 (set (pc)
        (label_ref 1347)) 683 {jump}
     (nil)
 -> 1347)
;;  succ:       91 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

(barrier 1458 1457 1456)
;; basic block 90, loop depth 0, maybe hot
;;  prev block 89, next block 91, flags: (RTL, MODIFIED)
;;  pred:       88
;; bb 90 artificial_defs: { }
;; bb 90 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 594 595 596 597 598 599 600 601 602 603 604 605 986 987 988 989 990 991
(code_label 1456 1458 1325 90 90 (nil) [1 uses])
(note 1325 1456 1326 90 [bb 90] NOTE_INSN_BASIC_BLOCK)
(insn 1326 1325 1327 90 (set (reg:SI 0 ax [986])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":270 86 {*movsi_internal}
     (nil))
(insn 1327 1326 1328 90 (set (reg:DI 0 ax [orig:594 _508 ] [594])
        (sign_extend:DI (reg:SI 0 ax [986]))) "CALWXT.f":270 149 {*extendsidi2_rex64}
     (nil))
(insn 1328 1327 1329 90 (parallel [
            (set (reg:DI 1 dx [orig:595 _509 ] [595])
                (mult:DI (reg:DI 0 ax [orig:594 _508 ] [594])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":270 349 {*muldi3_1}
     (nil))
(insn 1329 1328 1330 90 (set (reg:SI 0 ax [987])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":270 86 {*movsi_internal}
     (nil))
(insn 1330 1329 1331 90 (set (reg:DI 0 ax [orig:596 _510 ] [596])
        (sign_extend:DI (reg:SI 0 ax [987]))) "CALWXT.f":270 149 {*extendsidi2_rex64}
     (nil))
(insn 1331 1330 1332 90 (parallel [
            (set (reg:DI 0 ax [orig:597 _511 ] [597])
                (plus:DI (reg:DI 0 ax [orig:596 _510 ] [596])
                    (reg:DI 1 dx [orig:595 _509 ] [595])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":270 222 {*adddi_1}
     (nil))
(insn 1332 1331 1333 90 (parallel [
            (set (reg:DI 1 dx [orig:598 _512 ] [598])
                (plus:DI (reg:DI 0 ax [orig:597 _511 ] [597])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":270 222 {*adddi_1}
     (nil))
(insn 1333 1332 1334 90 (set (reg/f:DI 0 ax [988])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [4 iwx+0 S8 A64])) "CALWXT.f":270 85 {*movdi_internal}
     (nil))
(insn 1334 1333 1335 90 (set (reg:SI 0 ax [orig:599 _513 ] [599])
        (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:598 _512 ] [598])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [988])) [2 *iwx_576(D) S4 A32])) "CALWXT.f":270 86 {*movsi_internal}
     (nil))
(insn 1335 1334 1336 90 (set (reg:SI 1 dx [989])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])) "CALWXT.f":270 86 {*movsi_internal}
     (nil))
(insn 1336 1335 1337 90 (set (reg:DI 1 dx [orig:600 _514 ] [600])
        (sign_extend:DI (reg:SI 1 dx [989]))) "CALWXT.f":270 149 {*extendsidi2_rex64}
     (nil))
(insn 1337 1336 1338 90 (parallel [
            (set (reg:DI 2 cx [orig:601 _515 ] [601])
                (mult:DI (reg:DI 1 dx [orig:600 _514 ] [600])
                    (const_int 119 [0x77])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":270 349 {*muldi3_1}
     (nil))
(insn 1338 1337 1339 90 (set (reg:SI 1 dx [990])
        (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])) "CALWXT.f":270 86 {*movsi_internal}
     (nil))
(insn 1339 1338 1340 90 (set (reg:DI 1 dx [orig:602 _516 ] [602])
        (sign_extend:DI (reg:SI 1 dx [990]))) "CALWXT.f":270 149 {*extendsidi2_rex64}
     (nil))
(insn 1340 1339 1341 90 (parallel [
            (set (reg:DI 1 dx [orig:603 _517 ] [603])
                (plus:DI (reg:DI 1 dx [orig:602 _516 ] [602])
                    (reg:DI 2 cx [orig:601 _515 ] [601])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":270 222 {*adddi_1}
     (nil))
(insn 1341 1340 1342 90 (parallel [
            (set (reg:DI 1 dx [orig:604 _518 ] [604])
                (plus:DI (reg:DI 1 dx [orig:603 _517 ] [603])
                    (const_int -120 [0xffffffffffffff88])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":270 222 {*adddi_1}
     (nil))
(insn 1342 1341 1343 90 (parallel [
            (set (reg:SI 2 cx [orig:605 _519 ] [605])
                (plus:SI (reg:SI 0 ax [orig:599 _513 ] [599])
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":270 221 {*addsi_1}
     (nil))
(insn 1343 1342 1344 90 (set (reg/f:DI 0 ax [991])
        (mem/f/c:DI (plus:DI (reg/f:DI 6 bp)
                (const_int 48 [0x30])) [4 iwx+0 S8 A64])) "CALWXT.f":270 85 {*movdi_internal}
     (nil))
(insn 1344 1343 1347 90 (set (mem:SI (plus:DI (mult:DI (reg:DI 1 dx [orig:604 _518 ] [604])
                    (const_int 4 [0x4]))
                (reg/f:DI 0 ax [991])) [2 *iwx_576(D) S4 A32])
        (reg:SI 2 cx [orig:605 _519 ] [605])) "CALWXT.f":270 86 {*movsi_internal}
     (nil))
;;  succ:       91 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 91, loop depth 0, maybe hot
;;  prev block 90, next block 103, flags: (RTL, MODIFIED)
;;  pred:       52
;;              87 [always] 
;;              59 [always] 
;;              90 (FALLTHRU)
;;              89 [always] 
;; bb 91 artificial_defs: { }
;; bb 91 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1347 1344 1348 91 36 (nil) [4 uses])
(note 1348 1347 1349 91 [bb 91] NOTE_INSN_BASIC_BLOCK)
(insn 1349 1348 1459 91 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -32 [0xffffffffffffffe0])) [2 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":158 221 {*addsi_1}
     (nil))
(jump_insn 1459 1349 1460 91 (set (pc)
        (label_ref 1350)) "CALWXT.f":158 683 {jump}
     (nil)
 -> 1350)
;;  succ:       51 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

(barrier 1460 1459 1493)
;; basic block 103, loop depth 0, maybe hot
;;  prev block 91, next block 92, flags: (RTL, MODIFIED)
;;  pred:       51
;; bb 103 artificial_defs: { }
;; bb 103 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1493 1460 1492 103 100 (nil) [1 uses])
(note 1492 1493 1494 103 [bb 103] NOTE_INSN_BASIC_BLOCK)
(insn 1494 1492 1353 103 (const_int 0 [0]) "CALWXT.f":159 718 {nop}
     (nil))
;;  succ:       92 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

;; basic block 92, loop depth 0, maybe hot
;;  prev block 103, next block 102, flags: (RTL, MODIFIED)
;;  pred:       103 [always]  (FALLTHRU)
;; bb 92 artificial_defs: { }
;; bb 92 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 1353 1494 1354 92 35 (nil) [0 uses])
(note 1354 1353 1355 92 [bb 92] NOTE_INSN_BASIC_BLOCK)
(insn 1355 1354 1461 92 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                        (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 6 bp)
                            (const_int -44 [0xffffffffffffffd4])) [2 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) "CALWXT.f":157 221 {*addsi_1}
     (nil))
(jump_insn 1461 1355 1462 92 (set (pc)
        (label_ref 1356)) "CALWXT.f":157 683 {jump}
     (nil)
 -> 1356)
;;  succ:       49 [always] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 622

(barrier 1462 1461 1490)
;; basic block 102, loop depth 0, maybe hot
;;  prev block 92, next block 93, flags: (RTL, MODIFIED)
;;  pred:       49
;; bb 102 artificial_defs: { }
;; bb 102 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1490 1462 1489 102 99 (nil) [1 uses])
(note 1489 1490 1491 102 [bb 102] NOTE_INSN_BASIC_BLOCK)
(insn 1491 1489 1359 102 (const_int 0 [0]) "CALWXT.f":158 718 {nop}
     (nil))
;;  succ:       93 [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 93, loop depth 0, maybe hot
;;  prev block 102, next block 1, flags: (RTL, MODIFIED)
;;  pred:       102 [always]  (FALLTHRU)
;; bb 93 artificial_defs: { }
;; bb 93 artificial_uses: { u-1(6){ }u-1(7){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 1359 1491 1360 93 34 (nil) [0 uses])
(note 1360 1359 1422 93 [bb 93] NOTE_INSN_BASIC_BLOCK)
(insn 1422 1360 1509 93 (const_int 0 [0]) "CALWXT.f":276 718 {nop}
     (nil))
;;  succ:       EXIT [always]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(note 1509 1422 0 NOTE_INSN_DELETED)
